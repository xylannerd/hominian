(window["webpackJsonp"] = window["webpackJsonp"] || []).push([["static\\development\\pages\\blog.js"],{

/***/ "./assets/animations/bear.gif":
/*!************************************!*\
  !*** ./assets/animations/bear.gif ***!
  \************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = ("/_next/static/images/bear-d77511406f719505aa793e2d99bdca03.gif");

/***/ }),

/***/ "./assets/animations/globe.json":
/*!**************************************!*\
  !*** ./assets/animations/globe.json ***!
  \**************************************/
/*! exports provided: v, fr, ip, op, w, h, nm, ddd, assets, layers, markers, default */
/***/ (function(module) {

module.exports = JSON.parse("{\"v\":\"5.5.9\",\"fr\":60,\"ip\":0,\"op\":1800,\"w\":1920,\"h\":1080,\"nm\":\"Earth\",\"ddd\":0,\"assets\":[],\"layers\":[{\"ddd\":0,\"ind\":1,\"ty\":4,\"nm\":\"moving line\",\"sr\":1,\"ks\":{\"o\":{\"a\":0,\"k\":100,\"ix\":11},\"r\":{\"a\":0,\"k\":0,\"ix\":10},\"p\":{\"a\":0,\"k\":[960,544,0],\"ix\":2},\"a\":{\"a\":0,\"k\":[0,0,0],\"ix\":1},\"s\":{\"a\":0,\"k\":[230,230,100],\"ix\":6}},\"ao\":0,\"shapes\":[{\"ty\":\"gr\",\"it\":[{\"ty\":\"gr\",\"it\":[{\"ty\":\"gr\",\"it\":[{\"d\":1,\"ty\":\"el\",\"s\":{\"a\":0,\"k\":[425,425],\"ix\":2},\"p\":{\"a\":0,\"k\":[0,0],\"ix\":3},\"nm\":\"Ellipse Path 1\",\"mn\":\"ADBE Vector Shape - Ellipse\",\"hd\":false},{\"d\":1,\"ty\":\"el\",\"s\":{\"a\":0,\"k\":[319,425],\"ix\":2},\"p\":{\"a\":0,\"k\":[0,0],\"ix\":3},\"nm\":\"Ellipse Path 2\",\"mn\":\"ADBE Vector Shape - Ellipse\",\"hd\":false},{\"ty\":\"tr\",\"p\":{\"a\":0,\"k\":[0,0],\"ix\":2},\"a\":{\"a\":0,\"k\":[0,0],\"ix\":1},\"s\":{\"a\":0,\"k\":[100,100],\"ix\":3},\"r\":{\"a\":0,\"k\":0,\"ix\":6},\"o\":{\"a\":0,\"k\":100,\"ix\":7},\"sk\":{\"a\":0,\"k\":0,\"ix\":4},\"sa\":{\"a\":0,\"k\":0,\"ix\":5},\"nm\":\"Transform\"}],\"nm\":\"Ellipse 2\",\"np\":2,\"cix\":2,\"bm\":0,\"ix\":1,\"mn\":\"ADBE Vector Group\",\"hd\":false},{\"ty\":\"tr\",\"p\":{\"a\":0,\"k\":[0,0],\"ix\":2},\"a\":{\"a\":0,\"k\":[0,0],\"ix\":1},\"s\":{\"a\":0,\"k\":[100,100],\"ix\":3},\"r\":{\"a\":0,\"k\":0,\"ix\":6},\"o\":{\"a\":0,\"k\":100,\"ix\":7},\"sk\":{\"a\":0,\"k\":0,\"ix\":4},\"sa\":{\"a\":0,\"k\":0,\"ix\":5},\"nm\":\"Transform\"}],\"nm\":\"Group 2\",\"np\":1,\"cix\":2,\"bm\":0,\"ix\":1,\"mn\":\"ADBE Vector Group\",\"hd\":false},{\"ty\":\"gr\",\"it\":[{\"ty\":\"gr\",\"it\":[{\"d\":1,\"ty\":\"el\",\"s\":{\"a\":0,\"k\":[212.5,425],\"ix\":2},\"p\":{\"a\":0,\"k\":[0,0],\"ix\":3},\"nm\":\"Ellipse Path 1\",\"mn\":\"ADBE Vector Shape - Ellipse\",\"hd\":false},{\"d\":1,\"ty\":\"el\",\"s\":{\"a\":0,\"k\":[105.5,425],\"ix\":2},\"p\":{\"a\":0,\"k\":[0,0],\"ix\":3},\"nm\":\"Ellipse Path 2\",\"mn\":\"ADBE Vector Shape - Ellipse\",\"hd\":false},{\"ty\":\"tr\",\"p\":{\"a\":0,\"k\":[0,0],\"ix\":2},\"a\":{\"a\":0,\"k\":[0,0],\"ix\":1},\"s\":{\"a\":0,\"k\":[100,100],\"ix\":3},\"r\":{\"a\":0,\"k\":0,\"ix\":6},\"o\":{\"a\":0,\"k\":100,\"ix\":7},\"sk\":{\"a\":0,\"k\":0,\"ix\":4},\"sa\":{\"a\":0,\"k\":0,\"ix\":5},\"nm\":\"Transform\"}],\"nm\":\"Ellipse 3\",\"np\":2,\"cix\":2,\"bm\":0,\"ix\":1,\"mn\":\"ADBE Vector Group\",\"hd\":false},{\"ty\":\"tr\",\"p\":{\"a\":0,\"k\":[0,0],\"ix\":2},\"a\":{\"a\":0,\"k\":[0,0],\"ix\":1},\"s\":{\"a\":0,\"k\":[100,100],\"ix\":3},\"r\":{\"a\":0,\"k\":0,\"ix\":6},\"o\":{\"a\":0,\"k\":100,\"ix\":7},\"sk\":{\"a\":0,\"k\":0,\"ix\":4},\"sa\":{\"a\":0,\"k\":0,\"ix\":5},\"nm\":\"Transform\"}],\"nm\":\"Group 1\",\"np\":1,\"cix\":2,\"bm\":0,\"ix\":2,\"mn\":\"ADBE Vector Group\",\"hd\":false},{\"ty\":\"st\",\"c\":{\"a\":0,\"k\":[0.295308053493,0.653615176678,0.442023038864,1],\"ix\":3},\"o\":{\"a\":0,\"k\":100,\"ix\":4},\"w\":{\"a\":0,\"k\":3,\"ix\":5},\"lc\":2,\"lj\":1,\"ml\":4,\"bm\":0,\"d\":[{\"n\":\"d\",\"nm\":\"dash\",\"v\":{\"a\":0,\"k\":1,\"ix\":1}},{\"n\":\"g\",\"nm\":\"gap\",\"v\":{\"a\":0,\"k\":50,\"ix\":2}},{\"n\":\"o\",\"nm\":\"offset\",\"v\":{\"a\":1,\"k\":[{\"i\":{\"x\":[0.833],\"y\":[0.833]},\"o\":{\"x\":[0.167],\"y\":[0.167]},\"t\":0,\"s\":[0]},{\"t\":1799,\"s\":[153]}],\"ix\":7}}],\"nm\":\"Stroke 3\",\"mn\":\"ADBE Vector Graphic - Stroke\",\"hd\":false},{\"ty\":\"tr\",\"p\":{\"a\":0,\"k\":[0,0],\"ix\":2},\"a\":{\"a\":0,\"k\":[0,0],\"ix\":1},\"s\":{\"a\":0,\"k\":[100,100],\"ix\":3},\"r\":{\"a\":0,\"k\":0,\"ix\":6},\"o\":{\"a\":0,\"k\":100,\"ix\":7},\"sk\":{\"a\":0,\"k\":0,\"ix\":4},\"sa\":{\"a\":0,\"k\":0,\"ix\":5},\"nm\":\"Transform\"}],\"nm\":\"animatred line 2\",\"np\":3,\"cix\":2,\"bm\":0,\"ix\":1,\"mn\":\"ADBE Vector Group\",\"hd\":false},{\"ty\":\"gr\",\"it\":[{\"ty\":\"gr\",\"it\":[{\"ty\":\"gr\",\"it\":[{\"d\":1,\"ty\":\"el\",\"s\":{\"a\":0,\"k\":[425,425],\"ix\":2},\"p\":{\"a\":0,\"k\":[0,0],\"ix\":3},\"nm\":\"Ellipse Path 2\",\"mn\":\"ADBE Vector Shape - Ellipse\",\"hd\":false},{\"d\":1,\"ty\":\"el\",\"s\":{\"a\":0,\"k\":[319,425],\"ix\":2},\"p\":{\"a\":0,\"k\":[0,0],\"ix\":3},\"nm\":\"Ellipse Path 3\",\"mn\":\"ADBE Vector Shape - Ellipse\",\"hd\":false},{\"ty\":\"tr\",\"p\":{\"a\":0,\"k\":[0,0],\"ix\":2},\"a\":{\"a\":0,\"k\":[0,0],\"ix\":1},\"s\":{\"a\":0,\"k\":[100,100],\"ix\":3},\"r\":{\"a\":0,\"k\":0,\"ix\":6},\"o\":{\"a\":0,\"k\":100,\"ix\":7},\"sk\":{\"a\":0,\"k\":0,\"ix\":4},\"sa\":{\"a\":0,\"k\":0,\"ix\":5},\"nm\":\"Transform\"}],\"nm\":\"Ellipse 2\",\"np\":2,\"cix\":2,\"bm\":0,\"ix\":1,\"mn\":\"ADBE Vector Group\",\"hd\":false},{\"ty\":\"tm\",\"s\":{\"a\":1,\"k\":[{\"i\":{\"x\":[0.833],\"y\":[0.833]},\"o\":{\"x\":[0.167],\"y\":[0.167]},\"t\":0,\"s\":[0]},{\"i\":{\"x\":[0.833],\"y\":[0.833]},\"o\":{\"x\":[0.167],\"y\":[0.167]},\"t\":1199.35,\"s\":[100]},{\"i\":{\"x\":[0.833],\"y\":[0.833]},\"o\":{\"x\":[0.167],\"y\":[0.167]},\"t\":1799,\"s\":[100]},{\"i\":{\"x\":[0.833],\"y\":[0.833]},\"o\":{\"x\":[0.167],\"y\":[0.167]},\"t\":2250,\"s\":[100]},{\"t\":2700,\"s\":[100]}],\"ix\":1},\"e\":{\"a\":1,\"k\":[{\"i\":{\"x\":[0.833],\"y\":[0.833]},\"o\":{\"x\":[0.167],\"y\":[0.167]},\"t\":0,\"s\":[0]},{\"i\":{\"x\":[0.833],\"y\":[0.833]},\"o\":{\"x\":[0.167],\"y\":[0.167]},\"t\":599.674,\"s\":[0]},{\"t\":1799,\"s\":[100]}],\"ix\":2},\"o\":{\"a\":0,\"k\":0,\"ix\":3},\"m\":2,\"ix\":2,\"nm\":\"Trim Paths 2\",\"mn\":\"ADBE Vector Filter - Trim\",\"hd\":false},{\"ty\":\"tr\",\"p\":{\"a\":0,\"k\":[0,0],\"ix\":2},\"a\":{\"a\":0,\"k\":[0,0],\"ix\":1},\"s\":{\"a\":0,\"k\":[100,100],\"ix\":3},\"r\":{\"a\":0,\"k\":0,\"ix\":6},\"o\":{\"a\":0,\"k\":100,\"ix\":7},\"sk\":{\"a\":0,\"k\":0,\"ix\":4},\"sa\":{\"a\":0,\"k\":0,\"ix\":5},\"nm\":\"Transform\"}],\"nm\":\"Group 2\",\"np\":2,\"cix\":2,\"bm\":0,\"ix\":1,\"mn\":\"ADBE Vector Group\",\"hd\":false},{\"ty\":\"gr\",\"it\":[{\"ty\":\"gr\",\"it\":[{\"d\":1,\"ty\":\"el\",\"s\":{\"a\":0,\"k\":[212.5,425],\"ix\":2},\"p\":{\"a\":0,\"k\":[0,0],\"ix\":3},\"nm\":\"Ellipse Path 2\",\"mn\":\"ADBE Vector Shape - Ellipse\",\"hd\":false},{\"d\":1,\"ty\":\"el\",\"s\":{\"a\":0,\"k\":[105.5,425],\"ix\":2},\"p\":{\"a\":0,\"k\":[0,0],\"ix\":3},\"nm\":\"Ellipse Path 3\",\"mn\":\"ADBE Vector Shape - Ellipse\",\"hd\":false},{\"ty\":\"tr\",\"p\":{\"a\":0,\"k\":[0,0],\"ix\":2},\"a\":{\"a\":0,\"k\":[0,0],\"ix\":1},\"s\":{\"a\":0,\"k\":[100,100],\"ix\":3},\"r\":{\"a\":0,\"k\":0,\"ix\":6},\"o\":{\"a\":0,\"k\":100,\"ix\":7},\"sk\":{\"a\":0,\"k\":0,\"ix\":4},\"sa\":{\"a\":0,\"k\":0,\"ix\":5},\"nm\":\"Transform\"}],\"nm\":\"Ellipse 3\",\"np\":2,\"cix\":2,\"bm\":0,\"ix\":1,\"mn\":\"ADBE Vector Group\",\"hd\":false},{\"ty\":\"tm\",\"s\":{\"a\":1,\"k\":[{\"i\":{\"x\":[0.833],\"y\":[0.833]},\"o\":{\"x\":[0.167],\"y\":[0.167]},\"t\":0,\"s\":[0]},{\"i\":{\"x\":[0.833],\"y\":[0.833]},\"o\":{\"x\":[0.167],\"y\":[0.167]},\"t\":1199.35,\"s\":[100]},{\"t\":1799,\"s\":[100]}],\"ix\":1},\"e\":{\"a\":1,\"k\":[{\"i\":{\"x\":[0.833],\"y\":[0.833]},\"o\":{\"x\":[0.167],\"y\":[0.167]},\"t\":0,\"s\":[0]},{\"i\":{\"x\":[0.833],\"y\":[0.833]},\"o\":{\"x\":[0.167],\"y\":[0.167]},\"t\":599.674,\"s\":[0]},{\"t\":1799,\"s\":[100]}],\"ix\":2},\"o\":{\"a\":0,\"k\":90,\"ix\":3},\"m\":2,\"ix\":2,\"nm\":\"Trim Paths 1\",\"mn\":\"ADBE Vector Filter - Trim\",\"hd\":false},{\"ty\":\"tr\",\"p\":{\"a\":0,\"k\":[0,0],\"ix\":2},\"a\":{\"a\":0,\"k\":[0,0],\"ix\":1},\"s\":{\"a\":0,\"k\":[100,100],\"ix\":3},\"r\":{\"a\":0,\"k\":0,\"ix\":6},\"o\":{\"a\":0,\"k\":100,\"ix\":7},\"sk\":{\"a\":0,\"k\":0,\"ix\":4},\"sa\":{\"a\":0,\"k\":0,\"ix\":5},\"nm\":\"Transform\"}],\"nm\":\"Group 1\",\"np\":2,\"cix\":2,\"bm\":0,\"ix\":2,\"mn\":\"ADBE Vector Group\",\"hd\":false},{\"ty\":\"st\",\"c\":{\"a\":0,\"k\":[0.295308053493,0.653615176678,0.442023038864,1],\"ix\":3},\"o\":{\"a\":0,\"k\":100,\"ix\":4},\"w\":{\"a\":0,\"k\":1,\"ix\":5},\"lc\":1,\"lj\":1,\"ml\":4,\"bm\":0,\"nm\":\"Stroke 2\",\"mn\":\"ADBE Vector Graphic - Stroke\",\"hd\":false},{\"ty\":\"tr\",\"p\":{\"a\":0,\"k\":[0,0],\"ix\":2},\"a\":{\"a\":0,\"k\":[0,0],\"ix\":1},\"s\":{\"a\":0,\"k\":[100,100],\"ix\":3},\"r\":{\"a\":0,\"k\":0,\"ix\":6},\"o\":{\"a\":0,\"k\":100,\"ix\":7},\"sk\":{\"a\":0,\"k\":0,\"ix\":4},\"sa\":{\"a\":0,\"k\":0,\"ix\":5},\"nm\":\"Transform\"}],\"nm\":\"animatred line\",\"np\":3,\"cix\":2,\"bm\":0,\"ix\":2,\"mn\":\"ADBE Vector Group\",\"hd\":false}],\"ip\":0,\"op\":1800,\"st\":0,\"bm\":0},{\"ddd\":0,\"ind\":2,\"ty\":4,\"nm\":\"moving line 2\",\"sr\":1,\"ks\":{\"o\":{\"a\":0,\"k\":100,\"ix\":11},\"r\":{\"a\":0,\"k\":0,\"ix\":10},\"p\":{\"a\":0,\"k\":[960,544,0],\"ix\":2},\"a\":{\"a\":0,\"k\":[0,0,0],\"ix\":1},\"s\":{\"a\":0,\"k\":[230,230,100],\"ix\":6}},\"ao\":0,\"shapes\":[{\"ty\":\"gr\",\"it\":[{\"ty\":\"gr\",\"it\":[{\"ty\":\"gr\",\"it\":[{\"d\":1,\"ty\":\"el\",\"s\":{\"a\":0,\"k\":[212.5,425],\"ix\":2},\"p\":{\"a\":0,\"k\":[0,0],\"ix\":3},\"nm\":\"Ellipse Path 2\",\"mn\":\"ADBE Vector Shape - Ellipse\",\"hd\":false},{\"d\":1,\"ty\":\"el\",\"s\":{\"a\":0,\"k\":[105.5,425],\"ix\":2},\"p\":{\"a\":0,\"k\":[0,0],\"ix\":3},\"nm\":\"Ellipse Path 3\",\"mn\":\"ADBE Vector Shape - Ellipse\",\"hd\":false},{\"ty\":\"tr\",\"p\":{\"a\":0,\"k\":[0,0],\"ix\":2},\"a\":{\"a\":0,\"k\":[0,0],\"ix\":1},\"s\":{\"a\":0,\"k\":[100,100],\"ix\":3},\"r\":{\"a\":0,\"k\":0,\"ix\":6},\"o\":{\"a\":0,\"k\":100,\"ix\":7},\"sk\":{\"a\":0,\"k\":0,\"ix\":4},\"sa\":{\"a\":0,\"k\":0,\"ix\":5},\"nm\":\"Transform\"}],\"nm\":\"Ellipse 2\",\"np\":2,\"cix\":2,\"bm\":0,\"ix\":1,\"mn\":\"ADBE Vector Group\",\"hd\":false},{\"ty\":\"tm\",\"s\":{\"a\":1,\"k\":[{\"i\":{\"x\":[0.833],\"y\":[0.833]},\"o\":{\"x\":[0.167],\"y\":[0.167]},\"t\":-899,\"s\":[0]},{\"i\":{\"x\":[0.833],\"y\":[0.833]},\"o\":{\"x\":[0.167],\"y\":[0.167]},\"t\":300.344,\"s\":[100]},{\"t\":900,\"s\":[100]}],\"ix\":1,\"x\":\"var $bm_rt;\\n$bm_rt = loopOut();\"},\"e\":{\"a\":1,\"k\":[{\"i\":{\"x\":[0.833],\"y\":[0.833]},\"o\":{\"x\":[0.167],\"y\":[0.167]},\"t\":-899,\"s\":[0]},{\"i\":{\"x\":[0.833],\"y\":[0.833]},\"o\":{\"x\":[0.167],\"y\":[0.167]},\"t\":-299.328,\"s\":[0]},{\"t\":900,\"s\":[100]}],\"ix\":2,\"x\":\"var $bm_rt;\\n$bm_rt = loopOut();\"},\"o\":{\"a\":0,\"k\":0,\"ix\":3},\"m\":2,\"ix\":2,\"nm\":\"Trim Paths 2\",\"mn\":\"ADBE Vector Filter - Trim\",\"hd\":false},{\"ty\":\"tr\",\"p\":{\"a\":0,\"k\":[0,0],\"ix\":2},\"a\":{\"a\":0,\"k\":[0,0],\"ix\":1},\"s\":{\"a\":0,\"k\":[100,100],\"ix\":3},\"r\":{\"a\":0,\"k\":0,\"ix\":6},\"o\":{\"a\":0,\"k\":100,\"ix\":7},\"sk\":{\"a\":0,\"k\":0,\"ix\":4},\"sa\":{\"a\":0,\"k\":0,\"ix\":5},\"nm\":\"Transform\"}],\"nm\":\"Group 2\",\"np\":2,\"cix\":2,\"bm\":0,\"ix\":1,\"mn\":\"ADBE Vector Group\",\"hd\":false},{\"ty\":\"gr\",\"it\":[{\"ty\":\"gr\",\"it\":[{\"d\":1,\"ty\":\"el\",\"s\":{\"a\":0,\"k\":[212.5,425],\"ix\":2},\"p\":{\"a\":0,\"k\":[0,0],\"ix\":3},\"nm\":\"Ellipse Path 2\",\"mn\":\"ADBE Vector Shape - Ellipse\",\"hd\":false},{\"d\":1,\"ty\":\"el\",\"s\":{\"a\":0,\"k\":[105.5,425],\"ix\":2},\"p\":{\"a\":0,\"k\":[0,0],\"ix\":3},\"nm\":\"Ellipse Path 3\",\"mn\":\"ADBE Vector Shape - Ellipse\",\"hd\":false},{\"ty\":\"tr\",\"p\":{\"a\":0,\"k\":[0,0],\"ix\":2},\"a\":{\"a\":0,\"k\":[0,0],\"ix\":1},\"s\":{\"a\":0,\"k\":[100,100],\"ix\":3},\"r\":{\"a\":0,\"k\":0,\"ix\":6},\"o\":{\"a\":0,\"k\":100,\"ix\":7},\"sk\":{\"a\":0,\"k\":0,\"ix\":4},\"sa\":{\"a\":0,\"k\":0,\"ix\":5},\"nm\":\"Transform\"}],\"nm\":\"Ellipse 3\",\"np\":2,\"cix\":2,\"bm\":0,\"ix\":1,\"mn\":\"ADBE Vector Group\",\"hd\":false},{\"ty\":\"tm\",\"s\":{\"a\":1,\"k\":[{\"i\":{\"x\":[0.833],\"y\":[0.833]},\"o\":{\"x\":[0.167],\"y\":[0.167]},\"t\":-899,\"s\":[0]},{\"i\":{\"x\":[0.833],\"y\":[0.833]},\"o\":{\"x\":[0.167],\"y\":[0.167]},\"t\":300.344,\"s\":[100]},{\"t\":900,\"s\":[100]}],\"ix\":1,\"x\":\"var $bm_rt;\\n$bm_rt = loopOut();\"},\"e\":{\"a\":0,\"k\":0,\"ix\":2,\"x\":\"var $bm_rt;\\n$bm_rt = content('animatred line').content('Group 1').content('Trim Paths 1').end;\"},\"o\":{\"a\":0,\"k\":90,\"ix\":3},\"m\":2,\"ix\":2,\"nm\":\"Trim Paths 1\",\"mn\":\"ADBE Vector Filter - Trim\",\"hd\":false},{\"ty\":\"tr\",\"p\":{\"a\":0,\"k\":[0,0],\"ix\":2},\"a\":{\"a\":0,\"k\":[0,0],\"ix\":1},\"s\":{\"a\":0,\"k\":[100,100],\"ix\":3},\"r\":{\"a\":0,\"k\":0,\"ix\":6},\"o\":{\"a\":0,\"k\":100,\"ix\":7},\"sk\":{\"a\":0,\"k\":0,\"ix\":4},\"sa\":{\"a\":0,\"k\":0,\"ix\":5},\"nm\":\"Transform\"}],\"nm\":\"Group 1\",\"np\":2,\"cix\":2,\"bm\":0,\"ix\":2,\"mn\":\"ADBE Vector Group\",\"hd\":false},{\"ty\":\"st\",\"c\":{\"a\":0,\"k\":[0.29411765933,0.654901981354,0.443137288094,1],\"ix\":3},\"o\":{\"a\":0,\"k\":15,\"ix\":4},\"w\":{\"a\":0,\"k\":0.5,\"ix\":5},\"lc\":1,\"lj\":1,\"ml\":4,\"bm\":0,\"nm\":\"Stroke 2\",\"mn\":\"ADBE Vector Graphic - Stroke\",\"hd\":false},{\"ty\":\"tr\",\"p\":{\"a\":0,\"k\":[0,0],\"ix\":2},\"a\":{\"a\":0,\"k\":[0,0],\"ix\":1},\"s\":{\"a\":0,\"k\":[100,100],\"ix\":3},\"r\":{\"a\":0,\"k\":0,\"ix\":6},\"o\":{\"a\":0,\"k\":100,\"ix\":7},\"sk\":{\"a\":0,\"k\":0,\"ix\":4},\"sa\":{\"a\":0,\"k\":0,\"ix\":5},\"nm\":\"Transform\"}],\"nm\":\"animatred line\",\"np\":3,\"cix\":2,\"bm\":0,\"ix\":2,\"mn\":\"ADBE Vector Group\",\"hd\":false}],\"ip\":-87,\"op\":2352,\"st\":552,\"bm\":0},{\"ddd\":0,\"ind\":3,\"ty\":4,\"nm\":\"moving line 3\",\"sr\":1,\"ks\":{\"o\":{\"a\":0,\"k\":100,\"ix\":11},\"r\":{\"a\":0,\"k\":0,\"ix\":10},\"p\":{\"a\":0,\"k\":[960,544,0],\"ix\":2},\"a\":{\"a\":0,\"k\":[0,0,0],\"ix\":1},\"s\":{\"a\":0,\"k\":[230,230,100],\"ix\":6}},\"ao\":0,\"shapes\":[{\"ty\":\"gr\",\"it\":[{\"ty\":\"gr\",\"it\":[{\"ind\":0,\"ty\":\"sh\",\"ix\":1,\"ks\":{\"a\":1,\"k\":[{\"i\":{\"x\":0.833,\"y\":0.833},\"o\":{\"x\":0.167,\"y\":0.167},\"t\":1371,\"s\":[{\"i\":[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],\"o\":[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],\"v\":[[0.87,-45.217],[51.515,-38.882],[180.87,23.043],[166.087,-39.565],[175.652,-45.217],[164.347,-61.739]],\"c\":false}]},{\"i\":{\"x\":0.833,\"y\":0.833},\"o\":{\"x\":0.167,\"y\":0.167},\"t\":1587,\"s\":[{\"i\":[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],\"o\":[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],\"v\":[[-100,-39.13],[51.515,-56.708],[89.13,26.957],[68.696,-40.435],[91.739,-61.304],[150.434,-82.174]],\"c\":false}]},{\"t\":1617,\"s\":[{\"i\":[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],\"o\":[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],\"v\":[[-100,-39.13],[51.515,-56.708],[89.13,26.957],[68.696,-40.435],[91.739,-61.304],[136.956,-82.174]],\"c\":false}]}],\"ix\":2},\"nm\":\"Path 1\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ty\":\"st\",\"c\":{\"a\":0,\"k\":[0.454901960784,0.717647058824,0.81568627451,1],\"ix\":3},\"o\":{\"a\":0,\"k\":100,\"ix\":4},\"w\":{\"a\":0,\"k\":2,\"ix\":5},\"lc\":1,\"lj\":1,\"ml\":4,\"bm\":0,\"nm\":\"Stroke 1\",\"mn\":\"ADBE Vector Graphic - Stroke\",\"hd\":false},{\"ty\":\"tr\",\"p\":{\"a\":0,\"k\":[0,0],\"ix\":2},\"a\":{\"a\":0,\"k\":[0,0],\"ix\":1},\"s\":{\"a\":0,\"k\":[100,100],\"ix\":3},\"r\":{\"a\":0,\"k\":0,\"ix\":6},\"o\":{\"a\":0,\"k\":100,\"ix\":7},\"sk\":{\"a\":0,\"k\":0,\"ix\":4},\"sa\":{\"a\":0,\"k\":0,\"ix\":5},\"nm\":\"Transform\"}],\"nm\":\"Shape 1\",\"np\":2,\"cix\":2,\"bm\":0,\"ix\":1,\"mn\":\"ADBE Vector Group\",\"hd\":false},{\"ty\":\"tm\",\"s\":{\"a\":1,\"k\":[{\"i\":{\"x\":[0.833],\"y\":[0.833]},\"o\":{\"x\":[0.167],\"y\":[0.167]},\"t\":1371,\"s\":[0]},{\"t\":1587,\"s\":[100]}],\"ix\":1},\"e\":{\"a\":1,\"k\":[{\"i\":{\"x\":[0.833],\"y\":[0.833]},\"o\":{\"x\":[0.167],\"y\":[0.167]},\"t\":1415,\"s\":[0]},{\"t\":1617,\"s\":[100]}],\"ix\":2},\"o\":{\"a\":0,\"k\":0,\"ix\":3},\"m\":1,\"ix\":2,\"nm\":\"Trim Paths 1\",\"mn\":\"ADBE Vector Filter - Trim\",\"hd\":false},{\"ty\":\"tr\",\"p\":{\"a\":0,\"k\":[0,0],\"ix\":2},\"a\":{\"a\":0,\"k\":[0,0],\"ix\":1},\"s\":{\"a\":0,\"k\":[100,100],\"ix\":3},\"r\":{\"a\":0,\"k\":0,\"ix\":6},\"o\":{\"a\":0,\"k\":100,\"ix\":7},\"sk\":{\"a\":0,\"k\":0,\"ix\":4},\"sa\":{\"a\":0,\"k\":0,\"ix\":5},\"nm\":\"Transform\"}],\"nm\":\"Group 9\",\"np\":2,\"cix\":2,\"bm\":0,\"ix\":1,\"mn\":\"ADBE Vector Group\",\"hd\":false},{\"ty\":\"gr\",\"it\":[{\"ty\":\"gr\",\"it\":[{\"ind\":0,\"ty\":\"sh\",\"ix\":1,\"ks\":{\"a\":1,\"k\":[{\"i\":{\"x\":0.833,\"y\":0.833},\"o\":{\"x\":0.167,\"y\":0.167},\"t\":1182,\"s\":[{\"i\":[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],\"o\":[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],\"v\":[[90,63.913],[-49.789,68.074],[93.478,100],[143.478,86.957],[106.522,-0.87],[253.478,47.391]],\"c\":false}]},{\"i\":{\"x\":0.833,\"y\":0.833},\"o\":{\"x\":0.167,\"y\":0.167},\"t\":1398,\"s\":[{\"i\":[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],\"o\":[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],\"v\":[[-3.478,60.87],[-48.485,87.639],[97.826,82.174],[52.609,80.435],[106.087,-20],[156.956,-37.826]],\"c\":false}]},{\"t\":1428,\"s\":[{\"i\":[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],\"o\":[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],\"v\":[[-3.478,60.87],[-48.485,87.639],[97.826,82.174],[52.609,80.435],[105.87,-21.087],[143.26,-38.478]],\"c\":false}]}],\"ix\":2},\"nm\":\"Path 1\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ty\":\"st\",\"c\":{\"a\":0,\"k\":[0.454901960784,0.717647058824,0.81568627451,1],\"ix\":3},\"o\":{\"a\":0,\"k\":100,\"ix\":4},\"w\":{\"a\":0,\"k\":2,\"ix\":5},\"lc\":1,\"lj\":1,\"ml\":4,\"bm\":0,\"nm\":\"Stroke 1\",\"mn\":\"ADBE Vector Graphic - Stroke\",\"hd\":false},{\"ty\":\"tr\",\"p\":{\"a\":0,\"k\":[0,0],\"ix\":2},\"a\":{\"a\":0,\"k\":[0,0],\"ix\":1},\"s\":{\"a\":0,\"k\":[100,100],\"ix\":3},\"r\":{\"a\":0,\"k\":0,\"ix\":6},\"o\":{\"a\":0,\"k\":100,\"ix\":7},\"sk\":{\"a\":0,\"k\":0,\"ix\":4},\"sa\":{\"a\":0,\"k\":0,\"ix\":5},\"nm\":\"Transform\"}],\"nm\":\"Shape 1\",\"np\":2,\"cix\":2,\"bm\":0,\"ix\":1,\"mn\":\"ADBE Vector Group\",\"hd\":false},{\"ty\":\"tm\",\"s\":{\"a\":1,\"k\":[{\"i\":{\"x\":[0.833],\"y\":[0.833]},\"o\":{\"x\":[0.167],\"y\":[0.167]},\"t\":1182,\"s\":[0]},{\"t\":1398,\"s\":[100]}],\"ix\":1},\"e\":{\"a\":1,\"k\":[{\"i\":{\"x\":[0.833],\"y\":[0.833]},\"o\":{\"x\":[0.167],\"y\":[0.167]},\"t\":1226,\"s\":[0]},{\"t\":1428,\"s\":[100]}],\"ix\":2},\"o\":{\"a\":0,\"k\":0,\"ix\":3},\"m\":1,\"ix\":2,\"nm\":\"Trim Paths 1\",\"mn\":\"ADBE Vector Filter - Trim\",\"hd\":false},{\"ty\":\"tr\",\"p\":{\"a\":0,\"k\":[0,0],\"ix\":2},\"a\":{\"a\":0,\"k\":[0,0],\"ix\":1},\"s\":{\"a\":0,\"k\":[100,100],\"ix\":3},\"r\":{\"a\":0,\"k\":0,\"ix\":6},\"o\":{\"a\":0,\"k\":100,\"ix\":7},\"sk\":{\"a\":0,\"k\":0,\"ix\":4},\"sa\":{\"a\":0,\"k\":0,\"ix\":5},\"nm\":\"Transform\"}],\"nm\":\"Group 8\",\"np\":2,\"cix\":2,\"bm\":0,\"ix\":2,\"mn\":\"ADBE Vector Group\",\"hd\":false},{\"ty\":\"gr\",\"it\":[{\"ty\":\"gr\",\"it\":[{\"ind\":0,\"ty\":\"sh\",\"ix\":1,\"ks\":{\"a\":1,\"k\":[{\"i\":{\"x\":0.833,\"y\":0.833},\"o\":{\"x\":0.167,\"y\":0.167},\"t\":960,\"s\":[{\"i\":[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],\"o\":[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],\"v\":[[103.913,-22.609],[98.472,-82.795],[134.783,-116.087],[52.609,-54.348],[150.435,-67.826],[93.478,-40.87]],\"c\":false}]},{\"i\":{\"x\":0.833,\"y\":0.833},\"o\":{\"x\":0.167,\"y\":0.167},\"t\":1176,\"s\":[{\"i\":[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],\"o\":[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],\"v\":[[5.217,-29.13],[94.124,-100.621],[123.913,-132.609],[50,-73.478],[143.478,-85.652],[92.174,-40.435]],\"c\":false}]},{\"t\":1206,\"s\":[{\"i\":[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],\"o\":[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],\"v\":[[5.217,-29.13],[94.124,-100.621],[123.913,-132.609],[50,-73.478],[144.783,-88.261],[79.13,-41.739]],\"c\":false}]}],\"ix\":2},\"nm\":\"Path 1\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ty\":\"st\",\"c\":{\"a\":0,\"k\":[0.454901960784,0.717647058824,0.81568627451,1],\"ix\":3},\"o\":{\"a\":0,\"k\":100,\"ix\":4},\"w\":{\"a\":0,\"k\":2,\"ix\":5},\"lc\":1,\"lj\":1,\"ml\":4,\"bm\":0,\"nm\":\"Stroke 1\",\"mn\":\"ADBE Vector Graphic - Stroke\",\"hd\":false},{\"ty\":\"tr\",\"p\":{\"a\":0,\"k\":[0,0],\"ix\":2},\"a\":{\"a\":0,\"k\":[0,0],\"ix\":1},\"s\":{\"a\":0,\"k\":[100,100],\"ix\":3},\"r\":{\"a\":0,\"k\":0,\"ix\":6},\"o\":{\"a\":0,\"k\":100,\"ix\":7},\"sk\":{\"a\":0,\"k\":0,\"ix\":4},\"sa\":{\"a\":0,\"k\":0,\"ix\":5},\"nm\":\"Transform\"}],\"nm\":\"Shape 1\",\"np\":2,\"cix\":2,\"bm\":0,\"ix\":1,\"mn\":\"ADBE Vector Group\",\"hd\":false},{\"ty\":\"tm\",\"s\":{\"a\":1,\"k\":[{\"i\":{\"x\":[0.833],\"y\":[0.833]},\"o\":{\"x\":[0.167],\"y\":[0.167]},\"t\":960,\"s\":[0]},{\"t\":1176,\"s\":[100]}],\"ix\":1},\"e\":{\"a\":1,\"k\":[{\"i\":{\"x\":[0.833],\"y\":[0.833]},\"o\":{\"x\":[0.167],\"y\":[0.167]},\"t\":1004,\"s\":[0]},{\"t\":1206,\"s\":[100]}],\"ix\":2},\"o\":{\"a\":0,\"k\":0,\"ix\":3},\"m\":1,\"ix\":2,\"nm\":\"Trim Paths 1\",\"mn\":\"ADBE Vector Filter - Trim\",\"hd\":false},{\"ty\":\"tr\",\"p\":{\"a\":0,\"k\":[0,0],\"ix\":2},\"a\":{\"a\":0,\"k\":[0,0],\"ix\":1},\"s\":{\"a\":0,\"k\":[100,100],\"ix\":3},\"r\":{\"a\":0,\"k\":0,\"ix\":6},\"o\":{\"a\":0,\"k\":100,\"ix\":7},\"sk\":{\"a\":0,\"k\":0,\"ix\":4},\"sa\":{\"a\":0,\"k\":0,\"ix\":5},\"nm\":\"Transform\"}],\"nm\":\"Group 7\",\"np\":2,\"cix\":2,\"bm\":0,\"ix\":3,\"mn\":\"ADBE Vector Group\",\"hd\":false},{\"ty\":\"gr\",\"it\":[{\"ty\":\"gr\",\"it\":[{\"ind\":0,\"ty\":\"sh\",\"ix\":1,\"ks\":{\"a\":1,\"k\":[{\"i\":{\"x\":0.833,\"y\":0.833},\"o\":{\"x\":0.167,\"y\":0.167},\"t\":640,\"s\":[{\"i\":[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],\"o\":[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],\"v\":[[-88.261,61.739],[-49.789,73.726],[95.652,94.348],[160,8.696],[156.956,-41.739],[214.348,-94.783]],\"c\":false}]},{\"i\":{\"x\":0.833,\"y\":0.833},\"o\":{\"x\":0.167,\"y\":0.167},\"t\":856,\"s\":[{\"i\":[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],\"o\":[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],\"v\":[[-183.478,47.391],[-48.05,91.987],[100,78.261],[159.13,-7.826],[153.261,-59.674],[150.435,-18.261]],\"c\":false}]},{\"t\":886,\"s\":[{\"i\":[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],\"o\":[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],\"v\":[[-183.478,47.391],[-48.05,91.987],[100,78.261],[159.13,-7.826],[153.261,-59.674],[138.043,-18.913]],\"c\":false}]}],\"ix\":2},\"nm\":\"Path 1\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ty\":\"st\",\"c\":{\"a\":0,\"k\":[0.454901960784,0.717647058824,0.81568627451,1],\"ix\":3},\"o\":{\"a\":0,\"k\":100,\"ix\":4},\"w\":{\"a\":0,\"k\":2,\"ix\":5},\"lc\":1,\"lj\":1,\"ml\":4,\"bm\":0,\"nm\":\"Stroke 1\",\"mn\":\"ADBE Vector Graphic - Stroke\",\"hd\":false},{\"ty\":\"tr\",\"p\":{\"a\":0,\"k\":[0,0],\"ix\":2},\"a\":{\"a\":0,\"k\":[0,0],\"ix\":1},\"s\":{\"a\":0,\"k\":[100,100],\"ix\":3},\"r\":{\"a\":0,\"k\":0,\"ix\":6},\"o\":{\"a\":0,\"k\":100,\"ix\":7},\"sk\":{\"a\":0,\"k\":0,\"ix\":4},\"sa\":{\"a\":0,\"k\":0,\"ix\":5},\"nm\":\"Transform\"}],\"nm\":\"Shape 1\",\"np\":2,\"cix\":2,\"bm\":0,\"ix\":1,\"mn\":\"ADBE Vector Group\",\"hd\":false},{\"ty\":\"tm\",\"s\":{\"a\":1,\"k\":[{\"i\":{\"x\":[0.833],\"y\":[0.833]},\"o\":{\"x\":[0.167],\"y\":[0.167]},\"t\":640,\"s\":[0]},{\"t\":856,\"s\":[100]}],\"ix\":1},\"e\":{\"a\":1,\"k\":[{\"i\":{\"x\":[0.833],\"y\":[0.833]},\"o\":{\"x\":[0.167],\"y\":[0.167]},\"t\":684,\"s\":[0]},{\"t\":886,\"s\":[100]}],\"ix\":2},\"o\":{\"a\":0,\"k\":0,\"ix\":3},\"m\":1,\"ix\":2,\"nm\":\"Trim Paths 1\",\"mn\":\"ADBE Vector Filter - Trim\",\"hd\":false},{\"ty\":\"tr\",\"p\":{\"a\":0,\"k\":[0,0],\"ix\":2},\"a\":{\"a\":0,\"k\":[0,0],\"ix\":1},\"s\":{\"a\":0,\"k\":[100,100],\"ix\":3},\"r\":{\"a\":0,\"k\":0,\"ix\":6},\"o\":{\"a\":0,\"k\":100,\"ix\":7},\"sk\":{\"a\":0,\"k\":0,\"ix\":4},\"sa\":{\"a\":0,\"k\":0,\"ix\":5},\"nm\":\"Transform\"}],\"nm\":\"Group 6\",\"np\":2,\"cix\":2,\"bm\":0,\"ix\":4,\"mn\":\"ADBE Vector Group\",\"hd\":false},{\"ty\":\"gr\",\"it\":[{\"ty\":\"gr\",\"it\":[{\"ind\":0,\"ty\":\"sh\",\"ix\":1,\"ks\":{\"a\":1,\"k\":[{\"i\":{\"x\":0.833,\"y\":0.833},\"o\":{\"x\":0.167,\"y\":0.167},\"t\":438,\"s\":[{\"i\":[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],\"o\":[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],\"v\":[[100.435,134.348],[8.037,65.9],[-96.087,94.783],[-54.783,20.435],[-45.652,-95.217],[63.913,-54.348]],\"c\":false}]},{\"i\":{\"x\":0.833,\"y\":0.833},\"o\":{\"x\":0.167,\"y\":0.167},\"t\":654,\"s\":[{\"i\":[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],\"o\":[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],\"v\":[[-5.652,136.087],[-94.137,61.118],[-90.435,112.174],[-153.913,10.435],[-49.13,-77.391],[-31.304,-55.652]],\"c\":false}]},{\"t\":684,\"s\":[{\"i\":[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],\"o\":[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],\"v\":[[-5.652,136.087],[-94.137,61.118],[-90.435,112.174],[-168.261,18.696],[-50,-74.783],[-44.783,-57.391]],\"c\":false}]}],\"ix\":2},\"nm\":\"Path 1\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ty\":\"st\",\"c\":{\"a\":0,\"k\":[0.454901960784,0.717647058824,0.81568627451,1],\"ix\":3},\"o\":{\"a\":0,\"k\":100,\"ix\":4},\"w\":{\"a\":0,\"k\":2,\"ix\":5},\"lc\":1,\"lj\":1,\"ml\":4,\"bm\":0,\"nm\":\"Stroke 1\",\"mn\":\"ADBE Vector Graphic - Stroke\",\"hd\":false},{\"ty\":\"tr\",\"p\":{\"a\":0,\"k\":[0,0],\"ix\":2},\"a\":{\"a\":0,\"k\":[0,0],\"ix\":1},\"s\":{\"a\":0,\"k\":[100,100],\"ix\":3},\"r\":{\"a\":0,\"k\":0,\"ix\":6},\"o\":{\"a\":0,\"k\":100,\"ix\":7},\"sk\":{\"a\":0,\"k\":0,\"ix\":4},\"sa\":{\"a\":0,\"k\":0,\"ix\":5},\"nm\":\"Transform\"}],\"nm\":\"Shape 1\",\"np\":2,\"cix\":2,\"bm\":0,\"ix\":1,\"mn\":\"ADBE Vector Group\",\"hd\":false},{\"ty\":\"tm\",\"s\":{\"a\":1,\"k\":[{\"i\":{\"x\":[0.833],\"y\":[0.833]},\"o\":{\"x\":[0.167],\"y\":[0.167]},\"t\":438,\"s\":[0]},{\"t\":654,\"s\":[100]}],\"ix\":1},\"e\":{\"a\":1,\"k\":[{\"i\":{\"x\":[0.833],\"y\":[0.833]},\"o\":{\"x\":[0.167],\"y\":[0.167]},\"t\":482,\"s\":[0]},{\"t\":684,\"s\":[100]}],\"ix\":2},\"o\":{\"a\":0,\"k\":0,\"ix\":3},\"m\":1,\"ix\":2,\"nm\":\"Trim Paths 1\",\"mn\":\"ADBE Vector Filter - Trim\",\"hd\":false},{\"ty\":\"tr\",\"p\":{\"a\":0,\"k\":[0,0],\"ix\":2},\"a\":{\"a\":0,\"k\":[0,0],\"ix\":1},\"s\":{\"a\":0,\"k\":[100,100],\"ix\":3},\"r\":{\"a\":0,\"k\":0,\"ix\":6},\"o\":{\"a\":0,\"k\":100,\"ix\":7},\"sk\":{\"a\":0,\"k\":0,\"ix\":4},\"sa\":{\"a\":0,\"k\":0,\"ix\":5},\"nm\":\"Transform\"}],\"nm\":\"Group 5\",\"np\":2,\"cix\":2,\"bm\":0,\"ix\":5,\"mn\":\"ADBE Vector Group\",\"hd\":false},{\"ty\":\"gr\",\"it\":[{\"ty\":\"gr\",\"it\":[{\"ind\":0,\"ty\":\"sh\",\"ix\":1,\"ks\":{\"a\":1,\"k\":[{\"i\":{\"x\":0.833,\"y\":0.833},\"o\":{\"x\":0.167,\"y\":0.167},\"t\":301,\"s\":[{\"i\":[[0,0],[0,0],[0,0]],\"o\":[[0,0],[0,0],[0,0]],\"v\":[[145.217,-30.87],[53.478,2.174],[-19.13,-18.261]],\"c\":false}]},{\"t\":421,\"s\":[{\"i\":[[0,0],[0,0],[0,0]],\"o\":[[0,0],[0,0],[0,0]],\"v\":[[91.739,-27.391],[52.174,-7.391],[-72.174,-17.391]],\"c\":false}]}],\"ix\":2},\"nm\":\"Path 1\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ty\":\"st\",\"c\":{\"a\":0,\"k\":[0.454901960784,0.717647058824,0.81568627451,1],\"ix\":3},\"o\":{\"a\":0,\"k\":100,\"ix\":4},\"w\":{\"a\":0,\"k\":2,\"ix\":5},\"lc\":1,\"lj\":1,\"ml\":4,\"bm\":0,\"nm\":\"Stroke 1\",\"mn\":\"ADBE Vector Graphic - Stroke\",\"hd\":false},{\"ty\":\"tr\",\"p\":{\"a\":0,\"k\":[0,0],\"ix\":2},\"a\":{\"a\":0,\"k\":[0,0],\"ix\":1},\"s\":{\"a\":0,\"k\":[100,100],\"ix\":3},\"r\":{\"a\":0,\"k\":0,\"ix\":6},\"o\":{\"a\":0,\"k\":100,\"ix\":7},\"sk\":{\"a\":0,\"k\":0,\"ix\":4},\"sa\":{\"a\":0,\"k\":0,\"ix\":5},\"nm\":\"Transform\"}],\"nm\":\"Shape 1\",\"np\":2,\"cix\":2,\"bm\":0,\"ix\":1,\"mn\":\"ADBE Vector Group\",\"hd\":false},{\"ty\":\"tm\",\"s\":{\"a\":1,\"k\":[{\"i\":{\"x\":[0.833],\"y\":[0.833]},\"o\":{\"x\":[0.167],\"y\":[0.167]},\"t\":301,\"s\":[0]},{\"t\":391,\"s\":[100]}],\"ix\":1},\"e\":{\"a\":1,\"k\":[{\"i\":{\"x\":[0.833],\"y\":[0.833]},\"o\":{\"x\":[0.167],\"y\":[0.167]},\"t\":311,\"s\":[0]},{\"t\":421,\"s\":[100]}],\"ix\":2},\"o\":{\"a\":0,\"k\":0,\"ix\":3},\"m\":1,\"ix\":2,\"nm\":\"Trim Paths 1\",\"mn\":\"ADBE Vector Filter - Trim\",\"hd\":false},{\"ty\":\"tr\",\"p\":{\"a\":0,\"k\":[0,0],\"ix\":2},\"a\":{\"a\":0,\"k\":[0,0],\"ix\":1},\"s\":{\"a\":0,\"k\":[100,100],\"ix\":3},\"r\":{\"a\":0,\"k\":0,\"ix\":6},\"o\":{\"a\":0,\"k\":100,\"ix\":7},\"sk\":{\"a\":0,\"k\":0,\"ix\":4},\"sa\":{\"a\":0,\"k\":0,\"ix\":5},\"nm\":\"Transform\"}],\"nm\":\"Group 4\",\"np\":2,\"cix\":2,\"bm\":0,\"ix\":6,\"mn\":\"ADBE Vector Group\",\"hd\":false},{\"ty\":\"gr\",\"it\":[{\"ty\":\"gr\",\"it\":[{\"ind\":0,\"ty\":\"sh\",\"ix\":1,\"ks\":{\"a\":1,\"k\":[{\"i\":{\"x\":0.833,\"y\":0.833},\"o\":{\"x\":0.167,\"y\":0.167},\"t\":119,\"s\":[{\"i\":[[0,0],[0,0],[0,0]],\"o\":[[0,0],[0,0],[0,0]],\"v\":[[90.435,6.522],[45.652,106.087],[-97.826,132.609]],\"c\":false}]},{\"i\":{\"x\":0.833,\"y\":0.833},\"o\":{\"x\":0.167,\"y\":0.167},\"t\":120,\"s\":[{\"i\":[[0,0],[0,0],[0,0]],\"o\":[[0,0],[0,0],[0,0]],\"v\":[[156.957,54.783],[48.696,68.261],[-83.478,-31.305]],\"c\":false}]},{\"t\":240,\"s\":[{\"i\":[[0,0],[0,0],[0,0]],\"o\":[[0,0],[0,0],[0,0]],\"v\":[[101.304,59.13],[51.304,57.826],[-137.391,-27.826]],\"c\":false}]}],\"ix\":2},\"nm\":\"Path 1\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ty\":\"st\",\"c\":{\"a\":0,\"k\":[0.454901960784,0.717647058824,0.81568627451,1],\"ix\":3},\"o\":{\"a\":0,\"k\":100,\"ix\":4},\"w\":{\"a\":0,\"k\":2,\"ix\":5},\"lc\":1,\"lj\":1,\"ml\":4,\"bm\":0,\"nm\":\"Stroke 1\",\"mn\":\"ADBE Vector Graphic - Stroke\",\"hd\":false},{\"ty\":\"tr\",\"p\":{\"a\":0,\"k\":[0,0],\"ix\":2},\"a\":{\"a\":0,\"k\":[0,0],\"ix\":1},\"s\":{\"a\":0,\"k\":[100,100],\"ix\":3},\"r\":{\"a\":0,\"k\":0,\"ix\":6},\"o\":{\"a\":0,\"k\":100,\"ix\":7},\"sk\":{\"a\":0,\"k\":0,\"ix\":4},\"sa\":{\"a\":0,\"k\":0,\"ix\":5},\"nm\":\"Transform\"}],\"nm\":\"Shape 1\",\"np\":2,\"cix\":2,\"bm\":0,\"ix\":1,\"mn\":\"ADBE Vector Group\",\"hd\":false},{\"ty\":\"tm\",\"s\":{\"a\":1,\"k\":[{\"i\":{\"x\":[0.833],\"y\":[0.833]},\"o\":{\"x\":[0.167],\"y\":[0.167]},\"t\":120,\"s\":[0]},{\"t\":210,\"s\":[100]}],\"ix\":1},\"e\":{\"a\":1,\"k\":[{\"i\":{\"x\":[0.833],\"y\":[0.833]},\"o\":{\"x\":[0.167],\"y\":[0.167]},\"t\":130,\"s\":[0]},{\"t\":240,\"s\":[100]}],\"ix\":2},\"o\":{\"a\":0,\"k\":0,\"ix\":3},\"m\":1,\"ix\":2,\"nm\":\"Trim Paths 1\",\"mn\":\"ADBE Vector Filter - Trim\",\"hd\":false},{\"ty\":\"tr\",\"p\":{\"a\":0,\"k\":[0,0],\"ix\":2},\"a\":{\"a\":0,\"k\":[0,0],\"ix\":1},\"s\":{\"a\":0,\"k\":[100,100],\"ix\":3},\"r\":{\"a\":0,\"k\":0,\"ix\":6},\"o\":{\"a\":0,\"k\":100,\"ix\":7},\"sk\":{\"a\":0,\"k\":0,\"ix\":4},\"sa\":{\"a\":0,\"k\":0,\"ix\":5},\"nm\":\"Transform\"}],\"nm\":\"Group 3\",\"np\":2,\"cix\":2,\"bm\":0,\"ix\":7,\"mn\":\"ADBE Vector Group\",\"hd\":false},{\"ty\":\"gr\",\"it\":[{\"ty\":\"gr\",\"it\":[{\"ind\":0,\"ty\":\"sh\",\"ix\":1,\"ks\":{\"a\":1,\"k\":[{\"i\":{\"x\":0.833,\"y\":0.833},\"o\":{\"x\":0.167,\"y\":0.167},\"t\":214,\"s\":[{\"i\":[[0,0],[0,0],[0,0],[0,0]],\"o\":[[0,0],[0,0],[0,0],[0,0]],\"v\":[[-104.348,-48.261],[-43.913,-69.565],[53.478,-40.435],[87.391,-120.435]],\"c\":false}]},{\"i\":{\"x\":0.833,\"y\":0.833},\"o\":{\"x\":0.167,\"y\":0.167},\"t\":384,\"s\":[{\"i\":[[0,0],[0,0],[0,0],[0,0]],\"o\":[[0,0],[0,0],[0,0],[0,0]],\"v\":[[-183.478,-49.565],[-118.696,-70.435],[51.304,-57.391],[82.609,-134.348]],\"c\":false}]},{\"t\":1176,\"s\":[{\"i\":[[0,0],[0,0],[0,0],[0,0]],\"o\":[[0,0],[0,0],[0,0],[0,0]],\"v\":[[-183.478,-49.565],[-118.696,-70.435],[51.304,-57.391],[82.609,-134.348]],\"c\":false}]}],\"ix\":2},\"nm\":\"Path 1\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ty\":\"st\",\"c\":{\"a\":0,\"k\":[0.454901960784,0.717647058824,0.81568627451,1],\"ix\":3},\"o\":{\"a\":0,\"k\":100,\"ix\":4},\"w\":{\"a\":0,\"k\":2,\"ix\":5},\"lc\":1,\"lj\":1,\"ml\":4,\"bm\":0,\"nm\":\"Stroke 1\",\"mn\":\"ADBE Vector Graphic - Stroke\",\"hd\":false},{\"ty\":\"tr\",\"p\":{\"a\":0,\"k\":[0,0],\"ix\":2},\"a\":{\"a\":0,\"k\":[0,0],\"ix\":1},\"s\":{\"a\":0,\"k\":[100,100],\"ix\":3},\"r\":{\"a\":0,\"k\":0,\"ix\":6},\"o\":{\"a\":0,\"k\":100,\"ix\":7},\"sk\":{\"a\":0,\"k\":0,\"ix\":4},\"sa\":{\"a\":0,\"k\":0,\"ix\":5},\"nm\":\"Transform\"}],\"nm\":\"Shape 1\",\"np\":2,\"cix\":2,\"bm\":0,\"ix\":1,\"mn\":\"ADBE Vector Group\",\"hd\":false},{\"ty\":\"tm\",\"s\":{\"a\":1,\"k\":[{\"i\":{\"x\":[0.833],\"y\":[0.833]},\"o\":{\"x\":[0.167],\"y\":[0.167]},\"t\":214,\"s\":[0]},{\"t\":354,\"s\":[100]}],\"ix\":1},\"e\":{\"a\":1,\"k\":[{\"i\":{\"x\":[0.833],\"y\":[0.833]},\"o\":{\"x\":[0.167],\"y\":[0.167]},\"t\":224,\"s\":[0]},{\"t\":384,\"s\":[100]}],\"ix\":2},\"o\":{\"a\":0,\"k\":0,\"ix\":3},\"m\":1,\"ix\":2,\"nm\":\"Trim Paths 1\",\"mn\":\"ADBE Vector Filter - Trim\",\"hd\":false},{\"ty\":\"tr\",\"p\":{\"a\":0,\"k\":[0,0],\"ix\":2},\"a\":{\"a\":0,\"k\":[0,0],\"ix\":1},\"s\":{\"a\":0,\"k\":[100,100],\"ix\":3},\"r\":{\"a\":0,\"k\":0,\"ix\":6},\"o\":{\"a\":0,\"k\":100,\"ix\":7},\"sk\":{\"a\":0,\"k\":0,\"ix\":4},\"sa\":{\"a\":0,\"k\":0,\"ix\":5},\"nm\":\"Transform\"}],\"nm\":\"Group 2\",\"np\":2,\"cix\":2,\"bm\":0,\"ix\":8,\"mn\":\"ADBE Vector Group\",\"hd\":false},{\"ty\":\"gr\",\"it\":[{\"ty\":\"gr\",\"it\":[{\"ind\":0,\"ty\":\"sh\",\"ix\":1,\"ks\":{\"a\":1,\"k\":[{\"i\":{\"x\":0.833,\"y\":0.833},\"o\":{\"x\":0.167,\"y\":0.167},\"t\":0,\"s\":[{\"i\":[[0,0],[0,0],[0,0],[0,0],[0,0]],\"o\":[[0,0],[0,0],[0,0],[0,0],[0,0]],\"v\":[[-126.087,92.609],[-91.739,106.957],[-7.826,33.913],[52.609,27.391],[150.435,5.217]],\"c\":false}]},{\"i\":{\"x\":0.833,\"y\":0.833},\"o\":{\"x\":0.167,\"y\":0.167},\"t\":147,\"s\":[{\"i\":[[0,0],[0,0],[0,0],[0,0],[0,0]],\"o\":[[0,0],[0,0],[0,0],[0,0],[0,0]],\"v\":[[-207.826,87.391],[-87.391,120],[-76.957,38.696],[53.043,15.652],[80.435,13.043]],\"c\":false}]},{\"t\":170,\"s\":[{\"i\":[[0,0],[0,0],[0,0],[0,0],[0,0]],\"o\":[[0,0],[0,0],[0,0],[0,0],[0,0]],\"v\":[[-121.739,105.652],[-87.391,120],[-76.957,38.696],[53.043,13.478],[69.565,15.217]],\"c\":false}]}],\"ix\":2},\"nm\":\"Path 1\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ty\":\"st\",\"c\":{\"a\":0,\"k\":[0.454901960784,0.717647058824,0.81568627451,1],\"ix\":3},\"o\":{\"a\":0,\"k\":100,\"ix\":4},\"w\":{\"a\":0,\"k\":2,\"ix\":5},\"lc\":1,\"lj\":1,\"ml\":4,\"bm\":0,\"nm\":\"Stroke 1\",\"mn\":\"ADBE Vector Graphic - Stroke\",\"hd\":false},{\"ty\":\"tr\",\"p\":{\"a\":0,\"k\":[0,0],\"ix\":2},\"a\":{\"a\":0,\"k\":[0,0],\"ix\":1},\"s\":{\"a\":0,\"k\":[100,100],\"ix\":3},\"r\":{\"a\":0,\"k\":0,\"ix\":6},\"o\":{\"a\":0,\"k\":100,\"ix\":7},\"sk\":{\"a\":0,\"k\":0,\"ix\":4},\"sa\":{\"a\":0,\"k\":0,\"ix\":5},\"nm\":\"Transform\"}],\"nm\":\"Shape 1\",\"np\":2,\"cix\":2,\"bm\":0,\"ix\":1,\"mn\":\"ADBE Vector Group\",\"hd\":false},{\"ty\":\"tm\",\"s\":{\"a\":1,\"k\":[{\"i\":{\"x\":[0.833],\"y\":[0.833]},\"o\":{\"x\":[0.167],\"y\":[0.167]},\"t\":0,\"s\":[0]},{\"t\":140,\"s\":[100]}],\"ix\":1},\"e\":{\"a\":1,\"k\":[{\"i\":{\"x\":[0.833],\"y\":[0.833]},\"o\":{\"x\":[0.167],\"y\":[0.167]},\"t\":10,\"s\":[0]},{\"t\":170,\"s\":[100]}],\"ix\":2},\"o\":{\"a\":0,\"k\":0,\"ix\":3},\"m\":1,\"ix\":2,\"nm\":\"Trim Paths 1\",\"mn\":\"ADBE Vector Filter - Trim\",\"hd\":false},{\"ty\":\"tr\",\"p\":{\"a\":0,\"k\":[0,0],\"ix\":2},\"a\":{\"a\":0,\"k\":[0,0],\"ix\":1},\"s\":{\"a\":0,\"k\":[100,100],\"ix\":3},\"r\":{\"a\":0,\"k\":0,\"ix\":6},\"o\":{\"a\":0,\"k\":100,\"ix\":7},\"sk\":{\"a\":0,\"k\":0,\"ix\":4},\"sa\":{\"a\":0,\"k\":0,\"ix\":5},\"nm\":\"Transform\"}],\"nm\":\"Group 1\",\"np\":2,\"cix\":2,\"bm\":0,\"ix\":9,\"mn\":\"ADBE Vector Group\",\"hd\":false}],\"ip\":0,\"op\":1800,\"st\":0,\"bm\":0},{\"ddd\":0,\"ind\":4,\"ty\":4,\"nm\":\"Shape Layer 5\",\"sr\":1,\"ks\":{\"o\":{\"a\":0,\"k\":5,\"ix\":11},\"r\":{\"a\":0,\"k\":0,\"ix\":10},\"p\":{\"a\":0,\"k\":[960,544,0],\"ix\":2},\"a\":{\"a\":0,\"k\":[0,0,0],\"ix\":1},\"s\":{\"a\":0,\"k\":[200,200,100],\"ix\":6}},\"ao\":0,\"shapes\":[{\"ty\":\"gr\",\"it\":[{\"d\":1,\"ty\":\"el\",\"s\":{\"a\":0,\"k\":[426.211,426.211],\"ix\":2},\"p\":{\"a\":0,\"k\":[0,0],\"ix\":3},\"nm\":\"Ellipse Path 1\",\"mn\":\"ADBE Vector Shape - Ellipse\",\"hd\":false},{\"ty\":\"gf\",\"o\":{\"a\":0,\"k\":100,\"ix\":10},\"r\":1,\"bm\":0,\"g\":{\"p\":3,\"k\":{\"a\":0,\"k\":[0,1,1,1,0.371,0.5,0.5,0.5,1,0,0,0],\"ix\":9}},\"s\":{\"a\":0,\"k\":[0,0],\"ix\":5},\"e\":{\"a\":0,\"k\":[0,214],\"ix\":6},\"t\":2,\"h\":{\"a\":0,\"k\":0,\"ix\":7},\"a\":{\"a\":0,\"k\":0,\"ix\":8},\"nm\":\"Gradient Fill 1\",\"mn\":\"ADBE Vector Graphic - G-Fill\",\"hd\":false},{\"ty\":\"tr\",\"p\":{\"a\":0,\"k\":[0,0],\"ix\":2},\"a\":{\"a\":0,\"k\":[0,0],\"ix\":1},\"s\":{\"a\":0,\"k\":[100,100],\"ix\":3},\"r\":{\"a\":0,\"k\":0,\"ix\":6},\"o\":{\"a\":0,\"k\":100,\"ix\":7},\"sk\":{\"a\":0,\"k\":0,\"ix\":4},\"sa\":{\"a\":0,\"k\":0,\"ix\":5},\"nm\":\"Transform\"}],\"nm\":\"Ellipse 2\",\"np\":2,\"cix\":2,\"bm\":0,\"ix\":1,\"mn\":\"ADBE Vector Group\",\"hd\":false}],\"ip\":0,\"op\":1800,\"st\":0,\"bm\":0},{\"ddd\":0,\"ind\":5,\"ty\":4,\"nm\":\"Shape Layer 1\",\"parent\":7,\"td\":1,\"sr\":1,\"ks\":{\"o\":{\"a\":0,\"k\":100,\"ix\":11},\"r\":{\"a\":0,\"k\":0,\"ix\":10},\"p\":{\"a\":0,\"k\":[0,0,0],\"ix\":2},\"a\":{\"a\":0,\"k\":[0,0,0],\"ix\":1},\"s\":{\"a\":0,\"k\":[100,100,100],\"ix\":6}},\"ao\":0,\"shapes\":[{\"ty\":\"gr\",\"it\":[{\"d\":1,\"ty\":\"el\",\"s\":{\"a\":0,\"k\":[426.211,426.211],\"ix\":2},\"p\":{\"a\":0,\"k\":[0,0],\"ix\":3},\"nm\":\"Ellipse Path 1\",\"mn\":\"ADBE Vector Shape - Ellipse\",\"hd\":false},{\"ty\":\"st\",\"c\":{\"a\":0,\"k\":[0.2588239782,0.909803981407,0.878431013519,1],\"ix\":3},\"o\":{\"a\":0,\"k\":100,\"ix\":4},\"w\":{\"a\":0,\"k\":0,\"ix\":5},\"lc\":1,\"lj\":1,\"ml\":4,\"bm\":0,\"nm\":\"Stroke 1\",\"mn\":\"ADBE Vector Graphic - Stroke\",\"hd\":false},{\"ty\":\"fl\",\"c\":{\"a\":0,\"k\":[0,0.815940647499,0.899800857843,1],\"ix\":4},\"o\":{\"a\":0,\"k\":100,\"ix\":5},\"r\":1,\"bm\":0,\"nm\":\"Fill 1\",\"mn\":\"ADBE Vector Graphic - Fill\",\"hd\":false},{\"ty\":\"tr\",\"p\":{\"a\":0,\"k\":[0,0],\"ix\":2},\"a\":{\"a\":0,\"k\":[0,0],\"ix\":1},\"s\":{\"a\":0,\"k\":[100,100],\"ix\":3},\"r\":{\"a\":0,\"k\":0,\"ix\":6},\"o\":{\"a\":0,\"k\":100,\"ix\":7},\"sk\":{\"a\":0,\"k\":0,\"ix\":4},\"sa\":{\"a\":0,\"k\":0,\"ix\":5},\"nm\":\"Transform\"}],\"nm\":\"Ellipse 1\",\"np\":3,\"cix\":2,\"bm\":0,\"ix\":1,\"mn\":\"ADBE Vector Group\",\"hd\":false}],\"ip\":0,\"op\":1800,\"st\":0,\"bm\":0},{\"ddd\":0,\"ind\":6,\"ty\":4,\"nm\":\"Objects Outlines\",\"parent\":7,\"tt\":1,\"sr\":1,\"ks\":{\"o\":{\"a\":0,\"k\":100,\"ix\":11},\"r\":{\"a\":0,\"k\":0,\"ix\":10},\"p\":{\"a\":1,\"k\":[{\"i\":{\"x\":0.833,\"y\":0.833},\"o\":{\"x\":0.167,\"y\":0.167},\"t\":0,\"s\":[0,0,0],\"to\":[-157.667,0,0],\"ti\":[157.667,0,0]},{\"t\":1800,\"s\":[-946,0,0]}],\"ix\":2},\"a\":{\"a\":0,\"k\":[337.65,165.187,0],\"ix\":1},\"s\":{\"a\":0,\"k\":[136,136,100],\"ix\":6}},\"ao\":0,\"shapes\":[{\"ty\":\"gr\",\"it\":[{\"ty\":\"gr\",\"it\":[{\"ty\":\"gr\",\"it\":[{\"d\":1,\"ty\":\"el\",\"s\":{\"a\":1,\"k\":[{\"i\":{\"x\":[0,0],\"y\":[1,1]},\"o\":{\"x\":[0.333,0.333],\"y\":[0,0]},\"t\":400,\"s\":[0,0]},{\"i\":{\"x\":[0.833,0.833],\"y\":[1,1]},\"o\":{\"x\":[0.167,0.167],\"y\":[0,0]},\"t\":430,\"s\":[7,7]},{\"i\":{\"x\":[0.678,0.678],\"y\":[1,1]},\"o\":{\"x\":[1,1],\"y\":[0,0]},\"t\":762,\"s\":[7,7]},{\"t\":792,\"s\":[0,0]}],\"ix\":2},\"p\":{\"a\":0,\"k\":[0,0],\"ix\":3},\"nm\":\"Ellipse Path 1\",\"mn\":\"ADBE Vector Shape - Ellipse\",\"hd\":false},{\"ty\":\"tr\",\"p\":{\"a\":0,\"k\":[592,280],\"ix\":2},\"a\":{\"a\":0,\"k\":[0,0],\"ix\":1},\"s\":{\"a\":0,\"k\":[100,100],\"ix\":3},\"r\":{\"a\":0,\"k\":0,\"ix\":6},\"o\":{\"a\":0,\"k\":100,\"ix\":7},\"sk\":{\"a\":0,\"k\":0,\"ix\":4},\"sa\":{\"a\":0,\"k\":0,\"ix\":5},\"nm\":\"Transform\"}],\"nm\":\"sydney\",\"np\":1,\"cix\":2,\"bm\":0,\"ix\":1,\"mn\":\"ADBE Vector Group\",\"hd\":false},{\"ty\":\"gr\",\"it\":[{\"d\":1,\"ty\":\"el\",\"s\":{\"a\":0,\"k\":[7,7],\"ix\":2},\"p\":{\"a\":0,\"k\":[0,0],\"ix\":3},\"nm\":\"Ellipse Path 1\",\"mn\":\"ADBE Vector Shape - Ellipse\",\"hd\":false},{\"ty\":\"tr\",\"p\":{\"a\":0,\"k\":[230,51],\"ix\":2},\"a\":{\"a\":0,\"k\":[0,0],\"ix\":1},\"s\":{\"a\":0,\"k\":[100,100],\"ix\":3},\"r\":{\"a\":0,\"k\":0,\"ix\":6},\"o\":{\"a\":0,\"k\":100,\"ix\":7},\"sk\":{\"a\":0,\"k\":0,\"ix\":4},\"sa\":{\"a\":0,\"k\":0,\"ix\":5},\"nm\":\"Transform\"}],\"nm\":\"fin 2\",\"np\":1,\"cix\":2,\"bm\":0,\"ix\":2,\"mn\":\"ADBE Vector Group\",\"hd\":false},{\"ty\":\"gr\",\"it\":[{\"d\":1,\"ty\":\"el\",\"s\":{\"a\":1,\"k\":[{\"i\":{\"x\":[0.678,0.678],\"y\":[1,1]},\"o\":{\"x\":[1,1],\"y\":[0,0]},\"t\":309,\"s\":[7,7]},{\"i\":{\"x\":[0.667,0.667],\"y\":[1,1]},\"o\":{\"x\":[0.167,0.167],\"y\":[0,0]},\"t\":339,\"s\":[0,0]},{\"i\":{\"x\":[0,0],\"y\":[1,1]},\"o\":{\"x\":[0.333,0.333],\"y\":[0,0]},\"t\":1533,\"s\":[0,0]},{\"t\":1563,\"s\":[7,7]}],\"ix\":2},\"p\":{\"a\":0,\"k\":[0,0],\"ix\":3},\"nm\":\"Ellipse Path 1\",\"mn\":\"ADBE Vector Shape - Ellipse\",\"hd\":false},{\"ty\":\"tr\",\"p\":{\"a\":0,\"k\":[342,93],\"ix\":2},\"a\":{\"a\":0,\"k\":[0,0],\"ix\":1},\"s\":{\"a\":0,\"k\":[100,100],\"ix\":3},\"r\":{\"a\":0,\"k\":0,\"ix\":6},\"o\":{\"a\":0,\"k\":100,\"ix\":7},\"sk\":{\"a\":0,\"k\":0,\"ix\":4},\"sa\":{\"a\":0,\"k\":0,\"ix\":5},\"nm\":\"Transform\"}],\"nm\":\"fin\",\"np\":1,\"cix\":2,\"bm\":0,\"ix\":3,\"mn\":\"ADBE Vector Group\",\"hd\":false},{\"ty\":\"gr\",\"it\":[{\"d\":1,\"ty\":\"el\",\"s\":{\"a\":1,\"k\":[{\"i\":{\"x\":[0.678,0.678],\"y\":[1,1]},\"o\":{\"x\":[1,1],\"y\":[0,0]},\"t\":318,\"s\":[7,7]},{\"i\":{\"x\":[0.667,0.667],\"y\":[1,1]},\"o\":{\"x\":[0.167,0.167],\"y\":[0,0]},\"t\":348,\"s\":[0,0]},{\"i\":{\"x\":[0,0],\"y\":[1,1]},\"o\":{\"x\":[0.333,0.333],\"y\":[0,0]},\"t\":1509,\"s\":[0,0]},{\"t\":1539,\"s\":[7,7]}],\"ix\":2},\"p\":{\"a\":0,\"k\":[0,0],\"ix\":3},\"nm\":\"Ellipse Path 1\",\"mn\":\"ADBE Vector Shape - Ellipse\",\"hd\":false},{\"ty\":\"tr\",\"p\":{\"a\":0,\"k\":[336,118],\"ix\":2},\"a\":{\"a\":0,\"k\":[0,0],\"ix\":1},\"s\":{\"a\":0,\"k\":[100,100],\"ix\":3},\"r\":{\"a\":0,\"k\":0,\"ix\":6},\"o\":{\"a\":0,\"k\":100,\"ix\":7},\"sk\":{\"a\":0,\"k\":0,\"ix\":4},\"sa\":{\"a\":0,\"k\":0,\"ix\":5},\"nm\":\"Transform\"}],\"nm\":\"eu\",\"np\":1,\"cix\":2,\"bm\":0,\"ix\":4,\"mn\":\"ADBE Vector Group\",\"hd\":false},{\"ty\":\"gr\",\"it\":[{\"d\":1,\"ty\":\"el\",\"s\":{\"a\":1,\"k\":[{\"i\":{\"x\":[0,0],\"y\":[1,1]},\"o\":{\"x\":[0.333,0.333],\"y\":[0,0]},\"t\":0,\"s\":[0,0]},{\"i\":{\"x\":[0.833,0.833],\"y\":[1,1]},\"o\":{\"x\":[0.167,0.167],\"y\":[0,0]},\"t\":30,\"s\":[7,7]},{\"i\":{\"x\":[0.678,0.678],\"y\":[1,1]},\"o\":{\"x\":[1,1],\"y\":[0,0]},\"t\":566,\"s\":[7,7]},{\"t\":596,\"s\":[0,0]}],\"ix\":2},\"p\":{\"a\":0,\"k\":[0,0],\"ix\":3},\"nm\":\"Ellipse Path 1\",\"mn\":\"ADBE Vector Shape - Ellipse\",\"hd\":false},{\"ty\":\"tr\",\"p\":{\"a\":0,\"k\":[439,150],\"ix\":2},\"a\":{\"a\":0,\"k\":[0,0],\"ix\":1},\"s\":{\"a\":0,\"k\":[100,100],\"ix\":3},\"r\":{\"a\":0,\"k\":0,\"ix\":6},\"o\":{\"a\":0,\"k\":100,\"ix\":7},\"sk\":{\"a\":0,\"k\":0,\"ix\":4},\"sa\":{\"a\":0,\"k\":0,\"ix\":5},\"nm\":\"Transform\"}],\"nm\":\"jakart 2\",\"np\":1,\"cix\":2,\"bm\":0,\"ix\":5,\"mn\":\"ADBE Vector Group\",\"hd\":false},{\"ty\":\"gr\",\"it\":[{\"d\":1,\"ty\":\"el\",\"s\":{\"a\":1,\"k\":[{\"i\":{\"x\":[0,0],\"y\":[1,1]},\"o\":{\"x\":[0.333,0.333],\"y\":[0,0]},\"t\":53,\"s\":[0,0]},{\"i\":{\"x\":[0.833,0.833],\"y\":[1,1]},\"o\":{\"x\":[0.167,0.167],\"y\":[0,0]},\"t\":83,\"s\":[7,7]},{\"i\":{\"x\":[0.678,0.678],\"y\":[1,1]},\"o\":{\"x\":[1,1],\"y\":[0,0]},\"t\":756,\"s\":[7,7]},{\"t\":786,\"s\":[0,0]}],\"ix\":2},\"p\":{\"a\":0,\"k\":[0,0],\"ix\":3},\"nm\":\"Ellipse Path 1\",\"mn\":\"ADBE Vector Shape - Ellipse\",\"hd\":false},{\"ty\":\"tr\",\"p\":{\"a\":0,\"k\":[513,221],\"ix\":2},\"a\":{\"a\":0,\"k\":[0,0],\"ix\":1},\"s\":{\"a\":0,\"k\":[100,100],\"ix\":3},\"r\":{\"a\":0,\"k\":0,\"ix\":6},\"o\":{\"a\":0,\"k\":100,\"ix\":7},\"sk\":{\"a\":0,\"k\":0,\"ix\":4},\"sa\":{\"a\":0,\"k\":0,\"ix\":5},\"nm\":\"Transform\"}],\"nm\":\"jakart\",\"np\":1,\"cix\":2,\"bm\":0,\"ix\":6,\"mn\":\"ADBE Vector Group\",\"hd\":false},{\"ty\":\"gr\",\"it\":[{\"d\":1,\"ty\":\"el\",\"s\":{\"a\":1,\"k\":[{\"i\":{\"x\":[0,0],\"y\":[1,1]},\"o\":{\"x\":[0.333,0.333],\"y\":[0,0]},\"t\":83,\"s\":[0,0]},{\"i\":{\"x\":[0.833,0.833],\"y\":[1,1]},\"o\":{\"x\":[0.167,0.167],\"y\":[0,0]},\"t\":113,\"s\":[7,7]},{\"i\":{\"x\":[0.678,0.678],\"y\":[1,1]},\"o\":{\"x\":[1,1],\"y\":[0,0]},\"t\":791,\"s\":[7,7]},{\"t\":821,\"s\":[0,0]}],\"ix\":2},\"p\":{\"a\":0,\"k\":[0,0],\"ix\":3},\"nm\":\"Ellipse Path 1\",\"mn\":\"ADBE Vector Shape - Ellipse\",\"hd\":false},{\"ty\":\"tr\",\"p\":{\"a\":0,\"k\":[520,175],\"ix\":2},\"a\":{\"a\":0,\"k\":[0,0],\"ix\":1},\"s\":{\"a\":0,\"k\":[100,100],\"ix\":3},\"r\":{\"a\":0,\"k\":0,\"ix\":6},\"o\":{\"a\":0,\"k\":100,\"ix\":7},\"sk\":{\"a\":0,\"k\":0,\"ix\":4},\"sa\":{\"a\":0,\"k\":0,\"ix\":5},\"nm\":\"Transform\"}],\"nm\":\"singa\",\"np\":1,\"cix\":2,\"bm\":0,\"ix\":7,\"mn\":\"ADBE Vector Group\",\"hd\":false},{\"ty\":\"gr\",\"it\":[{\"d\":1,\"ty\":\"el\",\"s\":{\"a\":1,\"k\":[{\"i\":{\"x\":[0.678,0.678],\"y\":[1,1]},\"o\":{\"x\":[1,1],\"y\":[0,0]},\"t\":630,\"s\":[7,7]},{\"i\":{\"x\":[0.833,0.833],\"y\":[1,1]},\"o\":{\"x\":[0.167,0.167],\"y\":[0,0]},\"t\":660,\"s\":[0,0]},{\"i\":{\"x\":[0,0],\"y\":[1,1]},\"o\":{\"x\":[0.333,0.333],\"y\":[0,0]},\"t\":1765,\"s\":[0,0]},{\"t\":1795,\"s\":[7,7]}],\"ix\":2},\"p\":{\"a\":0,\"k\":[0,0],\"ix\":3},\"nm\":\"Ellipse Path 1\",\"mn\":\"ADBE Vector Shape - Ellipse\",\"hd\":false},{\"ty\":\"tr\",\"p\":{\"a\":0,\"k\":[461,182],\"ix\":2},\"a\":{\"a\":0,\"k\":[0,0],\"ix\":1},\"s\":{\"a\":0,\"k\":[100,100],\"ix\":3},\"r\":{\"a\":0,\"k\":0,\"ix\":6},\"o\":{\"a\":0,\"k\":100,\"ix\":7},\"sk\":{\"a\":0,\"k\":0,\"ix\":4},\"sa\":{\"a\":0,\"k\":0,\"ix\":5},\"nm\":\"Transform\"}],\"nm\":\"india\",\"np\":1,\"cix\":2,\"bm\":0,\"ix\":8,\"mn\":\"ADBE Vector Group\",\"hd\":false},{\"ty\":\"gr\",\"it\":[{\"d\":1,\"ty\":\"el\",\"s\":{\"a\":1,\"k\":[{\"i\":{\"x\":[0.678,0.678],\"y\":[1,1]},\"o\":{\"x\":[1,1],\"y\":[0,0]},\"t\":492,\"s\":[7,7]},{\"i\":{\"x\":[0.833,0.833],\"y\":[1,1]},\"o\":{\"x\":[0.333,0.333],\"y\":[0,0]},\"t\":522,\"s\":[0,0]},{\"i\":{\"x\":[0,0],\"y\":[1,1]},\"o\":{\"x\":[0.333,0.333],\"y\":[0,0]},\"t\":1619,\"s\":[0,0]},{\"t\":1649,\"s\":[7,7]}],\"ix\":2},\"p\":{\"a\":0,\"k\":[0,0],\"ix\":3},\"nm\":\"Ellipse Path 1\",\"mn\":\"ADBE Vector Shape - Ellipse\",\"hd\":false},{\"ty\":\"tr\",\"p\":{\"a\":0,\"k\":[408,166],\"ix\":2},\"a\":{\"a\":0,\"k\":[0,0],\"ix\":1},\"s\":{\"a\":0,\"k\":[100,100],\"ix\":3},\"r\":{\"a\":0,\"k\":0,\"ix\":6},\"o\":{\"a\":0,\"k\":100,\"ix\":7},\"sk\":{\"a\":0,\"k\":0,\"ix\":4},\"sa\":{\"a\":0,\"k\":0,\"ix\":5},\"nm\":\"Transform\"}],\"nm\":\"uae\",\"np\":1,\"cix\":2,\"bm\":0,\"ix\":9,\"mn\":\"ADBE Vector Group\",\"hd\":false},{\"ty\":\"gr\",\"it\":[{\"d\":1,\"ty\":\"el\",\"s\":{\"a\":1,\"k\":[{\"i\":{\"x\":[0.678,0.678],\"y\":[1,1]},\"o\":{\"x\":[1,1],\"y\":[0,0]},\"t\":249,\"s\":[7,7]},{\"i\":{\"x\":[0.833,0.833],\"y\":[1,1]},\"o\":{\"x\":[0.167,0.167],\"y\":[0,0]},\"t\":279,\"s\":[0,0]},{\"i\":{\"x\":[0,0],\"y\":[1,1]},\"o\":{\"x\":[0.333,0.333],\"y\":[0,0]},\"t\":1375,\"s\":[0,0]},{\"t\":1405,\"s\":[7,7]}],\"ix\":2},\"p\":{\"a\":0,\"k\":[0,0],\"ix\":3},\"nm\":\"Ellipse Path 1\",\"mn\":\"ADBE Vector Shape - Ellipse\",\"hd\":false},{\"ty\":\"tr\",\"p\":{\"a\":0,\"k\":[315,135],\"ix\":2},\"a\":{\"a\":0,\"k\":[0,0],\"ix\":1},\"s\":{\"a\":0,\"k\":[100,100],\"ix\":3},\"r\":{\"a\":0,\"k\":0,\"ix\":6},\"o\":{\"a\":0,\"k\":100,\"ix\":7},\"sk\":{\"a\":0,\"k\":0,\"ix\":4},\"sa\":{\"a\":0,\"k\":0,\"ix\":5},\"nm\":\"Transform\"}],\"nm\":\"barca\",\"np\":1,\"cix\":2,\"bm\":0,\"ix\":10,\"mn\":\"ADBE Vector Group\",\"hd\":false},{\"ty\":\"gr\",\"it\":[{\"d\":1,\"ty\":\"el\",\"s\":{\"a\":1,\"k\":[{\"i\":{\"x\":[0.678,0.678],\"y\":[1,1]},\"o\":{\"x\":[1,1],\"y\":[0,0]},\"t\":284,\"s\":[7,7]},{\"i\":{\"x\":[0.833,0.833],\"y\":[1,1]},\"o\":{\"x\":[0.333,0.333],\"y\":[0,0]},\"t\":314,\"s\":[0,0]},{\"i\":{\"x\":[0,0],\"y\":[1,1]},\"o\":{\"x\":[0.333,0.333],\"y\":[0,0]},\"t\":1427,\"s\":[0,0]},{\"t\":1457,\"s\":[7,7]}],\"ix\":2},\"p\":{\"a\":0,\"k\":[0,0],\"ix\":3},\"nm\":\"Ellipse Path 1\",\"mn\":\"ADBE Vector Shape - Ellipse\",\"hd\":false},{\"ty\":\"tr\",\"p\":{\"a\":0,\"k\":[328,193],\"ix\":2},\"a\":{\"a\":0,\"k\":[0,0],\"ix\":1},\"s\":{\"a\":0,\"k\":[100,100],\"ix\":3},\"r\":{\"a\":0,\"k\":0,\"ix\":6},\"o\":{\"a\":0,\"k\":100,\"ix\":7},\"sk\":{\"a\":0,\"k\":0,\"ix\":4},\"sa\":{\"a\":0,\"k\":0,\"ix\":5},\"nm\":\"Transform\"}],\"nm\":\"nigeria\",\"np\":1,\"cix\":2,\"bm\":0,\"ix\":11,\"mn\":\"ADBE Vector Group\",\"hd\":false},{\"ty\":\"gr\",\"it\":[{\"d\":1,\"ty\":\"el\",\"s\":{\"a\":1,\"k\":[{\"i\":{\"x\":[0,0],\"y\":[1,1]},\"o\":{\"x\":[0.333,0.333],\"y\":[0,0]},\"t\":830,\"s\":[0,0]},{\"i\":{\"x\":[0.833,0.833],\"y\":[1,1]},\"o\":{\"x\":[0.167,0.167],\"y\":[0,0]},\"t\":860,\"s\":[7,7]},{\"i\":{\"x\":[0.678,0.678],\"y\":[1,1]},\"o\":{\"x\":[1,1],\"y\":[0,0]},\"t\":1489,\"s\":[7,7]},{\"t\":1519,\"s\":[0,0]}],\"ix\":2},\"p\":{\"a\":0,\"k\":[0,0],\"ix\":3},\"nm\":\"Ellipse Path 1\",\"mn\":\"ADBE Vector Shape - Ellipse\",\"hd\":false},{\"ty\":\"tr\",\"p\":{\"a\":0,\"k\":[99,139],\"ix\":2},\"a\":{\"a\":0,\"k\":[0,0],\"ix\":1},\"s\":{\"a\":0,\"k\":[100,100],\"ix\":3},\"r\":{\"a\":0,\"k\":0,\"ix\":6},\"o\":{\"a\":0,\"k\":100,\"ix\":7},\"sk\":{\"a\":0,\"k\":0,\"ix\":4},\"sa\":{\"a\":0,\"k\":0,\"ix\":5},\"nm\":\"Transform\"}],\"nm\":\"la\",\"np\":1,\"cix\":2,\"bm\":0,\"ix\":12,\"mn\":\"ADBE Vector Group\",\"hd\":false},{\"ty\":\"gr\",\"it\":[{\"d\":1,\"ty\":\"el\",\"s\":{\"a\":1,\"k\":[{\"i\":{\"x\":[0.678,0.678],\"y\":[1,1]},\"o\":{\"x\":[1,1],\"y\":[0,0]},\"t\":34,\"s\":[7,7]},{\"i\":{\"x\":[0.833,0.833],\"y\":[1,1]},\"o\":{\"x\":[0.333,0.333],\"y\":[0,0]},\"t\":64,\"s\":[0,0]},{\"i\":{\"x\":[0,0],\"y\":[1,1]},\"o\":{\"x\":[0.333,0.333],\"y\":[0,0]},\"t\":1143,\"s\":[0,0]},{\"t\":1173,\"s\":[7,7]}],\"ix\":2},\"p\":{\"a\":0,\"k\":[0,0],\"ix\":3},\"nm\":\"Ellipse Path 1\",\"mn\":\"ADBE Vector Shape - Ellipse\",\"hd\":false},{\"ty\":\"tr\",\"p\":{\"a\":0,\"k\":[225,234],\"ix\":2},\"a\":{\"a\":0,\"k\":[0,0],\"ix\":1},\"s\":{\"a\":0,\"k\":[100,100],\"ix\":3},\"r\":{\"a\":0,\"k\":0,\"ix\":6},\"o\":{\"a\":0,\"k\":100,\"ix\":7},\"sk\":{\"a\":0,\"k\":0,\"ix\":4},\"sa\":{\"a\":0,\"k\":0,\"ix\":5},\"nm\":\"Transform\"}],\"nm\":\"brazil\",\"np\":1,\"cix\":2,\"bm\":0,\"ix\":13,\"mn\":\"ADBE Vector Group\",\"hd\":false},{\"ty\":\"gr\",\"it\":[{\"d\":1,\"ty\":\"el\",\"s\":{\"a\":1,\"k\":[{\"i\":{\"x\":[0,0],\"y\":[1,1]},\"o\":{\"x\":[0.333,0.333],\"y\":[0,0]},\"t\":218,\"s\":[0,0]},{\"i\":{\"x\":[0.833,0.833],\"y\":[1,1]},\"o\":{\"x\":[0.167,0.167],\"y\":[0,0]},\"t\":248,\"s\":[7,7]},{\"i\":{\"x\":[0.678,0.678],\"y\":[1,1]},\"o\":{\"x\":[1,1],\"y\":[0,0]},\"t\":941,\"s\":[7,7]},{\"t\":971,\"s\":[0,0]}],\"ix\":2},\"p\":{\"a\":0,\"k\":[0,0],\"ix\":3},\"nm\":\"Ellipse Path 1\",\"mn\":\"ADBE Vector Shape - Ellipse\",\"hd\":false},{\"ty\":\"tr\",\"p\":{\"a\":0,\"k\":[578,143],\"ix\":2},\"a\":{\"a\":0,\"k\":[0,0],\"ix\":1},\"s\":{\"a\":0,\"k\":[100,100],\"ix\":3},\"r\":{\"a\":0,\"k\":0,\"ix\":6},\"o\":{\"a\":0,\"k\":100,\"ix\":7},\"sk\":{\"a\":0,\"k\":0,\"ix\":4},\"sa\":{\"a\":0,\"k\":0,\"ix\":5},\"nm\":\"Transform\"}],\"nm\":\"japan\",\"np\":1,\"cix\":2,\"bm\":0,\"ix\":14,\"mn\":\"ADBE Vector Group\",\"hd\":false},{\"ty\":\"gr\",\"it\":[{\"d\":1,\"ty\":\"el\",\"s\":{\"a\":1,\"k\":[{\"i\":{\"x\":[0.678,0.678],\"y\":[1,1]},\"o\":{\"x\":[1,1],\"y\":[0,0]},\"t\":430,\"s\":[7,7]},{\"i\":{\"x\":[0.833,0.833],\"y\":[1,1]},\"o\":{\"x\":[0.333,0.333],\"y\":[0,0]},\"t\":460,\"s\":[0,0]},{\"i\":{\"x\":[0,0],\"y\":[1,1]},\"o\":{\"x\":[0.333,0.333],\"y\":[0,0]},\"t\":1564,\"s\":[0,0]},{\"t\":1594,\"s\":[7,7]}],\"ix\":2},\"p\":{\"a\":0,\"k\":[0,0],\"ix\":3},\"nm\":\"Ellipse Path 1\",\"mn\":\"ADBE Vector Shape - Ellipse\",\"hd\":false},{\"ty\":\"tr\",\"p\":{\"a\":0,\"k\":[387,104],\"ix\":2},\"a\":{\"a\":0,\"k\":[0,0],\"ix\":1},\"s\":{\"a\":0,\"k\":[100,100],\"ix\":3},\"r\":{\"a\":0,\"k\":0,\"ix\":6},\"o\":{\"a\":0,\"k\":100,\"ix\":7},\"sk\":{\"a\":0,\"k\":0,\"ix\":4},\"sa\":{\"a\":0,\"k\":0,\"ix\":5},\"nm\":\"Transform\"}],\"nm\":\"russia\",\"np\":1,\"cix\":2,\"bm\":0,\"ix\":15,\"mn\":\"ADBE Vector Group\",\"hd\":false},{\"ty\":\"gr\",\"it\":[{\"d\":1,\"ty\":\"el\",\"s\":{\"a\":1,\"k\":[{\"i\":{\"x\":[0,0],\"y\":[1,1]},\"o\":{\"x\":[0.333,0.333],\"y\":[0,0]},\"t\":177,\"s\":[0,0]},{\"i\":{\"x\":[0.833,0.833],\"y\":[1,1]},\"o\":{\"x\":[0.167,0.167],\"y\":[0,0]},\"t\":207,\"s\":[7,7]},{\"i\":{\"x\":[0.678,0.678],\"y\":[1,1]},\"o\":{\"x\":[1,1],\"y\":[0,0]},\"t\":876,\"s\":[7,7]},{\"t\":906,\"s\":[0,0]}],\"ix\":2},\"p\":{\"a\":0,\"k\":[0,0],\"ix\":3},\"nm\":\"Ellipse Path 1\",\"mn\":\"ADBE Vector Shape - Ellipse\",\"hd\":false},{\"ty\":\"tr\",\"p\":{\"a\":0,\"k\":[561,119],\"ix\":2},\"a\":{\"a\":0,\"k\":[0,0],\"ix\":1},\"s\":{\"a\":0,\"k\":[100,100],\"ix\":3},\"r\":{\"a\":0,\"k\":0,\"ix\":6},\"o\":{\"a\":0,\"k\":100,\"ix\":7},\"sk\":{\"a\":0,\"k\":0,\"ix\":4},\"sa\":{\"a\":0,\"k\":0,\"ix\":5},\"nm\":\"Transform\"}],\"nm\":\"china\",\"np\":1,\"cix\":2,\"bm\":0,\"ix\":16,\"mn\":\"ADBE Vector Group\",\"hd\":false},{\"ty\":\"gr\",\"it\":[{\"d\":1,\"ty\":\"el\",\"s\":{\"a\":1,\"k\":[{\"i\":{\"x\":[0.678,0.678],\"y\":[1,1]},\"o\":{\"x\":[1,1],\"y\":[0,0]},\"t\":366,\"s\":[7,7]},{\"i\":{\"x\":[0.833,0.833],\"y\":[1,1]},\"o\":{\"x\":[0.167,0.167],\"y\":[0,0]},\"t\":396,\"s\":[0,0]},{\"i\":{\"x\":[0,0],\"y\":[1,1]},\"o\":{\"x\":[0.333,0.333],\"y\":[0,0]},\"t\":1569,\"s\":[0,0]},{\"t\":1599,\"s\":[7,7]}],\"ix\":2},\"p\":{\"a\":0,\"k\":[0,0],\"ix\":3},\"nm\":\"Ellipse Path 1\",\"mn\":\"ADBE Vector Shape - Ellipse\",\"hd\":false},{\"ty\":\"tr\",\"p\":{\"a\":0,\"k\":[357,274],\"ix\":2},\"a\":{\"a\":0,\"k\":[0,0],\"ix\":1},\"s\":{\"a\":0,\"k\":[100,100],\"ix\":3},\"r\":{\"a\":0,\"k\":0,\"ix\":6},\"o\":{\"a\":0,\"k\":100,\"ix\":7},\"sk\":{\"a\":0,\"k\":0,\"ix\":4},\"sa\":{\"a\":0,\"k\":0,\"ix\":5},\"nm\":\"Transform\"}],\"nm\":\"south africa\",\"np\":1,\"cix\":2,\"bm\":0,\"ix\":17,\"mn\":\"ADBE Vector Group\",\"hd\":false},{\"ty\":\"gr\",\"it\":[{\"d\":1,\"ty\":\"el\",\"s\":{\"a\":1,\"k\":[{\"i\":{\"x\":[0,0],\"y\":[1,1]},\"o\":{\"x\":[0.333,0.333],\"y\":[0,0]},\"t\":1010,\"s\":[0,0]},{\"i\":{\"x\":[0.833,0.833],\"y\":[1,1]},\"o\":{\"x\":[0.167,0.167],\"y\":[0,0]},\"t\":1040,\"s\":[7,7]},{\"i\":{\"x\":[0.678,0.678],\"y\":[1,1]},\"o\":{\"x\":[1,1],\"y\":[0,0]},\"t\":1709,\"s\":[7,7]},{\"t\":1739,\"s\":[0,0]}],\"ix\":2},\"p\":{\"a\":0,\"k\":[0,0],\"ix\":3},\"nm\":\"Ellipse Path 1\",\"mn\":\"ADBE Vector Shape - Ellipse\",\"hd\":false},{\"ty\":\"tr\",\"p\":{\"a\":0,\"k\":[178,217],\"ix\":2},\"a\":{\"a\":0,\"k\":[0,0],\"ix\":1},\"s\":{\"a\":0,\"k\":[100,100],\"ix\":3},\"r\":{\"a\":0,\"k\":0,\"ix\":6},\"o\":{\"a\":0,\"k\":100,\"ix\":7},\"sk\":{\"a\":0,\"k\":0,\"ix\":4},\"sa\":{\"a\":0,\"k\":0,\"ix\":5},\"nm\":\"Transform\"}],\"nm\":\"colombia\",\"np\":1,\"cix\":2,\"bm\":0,\"ix\":18,\"mn\":\"ADBE Vector Group\",\"hd\":false},{\"ty\":\"gr\",\"it\":[{\"d\":1,\"ty\":\"el\",\"s\":{\"a\":1,\"k\":[{\"i\":{\"x\":[0.678,0.678],\"y\":[1,1]},\"o\":{\"x\":[1,1],\"y\":[0,0]},\"t\":239,\"s\":[7,7]},{\"i\":{\"x\":[0.833,0.833],\"y\":[1,1]},\"o\":{\"x\":[0.167,0.167],\"y\":[0,0]},\"t\":269,\"s\":[0,0]},{\"i\":{\"x\":[0,0],\"y\":[1,1]},\"o\":{\"x\":[0.333,0.333],\"y\":[0,0]},\"t\":1392,\"s\":[0,0]},{\"t\":1422,\"s\":[7,7]}],\"ix\":2},\"p\":{\"a\":0,\"k\":[0,0],\"ix\":3},\"nm\":\"Ellipse Path 1\",\"mn\":\"ADBE Vector Shape - Ellipse\",\"hd\":false},{\"ty\":\"tr\",\"p\":{\"a\":0,\"k\":[315,107],\"ix\":2},\"a\":{\"a\":0,\"k\":[0,0],\"ix\":1},\"s\":{\"a\":0,\"k\":[100,100],\"ix\":3},\"r\":{\"a\":0,\"k\":0,\"ix\":6},\"o\":{\"a\":0,\"k\":100,\"ix\":7},\"sk\":{\"a\":0,\"k\":0,\"ix\":4},\"sa\":{\"a\":0,\"k\":0,\"ix\":5},\"nm\":\"Transform\"}],\"nm\":\"london\",\"np\":1,\"cix\":2,\"bm\":0,\"ix\":19,\"mn\":\"ADBE Vector Group\",\"hd\":false},{\"ty\":\"gr\",\"it\":[{\"d\":1,\"ty\":\"el\",\"s\":{\"a\":1,\"k\":[{\"i\":{\"x\":[0,0],\"y\":[1,1]},\"o\":{\"x\":[0.333,0.333],\"y\":[0,0]},\"t\":1012,\"s\":[0,0]},{\"i\":{\"x\":[0.833,0.833],\"y\":[1,1]},\"o\":{\"x\":[0.167,0.167],\"y\":[0,0]},\"t\":1042,\"s\":[7,7]},{\"i\":{\"x\":[0.678,0.678],\"y\":[1,1]},\"o\":{\"x\":[1,1],\"y\":[0,0]},\"t\":1678,\"s\":[7,7]},{\"t\":1708,\"s\":[0,0]}],\"ix\":2},\"p\":{\"a\":0,\"k\":[0,0],\"ix\":3},\"nm\":\"Ellipse Path 1\",\"mn\":\"ADBE Vector Shape - Ellipse\",\"hd\":false},{\"ty\":\"tr\",\"p\":{\"a\":0,\"k\":[172.85,127.5],\"ix\":2},\"a\":{\"a\":0,\"k\":[0,0],\"ix\":1},\"s\":{\"a\":0,\"k\":[100,100],\"ix\":3},\"r\":{\"a\":0,\"k\":0,\"ix\":6},\"o\":{\"a\":0,\"k\":100,\"ix\":7},\"sk\":{\"a\":0,\"k\":0,\"ix\":4},\"sa\":{\"a\":0,\"k\":0,\"ix\":5},\"nm\":\"Transform\"}],\"nm\":\"new york\",\"np\":1,\"cix\":2,\"bm\":0,\"ix\":20,\"mn\":\"ADBE Vector Group\",\"hd\":false},{\"ty\":\"fl\",\"c\":{\"a\":0,\"k\":[0.454901963472,0.717647075653,0.815686285496,1],\"ix\":4},\"o\":{\"a\":0,\"k\":100,\"ix\":5},\"r\":1,\"bm\":0,\"nm\":\"Fill 1\",\"mn\":\"ADBE Vector Graphic - Fill\",\"hd\":false},{\"ty\":\"tr\",\"p\":{\"a\":0,\"k\":[0,0],\"ix\":2},\"a\":{\"a\":0,\"k\":[0,0],\"ix\":1},\"s\":{\"a\":0,\"k\":[100,100],\"ix\":3},\"r\":{\"a\":0,\"k\":0,\"ix\":6},\"o\":{\"a\":0,\"k\":100,\"ix\":7},\"sk\":{\"a\":0,\"k\":0,\"ix\":4},\"sa\":{\"a\":0,\"k\":0,\"ix\":5},\"nm\":\"Transform\"}],\"nm\":\"cities\",\"np\":21,\"cix\":2,\"bm\":0,\"ix\":1,\"mn\":\"ADBE Vector Group\",\"hd\":false},{\"ty\":\"gr\",\"it\":[{\"ind\":0,\"ty\":\"sh\",\"ix\":1,\"ks\":{\"a\":0,\"k\":{\"i\":[[0.295,-0.054],[0.068,0.006],[0.061,-0.012],[0.171,-0.124],[0.198,-0.026],[0.173,0],[0,0],[0.195,0],[0,0],[0.147,0],[0.246,0],[0.219,-0.021],[0.441,-0.347],[-0.099,-0.197],[0,-0.196],[0.296,-0.095],[0.297,0],[0.295,0.122],[0.171,0],[0,0],[0.517,0.273],[0.149,0.027],[0.415,0],[0.173,-0.026],[0.122,-0.023],[0.15,-0.102],[0.197,0],[0.319,0],[0,0],[0.194,0.022],[0.245,0],[0.418,-0.15],[0.488,0],[0.095,-0.017],[0.072,-0.014],[0.032,0.002],[0.033,-0.007],[0.109,-0.024],[0.136,-0.039],[0.219,-0.086],[-0.12,-0.149],[-0.109,-0.048],[-0.086,-0.016],[-0.036,0.002],[-0.048,-0.008],[-0.173,-0.113],[-0.084,-0.073],[-0.051,-0.087],[-0.025,-0.087],[-0.024,-0.145],[0,-0.208],[0,0],[0.059,0.048],[0.085,0.026],[0.031,-0.003],[0.033,0.008],[0.097,0.01],[0.083,0.025],[0.101,0.024],[0.033,-0.002],[0.03,0.006],[0.089,0.024],[0.097,0.014],[0.075,0],[0.108,0],[0.16,0],[0.123,-0.061],[0.041,-0.085],[0,-0.089],[-0.012,-0.065],[-0.086,-0.135],[-0.072,-0.062],[-0.098,-0.049],[-0.185,-0.085],[-0.149,-0.062],[-0.062,-0.012],[-0.074,-0.017],[-0.086,-0.012],[-0.172,0],[0,0],[-0.085,-0.01],[-0.076,-0.049],[-0.075,-0.039],[-0.149,-0.15],[-0.061,-0.076],[-0.099,-0.162],[-0.039,-0.098],[-0.009,-0.085],[-0.009,-0.072],[0,-0.11],[0.146,0],[0.074,0],[0.16,0.036],[0.097,0.014],[0.036,-0.002],[0.052,0.008],[0.109,0.037],[0.149,0.059],[0.074,0.028],[0.084,0.025],[0.085,0.038],[0.109,0.037],[0.062,0.012],[0.28,0.036],[0.121,0.021],[0.206,0.073],[0.061,0.02],[0.097,0.061],[0.059,0.036],[0.101,0.063],[0.099,0.063],[0.076,0.072],[0.126,0.036],[0.039,-0.005],[0.044,0.012],[0.072,0.013],[0.061,0.015],[0.109,0],[0,0],[0.096,0.011],[0.159,0.047],[0.126,0.048],[0.243,0],[0.786,0],[-0.024,-0.097],[-0.046,-0.075],[-0.16,-0.165],[-0.199,-0.035],[-0.034,0.005],[-0.049,-0.02],[0,0],[-0.062,-0.061],[-0.147,-0.109],[-0.065,-0.072],[-0.064,-0.071],[-0.061,-0.097],[-0.06,-0.149],[-0.022,-0.063],[-0.037,-0.096],[0,-0.169],[0,0],[0,0],[0.097,0.016],[0.084,0.039],[0.087,0.048],[0.086,0.074],[0.058,0.059],[0.063,0.035],[0.099,0.061],[0.102,0.062],[0.11,0.073],[0.186,0.108],[0.075,0.036],[0.074,0.047],[0.073,0.06],[0.18,0.034],[0.059,0.01],[0.073,0],[0.174,0.09],[0.051,0.075],[0.051,0.074],[0.085,0.048],[0.062,0.023],[0.11,0.026],[0.073,0],[0.162,0],[0,0],[0,0],[-0.062,-0.146],[-0.11,-0.223],[0,-0.128],[0.015,-0.11],[0,-0.098],[0,-0.061],[0,0],[0.025,-0.074],[0.11,-0.314],[0.059,-0.074],[0.075,-0.038],[0.111,0],[0.121,0.05],[0.1,0.071],[0.061,0.159],[0,0.08],[-0.038,0.162],[-0.05,0.069],[-0.133,0.156],[-0.035,0.099],[0,0.086],[0.013,0.061],[0.05,0.089],[0.06,0.099],[0.017,0.103],[0,0],[0,0.063],[0.136,0.097],[0.087,0.048],[0.096,0.065],[0.073,0.061],[0.085,0.022],[0.133,0],[0.118,-0.025],[0.076,-0.01],[0.133,-0.038],[0.071,-0.026],[0.17,-0.112],[0.098,-0.049],[0.073,-0.021],[0.076,-0.015],[0.032,0.003],[0.033,-0.008],[0.084,-0.026],[0.085,-0.039],[0.099,-0.023],[0.171,0],[0.088,0],[0,0],[0.086,-0.027],[0.083,-0.036],[0.073,-0.014],[0.159,0],[0,0],[0.135,0],[0.433,0],[0.089,-0.024],[0.062,-0.028],[0.048,-0.1],[0.012,-0.058],[-0.072,-0.035],[-0.06,-0.014],[-0.077,0],[-0.068,0.003],[-0.087,-0.005],[-0.113,-0.049],[-0.085,-0.059],[-0.051,-0.086],[-0.038,-0.076],[-0.035,-0.071],[-0.101,-0.047],[-0.085,-0.024],[-0.158,-0.039],[-0.072,0],[-0.059,0.004],[-0.079,-0.007],[-0.074,-0.036],[-0.087,-0.051],[-0.147,-0.062],[-0.075,-0.022],[-0.061,-0.037],[-0.126,-0.133],[0,0],[0,0],[0.075,0.02],[0.06,0.013],[0.075,0.025],[0.173,0.087],[0.097,0.061],[0.085,0.049],[0.07,0.062],[0.097,0.017],[0.117,-0.011],[0.101,0.008],[0.099,0],[0,0],[0.088,0.025],[0.124,0.05],[0.16,0.036],[0.075,0.022],[0.187,0.135],[0.072,0.075],[0.061,0.088],[0.06,0.038],[0.09,0.035],[0.073,0],[0.32,-0.085],[0.074,-0.02],[0.086,-0.034],[0.083,-0.038],[0.086,-0.035],[0.085,-0.042],[0.198,-0.065],[0.059,-0.024],[0,-0.131],[-0.111,-0.172],[-0.051,-0.086],[-0.027,-0.073],[0,-0.085],[0,0],[0,0],[0.149,0.059],[0.087,0.063],[0.081,0.051],[0.085,0],[0.858,0.01],[0.052,-0.076],[0.073,-0.136],[0.097,-0.039],[0.135,-0.048],[0.237,-0.049],[0.135,-0.022],[0.135,-0.134],[0,0],[0.194,-0.126],[0.087,-0.024],[0.063,-0.012],[0.146,0],[0.137,-0.012],[0.1,0],[0.086,-0.011],[0.084,-0.05],[0.086,-0.048],[0.086,-0.038],[0.056,-0.021],[0.051,-0.038],[0.086,-0.036],[0.036,0.006],[0.03,-0.009],[0.063,-0.027],[0.051,-0.06],[0.133,-0.194],[0.051,-0.038],[0.049,-0.038],[0,-0.108],[-0.013,-0.145],[0,0],[-0.17,-0.025],[-0.149,-0.111],[-0.073,-0.05],[-0.086,-0.036],[-0.061,0],[-0.199,0],[-0.271,0.031],[-0.136,0.062],[-0.06,0.028],[-0.087,0.049],[-0.125,0],[-0.04,-0.184],[0,-0.146],[-0.026,-0.135],[-0.013,-0.076],[-0.013,-0.059],[0,-0.084],[0,0],[0.295,-0.294],[0.085,-0.06],[0.099,-0.011],[0.248,0],[0,0],[0.1,0],[0.175,-0.013],[0.135,-0.046],[0.11,-0.053],[0.084,-0.026],[0.134,0],[0,0],[0.269,0.037],[0.097,0.024],[0.085,0],[0.173,0],[0.234,-0.053],[0.171,-0.085],[0,-0.076],[0.01,-0.084],[0.156,-0.087],[0.088,0],[0,0],[0.174,-0.086],[0.088,-0.023],[0.206,0],[0.112,0.014],[0.148,0.013],[0.172,0],[0.171,-0.011],[0.11,-0.038],[0.087,-0.012],[0.087,-0.032],[0.036,-0.073],[0.025,-0.073],[0.012,-0.062],[0.022,-0.058],[0.034,-0.059],[0.085,0],[0,0],[0.036,-0.073],[0.048,-0.148],[-0.075,-0.121],[-0.097,-0.149],[-0.122,-0.097],[-0.145,-0.074],[-0.075,0.01],[-0.054,-0.009],[-0.146,0],[-0.122,-0.026],[-0.273,-0.175],[-0.099,-0.121],[0,0],[0,0],[-0.063,-0.025],[-0.075,-0.035],[-0.16,-0.036],[-0.171,0],[-0.112,0],[0,0],[-0.122,0.01],[-0.062,0.009],[-0.161,0.058],[-0.109,0],[0,0],[-0.174,0.027],[-0.174,0],[0,0],[-0.151,0],[-0.062,0],[0,0],[0.098,-0.137],[0.061,-0.038],[0.085,-0.037],[0.133,-0.086],[0.113,-0.024],[0.07,0],[0,0],[0.088,0.01],[0.038,-0.004],[0.045,0.012],[0.086,0.021],[0.097,0],[0,0],[0.232,-0.062],[0.096,-0.04],[0.221,0],[0,0],[0.1,0],[0.11,0.012],[0.208,0.021],[0.137,0],[0,0],[0.077,-0.011],[0.025,-0.193],[0,0],[0.063,-0.049],[0,-0.124],[-0.232,-0.176],[-0.099,-0.065],[-0.098,-0.008],[-0.098,0.008],[-0.107,-0.011],[-0.234,-0.111],[-0.194,-0.062],[-0.149,-0.059],[-0.221,-0.126],[0,0],[0.161,-0.122],[0.048,-0.076],[0.027,-0.063],[-0.088,-0.037],[-0.061,-0.026],[-0.135,-0.072],[-0.062,-0.064],[-0.065,-0.082],[-0.02,-0.049],[-0.064,-0.04],[-0.086,-0.039],[-0.073,-0.037],[-0.074,-0.027],[-0.184,-0.073],[-0.074,-0.039],[-0.098,-0.061],[-0.11,-0.036],[-0.232,0],[0,0],[-0.087,0.012],[-0.086,0.034],[0.037,0.061],[0.064,0.084],[0,0.124],[-0.097,0.059],[-0.063,0],[-0.196,0],[-0.284,-0.023],[-0.159,-0.061],[-0.075,-0.022],[-0.059,-0.013],[-0.086,0],[-0.074,0],[0,0],[0,0],[-0.075,-0.04],[-0.1,-0.037],[-0.193,0],[-0.171,0.087],[-0.073,0.051],[-0.074,0.036],[-0.075,0.028],[-0.059,0.018],[-0.048,0],[-0.079,0.041],[-0.074,0.051],[-0.064,0.036],[-0.135,0],[-0.175,-0.083],[-0.16,-0.085],[-0.084,0],[0,0],[-0.232,-0.01],[-0.06,-0.01],[-0.074,-0.014],[-0.196,-0.165],[-0.084,-0.05],[-0.086,-0.024],[-0.085,0],[0,0],[-0.073,-0.016],[-0.056,-0.022],[-0.222,-0.125],[-0.086,-0.023],[-0.233,0],[0,0],[-0.061,-0.012],[-0.075,-0.054],[-0.162,-0.1],[-0.086,-0.024],[-0.149,-0.015],[0,0],[-0.135,-0.048],[-0.074,-0.053],[0,-0.171],[0,0],[-0.099,-0.148],[-0.061,-0.073],[-0.097,-0.026],[-0.061,-0.013],[-0.047,0.005],[-0.052,-0.014],[-0.095,-0.048],[-0.086,-0.037],[-0.063,-0.083],[-0.038,-0.059],[-0.073,-0.148],[-0.037,-0.047],[-0.065,-0.062],[-0.124,-0.148],[-0.061,-0.09],[-0.073,-0.096],[-0.049,-0.062],[-0.05,-0.074],[-0.063,-0.15],[-0.073,-0.149],[-0.027,-0.072],[-0.173,-0.225],[-0.071,-0.052],[-0.061,-0.046],[0,-0.134],[0,0],[0.025,-0.096],[0,-0.123],[-0.06,-0.095],[0,-0.284],[0,0],[0.061,-0.095],[0,-0.161],[-0.012,-0.136],[0,0],[0,0],[0.184,-0.051],[0.122,-0.114],[0.024,-0.06],[-0.026,-0.297],[0.048,-0.218],[0,0],[0,0],[-0.148,-0.072],[-0.295,-0.025],[0,0],[-0.12,0],[-0.169,0],[0,0],[-0.024,0.196],[-0.022,0.123],[-0.296,0],[-0.146,0],[-0.146,0],[-0.024,-0.196],[-0.024,-0.12],[-0.074,-0.147],[-0.174,-0.097],[-0.172,-0.022],[-0.123,-0.022],[-0.068,0.007],[-0.059,-0.01],[-0.147,-0.072],[-0.119,-0.071],[-0.097,-0.12],[-0.126,-0.148],[-0.049,-0.124],[0,0],[0,0],[0.195,0],[0,0],[0.416,0.196],[0.124,0.072],[0.122,0.072],[0.079,-0.016],[0.048,0.009],[0.298,0.025],[0.343,0],[0.416,-0.174],[-0.147,-0.266],[-0.12,-0.121],[0,-0.222],[0,-0.169],[0.27,-0.075],[0.147,-0.096],[0,-0.271],[-0.199,-0.15],[-0.246,0.03],[-0.167,-0.026],[-0.267,-0.171],[-0.539,0],[-0.148,0.147],[-0.394,0.051],[-0.493,0],[0,0],[0.414,0.148],[0.06,-0.008],[0.069,0.027],[0.147,0.049],[0.075,-0.009],[0.054,0.012],[0.149,0.024],[0,0],[0,0],[-0.148,-0.077],[-0.172,-0.072],[-0.147,-0.022],[-0.12,0],[-0.194,0],[0,0],[-0.245,-0.12],[0,-0.271],[0,0],[0.072,-0.148],[0.048,-0.126],[0,-0.218],[0,0],[-0.101,-0.148],[-0.124,-0.171],[0,-0.176],[0,0],[0,0],[0.147,-0.072],[0.171,-0.101],[0.171,-0.078],[0.173,0],[0,0],[0.17,0.024],[0.172,0],[0,0],[0.198,0.048],[0.198,0],[0.169,-0.069],[0.147,-0.052],[0.122,-0.049],[0.095,-0.049],[0,-0.24],[0,0],[-0.072,-0.171],[-0.172,-0.075],[-0.123,-0.05],[-0.125,-0.046],[-0.147,-0.099],[-0.097,-0.118],[-0.049,-0.293],[0.25,-0.148],[0,-0.242],[-0.2,-0.347],[-0.193,-0.269],[-0.097,-0.124],[-0.223,0],[-0.198,0.101],[-0.173,0.05],[-0.149,0],[0,0],[-0.148,-0.048],[0.048,-0.121],[0.099,-0.1],[0.082,0.02],[0.045,-0.021],[0.098,-0.123],[0.048,-0.125],[0.049,-0.148],[0,-0.243],[-0.048,-0.198],[-0.173,-0.245],[-0.149,-0.07],[-0.151,0],[-0.123,0.051],[-0.124,0.1],[-0.1,0.121],[-0.12,0.073],[-0.148,0],[-0.222,-0.024],[0,0],[0.145,-0.075],[0.122,-0.075],[0.148,-0.074],[0.074,-0.167],[0,-0.224],[-0.097,-0.195],[-0.12,-0.122],[-0.124,-0.145],[-0.345,-0.391],[-0.099,-0.148],[-0.047,-0.15],[-0.023,-0.118],[-0.122,-0.294],[-0.101,-0.271],[-0.295,-0.195],[-0.094,-0.123],[-0.072,-0.175],[-0.119,-0.271],[-0.122,-0.096],[-0.442,-0.148],[-0.298,-0.22],[-0.172,-0.077],[-0.146,0],[0,0],[-0.15,0.024],[-0.221,0],[0,0],[-0.122,-0.023],[-0.059,0.01],[-0.058,-0.043],[-0.047,-0.124],[-0.049,-0.126],[-0.194,-0.099],[-0.201,0],[-0.115,0.009],[-0.149,-0.025],[-0.099,-0.174],[-0.074,-0.123],[-0.194,-0.047],[-0.297,0],[-0.27,0.077],[-0.172,0.074],[-0.125,0.097],[-0.076,0.148],[0,0.124],[0,0],[-0.319,0.516],[-0.25,0.266],[-0.072,0.149],[0,0.247],[0.028,0.22],[0,0.147],[0,0.148],[0.126,0.247],[0.075,0.148],[0.049,0.145],[0,0.142],[-0.42,0.021],[0,0],[-0.148,0],[-0.293,0],[-0.024,0.271],[-0.074,0.122],[-0.121,0.121],[-0.17,0.077],[-0.074,-0.012],[-0.055,0.012],[-0.174,0.073],[0,0],[0,0.248],[0.048,0.196],[0.074,0.15],[0.072,0.12],[0,0.176],[-0.197,0.125],[-0.079,-0.011],[-0.056,0.012],[-0.273,0.074],[-0.126,0.073],[-0.07,0.147],[-0.021,0.124],[0,0.145],[-0.026,0.147],[0,0],[-0.024,0.421],[0,0.15],[0,0],[-0.025,-0.466],[0,-0.172],[-0.318,0],[-0.146,0],[-0.339,0.369],[-0.145,0.15],[-0.198,0.096],[-0.169,0],[0,0],[-0.114,-0.008],[-0.152,0.028],[-0.145,0.071],[-0.073,0.099],[-0.073,0.127],[0,0],[-0.146,0.098],[-0.147,0.098],[-0.098,0.097],[-0.097,0.126],[-0.122,0.099],[-0.098,0.07],[-0.171,0.273],[-0.123,0.096],[-0.097,0.072],[-0.098,0.124],[-0.046,0.104],[-0.123,0.122],[-0.121,0.072],[-0.05,0.193],[0,0.468],[-0.045,0.019],[-0.059,0],[-0.122,-0.046],[-0.038,-0.016],[-0.035,-0.014],[-0.034,-0.014],[-0.08,-0.051],[-0.03,-0.017],[-0.084,-0.071],[-0.043,-0.021],[-0.148,0],[-0.27,-0.077],[-0.296,-0.148],[-0.392,0],[-0.244,0.025],[-0.149,0.048],[-0.294,0.221],[-0.149,0.173],[-0.171,0.123],[-0.321,0.048],[-0.146,-0.009],[-0.118,0.009],[-0.123,0.024],[-0.17,0.019],[-0.073,-0.009],[-0.094,0.026],[-0.146,0.024],[-0.143,0.048],[-0.061,-0.009],[-0.066,0.027],[-0.148,0.075],[-0.123,0.075],[-0.099,0.122],[-0.123,0.198],[-0.15,0.196],[-0.369,0],[0,0],[-0.27,0.176],[-0.149,0.127],[-0.124,0.195],[-0.048,0.124],[0,0],[0.268,-0.249],[0.098,-0.075],[0.246,0],[0,0],[0.246,0.195],[0.298,0.173],[0.121,0],[0,0],[0.615,0.197],[0.125,0.025],[0.149,0.125],[0.076,0.149],[0,0.172],[0,0],[-0.269,0],[-0.162,-0.009],[-0.256,0.028],[-0.12,0],[-0.318,0.123],[-0.219,0.294],[-0.096,-0.05],[-0.099,-0.146],[-0.075,-0.369],[-0.074,-0.146],[-0.074,-0.123],[-0.37,0],[-0.123,0.171],[-0.048,0.1],[-0.318,0.075],[-0.294,0],[-0.344,0.027],[-0.145,0.027],[0.026,0.274],[0.17,0.322],[0.172,0.121],[0.271,0.172],[0.122,0.318],[0.097,0.272],[0.073,0.149],[0.052,0.122],[0.052,0.102],[0.121,0.076],[0.295,0.127],[0.145,0.072],[-0.147,0.1],[-0.124,0.047],[-0.268,-0.199],[-0.145,-0.071],[-0.169,0],[0,0],[-0.148,0],[-0.147,0],[-0.025,0.589],[0,0],[-0.024,0.121],[0,0.171],[0.075,0.124],[0.152,0.076],[0.317,0],[0.271,-0.121],[0.123,-0.101],[0.174,0],[0,0],[-0.221,0.124],[-0.099,0.075],[-0.124,0.073],[-0.052,0.12],[0.296,0.098],[0.148,0.05],[0,0],[0,0],[0,0],[0,0],[-0.124,0.098],[-0.144,0.077],[-0.32,0],[0,0],[-0.442,0],[-0.197,0.103],[-0.124,0.124],[0,0.226],[0.121,0.193],[0.169,0.146],[0.273,0],[0.194,-0.051],[0.146,-0.023],[0.148,0],[0.123,0.049],[0.074,0.147],[0,0.17],[-0.244,0],[-0.147,0],[-0.15,0],[-0.32,0],[-0.296,0.049],[-0.149,0.073],[0,0],[-0.194,0],[-0.173,0],[0,0],[-0.222,0.049],[-0.126,0.048],[-0.075,0.122],[0.367,0.099],[0.067,-0.006],[0.06,0.013],[0.169,0.124],[0.079,0.249],[0,0.149],[0,0.22],[0,0.245],[0,0.148],[0,0.097],[-0.639,0.048],[0,0],[0.22,0.467],[0.026,0.118],[0.024,0.23],[0.466,0.079],[0.172,0.027],[0.123,0.029],[0.147,0.073],[0.122,0.074],[0.1,0.148],[0,0.224],[-0.023,0.051],[-0.122,0.072],[-0.173,0.07],[-0.076,-0.01],[-0.052,0.008],[-0.343,0.022],[-0.147,0],[0,0],[-0.272,-0.05],[-0.148,-0.098],[0,-0.245],[0,0],[0.047,-0.146],[0,-0.243],[-0.273,-0.541],[0,0],[0,0],[-0.125,0.15],[0,0.224],[0,0],[0.121,0.172],[0.27,0],[0.196,-0.051],[0.144,-0.023],[0.269,0],[0,0],[0.194,0],[0.121,0],[0,0],[-0.121,0],[-0.173,0],[0,0],[-0.296,0.075],[-0.149,0.074],[0.122,0.148],[0.224,0.022],[0.117,-0.032],[0.143,0.027],[0.175,0.049],[0.123,0.026],[0.149,0],[0.248,0],[0.368,-0.027],[0.05,-0.269],[0.074,-0.145],[0.059,-0.011],[0.059,0.043],[0.095,0.148],[0,0.148],[-0.095,0.245],[-0.099,0.124],[-0.072,0.099],[-0.075,0.174],[0,0.15],[0,0.294],[-0.05,0.395],[0,0],[-0.246,0.269],[-0.147,0.1],[-0.191,-0.004],[-0.085,0.009],[0,0],[-0.172,0.075],[0.022,0.145],[0,0.221],[-0.121,0.195],[-0.098,0.15],[-0.073,0.125],[-0.148,0.099],[-0.318,0.05],[-0.178,-0.045],[-0.228,0.05],[-0.101,0.075],[-0.072,0.144],[-0.049,0.121],[-0.097,0.124],[-0.148,0.076],[-0.149,0.025],[-0.123,0],[-0.122,0.021],[-0.069,-0.006],[-0.061,0.011],[-0.147,0.099],[0,0],[0,0],[0,0],[-0.317,0.124],[-0.494,0],[-0.222,-0.098],[-0.217,-0.024],[-0.174,0],[0,0],[-0.151,0],[-0.12,0.022],[-0.17,0.048],[-0.125,0.096],[-0.125,0.148],[-0.195,0.169],[-0.173,0.048],[-0.298,0],[0,0],[-0.592,0.073],[-0.123,0.022],[-0.123,0.051],[-0.099,0.175],[-0.05,0.17],[0,0.294],[0.201,0.199],[0.148,0.049],[0.345,0],[0.318,-0.076],[0.198,-0.049],[0.293,0],[0.321,0.124],[0.174,0.049],[0,0],[0.195,0],[0.316,-0.024],[0.082,0.006],[0.084,-0.011],[0.321,-0.099],[0.149,-0.099],[0.078,-0.149],[0.147,-0.27],[0.122,-0.079],[0.125,-0.026],[0.162,0.016],[0.145,-0.011],[0.32,0],[0.271,0.124],[0.148,0.101],[0.391,0],[0.222,-0.1],[0.221,-0.27],[0.121,-0.099],[0.15,-0.047],[0.148,0],[0.131,0.007],[0.176,-0.012],[0.273,-0.097],[0.17,-0.05],[0.318,-0.102],[0.149,-0.097],[0.151,-0.171],[0.392,-0.193],[0.172,0],[0.172,0.024],[-0.126,0.119],[-0.099,0.121],[-0.075,0.121],[-0.075,0.15],[-0.273,0.172],[-0.07,-0.013],[-0.061,0.026],[-0.248,0.098],[0,0.145],[0,0],[-0.173,0.072],[-0.099,0.08],[-0.075,0.147],[0,0.146],[0.025,0.119],[0.074,0.124],[0.148,0.073],[0.145,0],[0,0],[0.148,0],[0.147,0.006],[0.196,-0.013],[0.146,0],[0.491,0.023],[0.174,0.026],[0.027,-0.488],[0,-0.149],[0,-0.127],[0.203,0],[0.196,0.025],[0.273,0],[0.246,-0.052],[0.291,-0.122],[0.121,-0.048],[0.168,-0.07],[0.079,0.011],[0.053,-0.008],[-0.02,0.123],[-0.049,0.147],[-0.147,0.097],[-0.172,0.025],[0,0],[-0.339,0],[-0.269,0.072],[-0.147,0.07],[0,0],[0.174,0.023],[0.074,-0.006],[0.098,0.011],[0.246,0],[0.614,-0.072],[0.294,0],[0.173,0],[0,0],[0.414,0],[0.369,-0.096],[0.172,-0.048],[0.148,-0.05],[0.126,-0.024],[0.226,-0.05],[0.075,0.007],[0.1,-0.013],[0.248,-0.027],[0.072,0.006],[0.099,-0.014],[0.172,-0.05],[0.127,-0.025],[0.196,0],[0.169,0.024],[-0.054,0.124],[-0.222,0.299],[-0.147,0.125],[-0.372,0.072],[-0.195,0],[0,0],[-0.124,0.073],[-0.148,0.098],[-0.169,0],[0,0],[-0.178,0],[-0.267,0.097],[-0.147,0.072],[-0.149,0.071],[-0.081,-0.016],[-0.052,0.009],[-0.145,0.028],[-0.12,0.028],[-0.065,-0.005],[-0.065,0.016],[-0.174,0.023],[-0.245,-0.021],[-0.197,0.01],[-0.196,0.024],[0,0],[0,0],[0.244,0],[0,0],[0.15,0.022],[0.489,0],[0.298,0],[0.367,0.1],[0.145,0.075],[0,0.196],[0,0.17],[0.147,0.026],[0.295,0],[0.072,-0.028],[0.195,0],[0,0],[0.319,0.121],[0.124,0.027],[0.345,0],[0,0],[0,0],[0,0],[0,0],[0.27,-0.072],[0.147,-0.097],[0,0],[0,0],[0,0],[-0.295,0.051],[-0.096,0.12],[-0.05,0.148],[0,0],[0.05,0.148],[0.174,0.123],[0.15,0.051],[0.345,0.027],[0,0],[0.345,0.029],[0.268,0.076],[0.145,0.029],[0.124,0],[0.343,0],[0.341,-0.024],[0.147,0],[0.343,0],[0,0],[0.32,0],[3.27,0]],\"o\":[[-0.063,0.012],[-0.068,-0.005],[-0.194,0.023],[-0.173,0.126],[-0.145,0.026],[0,0],[-0.198,0],[0,0],[-0.15,0],[-0.248,-0.021],[-0.247,0],[-0.541,0.076],[0.15,0.193],[0.073,0.148],[0,0.318],[-0.273,0.074],[-0.343,0],[-0.15,-0.05],[0,0],[-0.586,0],[-0.124,-0.048],[-0.417,-0.074],[-0.198,0],[-0.124,0.024],[-0.173,0.049],[-0.147,0.098],[-0.318,0.022],[0,0],[-0.193,0],[-0.246,-0.025],[-0.441,0],[-0.491,-0.037],[-0.11,0],[-0.071,0.013],[-0.031,0.005],[-0.035,-0.004],[-0.11,0.022],[-0.139,0.039],[-0.222,0.075],[0.088,0.185],[0.075,0.087],[0.073,0.027],[0.045,0.005],[0.043,-0.004],[0.195,0.034],[0.097,0.056],[0.075,0.06],[0.05,0.073],[0.048,0.136],[0.027,0.209],[0,0],[-0.05,-0.071],[-0.063,-0.05],[-0.03,-0.005],[-0.035,0.004],[-0.085,-0.024],[-0.099,-0.011],[-0.099,-0.034],[-0.029,-0.005],[-0.034,0.003],[-0.088,-0.025],[-0.086,-0.025],[-0.074,0],[-0.109,-0.013],[-0.162,0],[-0.146,0],[-0.083,0.038],[-0.022,0.072],[0,0.072],[0.025,0.156],[0.047,0.085],[0.088,0.075],[0.172,0.098],[0.147,0.06],[0.061,0.026],[0.075,0.024],[0.088,0.01],[0.161,0.011],[0,0],[0.097,0],[0.09,0.013],[0.071,0.05],[0.167,0.094],[0.061,0.059],[0.122,0.147],[0.051,0.083],[0.024,0.073],[0.013,0.077],[0.013,0.111],[0,0.148],[-0.075,0],[-0.174,0],[-0.087,-0.015],[-0.047,-0.004],[-0.039,0.004],[-0.125,-0.01],[-0.16,-0.062],[-0.072,-0.027],[-0.084,-0.02],[-0.088,-0.027],[-0.11,-0.049],[-0.06,-0.024],[-0.256,-0.1],[-0.136,-0.01],[-0.222,-0.052],[-0.062,-0.027],[-0.1,-0.052],[-0.059,-0.037],[-0.099,-0.064],[-0.097,-0.059],[-0.088,-0.048],[-0.085,-0.089],[-0.042,-0.011],[-0.041,0.006],[-0.071,-0.012],[-0.064,-0.014],[-0.099,-0.024],[0,0],[-0.099,0],[-0.174,-0.021],[-0.123,-0.037],[-0.219,-0.083],[-0.787,0],[0,0.111],[0.028,0.087],[0.135,0.186],[0.149,0.147],[0.036,0.005],[0.046,-0.007],[0,0],[0.086,0.039],[0.134,0.137],[0.072,0.052],[0.063,0.073],[0.073,0.087],[0.086,0.135],[0.026,0.062],[0.039,0.096],[0.062,0.147],[0,0],[0,0],[-0.097,0],[-0.099,-0.011],[-0.088,-0.036],[-0.097,-0.065],[-0.058,-0.047],[-0.063,-0.061],[-0.099,-0.077],[-0.098,-0.063],[-0.094,-0.061],[-0.183,-0.123],[-0.059,-0.037],[-0.072,-0.037],[-0.073,-0.052],[-0.148,-0.127],[-0.066,-0.016],[-0.063,-0.014],[-0.197,-0.014],[-0.089,-0.034],[-0.048,-0.071],[-0.048,-0.086],[-0.061,-0.038],[-0.109,-0.049],[-0.063,-0.011],[-0.159,-0.011],[0,0],[0,0],[0,0.173],[0.099,0.221],[0.046,0.11],[0,0.111],[-0.012,0.097],[0,0.071],[0,0],[-0.015,0.075],[-0.099,0.32],[-0.025,0.091],[-0.053,0.058],[-0.087,0.051],[-0.133,0],[-0.112,-0.05],[-0.147,-0.111],[-0.025,-0.061],[0,-0.169],[0.014,-0.084],[0.121,-0.173],[0.061,-0.075],[0.025,-0.069],[0,-0.072],[-0.024,-0.102],[-0.062,-0.094],[-0.053,-0.086],[0,0],[0,-0.075],[-0.027,-0.162],[-0.083,-0.062],[-0.097,-0.062],[-0.087,-0.047],[-0.071,-0.063],[-0.125,-0.051],[-0.137,0],[-0.077,0.01],[-0.138,0.038],[-0.072,0.011],[-0.187,0.071],[-0.099,0.06],[-0.074,0.036],[-0.073,0.028],[-0.028,0.005],[-0.035,-0.003],[-0.085,0.01],[-0.085,0.024],[-0.101,0.047],[-0.159,0.039],[-0.084,0],[0,0],[-0.101,0],[-0.085,0.026],[-0.075,0.021],[-0.148,0.037],[0,0],[-0.137,-0.012],[-0.429,0],[-0.099,0],[-0.059,0.024],[-0.099,0.037],[-0.027,0.062],[0.048,0.066],[0.061,0.025],[0.063,0.011],[0.084,0.006],[0.067,-0.002],[0.122,0.011],[0.096,0.038],[0.089,0.063],[0.038,0.062],[0.038,0.072],[0.049,0.088],[0.086,0.037],[0.159,0.064],[0.063,0.011],[0.07,0.005],[0.064,-0.003],[0.085,0],[0.1,0.05],[0.135,0.073],[0.073,0.024],[0.06,0.027],[0.146,0.085],[0,0],[0,0],[-0.09,0],[-0.059,-0.015],[-0.074,-0.028],[-0.185,-0.061],[-0.098,-0.05],[-0.087,-0.052],[-0.075,-0.051],[-0.076,-0.061],[-0.137,-0.027],[-0.084,0.007],[-0.1,0],[0,0],[-0.097,0],[-0.122,-0.039],[-0.149,-0.063],[-0.073,-0.013],[-0.208,-0.074],[-0.084,-0.062],[-0.072,-0.073],[-0.05,-0.059],[-0.072,-0.048],[-0.063,-0.023],[-0.332,0],[-0.073,0.013],[-0.087,0.027],[-0.086,0.038],[-0.088,0.038],[-0.087,0.038],[-0.174,0.083],[-0.062,0.009],[-0.111,0.063],[0,0.209],[0.049,0.086],[0.035,0.075],[0.024,0.074],[0,0],[0,0],[-0.172,0],[-0.099,-0.039],[-0.084,-0.061],[-0.074,-0.037],[-0.864,0],[-0.063,0.057],[-0.083,0.135],[-0.048,0.085],[-0.135,0.048],[-0.222,0.073],[-0.133,0.026],[-0.184,0.04],[0,0],[-0.157,0.157],[-0.073,0.036],[-0.06,0.013],[-0.132,0.026],[-0.137,0],[-0.098,0],[-0.098,0],[-0.101,0.013],[-0.085,0.048],[-0.074,0.038],[-0.063,0.028],[-0.027,0.059],[-0.073,0.051],[-0.032,0.015],[-0.033,-0.005],[-0.059,0.027],[-0.072,0.023],[-0.145,0.184],[-0.028,0.05],[-0.049,0.037],[-0.087,0.061],[0,0.151],[0,0],[0.16,0.037],[0.2,0.027],[0.072,0.048],[0.073,0.05],[0.062,0.022],[0.185,0.022],[0.281,0],[0.144,-0.016],[0.063,-0.022],[0.099,-0.05],[0.098,-0.062],[0.196,0],[0.022,0.134],[0,0.148],[0.01,0.074],[0.012,0.059],[0.023,0.072],[0,0],[0,0.416],[-0.072,0.075],[-0.086,0.064],[-0.231,0.038],[0,0],[-0.098,0],[-0.169,-0.013],[-0.145,0.013],[-0.107,0.042],[-0.09,0.033],[-0.123,0.04],[0,0],[-0.271,0],[-0.111,-0.011],[-0.073,-0.012],[-0.172,-0.011],[-0.244,0],[-0.173,0.033],[0,0.073],[0,0.1],[-0.038,0.182],[-0.075,0.037],[0,0],[-0.196,0],[-0.085,0.036],[-0.181,0.073],[-0.112,0],[-0.143,-0.013],[-0.172,-0.011],[-0.174,0],[-0.126,0.013],[-0.088,0.024],[-0.097,0.023],[-0.073,0.04],[-0.037,0.072],[-0.027,0.061],[-0.013,0.06],[-0.025,0.079],[-0.041,0.064],[0,0],[-0.062,0.065],[-0.076,0.137],[0.022,0.119],[0.099,0.145],[0.099,0.148],[0.125,0.096],[0.069,0.028],[0.06,-0.009],[0.126,0.026],[0.147,0],[0.293,0.072],[0.12,0.072],[0,0],[0,0],[0.063,0.027],[0.087,0.038],[0.134,0.075],[0.162,0.037],[0.113,0],[0,0],[0.131,0],[0.061,0],[0.171,-0.036],[0.097,-0.039],[0,0],[0.184,0],[0.16,-0.023],[0,0],[0.149,0.011],[0.056,0],[0,0],[0,0.173],[-0.037,0.059],[-0.073,0.039],[-0.149,0.061],[-0.097,0.059],[-0.062,0.014],[0,0],[-0.099,0],[-0.04,-0.006],[-0.042,0.004],[-0.087,-0.024],[-0.085,-0.027],[0,0],[-0.243,0],[-0.097,0.021],[-0.198,0.085],[0,0],[-0.098,0],[-0.111,0],[-0.212,-0.038],[-0.136,-0.013],[0,0],[-0.074,0],[-0.009,0.196],[0,0],[-0.087,0],[-0.085,0.063],[0,0.294],[0.097,0.072],[0.084,0.045],[0.118,0.019],[0.084,-0.007],[0.258,0.024],[0.185,0.085],[0.162,0.051],[0.235,0.085],[0,0],[-0.209,0],[-0.072,0.052],[-0.022,0.049],[0.074,0.061],[0.063,0.024],[0.137,0.048],[0.07,0.035],[0.075,0.077],[0.027,0.049],[0.036,0.06],[0.074,0.05],[0.076,0.025],[0.073,0.036],[0.186,0.084],[0.085,0.02],[0.098,0.051],[0.099,0.063],[0.221,0.074],[0,0],[0.097,0],[0.086,-0.012],[-0.038,-0.077],[-0.06,-0.098],[-0.061,-0.085],[0,-0.12],[0.063,-0.037],[0.185,-0.023],[0.285,0],[0.181,0.012],[0.077,0.019],[0.06,0.027],[0.074,0.012],[0.075,0],[0,0],[0,0],[0.102,0],[0.086,0.05],[0.17,0.073],[0.199,0],[0.088,-0.037],[0.063,-0.039],[0.071,-0.037],[0.061,-0.01],[0.049,-0.006],[0.085,0.001],[0.086,-0.036],[0.061,-0.034],[0.11,-0.073],[0.198,0],[0.169,0.087],[0.075,0.038],[0,0],[0.234,0],[0.074,0],[0.076,0.014],[0.257,0.071],[0.073,0.063],[0.073,0.046],[0.074,0.014],[0,0],[0.086,0],[0.063,0.008],[0.237,0.085],[0.076,0.037],[0.208,0.086],[0,0],[0.063,0],[0.086,0.013],[0.111,0.145],[0.069,0.049],[0.136,0.035],[0,0],[0.145,0.011],[0.084,0.024],[0.137,0.097],[0,0],[0,0.188],[0.05,0.073],[0.059,0.075],[0.063,0.009],[0.048,0.012],[0.05,-0.007],[0.098,0.023],[0.09,0.037],[0.099,0.05],[0.039,0.062],[0.09,0.137],[0.025,0.062],[0.038,0.062],[0.147,0.145],[0.074,0.085],[0.063,0.082],[0.051,0.073],[0.05,0.066],[0.087,0.12],[0.058,0.147],[0.038,0.072],[0.111,0.248],[0.049,0.071],[0.076,0.049],[0.097,0.087],[0,0],[0.011,0.111],[-0.039,0.112],[0,0.127],[0.148,0.22],[0,0],[0,0.124],[-0.072,0.134],[0,0.132],[0,0],[0,0],[-0.196,0],[-0.161,0.037],[-0.049,0.033],[0.049,0.27],[0,0.22],[0,0],[0,0],[0.097,0.119],[0.246,0.122],[0,0],[0.148,0],[0.149,0.029],[0,0],[0.025,-0.196],[0.025,-0.149],[0.294,0],[0.146,0],[0.149,0],[0.025,0.219],[0.025,0.12],[0.025,0.17],[0.097,0.172],[0.146,0.072],[0.123,0],[0.063,0.014],[0.066,-0.005],[0.149,0.027],[0.147,0.074],[0.148,0.098],[0.1,0.125],[0.073,0.099],[0,0],[0,0],[-0.198,0],[0,0],[-0.469,0],[-0.148,-0.052],[-0.097,-0.048],[-0.074,-0.044],[-0.055,0.011],[-0.27,-0.075],[-0.342,-0.021],[-0.469,0],[0.099,0.294],[0.074,0.148],[0.15,0.148],[0,0.174],[-0.295,0.024],[-0.172,0.049],[-0.198,0.149],[0,0.241],[0.228,0.166],[0.15,-0.019],[0.319,0.052],[0.445,0.296],[0.222,0],[0.269,-0.271],[0.491,-0.047],[0,0],[-0.441,0],[-0.056,-0.01],[-0.076,0.011],[-0.146,-0.048],[-0.069,-0.026],[-0.06,0.01],[-0.124,-0.024],[0,0],[0,0],[0.172,0],[0.169,0.074],[0.148,0.051],[0.124,0.029],[0.173,0.029],[0,0],[0.294,0],[0.219,0.1],[0,0],[-0.024,0.169],[-0.076,0.123],[-0.076,0.173],[0,0],[0,0.195],[0.12,0.173],[0.074,0.125],[0,0],[0,0],[-0.172,0],[-0.146,0.079],[-0.173,0.095],[-0.149,0.049],[0,0],[-0.174,0],[-0.175,-0.03],[0,0],[-0.221,-0.028],[-0.173,-0.05],[-0.197,0],[-0.152,0.051],[-0.123,0.047],[-0.124,0.05],[-0.198,0.124],[0,0],[0,0.196],[0.099,0.196],[0.122,0.047],[0.124,0.051],[0.169,0.073],[0.124,0.074],[0.175,0.225],[-0.271,0.051],[-0.192,0.098],[0,0.421],[0.17,0.289],[0.076,0.123],[0.124,0.149],[0.219,0],[0.17,-0.074],[0.123,-0.049],[0,0],[0.167,0],[0,0.145],[-0.048,0.122],[-0.054,0.054],[-0.066,-0.017],[-0.122,0.071],[-0.073,0.1],[-0.051,0.147],[-0.099,0.215],[0,0.223],[0.075,0.291],[0.096,0.147],[0.124,0.076],[0.146,0],[0.174,-0.07],[0.122,-0.097],[0.097,-0.124],[0.101,-0.05],[0.222,0],[0,0],[-0.147,0.121],[-0.126,0.074],[-0.146,0.073],[-0.147,0.075],[-0.073,0.176],[0,0.243],[0.075,0.146],[0.15,0.145],[0.345,0.42],[0.1,0.125],[0.072,0.122],[0.052,0.12],[0.101,0.323],[0.097,0.247],[0.146,0.344],[0.125,0.077],[0.102,0.121],[0.124,0.273],[0.075,0.169],[0.345,0.319],[0.37,0.121],[0.145,0.098],[0.123,0.048],[0,0],[0.172,0],[0.195,-0.05],[0,0],[0.147,0],[0.05,0.01],[0.084,-0.017],[0.097,0.074],[0.05,0.124],[0.099,0.219],[0.148,0.077],[0.132,0.013],[0.138,-0.01],[0.197,0.045],[0.075,0.121],[0.102,0.175],[0.273,0.049],[0.295,0],[0.172,-0.047],[0.147,-0.074],[0.145,-0.123],[0.072,-0.124],[0,0],[0,-0.615],[0.173,-0.294],[0.097,-0.128],[0.098,-0.195],[0,-0.217],[0,-0.148],[0,-0.149],[0,-0.296],[-0.072,-0.168],[-0.072,-0.121],[-0.024,-0.125],[0,-0.422],[0,0],[0.144,0],[0.295,-0.025],[0,-0.269],[0,-0.149],[0.1,-0.148],[0.123,-0.127],[0.069,-0.028],[0.06,0.008],[0.172,-0.051],[0,0],[0.146,-0.199],[0,-0.219],[-0.025,-0.148],[-0.051,-0.124],[-0.079,-0.123],[0,-0.242],[0.053,-0.025],[0.064,0.008],[0.266,-0.071],[0.142,-0.05],[0.147,-0.093],[0.074,-0.125],[0.027,-0.125],[0,-0.145],[0,0],[-0.025,-0.418],[0,-0.145],[0,0],[-0.024,0.467],[0,0.173],[0.319,-0.025],[0.146,0],[0.515,0],[0.126,-0.148],[0.149,-0.146],[0.149,-0.079],[0,0],[0.132,-0.011],[0.14,0.011],[0.149,-0.026],[0.125,-0.054],[0.074,-0.102],[0,0],[0.073,-0.175],[0.149,-0.099],[0.124,-0.072],[0.099,-0.101],[0.101,-0.12],[0.101,-0.077],[0.247,-0.225],[0.076,-0.122],[0.094,-0.075],[0.12,-0.073],[0.076,-0.097],[0.099,-0.143],[0.099,-0.096],[0.174,-0.098],[0.098,-0.442],[0.025,-0.036],[0.046,-0.017],[0.134,0],[0.038,0.013],[0.038,0.01],[0.031,0.009],[0.084,0.037],[0.035,0.018],[0.092,0.06],[0.038,0.035],[0.148,0.024],[0.297,0],[0.317,0.072],[0.343,0.172],[0.249,0],[0.17,0],[0.365,-0.126],[0.198,-0.146],[0.122,-0.148],[0.271,-0.199],[0.152,-0.026],[0.113,0.009],[0.121,0],[0.172,-0.03],[0.079,-0.011],[0.086,0.01],[0.15,-0.05],[0.148,-0.021],[0.056,-0.01],[0.075,0.01],[0.174,-0.049],[0.148,-0.074],[0.148,-0.097],[0.145,-0.172],[0.122,-0.196],[0.197,-0.271],[0,0],[0.343,0],[0.173,-0.099],[0.169,-0.149],[0.07,-0.126],[0,0],[-0.292,0.223],[-0.098,0.07],[-0.175,0.146],[0,0],[-0.341,-0.028],[-0.246,-0.195],[-0.12,-0.07],[0,0],[-0.663,0],[-0.123,-0.022],[-0.171,-0.048],[-0.143,-0.121],[-0.074,-0.147],[0,0],[0.27,-0.023],[0.211,-0.012],[0.197,0.011],[0.147,0],[0.32,-0.049],[0.346,-0.126],[0.124,0.049],[0.147,0.097],[0.196,0.321],[0.022,0.147],[0.074,0.148],[0.193,0.295],[0.221,0],[0.05,-0.098],[0.198,-0.268],[0.269,-0.05],[0.343,0],[0.173,0],[-0.052,-0.293],[-0.046,-0.342],[-0.073,-0.175],[-0.269,-0.2],[-0.294,-0.196],[-0.101,-0.272],[-0.048,-0.146],[-0.049,-0.121],[-0.048,-0.126],[-0.07,-0.121],[-0.245,-0.149],[-0.17,-0.071],[0.145,-0.122],[0.1,-0.05],[0.293,0.173],[0.125,0.075],[0.149,0.076],[0,0],[0.146,0],[0.145,0],[0.074,-0.592],[0,0],[0,-0.122],[0.025,-0.147],[0,-0.145],[-0.072,-0.12],[-0.269,-0.148],[-0.32,0],[-0.147,0.075],[-0.123,0.1],[0,0],[0.148,-0.224],[0.124,-0.073],[0.122,-0.072],[0.097,-0.074],[-0.295,-0.121],[-0.144,-0.047],[0,0],[0,0],[0,0],[0,0],[0.171,0],[0.123,-0.095],[0.273,-0.122],[0,0],[0.442,0.027],[0.246,0],[0.146,-0.072],[0.149,-0.146],[0,-0.244],[-0.124,-0.196],[-0.197,-0.171],[-0.218,0],[-0.151,0.025],[-0.121,0.024],[-0.147,0],[-0.174,-0.072],[-0.073,-0.145],[0,-0.249],[0.144,0],[0.147,0],[0.317,0.02],[0.319,0],[0.146,-0.025],[0,0],[0.174,-0.074],[0.175,0],[0,0],[0.244,0],[0.121,-0.024],[0.118,-0.05],[-0.273,-0.269],[-0.061,-0.011],[-0.068,0.007],[-0.198,-0.052],[-0.197,-0.149],[-0.021,-0.12],[0,-0.22],[0,-0.246],[0,-0.148],[0,-0.102],[0.643,0.022],[0,0],[0,-0.517],[-0.05,-0.122],[-0.024,-0.201],[-0.467,0],[-0.196,-0.021],[-0.125,-0.023],[-0.146,-0.048],[-0.147,-0.073],[-0.145,-0.096],[-0.098,-0.176],[0,-0.072],[0.074,-0.148],[0.145,-0.097],[0.071,-0.028],[0.058,0.008],[0.325,-0.077],[0.147,0],[0,0],[0.291,0],[0.172,0.022],[0.199,0.122],[0,0],[0.021,0.176],[-0.077,0.223],[0,0.615],[0,0],[0,0],[0.096,-0.149],[0.119,-0.145],[0,0],[0,-0.224],[-0.153,-0.197],[-0.221,0],[-0.147,0.027],[-0.246,0.048],[0,0],[-0.198,0],[-0.124,0],[0,0],[0.146,0],[0.146,0.025],[0,0],[0.322,0],[0.173,-0.047],[-0.097,-0.147],[-0.124,-0.148],[-0.137,-0.01],[-0.135,0.036],[-0.173,-0.029],[-0.119,-0.026],[-0.123,-0.022],[-0.246,-0.022],[-0.37,0],[0,0.267],[-0.029,0.176],[-0.051,-0.009],[-0.084,0.015],[-0.145,-0.12],[-0.073,-0.121],[0,-0.296],[0.053,-0.151],[0.075,-0.099],[0.123,-0.147],[0.05,-0.124],[0.021,-0.294],[0.021,-0.392],[0,0],[0,-0.393],[0.1,-0.126],[0.15,-0.099],[0.087,0.002],[0,0],[0.171,-0.026],[-0.024,-0.145],[-0.027,-0.222],[0,-0.247],[0.075,-0.148],[0.074,-0.126],[0.098,-0.144],[0.267,-0.196],[0.212,-0.035],[0.191,0.047],[0.123,-0.024],[0.122,-0.1],[0.05,-0.128],[0.072,-0.15],[0.097,-0.122],[0.145,-0.074],[0.122,-0.025],[0.124,0],[0.064,-0.011],[0.066,0.006],[0.173,-0.047],[0,0],[0,0],[0,0],[0.346,-0.073],[0.443,-0.171],[0.244,0],[0.198,0.07],[0.173,0.022],[0,0],[0.144,0],[0.145,0],[0.175,-0.028],[0.173,-0.051],[0.119,-0.098],[0.169,-0.198],[0.123,-0.102],[0.271,-0.1],[0,0],[0.615,0],[0.124,0],[0.12,-0.026],[0.196,-0.072],[0.098,-0.151],[0.074,-0.273],[0,-0.293],[-0.095,-0.096],[-0.292,-0.124],[-0.346,0],[-0.198,0.049],[-0.269,0.073],[-0.343,0],[-0.171,-0.046],[0,0],[-0.176,-0.048],[-0.344,0],[-0.089,0.013],[-0.079,-0.007],[-0.321,0.025],[-0.172,0.049],[-0.147,0.1],[-0.147,0.273],[-0.074,0.148],[-0.1,0.07],[-0.184,0.043],[-0.117,-0.011],[-0.319,0.025],[-0.318,0],[-0.172,-0.076],[-0.322,-0.22],[-0.245,0],[-0.318,0.148],[-0.097,0.127],[-0.124,0.101],[-0.121,0.022],[-0.166,0.011],[-0.14,-0.005],[-0.297,0.022],[-0.172,0.05],[-0.323,0.124],[-0.174,0.048],[-0.195,0.15],[-0.269,0.32],[-0.15,0.076],[-0.173,0],[0.097,-0.12],[0.124,-0.127],[0.099,-0.125],[0.096,-0.147],[0.147,-0.269],[0.049,-0.024],[0.07,0.012],[0.248,-0.097],[0,-0.149],[0,0],[0.15,-0.073],[0.126,-0.052],[0.148,-0.094],[0.075,-0.124],[0,-0.146],[-0.024,-0.148],[-0.099,-0.149],[-0.121,-0.072],[0,0],[-0.145,0],[-0.197,0.013],[-0.147,-0.007],[-0.149,0],[-0.495,0.023],[-0.199,0],[0,0.494],[0,0.147],[0,0.124],[-0.195,0],[-0.194,0],[-0.27,-0.022],[-0.273,0],[-0.318,0.072],[-0.124,0.052],[-0.172,0.048],[-0.071,0.031],[-0.057,-0.008],[0.023,-0.123],[0.049,-0.146],[0.049,-0.171],[0.15,-0.1],[0,0],[0.345,-0.027],[0.297,0],[0.175,-0.047],[0,0],[-0.151,-0.024],[-0.1,-0.012],[-0.074,0.006],[-0.24,-0.025],[-0.613,0],[-0.293,0.023],[-0.173,0],[0,0],[-0.415,0],[-0.396,0],[-0.173,0.028],[-0.15,0.027],[-0.123,0.021],[-0.219,0.075],[-0.084,0.013],[-0.078,-0.006],[-0.244,0.025],[-0.098,0.012],[-0.074,-0.007],[-0.195,0.025],[-0.12,0.024],[-0.168,0.048],[-0.176,0],[0.046,-0.123],[0.169,-0.343],[0.097,-0.145],[0.271,-0.22],[0.193,-0.024],[0,0],[0.174,0],[0.146,-0.1],[0.125,-0.074],[0,0],[0.174,0],[0.291,0],[0.15,-0.052],[0.146,-0.073],[0.071,-0.044],[0.055,0.01],[0.146,-0.05],[0.124,0],[0.06,-0.009],[0.071,0.007],[0.17,-0.021],[0.28,-0.059],[0.162,0.013],[0.193,0],[0,0],[0,0],[-0.221,0.075],[0,0],[-0.175,0],[-0.467,-0.122],[-0.297,0],[-0.391,0],[-0.152,-0.02],[0.073,-0.147],[0,-0.173],[-0.147,0],[-0.298,-0.051],[-0.1,0],[-0.172,0.076],[0,0],[-0.365,0],[-0.121,-0.051],[-0.32,-0.048],[0,0],[0,0],[0,0],[0,0],[-0.296,0],[-0.17,0.051],[0,0],[0,0],[0,0],[0.317,0],[0.171,-0.024],[0.097,-0.123],[0,0],[-0.021,-0.147],[-0.073,-0.199],[-0.124,-0.073],[-0.293,-0.122],[0,0],[-0.346,-0.021],[-0.294,0],[-0.149,-0.021],[-0.121,-0.021],[-0.321,-0.054],[-0.346,0],[-0.147,0],[-0.343,0.029],[0,0],[-0.322,-0.021],[-3.265,0],[-0.322,0]],\"v\":[[-88.283,-164.791],[-88.482,-164.791],[-88.677,-164.791],[-89.167,-164.498],[-89.561,-164.104],[-90.003,-164.104],[-90.447,-164.104],[-90.938,-164.202],[-91.426,-164.202],[-91.82,-164.302],[-92.461,-164.302],[-93.099,-164.302],[-94.378,-163.61],[-94.082,-162.924],[-93.884,-162.432],[-94.573,-161.943],[-95.361,-161.843],[-96.245,-162.038],[-96.664,-162.235],[-98.681,-162.235],[-99.98,-163.024],[-100.374,-163.122],[-101.454,-163.219],[-101.948,-163.219],[-102.339,-163.122],[-102.638,-162.726],[-103.126,-162.531],[-103.964,-162.531],[-104.307,-162.531],[-104.796,-162.531],[-105.388,-162.828],[-106.47,-162.531],[-107.969,-162.628],[-108.238,-162.628],[-108.435,-162.531],[-108.53,-162.531],[-108.633,-162.531],[-108.926,-162.432],[-109.319,-162.334],[-109.861,-162.088],[-109.616,-161.646],[-109.37,-161.45],[-109.174,-161.349],[-109.056,-161.349],[-108.926,-161.349],[-108.435,-161.104],[-108.191,-160.907],[-107.993,-160.711],[-107.844,-160.515],[-107.749,-160.123],[-107.749,-159.583],[-107.943,-159.731],[-108.09,-159.924],[-108.238,-160.123],[-108.332,-160.122],[-108.435,-160.123],[-108.68,-160.171],[-108.926,-160.221],[-109.174,-160.369],[-109.27,-160.369],[-109.37,-160.369],[-109.568,-160.515],[-109.811,-160.564],[-110.01,-160.614],[-110.301,-160.614],[-110.721,-160.666],[-111.091,-160.614],[-111.289,-160.465],[-111.384,-160.268],[-111.336,-160.07],[-111.138,-159.679],[-110.943,-159.484],[-110.697,-159.286],[-110.204,-159.091],[-109.811,-158.893],[-109.616,-158.844],[-109.418,-158.745],[-109.174,-158.697],[-108.73,-158.697],[-108.288,-158.697],[-108.044,-158.649],[-107.844,-158.5],[-107.647,-158.351],[-107.206,-158.055],[-107.059,-157.86],[-106.716,-157.468],[-106.566,-157.221],[-106.47,-157.028],[-106.47,-156.831],[-106.421,-156.534],[-106.566,-156.19],[-106.763,-156.24],[-107.206,-156.336],[-107.451,-156.435],[-107.57,-156.434],[-107.699,-156.435],[-107.993,-156.534],[-108.387,-156.729],[-108.583,-156.831],[-108.827,-156.877],[-109.073,-156.979],[-109.37,-157.123],[-109.568,-157.172],[-110.253,-157.42],[-110.598,-157.468],[-111.138,-157.713],[-111.336,-157.76],[-111.582,-157.959],[-111.776,-158.055],[-112.025,-158.257],[-112.318,-158.403],[-112.517,-158.597],[-112.762,-158.844],[-112.883,-158.844],[-113.008,-158.844],[-113.202,-158.942],[-113.4,-158.992],[-113.658,-159.091],[-114.568,-159.091],[-114.824,-159.042],[-115.268,-159.188],[-115.615,-159.286],[-116.214,-159.534],[-118.219,-159.508],[-118.219,-159.239],[-118.072,-159.042],[-117.676,-158.597],[-117.234,-158.304],[-117.132,-158.309],[-116.99,-158.304],[-116.792,-158.205],[-116.645,-158.01],[-116.25,-157.666],[-116.055,-157.519],[-115.906,-157.273],[-115.663,-157.075],[-115.466,-156.682],[-115.418,-156.482],[-115.268,-156.24],[-115.122,-155.834],[-115.122,-155.55],[-115.602,-155.55],[-115.858,-155.602],[-116.102,-155.653],[-116.301,-155.846],[-116.596,-155.994],[-116.693,-156.19],[-116.891,-156.286],[-117.186,-156.482],[-117.434,-156.682],[-117.727,-156.877],[-118.171,-157.221],[-118.367,-157.318],[-118.561,-157.468],[-118.758,-157.614],[-119.15,-157.906],[-119.346,-157.959],[-119.544,-157.959],[-120.035,-158.109],[-120.233,-158.257],[-120.332,-158.5],[-120.529,-158.697],[-120.724,-158.745],[-121.018,-158.893],[-121.215,-158.893],[-121.622,-158.942],[-122.345,-158.942],[-122.345,-158.612],[-122.198,-158.205],[-121.853,-157.614],[-121.757,-157.318],[-121.807,-157.028],[-121.807,-156.778],[-121.853,-156.583],[-121.853,-156.386],[-121.953,-156.19],[-122.247,-155.356],[-122.345,-155.107],[-122.444,-154.911],[-122.742,-154.86],[-123.082,-154.961],[-123.378,-155.107],[-123.721,-155.453],[-123.721,-155.653],[-123.674,-156.093],[-123.525,-156.286],[-123.182,-156.729],[-122.986,-156.93],[-122.888,-157.123],[-122.938,-157.318],[-123.132,-157.519],[-123.279,-157.812],[-123.479,-158.01],[-123.479,-158.205],[-123.426,-158.403],[-123.674,-158.794],[-123.919,-158.942],[-124.163,-159.141],[-124.41,-159.286],[-124.557,-159.484],[-124.901,-159.484],[-125.245,-159.484],[-125.443,-159.387],[-125.835,-159.286],[-126.033,-159.188],[-126.525,-158.942],[-126.77,-158.745],[-126.967,-158.649],[-127.167,-158.549],[-127.257,-158.55],[-127.361,-158.549],[-127.605,-158.45],[-127.85,-158.351],[-128.096,-158.205],[-128.54,-158.156],[-128.749,-158.205],[-129.904,-158.205],[-130.163,-158.156],[-130.406,-158.055],[-130.603,-157.959],[-131.009,-157.86],[-131.145,-157.86],[-131.49,-157.906],[-132.609,-157.872],[-132.866,-157.812],[-133.062,-157.76],[-133.259,-157.565],[-133.259,-157.372],[-133.161,-157.172],[-132.965,-157.123],[-132.764,-157.075],[-132.546,-157.075],[-132.324,-157.075],[-132.029,-156.979],[-131.784,-156.831],[-131.589,-156.635],[-131.49,-156.435],[-131.342,-156.24],[-131.193,-155.994],[-130.947,-155.945],[-130.555,-155.747],[-130.361,-155.747],[-130.173,-155.747],[-129.965,-155.747],[-129.77,-155.653],[-129.572,-155.453],[-129.177,-155.256],[-128.98,-155.159],[-128.786,-155.107],[-128.441,-154.768],[-128.589,-154.568],[-129.411,-154.568],[-129.621,-154.664],[-129.818,-154.715],[-130.014,-154.813],[-130.505,-154.961],[-130.751,-155.159],[-130.996,-155.305],[-131.193,-155.453],[-131.391,-155.653],[-131.757,-155.659],[-132.029,-155.653],[-132.275,-155.7],[-132.471,-155.7],[-132.719,-155.747],[-132.965,-155.994],[-133.408,-156.093],[-133.603,-156.19],[-134.145,-156.435],[-134.339,-156.635],[-134.538,-156.831],[-134.635,-157.028],[-134.833,-157.172],[-135.027,-157.172],[-135.865,-157.028],[-136.06,-156.93],[-136.306,-156.831],[-136.5,-156.682],[-136.749,-156.635],[-136.943,-156.482],[-137.436,-156.286],[-137.633,-156.24],[-137.831,-155.945],[-137.633,-155.453],[-137.436,-155.256],[-137.337,-155.059],[-137.266,-154.852],[-137.266,-153.24],[-138.507,-153.24],[-138.913,-153.386],[-139.158,-153.536],[-139.352,-153.734],[-139.562,-153.781],[-141.762,-153.827],[-141.961,-153.682],[-142.155,-153.289],[-142.352,-153.09],[-142.745,-152.994],[-143.337,-152.75],[-143.729,-152.702],[-144.122,-152.356],[-144.319,-152.157],[-144.76,-151.765],[-144.958,-151.617],[-145.156,-151.57],[-145.546,-151.57],[-145.893,-151.57],[-146.139,-151.523],[-146.383,-151.523],[-146.629,-151.373],[-146.875,-151.226],[-147.071,-151.08],[-147.265,-151.031],[-147.316,-150.784],[-147.513,-150.638],[-147.617,-150.636],[-147.712,-150.638],[-147.908,-150.584],[-148.007,-150.39],[-148.397,-149.9],[-148.448,-149.7],[-148.643,-149.653],[-148.842,-149.458],[-148.791,-149.063],[-148.397,-149.063],[-148.007,-148.966],[-147.513,-148.864],[-147.316,-148.719],[-147.17,-148.519],[-146.974,-148.519],[-146.456,-148.519],[-145.742,-148.519],[-145.352,-148.669],[-145.156,-148.719],[-144.958,-148.912],[-144.661,-149.063],[-144.366,-148.669],[-144.366,-148.278],[-144.366,-147.882],[-144.27,-147.684],[-144.219,-147.489],[-144.122,-147.281],[-144.122,-146.369],[-144.615,-145.425],[-144.81,-145.231],[-145.057,-145.081],[-145.697,-145.081],[-145.893,-145.081],[-146.139,-145.131],[-146.581,-145.131],[-146.974,-145.036],[-147.218,-144.833],[-147.463,-144.787],[-147.771,-144.637],[-148.68,-144.637],[-149.382,-144.736],[-149.676,-144.787],[-149.872,-144.885],[-150.317,-144.885],[-150.953,-144.833],[-151.396,-144.637],[-151.493,-144.344],[-151.493,-144.098],[-151.838,-143.703],[-152.049,-143.61],[-153.156,-143.61],[-153.611,-143.359],[-153.856,-143.262],[-154.393,-143.166],[-154.692,-143.166],[-155.084,-143.262],[-155.525,-143.262],[-155.967,-143.262],[-156.261,-143.166],[-156.511,-143.065],[-156.804,-143.02],[-156.999,-142.917],[-157.098,-142.721],[-157.098,-142.524],[-157.147,-142.333],[-157.244,-142.135],[-157.455,-142.036],[-158.523,-142.036],[-158.72,-141.887],[-158.867,-141.492],[-158.867,-141.099],[-158.574,-140.708],[-158.181,-140.411],[-157.984,-140.018],[-157.763,-140.01],[-157.592,-140.018],[-157.197,-140.018],[-156.804,-139.92],[-156.015,-139.624],[-155.819,-139.234],[-153.856,-139.234],[-153.068,-138.84],[-152.772,-138.788],[-152.578,-138.643],[-152.184,-138.394],[-151.742,-138.394],[-151.444,-138.346],[-151.101,-138.346],[-150.758,-138.346],[-150.561,-138.394],[-150.117,-138.591],[-149.86,-138.69],[-148.755,-138.69],[-148.3,-138.84],[-147.845,-138.887],[-147.662,-138.887],[-147.265,-138.84],[-147.118,-138.864],[-147.118,-138.065],[-147.316,-137.658],[-147.513,-137.562],[-147.759,-137.463],[-148.152,-137.265],[-148.35,-137.021],[-148.544,-137.021],[-148.743,-137.021],[-148.989,-137.117],[-149.104,-137.114],[-149.234,-137.117],[-149.431,-137.265],[-149.676,-137.317],[-150.095,-137.317],[-150.708,-137.265],[-150.953,-137.117],[-151.52,-137.021],[-151.791,-137.021],[-152.037,-137.068],[-152.33,-137.068],[-152.822,-137.265],[-153.156,-137.265],[-153.461,-137.265],[-153.66,-137.218],[-153.707,-136.727],[-154.874,-136.727],[-155.084,-136.627],[-155.28,-136.38],[-154.789,-135.789],[-154.542,-135.591],[-154.295,-135.448],[-153.986,-135.445],[-153.707,-135.448],[-153.068,-135.201],[-152.578,-135.005],[-152.134,-134.857],[-151.543,-134.562],[-151.347,-134.464],[-151.889,-134.416],[-152.085,-134.265],[-152.134,-134.068],[-151.987,-133.875],[-151.791,-133.825],[-151.396,-133.679],[-151.25,-133.481],[-151.053,-133.287],[-151.006,-133.088],[-150.805,-132.987],[-150.561,-132.89],[-150.366,-132.792],[-150.167,-132.692],[-149.676,-132.497],[-149.431,-132.4],[-149.187,-132.202],[-148.89,-132.055],[-148.3,-132.006],[-148.201,-132.006],[-147.956,-132.006],[-147.759,-132.151],[-147.858,-132.349],[-148.055,-132.596],[-148.249,-132.843],[-148.152,-133.136],[-147.956,-133.136],[-147.441,-133.136],[-146.726,-133.136],[-146.286,-132.937],[-146.087,-132.843],[-145.893,-132.792],[-145.684,-132.692],[-145.497,-132.742],[-145.497,-133.136],[-144.677,-133.136],[-144.465,-132.987],[-144.219,-132.843],[-143.706,-132.792],[-143.189,-132.843],[-143.042,-133.038],[-142.844,-133.136],[-142.646,-133.239],[-142.452,-133.287],[-142.305,-133.294],[-142.059,-133.333],[-141.909,-133.531],[-141.714,-133.628],[-141.419,-133.825],[-140.926,-133.679],[-140.535,-133.383],[-140.326,-133.287],[-139.747,-133.287],[-139.109,-133.239],[-138.913,-133.239],[-138.714,-133.136],[-138.074,-132.843],[-137.879,-132.643],[-137.633,-132.546],[-137.426,-132.497],[-136.072,-132.497],[-135.865,-132.447],[-135.671,-132.4],[-135.079,-132.055],[-134.88,-131.908],[-134.289,-131.859],[-134.095,-131.859],[-133.897,-131.859],[-133.749,-131.658],[-133.355,-131.268],[-133.161,-131.122],[-132.764,-131.071],[-132.568,-131.071],[-132.176,-130.974],[-131.982,-130.825],[-131.685,-130.471],[-131.685,-129.122],[-131.44,-128.713],[-131.293,-128.516],[-131.095,-128.317],[-130.898,-128.268],[-130.755,-128.268],[-130.603,-128.268],[-130.361,-128.122],[-130.113,-128.025],[-129.866,-127.876],[-129.77,-127.682],[-129.572,-127.289],[-129.522,-127.093],[-129.324,-126.99],[-129.03,-126.548],[-128.786,-126.349],[-128.641,-126.057],[-128.491,-125.863],[-128.294,-125.713],[-128.145,-125.319],[-127.951,-124.926],[-127.85,-124.733],[-127.507,-124.089],[-127.312,-123.942],[-126.917,-123.7],[-126.77,-123.38],[-126.77,-123.256],[-126.819,-122.964],[-126.967,-122.667],[-126.819,-122.371],[-126.426,-121.77],[-126.426,-120.762],[-126.624,-120.506],[-126.819,-120.132],[-126.77,-119.79],[-125.824,-119.79],[-125.824,-118.978],[-126.328,-118.978],[-126.72,-118.732],[-126.77,-118.536],[-126.525,-117.799],[-126.671,-117.212],[-127.409,-117.212],[-127.409,-116.421],[-127.115,-115.933],[-126.328,-115.736],[-125.936,-115.736],[-125.542,-115.639],[-125.126,-115.54],[-123.182,-115.54],[-123.182,-116.029],[-122.986,-116.375],[-122.198,-116.421],[-121.807,-116.325],[-121.413,-116.375],[-121.314,-115.833],[-121.314,-115.441],[-121.018,-115.05],[-120.625,-114.655],[-120.233,-114.36],[-119.839,-114.36],[-119.638,-114.359],[-119.448,-114.36],[-119.053,-114.163],[-118.661,-113.968],[-118.367,-113.576],[-117.97,-113.277],[-117.872,-112.884],[-117.97,-112.491],[-118.733,-112.491],[-119.249,-112.591],[-120.035,-112.591],[-121.215,-112.687],[-121.609,-112.884],[-121.706,-113.277],[-121.943,-113.29],[-122.099,-113.277],[-122.888,-113.377],[-123.77,-113.475],[-124.952,-113.178],[-124.658,-112.394],[-124.266,-112.098],[-123.868,-111.705],[-124.068,-111.313],[-124.853,-111.214],[-125.245,-110.92],[-125.641,-110.326],[-125.443,-109.738],[-124.74,-109.631],[-124.266,-109.642],[-123.479,-109.247],[-122.398,-108.361],[-122,-108.757],[-121.215,-109.346],[-119.986,-109.346],[-119.986,-110.721],[-121.116,-110.82],[-121.292,-110.814],[-121.512,-110.82],[-121.706,-111.214],[-121.926,-111.22],[-122.099,-111.214],[-122.495,-111.313],[-122.297,-111.705],[-121.535,-111.705],[-121.116,-111.605],[-120.724,-111.313],[-120.332,-111.117],[-119.939,-111.117],[-119.448,-111.016],[-118.661,-111.016],[-117.872,-110.92],[-117.482,-110.326],[-117.482,-110.131],[-117.872,-109.835],[-117.872,-109.443],[-118.267,-109.052],[-118.267,-108.853],[-117.97,-108.462],[-117.579,-108.069],[-117.379,-107.647],[-117.379,-106.494],[-118.439,-106.494],[-118.857,-106.594],[-119.249,-106.296],[-119.544,-105.903],[-119.986,-105.903],[-120.427,-105.903],[-120.82,-106.099],[-121.264,-105.954],[-121.264,-104.035],[-121.807,-104.134],[-122.297,-104.334],[-122.59,-103.941],[-122.986,-103.741],[-123.378,-103.645],[-123.77,-103.546],[-123.868,-102.908],[-123.868,-102.66],[-123.674,-102.169],[-123.378,-101.676],[-122.986,-101.579],[-122.59,-101.482],[-122.198,-101.185],[-121.807,-100.993],[-121.609,-100.204],[-122.398,-100.005],[-122.693,-99.419],[-122.198,-98.43],[-121.807,-97.648],[-121.609,-97.253],[-121.018,-97.152],[-120.427,-97.253],[-120.134,-97.648],[-119.741,-97.648],[-119.346,-97.648],[-118.954,-97.449],[-118.954,-97.058],[-119.053,-96.663],[-119.273,-96.65],[-119.448,-96.663],[-119.839,-96.469],[-119.839,-96.074],[-120.035,-95.678],[-120.427,-95.191],[-120.332,-94.597],[-120.035,-93.812],[-119.741,-93.421],[-119.346,-93.421],[-118.954,-93.421],[-118.561,-93.715],[-118.267,-94.108],[-118.072,-94.5],[-117.676,-94.597],[-117.087,-94.5],[-117.087,-92.926],[-117.379,-92.534],[-117.775,-92.437],[-118.171,-92.143],[-118.561,-91.849],[-118.661,-91.255],[-118.464,-90.667],[-118.072,-90.373],[-117.676,-89.98],[-116.792,-88.8],[-116.397,-88.503],[-116.203,-88.11],[-116.203,-87.72],[-115.711,-86.933],[-115.513,-86.144],[-114.728,-85.459],[-114.337,-85.259],[-114.04,-84.867],[-114.04,-84.08],[-113.745,-83.687],[-112.566,-83.294],[-111.776,-82.703],[-111.486,-82.309],[-111.091,-82.309],[-110.697,-82.309],[-110.301,-82.508],[-109.714,-82.605],[-109.516,-82.605],[-109.125,-82.508],[-108.956,-82.519],[-108.73,-82.508],[-108.633,-82.115],[-108.534,-81.718],[-108.044,-81.328],[-107.548,-81.132],[-107.184,-81.136],[-106.763,-81.132],[-106.371,-80.736],[-106.275,-80.346],[-105.882,-79.954],[-105.091,-79.954],[-104.307,-79.954],[-103.913,-80.245],[-103.52,-80.443],[-103.126,-80.736],[-103.126,-81.132],[-103.126,-81.525],[-102.832,-83.098],[-102.142,-83.783],[-101.948,-84.18],[-101.751,-84.768],[-101.85,-85.358],[-101.948,-85.751],[-101.85,-86.144],[-101.948,-86.933],[-102.339,-87.227],[-102.538,-87.619],[-102.638,-88.01],[-101.652,-88.503],[-101.257,-88.503],[-100.866,-88.602],[-100.081,-88.602],[-100.081,-89.29],[-100.081,-89.682],[-99.784,-90.074],[-99.392,-90.373],[-99.173,-90.378],[-98.997,-90.373],[-98.602,-90.667],[-98.602,-92.632],[-98.21,-93.126],[-98.309,-93.715],[-98.505,-94.108],[-98.602,-94.5],[-98.997,-94.7],[-98.801,-95.29],[-98.592,-95.294],[-98.406,-95.29],[-97.618,-95.384],[-97.227,-95.585],[-96.837,-95.877],[-96.837,-96.27],[-96.837,-96.663],[-96.737,-97.058],[-94.328,-97.058],[-94.378,-98.141],[-94.328,-98.533],[-92.953,-98.533],[-93,-97.352],[-92.953,-96.886],[-92.117,-96.957],[-91.749,-96.862],[-90.645,-97.648],[-90.249,-98.042],[-89.855,-98.43],[-89.464,-98.629],[-89.072,-98.629],[-88.71,-98.623],[-88.283,-98.629],[-87.889,-98.824],[-87.496,-98.923],[-87.496,-99.32],[-87.301,-99.708],[-86.906,-100.005],[-86.513,-100.302],[-86.12,-100.497],[-85.924,-100.894],[-85.628,-101.284],[-85.236,-101.38],[-84.745,-102.169],[-84.546,-102.56],[-84.151,-102.66],[-83.76,-102.857],[-83.76,-103.252],[-83.465,-103.645],[-83.072,-103.741],[-82.677,-104.134],[-82.677,-105.316],[-82.652,-105.389],[-82.503,-105.389],[-82.163,-105.339],[-82.064,-105.289],[-81.969,-105.24],[-81.865,-105.217],[-81.671,-105.068],[-81.572,-105.02],[-81.378,-104.802],[-81.251,-104.727],[-80.811,-104.626],[-80.023,-104.626],[-79.236,-104.134],[-78.206,-104.035],[-77.566,-104.035],[-77.172,-104.232],[-76.289,-104.727],[-75.796,-105.119],[-75.503,-105.609],[-74.714,-106.002],[-74.271,-106.009],[-73.927,-106.002],[-73.536,-106.099],[-73.046,-106.296],[-72.819,-106.29],[-72.552,-106.296],[-72.161,-106.494],[-71.768,-106.691],[-71.59,-106.684],[-71.374,-106.691],[-70.98,-106.987],[-70.586,-107.183],[-70.292,-107.577],[-69.896,-108.069],[-69.505,-108.658],[-68.693,-109.148],[-66.677,-109.148],[-65.868,-109.543],[-65.473,-109.936],[-64.982,-110.326],[-64.982,-110.721],[-65.378,-110.92],[-66.161,-110.326],[-66.259,-109.936],[-66.9,-109.835],[-67.147,-109.835],[-68.03,-110.131],[-68.523,-110.92],[-68.915,-110.92],[-69.309,-110.92],[-70.98,-111.117],[-71.374,-111.214],[-71.768,-111.51],[-72.161,-111.803],[-72.257,-112.27],[-72.257,-113.081],[-71.572,-113.178],[-71.033,-113.172],[-70.391,-113.178],[-69.997,-113.277],[-69.113,-113.475],[-68.424,-114.262],[-68.03,-114.163],[-67.734,-113.772],[-67.734,-112.787],[-67.538,-112.394],[-67.34,-112],[-66.456,-111.605],[-65.966,-111.902],[-65.868,-112.296],[-65.081,-112.787],[-64.296,-112.787],[-63.41,-112.787],[-63.016,-112.984],[-63.115,-113.772],[-63.508,-114.655],[-63.805,-115.144],[-64.589,-115.54],[-65.277,-116.226],[-65.277,-117.015],[-65.671,-117.212],[-65.771,-117.604],[-65.771,-117.998],[-66.161,-118.195],[-66.948,-118.491],[-67.34,-118.784],[-67.048,-119.177],[-66.654,-119.274],[-65.966,-118.585],[-65.771,-118.195],[-65.305,-118.195],[-64.883,-118.195],[-64.49,-118.29],[-64.099,-118.241],[-64,-119.766],[-64,-120.159],[-63.901,-120.552],[-63.707,-120.948],[-63.805,-121.341],[-64.198,-121.537],[-65.03,-121.732],[-65.868,-121.636],[-66.064,-121.24],[-66.482,-121.14],[-67.833,-121.14],[-67.443,-121.732],[-67.048,-121.832],[-66.654,-122.027],[-66.654,-122.419],[-67.443,-122.715],[-67.833,-122.914],[-67.538,-123.207],[-65.868,-123.207],[-65.868,-122.127],[-64.318,-122.127],[-63.901,-122.225],[-63.707,-122.617],[-62.868,-122.715],[-62.423,-122.715],[-61.348,-122.32],[-60.753,-122.522],[-60.46,-122.914],[-60.068,-123.307],[-60.361,-123.893],[-60.753,-124.386],[-61.348,-124.781],[-61.934,-124.682],[-62.329,-124.485],[-62.721,-124.386],[-63.115,-124.485],[-63.508,-124.781],[-63.707,-125.172],[-63.212,-125.566],[-62.82,-125.469],[-62.423,-125.368],[-61.591,-125.368],[-60.753,-125.368],[-60.361,-125.566],[-59.97,-125.761],[-59.677,-126.153],[-59.28,-125.96],[-58.641,-125.96],[-58.003,-125.96],[-57.607,-126.057],[-57.509,-126.452],[-58.297,-127.041],[-58.492,-127.041],[-58.689,-127.041],[-59.18,-127.337],[-59.677,-127.831],[-59.773,-128.221],[-59.724,-128.786],[-59.773,-129.401],[-59.677,-129.791],[-59.724,-130.039],[-58.1,-130.039],[-58.1,-131.195],[-58.887,-132.252],[-58.887,-132.643],[-58.986,-133.239],[-60.164,-133.239],[-60.656,-133.333],[-61.049,-133.432],[-61.444,-133.628],[-61.836,-133.825],[-62.132,-134.216],[-62.229,-134.808],[-62.229,-135.005],[-61.836,-135.201],[-61.542,-135.591],[-61.318,-135.599],[-61.151,-135.591],[-60.264,-135.69],[-59.871,-135.789],[-59.081,-135.789],[-58.297,-135.789],[-57.904,-135.494],[-57.509,-135.005],[-57.509,-134.808],[-57.706,-134.416],[-58.003,-133.825],[-57.509,-132.349],[-57.017,-132.546],[-57.017,-135.69],[-56.723,-136.086],[-56.335,-136.481],[-56.335,-136.675],[-56.624,-137.167],[-57.118,-137.658],[-57.706,-137.562],[-58.1,-137.364],[-58.764,-137.364],[-59.378,-137.364],[-59.871,-137.463],[-60.164,-137.412],[-60.164,-138.643],[-59.773,-138.739],[-59.378,-138.542],[-59.012,-138.542],[-58.199,-138.643],[-57.807,-138.937],[-58.1,-139.33],[-58.495,-139.722],[-58.872,-139.669],[-59.28,-139.624],[-59.677,-139.92],[-60.068,-140.018],[-60.46,-140.018],[-61.074,-140.214],[-62.031,-140.115],[-62.031,-139.432],[-62.229,-139.036],[-62.4,-139.023],[-62.626,-139.036],[-63.016,-139.33],[-63.016,-139.722],[-62.921,-140.507],[-62.721,-140.903],[-62.329,-141.002],[-62.031,-141.394],[-62.031,-141.789],[-62.031,-142.575],[-61.836,-143.657],[-60.656,-143.657],[-60.46,-144.637],[-60.164,-145.036],[-59.637,-145.127],[-59.378,-145.131],[-58.986,-145.131],[-58.592,-145.425],[-58.689,-145.818],[-58.79,-146.407],[-58.495,-146.997],[-58.199,-147.39],[-58.003,-147.786],[-57.607,-148.081],[-56.823,-148.473],[-56.253,-148.419],[-55.643,-148.374],[-55.249,-148.473],[-55.055,-148.864],[-54.956,-149.257],[-54.758,-149.653],[-54.365,-149.851],[-53.971,-150.045],[-53.579,-150.045],[-53.186,-150.144],[-52.983,-150.144],[-52.792,-150.144],[-52.499,-150.536],[-52.598,-151.002],[-56.23,-151.002],[-57.216,-151.226],[-56.335,-151.424],[-55.249,-152.111],[-54.661,-151.913],[-54.169,-151.617],[-53.723,-151.617],[-53.28,-151.617],[-52.888,-151.715],[-52.499,-151.715],[-52.007,-151.812],[-51.71,-152.208],[-51.414,-152.601],[-50.926,-153.09],[-50.63,-153.485],[-49.84,-153.585],[-49.451,-153.585],[-47.876,-153.682],[-47.482,-153.781],[-47.09,-153.878],[-46.697,-154.271],[-46.401,-154.664],[-46.302,-155.453],[-46.503,-156.24],[-46.895,-156.435],[-47.777,-156.534],[-48.663,-156.435],[-49.155,-156.141],[-49.941,-156.041],[-50.826,-156.24],[-51.318,-156.435],[-51.906,-156.635],[-52.4,-156.831],[-53.28,-156.635],[-53.533,-156.633],[-53.775,-156.635],[-54.661,-156.435],[-55.055,-156.141],[-55.448,-155.846],[-55.742,-155.059],[-55.939,-154.664],[-56.335,-154.568],[-56.831,-154.557],[-57.216,-154.568],[-58.052,-154.468],[-58.887,-154.568],[-59.18,-154.961],[-60.215,-155.059],[-60.855,-155.059],[-61.542,-154.374],[-61.74,-153.979],[-62.132,-153.781],[-62.525,-153.781],[-62.956,-153.781],[-63.41,-153.781],[-64.198,-153.585],[-64.589,-153.289],[-65.473,-153.09],[-65.868,-152.799],[-66.361,-152.406],[-66.948,-151.424],[-67.34,-151.226],[-67.734,-151.424],[-67.538,-151.812],[-67.147,-152.011],[-66.948,-152.406],[-66.654,-152.799],[-66.161,-153.585],[-65.977,-153.584],[-65.771,-153.585],[-65.13,-153.878],[-65.18,-154.271],[-65.18,-155.159],[-64.689,-155.55],[-64.296,-155.653],[-63.901,-155.945],[-63.901,-156.336],[-63.901,-156.729],[-64.099,-157.123],[-64.395,-157.519],[-64.783,-157.519],[-65.18,-157.519],[-65.574,-157.42],[-66.066,-157.419],[-66.556,-157.42],[-66.948,-157.318],[-68.225,-157.318],[-68.72,-157.494],[-68.72,-156.24],[-68.815,-155.846],[-68.72,-155.525],[-69.214,-155.356],[-69.701,-155.55],[-70.391,-155.55],[-71.078,-155.55],[-71.863,-155.159],[-72.257,-155.059],[-72.65,-154.768],[-72.878,-154.76],[-73.046,-154.768],[-72.947,-155.159],[-72.749,-155.55],[-72.552,-156.041],[-72.161,-156.336],[-71.768,-156.336],[-70.883,-156.336],[-70.096,-156.435],[-69.701,-156.729],[-69.799,-157.123],[-70.193,-157.318],[-70.441,-157.318],[-70.688,-157.318],[-71.324,-157.42],[-72.849,-157.123],[-73.633,-157.123],[-74.051,-157.028],[-76.757,-157.028],[-77.81,-157.221],[-78.844,-157.028],[-79.335,-156.93],[-79.728,-156.729],[-80.124,-156.635],[-80.714,-156.336],[-80.944,-156.336],[-81.204,-156.336],[-81.796,-156.141],[-82.038,-156.141],[-82.285,-156.141],[-82.779,-155.945],[-83.172,-155.846],[-83.661,-155.653],[-84.055,-155.846],[-83.954,-156.24],[-83.366,-157.028],[-83.072,-157.42],[-82.185,-157.812],[-81.671,-157.906],[-75.035,-157.906],[-74.617,-158.01],[-74.323,-158.403],[-73.908,-158.5],[-68.352,-158.5],[-67.928,-158.597],[-67.147,-158.597],[-66.753,-158.794],[-66.556,-159.188],[-66.323,-159.2],[-66.161,-159.188],[-65.771,-159.387],[-65.378,-159.387],[-65.189,-159.385],[-64.982,-159.387],[-64.589,-159.679],[-63.836,-159.695],[-63.309,-159.679],[-62.82,-159.776],[-62.82,-160.666],[-64,-160.762],[-64.589,-160.564],[-64.783,-160.564],[-65.18,-160.762],[-66.456,-160.96],[-67.246,-160.86],[-68.225,-160.96],[-68.62,-161.154],[-68.225,-161.45],[-68.424,-161.843],[-68.815,-161.843],[-69.555,-162.038],[-69.799,-162.038],[-70.214,-161.745],[-72.137,-161.745],[-72.947,-162.235],[-73.339,-162.334],[-74.223,-162.334],[-76.583,-162.334],[-77.172,-162.334],[-78.647,-162.334],[-79.432,-162.334],[-80.223,-162.235],[-80.613,-161.894],[-84.055,-161.894],[-83.954,-162.334],[-83.193,-162.334],[-82.382,-162.235],[-82.089,-162.628],[-81.892,-163.072],[-70.096,-163.072],[-70.096,-163.513],[-70.49,-163.906],[-70.883,-164.104],[-71.768,-164.302],[-72.257,-164.302],[-73.142,-164.401],[-73.927,-164.498],[-74.323,-164.697],[-74.714,-164.791],[-75.599,-164.791],[-76.484,-164.791],[-76.878,-164.697],[-77.763,-164.697],[-78.253,-164.697],[-79.068,-164.89],[-87.47,-164.937]],\"c\":true},\"ix\":2},\"nm\":\"Path 1\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":1,\"ty\":\"sh\",\"ix\":2,\"ks\":{\"a\":0,\"k\":{\"i\":[[0.392,0.1],[0.13,-0.046],[0.245,0.309],[0.688,0],[0.395,0],[0,0],[0,0],[0,0],[0,0],[0.157,-0.468],[0,0],[0,0],[0,0],[0.589,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[-0.199,-0.496],[0,0],[0.395,0.396],[0.488,0],[0,0],[0.292,0.398],[0.492,-0.096],[0,0],[0,0],[0.491,-0.098],[0,0],[0,0],[0.395,0],[0,0],[0,0],[0,0],[0,0],[0.393,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[-0.395,0],[0,0],[-0.689,-0.198],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[-0.195,0.593],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[-0.492,0.096],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0.496,0.196],[0.392,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0.394,0],[0,-0.493],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[-0.492,0.195],[0,0],[0,0],[0,0],[0,0],[0,0],[0.788,0],[0,0],[0,0],[0.395,0],[0,0],[0,0],[0,0],[0,0],[0,0],[-0.787,-0.295],[-0.492,0],[-0.099,0.39],[0,0],[-0.391,0],[-0.393,0.195],[-0.593,0],[0,0],[-0.384,-0.084],[0,0],[0,0],[0,0],[-0.688,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[-0.296,0.394],[0,0],[-0.986,0],[0,0],[0,0.489],[0,0],[0.494,0.393],[0,0],[0,0],[0,0],[0,0],[0,0],[-0.395,0.097],[0,0],[0,0],[0,0],[0,0],[-0.392,0.392],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[-0.493,0.101],[0,0],[0,0],[0,0],[0,0],[0.39,0],[0.394,0.29],[0.79,0],[0,0],[0,0],[0,0],[0,0],[0,0],[-0.784,0],[0,0],[0,0],[-0.196,0.342],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0.198,0.395],[0,0],[0,0],[0,0]],\"o\":[[-0.149,-0.037],[-0.218,0.077],[-0.395,-0.489],[-0.687,0],[-0.394,0],[-0.589,0.489],[-1.084,-1.081],[0,0],[0,0],[-0.294,0.883],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[-0.886,-0.294],[-0.59,0.686],[0,0],[0,0],[0.591,0.591],[0,0],[0.195,0.486],[0,0],[-0.393,-0.388],[0,0],[0,0],[-0.297,-0.393],[-0.491,0.101],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0.393,0],[0,0],[0.688,0.198],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0.196,-0.588],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0.494,-0.097],[0,0],[0,0],[0,0],[-0.883,0.588],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[-0.785,0.396],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[-0.491,-0.196],[-0.395,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[-0.392,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0.49,-0.197],[0,0],[0,0],[0,0],[0,0],[0,0],[-0.785,0],[0,0],[0,0],[-0.394,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0.786,0.296],[0.494,0],[0.096,-0.395],[0,0],[0.397,0],[0.393,-0.196],[0,0],[0.193,0.491],[1.376,0.293],[0,0],[0,0],[0,0],[0.688,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0.293,-0.393],[0,0],[0,0],[0.59,0],[0,-0.492],[0,0],[-0.49,-0.398],[0,0],[0,0],[0,0],[0,0],[0,0],[0.393,-0.099],[0,0],[0,0],[0,0],[0,0],[0.391,-0.392],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0.491,-0.097],[0,0],[0,0],[0,0],[0,0],[-0.394,0],[-0.392,-0.297],[-0.787,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0.79,0],[0,0],[0,0],[0.392,-0.688],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[-0.196,-0.394],[0,0],[-0.979,-0.494],[0,0]],\"v\":[[-156.114,-161.45],[-156.528,-161.394],[-157.197,-161.549],[-158.081,-162.334],[-159.361,-162.235],[-159.656,-161.154],[-161.522,-161.253],[-163.291,-162.334],[-165.16,-162.432],[-166.734,-162.432],[-166.538,-160.564],[-167.421,-160.564],[-168.6,-161.253],[-169.485,-161.646],[-171.256,-161.646],[-171.351,-160.86],[-172.926,-160.86],[-175.482,-161.054],[-177.35,-160.268],[-178.234,-159.091],[-175.976,-159.091],[-173.124,-158.01],[-172.434,-157.906],[-171.845,-156.729],[-173.812,-156.93],[-175.187,-157.812],[-177.35,-157.812],[-178.824,-158.304],[-179.809,-159.387],[-181.382,-159.188],[-182.564,-159.877],[-183.446,-159.877],[-184.431,-159.679],[-184.627,-158.794],[-184.627,-157.713],[-186,-157.713],[-187.674,-158.205],[-188.556,-158.205],[-189.442,-157.42],[-190.328,-157.028],[-191.312,-157.028],[-192.39,-157.028],[-192.588,-156.24],[-194.556,-156.336],[-194.656,-155.453],[-193.376,-155.256],[-192.685,-155.059],[-192.784,-153.878],[-191.212,-153.585],[-190.328,-152.503],[-188.656,-152.406],[-187.181,-151.913],[-185.511,-151.715],[-184.525,-152.896],[-183.936,-153.585],[-181.969,-153.781],[-183.248,-152.896],[-184.135,-151.715],[-183.936,-150.536],[-181.086,-150.638],[-178.728,-150.638],[-177.843,-151.812],[-175.976,-151.617],[-173.516,-151.617],[-172.04,-152.601],[-171.058,-153.485],[-170.863,-154.174],[-169.584,-154.174],[-167.815,-154.86],[-166.144,-154.664],[-167.323,-154.568],[-168.8,-153.781],[-170.468,-152.702],[-168.309,-152.799],[-167.323,-152.601],[-166.439,-152.503],[-167.028,-151.715],[-169.191,-151.715],[-170.959,-151.617],[-172.04,-151.226],[-173.027,-151.13],[-175.286,-150.536],[-176.464,-150.536],[-177.644,-150.341],[-177.644,-149.356],[-176.367,-149.161],[-175.482,-148.573],[-174.99,-147.589],[-172.336,-147.193],[-173.516,-146.997],[-175.09,-147.096],[-176.96,-148.278],[-179.513,-149.653],[-181.481,-149.752],[-184.431,-150.045],[-184.627,-148.966],[-183.543,-148.081],[-182.07,-146.903],[-179.513,-145.327],[-177.843,-144.637],[-175.187,-144.44],[-175.876,-143.755],[-176.858,-143.359],[-176.858,-142.183],[-179.317,-143.852],[-180.99,-144.148],[-183.052,-143.951],[-184.525,-143.657],[-186,-142.966],[-186,-141.887],[-185.906,-141.099],[-184.431,-140.804],[-182.266,-140.804],[-180.496,-141.002],[-182.167,-140.115],[-181.676,-139.036],[-180.202,-138.84],[-179.121,-139.132],[-177.057,-140.507],[-177.644,-139.234],[-179.218,-138.15],[-180.99,-138.051],[-183.739,-138.937],[-185.807,-139.92],[-188.068,-139.821],[-187.577,-138.739],[-187.28,-137.167],[-189.148,-136.872],[-189.935,-135.789],[-188.556,-134.317],[-186.788,-133.628],[-184.922,-134.216],[-184.232,-134.317],[-182.463,-133.921],[-181.086,-133.921],[-179.809,-134.611],[-178.631,-134.02],[-177.154,-134.02],[-176.464,-134.317],[-174.892,-134.317],[-174.99,-133.136],[-172.926,-133.239],[-171.747,-133.239],[-170.175,-133.825],[-169.388,-134.317],[-168.208,-135.398],[-168.6,-136.481],[-170.175,-135.789],[-170.665,-137.265],[-168.995,-137.562],[-168.503,-138.937],[-169.09,-140.214],[-167.914,-140.214],[-165.75,-140.115],[-164.864,-140.314],[-164.764,-141.593],[-165.651,-142.771],[-163.982,-142.771],[-162.898,-142.966],[-163.786,-144.244],[-165.358,-144.637],[-166.931,-144.935],[-168.208,-144.244],[-169.191,-143.657],[-169.584,-144.637],[-168.009,-145.036],[-167.914,-145.719],[-166.734,-146.308],[-165.259,-146.308],[-164.571,-145.523],[-162.606,-145.231],[-161.326,-145.523],[-159.853,-146.508],[-161.622,-147.786],[-159.656,-147.882],[-158.867,-146.997],[-157.294,-147.096],[-155.43,-147.684],[-156.214,-149.063],[-157.491,-149.554],[-155.232,-149.554],[-153.856,-149.554],[-153.068,-150.437],[-151.396,-150.934],[-149.727,-152.011],[-147.562,-152.702],[-145.792,-153.979],[-144.023,-154.078],[-143.042,-154.664],[-143.826,-155.653],[-145.103,-155.159],[-147.17,-154.664],[-148.055,-155.059],[-150.512,-154.961],[-150.117,-155.846],[-148.249,-156.24],[-146.087,-156.24],[-143.924,-156.24],[-141.862,-156.729],[-139.893,-157.318],[-137.732,-157.42],[-137.141,-158.5],[-137.536,-159.877],[-139.206,-159.484],[-140.682,-159.679],[-141.072,-160.666],[-143.042,-161.646],[-144.516,-161.253],[-146.581,-161.253],[-148.842,-160.666],[-148.743,-161.549],[-150.414,-161.646],[-151.889,-161.549],[-152.38,-162.235],[-153.856,-162.334],[-155.819,-162.828]],\"c\":true},\"ix\":2},\"nm\":\"Path 2\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":2,\"ty\":\"sh\",\"ix\":3,\"ks\":{\"a\":0,\"k\":{\"i\":[[0.049,-0.009],[0.172,-0.022],[0.119,0],[0,0],[0.127,0],[0.146,-0.077],[0.02,-0.175],[0,-0.146],[0,-0.151],[0,-0.196],[0.344,0.024],[0.145,0],[0,0],[0,0],[0.07,0.011],[0.085,-0.043],[0,-0.198],[0.025,-0.123],[0,-0.171],[0,-0.173],[0,0],[0.61,-0.048],[0.173,-0.022],[0.124,-0.021],[0.152,-0.024],[0.069,0.007],[0.06,-0.012],[0.149,-0.072],[0.148,-0.147],[0,0],[0,0],[-0.049,0.148],[-0.074,0.124],[-0.122,0.072],[-0.16,-0.032],[-0.112,0.02],[-0.125,0.027],[-0.174,0.055],[-0.134,-0.016],[-0.129,0.027],[-0.17,0.029],[-0.118,0],[-0.27,0.099],[-0.124,0.05],[-0.172,0],[-0.301,-0.072],[-0.122,-0.024],[-0.195,0],[0,0],[0.023,0.121],[0,0.319],[-0.343,0],[-0.2,-0.097],[-0.099,-0.07],[-0.123,-0.125],[-0.416,0],[-0.414,0.024],[0,0.198],[0,0.146],[0,0],[0.343,-0.027],[0.148,0],[0.293,0],[0.147,0.024],[-0.171,0.199],[-0.176,0.175],[-0.148,0.196],[0,0],[0.083,0]],\"o\":[[-0.197,0.024],[-0.122,0],[0,0],[-0.122,0],[-0.17,0.024],[-0.15,0.072],[-0.027,0.124],[0,0.147],[0,0.195],[-0.345,0],[-0.147,0],[0,0],[0,0],[-0.072,0.011],[-0.098,-0.015],[-0.147,0.07],[0,0.146],[-0.05,0.148],[0,0.173],[0,0],[-0.614,0.078],[-0.198,0],[-0.125,0.027],[-0.145,0.028],[-0.061,0.014],[-0.066,-0.006],[-0.147,0.028],[-0.194,0.102],[0,0],[0,0],[0.099,-0.099],[0.05,-0.122],[0.075,-0.125],[0.131,-0.087],[0.114,0.022],[0.12,-0.025],[0.172,-0.047],[0.138,-0.035],[0.124,0.015],[0.175,-0.02],[0.123,-0.021],[0.275,-0.021],[0.12,-0.022],[0.148,-0.071],[0.323,0],[0.12,0.028],[0.178,0.05],[0,0],[-0.022,-0.148],[-0.075,-0.296],[0,-0.345],[0.244,0],[0.12,0.049],[0.122,0.078],[0.293,0.294],[0.419,0],[0,-0.196],[0,-0.146],[0,0],[-0.344,0],[-0.149,0],[-0.291,0.024],[-0.148,0],[0.147,-0.223],[0.148,-0.172],[0.169,-0.169],[0,0],[-0.098,0],[-0.042,0]],\"v\":[[87.005,-155.256],[86.514,-155.159],[86.125,-155.059],[85.725,-155.059],[85.333,-154.961],[84.844,-154.86],[84.451,-154.568],[84.451,-154.174],[84.548,-153.781],[84.451,-153.289],[83.565,-153.289],[83.172,-153.386],[82.678,-153.386],[82.286,-153.386],[82.074,-153.398],[81.796,-153.386],[81.504,-152.994],[81.599,-152.601],[81.203,-152.406],[81.402,-152.011],[81.402,-151.325],[79.831,-151.226],[79.337,-151.13],[78.941,-151.031],[78.548,-150.833],[78.349,-150.833],[78.156,-150.833],[77.763,-150.638],[77.37,-150.244],[76.98,-149.851],[77.37,-149.554],[77.763,-149.752],[77.763,-150.144],[77.96,-150.536],[78.406,-150.56],[78.749,-150.536],[79.141,-150.638],[79.536,-150.934],[79.943,-150.937],[80.32,-150.934],[80.712,-151.226],[81.103,-151.226],[81.893,-151.325],[82.286,-151.424],[82.48,-151.812],[83.272,-151.523],[83.661,-151.424],[84.178,-151.325],[84.941,-151.325],[84.941,-151.715],[84.645,-152.503],[85.432,-152.994],[86.023,-152.799],[86.415,-152.702],[86.611,-152.305],[87.618,-151.913],[88.674,-152.011],[88.773,-152.503],[88.674,-152.896],[88.674,-153.386],[87.793,-153.386],[87.397,-153.289],[86.611,-153.289],[86.22,-153.386],[86.611,-153.979],[87.105,-154.374],[87.497,-154.86],[87.397,-155.256],[87.139,-155.268]],\"c\":true},\"ix\":2},\"nm\":\"Path 3\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":3,\"ty\":\"sh\",\"ix\":4,\"ks\":{\"a\":0,\"k\":{\"i\":[[-0.098,-0.586],[0,0],[-0.099,-0.492],[0,0],[0,0],[0,0],[-0.492,-0.196],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0.394,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0.39],[-0.488,-0.195],[0,0],[0,0],[0,0],[0.884,0.394],[0,0],[0,0],[0,0],[0.395,0.102],[0,0.392],[0.394,0.196],[0.883,0.29],[0,0],[0,0],[0.394,0.093],[0,0]],\"o\":[[0,0],[0.589,0],[0.095,0.49],[0,0],[0,0],[0,0],[0.491,0.199],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0.491,0],[0,0],[0,0],[0,0],[0,-0.392],[0.494,0.197],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[-0.39,-0.095],[0,-0.396],[-0.392,-0.197],[-0.886,-0.299],[0,0],[0,0],[-0.392,-0.101],[0,0]],\"v\":[[-199.274,-154.078],[-197.801,-154.078],[-197.307,-153.386],[-198.484,-153.09],[-200.355,-153.09],[-201.14,-152.799],[-199.863,-152.011],[-199.766,-151.13],[-201.338,-151.226],[-202.42,-151.031],[-202.126,-149.752],[-203.11,-149.161],[-203.11,-147.982],[-201.832,-147.882],[-201.832,-146.607],[-200.257,-145.818],[-198.879,-146.011],[-197.503,-146.407],[-195.638,-146.508],[-194.753,-145.523],[-196.424,-145.036],[-198.094,-145.036],[-199.274,-144.44],[-197.604,-143.557],[-196.717,-142.183],[-193.866,-141.593],[-191.705,-141.887],[-189.735,-141.394],[-189.05,-142.183],[-188.165,-142.183],[-187.97,-143.166],[-187.773,-144.244],[-186.298,-143.657],[-185.807,-144.44],[-184.037,-144.344],[-182.758,-145.231],[-182.758,-146.703],[-184.724,-147.291],[-186,-147.684],[-186.592,-148.669],[-186.592,-149.458],[-187.773,-150.144],[-188.758,-149.458],[-189.442,-150.437],[-190.426,-151.325],[-192.49,-151.812],[-193.573,-152.799],[-194.556,-153.682],[-196.228,-154.86],[-197.307,-154.961]],\"c\":true},\"ix\":2},\"nm\":\"Path 4\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":4,\"ty\":\"sh\",\"ix\":5,\"ks\":{\"a\":0,\"k\":{\"i\":[[0.244,0],[0.17,0.048],[0.123,0.024],[0,0],[0,0],[-0.172,-0.074],[-0.145,-0.07],[-0.2,0],[0,0],[-0.194,0.122],[-0.023,0.15],[0,0.15],[0.027,0.148],[0.075,0.122],[0.248,0]],\"o\":[[-0.196,0],[-0.128,-0.025],[0,0],[0,0],[0.197,0.022],[0.172,0.073],[0.149,0.078],[0,0],[0.246,0],[0.124,-0.073],[0.028,-0.122],[0,-0.17],[-0.023,-0.124],[-0.123,-0.195],[-0.243,0]],\"v\":[[148.352,-153.979],[147.863,-154.174],[147.464,-154.271],[147.17,-153.878],[147.17,-153.09],[147.662,-152.994],[148.055,-152.702],[148.451,-152.406],[148.646,-152.406],[149.235,-152.601],[149.628,-152.799],[149.727,-153.192],[149.53,-153.585],[149.53,-153.979],[148.941,-154.271]],\"c\":true},\"ix\":2},\"nm\":\"Path 5\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":5,\"ty\":\"sh\",\"ix\":6,\"ks\":{\"a\":0,\"k\":{\"i\":[[0.274,-0.124],[0.121,-0.049],[0.171,-0.073],[0.165,0],[0.14,-0.033],[0.149,-0.05],[0.297,-0.023],[0.348,0],[0.152,0],[0.028,-0.296],[0.075,-0.148],[0.195,-0.047],[0.133,0.012],[0.131,-0.022],[0.149,-0.051],[0.171,-0.072],[0.07,-0.098],[-0.123,-0.074],[-0.241,0],[-0.295,0],[0,0],[-0.148,-0.121],[-0.169,-0.097],[-0.149,0],[-0.098,-0.046],[-0.146,-0.05],[-0.225,0],[-0.196,0.026],[-0.151,0.072],[-0.197,0.049],[-0.125,0],[-0.116,-0.009],[-0.149,0.027],[-0.125,0.049],[-0.171,0.051],[-0.294,0],[-0.611,0.049],[0,0.197],[-0.146,0.25],[-0.15,0.123],[-0.069,-0.018],[-0.063,0.038],[-0.148,0.101],[-0.123,0.076],[0.123,0.073],[0.024,0.025],[0,0],[0.248,0.296],[0.124,0.071],[0.083,-0.016],[0.048,0.009],[0.174,0]],\"o\":[[-0.121,0.048],[-0.147,0.075],[-0.166,0.07],[-0.127,-0.001],[-0.147,0.022],[-0.292,0.097],[-0.315,0.049],[-0.146,0],[0,0.296],[0,0.172],[-0.098,0.196],[-0.14,0.029],[-0.125,-0.013],[-0.147,0.028],[-0.171,0.075],[-0.125,0.054],[0.07,0.149],[0.2,0.15],[0.302,0],[0,0],[0.221,0.029],[0.127,0.102],[0.121,0.052],[0.12,0],[0.147,0.078],[0.195,0.054],[0.22,0],[0.175,-0.022],[0.173,-0.103],[0.126,-0.026],[0.12,-0.012],[0.142,0.01],[0.123,-0.026],[0.171,-0.075],[0.269,-0.099],[0.614,0],[0.026,-0.195],[0.029,-0.297],[0.075,-0.145],[0.05,-0.035],[0.071,0.018],[0.146,-0.094],[0.123,-0.074],[-0.151,-0.073],[-0.025,0],[0,0],[0,-0.394],[-0.098,-0.124],[-0.058,-0.045],[-0.058,0.011],[-0.148,-0.026],[-0.319,0]],\"v\":[[156.999,-153.682],[156.61,-153.585],[156.314,-153.192],[155.826,-153.122],[155.428,-153.09],[155.035,-152.896],[154.246,-152.601],[153.365,-152.601],[152.97,-152.503],[152.97,-151.715],[152.774,-151.325],[152.383,-150.934],[151.978,-150.932],[151.595,-150.934],[151.199,-150.734],[150.712,-150.638],[150.615,-150.244],[150.808,-149.851],[151.394,-149.653],[152.184,-149.851],[152.383,-149.851],[152.774,-149.458],[153.069,-149.063],[153.465,-148.966],[153.758,-148.769],[154.152,-148.573],[154.743,-148.573],[155.331,-148.573],[155.723,-148.864],[156.116,-149.257],[156.512,-149.257],[156.863,-149.252],[157.296,-149.257],[157.691,-149.356],[157.986,-149.752],[158.772,-149.752],[160.344,-149.851],[160.441,-150.341],[160.54,-151.13],[160.837,-151.523],[161.022,-151.521],[161.23,-151.523],[161.525,-151.913],[161.92,-152.111],[161.525,-152.305],[161.525,-152.406],[158.969,-152.406],[158.772,-153.386],[158.576,-153.781],[158.35,-153.792],[158.184,-153.781],[157.788,-153.979]],\"c\":true},\"ix\":2},\"nm\":\"Path 6\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":6,\"ty\":\"sh\",\"ix\":7,\"ks\":{\"a\":0,\"k\":{\"i\":[[0.067,-0.017],[0.123,-0.049],[0.124,-0.048],[0.124,0],[0.184,0.018],[0.221,-0.036],[0.122,-0.027],[0.174,-0.073],[0.2,0],[0.173,0.053],[0,0],[-0.321,-0.196],[-0.148,-0.074],[-0.394,0],[-0.194,0.05],[-0.147,0.078],[-0.121,0.099],[-0.099,0.12],[-0.145,0.098],[-0.121,0.049],[-0.147,0.049],[-0.149,0.049],[-0.264,0.048],[0,0],[0.144,0.022],[0,0],[0.147,0],[0.217,0],[0.126,0]],\"o\":[[-0.121,0.025],[-0.121,0.05],[-0.124,0.05],[-0.222,0.038],[-0.184,-0.019],[-0.124,0.027],[-0.175,0.048],[-0.171,0.075],[-0.195,0],[0,0],[0.273,0.27],[0.148,0.094],[0.319,0.196],[0.219,0],[0.148,-0.048],[0.147,-0.074],[0.123,-0.094],[0.097,-0.122],[0.101,-0.075],[0.148,-0.074],[0.145,-0.048],[0.269,-0.097],[0,0],[-0.147,-0.051],[0,0],[-0.121,0],[-0.221,-0.027],[-0.149,0],[-0.062,0]],\"v\":[[99.096,-153.682],[98.702,-153.585],[98.605,-153.192],[98.214,-153.192],[97.622,-153.192],[97.034,-153.192],[96.642,-153.09],[96.243,-152.799],[95.852,-152.503],[95.359,-152.702],[95.557,-152.305],[96.346,-151.617],[96.74,-151.325],[97.721,-151.031],[98.309,-151.13],[98.702,-151.325],[99.096,-151.523],[99.297,-151.913],[99.587,-152.305],[99.98,-152.406],[100.375,-152.601],[100.77,-152.799],[101.553,-152.994],[101.454,-153.386],[101.065,-153.585],[100.669,-153.585],[100.277,-153.682],[99.689,-153.682],[99.289,-153.705]],\"c\":true},\"ix\":2},\"nm\":\"Path 7\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":7,\"ty\":\"sh\",\"ix\":8,\"ks\":{\"a\":0,\"k\":{\"i\":[[0.101,-0.05],[0.121,-0.102],[0.198,-0.097],[0.125,-0.048],[0.145,-0.048],[0,0],[0.024,-0.125],[0.075,-0.098],[0.122,-0.078],[0.245,-0.197],[0.071,-0.117],[0,0],[-0.167,-0.076],[-0.221,0],[0,0],[-0.169,0.054],[-0.222,0],[0,0],[-0.197,0],[-0.561,0.023],[-0.147,0.027],[0.102,0.175],[0.051,0.175],[0.051,0.12],[0.074,0.322],[0,0.293],[0,0]],\"o\":[[-0.144,0.099],[-0.147,0.12],[-0.123,0.053],[-0.148,0.073],[0,0],[0,0.15],[-0.022,0.121],[-0.071,0.101],[-0.268,0.172],[-0.125,0.099],[0,0],[0.145,0.075],[0.198,0.096],[0,0],[0.196,-0.024],[0.199,-0.072],[0,0],[0.196,0],[0.566,0.048],[0.173,0],[-0.122,-0.148],[-0.074,-0.145],[-0.024,-0.118],[-0.124,-0.294],[-0.072,-0.268],[0,0],[-0.122,0.05]],\"v\":[[92.508,-153.485],[92.217,-153.09],[91.823,-152.702],[91.427,-152.601],[91.039,-152.406],[90.544,-152.702],[90.544,-152.305],[90.544,-151.913],[90.152,-151.812],[89.365,-151.325],[89.169,-150.934],[89.561,-150.734],[89.954,-150.437],[90.544,-150.341],[90.742,-150.341],[91.133,-150.638],[91.723,-150.638],[92.311,-150.638],[92.806,-150.536],[94.279,-150.536],[94.674,-150.685],[94.279,-151.13],[93.984,-151.523],[93.984,-151.913],[93.493,-152.702],[93.493,-153.485],[92.902,-153.585]],\"c\":true},\"ix\":2},\"nm\":\"Path 8\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":8,\"ty\":\"sh\",\"ix\":9,\"ks\":{\"a\":0,\"k\":{\"i\":[[0.147,0],[0.217,-0.17],[0.073,-0.122],[0.123,-0.146],[0.194,-0.073],[0.465,0],[0.269,-0.053],[0.145,-0.049],[0.15,-0.031],[0,0],[0.199,0.05],[0.123,0.024],[0.176,0.05],[0.101,-0.175],[0.124,-0.022],[0.169,0],[0.171,0.05],[0.124,0.028],[0.322,0],[0,0],[-0.147,-0.296],[-0.419,0],[-0.296,0.099],[-0.122,0.027],[-0.172,0.049],[-0.148,0.028],[-0.314,0],[-0.291,-0.021],[-0.146,0],[-0.148,0],[0,0],[0.197,-0.025],[0.342,0],[0,0],[-0.096,-0.128],[-0.199,-0.1],[0,0],[-0.467,0],[-0.271,0.099],[-0.097,0.147],[-0.027,0.247],[0.023,0.293],[0,0],[-0.445,0],[-0.167,0],[0,0],[-0.223,0.099],[-0.149,0.099],[-0.125,0.095],[0,0.17],[0,0],[0.416,0],[0,0],[0.172,0]],\"o\":[[-0.295,0],[-0.099,0.075],[-0.099,0.15],[-0.121,0.147],[-0.418,0.15],[-0.297,0],[-0.148,0.023],[-0.149,0.05],[0,0],[-0.219,0],[-0.121,-0.026],[-0.17,-0.049],[-0.099,0.172],[-0.072,0.121],[-0.146,0.051],[-0.199,0],[-0.123,-0.024],[-0.295,-0.072],[0,0],[0.024,0.342],[0.171,0.369],[0.32,0],[0.124,-0.025],[0.172,-0.047],[0.149,-0.046],[0.294,-0.049],[0.295,0],[0.149,0],[0.151,0],[0,0],[-0.147,0.147],[-0.32,0.052],[0,0],[0,0.17],[0.147,0.172],[0,0],[0.415,0.196],[0.295,0],[0.172,-0.072],[0.151,-0.199],[0.024,-0.291],[0,0],[0.441,-0.024],[0.169,0],[0,0],[0.273,0],[0.174,-0.073],[0.12,-0.102],[0.12,-0.1],[0,0],[-0.416,-0.098],[0,0],[-0.149,-0.024],[-0.151,0]],\"v\":[[72.456,-153.289],[71.671,-153.192],[71.671,-152.799],[71.276,-152.503],[70.883,-152.111],[69.507,-152.208],[68.72,-152.208],[68.329,-152.011],[67.932,-151.812],[67.734,-151.812],[67.145,-151.913],[66.753,-152.011],[66.262,-152.208],[65.965,-151.715],[65.868,-151.325],[65.475,-151.13],[65.083,-151.424],[64.69,-151.523],[63.876,-151.715],[63.116,-151.715],[63.215,-150.833],[64.1,-150.244],[64.885,-150.536],[65.277,-150.638],[65.768,-150.833],[66.163,-151.031],[66.971,-151.13],[67.734,-151.031],[68.126,-150.934],[68.526,-151.031],[68.621,-150.437],[68.23,-150.045],[67.344,-150.045],[67.344,-149.234],[67.539,-148.864],[68.03,-148.473],[68.427,-148.278],[69.556,-147.882],[70.293,-148.081],[70.682,-148.374],[70.98,-148.966],[70.883,-149.752],[70.883,-150.144],[72.039,-150.244],[72.456,-150.144],[72.676,-150.144],[73.341,-150.244],[73.733,-150.536],[74.126,-150.734],[74.323,-151.151],[74.323,-151.913],[73.243,-152.011],[73.243,-153.192],[72.849,-153.386]],\"c\":true},\"ix\":2},\"nm\":\"Path 9\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":9,\"ty\":\"sh\",\"ix\":10,\"ks\":{\"a\":0,\"k\":{\"i\":[[0.121,-0.072],[0.22,0],[0,0],[0.171,0],[0,0],[0.025,-0.394],[0.074,-0.269],[0.078,-0.145],[0,0],[0.268,0.345],[0.149,0.097],[0.151,0.05],[0.172,0],[1.255,0],[0.174,-0.026],[0.122,-0.047],[0,-0.297],[-0.1,-0.224],[-0.169,-0.05],[-0.148,-0.024],[0,0],[-0.122,-0.024],[-0.245,0],[-0.195,0.05],[-0.242,0],[-0.195,-0.049],[-0.124,-0.073],[-0.146,-0.122],[-0.047,-0.125],[0,0],[0,0],[-0.268,-0.101],[-0.342,0],[0,0],[-0.171,0],[-0.27,-0.102],[-0.151,-0.097],[-0.172,-0.024],[-0.121,-0.023],[-0.22,0],[-0.368,0.123],[-0.148,0.073],[-0.146,0.097],[-0.247,0],[-0.513,0],[-0.32,0.2],[-0.071,0.121],[-0.1,0.27],[-0.297,0.102],[-0.121,0],[-0.169,0.048],[-0.15,0.075],[0,0],[0.318,0.151],[0.316,0],[0.147,-0.027],[0.339,0],[0,0],[0.022,0.196],[0.072,0.148],[0.172,0.171],[0.095,0.146],[0.098,-0.051],[0.123,-0.099],[0.145,-0.122],[0.391,0],[0.145,0],[0.174,0.049],[0,0],[0,0],[0.027,0.148]],\"o\":[[-0.171,0.095],[0,0],[-0.174,0.025],[0,0],[-0.047,0.392],[0,0.296],[-0.047,0.174],[0,0],[0,-0.466],[-0.097,-0.149],[-0.119,-0.073],[-0.146,-0.047],[-1.253,0],[-0.172,0],[-0.147,0.027],[-0.244,0.124],[0,0.27],[0.073,0.172],[0.146,0.046],[0,0],[0.122,0],[0.222,0.049],[0.223,0],[0.222,-0.048],[0.225,0],[0.12,0.024],[0.146,0.076],[0.097,0.076],[0,0],[0,0],[0.298,0.124],[0.295,0.121],[0,0],[0.171,0],[0.296,0],[0.172,0.048],[0.146,0.099],[0.124,0.024],[0.198,0.025],[0.394,0],[0.148,-0.048],[0.172,-0.075],[0.197,-0.125],[0.515,0],[0.397,0],[0.122,-0.075],[0.144,-0.247],[0.096,-0.296],[0.118,-0.022],[0.173,-0.022],[0.172,-0.048],[0,0],[-0.246,-0.268],[-0.266,-0.124],[-0.177,0],[-0.319,0.049],[0,0],[-0.024,-0.2],[-0.024,-0.172],[-0.099,-0.196],[-0.122,-0.125],[-0.129,0.048],[-0.149,0.096],[-0.148,0.121],[-0.296,0.245],[-0.15,0],[-0.193,0],[0,0],[0,0],[-0.027,-0.147],[-0.119,0.049]],\"v\":[[22.023,-150.734],[21.632,-150.341],[21.434,-150.341],[21.016,-150.536],[19.858,-150.536],[19.76,-149.554],[19.661,-148.769],[19.366,-148.374],[18.971,-148.473],[18.777,-149.653],[18.383,-149.947],[17.99,-150.144],[17.572,-150.244],[14.378,-150.341],[13.958,-150.244],[13.568,-150.144],[13.074,-149.554],[13.174,-148.864],[13.665,-148.669],[14.057,-148.473],[14.453,-148.473],[14.845,-148.374],[15.436,-148.179],[16.023,-148.278],[16.609,-148.473],[17.206,-148.374],[17.598,-148.278],[17.99,-147.982],[18.087,-147.589],[15.138,-147.589],[15.138,-146.703],[15.927,-146.407],[16.737,-146.011],[18.852,-146.011],[19.268,-146.114],[20.056,-146.011],[20.353,-145.622],[20.842,-145.425],[21.236,-145.327],[21.824,-145.327],[22.807,-145.425],[23.202,-145.622],[23.595,-145.916],[24.087,-146.308],[25.362,-145.916],[26.348,-146.211],[26.741,-146.407],[26.741,-147.193],[27.333,-147.786],[27.721,-147.786],[28.216,-147.882],[28.609,-148.179],[29.001,-148.374],[28.312,-149.063],[27.48,-149.161],[27.036,-149.161],[26.227,-148.864],[25.464,-148.864],[25.464,-149.356],[25.267,-149.752],[24.773,-150.144],[24.484,-150.536],[24.087,-150.437],[23.792,-150.045],[23.398,-149.653],[22.516,-149.161],[22.121,-149.063],[21.725,-149.356],[22.516,-150.244],[22.516,-150.437],[22.413,-150.833]],\"c\":true},\"ix\":2},\"nm\":\"Path 10\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":10,\"ty\":\"sh\",\"ix\":11,\"ks\":{\"a\":0,\"k\":{\"i\":[[0,0],[0.319,-0.122],[0.171,-0.078],[0.171,-0.07],[0.399,-0.07],[0,0],[0,0],[0,0],[-0.096,0.197],[-0.047,0.123],[-0.071,0.095],[-0.296,-0.242],[-0.201,0],[-0.174,0],[-0.167,0.026],[0.05,0.468],[0,0],[0,0],[0.024,0.146]],\"o\":[[-0.346,0],[-0.174,0.052],[-0.172,0.072],[-0.342,0.172],[0,0],[0,0],[0,0],[0.148,-0.146],[0.051,-0.121],[0.051,-0.102],[0,0.393],[0.149,0.124],[0.164,0],[0.172,0],[0.026,-0.465],[0,0],[0,0],[0,-0.146],[0,0]],\"v\":[[85.656,-150.536],[84.844,-150.244],[84.35,-150.045],[83.956,-149.752],[82.971,-149.458],[82.971,-149.752],[82.971,-148.573],[84.743,-148.573],[85.135,-148.966],[85.135,-149.356],[85.432,-149.554],[85.629,-148.573],[86.125,-148.374],[86.514,-148.573],[86.954,-148.573],[86.954,-149.752],[88.674,-149.752],[88.674,-150.144],[88.578,-150.536]],\"c\":true},\"ix\":2},\"nm\":\"Path 11\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":11,\"ty\":\"sh\",\"ix\":12,\"ks\":{\"a\":0,\"k\":{\"i\":[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],\"o\":[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],\"v\":[[-210.578,-149.554],[-210.578,-148.374],[-209.105,-148.374],[-208.71,-147.291],[-207.533,-147.786],[-208.024,-149.161],[-209.303,-149.554]],\"c\":true},\"ix\":2},\"nm\":\"Path 12\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":12,\"ty\":\"sh\",\"ix\":13,\"ks\":{\"a\":0,\"k\":{\"i\":[[0.127,-0.027],[0.17,-0.025],[0,0],[0.126,0],[0,0],[-0.048,-0.1],[-0.121,-0.072],[-0.17,0],[-0.147,0.027],[-0.147,0.027],[-0.27,0.05],[0.024,0.118],[0.074,0.17]],\"o\":[[-0.17,0.049],[0,0],[-0.103,0],[0,0],[0.029,0.144],[0.077,0.123],[0.124,0.076],[0.171,0],[0.146,-0.023],[0.272,-0.073],[-0.022,-0.122],[-0.047,-0.175],[-0.122,0.024]],\"v\":[[89.855,-149.161],[89.365,-148.966],[88.973,-148.966],[88.674,-148.864],[88.28,-148.864],[88.28,-148.473],[88.478,-148.081],[88.921,-148.081],[89.365,-148.081],[89.757,-148.278],[90.544,-148.473],[90.544,-148.864],[90.249,-149.257]],\"c\":true},\"ix\":2},\"nm\":\"Path 13\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":13,\"ty\":\"sh\",\"ix\":14,\"ks\":{\"a\":0,\"k\":{\"i\":[[0.106,-0.016],[0.149,-0.072],[0.126,-0.073],[0.171,-0.075],[0.121,-0.023],[0.223,0.021],[0.187,-0.009],[0.121,-0.022],[0.06,0.008],[0.067,-0.026],[0.143,-0.075],[0.174,-0.076],[0.067,0.013],[0.06,-0.024],[0.12,-0.027],[0.101,-0.172],[0.072,-0.168],[0.024,-0.099],[-0.243,-0.153],[-0.074,-0.126],[-0.024,-0.124],[0,-0.145],[-0.024,-0.227],[0,0],[-0.147,-0.024],[-0.067,0.006],[-0.063,-0.012],[-0.124,-0.121],[-0.097,-0.171],[-1.007,-0.025],[-0.148,0],[0,0],[-0.271,0.025],[-0.12,0.027],[-0.273,0.149],[0,0.172],[0,0],[0.221,0.029],[0.147,0.074],[-0.099,0.268],[-0.075,0.148],[-0.095,0.148],[0,0.242],[0.119,0.246],[0.095,0.124],[0.15,0.078],[0.393,0],[0.194,-0.076],[0.124,-0.076],[0.123,-0.097],[0.175,-0.072],[0.15,0],[0.295,0],[-0.099,0.124],[-0.123,0.122],[0,0],[0.492,0],[0.193,0]],\"o\":[[-0.148,0.024],[-0.147,0.073],[-0.147,0.1],[-0.122,0.049],[-0.269,0.059],[-0.146,-0.014],[-0.144,0],[-0.057,0.012],[-0.075,-0.011],[-0.172,0.075],[-0.147,0.074],[-0.061,0.025],[-0.068,-0.011],[-0.12,0.049],[-0.201,0.072],[-0.101,0.149],[-0.027,0.099],[0.293,0.097],[0.126,0.067],[0.073,0.121],[0.022,0.123],[0,0.222],[0,0],[0.174,0],[0.06,0.012],[0.068,-0.005],[0.17,0.05],[0.144,0.148],[1.01,-0.022],[0.146,0],[0,0],[0.271,0],[0.147,0],[0.296,-0.053],[0.123,-0.072],[0,0],[-0.218,0],[-0.174,-0.021],[0.027,-0.292],[0.048,-0.153],[0.074,-0.172],[0.128,-0.195],[0,-0.299],[-0.077,-0.147],[-0.099,-0.123],[-0.317,-0.197],[-0.222,0],[-0.15,0.048],[-0.122,0.074],[-0.144,0.098],[-0.125,0.052],[-0.295,0.025],[0.074,-0.122],[0.123,-0.145],[0,0],[-0.489,0],[-0.23,0],[-0.096,0]],\"v\":[[159.658,-149.161],[159.264,-148.966],[158.868,-148.769],[158.576,-148.374],[158.184,-148.278],[157.488,-148.26],[156.999,-148.278],[156.61,-148.179],[156.433,-148.183],[156.215,-148.179],[155.822,-147.882],[155.527,-147.489],[155.331,-147.489],[155.134,-147.489],[154.743,-147.39],[154.347,-146.997],[154.053,-146.607],[154.053,-146.308],[154.837,-146.011],[155.233,-145.818],[155.233,-145.425],[155.233,-145.036],[155.331,-144.44],[158.845,-144.44],[159.264,-144.344],[159.457,-144.344],[159.658,-144.344],[159.952,-143.951],[160.246,-143.458],[162.803,-143.557],[163.196,-143.458],[163.809,-143.458],[164.473,-143.458],[164.866,-143.557],[165.654,-143.852],[165.848,-144.222],[165.848,-145.036],[165.261,-145.036],[164.866,-145.231],[164.965,-146.011],[165.162,-146.407],[165.454,-146.802],[165.848,-147.291],[165.559,-147.982],[165.36,-148.374],[165.063,-148.769],[164.081,-148.864],[163.493,-148.864],[163.098,-148.669],[162.899,-148.278],[162.507,-147.982],[162.113,-147.982],[161.329,-147.982],[161.525,-148.374],[161.92,-148.669],[161.818,-149.136],[160.566,-149.161],[159.957,-149.182]],\"c\":true},\"ix\":2},\"nm\":\"Path 14\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":14,\"ty\":\"sh\",\"ix\":15,\"ks\":{\"a\":0,\"k\":{\"i\":[[0.128,0],[0,0],[0,0],[0.049,-0.468],[-0.641,-0.074],[0,0],[-0.148,-0.101],[-0.173,-0.052],[-0.148,0],[-0.121,0.022],[-0.148,0.099],[-0.078,0.125],[0,0.145],[0,0],[0.048,0.148],[0.124,0],[0.125,0.025],[0.148,0.05],[0.17,0.05],[0.176,0.024],[0,0],[0.15,0]],\"o\":[[0,0],[0,0],[0.023,0.468],[0.636,0.071],[0,0],[0.176,0.026],[0.148,0.099],[0.122,0.022],[0.145,0],[0.172,-0.052],[0.122,-0.07],[0.068,-0.121],[0,0],[0,-0.171],[-0.146,0],[-0.121,0],[-0.148,-0.023],[-0.173,-0.048],[-0.174,-0.048],[0,0],[-0.144,0],[-0.124,0]],\"v\":[[150.116,-148.374],[149.727,-148.374],[149.384,-148.374],[149.384,-147.193],[151.008,-147.096],[151.394,-147.096],[151.793,-146.802],[151.99,-146.308],[152.383,-146.308],[152.774,-146.308],[153.168,-146.607],[153.566,-146.802],[153.566,-147.193],[153.566,-147.589],[153.365,-147.982],[152.97,-147.882],[152.577,-147.982],[152.184,-148.179],[151.696,-148.278],[151.199,-148.473],[150.808,-148.473],[150.415,-148.573]],\"c\":true},\"ix\":2},\"nm\":\"Path 15\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":15,\"ty\":\"sh\",\"ix\":16,\"ks\":{\"a\":0,\"k\":{\"i\":[[0.031,-0.012],[0.098,-0.199],[0,-0.295],[0,0],[-0.025,-0.127],[0,-0.271],[0.171,-0.196],[0.246,0],[0.149,0.172],[0.049,0.32],[0,0],[0,0.152],[0,0],[0.028,0.267],[0,0],[0.245,-0.199],[0.097,-0.125],[0.125,-0.099],[0.198,0],[0,0],[0,0],[-0.146,0.072],[-0.067,-0.011],[-0.062,0.025],[-0.172,0.072],[0,0],[0.062,0.008],[0.068,-0.026],[0.146,-0.075],[0.124,-0.076],[0.097,-0.127],[0,0],[0.171,-0.025],[0.315,-0.05],[0.148,-0.047],[-0.098,-0.269],[-0.15,-0.123],[-0.173,-0.023],[-0.221,0.02],[-0.185,-0.009],[-0.145,-0.022],[0.05,-0.124],[0.052,-0.124],[0,-0.197],[-0.068,-0.198],[-0.069,-0.144],[0,-0.219],[0.099,-0.246],[0.12,0.078],[0.097,0.124],[0.052,0.123],[0.123,0.097],[0.173,0.077],[0.147,0.052],[0.071,-0.011],[0.067,0.013],[-0.081,-0.319],[-0.03,-0.122],[-0.023,-0.121],[-0.147,-0.147],[-0.201,-0.097],[-0.367,0],[-0.177,0],[0,0.297],[0,0.146],[-0.094,0.007],[-0.168,-0.134],[-0.195,-0.247],[-0.149,-0.096],[-0.149,-0.025],[-0.295,0],[0,0],[-0.124,0.072],[-0.072,0.147],[-0.072,0.124],[-0.148,0.1],[-0.075,-0.016],[-0.058,0.022],[-0.148,0.045],[0,0.15],[0,0],[0,0],[-0.044,-0.17],[-0.02,-0.121],[-0.025,-0.295],[0,0],[0,0],[0,0],[-0.05,-0.344],[-0.024,-0.047],[0.146,-0.027],[0.345,0.022],[0,0],[0.145,0],[0.269,-0.049],[0.148,-0.052],[0.144,-0.023],[0.224,0.022],[0.217,-0.021],[0.392,-0.268],[0,-0.172],[0,0],[-0.468,-0.022],[0,0],[-0.148,0],[-0.271,0],[-0.344,0.149],[-0.29,0.148],[-0.248,0],[0,0],[-0.123,-0.048],[-0.098,-0.128],[0.178,-0.049],[0.06,0.009],[0.067,-0.027],[0.126,-0.048],[0.15,-0.096],[0.245,-0.029],[0.22,0],[0.539,-0.028],[0.124,-0.028],[0.148,-0.052],[0.074,-0.097],[0,-0.151],[-0.048,-0.122],[-0.32,-0.125],[-0.147,0],[-0.125,0.006],[-0.144,-0.01],[-0.123,-0.021],[-0.272,-0.195],[-0.101,-0.145],[-0.069,-0.128],[-0.094,-0.148],[-0.224,-0.295],[0,0],[-0.049,0.096],[-0.123,0.123],[-0.121,0.075],[-0.17,0.27],[-0.023,0.125],[-0.023,0.347],[-0.048,0.149],[-0.2,0.099],[-0.175,0],[-0.298,0],[0,0],[-0.274,0.075],[-0.269,0.172],[0.027,0.198],[0,0.152],[0,0.176],[0,0.148],[0,0.171],[0,0],[0.049,-0.197],[0,-0.342],[0,-0.149],[-0.3,-0.027],[-0.124,-0.096],[-0.027,-0.172],[0,-0.147],[0.099,-0.27],[0.122,-0.096],[0,-0.416],[0,-0.172],[0,0],[-0.442,0.268],[-0.345,0],[-0.099,-0.148],[0,-0.123],[0,-0.296],[0,0],[-0.079,0.146],[-0.048,0.12],[-0.047,0.145],[0,0],[0,0],[0,0],[0.517,0.05],[0.149,0],[0.367,0.022],[0,0.365],[0,0.146],[0,0],[0.441,0.392],[0.127,0.076],[0.102,0.099],[0.074,0.122],[0.097,0.07],[0.317,0.047],[0.122,0.047],[0.12,0.125],[0.252,0.197],[0.123,0.019],[0.147,0],[0.122,-0.028],[0.295,0],[0.272,0.073],[0.071,-0.006],[0.058,0.01],[0.152,0.075],[0,0],[0.209,0],[0.223,0.022],[0.146,0.073],[-0.047,0.126],[-0.124,0.367],[-0.027,0.119],[0,0],[0.061,0.008],[0.039,0]],\"o\":[[-0.194,0.098],[-0.123,0.243],[0,0],[0,0.145],[0.049,0.248],[0,0.272],[-0.146,0.175],[-0.246,0],[-0.196,-0.245],[0,0],[0,-0.149],[0,0],[-0.025,-0.274],[0,0],[-0.295,0.147],[-0.119,0.1],[-0.098,0.124],[-0.121,0.096],[0,0],[0,0],[0.099,-0.098],[0.061,-0.023],[0.069,0.013],[0.172,-0.076],[0,0],[-0.056,0.012],[-0.074,-0.011],[-0.171,0.075],[-0.125,0.074],[-0.124,0.072],[0,0],[-0.169,0],[-0.347,0.048],[-0.151,0.026],[0.024,0.296],[0.072,0.198],[0.144,0.121],[0.266,0.058],[0.147,-0.013],[0.149,0],[0,0.15],[-0.047,0.12],[-0.073,0.168],[0,0.223],[0.076,0.169],[0.099,0.172],[0,0.272],[-0.146,-0.07],[-0.126,-0.07],[-0.078,-0.1],[-0.072,-0.172],[-0.121,-0.097],[-0.148,-0.053],[-0.069,-0.026],[-0.059,0.009],[0.148,0.297],[0.023,0.121],[0.023,0.124],[0.072,0.198],[0.147,0.15],[0.316,0.147],[0.172,0],[-0.029,-0.292],[0,-0.15],[0.102,0.009],[0.195,-0.015],[0.244,0.197],[0.101,0.149],[0.122,0.073],[0.273,0.072],[0,0],[0.123,0],[0.149,-0.098],[0.075,-0.124],[0.075,-0.147],[0.052,-0.037],[0.067,0.014],[0.146,-0.048],[-0.025,-0.147],[0,0],[0,0],[0.095,0.145],[0.028,0.123],[0.056,0.273],[0,0],[0,0],[0,0],[0,0.344],[0,0.071],[-0.073,0.147],[-0.319,0.074],[0,0],[-0.151,0],[-0.297,0],[-0.145,0.026],[-0.148,0.046],[-0.262,0.056],[-0.177,-0.016],[-0.491,0.049],[-0.125,0.073],[0,0],[0.467,-0.096],[0,0],[0.149,0],[0.271,0.023],[0.391,0],[0.295,-0.121],[0.197,-0.099],[0,0],[0.146,0],[0.147,0.072],[-0.149,0.094],[-0.053,0.011],[-0.076,-0.01],[-0.125,0.048],[-0.169,0.052],[-0.193,0.148],[-0.222,0.027],[-0.544,-0.028],[-0.147,0],[-0.145,0.02],[-0.126,0.047],[-0.075,0.099],[0,0.145],[0.149,0.319],[0.124,0.049],[0.151,0.013],[0.121,-0.006],[0.144,0],[0.32,0.075],[0.147,0.099],[0.072,0.124],[0.097,0.145],[0.199,0.318],[0,0],[0.024,-0.122],[0.099,-0.146],[0.096,-0.097],[0.269,-0.174],[0.049,-0.096],[0.078,-0.316],[0,-0.172],[0.076,-0.196],[0.146,-0.077],[0.293,-0.024],[0,0],[0.296,0],[0.316,-0.099],[-0.075,-0.171],[0,-0.147],[0,-0.17],[0,-0.147],[0,-0.167],[0,0],[-0.025,0.22],[-0.074,0.322],[0,0.145],[0.291,0],[0.196,0],[0.122,0.1],[0.026,0.121],[0,0.296],[-0.052,0.149],[-0.293,0.273],[0,0.173],[0,0],[0.541,0],[0.27,-0.149],[0.196,0],[0.05,0.097],[0.026,0.27],[0,0],[0.123,-0.099],[0.051,-0.123],[0.07,-0.15],[0,0],[0,0],[0,0],[-0.298,-0.393],[-0.148,0],[-0.368,0],[-0.025,-0.372],[0,-0.151],[0,0],[0,-0.589],[-0.099,-0.073],[-0.121,-0.074],[-0.095,-0.098],[-0.048,-0.1],[-0.246,-0.222],[-0.125,0],[-0.172,-0.07],[-0.222,-0.22],[-0.097,-0.077],[-0.125,-0.028],[-0.148,0],[-0.271,0.045],[-0.292,0],[-0.064,-0.016],[-0.064,0.006],[-0.149,-0.03],[0,0],[-0.184,0.039],[-0.222,0],[-0.171,-0.029],[0.05,-0.123],[0.172,-0.34],[0.023,-0.127],[0,0],[-0.056,0.013],[-0.04,-0.006],[-0.034,0]],\"v\":[[8.65,-148.278],[8.258,-147.882],[8.06,-147.096],[8.06,-146.703],[8.16,-146.308],[8.456,-145.674],[8.16,-145.036],[7.57,-144.736],[6.98,-144.935],[6.686,-145.818],[6.686,-146.211],[6.587,-146.607],[6.587,-146.997],[6.484,-147.684],[5.704,-147.786],[4.915,-147.39],[4.719,-146.997],[4.324,-146.703],[3.906,-146.407],[2.654,-146.407],[2.654,-147.096],[2.85,-147.489],[3.046,-147.489],[3.245,-147.489],[3.639,-147.786],[3.54,-148.179],[3.362,-148.183],[3.143,-148.179],[2.753,-147.882],[2.359,-147.684],[2.165,-147.291],[-0.371,-147.291],[-0.784,-147.193],[-1.667,-147.096],[-2.064,-146.903],[-1.966,-146.114],[-1.572,-145.719],[-1.279,-145.327],[-0.587,-145.309],[-0.1,-145.327],[0.294,-145.231],[0.294,-144.833],[0.195,-144.44],[-0.194,-144.148],[-0.1,-143.557],[0.294,-143.262],[0.393,-142.674],[0.195,-141.985],[-0.194,-142.183],[-0.589,-142.377],[-0.689,-142.771],[-0.884,-143.262],[-1.279,-143.557],[-1.667,-143.755],[-1.875,-143.76],[-2.064,-143.755],[-1.667,-142.966],[-1.667,-142.575],[-1.572,-142.183],[-1.18,-141.789],[-0.784,-141.394],[0.122,-141.099],[0.544,-141.2],[0.493,-141.985],[0.544,-142.377],[0.837,-142.383],[1.378,-142.281],[1.671,-141.492],[2.065,-141.2],[2.458,-141.002],[3.245,-141.002],[3.639,-141.002],[4.031,-141.002],[4.324,-141.394],[4.324,-141.789],[4.621,-142.183],[4.82,-142.188],[5.014,-142.183],[5.409,-142.377],[5.307,-142.771],[5.307,-143.359],[6.098,-143.458],[6.484,-143.166],[6.484,-142.771],[6.587,-141.985],[8.06,-141.985],[8.846,-142.575],[9.242,-142.281],[9.242,-141.394],[9.438,-141.295],[9.242,-140.903],[8.355,-141.002],[7.867,-141.002],[7.474,-141.099],[6.686,-141.099],[6.293,-140.903],[5.898,-140.708],[5.198,-140.695],[4.621,-140.708],[3.443,-140.314],[3.341,-139.894],[3.341,-139.036],[4.523,-139.234],[4.915,-139.234],[5.307,-139.132],[6,-139.036],[6.98,-139.234],[7.764,-139.722],[8.355,-140.018],[8.555,-140.018],[8.945,-139.92],[9.142,-139.525],[8.846,-139.132],[8.674,-139.138],[8.456,-139.132],[8.06,-139.036],[7.764,-138.643],[7.177,-138.346],[6.587,-138.443],[5.211,-138.443],[4.816,-138.443],[4.424,-138.247],[4.031,-138.15],[3.934,-137.757],[4.031,-137.364],[4.719,-136.675],[5.112,-136.675],[5.513,-136.674],[5.898,-136.675],[6.293,-136.58],[7.079,-136.185],[7.474,-135.891],[7.667,-135.494],[7.961,-135.102],[8.555,-134.317],[8.945,-134.416],[8.945,-134.808],[9.242,-135.201],[9.634,-135.398],[10.421,-135.891],[10.518,-136.284],[10.518,-137.167],[10.715,-137.562],[11.111,-137.953],[11.504,-138.15],[12.241,-138.15],[12.241,-140.115],[12.98,-140.115],[13.764,-140.607],[13.469,-141.002],[13.516,-141.372],[13.469,-141.789],[13.568,-142.183],[13.516,-142.622],[16.319,-142.622],[16.319,-142.083],[16.023,-141.271],[16.124,-140.903],[16.91,-140.903],[17.402,-140.708],[17.797,-140.411],[17.797,-140.018],[17.698,-139.234],[17.303,-139.036],[16.714,-138.127],[16.811,-137.658],[17.672,-137.658],[18.876,-138.346],[19.661,-138.739],[20.056,-138.443],[20.056,-138.051],[20.056,-137.265],[21.137,-137.265],[21.533,-137.463],[21.632,-137.854],[21.824,-138.247],[24.087,-138.247],[24.876,-138.443],[24.973,-138.84],[23.888,-139.624],[23.495,-139.525],[22.561,-139.575],[22.516,-140.507],[22.561,-140.903],[20.056,-140.903],[19.76,-142.377],[19.366,-142.477],[18.971,-142.674],[18.777,-143.065],[18.681,-143.458],[17.797,-143.657],[17.402,-143.657],[17.01,-143.951],[16.609,-144.736],[16.221,-144.833],[15.828,-144.935],[15.436,-144.833],[14.794,-144.44],[14.057,-144.637],[13.85,-144.64],[13.665,-144.637],[13.344,-144.935],[13.344,-145.909],[12.781,-145.916],[12.19,-145.916],[11.797,-146.114],[11.893,-146.508],[12.487,-147.291],[12.487,-147.684],[9.044,-148.278],[8.867,-148.281],[8.747,-148.294]],\"c\":true},\"ix\":2},\"nm\":\"Path 16\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":16,\"ty\":\"sh\",\"ix\":17,\"ks\":{\"a\":0,\"k\":{\"i\":[[0,0],[0.171,-0.049],[0.174,-0.076],[0.123,-0.075],[0.125,-0.098],[0.095,-0.146],[0.075,-0.149],[0.074,-0.123],[0.124,-0.099],[0.073,0.018],[0.048,-0.036],[0.097,-0.146],[0,-0.126],[0.097,-0.269],[0.072,-0.148],[0.12,-0.073],[0.149,-0.073],[0.073,-0.122],[0.051,-0.172],[0.022,-0.196],[0,-0.199],[-0.245,0],[-0.321,0.273],[-0.146,0.148],[-0.199,0.073],[-0.122,0.027],[-0.196,0],[-0.148,-0.025],[0,0],[-0.173,0.073],[-0.148,0.024],[-0.147,0],[-0.292,0],[-0.146,0.024],[-0.248,0.026],[-0.395,0],[-0.194,0.17],[-0.045,0.147],[0,0.146],[0,0.174],[0,0],[0,0],[0.046,0.32],[0.046,0.098],[0.148,0.069],[0.127,0.026],[0.491,0],[0.146,-0.026],[0.124,-0.096],[0.221,0],[0,0],[0.15,0.073],[-0.122,0.15],[-0.098,0.17],[-0.026,0.121],[0.122,0.049],[0.124,0.049],[0.22,0]],\"o\":[[-0.195,0],[-0.176,0.048],[-0.123,0.049],[-0.149,0.075],[-0.124,0.098],[-0.075,0.125],[-0.05,0.12],[-0.072,0.148],[-0.051,0.038],[-0.073,-0.019],[-0.146,0.099],[-0.077,0.127],[-0.025,0.272],[-0.05,0.145],[-0.075,0.147],[-0.152,0.098],[-0.118,0.075],[-0.095,0.149],[-0.051,0.17],[-0.025,0.197],[0.219,0.097],[0.445,0],[0.147,-0.124],[0.147,-0.149],[0.124,-0.053],[0.174,-0.027],[0.172,0],[0,0],[0.194,0],[0.144,-0.049],[0.121,-0.028],[0.294,-0.028],[0.148,0],[0.249,-0.028],[0.393,-0.046],[0.293,0],[0.122,-0.101],[0.053,-0.119],[0,-0.171],[0,0],[0,0],[0,-0.344],[0,-0.124],[-0.079,-0.126],[-0.124,-0.053],[-0.461,-0.121],[-0.174,0],[-0.148,0.026],[-0.147,0.12],[0,0],[-0.197,0],[0.15,-0.15],[0.122,-0.145],[0.049,-0.122],[-0.127,-0.024],[-0.122,-0.048],[-0.196,-0.076],[0,0]],\"v\":[[170.175,-146.308],[169.785,-146.011],[169.29,-145.916],[168.897,-145.818],[168.602,-145.425],[168.212,-145.131],[168.012,-144.736],[167.915,-144.344],[167.719,-143.951],[167.52,-143.95],[167.324,-143.951],[166.933,-143.657],[166.933,-143.262],[166.933,-142.477],[166.735,-142.083],[166.342,-141.887],[165.848,-141.688],[165.454,-141.492],[165.162,-141.099],[165.162,-140.607],[165.162,-140.115],[165.947,-139.432],[166.933,-140.018],[167.324,-140.411],[167.719,-140.804],[168.111,-140.903],[168.602,-141.002],[168.996,-140.804],[171.136,-140.804],[171.553,-141.099],[171.947,-141.295],[172.339,-141.295],[173.124,-141.295],[173.517,-141.295],[174.11,-141.593],[175.094,-141.492],[175.876,-141.688],[176.072,-142.083],[176.171,-142.45],[176.072,-142.87],[176.072,-143.359],[174.405,-143.359],[174.405,-144.244],[174.405,-144.637],[174.009,-144.833],[173.613,-144.935],[172.389,-145.131],[171.947,-145.131],[171.749,-144.736],[171.358,-144.344],[171.158,-144.344],[170.764,-144.637],[171.158,-145.036],[171.553,-145.327],[171.553,-145.719],[171.158,-145.818],[170.764,-145.916],[170.373,-146.308]],\"c\":true},\"ix\":2},\"nm\":\"Path 17\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":17,\"ty\":\"sh\",\"ix\":18,\"ks\":{\"a\":0,\"k\":{\"i\":[[-0.012,-0.034],[0,0]],\"o\":[[0,0],[-0.018,0.008]],\"v\":[[13.344,-146.041],[13.344,-146.114]],\"c\":true},\"ix\":2},\"nm\":\"Path 18\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":18,\"ty\":\"sh\",\"ix\":19,\"ks\":{\"a\":0,\"k\":{\"i\":[[0,0],[-0.008,0.002],[0.02,0.057]],\"o\":[[0.009,-0.002],[0.032,0],[0,0]],\"v\":[[13.344,-145.909],[13.368,-145.916],[13.344,-146.041]],\"c\":true},\"ix\":2},\"nm\":\"Path 19\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":19,\"ty\":\"sh\",\"ix\":20,\"ks\":{\"a\":0,\"k\":{\"i\":[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],\"o\":[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],\"v\":[[-217.758,-145.818],[-220.706,-145.231],[-220.02,-144.244],[-218.935,-144.344],[-217.855,-143.852],[-217.559,-142.674],[-219.231,-142.674],[-218.642,-141.593],[-217.559,-141.688],[-216.774,-141.002],[-215.693,-141.492],[-214.709,-141.394],[-212.35,-141.2],[-210.578,-139.722],[-208.807,-139.33],[-208.318,-140.214],[-208.613,-141.394],[-209.698,-142.183],[-210.186,-143.359],[-211.659,-143.951],[-212.843,-144.637],[-214.019,-144.44],[-215.102,-145.231],[-216.58,-146.011]],\"c\":true},\"ix\":2},\"nm\":\"Path 20\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":20,\"ty\":\"sh\",\"ix\":21,\"ks\":{\"a\":0,\"k\":{\"i\":[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],\"o\":[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],\"v\":[[-206.844,-143.359],[-206.056,-142.281],[-205.464,-140.507],[-203.699,-140.214],[-202.027,-140.411],[-200.454,-140.708],[-200.061,-141.492],[-201.73,-142.674],[-204.091,-142.87],[-205.96,-144.05]],\"c\":true},\"ix\":2},\"nm\":\"Path 21\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":21,\"ty\":\"sh\",\"ix\":22,\"ks\":{\"a\":0,\"k\":{\"i\":[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0.494,0.099],[0,0]],\"o\":[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[-0.492,-0.096],[0,0]],\"v\":[[-231.717,-143.359],[-233.29,-142.966],[-234.666,-141.789],[-232.897,-141.789],[-230.535,-141.789],[-227.686,-141.789],[-228.08,-142.87],[-229.851,-143.458]],\"c\":true},\"ix\":2},\"nm\":\"Path 22\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":22,\"ty\":\"sh\",\"ix\":23,\"ks\":{\"a\":0,\"k\":{\"i\":[[0.13,0],[0,0],[0.17,-0.077],[0,0],[-0.12,-0.025],[-0.06,0.009],[-0.065,-0.03],[-0.147,-0.1],[-0.174,-0.075],[-0.344,0],[0,0],[-0.147,0],[0.05,0.12],[0.074,0.145],[0.101,0.073],[0.121,0.024],[0.176,0.022],[0,0],[0.151,0],[0.051,0]],\"o\":[[0,0],[-0.169,0.026],[0,0],[0.147,0.027],[0.053,0.011],[0.075,-0.011],[0.173,0.073],[0.151,0.097],[0.295,0.147],[0,0],[0.149,0],[-0.022,-0.126],[-0.097,-0.175],[-0.075,-0.126],[-0.1,-0.072],[-0.169,-0.047],[0,0],[-0.146,-0.026],[-0.057,-0.007],[-0.102,0]],\"v\":[[177.745,-141.593],[177.35,-141.593],[176.96,-141.295],[177.056,-140.903],[177.451,-140.804],[177.624,-140.81],[177.842,-140.804],[178.236,-140.507],[178.533,-140.115],[179.441,-140.018],[179.908,-140.018],[180.301,-140.115],[180.301,-140.507],[179.908,-140.804],[179.908,-141.2],[179.517,-141.295],[179.022,-141.394],[178.631,-141.394],[178.236,-141.593],[178.077,-141.602]],\"c\":true},\"ix\":2},\"nm\":\"Path 23\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":23,\"ty\":\"sh\",\"ix\":24,\"ks\":{\"a\":0,\"k\":{\"i\":[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],\"o\":[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],\"v\":[[-238.795,-141.002],[-238.402,-140.018],[-237.615,-139.33],[-236.139,-139.234],[-236.338,-140.507],[-237.812,-141.099]],\"c\":true},\"ix\":2},\"nm\":\"Path 24\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":24,\"ty\":\"sh\",\"ix\":25,\"ks\":{\"a\":0,\"k\":{\"i\":[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],\"o\":[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],\"v\":[[-229.454,-140.607],[-231.914,-140.607],[-233.389,-140.214],[-234.762,-139.432],[-233.681,-137.658],[-232.7,-137.463],[-231.62,-137.854],[-229.454,-137.953],[-228.965,-138.739],[-229.948,-139.624],[-228.965,-139.722],[-228.278,-140.607]],\"c\":true},\"ix\":2},\"nm\":\"Path 25\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":25,\"ty\":\"sh\",\"ix\":26,\"ks\":{\"a\":0,\"k\":{\"i\":[[0,0],[0,0],[0,0],[0,0],[0,0]],\"o\":[[0,0],[0,0],[0,0],[0,0],[0,0]],\"v\":[[-215.693,-139.92],[-215.398,-138.84],[-213.825,-138.739],[-212.546,-139.132],[-213.825,-140.018]],\"c\":true},\"ix\":2},\"nm\":\"Path 26\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":26,\"ty\":\"sh\",\"ix\":27,\"ks\":{\"a\":0,\"k\":{\"i\":[[-0.294,-0.593],[0,0],[0,0],[0,0],[0,0]],\"o\":[[0.296,0.589],[0,0],[0,0],[0,0],[0,0]],\"v\":[[-221.198,-138.443],[-219.527,-136.675],[-218.445,-137.167],[-219.723,-138.84],[-221.296,-139.722]],\"c\":true},\"ix\":2},\"nm\":\"Path 27\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":27,\"ty\":\"sh\",\"ix\":28,\"ks\":{\"a\":0,\"k\":{\"i\":[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],\"o\":[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],\"v\":[[-199.372,-139.624],[-201.338,-139.624],[-202.42,-138.739],[-202.42,-137.953],[-200.061,-138.051],[-198.782,-138.346],[-197.212,-138.643],[-197.212,-139.624]],\"c\":true},\"ix\":2},\"nm\":\"Path 28\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":28,\"ty\":\"sh\",\"ix\":29,\"ks\":{\"a\":0,\"k\":{\"i\":[[0,0],[0,0],[0,0],[0,0],[0.393,0.296]],\"o\":[[0,0],[0,0],[0,0],[0,0],[0,0]],\"v\":[[-194.161,-138.84],[-195.048,-137.463],[-192.194,-137.068],[-190.624,-137.757],[-191.903,-139.234]],\"c\":true},\"ix\":2},\"nm\":\"Path 29\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":29,\"ty\":\"sh\",\"ix\":30,\"ks\":{\"a\":0,\"k\":{\"i\":[[0,0],[0.149,-0.052],[0.294,-0.05],[0.121,0],[0.442,-0.169],[0.122,-0.048],[0.148,-0.098],[0.022,-0.196],[0.022,-0.12],[0.048,-0.121],[0.12,-0.125],[0.294,-0.15],[-0.123,-0.12],[-0.121,-0.096],[0,0],[0,0],[0.219,-0.171],[0.155,0.002],[0.127,-0.109],[0.048,-0.094],[0.123,-0.099],[0.148,-0.074],[0.419,0],[0.249,0.046],[0.149,0.073],[0.144,0.096],[0.145,0.075],[0.122,0.024],[0.151,0],[0.392,0.024],[0,0],[0.344,0],[0.172,-0.023],[0.058,0.002],[0.066,-0.099],[0.075,-0.165],[0.05,-0.175],[0.025,-0.126],[0.121,-0.072],[0.221,0],[0,0],[0.371,-0.172],[0.173,-0.076],[0.296,-0.122],[0.124,-0.048],[0.247,0],[0.121,0.026],[0.149,0.051],[0.172,0],[0.296,-0.099],[0.174,-0.071],[0.268,-0.151],[0.198,-0.048],[0.124,-0.024],[0.194,0],[0.372,-0.1],[0.268,-0.195],[0.073,-0.17],[0.1,-0.148],[0.124,-0.072],[0.081,0.01],[0.054,-0.008],[0.196,0],[0.125,-0.018],[0.122,-0.025],[0.117,-0.051],[0,-0.22],[-0.203,-0.273],[-0.127,-0.072],[-0.292,-0.147],[-0.074,-0.125],[0,-0.145],[0,0],[0.075,-0.172],[0.123,0.025],[0.493,0],[0.271,-0.075],[0.122,-0.073],[0.147,-0.101],[0.171,-0.079],[0.146,0],[0.12,0.021],[0.244,0],[0.417,0],[0.271,-0.028],[0.125,-0.024],[0.167,0],[0,0],[0.146,-0.046],[0.096,-0.079],[0.05,-0.1],[0.073,-0.148],[0,0],[0.249,-0.222],[-0.077,-0.122],[-0.147,-0.147],[-0.119,-0.146],[-0.022,-0.173],[-0.022,-0.294],[-0.022,-0.125],[-0.049,-0.145],[-0.096,-0.073],[-0.392,0],[0,0],[-0.169,-0.023],[-0.153,-0.048],[-0.126,-0.122],[-0.05,-0.199],[0,-0.147],[0,0],[0.421,0],[0.198,0.094],[0.122,0.075],[0.145,0.075],[0.066,-0.011],[0.061,0.026],[0.168,0.052],[0.121,0.05],[0.1,0.101],[0.079,0.123],[0.047,0.125],[0.126,0.094],[0,0],[0.246,0.218],[0.096,0.072],[0.3,0],[0.121,-0.029],[0.169,-0.048],[0.122,-0.025],[0.443,-0.097],[0,0],[-0.141,0],[-0.267,-0.022],[-0.125,-0.022],[-0.099,-0.146],[0,-0.195],[0,-0.17],[0.321,0.094],[0.126,0.052],[0.176,0.069],[0.243,0],[0,0],[0.096,-0.076],[0.074,-0.123],[0.047,-0.122],[0,-0.223],[-0.492,-0.075],[-0.123,0.006],[-0.151,-0.012],[-0.124,-0.02],[-0.394,-0.249],[-0.147,-0.078],[-0.122,-0.073],[-0.097,-0.125],[0,-0.169],[0.023,-0.173],[0.221,0.099],[0.148,-0.001],[0.121,0.035],[0.172,0.024],[0.067,-0.006],[0.062,0.013],[0.066,-0.006],[0.061,0.013],[0.171,0.048],[0.126,0.027],[0.182,-0.018],[0.223,0.039],[0.269,0.147],[0.071,0.175],[0,0.195],[0,0.15],[0,0],[-0.049,0.269],[-0.026,0.174],[0,0.149],[0.026,0.12],[0.048,0.123],[0.072,0.15],[0.05,0.125],[0.147,0.297],[0.174,-0.023],[0.063,0.006],[0.073,-0.01],[-0.026,-0.223],[0,-0.147],[0.02,-0.469],[0,-0.149],[0,0],[0.296,0],[0.197,0],[0.146,0],[0.069,-0.218],[0.102,-0.048],[0.15,-0.076],[0.124,-0.046],[0,-0.39],[0,0],[-0.391,-0.343],[-0.145,-0.321],[-0.025,-0.121],[0,-0.296],[0,-0.121],[0.073,-0.145],[0,-0.293],[0,0],[-0.024,-0.147],[-0.024,-0.174],[0,-0.148],[0,-0.171],[-0.024,-0.125],[-0.194,-0.27],[-0.169,0],[0,0],[-0.127,0.124],[-0.125,0.099],[-0.221,0],[0,0],[-0.122,-0.076],[-0.147,-0.099],[-0.295,-0.149],[-0.124,-0.073],[-0.098,-0.12],[-0.176,-0.271],[-0.269,-0.247],[-0.074,-0.146],[0,-0.196],[0.148,-0.247],[0.072,-0.148],[0,-0.193],[0,-0.171],[-0.057,0.009],[-0.068,-0.027],[0,0],[-0.17,-0.078],[-0.267,0.014],[-0.15,-0.008],[-0.143,-0.024],[0,0],[0.148,-0.023],[0.298,0],[0,0],[0.176,0.076],[0.148,0.072],[0.125,0.074],[0,0.392],[0,0],[0,0.151],[0.269,0.272],[0.073,0.149],[0.05,0.097],[0.15,0.097],[0.125,0.025],[0.172,0.025],[0.296,0],[0.47,-0.049],[0.126,-0.025],[0.146,-0.052],[0.124,-0.073],[0,-0.226],[0,-0.149],[-0.027,-0.121],[0,-0.394],[0.121,-0.375],[0.048,-0.124],[0.145,-0.121],[0.15,-0.098],[0.151,-0.174],[0.024,-0.174],[0,-0.392],[0.27,-0.073],[0.438,-0.249],[0.199,-0.269],[0.052,-0.099],[0.145,-0.103],[0.147,0],[0.273,0.075],[0.149,0.048],[0.122,0.047],[0.195,0],[0,0],[0,0],[-0.098,0.142],[-0.172,0.072],[-0.218,0],[-0.197,-0.025],[-0.149,-0.026],[-0.296,0],[-0.269,0.048],[-0.175,0.075],[-0.125,0.097],[-0.098,0.147],[-0.218,0.247],[-0.122,0.102],[-0.219,0.295],[-0.074,0.097],[-0.124,0.103],[-0.071,0.124],[-0.023,0.122],[-0.026,0.122],[-0.072,0.296],[-0.028,0.124],[-0.025,0.123],[0,0.173],[0,0.193],[0.297,0],[0.198,0.024],[0.095,0.048],[0.096,0.145],[0,0.221],[-0.05,0.393],[0,0.468],[0,0],[-0.053,0.269],[0,0.465],[0.027,0.124],[0.098,0.321],[0.024,0.123],[0.147,0.271],[0.074,0.148],[0,0.172],[0,0],[-0.296,0],[-0.148,0],[-0.047,0],[0,0],[0.37,0.098],[0.193,0.074],[0.123,0.022],[0.297,0],[0,0],[0.221,0],[0.344,-0.143],[0.176,-0.073],[0.146,-0.026],[0.145,0],[0.298,0],[0.147,-0.021],[0.025,-0.467],[0.025,-0.171],[0.171,-0.271],[0.124,-0.144],[0.128,-0.372],[0.073,-0.269],[0.171,-0.073],[0.122,-0.022],[0.151,0.015],[0.121,-0.009],[0,0],[0.121,-0.076],[0,-0.245],[0,0],[-0.096,-0.12],[-0.081,0.024],[-0.046,-0.034],[-0.151,-0.321],[0,-0.296],[0.194,-0.197],[0.096,-0.075],[0.125,-0.101],[0,-0.244],[-0.024,-0.294],[-0.298,-0.021],[-0.124,-0.07],[-0.126,-0.124],[-0.075,-0.174],[-0.052,-0.123],[-0.074,-0.121],[-0.119,-0.101],[-0.147,-0.099],[-0.097,-0.048],[-0.221,-0.245],[-0.075,-0.146],[0,-0.145],[0.024,-0.121],[0.125,-0.147],[0.123,-0.073],[0.121,0],[0,0],[0.273,0.048],[0.269,0.146],[0,0.566],[0.296,0],[0.364,0.242],[0.151,0.1],[0.171,0.076],[0.153,-0.02],[0.116,0.01],[0.147,0],[0.27,0.097],[0.097,0.173],[0.169,0.096],[0.122,0.049],[0.124,0.024],[0.172,0.076],[0.175,0],[0,0],[0.122,0.096],[0.117,0.097],[0.169,0],[0,0],[0.298,0.172],[0.272,0.174],[0.099,0.048],[0.126,0.072],[0.099,0.072],[0.145,0.122],[0.121,0.076],[0.077,-0.014],[0.051,0.012],[0.221,0],[0,0],[0.147,-0.073],[0,-0.221],[-0.076,-0.195],[-0.121,-0.145],[-0.025,-0.17],[-0.025,-0.122],[0,-0.195],[-0.299,-0.026],[-0.124,0],[-0.122,-0.053],[-0.098,-0.121],[-0.05,-0.12],[-0.046,-0.172],[-0.27,-0.148],[-0.1,-0.122],[0,-0.198],[0,-0.122],[0.049,-0.124],[0.324,-0.118],[0.145,0],[0,0],[0.098,-0.049],[0.074,-0.15],[0.049,-0.125],[0.075,-0.122],[0.121,-0.099],[0,0],[-0.024,0.294],[0,0.144],[0.02,0.293],[0.028,0.147],[0,0],[0.098,-0.076],[0.096,-0.124],[0.1,-0.121],[0.12,-0.123],[0.294,0],[0,0],[0.293,-0.022],[0.064,0.014],[0.103,-0.057],[0.122,-0.097],[0.172,-0.075],[0.169,0],[0,0],[0.149,0],[0,0],[0,0],[0.147,0],[0,0],[0,0],[0.123,0.121],[0.121,0.124],[0.123,0.074],[-0.025,0.147],[-0.025,0.126],[-0.147,0.296],[0,0],[0.101,-0.078],[0.148,-0.075],[0.122,-0.022],[0.126,0],[0.109,0.002],[0.185,-0.091],[0.147,-0.076],[0.294,-0.146],[0,0],[0.416,-0.194],[0.12,-0.097],[0.098,-0.073],[0.149,-0.049],[0.147,0],[0,0],[0.122,-0.024],[0.316,-0.101],[0.147,-0.124],[0.319,-0.194],[0.199,-0.025],[0.213,0.012],[0.32,-0.111],[0.15,-0.145],[-0.072,-0.124],[0,-0.247],[0.17,-0.174],[0.292,-0.145],[0.174,-0.049],[0.123,-0.02],[0.145,0],[0.198,-0.02],[0.247,0],[0,0],[0.145,0.098],[0.17,0.052],[0.099,0.146],[0.048,0.122],[0,0.272],[-0.025,0.366],[0,0],[0,0],[0.172,0.121],[0.099,0.075],[0.096,0.124],[0.097,0.149],[0.223,0],[0.293,0],[0,0],[0.197,0.072],[0.124,0.028],[0.345,0],[0,0],[0.15,0],[0.126,0],[0,0],[-0.269,-0.048],[-0.124,-0.023],[0,0],[0.074,-0.124],[0,-0.198],[0,-0.145],[-0.075,-0.102],[-0.1,-0.048],[-0.148,-0.075],[-0.097,-0.121],[0,-0.243],[0,0],[0,-0.173],[0,-0.123],[0,-0.469],[0,-0.073],[0.297,0.051],[0.101,0.075],[0.122,0.144],[0.075,0.097],[0.147,0.076],[0.175,0],[0.144,-0.021],[0.174,-0.029],[0.152,0],[0.341,0],[0.147,0],[0.05,-0.127],[0.073,-0.099],[0.146,-0.073],[0.127,-0.024],[0.271,-0.052],[0.176,-0.076],[0.125,-0.152],[0.122,-0.099],[0.171,-0.071],[0.211,-0.002],[0,-0.004],[-0.052,-0.269],[-0.073,-0.119],[-0.098,-0.098],[-0.126,-0.072],[-0.126,-0.076],[0,-0.245],[0.024,-0.222],[0.073,0],[0.294,0],[0.293,0.028],[0.271,0.026],[0,0],[0.144,0],[0.323,0.099],[0.174,0.047],[0.121,0.026],[0.066,-0.006],[0.062,0.014],[0.146,0.097],[0.075,0.172],[0,0],[0.119,-0.071],[0.15,-0.1],[0.064,0.015],[0.066,-0.04],[0,-0.244],[-0.147,-0.175],[-0.148,-0.123],[-0.078,-0.098],[-0.051,-0.121],[-0.048,-0.152],[0,0],[-0.315,-0.075],[-0.248,-0.198],[0,-0.217],[0.025,-0.171],[0,0],[0.144,-0.05],[0.144,0],[0.121,0.073],[0.074,0.101],[0.146,0.094],[0.466,0.075],[0.066,-0.006],[0.063,0.013],[0.173,0.27],[0.024,0.149],[0,0.149],[0,0.468],[0,0],[0,0],[0.098,0.59],[0.22,0.194],[0.248,-0.009],[0.175,0.048],[0.128,0.126],[0.097,0.197],[0.244,0.172],[0.179,-0.014],[0.128,0.032],[0.169,0.098],[0.294,0.15],[0,0],[-0.122,-0.053],[-0.125,-0.077],[-0.125,-0.073],[-0.268,-0.12],[-0.293,-0.121],[-0.15,-0.026],[-0.223,0.022],[-0.249,-0.036],[-0.122,-0.05],[-0.147,-0.098],[-0.345,0],[0,0],[-0.149,-0.048],[-0.124,-0.051],[-0.148,-0.072],[-0.124,-0.028],[-0.146,0],[-0.148,0],[-0.296,0],[0,0],[0,0],[-0.146,0.024],[-0.067,-0.006],[-0.061,0.013],[-0.124,0.024],[-0.32,0.073],[-0.146,0],[-0.271,0.074],[-0.145,0.08],[-0.117,0.095],[-0.075,0.146],[-0.05,0.147],[0,0.291],[0.047,0.471],[0.024,0.125],[0.171,0.27],[0.127,0.122],[0.196,0.073],[0.121,0.025],[0.199,0],[0.297,0],[0.274,0.069],[0.269,0.196],[0.123,0.099],[0.125,0.099],[0.127,0.1],[0.172,0.071],[0.067,-0.014],[0.061,0.025],[0,0],[0.146,0.076],[0.122,0.05],[0,0],[0.175,0.073],[0.124,0.021],[0.366,0],[0.364,-0.049],[0.223,0],[0,0],[0.171,0.075],[0.146,0.097],[0.246,0.274],[0,0],[0.098,-0.17],[0.146,-0.023],[0.145,0],[0,0],[0.168,0.097],[-0.05,0.148],[0,0.246],[0.026,0.049],[0.121,0.096],[0.078,0.124],[0.025,0.122],[0.025,0.196],[0,0],[0.125,-0.073],[0.217,0],[0.2,0.123],[0.123,0.072],[0.075,0.12],[0.296,0.019],[0.318,0.052],[0.123,0.026],[0,0],[-0.15,0],[-0.148,0],[-0.198,0],[0,0],[0.126,0.1],[0.169,0.027],[0.119,0],[0.342,0],[0.267,0.1],[0.123,0.097],[0.145,0.101],[0.121,0.047],[0,0],[0,0],[0.417,0],[0,0],[-0.074,0.123],[-0.069,0.174],[-0.024,0.099],[0,0],[0.099,-0.467],[0,-0.169],[0,0],[-0.024,-0.147],[0,0],[-0.019,0.149],[0,0.224],[0.125,0.17],[0.177,0],[0,0],[0,0],[0,0],[0.397,-0.12],[0.172,0],[0.122,0],[0.123,-0.048],[0,-0.2],[0.197,-0.244],[0.244,0],[0,0],[0.175,0.047],[0.144,0.097],[-0.098,0.123],[-0.123,0.123],[0,0],[0.468,-0.126],[0.172,-0.075],[0.051,-0.194],[0,-0.148],[-0.051,-0.147],[-0.194,-0.075],[-0.292,-0.026],[-0.269,-0.026],[0,0],[0,0],[0.196,0.026],[0.342,0],[0.273,0.052],[0.172,0],[0,0],[0.048,-0.418],[0.024,-0.125],[0.075,-0.151],[0.122,-0.099],[0.076,0.273],[0.072,0.096],[0.147,0.073],[0.067,-0.012],[0.061,0.026],[0.148,0.073],[0.151,0.097],[0.07,-0.013],[0.061,0.025],[0.393,0],[0.271,-0.026],[0,0],[0,-0.172],[0,-0.196],[0,-0.322],[0.02,-0.125],[0.121,-0.123],[0.248,0],[0.121,0.145],[0.02,0.124],[0.023,0.149],[0.023,0.15],[0.096,-0.124],[0.148,-0.098],[0.078,0.01],[0.056,-0.011],[0.295,-0.024],[0,0],[-0.147,-0.047],[-0.062,0.014],[-0.069,-0.039],[-0.072,-0.122],[0,-0.149],[0,0],[0.05,-0.15],[0.122,0.074],[0.196,0.027],[0.161,-0.016],[0.143,0.012],[0.171,0.049],[0.026,0.471],[0.048,0.149],[0.223,-0.051],[0,0],[0.175,0],[0.25,0],[0.365,-0.172],[-0.052,-0.118],[0,-0.168],[0,-0.173],[0.395,-0.024],[0.122,0],[0.122,-0.047],[0.146,-0.124],[0.098,-0.073],[0.101,-0.073],[0.124,-0.147],[0.099,-0.074],[0.078,0.016],[0.045,-0.023],[0.148,-0.194],[0,0],[-0.121,0.098],[-0.147,0.073],[-0.147,0.047],[-0.147,0],[-0.147,0],[-0.119,0.047],[-0.148,0.073],[-0.153,0.075],[-0.075,-0.01],[-0.056,0.011],[-0.065,-0.006],[-0.064,0.013],[-0.173,0.074],[-0.391,0],[-0.37,-0.099],[-0.149,-0.073],[0,0],[0.267,-0.049],[0.127,-0.049],[0.127,-0.046],[0.123,-0.031],[0.064,0.033],[0.064,-0.024],[0.102,-0.124],[0.074,-0.122],[0.075,-0.122],[0.072,-0.121],[0.02,-0.147],[0,-0.145],[0.02,-0.296],[0.245,-0.345],[0.219,-0.248],[0.121,-0.098],[0.126,-0.099],[0.125,-0.095],[0.098,-0.096],[0.075,-0.148],[0.023,-0.123],[0.023,-0.124],[0.149,-0.145],[0.049,-0.2],[0.025,-0.272],[0.022,-0.149],[0.022,-0.151],[0,0],[0.173,-0.072],[0.244,-0.171],[0.147,-0.098],[0.145,-0.101],[0.078,0.015],[0.053,-0.01],[0.119,-0.025],[0.173,-0.074],[0,0],[-0.149,0],[-0.15,0],[0,0],[0.052,-0.176],[0.052,-0.096],[0.118,-0.075],[0.147,-0.073],[0.144,-0.098],[0.123,-0.075],[0.172,-0.098],[0.168,-0.069],[0.097,-0.054],[0.123,-0.148],[0.074,-0.148],[0.073,-0.122],[0.27,0],[0.417,0],[0,0],[0,0],[-0.101,-0.294],[0.44,-0.071],[0.069,0.007],[0.06,-0.011],[0.299,-0.148],[0.146,-0.075],[0.17,-0.051],[0.06,0.008],[0.068,-0.028],[0.075,-0.125],[0.024,-0.121],[0.024,-0.121],[0.171,-0.099],[0.177,-0.024],[0.126,-0.024],[0.124,0],[0.148,-0.122],[0,-0.197],[0,-0.148],[0,-0.171],[0.074,-0.123],[0.086,0.004],[0.022,-0.046],[0,-0.171],[-0.022,-0.15],[0,-0.247],[0.147,-0.2],[0.079,0.022],[0.045,-0.038],[0.098,-0.096],[0,0],[0,0],[-0.147,-0.046],[-0.147,-0.046],[-0.101,-0.122],[0.101,-0.121],[0.071,-0.146],[0.048,-0.124],[0.025,-0.123],[0.074,-0.172],[0,-0.149],[0,-0.196],[-0.614,-0.048],[0.153,-0.317],[0.076,-0.173],[0,-0.175],[0,-0.175],[-0.02,-0.127],[-0.273,-0.054],[-0.063,0.011],[-0.102,-0.044],[-0.153,-0.1],[-0.148,-0.147],[0,0],[-0.123,-0.024],[-0.243,0],[-0.318,0.172],[-0.172,0.074],[-0.075,-0.011],[-0.055,0.011],[-0.122,0.049],[-0.145,0.098],[-0.101,0.121],[-0.127,0.145],[-0.269,0.269],[-0.17,0.046],[-0.125,0.027],[-0.146,0],[-0.147,0.024],[0,0],[-0.058,0.009],[-0.067,-0.026],[-0.103,-0.096],[-0.075,-0.151],[-0.047,-0.129],[-0.051,-0.173],[-0.072,-0.318],[-0.02,-0.124],[-0.101,-0.148],[0,-0.273],[0,0],[0,-0.223],[0,-0.128],[-0.268,-0.173],[-0.118,-0.076],[-0.099,-0.148],[-0.026,-0.173],[0,0],[0,0],[-0.152,-0.268],[-0.12,-0.12],[-0.123,-0.15],[-0.05,-0.178],[0,-0.148],[0.025,-0.122],[0,-0.249],[0,0],[-0.025,-0.146],[-0.025,-0.152],[0,0],[-0.023,0.195],[-0.023,0.121],[-0.081,0.146],[-0.195,0.048],[-0.148,0],[0,0],[-0.124,0],[-0.176,0],[-0.151,0.078],[-0.172,0.075],[-0.343,0],[0,0],[0,0],[0,0.149],[0.03,0.217],[0,0],[0.148,0.027],[0.059,-0.008],[0.068,0.027],[0.075,0.103],[0.101,0.075],[-0.173,0.297],[-0.05,0.176],[-0.025,0.296],[-0.024,0.293],[-0.024,0.122],[-0.072,0.149],[-0.124,0.097],[-0.168,0.074],[-0.123,0.047],[-0.174,0.048],[-0.123,0.05],[-0.066,-0.015],[-0.053,0.041],[-0.073,0.149],[-0.05,0.121],[-0.099,0.145],[-0.095,0.126],[-0.023,0.171],[0,0.149],[0,0],[0.029,0.192],[0.295,0.022],[0.295,0],[0.146,0],[0.097,0.469],[0.2,0.072],[0.071,-0.013],[0.049,0.025],[0.148,0.118],[0,0.148],[0,0],[-0.099,0.122],[-0.096,0.122],[-0.075,0.169],[-0.028,0.148],[-0.124,0.245],[-0.122,0.103],[-0.147,0.045],[-0.074,-0.011],[-0.057,0.011],[-0.249,0.198],[-0.1,0.12],[-0.125,0.122],[-0.125,0.068],[-0.166,-0.005],[-0.101,0.019],[-0.068,-0.011],[-0.1,0.043],[-0.123,0.098],[-0.074,0.147],[-0.046,0.097],[-0.145,0.121],[-0.128,0.03],[-0.124,0],[-0.125,0.029],[-0.119,0.046],[0,0.243],[0.124,0.2],[0.072,0.174],[0,0.147],[-0.264,0.37],[-0.144,0.094],[-0.077,-0.018],[-0.057,0.023],[-0.148,0.093],[-0.072,0.202],[-0.126,0.269],[-0.097,0.073],[-0.295,0],[-0.271,-0.048],[-0.069,0.005],[-0.061,-0.012],[-0.126,-0.101],[-0.221,-0.295],[-0.099,0.049],[-0.175,0.049],[-0.148,0],[-0.148,-0.097],[-0.077,-0.145],[-0.072,-0.123],[0,-0.168],[0,0],[0,0],[0.026,-0.468],[0.026,-0.124],[0.196,-0.265],[0.147,-0.1],[0.247,0],[0.419,0],[0.147,-0.048],[0.125,-0.097],[0.072,-0.122],[0.072,-0.147],[0.073,-0.122],[0.123,-0.098],[0.125,-0.149],[0.126,-0.122],[0.124,-0.073],[0,-0.368],[0,-0.54],[0.097,-0.221],[0,-0.272],[-0.027,-0.536],[0,0],[0,-0.151],[0,-0.344],[-0.372,-0.051],[-0.271,-0.149],[-0.124,-0.12],[-0.143,-0.072],[-0.292,-0.126],[-0.15,-0.073],[-0.418,0],[0,0],[-0.145,0.048],[-0.592,0],[-0.389,0],[-0.194,0.024],[-0.121,0.046],[-0.121,0.077],[-0.069,0.097],[-0.121,0.098],[0,0],[-0.173,0.051],[-0.221,0],[-0.047,-0.026],[-0.1,-0.148],[-0.076,-0.119],[-0.123,-0.093],[0,0],[0,0],[0.196,-0.048],[0.294,0],[0.369,-0.048],[0.12,-0.018],[0.149,-0.073],[0.149,-0.124],[0.098,-0.147],[0.098,-0.148],[0.098,-0.12],[0.146,-0.073],[0.148,0],[0.267,0.097],[0.171,0.126],[0.273,0],[0.372,-0.05],[0.296,0.026],[0.293,-0.024],[0.122,-0.025],[0.144,-0.051],[0.194,0],[0.148,0],[0.169,0],[0.147,-0.07],[0.096,-0.121],[0.046,-0.124],[0.124,-0.145],[0.147,0],[0.145,0],[0.123,0.047],[0.144,0.126],[0.097,0.051],[0.147,0],[0.122,-0.025],[0.124,-0.068],[0.07,-0.119],[-0.171,-0.05],[-0.068,0.006],[-0.063,-0.012],[-0.174,-0.073],[0.271,-0.026],[0.466,-0.148],[0.147,-0.048],[-0.073,-0.097],[-0.322,-0.124],[-0.117,0],[-0.144,0],[-0.222,0],[-0.197,0.048],[-0.251,0.294],[-0.248,0],[-0.194,-0.102],[-0.121,-0.072],[-0.096,-0.149],[-0.051,-0.124],[-0.051,-0.103],[-0.12,-0.075],[-0.151,-0.069],[-0.145,-0.095],[0.122,-0.122],[0.372,-0.24],[0.048,-0.149],[0.024,-0.124],[0.023,-0.269],[0,0],[0.174,0.074],[0.101,0.072],[0.073,0.146],[0.073,0.123],[0.124,0.146],[0.084,-0.025],[0.024,0.047],[0.022,0.123],[0,0.151],[0,0],[0.292,-0.225],[0.12,-0.1],[0.072,-0.121],[0.022,-0.122],[0.022,-0.123],[0.054,-0.147],[0.072,-0.17],[0.026,-0.122],[0,-0.245],[-0.048,-0.199],[0,-0.127],[0,-0.175],[0.074,-0.172],[0.072,-0.169],[0.025,-0.199],[0,0],[0,0],[0.145,0.027],[0.418,0.051],[0.297,0],[0.293,-0.025],[0.076,-0.145],[0,-0.196],[-0.051,-0.148],[-0.27,-0.245],[0,0],[0,0],[0.513,0.346],[0.124,0.125],[0.223,0.047],[0.148,0],[0.146,-0.022],[0.322,-0.198],[0.168,-0.072],[0.121,-0.049],[0.123,-0.072],[0.145,-0.097],[0.171,-0.076],[0.466,0],[0.269,-0.078],[0.199,-0.05],[0.25,0],[0.295,0.295],[0,0.54],[0,0],[0.124,-0.071],[0.12,0],[0.144,0],[0.195,0],[0,0],[0.318,0],[0.051,-0.471],[0,0],[0.175,0.127],[0.048,0.172],[0.072,0.322],[0,0],[0,0],[0,0],[0,0.15],[-0.023,0.147],[0,0],[-0.296,-0.096],[-0.175,-0.073],[-0.249,0],[-0.293,0.027],[0,0.296],[0,0.393],[-0.099,0.223],[0,0.27],[0.025,0.297],[0,0],[0.175,0],[0.101,0.013],[0.162,-0.059],[0.147,-0.073],[0.101,-0.127],[0.225,0],[0,0],[0.149,0.047],[-0.122,0.247],[-0.075,0.172],[0,0.145],[0,0],[0.296,0],[0.148,0.021],[-0.072,0.176],[-0.074,0.32],[0,0.148],[0.023,0.125],[0.075,0.171],[0.101,0.118],[0.196,0],[0.147,0],[0.075,-0.174],[0.125,-0.247],[0.32,-0.122],[0.076,0.011],[0.052,-0.009],[0.174,-0.05],[0,-0.22],[0,-0.248],[0,0],[0.098,-0.071],[0.123,-0.048],[0.123,-0.031],[0,-0.417],[-0.222,-0.321],[-0.149,-0.121],[-0.126,-0.077],[-0.148,-0.078],[0.025,-0.125],[0,-0.173],[0,-0.17],[0,0],[0,-0.246],[0,-0.098],[-0.048,-0.125],[-0.074,-0.174],[0,-0.339],[0,0],[0,0],[0.194,-0.024],[0.392,0],[0,0],[0.271,0],[0.397,0],[0.246,-0.145],[0.122,-0.071],[0.146,-0.051],[0.243,-0.196],[0.071,-0.128],[0.053,-0.149],[0.392,0],[0.174,0.029],[0,0],[0,0],[0.148,0],[0.151,0],[0,0],[0,0],[0,0],[0.193,-0.047],[0.148,-0.051],[0.122,-0.048],[0.147,-0.072],[0.296,-0.249],[0.176,-0.097],[0.172,-0.02],[0,0],[0.491,0],[0,0],[0.542,-0.097],[0.122,-0.026],[0.122,-0.025],[0,0],[0,0],[0.171,0],[0.109,-0.011],[0.152,0.041],[0.149,0.102],[0.077,0.099],[0.241,0],[0.216,-0.018],[0,0],[-0.296,-0.094],[0,0],[0,0],[0,0],[0.492,0],[0.144,0.022],[0.146,0],[0.147,0],[0.171,0.048],[0.146,0.099],[0.073,0.121],[0.296,-0.049],[0.067,0.006],[0.06,-0.013],[0.242,-0.168],[0.071,-0.147],[0,-0.147],[-0.098,-0.123],[-0.085,0.021],[-0.044,-0.02],[-0.148,-0.073],[-0.148,-0.073],[-0.144,-0.023],[-0.165,0.016],[-0.143,-0.009],[0,0],[-0.146,-0.073],[-0.147,-0.098],[-0.124,-0.072],[-0.124,-0.121],[-0.293,-0.223],[0,0],[-0.147,-0.097],[-0.144,-0.073],[-0.266,-0.2],[0,-0.244],[0.021,-0.197],[0,-0.272],[-0.078,-0.545],[0,-0.222],[0.097,-0.196],[0.372,-0.371],[0.094,-0.099],[0.12,-0.072],[0.494,0],[0,0],[0.176,0.05],[0.246,0.047],[0.149,0],[0.391,0.05],[0.152,0.075],[0.172,0.102],[0.174,0],[0,0],[0.393,0],[0.174,0.026],[0.268,0],[0,0],[0.073,-0.126],[0.052,-0.118],[0.049,-0.146],[0,0],[0,0],[-0.118,-0.118],[-0.101,-0.148],[0,-0.221],[0.048,-0.197],[0,-0.394],[-0.073,-0.245],[-0.052,-0.149],[0,-0.195],[0,0],[0.074,-0.125],[0.097,-0.149],[0.078,-0.125],[0,-0.493],[-0.025,-0.121],[-0.076,-0.169],[0,0],[-0.023,-0.194],[0,0],[0,0],[0.053,-0.173],[0,-0.246],[-0.021,-0.37],[0,0],[-0.343,0],[-0.147,-0.048],[-0.146,-0.096],[-0.222,0],[-0.393,0],[-0.176,-0.048],[-0.149,-0.051],[-0.125,-0.048],[0,0],[-0.097,-0.145],[-0.076,-0.145],[-0.075,-0.12],[-0.123,-0.151],[0,0],[0,0],[-0.174,0],[-0.126,-0.006],[-0.146,0.012],[-0.272,0.101],[-0.148,0.073],[-0.291,0.252],[-0.169,0.078],[-0.295,0.051],[-0.125,-0.006],[-0.149,0.013],[-0.147,0.048],[-0.146,0.096],[-0.244,0.295],[-0.518,0.197],[-0.295,0.028],[-0.214,-0.01],[-0.225,0.012],[-0.294,0.023],[0,0],[0.074,0.125],[0.147,0.146],[0,0.22],[-0.072,0.197],[-0.076,0.167],[-0.172,0.345],[0,0],[-0.07,0.121],[-0.124,0.072],[-0.08,-0.016],[-0.051,0.01],[-0.268,0.1],[-0.119,0.096],[-0.174,0.047],[-0.122,0.047],[-0.067,-0.012],[-0.062,0.024],[-0.172,0.075],[-0.076,-0.011],[-0.054,0.011],[-0.147,0.024],[-0.216,-0.016],[-0.193,0.011],[-0.293,0.025],[0,0],[0,0],[0,0.293],[0,0.172],[-0.074,0.27],[-0.096,0.123],[-0.293,0.074],[-0.223,0],[-0.368,-0.072],[-0.068,0.006],[-0.06,-0.012],[-0.494,-0.15],[-0.391,0],[0,0],[-0.146,0],[-0.148,0],[-0.072,0.249],[-0.074,0.102],[-0.125,0.1],[-0.174,0.074],[-0.124,0],[0,0],[-0.27,0.048],[-0.17,0.072],[-0.148,0.097],[-0.147,0.126],[-0.221,0],[-0.145,0],[-0.269,-0.196],[-0.196,-0.273],[-0.196,-0.464],[-0.05,-0.119],[-0.097,-0.144],[-0.147,-0.096],[-0.149,-0.074],[0,0],[-0.122,-0.075],[-0.122,-0.173],[-0.049,-0.099],[-0.145,-0.121],[-0.146,-0.127],[-0.121,-0.099],[-0.174,-0.121],[-0.125,-0.074],[-0.174,-0.096],[-0.173,-0.049],[-0.293,-0.052],[-0.071,0.009],[-0.098,-0.028],[-0.126,-0.099],[-0.074,-0.121],[-0.465,-0.272],[-0.127,-0.049],[-0.149,-0.069],[-0.123,-0.097],[-0.198,-0.276],[-0.172,-0.317],[-0.048,-0.149],[-0.027,-0.121],[0,-0.32],[0.047,-0.294],[0.663,-0.419],[0.169,-0.071],[0.123,-0.025],[0.294,0],[0.198,0],[1.051,0],[0,0],[-0.269,-0.197],[-0.099,-0.124],[-0.076,-0.123],[-0.098,-0.096],[-0.175,-0.077],[-0.076,0.011],[-0.054,-0.011],[-0.319,0],[0,0],[0,0],[-0.125,0.05],[-0.266,0.196],[-0.172,0.096],[-0.07,-0.02],[-0.038,0.05],[-0.049,0.125],[-0.098,0.267],[-0.075,0.101],[-0.171,0.098],[-0.075,-0.011],[-0.056,0.011],[-0.267,0.096],[0,0.148],[0,0.149],[0,0],[0.196,0],[0,0],[0.148,0],[0,0],[-0.023,0.226],[0,0],[-0.322,-0.121],[-0.122,-0.077],[-0.223,0],[-0.174,0],[0.074,0.466],[0,0.293],[0.194,0.027],[0.066,-0.005],[0.061,0.015],[0.17,0.077],[0.147,0.124],[0.171,0.098],[0.127,0.072],[0.172,0.072],[0.067,-0.014],[0.052,0.039],[0.122,0.126],[0.099,0.047],[0.08,-0.011],[0.055,0.01],[0.07,-0.007],[0.06,0.011],[0.146,0.05],[0.099,0.075],[0.121,0.076],[0.172,0.075],[0.075,-0.011],[0.055,0.013],[0.143,0.021],[0.068,-0.006],[0.071,0.011],[-0.023,0.121],[0,0.194],[0,0.147],[0.174,0.125],[0.175,0.05],[0.392,0.247],[0.123,0.094],[0.073,-0.021],[0.038,0.049],[0.026,0.121],[0,0.345],[0.349,0],[0.34,-0.024],[0,0],[0,0],[0,0.194],[0,0],[0.049,0.123],[0,0.221],[-0.173,0.148],[-0.223,0],[-0.175,-0.098],[-0.098,-0.146],[-0.101,-0.15],[-0.125,-0.096],[-0.074,0.017],[-0.059,-0.023],[-0.122,-0.047],[-0.148,-0.101],[-0.146,-0.099],[-0.148,-0.05],[-0.077,0.011],[-0.056,-0.01],[-0.152,-0.098],[-0.051,-0.193],[-0.245,-0.22],[-0.076,0.017],[-0.057,-0.021],[-0.296,-0.195],[-0.123,-0.072],[-0.146,-0.123],[-0.367,-0.02],[-0.086,0.005],[-0.154,-0.117],[-0.07,-0.094],[-0.12,-0.096],[-0.147,-0.074],[-0.293,-0.15],[-0.542,-0.195],[-0.249,-0.147],[-0.125,-0.147],[-0.05,-0.121],[0,-0.2],[0.05,-0.148],[0.076,-0.175],[0.028,-0.124],[0,-0.219],[-0.096,-0.171],[0,-0.369],[-0.046,-0.27],[-0.198,-0.24],[-0.12,-0.073],[-0.08,0.017],[-0.051,-0.009],[-0.145,0],[-0.267,-0.054],[0,0],[0,0],[0.124,0.025],[0.147,0],[0.148,-0.024],[-0.048,-0.126],[-0.074,-0.15],[-0.291,-0.243],[-0.121,-0.099],[-0.148,-0.145],[-0.1,0.149],[-0.05,0.096],[-0.126,0.15],[-0.053,-0.122],[-0.07,-0.099],[-0.149,-0.294],[-0.023,-0.345],[-0.023,-0.12],[-0.197,-0.151],[0,0],[-0.125,0.025],[-0.126,0.077],[-0.097,0.12],[-0.073,0.171],[0,0.149],[0,0],[0,0.171],[-0.125,0.097],[-0.171,0],[-0.121,-0.026],[-0.199,-0.025],[-0.168,0],[0,0],[-0.196,0.025],[-0.021,0.341],[0,0.146],[0,0.071],[-0.316,0.022],[-0.147,0.021],[0.122,0.147],[0.144,0.124],[0.194,0.071],[0.197,0],[0,-0.297],[0.025,-0.15],[0.169,0.07],[0.121,0.053],[0.124,0.175],[0.049,0.173],[0.024,0.123],[0.022,0.118],[0.049,0.12],[0.12,0.099],[0.123,0.052],[0.074,-0.011],[0.056,0.013],[0.123,0.148],[0.026,0.169],[0,0.148],[0,0],[-0.078,0.17],[0,0],[-0.151,-0.069],[-0.174,-0.025],[-0.292,0],[0,0],[0,0],[-0.171,0.077],[0.146,0.1],[0.121,0.048],[-0.121,0.146],[-0.193,0.025],[-0.347,0],[-0.322,-0.048],[-0.124,-0.023],[-0.146,-0.074],[-0.196,-0.047],[-0.06,0.008],[-0.067,-0.025],[-0.099,-0.101],[-0.052,-0.119],[-0.076,-0.1],[-0.095,-0.076],[-0.146,-0.077],[0,0],[0.12,-0.074],[0,-0.221],[-0.294,-0.27],[-0.269,-0.197],[0,-0.441],[0,-0.076],[0,-0.149],[0,-0.147],[0,0],[-0.062,-0.147],[-0.096,-0.158],[-0.058,-0.076],[-0.072,-0.062],[-0.065,-0.048],[-0.061,-0.048],[-0.096,-0.07],[-0.062,-0.072],[0,-0.134],[0.035,-0.124],[0.06,-0.089],[0.024,-0.071],[0.007,-0.101],[0,-0.15],[-0.044,-0.205],[-0.037,-0.077],[-0.088,-0.038],[-0.097,0],[-0.074,0.211],[-0.011,0.06],[-0.024,0.111],[0,0.079],[0.016,0.234],[0,0.073],[-0.011,0.237],[0,0],[-0.047,-0.021],[-0.076,-0.048],[-0.066,-0.057],[-0.076,-0.064],[-0.163,-0.16],[-0.064,-0.075],[-0.075,-0.082],[-0.086,-0.035],[-0.078,-0.02],[-0.077,0],[-0.149,0],[-0.135,-0.048],[-0.082,-0.023],[-0.16,0],[-0.075,0.01],[-0.062,0.041],[-0.036,0.091],[0,0.076],[0,0.084],[0,0.223],[-0.036,0.098],[-0.06,0.086],[-0.038,0.077],[-0.086,0.037],[-0.195,0],[-0.17,-0.122],[-0.065,-0.058],[-0.149,-0.128],[-0.077,-0.059],[-0.162,-0.11],[-0.1,-0.086],[-0.072,-0.045],[-0.074,-0.035],[-0.06,-0.021],[-0.109,0],[0,0],[0,0.271],[0,0],[0,0.109],[-0.024,0.185],[-0.122,0],[-0.075,0],[-0.079,0.011],[-0.109,0],[-0.232,-0.134],[-0.161,-0.088],[-0.073,-0.024],[-0.163,0],[-0.069,0.025],[-0.064,0.04],[-0.052,0.061],[-0.065,0.059],[-0.028,-0.048],[-0.076,-0.123],[-0.034,-0.075],[-0.016,-0.063],[0,-0.148],[0.064,-0.235],[0.037,-0.09],[0.087,-0.221],[0,-0.308],[-0.011,-0.137],[-0.033,-0.113],[-0.023,-0.075],[-0.027,-0.061],[-0.051,-0.122],[0,-0.11],[0.036,-0.122],[0.074,-0.075],[0.034,-0.089],[0.01,-0.073],[0,-0.171],[0.035,-0.073],[0.052,-0.075],[0.086,-0.208],[0.075,-0.134],[0.187,-0.087],[0.083,-0.046],[0.076,-0.06],[0.035,-0.098],[0.011,-0.063],[0.013,-0.151],[0.136,-0.354],[0.075,-0.199],[0.158,-0.162],[0.073,-0.06],[0.085,-0.051],[0.084,-0.011],[0,0],[0.062,0.004],[0.091,-0.012],[0.148,-0.025],[0.065,0],[0.042,0.004],[0.041,-0.005],[0.06,-0.011],[0.072,-0.038],[0.124,0],[0.124,0.036],[0.071,0.062],[0.219,0.026],[0,0],[0.113,0],[0.137,0.012],[0.108,0],[0.183,0.038],[0.097,0],[0,0],[0.084,-0.011],[0.087,-0.05],[-0.16,-0.062],[-0.246,-0.061],[-0.245,-0.024],[-0.147,-0.012],[0,0],[0,0],[-0.097,-0.123],[-0.033,-0.076],[0,-0.137],[0,-0.083],[0,-0.076],[0,-0.101],[0,-0.306],[-0.124,-0.122],[-0.196,-0.297],[-0.073,-0.147],[0,0],[-0.1,-0.147],[-0.126,-0.146],[-0.192,-0.075],[-0.172,0],[0,0],[-0.149,0.048],[-0.099,0.122],[-0.05,0.126],[-0.147,0.148],[0,0],[-0.32,-0.445],[-0.1,-0.122],[-0.147,-0.122],[-0.124,-0.073],[-0.072,-0.174],[-0.073,-0.316],[-0.024,-0.123],[-0.074,-0.148],[-0.272,-0.316],[-0.071,-0.199],[0,-0.269],[0,0],[0,-0.148],[-0.246,-0.395],[-0.225,-0.1],[-0.145,-0.048],[-0.118,-0.076],[-0.101,-0.121],[-0.078,-0.12],[-0.072,-0.124],[-0.217,-0.394],[-0.144,-0.296],[0,0],[0,-0.491],[0.027,-0.148],[0.025,-0.173],[0,-0.145],[-0.174,-0.224],[-0.148,-0.122],[-0.125,-0.072],[-0.148,-0.126],[-0.273,-0.272],[-0.122,-0.146],[-0.097,-0.122],[-0.123,-0.17],[-0.147,-0.318],[-0.122,-0.147],[-0.122,-0.17],[-0.297,-0.418],[-0.368,-0.491],[-0.073,-0.148],[-0.073,-0.196],[0,-0.175],[-0.022,-0.293],[-0.022,-0.125],[-0.049,-0.146],[0,-0.369],[0,0],[-0.393,-0.343],[-0.39,-0.042],[-0.297,0],[-0.42,0.145],[-0.096,0.169],[-0.22,0.219],[-0.3,0.122],[-0.173,0],[0,0],[-0.17,-0.05],[-0.069,0.006],[-0.061,-0.012],[0,0],[-0.122,0.146],[-0.174,0.117],[-0.2,0.072],[-0.438,0.149],[-0.171,0.056],[-0.133,-0.016],[-0.133,0.028],[-0.17,0.023],[-0.124,0],[-0.267,0.097],[-0.146,0.146],[0,0],[-0.199,0.049],[-0.123,0],[-0.469,0],[-0.025,0.267],[-0.074,0.1],[-0.147,0.125],[-0.076,-0.017],[-0.057,0.023],[-0.174,0.048],[-0.124,0.024],[-0.147,0.017],[-0.122,0],[-0.146,0.023],[0,0],[-0.027,0.217],[0,0.124],[-0.027,0.117],[-0.174,0.275],[0,0],[-0.023,0.124],[-0.051,0.148],[-0.196,0.226],[-0.172,0.073],[-0.147,0],[0,0],[-0.145,0],[0,0],[-0.046,0.145],[-0.046,0.123],[-0.075,0.169],[-0.097,0.121],[-0.248,0],[0,0],[-0.144,-0.097],[-0.12,-0.046],[-0.047,0.465],[-0.103,0.49],[-0.049,0.169],[-0.097,0.094],[-0.124,0.029],[-0.065,-0.007],[-0.064,0.015],[-0.294,0.124],[0.122,0.317],[0.195,0.072],[0.061,-0.008],[0.07,0.027],[0.146,0.074],[0.071,0.126],[0.023,0.121],[0.027,0.178],[0.076,0.148],[0.177,0.072],[0.296,0.074],[0.122,0],[0.146,0.05],[-0.023,0.127],[0,0.319],[0.051,0.099],[0.12,0.073],[0.175,0],[0,0],[0.099,-0.324],[0.246,-0.243],[0.07,0.319],[0.05,0.124],[0.095,0.127],[0.122,0.124],[0,0],[0.121,0.126],[0.121,0.099],[0.126,-0.075],[0.125,-0.074],[0.121,-0.076],[0.071,-0.317],[0.022,-0.468],[0.025,-0.295],[0.291,0],[0.339,0.023],[0,0],[0.171,0.048],[0.298,0],[0.074,-0.023],[0.172,-0.074],[0.12,-0.073],[0.149,-0.146],[0.223,0],[0.267,0.147],[0.153,0.149],[0.051,0.199],[0,0.146],[-0.049,0.097],[-0.095,0.078],[-0.42,0],[0,0],[-0.221,-0.051],[-0.245,0],[-0.246,0.023],[-0.145,0.023],[0.097,0.073],[0.195,0],[0,0],[0.296,0],[0,0],[0.146,0],[0.123,0.026],[0.419,0.022],[0.208,-0.007],[0.232,0.011],[0.147,0],[0,0],[0,0],[0.144,0.095],[0.128,0.078],[0.197,0.072],[0.121,0.02],[0.122,0],[0.147,0.052],[0.072,0.223],[0.023,0.17],[0.072,0.268],[0.196,0.273],[0.047,0.195],[0.025,0.125],[0,0.147],[0.023,0.196],[0,0.247],[-0.028,0.245],[-0.076,0.148],[-0.2,0.072],[-0.221,0],[-0.365,-0.075],[-0.395,-0.393],[-0.124,-0.099],[-0.249,-0.293],[-0.097,-0.171],[-0.249,-0.419],[-0.177,-0.102],[-0.447,-0.248],[-0.294,-0.245],[-0.32,-0.196],[-0.318,-0.072],[-0.164,0.016],[-0.141,-0.009],[-0.12,0],[-0.591,0],[0,0],[0,0],[-0.148,0.022],[-0.131,-0.006],[-0.133,0.012],[-0.148,0.024],[0,0],[-0.268,-0.072],[-0.146,-0.102],[-0.12,-0.319],[-0.023,-0.124],[-0.05,-0.12],[-0.12,-0.102],[-0.149,-0.074],[-0.197,0],[0,0],[-0.172,0],[-0.174,-0.047],[-0.148,-0.098],[-0.099,-0.124],[-0.125,-0.072],[-0.222,0],[0,0],[-0.345,0],[0,0],[0,0],[0,0],[-0.298,-0.248],[-0.119,-0.103],[-0.101,-0.147],[-0.247,-0.217],[-0.151,-0.076],[-0.102,-0.048],[-0.126,-0.148],[-0.048,-0.151],[-0.027,-0.296],[-0.101,0.002],[-0.076,-0.092],[-0.123,-0.099],[-0.149,-0.072],[-0.125,0],[0,0],[-0.271,-0.074],[-0.151,-0.053],[-0.122,-0.049],[-0.372,-0.071],[0.468,-0.047],[0.268,-0.07],[0.149,-0.049],[-0.073,-0.126],[-0.121,-0.103],[-0.124,-0.05],[-0.121,-0.049],[-0.12,-0.123],[-0.122,-0.148],[-0.32,-0.196],[-0.174,-0.122],[-0.198,-0.049],[-0.146,0],[-0.122,0.048],[-0.148,0.098],[-0.154,0.073],[-0.241,0.12],[-0.12,0.173],[-0.221,0],[-0.32,-0.244],[-0.073,-0.124],[0,-0.394],[-0.048,-0.27],[-0.078,-0.347],[0,-0.124],[0,-0.317],[0,0],[0,-0.194],[-0.026,-0.54],[-0.026,-0.121],[-0.072,-0.295],[0,-0.148],[-0.049,-0.492],[-0.249,-0.295],[-0.126,-0.146],[-0.099,-0.167],[-0.025,-0.164],[-0.025,-0.122],[-0.098,-0.315],[-0.023,-0.12],[-0.074,-0.175],[-0.025,-0.17],[-0.025,-0.124],[-0.046,-0.147],[-0.074,-0.124],[-0.118,-0.171],[-0.072,-0.123],[-0.075,-0.196],[0,-0.297],[0,0],[0,-0.295],[-0.324,-0.471],[-0.098,-0.174],[-0.074,-0.148],[-0.073,-0.147],[-0.32,-0.662],[-0.171,-0.468],[-0.047,-0.124],[0,0],[-0.141,-0.12],[-0.269,0],[-0.173,0.098],[-0.121,0.148],[-0.049,0.123],[-0.045,0.146],[-0.295,0.392],[-0.126,0.075],[-0.069,-0.012],[-0.061,0.026],[-0.118,0.026],[-0.125,0.149],[-0.076,0.174],[-0.049,0.123],[-0.048,0.146],[0,0.289],[-0.098,0.369],[-0.073,0.172],[-0.074,0.295],[-0.026,0.295],[0.024,0.29],[0,0.296],[0,0.147],[0,0],[0,0.609],[-0.075,0.125],[-0.118,0.076],[-0.467,0],[-0.323,0.296],[-0.096,0.294],[-0.073,0.145],[-0.195,0.075],[-0.122,0.05],[-0.124,0.052],[-0.147,0.098],[-0.145,0.097],[-0.117,0.068],[-0.098,0.071],[-0.096,0.151],[-0.147,0.273],[-0.122,0.148],[-0.096,0.124],[-0.149,0.1],[-0.244,0.222],[-0.098,0.146],[-0.074,0.122],[-0.122,0.078],[-0.077,-0.015],[-0.052,0.013],[-0.06,-0.008],[-0.068,0.027],[-0.124,0.147],[-0.077,0.122],[-0.318,0.095],[-0.147,0],[-0.083,-0.001],[-0.158,0.105],[-0.094,0.148],[-0.049,0.614],[-0.022,0.299],[0,0],[-0.145,-0.027],[-0.22,0],[0,0],[-0.172,0.076],[-0.065,-0.013],[-0.062,0.027],[-0.171,0.077],[-0.1,0.049],[-0.149,0.1],[-0.079,0.124],[0,0],[0,0],[-0.244,-0.052],[-0.06,0.014],[-0.043,-0.063],[-0.096,-0.146],[-0.046,-0.121],[-0.072,-0.121],[-0.125,-0.124],[-0.072,-0.124],[-0.096,-0.321],[0,-0.296],[-0.074,-0.124],[-0.075,-0.122],[-0.097,-0.122],[-0.075,-0.098],[-0.296,-0.248],[-0.121,-0.124],[-0.1,-0.146],[0,-0.196],[0,0],[0,-0.147],[-0.004,-0.285],[-0.001,0],[-0.296,0],[-0.121,-0.07],[-0.074,-0.1],[0,-0.149],[0.075,-0.268],[0.046,-0.145],[0,-0.465],[-0.419,-0.416],[-0.149,-0.099],[-0.173,-0.026],[-0.295,0],[0,0],[-0.125,0.049],[-0.145,0.076],[-0.13,0.052],[-0.145,0.024],[-0.321,0.074],[0,0],[0,0],[-0.073,0.172],[-0.323,-0.344],[-0.074,-0.148],[-0.053,-0.151],[-0.075,-0.297],[-0.151,-0.492],[-0.049,-0.119],[-0.096,-0.145],[-0.075,-0.147],[0,-0.146],[0,-0.589],[-0.047,-0.148],[-0.073,-0.123],[-0.095,-0.123],[-0.272,-0.272],[-0.1,-0.144],[0,-0.248],[0,-0.293],[0,-0.317],[0.344,-0.222],[0.148,-0.073],[0.095,-0.076],[0.047,-0.148],[0,-0.124],[0,-0.466],[0,0],[0.027,-0.296],[0,-0.247],[-0.171,-0.346],[-0.15,-0.123],[-0.148,-0.074],[-0.126,-0.053],[-0.241,-0.296],[-0.32,-0.173],[-0.124,-0.069],[-0.095,-0.146],[-0.026,-0.2],[-0.026,-0.35],[-0.099,-0.245],[-0.126,-0.294],[-0.075,-0.169],[-0.097,-0.195],[0,-0.368],[0,0],[-0.021,-0.148],[-0.051,-0.169],[-0.123,-0.144],[-0.171,-0.1],[-0.146,-0.073],[-0.539,-0.196],[-0.249,-0.197],[-0.173,-0.267],[-0.127,-0.094],[-0.127,-0.051],[-0.124,-0.024],[-0.175,-0.049],[-0.269,0],[0,0],[-0.146,0.069],[0.202,0.276],[0.097,0.099],[0.097,0.096],[0.072,0.317],[0.019,0.343],[0,0.148],[0.074,0.434],[0.026,0.12],[0.073,0.152],[0.049,0.199],[0,0.472],[0,0],[0,0.15],[0,0],[0,0.195],[0,0],[0.371,0.247],[0.123,0.096],[0.121,0.098],[0.121,0.101],[0.173,0.077],[0.295,0.054],[0.068,-0.008],[0.099,0.031],[0.194,0.272],[0.046,0.167],[0.027,0.12],[0,0.292],[0.027,0.123],[0.072,0.098],[0.126,0.096],[0.076,0.124],[0,0.296],[0,0],[0.071,0.097],[0.124,0.072],[0.145,0.051],[0,0],[0,0],[-0.27,0.494],[-0.194,0.462],[0,0.24],[0,0.295],[-0.072,0.197],[-0.102,0.149],[-0.101,0.175],[-0.097,-0.079],[-0.124,-0.099],[-0.099,-0.126],[-0.074,-0.15],[-0.101,-0.244],[-0.146,-0.098],[-0.244,0],[0,0],[-0.148,0.023],[-0.169,0],[-0.196,-0.274],[-0.15,-0.345],[-0.123,-0.316],[-0.148,-0.291],[-0.198,-0.274],[-0.318,-0.147],[-0.077,0.011],[-0.051,-0.008],[-0.124,-0.027],[-0.127,-0.021],[-0.096,-0.073],[0,-0.196],[0.096,-0.314],[0,-0.294],[-0.342,-0.588],[-0.098,0.144],[-0.294,0.246],[-0.149,0.123],[-0.15,0.118],[-0.174,0.146],[-0.097,0.15],[-0.073,0.122],[-0.074,0.174],[-0.047,0.123],[-0.048,0.124],[-0.196,0.048],[-0.224,0],[-0.27,0.02],[-0.167,0.119],[-0.371,0.322],[-0.196,0.098],[-0.098,0.074],[-0.097,0.146],[-0.027,0.122],[0,0.294],[0,0.738],[0,0],[0.074,0.323],[0.121,0.521],[0.026,0.346],[0,0.345],[0.364,0.095],[0.147,0.076],[0.124,0.125],[0.149,0.367],[0.07,0.093],[0.097,0.071],[0.152,0.072],[0.318,0.197],[0.126,0.144],[0.099,0.12],[0.073,0.173],[0.052,0.27],[0.026,0.124],[0.073,0.17],[0,0.243],[-0.052,0.223],[-0.048,0.175],[-0.12,0.099],[-0.115,0.124],[-0.07,0.147],[-0.05,0.179],[-0.023,0.171],[-0.048,0.22],[-0.049,0.174],[-0.196,0.075],[-0.12,0.051],[-0.091,-0.016],[-0.082,0.012],[-0.343,0.12],[-0.068,-0.012],[-0.061,0.024],[-0.175,0.052],[-0.123,0],[-0.318,0],[-0.15,0],[-0.467,0],[0,0],[0,-0.143],[0,0],[0.174,-0.074],[0.146,-0.05],[0.067,0.012],[0.062,-0.025],[0.146,-0.099],[0.094,-0.149],[0,-0.272],[-0.051,-0.199],[-0.077,-0.17],[-0.124,-0.124],[0,0],[-0.151,0.513],[-0.025,0.124],[-0.024,0.175],[0,0.174],[0.073,0.123],[0.272,0.095],[0,0],[-0.318,0.022],[0,0],[-0.148,0.07],[-0.173,0.094],[-0.174,0.046],[-0.268,0.052],[-0.318,0],[0,0],[-0.126,0],[-0.29,0],[-0.119,0.025],[-0.146,0.071],[-0.125,0.123],[-0.123,0.049],[-0.273,0.047],[-0.146,0.025],[-0.126,-0.005],[-0.148,0.013],[-0.125,0.024],[-0.059,-0.008],[-0.069,0.027],[-0.147,0.099],[-0.149,0.074],[-0.124,0.049],[-0.145,0.098],[-0.096,0.101],[-0.1,0.126],[-0.101,0.145],[-0.151,0.097],[-0.17,0.022],[-0.121,0.022],[-0.07,-0.006],[-0.061,0.012],[-0.244,0.223],[-0.099,0.124],[-0.127,0.101],[-0.121,0.148],[-0.075,0.143],[-0.072,0.171],[-0.05,0.123],[-0.076,0.148],[-0.22,0.365],[-0.223,0.443],[-0.049,0.123],[-0.126,0.15],[-0.12,0.125],[-0.201,0.123],[-0.15,0.118],[-0.074,0.175],[-0.05,0.17],[-0.02,0.172],[-0.02,0.124],[-0.021,0.127],[-0.053,0.119],[-0.171,0.098],[-0.197,0.319],[0,0.465],[0.125,0.172],[0.149,0.076],[0.079,-0.016],[0.05,0.01],[0.324,0.023],[0,0.294],[0,0.147],[0,0.146],[0,0],[0.025,0.126],[0.023,0.171],[0.072,0.442],[0.023,0.124],[0.122,0.145],[0.024,0.172],[0,0.465],[0.196,0.419],[0.2,0.321],[0.393,0.197],[0.17,0.047],[0.077,-0.015],[0.078,0.04],[0.097,0.151],[0,0.151],[0,0],[-0.072,0.149],[-0.124,0.149],[-0.027,0.171],[0,0.293],[0,0],[0,0],[-0.096,0.149],[-0.098,0.122],[-0.123,0.075],[-0.078,-0.015],[-0.052,0.011],[-0.122,0],[-0.146,0.021],[0,0],[-0.467,0],[0,0.394],[0.023,0.121],[0,0],[0.075,0.124],[0.224,0.294],[0,0],[0.027,-0.298],[0.027,-0.12],[0.022,-0.127],[0.15,0],[0.147,0],[0.169,0],[0,0],[0,0],[0,0.417],[-0.077,0.22],[-0.097,0.146],[-0.197,0.073],[-0.126,0.02],[-0.467,0],[-0.124,0.02],[-0.098,0.074],[-0.05,0.124],[-0.097,0.148],[-0.171,0.072],[-0.173,0.05],[-0.145,0.019],[-0.15,-0.01],[-0.115,0.009],[-0.123,0.019],[-0.147,0.126],[-0.122,0.149],[-0.124,0.122],[-0.169,0.123],[-0.248,0],[0,0],[-0.148,-0.052],[0,0],[0.124,-0.146],[0.075,-0.145],[0.052,-0.27],[0.246,-0.269],[0.125,-0.149],[0.129,-0.154],[0.047,-0.125],[0,0],[-0.121,0.099],[-0.122,0.123],[0,0],[-0.175,0.122],[-0.246,0.248],[-0.173,0.073],[-0.123,0.02],[-0.173,0],[-0.467,-0.074],[-0.064,0.006],[-0.064,-0.013],[-0.27,-0.146],[-0.098,-0.12],[0,-0.296],[0,0],[0.073,-0.147],[0.098,-0.198],[0.047,-0.124],[0,-0.269],[-0.027,-0.342],[0,0],[0,0],[-0.223,0],[-0.121,-0.021],[-0.176,-0.319],[-0.027,-0.119],[-0.075,-0.273],[-0.029,-0.122],[-0.075,-0.146],[0,-0.245],[0,0],[0.126,-0.175],[0.073,-0.174],[0.049,-0.128],[0,-0.17],[0,0],[0,0],[-0.468,0.27],[0,0],[-0.173,0.096],[-0.222,0.094],[-0.125,0.049],[-0.148,0.05],[-0.173,0.052],[-0.078,-0.014],[-0.078,0.039],[-0.099,0.146],[0,0.121],[-0.025,0.297],[-0.027,0.171],[0,0.149],[0,0],[0.294,0.223],[0.026,0.222],[0.052,0.322],[0.074,0.122],[0.122,0.097],[0.147,0.096],[0.148,0.096],[0.123,0.096],[0.124,0.148],[0.073,0.119],[0.05,0.175],[0,0.222],[-0.124,0.373],[-0.072,0.172],[-0.07,0.122],[-0.101,0.076],[-0.081,-0.014],[-0.053,0.014],[-0.321,0.049],[0,0],[-0.295,0.027],[0,0],[-0.026,0.123],[-0.075,0.122],[-0.15,0.099],[-0.069,-0.013],[-0.064,0.027],[-0.146,0.072],[-0.273,0.37],[-0.125,0.148],[-0.315,0.123],[-0.146,0],[-0.127,-0.02],[-0.66,-0.222],[-0.147,0],[-0.274,0.147],[-0.122,0.076],[-0.144,0.1],[-0.146,0.077],[-0.072,-0.017],[-0.06,0.024],[-0.171,0.047],[-0.145,-0.022],[-0.119,0.021],[-0.147,0.054],[-0.097,0.047],[-0.12,0.095],[-0.024,0.123],[-0.293,0.245],[-0.096,0.126],[-0.097,0.123],[-0.099,0.122],[-0.489,0.42],[-0.145,0.126],[-0.148,0.343],[-0.046,0.121],[-0.071,0.172],[-0.047,0.122],[-0.124,0.295],[-0.076,0.149],[-0.342,0.271],[-0.123,0.068],[-0.124,0.074],[-0.072,-0.017],[-0.058,0.022],[-0.25,0.294],[-0.122,0.151],[-0.097,0.124],[-0.144,0.149],[-0.121,0.151],[-0.025,0.173],[-0.025,0.294],[0,0.145],[-0.026,0.299],[0,0],[-0.072,0.175],[-0.072,0.172],[0,0.419],[0,0],[0,0.146],[0,0],[-0.025,0.118],[-0.047,0.17],[-0.02,0.124],[-0.095,0.272],[-0.099,0.173],[-0.078,0.148],[-0.099,0.146],[-0.096,-0.074],[-0.125,-0.072],[-0.096,-0.072],[-0.125,-0.151],[0,-0.197],[0,-0.148],[0.049,-0.148],[0,-0.218],[-0.054,-0.369],[0,-0.667],[0.046,-0.513],[0.046,-0.123],[0.1,-0.147],[0.096,-0.145],[0,-0.221],[-0.026,-0.2],[-0.148,-0.442],[0,-0.394],[0.072,-0.199],[0.118,-0.125],[0.05,-0.174],[0,-0.246],[0,-0.221],[0,-0.199],[0,-0.148],[0,0],[-0.073,0.15],[-0.049,0.125],[0,0],[-0.074,0.145],[-0.074,0.15],[-0.029,-0.15],[-0.15,-0.249],[-0.146,-0.098],[-0.465,-0.024],[0.028,0.125],[0.052,0.147],[0.052,0.118],[0.097,0.15],[0.123,0.146],[0.097,0.122],[0.075,0.175],[0.121,0.296],[0.072,0.174],[0,0.32],[-0.174,0.321],[-0.021,0.196],[-0.048,0.173],[-0.048,0.126],[-0.074,0.119],[-0.122,0.101],[-0.199,0],[-0.267,-0.151],[-0.392,0],[-0.171,0.053],[0.026,0.124],[0.025,0.145],[0.025,0.122],[0.052,0.293],[0,0.145],[0.048,0.17],[0.024,0.17],[0,0.465],[0.049,0.124],[0.074,0.175],[0.078,0.118],[0.124,0.368],[0.027,0.148],[0,0.149],[0,0.172],[0,0.145],[0,0],[0,0.196],[0,0.172],[0.024,0.121],[0.074,0.12],[0.08,-0.006],[0.037,0.058],[0.023,0.27],[0.019,0.295],[0.019,0.342],[0.025,0.296],[0,0],[0,0],[0.27,-0.047],[0.145,-0.073],[0,0],[0,-0.119],[0,0],[-0.026,-0.148],[0,-0.296],[0,0],[0.067,-0.001],[0.027,0.072],[0,0.169],[0,0.149],[-0.026,0.127],[0,0.293],[0,0],[0.07,0.149],[0.17,0.097],[0.175,0.049],[0.07,-0.007],[0.06,0.01],[0.149,0.124],[0.126,0.077],[0.121,0.073],[0.441,0.443],[0,0],[0,0],[0,0],[0.022,0.148],[0.049,0.148],[0.344,0.466],[0,0],[0,-0.148],[0,0],[0.024,-0.151],[0.075,-0.006],[0.096,0.013],[0.149,0.025],[0,0],[-0.023,0.12],[0,0.247],[0.323,0.271],[0.195,-0.072],[0.169,0],[0,0],[0,0],[0.149,0.027],[-0.07,0.269],[-0.122,0.146],[-0.174,0.045],[-0.074,-0.011],[-0.055,0.012],[-0.296,0.099],[-0.148,0.094],[-0.096,0.145],[-0.145,0.174],[-0.222,0.101],[-0.122,0.025],[-0.146,0.023],[-0.293,0],[-0.217,0.516],[-0.097,0.124],[-0.126,0.101],[-0.124,0.076],[-0.073,0.122],[-0.148,0.097],[-0.121,0.096],[-0.121,0.075],[-0.147,0.12],[-0.144,0.12],[-0.145,0.075],[-0.125,0.051],[-0.071,-0.011],[-0.051,0.026],[-0.072,0.124],[-0.053,0.149],[-0.048,0.123],[-0.07,0.147],[-0.095,0.143],[-0.096,0.103],[-0.323,0.05],[-0.133,-0.015],[-0.168,0.038],[-0.269,0.201],[-0.12,0.15],[-0.144,0.167],[-0.343,0],[-0.399,0],[-0.07,0],[-0.37,0],[0,0],[-0.147,-0.024],[0,0],[-0.148,0.024],[-0.245,0],[0,0],[-0.144,-0.052],[-0.295,0],[-0.193,0.046],[-0.17,0],[0,0],[0,0],[-0.197,0.269],[-0.147,0.099],[-0.198,-0.124],[-0.246,0],[-0.294,0],[-0.197,-0.1],[-0.176,-0.077],[-0.124,-0.048],[-0.147,-0.073],[0.073,-0.121],[0,-0.223],[-0.196,-0.172],[-0.174,0],[0,0],[-0.243,0.298],[-0.122,0.148],[-0.217,0],[-0.367,-0.374],[-0.122,-0.095],[-0.027,0.149],[-0.047,0.148],[-0.124,-0.051],[-0.196,0],[0,0],[0.048,0.121],[0.072,0.175],[0.025,0.099],[0.296,0],[0.146,0],[0,0],[-0.268,0.173],[-0.071,-0.018],[-0.049,0.037],[-0.124,0.144],[-0.08,0.126],[-0.097,0.148],[-0.124,0.149],[-0.198,0.074],[-0.059,-0.008],[-0.066,0.027],[0,0],[-0.098,0.175],[-0.322,0.365],[-0.444,0.368],[-0.418,0],[-0.195,-0.047],[-0.245,0],[0,0],[-0.145,0.077],[-0.222,0],[0,0],[-0.12,-0.095],[-0.175,-0.052],[-0.125,-0.02],[-0.07,0.006],[-0.062,-0.01],[-0.174,-0.075],[0,-0.271],[0,0],[-0.074,-0.127],[-0.069,-0.148],[0,-0.127],[0,-0.295],[0,0],[-0.125,0.095],[-0.129,0.097],[-0.367,0.147],[-0.124,0.075],[-0.146,0.101],[-0.099,0.125],[-0.147,0.122],[-0.175,0.047],[-0.27,0.047],[-0.056,-0.011],[-0.071,0.044],[-0.072,0.121],[-0.049,0.148],[-0.021,0.148],[-0.021,0.294],[-0.053,0.271],[-0.271,0.047],[-0.343,0],[0,0],[0,0],[0.171,-0.074],[0,0],[0.122,-0.074],[0.075,-0.17],[0.023,-0.146],[0.022,-0.123],[0.022,-0.118],[0.025,-0.121],[0.097,-0.343],[0.025,-0.125],[0.074,-0.117],[0.148,-0.098],[0.121,-0.052],[0.17,-0.095],[0.096,-0.1],[0.05,-0.126],[0.046,-0.122],[0.316,-0.195],[0.467,-0.3],[0.49,-0.296],[0.419,-0.347],[0.368,-0.419],[0.147,-0.1],[0.217,-0.247],[0.072,-0.122],[0.197,-0.023],[0.068,0.005],[0.062,-0.011],[0.081,0.005],[0.086,-0.011],[0.145,-0.024],[0.123,-0.023],[0.343,-0.125],[0.149,-0.047],[0.06,0.008],[0.07,-0.025],[0.096,-0.124],[0,-0.193],[0,-0.246],[0.149,-0.367],[0.121,-0.146],[0.103,-0.145],[0.047,-0.127],[0.028,-0.22],[0,-0.194],[0.076,-0.269],[0.099,-0.32],[0.025,-0.349],[0,-0.295],[0,-1.647],[0.049,-0.2],[0.149,-0.15],[0,0],[0,0],[-0.172,0],[-0.171,0.052],[-0.12,0.044],[-0.148,0.025],[-0.122,0],[-0.271,0],[-0.072,0.44],[-0.049,0.123],[-0.121,0.147],[-0.126,0.099],[-0.096,0.147],[-0.073,0.174],[0,0],[-0.073,0.121],[-0.246,0],[0,0],[-0.149,-0.022],[0,0],[-0.12,0.05],[-0.122,0.097],[0,0.175],[0,0],[-0.268,0.268],[-0.121,0.1],[0,0],[0,0],[0.149,0.27],[0.028,0.169],[0,0],[0,0],[-0.07,0.147],[-0.124,0.195],[-0.074,0.124],[-0.224,0],[-0.167,-0.12],[-0.072,-0.097],[-0.126,-0.15],[0,0],[0,0],[0.119,0.12],[0.125,0.325],[0.029,0.126],[0.029,0.125],[0.026,0.149],[0,0.321],[-0.072,0.12],[-0.101,0.051],[-0.144,0.048],[0.025,0.121],[0.071,0.172],[0.062,0.008],[0.068,-0.025],[0.197,0],[0,0],[-0.078,0.268],[-0.124,0.297],[-0.073,0.122],[-0.124,0.098],[-0.245,0.218],[-0.073,0.147],[-0.053,0.127],[-0.026,0.148],[0,0.127],[-0.024,0.344],[-0.024,0.122],[-0.073,0.128],[-0.149,0.097],[-0.125,0.024],[-0.148,0],[-0.273,-0.198],[-0.099,-0.101],[-0.247,0],[-0.203,0.097],[-0.125,0.126],[-0.148,0.124],[-0.121,0.072],[-0.075,-0.172],[-0.048,-0.118],[-0.074,-0.17],[-0.068,-0.006],[-0.06,0.011],[-0.151,0.101],[-0.124,0.121],[-0.22,0.294],[-0.17,0.074],[-0.22,0],[-0.224,-0.024],[-0.116,0],[-0.172,0],[0,0],[-0.025,-0.293],[-0.025,-0.118],[-0.273,-0.174],[-0.078,0.01],[-0.056,-0.011],[-0.418,0.419],[-0.123,0.102],[-0.141,0.099],[-0.097,0.147],[-0.248,0.317],[-0.177,0.168],[-0.171,0.072],[-0.269,0.068],[-0.193,0],[0,0],[-0.318,0.074],[-0.149,0.052],[-0.297,0.098],[-0.151,0.127],[-0.097,0.122],[-0.172,0.077],[-0.124,0.048],[-0.515,0.122],[-0.166,-0.016],[-0.141,0.009],[-0.169,0.051],[-0.149,0.095],[-0.39,0.243],[-0.17,0.026],[-0.292,0],[-0.445,-0.121],[-0.149,-0.096],[-0.197,-0.074],[-0.126,-0.026],[-0.392,0],[0,0],[-0.195,0.025],[0,0],[0.124,0.122],[0.074,0.173],[0.051,0.123],[0,0],[0.074,0.15],[0.07,0.172],[0.048,0.124],[0,0],[0.225,0.345],[0.073,0.146],[0.075,0.121],[0.072,0.124],[0.196,0],[0,0],[0.145,0.098],[0.074,0.099],[-0.149,0.103],[-0.121,0.074],[-0.196,0.046],[-0.149,0],[0,0],[-0.392,0],[0,0],[-0.323,0],[-0.273,0.103],[-0.222,0.244],[-0.126,0.146],[-0.077,0.151],[0,0.224],[0.096,0.171],[0.088,-0.004],[0.035,0.048],[0,0.145],[0,0],[-0.371,0],[-0.169,-0.442],[-0.019,-0.124],[-0.053,-0.147],[-0.22,-0.295],[0,0],[-0.172,-0.049],[-0.121,-0.095],[-0.024,-0.17],[0,-0.464],[0,0],[-0.243,-0.193],[-0.147,-0.124],[-0.297,-0.15],[-0.174,-0.075],[-0.245,0],[0,0],[-0.075,0.17],[0,0.147],[0,0.296],[-0.027,0.146],[0,0],[-0.267,0.021],[0.049,0.469],[0,0.148],[-0.024,0.125],[-0.048,0.121],[-0.122,0.094],[-0.342,-0.172],[-0.171,-0.024],[0,0],[-0.12,0.024],[-0.123,0.074],[-0.122,0.124],[-0.128,0.094],[-0.126,0.07],[-0.071,-0.013],[-0.062,0.024],[-0.151,0.098],[-0.073,0.125],[0,0.144],[0.272,0.147],[0.145,0.029],[0.111,-0.007],[0.132,0.105],[0.074,0.095],[0.096,0.147],[0.146,0.098],[0.345,0],[0,0],[0.271,0],[0.445,0.049],[0,0],[0.072,-0.006],[0.103,0.016],[0.146,0.077],[0.198,0.026],[0.173,0],[0.146,-0.026],[0.171,-0.066],[-0.174,-0.047],[-0.07,0.012],[-0.049,-0.023],[-0.122,-0.097],[0,-0.221],[0,0],[0.048,-0.117],[0.274,0],[0.249,0.345],[0,0.15],[0,0],[0.121,0.074],[0.17,0.046],[0.147,0.02],[0,0],[0.146,0],[0.319,0.097],[0.197,0.072],[0.121,0.046],[0.174,0.046],[0.244,0.126],[0.171,0.151],[0.122,0.173],[0.099,0.075],[0.126,0.049],[0.171,0.025],[0.344,0.026],[0.145,0],[0.339,0],[0.266,0.321],[0.441,0.294],[0.221,0.097],[0.299,0.027],[0.131,-0.006],[0.176,0.015],[0.147,0.048],[0.151,0.096],[0.198,0.073],[0.067,-0.006],[0.061,0.013],[0.148,0.025],[0,0],[0,0],[0.146,0.052],[0.174,0.045],[0.341,0.196],[0.148,0.098],[0.47,-0.024],[0,0],[0.148,-0.051],[0.223,-0.098],[0.22,0],[0.396,0.051],[0,0],[0.173,0.046],[0.196,0.052],[0.068,-0.005],[0.061,0.012],[0.294,0.172],[0.32,0.099],[0.122,0.025],[0.218,0],[0.195,-0.051],[0.123,-0.075],[0,-0.197],[0.047,-0.123],[0.076,-0.176],[0.07,-0.125],[0.146,-0.151],[-0.125,-0.048],[-0.149,-0.101],[-0.1,-0.121],[0,-0.297],[0.025,-0.12],[0.126,-0.149],[0.12,-0.097],[0.172,0],[0,0],[0,0],[0,0],[0,0],[0,0],[-0.415,0.148],[-0.267,0.173],[0,0],[0.126,0.023],[0.174,0],[0,0],[0.023,-0.32],[0.023,-0.124],[0.073,-0.126],[0.124,-0.049],[0.275,0],[0,0],[0.173,0.073],[0.296,0.05],[0.86,0],[0,0],[0.196,-0.023],[0.415,-0.073],[0.221,0],[0.222,0.025],[0.149,0.098],[0.199,0.123],[0.174,0],[0,0],[0,-0.223],[0,-0.144],[0,0],[0,0],[0,0],[0,0],[0.147,0.219],[0.148,0.099],[0.121,0.051],[0.145,0.046],[0.121,0.075],[0.1,0.169],[0,0.295],[-0.048,0.366],[0,0.147],[0.048,0.147],[0.097,0.147],[0.124,0.1],[0.101,0.077],[0.15,0.123],[0.097,0.049],[0.122,0.027],[0.065,-0.005],[0.062,0.014],[0.15,0.024],[0.175,0.023],[0.149,0],[0.296,0],[0.345,0],[0.123,-0.027],[0.15,-0.077],[0.125,-0.074],[0.17,-0.071],[0.175,-0.048],[0.174,0],[0,0],[0.15,0],[0.492,0],[0.368,-0.094],[0.176,-0.028],[0,0],[0.123,0.021],[0.143,0.05],[0.124,0.052],[0.173,0.125],[0.198,0.049],[0.146,0],[0,0],[0.194,0.024],[0.223,0.023],[0.198,0.049],[0.173,0.1],[0,0],[0.272,0.196],[0.147,0.121],[0.126,0.07],[0.296,0],[0,0],[0,0],[-0.148,0.094],[-0.294,0.147],[0,0],[0.063,-0.006],[0.062,0.014],[0.222,0],[0,0],[0.073,-0.271],[0.096,-0.144],[0.323,-0.121],[0.15,0],[0,0],[0.166,0.075],[-0.047,0.149],[-0.051,0.171],[-0.051,0.124],[-0.098,0.147],[-0.098,0.075],[-0.048,0.121],[0.294,0.024],[0.171,0.076],[0.171,0.026],[0.071,-0.009],[0.095,0.028],[0.319,0.052],[0.146,0],[0.193,0],[0.346,0],[0.271,0.077],[0.216,0.048],[0.073,-0.008],[0.094,0.026],[0.295,0.024],[0.213,-0.016],[0.229,0.023],[0.294,0.024],[0.153,0],[0.103,-0.146],[0.031,-0.121],[0,-0.344],[0,0],[0.321,-0.051],[-0.026,-0.147],[-0.099,-0.145],[-0.15,-0.073],[-0.124,-0.076],[-0.1,-0.074],[-0.097,-0.122],[-0.074,-0.148],[-0.026,-0.122],[0,-0.172],[0,-0.144],[0,0],[0.272,0.052],[0.124,0],[0.083,-0.006],[0.084,0.011],[0.119,0.025],[0.171,0.048],[0.175,0],[0.147,0],[0.391,0.025],[0,0],[0,0],[-0.124,-0.072],[0,-0.248],[0.096,-0.243],[0.291,0.194],[0.147,0.122],[0.167,0.126],[0.073,0.125],[0.101,0.149],[0.101,0.07],[0.124,0.023],[0.318,0],[0.149,-0.026],[0.12,-0.073],[0.049,-0.096],[0.122,-0.122],[0.49,0],[0.371,0.244],[0.32,0.046],[0.126,0.022],[0.175,0.048],[0.148,0],[0.122,-0.026],[0.201,0],[0.445,0],[0.099,-0.223],[-0.024,-0.343],[0.025,-0.463],[0.026,-0.296],[0,0],[0.294,0.344],[0.119,0.096],[0.199,0.1],[0.117,0.052],[0.144,0.073],[0.173,0.125],[0.15,0.121],[0,0.444],[0,0],[-0.05,0.121],[0,0.171],[0,0.197],[0,0.293],[0.026,0.346],[0,0.341],[0.072,0.273],[0.074,0.146],[0.121,0.098],[0.196,0.095],[0.174,0.026],[0.273,0],[0.148,-0.217],[0.098,-0.127],[0.075,-0.098],[0.244,0],[0.244,0.393],[0.074,0.146],[0.146,0.126],[0.17,0.023],[0.122,0],[0.118,-0.006],[0.216,0.106],[0.148,0.101],[0.417,0],[0.248,-0.099],[0.175,-0.074],[0.196,-0.097],[0.148,-0.076],[0.197,-0.146],[0,0],[-0.099,-0.15],[-0.027,-0.171],[0,-0.197],[0,-0.174],[0,0],[0.196,-0.073],[0.442,0],[0.391,0.173],[0.214,0.051],[0.323,0.123],[0.17,0.1],[0.249,0],[0.148,-0.05],[0.222,0],[0.121,0.192],[0,0.293],[0,0],[0.17,0.075],[0.171,0.026],[0.149,0],[0.147,0],[0.149,-0.073],[0.171,0],[0.273,0.026],[0,0],[0.17,0],[0,0],[0,0],[0.439,-0.075],[0.123,-0.024],[0.124,-0.07],[0.269,0],[0,0],[0.147,0],[0.175,0],[0,0.29],[0,0.147],[0,0.146],[0,0],[0.101,-0.075],[0.097,-0.122],[0.421,0],[0.194,0.068],[0.147,0.147],[0,0],[-0.298,0.024],[-0.121,0.049],[-0.15,0.097],[-0.121,0.073],[-0.126,0.049],[-0.123,0.069],[0,0.247],[0,0],[0.124,0.124],[0.221,0],[0.343,-0.124],[0.147,-0.104],[0.122,-0.097],[0.097,-0.147],[0.123,-0.124],[0.148,-0.122],[0.245,0],[0,0],[0,0],[-0.048,-0.124],[0,-0.245],[0,0],[0.121,-0.098],[0.149,-0.103],[0.243,0],[0,0],[0.146,0],[0.296,-0.028],[0.17,-0.074],[0.174,-0.025],[0.296,0],[0,0],[0.391,0],[0,0],[0.074,0],[-0.174,0.124],[-0.124,0.121],[-0.123,0.095],[-0.15,0.096],[-0.147,0.05],[-0.138,-0.016],[-0.125,0.024],[-0.122,0.05],[-0.128,0.097],[-0.125,0.096],[-0.198,0.295],[-0.245,0.195],[-0.297,0.026],[0,0],[-0.125,0],[-0.123,0.049],[-0.116,0.097],[-0.07,0.096],[-0.151,0.124],[-0.293,0.027],[0,0],[-0.149,0],[-0.173,0.024],[-0.122,0.024],[-0.147,0.124],[-0.046,0.173],[-0.024,0.121],[-0.046,0.271],[0,0],[-0.026,0.225],[-0.053,0.125],[-0.097,0.12],[-0.08,-0.025],[-0.039,0.049],[0,0.173],[0.023,0.126],[0.071,0.122],[0.08,-0.007],[0.038,0.061],[0.05,0.103],[0.072,0.122],[0.084,-0.024],[0.023,0.048],[0.047,0.124],[0.096,0.148],[0.201,0.099],[0.172,0.026],[0.079,-0.006],[0.088,0.014],[0.149,0],[-0.049,0.467],[0,0],[0.295,0.048],[0.347,0],[0.125,-0.024],[0.147,-0.075],[0.15,-0.096],[0.125,-0.051],[0.29,0.196],[0.121,0.026],[0.244,0],[0.222,-0.027],[0,0],[0,0],[0,0],[-0.123,0.073],[-0.075,0.099],[0,0.319],[0,0.173],[0,0],[0.318,0.022],[0.394,0],[0.148,0],[-0.099,0.121],[-0.321,0.174],[-0.075,-0.012],[-0.055,0.013],[-0.173,0.073],[0,0]],\"o\":[[-0.171,0],[-0.293,0.124],[-0.126,0.024],[-0.471,0.072],[-0.125,0.051],[-0.172,0.073],[-0.174,0.12],[0,0.121],[-0.027,0.122],[-0.074,0.172],[-0.223,0.218],[0.098,0.121],[0.121,0.122],[0,0],[0,0],[-0.054,0.322],[-0.122,0.095],[-0.163,-0.003],[-0.098,0.079],[-0.098,0.151],[-0.121,0.098],[-0.346,0.197],[-0.271,0],[-0.144,-0.029],[-0.144,-0.073],[-0.149,-0.099],[-0.125,-0.049],[-0.122,-0.023],[-0.391,0],[0,0],[-0.346,-0.023],[-0.196,0],[-0.054,0.01],[-0.126,-0.005],[-0.1,0.151],[-0.075,0.17],[-0.022,0.121],[-0.05,0.145],[-0.172,0.103],[0,0],[-0.418,0],[-0.171,0.074],[-0.294,0.124],[-0.121,0.051],[-0.221,0.097],[-0.146,0],[-0.15,-0.024],[-0.149,-0.046],[-0.32,0],[-0.172,0.048],[-0.294,0.15],[-0.175,0.094],[-0.123,0.024],[-0.17,0.05],[-0.393,0],[-0.32,0.073],[-0.146,0.1],[-0.073,0.174],[-0.068,0.121],[-0.059,0.028],[-0.061,-0.008],[-0.17,0.026],[-0.147,0],[-0.123,0.029],[-0.127,0.026],[-0.203,0.076],[0,0.345],[0.069,0.122],[0.269,0.15],[0.151,0.073],[0.051,0.098],[0,0],[-0.021,0.175],[-0.125,-0.024],[-0.466,-0.097],[-0.296,0],[-0.123,0.024],[-0.147,0.075],[-0.149,0.096],[-0.122,0.046],[-0.149,0],[-0.223,-0.051],[-0.419,0],[-0.296,0],[-0.12,0],[-0.147,0.024],[0,0],[-0.175,0],[-0.124,0.024],[-0.101,0.068],[-0.097,0.147],[0,0],[-0.344,0],[0.053,0.124],[0.097,0.177],[0.15,0.147],[0.126,0.15],[0.05,0.268],[0,0.148],[0.028,0.145],[0.05,0.123],[0.296,0.222],[0,0],[0.196,0],[0.147,0.024],[0.169,0.075],[0.147,0.149],[0.025,0.121],[0,0],[-0.075,0.396],[-0.244,0],[-0.147,-0.076],[-0.122,-0.071],[-0.064,-0.023],[-0.067,0.013],[-0.175,-0.047],[-0.125,-0.022],[-0.123,-0.052],[-0.099,-0.098],[-0.067,-0.121],[-0.071,-0.145],[0,0],[-0.344,0],[-0.096,-0.076],[-0.226,-0.173],[-0.145,0],[-0.173,0.045],[-0.124,0.025],[-0.442,0.148],[0,0],[0.148,0.027],[0.298,0],[0.124,0],[0.169,0.027],[0.099,0.151],[0,0.174],[-0.343,-0.021],[-0.122,-0.027],[-0.176,-0.074],[-0.193,-0.097],[0,0],[-0.119,0],[-0.122,0.069],[-0.05,0.102],[-0.101,0.197],[0,0.513],[0.133,0.012],[0.129,-0.006],[0.147,0],[0.465,0.099],[0.148,0.094],[0.125,0.074],[0.124,0.072],[0.097,0.125],[0,0.173],[-0.147,-0.223],[-0.136,-0.066],[-0.118,0],[-0.171,-0.046],[-0.062,-0.011],[-0.068,0.006],[-0.059,-0.011],[-0.069,0.006],[-0.175,-0.048],[-0.124,-0.024],[-0.218,-0.034],[-0.186,0.018],[-0.298,-0.048],[-0.171,-0.072],[-0.075,-0.172],[0,-0.149],[0,0],[0,-0.298],[0.025,-0.17],[0.026,-0.121],[0,-0.148],[-0.026,-0.125],[-0.075,-0.146],[-0.048,-0.119],[-0.122,-0.295],[-0.148,0.052],[-0.073,0.013],[-0.061,-0.006],[0,0.221],[0,0.146],[0.02,0.468],[0,0.149],[0,0],[-0.294,0],[-0.197,0],[-0.146,0],[0,0.243],[-0.03,0.128],[-0.123,0.075],[-0.123,0.069],[-0.346,0.15],[0,0],[0.123,0.515],[0.271,0.246],[0.049,0.125],[0.049,0.269],[0,0.148],[-0.022,0.148],[-0.126,0.244],[0,0],[0,0.173],[0.049,0.17],[0,0.123],[0,0.172],[0,0.145],[0.049,0.319],[0.099,0.125],[0,0],[0.096,-0.122],[0.121,-0.122],[0.147,-0.123],[0,0],[0.149,0],[0.149,0.072],[0.272,0.197],[0.124,0.048],[0.148,0.074],[0.217,0.245],[0.195,0.296],[0.124,0.097],[0.077,0.147],[0,0.32],[-0.074,0.147],[-0.074,0.146],[0,0.174],[0.064,0.011],[0.073,-0.01],[0,0],[0.148,0.073],[0.269,0.132],[0.127,-0.008],[0.149,0],[0,0],[-0.147,0.047],[-0.271,0.05],[0,0],[-0.171,-0.023],[-0.171,-0.075],[-0.123,-0.073],[-0.317,-0.194],[0,0],[0,-0.145],[0,-0.392],[-0.124,-0.121],[-0.047,-0.123],[-0.099,-0.151],[-0.095,-0.075],[-0.171,-0.049],[-0.269,-0.049],[-0.466,0],[-0.147,0],[-0.146,0.025],[-0.148,0.048],[-0.173,0.095],[0,0.147],[0,0.148],[0.096,0.371],[0,0.393],[-0.027,0.116],[-0.078,0.2],[-0.148,0.126],[-0.195,0.148],[-0.099,0.122],[-0.098,0.366],[-0.292,0],[-0.493,0.175],[-0.297,0.166],[-0.07,0.102],[-0.097,0.145],[-0.12,0.07],[-0.291,0],[-0.149,-0.024],[-0.121,-0.05],[-0.17,-0.075],[0,0],[0,0],[0.1,-0.146],[0.1,-0.151],[0.196,-0.073],[0.224,0],[0.144,0.025],[0.269,0.024],[0.296,0],[0.172,-0.026],[0.168,-0.072],[0.122,-0.101],[0.176,-0.267],[0.097,-0.123],[0.27,-0.218],[0.075,-0.096],[0.098,-0.124],[0.118,-0.091],[0.051,-0.097],[0.024,-0.122],[0.069,-0.299],[0.027,-0.122],[0.024,-0.122],[0.025,-0.147],[0,-0.195],[-0.296,0.024],[-0.194,0],[-0.122,-0.052],[-0.15,-0.099],[-0.125,-0.172],[0,-0.393],[0.051,-0.467],[0,0],[0.025,-0.295],[0.095,-0.445],[0,-0.147],[-0.07,-0.32],[-0.023,-0.121],[-0.099,-0.294],[-0.074,-0.174],[-0.073,-0.122],[0,0],[0.293,0],[0.147,0],[0.048,0],[0,0],[-0.393,0],[-0.197,-0.05],[-0.124,-0.023],[-0.271,-0.047],[0,0],[-0.22,0],[-0.393,0],[-0.173,0.074],[-0.144,0.051],[-0.125,0.027],[-0.294,0.027],[-0.148,0],[0,0.469],[0,0.196],[-0.075,0.322],[-0.098,0.151],[-0.249,0.295],[-0.096,0.265],[-0.047,0.174],[-0.129,0.046],[-0.159,0.045],[-0.104,-0.012],[0,0],[-0.169,0],[-0.197,0.122],[0,0],[0.026,0.173],[0.038,0.053],[0.073,-0.02],[0.295,0.224],[0.122,0.244],[0,0.295],[-0.102,0.099],[-0.121,0.097],[-0.171,0.148],[0,0.297],[0.294,0],[0.143,0],[0.146,0.099],[0.117,0.124],[0.049,0.121],[0.073,0.149],[0.073,0.127],[0.148,0.121],[0.101,0.05],[0.294,0.199],[0.1,0.124],[0.049,0.124],[0,0.151],[-0.051,0.199],[-0.071,0.097],[-0.125,0.074],[0,0],[-0.296,0],[-0.32,-0.073],[-0.467,-0.271],[-0.297,-0.022],[-0.466,0],[-0.147,-0.1],[-0.147,-0.098],[-0.163,-0.058],[-0.102,0.014],[-0.149,0],[-0.294,-0.024],[-0.199,-0.073],[-0.097,-0.15],[-0.126,-0.049],[-0.128,-0.048],[-0.194,-0.05],[-0.146,-0.072],[0,0],[-0.174,0],[-0.124,-0.097],[-0.126,-0.099],[0,0],[-0.37,0],[-0.27,-0.152],[-0.12,-0.072],[-0.123,-0.072],[-0.098,-0.047],[-0.147,-0.124],[-0.097,-0.074],[-0.072,-0.04],[-0.057,0.011],[-0.202,-0.049],[0,0],[-0.167,0],[-0.173,0.097],[0,0.22],[0.073,0.197],[0.125,0.145],[0.028,0.123],[0.028,0.171],[0.293,0],[0.148,0],[0.123,0],[0.147,0.045],[0.074,0.099],[0.074,0.17],[0.295,0.099],[0.148,0.075],[0.097,0.124],[0,0.148],[0,0.121],[-0.172,0.32],[-0.12,0.051],[0,0],[-0.121,0],[-0.122,0.074],[-0.071,0.122],[-0.07,0.148],[-0.072,0.124],[0,0],[0,-0.294],[0,-0.147],[0,-0.298],[0,-0.172],[0,0],[-0.121,0.051],[-0.148,0.099],[-0.099,0.121],[-0.097,0.122],[-0.198,0.197],[0,0],[-0.297,-0.027],[-0.08,0.011],[-0.093,-0.02],[-0.146,0.074],[-0.148,0.099],[-0.146,0.072],[0,0],[-0.15,0],[0,0],[0,0],[-0.149,0],[0,0],[0,0],[-0.124,-0.122],[-0.12,-0.121],[-0.104,-0.097],[0.049,-0.147],[0.025,-0.121],[0.095,-0.314],[0,0],[-0.122,0.073],[-0.121,0.097],[-0.122,0.075],[-0.124,0.027],[-0.118,0.018],[-0.184,-0.005],[-0.173,0.079],[-0.269,0.173],[0,0],[-0.469,0],[-0.147,0.048],[-0.098,0.075],[-0.122,0.075],[-0.117,0.026],[0,0],[-0.151,0],[-0.317,0.048],[-0.173,0.05],[-0.294,0.248],[-0.174,0.099],[-0.253,0.042],[-0.286,-0.016],[-0.202,0.074],[0.074,0.145],[0.124,0.196],[0,0.247],[-0.224,0.217],[-0.17,0.078],[-0.121,0.051],[-0.122,0.028],[-0.198,0],[-0.243,0.028],[0,0],[-0.198,0],[-0.146,-0.096],[-0.128,-0.147],[-0.046,-0.096],[-0.123,-0.22],[0,-0.367],[0,0],[0,0],[-0.148,-0.149],[-0.099,-0.049],[-0.12,-0.097],[-0.122,-0.145],[-0.124,-0.171],[-0.293,0],[0,0],[-0.224,-0.026],[-0.125,-0.027],[-0.317,-0.073],[0,0],[-0.144,0],[-0.121,0],[0,0],[0.294,0.051],[0.125,0],[0,0],[0,0.172],[-0.1,0.144],[0,0.147],[0,0.149],[0.072,0.096],[0.123,0.073],[0.148,0.074],[0.147,0.172],[0,0],[-0.022,0.172],[0,0.124],[-0.048,0.467],[0,0.075],[-0.322,-0.024],[-0.122,0],[-0.147,-0.121],[-0.073,-0.103],[-0.098,-0.15],[-0.151,-0.07],[-0.173,0],[-0.174,0.029],[-0.123,0.024],[-0.344,0.024],[-0.148,0],[0,0.145],[-0.05,0.121],[-0.1,0.125],[-0.123,0.048],[-0.267,0.073],[-0.171,0.021],[-0.169,0.072],[-0.097,0.117],[-0.124,0.1],[-0.191,0.096],[0.001,0.003],[0.072,0.295],[0.024,0.151],[0.076,0.126],[0.102,0.095],[0.119,0.077],[0.17,0.12],[0,0.222],[-0.049,-0.024],[-0.293,-0.071],[-0.296,0],[-0.293,-0.024],[0,0],[-0.15,0],[-0.346,-0.026],[-0.169,-0.047],[-0.122,-0.029],[-0.061,-0.011],[-0.069,0.006],[-0.172,-0.024],[-0.177,-0.126],[0,0],[-0.126,0.072],[-0.15,0.099],[-0.044,0.021],[-0.076,-0.017],[-0.197,0.098],[0,0.248],[0.099,0.123],[0.102,0.074],[0.07,0.1],[0.047,0.149],[0,0],[0.344,-0.026],[0.322,0.072],[0.146,0.12],[0,0.197],[0,0],[-0.097,0.122],[-0.125,0.021],[-0.151,0],[-0.121,-0.073],[-0.122,-0.148],[-0.372,-0.296],[-0.061,-0.01],[-0.069,0.006],[-0.318,-0.121],[-0.071,-0.123],[-0.024,-0.121],[-0.024,-0.468],[0,0],[0,0],[0,-0.62],[-0.05,-0.297],[-0.194,-0.179],[-0.163,0.006],[-0.15,-0.026],[-0.144,-0.145],[-0.126,-0.272],[-0.162,-0.116],[-0.12,0.011],[-0.198,-0.047],[-0.272,-0.146],[0,0],[0.126,0.025],[0.122,0.048],[0.121,0.073],[0.245,0.176],[0.295,0.151],[0.147,0.051],[0.269,0.05],[0.206,-0.021],[0.123,0],[0.174,0.074],[0.273,0.176],[0,0],[0.174,0],[0.126,0.051],[0.151,0.073],[0.123,0.053],[0.123,0.019],[0.149,0],[0.293,0.025],[0,0],[0,0],[0.149,-0.026],[0.059,-0.012],[0.068,0.006],[0.125,-0.024],[0.318,-0.098],[0.122,-0.021],[0.297,-0.021],[0.174,-0.05],[0.147,-0.072],[0.125,-0.103],[0.075,-0.148],[0.099,-0.269],[0,-0.467],[0,-0.146],[-0.075,-0.318],[-0.097,-0.148],[-0.144,-0.15],[-0.123,-0.05],[-0.17,-0.046],[-0.292,-0.031],[-0.291,0],[-0.315,-0.079],[-0.128,-0.073],[-0.124,-0.098],[-0.12,-0.097],[-0.146,-0.099],[-0.062,-0.027],[-0.067,0.012],[0,0],[-0.146,-0.073],[-0.126,-0.072],[0,0],[-0.17,-0.074],[-0.122,-0.052],[-0.344,-0.076],[-0.37,0],[-0.223,0.021],[0,0],[-0.198,-0.026],[-0.171,-0.07],[-0.296,-0.22],[0,0],[0,0.222],[-0.074,0.148],[-0.124,0.024],[0,0],[-0.198,-0.023],[0.072,-0.147],[0.075,-0.219],[0,-0.073],[-0.073,-0.126],[-0.124,-0.099],[-0.049,-0.097],[-0.049,-0.173],[0,0],[-0.175,0],[-0.173,0.123],[-0.248,0],[-0.121,-0.076],[-0.099,-0.073],[-0.293,0],[-0.341,-0.029],[-0.128,-0.024],[0,0],[0.145,0],[0.148,0],[0.196,0],[0,0],[-0.1,-0.147],[-0.123,-0.098],[-0.123,-0.025],[-0.323,-0.052],[-0.293,0],[-0.171,-0.05],[-0.124,-0.099],[-0.098,-0.047],[0,0],[0,0],[-0.418,0.051],[0,0],[0,-0.173],[0.127,-0.174],[0.052,-0.098],[0,0],[0.024,0.492],[-0.027,0.147],[0,0],[0,0.17],[0,0],[0.03,-0.147],[0.028,-0.219],[0,-0.244],[-0.099,-0.126],[0,0],[0,0],[0,0],[-0.319,0.221],[-0.148,0.049],[-0.148,0],[-0.122,0],[-0.148,0.075],[0,0.344],[-0.147,0.172],[0,0],[-0.194,-0.021],[-0.171,-0.052],[0.067,-0.124],[0.124,-0.148],[0,0],[-0.493,0],[-0.171,0.05],[-0.194,0.099],[-0.023,0.12],[0,0.172],[0.073,0.196],[0.273,0.098],[0.274,0.023],[0,0],[0,0],[-0.2,0],[-0.345,-0.049],[-0.297,0],[-0.144,-0.022],[0,0],[0,0.418],[0,0.148],[-0.048,0.148],[-0.075,0.149],[0,-0.295],[-0.025,-0.122],[-0.098,-0.126],[-0.062,-0.024],[-0.067,0.013],[-0.174,-0.072],[-0.146,-0.074],[-0.049,-0.024],[-0.07,0.012],[-0.344,-0.171],[-0.269,0],[0,0],[0,0.172],[0,0.199],[0,0.322],[0,0.145],[-0.03,0.169],[-0.172,0.174],[-0.221,0],[-0.078,-0.101],[-0.051,-0.145],[-0.028,-0.122],[-0.126,0.125],[-0.121,0.149],[-0.055,0.027],[-0.063,-0.008],[-0.268,0.072],[0,0],[0.1,0.101],[0.058,0.021],[0.072,-0.017],[0.125,0.075],[0.075,0.1],[0,0],[0,0.176],[-0.124,-0.05],[-0.175,-0.097],[-0.184,-0.041],[-0.119,0.011],[-0.199,0],[0.1,-0.441],[0,-0.171],[-0.22,0.077],[0,0],[-0.176,0.024],[-0.244,0],[-0.412,0],[0.068,0.124],[0.072,0.147],[0,0.173],[-0.395,0],[-0.145,0],[-0.126,0],[-0.175,0.076],[-0.098,0.074],[-0.098,0.074],[-0.171,0.121],[-0.076,0.101],[-0.051,0.038],[-0.07,-0.015],[-0.197,0.124],[0,0],[0.173,0],[0.148,-0.123],[0.126,-0.077],[0.121,-0.031],[0.149,0],[0.147,0],[0.174,-0.052],[0.122,-0.075],[0.063,-0.027],[0.061,0.009],[0.06,-0.01],[0.07,0.006],[0.172,-0.05],[0.344,-0.147],[0.392,0],[0.172,0.049],[0,0],[-0.295,0],[-0.124,0],[-0.121,0.052],[-0.121,0.052],[-0.06,0.012],[-0.071,-0.036],[-0.173,0.071],[-0.067,0.094],[-0.074,0.122],[-0.072,0.124],[-0.075,0.126],[-0.027,0.123],[-0.026,0.295],[-0.418,0],[-0.175,0.27],[-0.099,0.123],[-0.12,0.098],[-0.12,0.098],[-0.12,0.098],[-0.125,0.127],[-0.068,0.122],[-0.025,0.122],[-0.05,0.193],[-0.146,0.149],[-0.049,0.267],[-0.022,0.149],[-0.027,0.123],[0,0],[-0.152,0.075],[-0.294,0.124],[-0.147,0.101],[-0.146,0.094],[-0.071,0.043],[-0.058,-0.012],[-0.121,0.025],[-0.176,0.046],[0,0],[0.146,0],[0.146,0],[0,0],[-0.027,0.197],[-0.025,0.124],[-0.076,0.123],[-0.122,0.071],[-0.172,0.075],[-0.125,0.049],[-0.172,0.1],[-0.149,0.101],[-0.122,0.049],[-0.148,0.094],[-0.098,0.122],[-0.072,0.124],[-0.121,0.222],[-0.417,0],[0,0],[0,0],[0.123,0.297],[-0.444,0.096],[-0.063,0.014],[-0.067,-0.006],[-0.324,0.077],[-0.172,0.075],[-0.147,0.07],[-0.054,0.012],[-0.075,-0.012],[-0.153,0.073],[-0.075,0.096],[-0.025,0.126],[-0.051,0.197],[-0.147,0.073],[-0.12,0],[-0.12,0.024],[-0.171,0.024],[-0.148,0.123],[0,0.147],[0,0.176],[0,0.174],[-0.039,0.065],[-0.079,-0.002],[-0.073,0.124],[0,0.15],[0.026,0.244],[0,0.267],[-0.038,0.05],[-0.076,-0.021],[-0.123,0.095],[0,0],[0,0],[0.175,0],[0.145,0.045],[0.144,0.053],[-0.121,0.124],[-0.097,0.126],[-0.049,0.128],[-0.049,0.12],[-0.049,0.173],[-0.051,0.122],[0,0.196],[0.616,0],[-0.026,0.369],[-0.072,0.173],[-0.071,0.144],[0,0.17],[0,0.122],[0.298,0],[0.067,0.007],[0.095,-0.016],[0.178,0.07],[0.169,0.121],[0,0],[0.147,0.023],[0.221,0.053],[0.392,0],[0.148,-0.075],[0.069,-0.028],[0.06,0.008],[0.122,-0.025],[0.171,-0.076],[0.126,-0.074],[0.12,-0.171],[0.245,-0.298],[0.123,-0.127],[0.124,-0.027],[0.126,-0.027],[0.174,0],[0,0],[0.067,0.012],[0.072,-0.01],[0.148,0.075],[0.095,0.1],[0.045,0.121],[0.072,0.167],[0.095,0.32],[0.023,0.121],[0.052,0.169],[0.145,0.194],[0,0],[0,0.222],[0,0.148],[0.048,0.317],[0.123,0.075],[0.151,0.097],[0.096,0.145],[0,0],[0,0],[0.048,0.295],[0.068,0.151],[0.149,0.148],[0.1,0.119],[0.025,0.121],[0,0.147],[-0.05,0.224],[0,0],[0,0.173],[0.023,0.124],[0,0],[0.022,-0.225],[0.025,-0.122],[0.025,-0.173],[0.095,-0.172],[0.126,-0.024],[0,0],[0.121,0],[0.147,0.027],[0.169,0],[0.169,-0.071],[0.296,-0.146],[0,0],[0,0],[0,-0.146],[0,-0.22],[0,0],[-0.17,0],[-0.055,-0.009],[-0.076,0.011],[-0.121,-0.049],[-0.075,-0.096],[0.172,-0.272],[0.076,-0.146],[0.1,-0.268],[0.021,-0.293],[0,-0.148],[0.051,-0.15],[0.07,-0.144],[0.148,-0.124],[0.125,-0.05],[0.172,-0.076],[0.121,-0.023],[0.057,-0.022],[0.076,0.017],[0.125,-0.095],[0.05,-0.124],[0.072,-0.172],[0.097,-0.148],[0.1,-0.121],[0.027,-0.124],[0,0],[0,-0.201],[-0.294,0],[-0.296,-0.025],[-0.145,0],[0,-0.49],[-0.051,-0.193],[-0.062,-0.026],[-0.071,0.012],[-0.146,-0.099],[-0.098,-0.078],[0,0],[0.146,-0.099],[0.1,-0.12],[0.126,-0.147],[0.072,-0.148],[0.074,-0.267],[0.07,-0.149],[0.125,-0.094],[0.068,-0.027],[0.062,0.008],[0.316,-0.073],[0.144,-0.096],[0.097,-0.124],[0.097,-0.101],[0.155,-0.096],[0.099,0.002],[0.073,-0.011],[0.093,0.016],[0.171,-0.074],[0.122,-0.098],[0.076,-0.125],[0.096,-0.149],[0.104,-0.073],[0.12,-0.02],[0.122,0],[0.119,-0.02],[0.197,-0.101],[0,-0.25],[-0.099,-0.15],[-0.053,-0.122],[0,-0.468],[0.099,-0.145],[0.054,-0.042],[0.065,0.014],[0.171,-0.079],[0.175,-0.13],[0.126,-0.267],[0.05,-0.129],[0.198,-0.173],[0.291,0],[0.059,0.012],[0.066,-0.007],[0.171,0.048],[0.272,0.245],[0.121,-0.047],[0.149,-0.099],[0.124,-0.025],[0.195,0],[0.147,0.1],[0.072,0.124],[0.076,0.121],[0,0],[0,0],[0,0.466],[0,0.142],[-0.052,0.317],[-0.097,0.151],[-0.196,0.146],[-0.418,0],[-0.17,0],[-0.146,0.048],[-0.12,0.1],[-0.104,0.145],[-0.078,0.12],[-0.075,0.123],[-0.149,0.12],[-0.097,0.123],[-0.12,0.125],[-0.292,0.193],[0,0.537],[0,0.247],[-0.097,0.22],[0,0.538],[0,0],[0,0.147],[0.023,0.341],[0.395,0.048],[0.294,0.046],[0.149,0.072],[0.125,0.124],[0.274,0.149],[0.171,0.074],[0.343,0.196],[0,0],[0.173,0],[0.519,-0.224],[0.389,0],[0.225,0],[0.124,0],[0.144,-0.05],[0.096,-0.071],[0.1,-0.123],[0,0],[0.2,0],[0.196,-0.073],[0.075,0],[0.149,0.072],[0.069,0.098],[0.072,0.124],[0,0],[0,0],[-0.148,0.148],[-0.268,0.049],[-0.393,0],[-0.123,0],[-0.172,0.052],[-0.147,0.072],[-0.147,0.122],[-0.098,0.147],[-0.078,0.123],[-0.123,0.145],[-0.126,0.075],[-0.293,0],[-0.197,-0.075],[-0.196,-0.147],[-0.396,0],[-0.271,0.026],[-0.293,-0.025],[-0.149,0],[-0.15,0.048],[-0.176,0.047],[-0.149,0],[-0.169,0],[-0.175,0],[-0.15,0.075],[-0.076,0.102],[-0.103,0.175],[-0.074,0.099],[-0.15,0],[-0.146,0],[-0.171,-0.074],[-0.095,-0.073],[-0.095,-0.048],[-0.145,0],[-0.145,0.051],[-0.122,0.076],[0.171,0.077],[0.062,0.012],[0.067,-0.006],[0.17,0.047],[-0.297,0],[-0.494,0.072],[-0.149,0.046],[0.048,0.12],[0.197,0.271],[0.121,0.022],[0.126,0],[0.224,0.02],[0.22,0],[0.367,-0.1],[0.145,-0.176],[0.245,0],[0.149,0.07],[0.149,0.097],[0.049,0.099],[0.049,0.12],[0.077,0.118],[0.125,0.072],[0.17,0.073],[-0.098,0.124],[-0.319,0.32],[-0.121,0.075],[-0.025,0.121],[-0.049,0.244],[0,0],[-0.198,0],[-0.121,-0.048],[-0.123,-0.099],[-0.051,-0.122],[-0.072,-0.146],[-0.037,-0.049],[-0.082,0.023],[-0.051,-0.099],[-0.025,-0.122],[0,0],[-0.218,0.297],[-0.15,0.094],[-0.124,0.097],[-0.075,0.125],[-0.024,0.12],[-0.024,0.149],[-0.047,0.17],[-0.053,0.125],[-0.077,0.219],[0,0.223],[0.025,0.124],[0.022,0.145],[0,0.193],[-0.099,0.196],[-0.075,0.174],[0,0],[0,0],[-0.148,0],[-0.421,-0.07],[-0.291,-0.025],[-0.293,0],[-0.197,0],[-0.069,0.147],[0,0.172],[0.148,0.323],[0,0],[0,0],[-0.541,-0.317],[-0.147,-0.1],[-0.172,-0.17],[-0.122,-0.027],[-0.175,0],[-0.37,0.097],[-0.148,0.071],[-0.127,0.049],[-0.148,0.075],[-0.148,0.098],[-0.147,0.1],[-0.395,0.196],[-0.295,0],[-0.198,0.048],[-0.221,0.073],[-0.445,0],[-0.368,-0.37],[0,0],[-0.12,0.075],[-0.099,0.05],[-0.149,0],[-0.199,0],[0,0],[-0.316,0],[0.023,0.464],[0,0],[-0.244,0],[-0.142,-0.097],[-0.125,-0.32],[0,0],[0,0],[0,0],[0,-0.149],[0,-0.17],[0,0],[0.32,0],[0.173,0.05],[0.219,0.097],[0.296,0],[0.051,-0.296],[0.023,-0.393],[0,-0.251],[0.095,-0.219],[0,-0.296],[0,0],[-0.173,0],[-0.118,0.01],[-0.154,-0.021],[-0.148,0.052],[-0.149,0.074],[-0.121,0.146],[0,0],[-0.176,0.025],[0.023,-0.294],[0.074,-0.17],[0.045,-0.123],[0,0],[-0.289,0.021],[-0.146,0],[0.025,-0.2],[0.149,-0.293],[0.023,-0.122],[0,-0.151],[-0.05,-0.173],[-0.075,-0.148],[-0.121,-0.149],[-0.15,0],[-0.224,0],[-0.122,0.245],[-0.169,0.32],[-0.072,0.027],[-0.058,-0.008],[-0.174,0.027],[-0.194,0.052],[0,0.247],[0,0],[-0.023,0.124],[-0.099,0.073],[-0.126,0.048],[-0.397,0.145],[0,0.393],[0.094,0.145],[0.097,0.075],[0.147,0.069],[-0.024,0.119],[-0.025,0.147],[0,0.172],[0,0],[0,0.246],[0,0.1],[0,0.149],[0.05,0.172],[0.125,0.294],[0,0],[0,0],[-0.194,0],[-0.397,0.049],[0,0],[-0.267,0],[-0.393,-0.024],[-0.296,0],[-0.147,0.072],[-0.12,0.073],[-0.298,0.124],[-0.097,0.073],[-0.076,0.12],[-0.221,0.294],[-0.198,0],[0,0],[0,0],[-0.147,0],[-0.147,0],[0,0],[0,0],[0,0],[-0.221,0],[-0.148,0.026],[-0.123,0.05],[-0.172,0.073],[-0.321,0.196],[-0.147,0.118],[-0.147,0.072],[0,0],[-0.491,0.052],[0,0],[-0.565,0],[-0.12,0],[-0.124,0.021],[0,0],[0,0],[-0.171,0],[-0.128,-0.012],[-0.144,0.015],[-0.173,-0.03],[-0.095,-0.048],[-0.145,-0.194],[-0.223,0],[0,0],[0.295,0.122],[0,0],[0,0],[0,0],[-0.496,0.027],[-0.171,0],[-0.127,0],[-0.15,0],[-0.198,0],[-0.174,-0.047],[-0.124,-0.072],[-0.296,0.121],[-0.061,0.013],[-0.068,-0.006],[-0.295,0.048],[-0.149,0.102],[-0.077,0.125],[0,0.172],[0.038,0.055],[0.068,-0.017],[0.144,0.098],[0.125,0.077],[0.146,0.072],[0.189,0.045],[0.115,-0.011],[0,0],[0.168,0.026],[0.149,0.074],[0.126,0.076],[0.146,0.098],[0.268,0.272],[0,0],[0.129,0.125],[0.121,0.076],[0.296,0.172],[0.174,0.121],[0,0.222],[-0.049,0.247],[0,0.542],[0.023,0.22],[0,0.223],[-0.223,0.467],[-0.094,0.101],[-0.098,0.099],[-0.397,0.296],[0,0],[-0.198,0],[-0.244,-0.074],[-0.124,-0.026],[-0.392,0],[-0.198,-0.02],[-0.171,-0.098],[-0.149,-0.068],[0,0],[-0.394,0],[-0.196,0],[-0.243,-0.028],[0,0],[-0.147,0.025],[-0.074,0.095],[-0.051,0.15],[0,0],[0,0],[0.098,0.123],[0.127,0.127],[0.122,0.172],[0,0.224],[-0.101,0.368],[0,0.271],[0.05,0.15],[0.075,0.171],[0,0],[0,0.172],[-0.099,0.144],[-0.073,0.122],[-0.269,0.389],[0,0.148],[0.049,0.173],[0,0],[0.101,0.168],[0,0],[0,0],[-0.023,0.175],[-0.068,0.221],[0,0.371],[0,0],[0.347,0],[0.172,0],[0.171,0.073],[0.172,0.099],[0.394,0],[0.194,0],[0.146,0.049],[0.123,0.052],[0,0],[0.146,0.075],[0.101,0.148],[0.071,0.123],[0.07,0.145],[0,0],[0,0],[0.143,-0.05],[0.147,-0.013],[0.121,0.006],[0.296,-0.026],[0.174,-0.05],[0.317,-0.198],[0.149,-0.12],[0.272,-0.146],[0.133,-0.011],[0.126,0.006],[0.175,0],[0.171,-0.051],[0.296,-0.22],[0.346,-0.419],[0.271,-0.096],[0.268,-0.026],[0.179,0.009],[0.295,0],[0,0],[0,-0.172],[-0.123,-0.171],[-0.149,-0.147],[0,-0.221],[0.075,-0.174],[0.171,-0.35],[0,0],[0.075,-0.146],[0.077,-0.124],[0.069,-0.042],[0.055,0.01],[0.27,-0.052],[0.176,-0.051],[0.122,-0.099],[0.122,-0.052],[0.062,-0.025],[0.068,0.012],[0.172,-0.049],[0.067,-0.026],[0.06,0.008],[0.147,-0.048],[0.258,-0.044],[0.152,0.011],[0.296,-0.025],[0,0],[0,0],[-0.025,-0.293],[0,-0.175],[0,-0.294],[0.048,-0.15],[0.2,-0.222],[0.195,-0.048],[0.393,0],[0.062,0.013],[0.067,-0.005],[0.492,0.124],[0.369,0.1],[0,0],[0.147,0],[0.147,0],[0,-0.273],[0.025,-0.12],[0.122,-0.148],[0.121,-0.095],[0.122,-0.052],[0,0],[0.293,0],[0.174,-0.029],[0.175,-0.077],[0.147,-0.099],[0.147,-0.121],[0.147,0],[0.348,0.026],[0.297,0.197],[0.298,0.395],[0.047,0.124],[0.071,0.174],[0.097,0.149],[0.122,0.076],[0,0],[0.146,0.073],[0.174,0.097],[0.052,0.099],[0.12,0.175],[0.149,0.122],[0.126,0.098],[0.174,0.124],[0.119,0.078],[0.173,0.12],[0.144,0.099],[0.295,0.099],[0.077,0.01],[0.09,-0.01],[0.144,0.047],[0.122,0.097],[0.343,0.444],[0.124,0.076],[0.143,0.051],[0.144,0.077],[0.248,0.226],[0.196,0.292],[0.072,0.149],[0.053,0.124],[0.047,0.297],[0,0.297],[-0.788,0],[-0.149,0.073],[-0.127,0.051],[-0.271,0.049],[-0.198,0],[-1.056,0],[0,0],[0.29,0.148],[0.15,0.097],[0.099,0.124],[0.077,0.121],[0.122,0.125],[0.068,0.027],[0.06,-0.008],[0.295,0.048],[0,0],[0,0],[0.146,-0.023],[0.295,-0.124],[0.171,-0.127],[0.057,-0.034],[0.077,0.023],[0.077,-0.1],[0.099,-0.272],[0.025,-0.123],[0.123,-0.148],[0.071,-0.027],[0.059,0.008],[0.27,-0.074],[0,-0.147],[0,-0.147],[0,0],[-0.196,0],[0,0],[-0.148,0],[0,0],[0.027,-0.224],[0,0],[0.343,0],[0.148,0.051],[0.172,0.097],[0.171,0],[-0.224,-0.442],[-0.024,-0.272],[-0.219,-0.025],[-0.062,-0.01],[-0.069,0.007],[-0.173,-0.023],[-0.169,-0.074],[-0.146,-0.124],[-0.126,-0.075],[-0.171,-0.098],[-0.058,-0.022],[-0.076,0.017],[-0.145,-0.123],[-0.099,-0.094],[-0.057,-0.027],[-0.062,0.008],[-0.063,-0.014],[-0.065,0.006],[-0.147,-0.027],[-0.125,-0.049],[-0.124,-0.076],[-0.145,-0.096],[-0.068,-0.027],[-0.06,0.009],[-0.149,-0.019],[-0.067,-0.015],[-0.063,0.005],[0.022,-0.124],[0.048,-0.172],[0,-0.15],[-0.023,-0.221],[-0.147,-0.1],[-0.441,-0.146],[-0.125,-0.072],[-0.048,-0.035],[-0.081,0.022],[-0.072,-0.098],[-0.076,-0.32],[-0.345,-0.022],[-0.342,0],[0,0],[0,0],[0.123,-0.122],[0,0],[0,-0.145],[-0.073,-0.194],[0,-0.248],[0.147,-0.121],[0.217,0],[0.146,0.098],[0.101,0.147],[0.073,0.12],[0.051,0.04],[0.067,-0.015],[0.121,0.051],[0.172,0.074],[0.148,0.095],[0.122,0.074],[0.068,0.028],[0.059,-0.008],[0.172,0.048],[0.17,0.122],[0.094,0.322],[0.053,0.042],[0.065,-0.014],[0.343,0.172],[0.121,0.072],[0.151,0.094],[0.267,0.222],[0.093,0.008],[0.189,-0.009],[0.096,0.073],[0.127,0.149],[0.125,0.103],[0.298,0.176],[0.518,0.268],[0.268,0.101],[0.144,0.073],[0.07,0.098],[0.073,0.173],[0,0.171],[-0.049,0.171],[-0.049,0.122],[-0.049,0.196],[0,0.225],[0.174,0.295],[0,0.297],[0.075,0.317],[0.095,0.127],[0.074,0.047],[0.056,-0.011],[0.121,0.027],[0.296,0.027],[0,0],[0,0],[-0.048,-0.124],[-0.124,-0.027],[-0.174,0],[0.047,0.125],[0.076,0.168],[0.197,0.32],[0.124,0.1],[0.175,0.118],[0.123,-0.145],[0.048,-0.097],[0.098,-0.147],[0.022,0.123],[0.047,0.124],[0.194,0.269],[0.146,0.3],[0,0.146],[0.052,0.223],[0,0],[0.149,0],[0.119,-0.023],[0.119,-0.072],[0.126,-0.149],[0.048,-0.123],[0,0],[0,-0.173],[0,-0.195],[0.119,-0.099],[0.149,0],[0.195,0.049],[0.145,0.024],[0,0],[0.196,0],[0,-0.342],[0,-0.149],[0,-0.076],[0.322,0],[0.151,0],[-0.098,-0.175],[-0.126,-0.15],[-0.152,-0.124],[-0.172,-0.074],[0.049,0.294],[0,0.146],[-0.196,0],[-0.121,-0.048],[-0.194,-0.074],[-0.098,-0.146],[-0.028,-0.118],[-0.028,-0.125],[-0.029,-0.124],[-0.072,-0.148],[-0.099,-0.071],[-0.067,-0.026],[-0.061,0.008],[-0.194,-0.048],[-0.126,-0.148],[-0.026,-0.127],[0,0],[0.026,-0.172],[0,0],[0.145,0.076],[0.147,0.077],[0.268,0.049],[0,0],[0,0],[0.169,-0.025],[-0.147,-0.124],[-0.099,-0.046],[0.099,-0.148],[0.121,-0.147],[0.323,-0.069],[0.342,0],[0.123,0],[0.148,0.027],[0.175,0.073],[0.053,0.011],[0.076,-0.009],[0.126,0.047],[0.101,0.094],[0.049,0.123],[0.068,0.1],[0.15,0.094],[0,0],[-0.122,0.054],[-0.176,0.098],[0,0.417],[0.245,0.223],[0.344,0.245],[0,0.075],[0,0.146],[0,0.147],[0,0],[0,0.174],[0.075,0.173],[0.053,0.086],[0.061,0.072],[0.063,0.048],[0.073,0.062],[0.086,0.073],[0.077,0.051],[0.085,0.099],[0,0.138],[-0.039,0.099],[-0.037,0.063],[-0.041,0.091],[-0.012,0.145],[0,0.219],[0.012,0.075],[0.036,0.083],[0.085,0.035],[0.23,0],[0.012,-0.058],[0.027,-0.108],[0.015,-0.062],[0.016,-0.23],[0,-0.071],[0,-0.234],[0,0],[0.061,0.028],[0.077,0.051],[0.072,0.052],[0.059,0.06],[0.17,0.148],[0.076,0.075],[0.07,0.082],[0.048,0.065],[0.072,0.038],[0.059,0.014],[0.149,0.014],[0.147,0],[0.09,0.026],[0.147,0.05],[0.085,0],[0.073,-0.013],[0.072,-0.046],[0.029,-0.059],[0,-0.084],[0,-0.223],[0,-0.111],[0.036,-0.101],[0.038,-0.065],[0.073,-0.037],[0.17,-0.088],[0.22,0],[0.078,0.049],[0.132,0.138],[0.07,0.057],[0.146,0.124],[0.11,0.075],[0.063,0.048],[0.077,0.049],[0.062,0.027],[0.095,0.041],[0,0],[-0.014,-0.268],[0,0],[0,-0.112],[0,-0.184],[0.124,0.028],[0.072,0],[0.075,0],[0.107,-0.011],[0.272,0],[0.161,0.09],[0.076,0.034],[0.138,0.048],[0.081,0],[0.077,-0.024],[0.062,-0.039],[0.048,-0.061],[0.062,0.035],[0.069,0.119],[0.038,0.063],[0.026,0.058],[0.034,0.133],[0,0.242],[-0.024,0.096],[-0.098,0.196],[-0.011,0.304],[0,0.133],[0.016,0.122],[0.025,0.072],[0.014,0.06],[0.049,0.123],[0.036,0.097],[0,0.141],[-0.034,0.097],[-0.062,0.059],[-0.036,0.072],[-0.05,0.157],[-0.041,0.072],[-0.037,0.071],[-0.123,0.181],[-0.046,0.147],[-0.084,0.174],[-0.098,0.049],[-0.072,0.048],[-0.075,0.065],[-0.025,0.06],[-0.038,0.133],[-0.037,0.382],[-0.075,0.21],[-0.071,0.207],[-0.063,0.058],[-0.075,0.061],[-0.073,0.038],[0,0],[-0.076,0.006],[-0.077,-0.005],[-0.146,0.026],[-0.062,0.011],[-0.043,0.009],[-0.038,-0.002],[-0.062,0],[-0.074,0.014],[-0.102,0.049],[-0.135,0],[-0.088,-0.025],[-0.161,-0.134],[0,0],[-0.112,-0.011],[-0.134,0],[-0.111,-0.012],[-0.201,-0.012],[-0.086,-0.015],[0,0],[-0.088,0],[-0.11,0.009],[0.173,0.084],[0.236,0.096],[0.233,0.062],[0.147,0.013],[0,0],[0,0],[0,0.171],[0.053,0.063],[0.052,0.11],[0,0.088],[0,0.076],[0,0.097],[-0.007,0.31],[0.026,0],[0.248,0.249],[0.073,0.124],[0,0],[0.071,0.17],[0.098,0.145],[0.122,0.144],[0.146,0.048],[0,0],[0.174,0],[0.167,-0.073],[0.077,-0.102],[0.077,-0.168],[0,0],[0.267,0.467],[0.072,0.12],[0.096,0.125],[0.123,0.102],[0.143,0.102],[0.146,0.291],[0.026,0.123],[0.048,0.174],[0.219,0.368],[0.122,0.147],[0.102,0.247],[0,0],[0,0.148],[-0.022,0.49],[0.123,0.195],[0.15,0.049],[0.126,0.047],[0.149,0.074],[0.098,0.126],[0.072,0.126],[0.248,0.395],[0.177,0.296],[0,0],[0.194,0.421],[0,0.171],[-0.026,0.173],[-0.022,0.12],[0,0.297],[0.097,0.144],[0.127,0.101],[0.172,0.097],[0.293,0.243],[0.12,0.123],[0.101,0.122],[0.122,0.172],[0.224,0.297],[0.1,0.196],[0.149,0.174],[0.32,0.42],[0.368,0.492],[0.071,0.121],[0.072,0.171],[0.05,0.148],[0.026,0.292],[0,0.149],[0.026,0.149],[0.148,0.32],[0,0],[0,0.542],[0.294,0.243],[0.298,0.031],[0.468,0],[0.197,-0.076],[0.172,-0.269],[0.223,-0.225],[0.142,-0.051],[0,0],[0.201,0],[0.062,0.013],[0.067,-0.007],[0,0],[0.068,-0.173],[0.122,-0.15],[0.17,-0.124],[0.418,-0.146],[0.176,-0.052],[0.139,-0.034],[0.126,0.015],[0.171,-0.018],[0.126,-0.025],[0.27,-0.025],[0.195,-0.073],[0,0],[0.15,-0.149],[0.122,-0.022],[0.446,-0.076],[0,-0.269],[0,-0.147],[0.123,-0.147],[0.053,-0.04],[0.067,0.015],[0.171,-0.075],[0.12,-0.05],[0.147,-0.051],[0.126,-0.033],[0.122,0],[0,0],[0,-0.227],[0,-0.149],[0,-0.123],[0.098,-0.322],[0,0],[0.021,-0.119],[0.052,-0.146],[0.097,-0.294],[0.1,-0.12],[0.123,-0.051],[0,0],[0.152,0],[0,0],[0.023,-0.142],[0.026,-0.123],[0.049,-0.174],[0.075,-0.146],[0.146,-0.175],[0,0],[0.171,0.051],[0.102,0.072],[0,-0.465],[0.053,-0.515],[0.023,-0.174],[0.02,-0.126],[0.098,-0.102],[0.059,-0.011],[0.07,0.006],[0.295,-0.048],[-0.051,-0.32],[-0.071,-0.2],[-0.055,-0.011],[-0.074,0.01],[-0.147,-0.049],[-0.147,-0.07],[-0.052,-0.093],[-0.052,-0.173],[-0.021,-0.145],[-0.097,-0.198],[-0.266,-0.149],[-0.122,-0.025],[-0.151,-0.025],[0.026,-0.148],[0.078,-0.291],[0,-0.147],[-0.07,-0.122],[-0.122,-0.075],[0,0],[0,0.339],[-0.097,0.316],[-0.074,-0.316],[-0.027,-0.123],[-0.077,-0.148],[-0.102,-0.122],[0,0],[-0.098,-0.123],[-0.124,-0.12],[-0.1,0.124],[-0.118,0.071],[-0.122,0.077],[-0.273,0.148],[-0.099,0.444],[-0.027,0.292],[-0.296,-0.024],[-0.344,0],[0,0],[-0.199,0],[-0.27,-0.069],[-0.103,0],[-0.171,0.077],[-0.148,0.072],[-0.174,0.099],[-0.147,0.148],[-0.318,0],[-0.174,-0.076],[-0.144,-0.146],[-0.027,-0.119],[0,-0.15],[0.051,-0.103],[0.324,-0.218],[0,0],[0.248,0.021],[0.221,0.047],[0.246,0],[0.173,0],[-0.029,-0.122],[-0.145,-0.122],[0,0],[-0.294,0],[0,0],[-0.146,0],[-0.145,0],[-0.395,-0.073],[-0.258,-0.015],[-0.185,0.006],[-0.149,0],[0,0],[0,0],[-0.151,-0.124],[-0.124,-0.075],[-0.175,-0.094],[-0.123,-0.027],[-0.124,-0.027],[-0.147,-0.027],[-0.22,-0.077],[-0.047,-0.17],[-0.047,-0.271],[-0.074,-0.321],[-0.121,-0.168],[-0.026,-0.124],[-0.026,-0.121],[0,-0.196],[-0.028,-0.245],[0,-0.245],[0,-0.171],[0.095,-0.196],[0.196,-0.075],[0.39,0],[0.542,0.123],[0.128,0.124],[0.27,0.25],[0.121,0.146],[0.248,0.418],[0.097,0.176],[0.418,0.245],[0.343,0.17],[0.295,0.248],[0.273,0.174],[0.19,0.045],[0.116,-0.011],[0.148,0],[0.568,0.094],[0,0],[0,0],[0.147,-0.024],[0.137,-0.013],[0.126,0.005],[0.147,-0.025],[0,0],[0.296,0],[0.171,0.049],[0.273,0.193],[0.028,0.127],[0.028,0.121],[0.047,0.146],[0.124,0.094],[0.149,0.077],[0,0],[0.173,0],[0.196,0],[0.168,0.048],[0.127,0.07],[0.099,0.124],[0.171,0.098],[0,0],[0.344,0],[0,0],[0,0],[0,0],[0.393,0],[0.144,0.123],[0.126,0.097],[0.196,0.269],[0.121,0.099],[0.12,0.072],[0.146,0.1],[0.095,0.123],[0.099,0.265],[0.063,0.018],[0.168,-0.004],[0.099,0.124],[0.125,0.097],[0.121,0.077],[0,0],[0.294,0],[0.147,0.026],[0.123,0.024],[0.322,0.121],[-0.468,0],[-0.295,0.026],[-0.147,0.026],[0.025,0.144],[0.073,0.123],[0.102,0.069],[0.121,0.048],[0.175,0.074],[0.124,0.121],[0.248,0.299],[0.168,0.098],[0.172,0.128],[0.122,0.025],[0.147,0],[0.171,-0.072],[0.144,-0.102],[0.244,-0.146],[0.176,-0.075],[0.123,-0.167],[0.419,0],[0.124,0.076],[0.198,0.316],[0,0.295],[0.074,0.344],[0.021,0.121],[0.023,0.295],[0,0],[0,0.196],[-0.026,0.543],[0,0.15],[0.046,0.294],[0.027,0.123],[0.047,0.49],[0.024,0.394],[0.121,0.147],[0.121,0.151],[0.073,0.151],[0.023,0.128],[0.075,0.321],[0.022,0.128],[0.047,0.171],[0.076,0.169],[0.026,0.123],[0.026,0.148],[0.05,0.149],[0.1,0.17],[0.08,0.126],[0.126,0.168],[0.102,0.268],[0,0],[-0.03,0.3],[0,0.565],[0.097,0.169],[0.074,0.124],[0.073,0.149],[0.394,0.641],[0.222,0.445],[0.052,0.119],[0,0],[0.075,0.147],[0.2,0.171],[0.221,0],[0.147,-0.076],[0.073,-0.098],[0.073,-0.148],[0.2,-0.468],[0.102,-0.123],[0.048,-0.024],[0.071,0.012],[0.126,-0.048],[0.198,-0.073],[0.096,-0.122],[0.049,-0.117],[0.07,-0.149],[0.099,-0.25],[0,-0.394],[0.049,-0.172],[0.121,-0.271],[0.073,-0.273],[0.024,-0.297],[-0.026,-0.296],[0,-0.146],[0,0],[0,-0.616],[0,-0.174],[0.075,-0.123],[0.37,-0.271],[0.47,0],[0.219,-0.197],[0.051,-0.147],[0.075,-0.175],[0.127,-0.049],[0.123,-0.045],[0.171,-0.073],[0.15,-0.098],[0.124,-0.073],[0.126,-0.077],[0.145,-0.1],[0.199,-0.27],[0.099,-0.169],[0.124,-0.146],[0.1,-0.125],[0.27,-0.17],[0.127,-0.094],[0.073,-0.125],[0.073,-0.122],[0.069,-0.04],[0.058,0.011],[0.055,-0.011],[0.076,0.01],[0.171,-0.071],[0.071,-0.096],[0.172,-0.272],[0.125,-0.023],[0.089,-0.006],[0.196,0.004],[0.143,-0.096],[0.348,-0.491],[0.027,-0.294],[0,0],[0.175,0],[0.197,0.045],[0,0],[0.173,-0.026],[0.06,-0.024],[0.069,0.012],[0.196,-0.071],[0.123,-0.05],[0.145,-0.1],[0.12,-0.075],[0,0],[0,0],[0.272,0.026],[0.048,0.009],[0.091,-0.022],[0.1,0.119],[0.05,0.102],[0.081,0.15],[0.072,0.123],[0.121,0.12],[0.173,0.269],[0,0.294],[0,0.171],[0.077,0.121],[0.072,0.119],[0.073,0.097],[0.222,0.294],[0.147,0.123],[0.122,0.122],[0.101,0.147],[0,0],[0,0.15],[-0.024,0.312],[0,0],[0.295,-0.072],[0.17,0],[0.126,0.075],[0.073,0.1],[0,0.294],[-0.024,0.148],[-0.147,0.416],[0,0.612],[0.122,0.128],[0.146,0.097],[0.268,0.049],[0,0],[0.124,0],[0.145,-0.051],[0.124,-0.068],[0.147,-0.048],[0.32,-0.1],[0,0],[0,0],[0.02,-0.175],[0.465,0.099],[0.099,0.121],[0.074,0.149],[0.122,0.272],[0.126,0.487],[0.024,0.122],[0.073,0.147],[0.099,0.124],[0.073,0.122],[0,0.59],[0,0.173],[0.052,0.148],[0.101,0.143],[0.246,0.267],[0.12,0.121],[0.12,0.172],[0,0.295],[0,0.32],[0,0.417],[-0.124,0.072],[-0.121,0.046],[-0.122,0.093],[-0.053,0.122],[-0.073,0.441],[0,0],[-0.024,0.296],[-0.026,0.245],[0,0.389],[0.074,0.171],[0.126,0.097],[0.124,0.068],[0.339,0.173],[0.25,0.294],[0.122,0.074],[0.147,0.076],[0.099,0.15],[0.049,0.341],[0.028,0.291],[0.124,0.295],[0.072,0.171],[0.072,0.198],[0.147,0.322],[0,0],[0,0.169],[0.049,0.175],[0.051,0.172],[0.124,0.148],[0.123,0.072],[0.49,0.295],[0.296,0.097],[0.245,0.198],[0.069,0.123],[0.097,0.075],[0.121,0.047],[0.171,0.048],[0.244,0.072],[0,0],[0.198,0],[-0.175,-0.3],[-0.072,-0.116],[-0.098,-0.096],[-0.221,-0.226],[-0.075,-0.323],[0,-0.145],[-0.023,-0.466],[0,-0.125],[-0.022,-0.145],[-0.074,-0.166],[-0.099,-0.439],[0,0],[0,-0.147],[0,0],[0,-0.201],[0,0],[-0.472,0],[-0.149,-0.094],[-0.127,-0.098],[-0.122,-0.097],[-0.17,-0.122],[-0.27,-0.148],[-0.074,-0.009],[-0.092,0.012],[-0.321,-0.096],[-0.097,-0.146],[-0.027,-0.122],[-0.047,-0.272],[0,-0.149],[-0.025,-0.126],[-0.076,-0.124],[-0.124,-0.097],[-0.172,-0.222],[0,0],[0,-0.12],[-0.077,-0.098],[-0.122,-0.073],[0,0],[0,0],[0,-0.563],[0.246,-0.444],[0.1,-0.224],[0,-0.296],[0,-0.22],[0.076,-0.171],[0.12,-0.171],[0.12,0.05],[0.149,0.095],[0.125,0.097],[0.1,0.144],[0.124,0.251],[0.073,0.174],[0.172,0.122],[0,0],[0.146,-0.025],[0.147,-0.023],[0.345,0],[0.222,0.294],[0.122,0.296],[0.121,0.321],[0.149,0.297],[0.197,0.271],[0.072,0.03],[0.057,-0.008],[0.127,0.027],[0.121,0.022],[0.121,0.026],[0.125,0.099],[0,0.344],[-0.075,0.273],[0,0.688],[0.098,-0.146],[0.22,-0.295],[0.15,-0.124],[0.149,-0.125],[0.17,-0.147],[0.123,-0.096],[0.078,-0.12],[0.076,-0.146],[0.052,-0.123],[0.05,-0.122],[0.076,-0.197],[0.198,-0.048],[0.292,0.02],[0.198,-0.028],[0.393,-0.298],[0.172,-0.148],[0.122,-0.054],[0.146,-0.125],[0.072,-0.099],[0.072,-0.269],[0.022,-0.74],[0,0],[0,-0.344],[-0.126,-0.514],[-0.075,-0.315],[-0.02,-0.345],[-0.388,0],[-0.15,-0.027],[-0.173,-0.074],[-0.291,-0.296],[-0.049,-0.121],[-0.076,-0.104],[-0.146,-0.099],[-0.318,-0.196],[-0.174,-0.097],[-0.1,-0.126],[-0.115,-0.152],[-0.12,-0.242],[-0.019,-0.127],[-0.019,-0.174],[-0.098,-0.221],[0,-0.247],[0.024,-0.171],[0.05,-0.17],[0.123,-0.099],[0.126,-0.125],[0.076,-0.146],[0.048,-0.167],[0.023,-0.223],[0.022,-0.17],[0.073,-0.194],[0.126,-0.045],[0.1,-0.044],[0.065,0.012],[0.368,-0.047],[0.061,-0.024],[0.067,0.012],[0.175,-0.077],[0.12,-0.024],[0.296,-0.048],[0.147,0],[0.468,0],[0,0],[0,0.149],[0,0],[-0.122,0.121],[-0.15,0.072],[-0.061,0.025],[-0.068,-0.012],[-0.171,0.072],[-0.148,0.099],[-0.147,0.199],[0,0.219],[0.048,0.172],[0.049,0.148],[0,0],[0.075,-0.541],[0.023,-0.124],[0.049,-0.171],[0.027,-0.148],[0,-0.173],[-0.149,-0.248],[0,0],[0.324,0],[0,0],[0.171,0],[0.198,-0.099],[0.148,-0.102],[0.269,-0.099],[0.295,-0.047],[0,0],[0.145,0],[0.268,0.027],[0.151,0],[0.151,-0.048],[0.17,-0.077],[0.074,-0.121],[0.245,-0.101],[0.149,-0.025],[0.137,-0.011],[0.126,0.007],[0.15,0],[0.054,-0.011],[0.075,0.01],[0.175,-0.074],[0.147,-0.093],[0.125,-0.074],[0.173,-0.075],[0.123,-0.074],[0.101,-0.096],[0.123,-0.146],[0.097,-0.149],[0.145,-0.098],[0.128,0],[0.063,-0.013],[0.065,0.005],[0.319,-0.073],[0.122,-0.096],[0.095,-0.125],[0.147,-0.122],[0.123,-0.149],[0.074,-0.151],[0.049,-0.122],[0.049,-0.148],[0.198,-0.366],[0.247,-0.423],[0.05,-0.124],[0.097,-0.199],[0.124,-0.145],[0.172,-0.17],[0.168,-0.096],[0.149,-0.126],[0.073,-0.17],[0.048,-0.172],[0,-0.125],[0.025,-0.124],[0.029,-0.118],[0.073,-0.174],[0.32,-0.198],[0.246,-0.372],[0,-0.247],[-0.097,-0.147],[-0.069,-0.043],[-0.057,0.01],[-0.294,-0.073],[0,-0.297],[0,-0.149],[0,-0.148],[0,0],[-0.021,-0.126],[-0.047,-0.168],[-0.1,-0.442],[0,-0.127],[-0.05,-0.197],[-0.122,-0.145],[-0.075,-0.443],[0,-0.468],[-0.176,-0.345],[-0.242,-0.367],[-0.174,-0.073],[-0.08,-0.022],[-0.089,0.017],[-0.149,-0.075],[-0.047,-0.097],[0,0],[0,-0.17],[0.099,-0.196],[0.123,-0.15],[0.048,-0.27],[0,0],[0,0],[0.127,-0.099],[0.099,-0.148],[0.098,-0.123],[0.069,-0.042],[0.057,0.012],[0.126,-0.024],[0.149,-0.024],[0,0],[0.464,-0.027],[0.049,-0.394],[0,-0.124],[0,0],[-0.074,-0.125],[-0.198,-0.322],[0,0],[-0.023,0.294],[0,0.145],[-0.023,0.124],[-0.149,0],[-0.148,0],[-0.171,0],[0,0],[0,0],[-0.417,0],[0,-0.245],[0.047,-0.173],[0.099,-0.171],[0.123,-0.024],[0.443,-0.102],[0.147,0],[0.12,-0.028],[0.097,-0.073],[0.07,-0.171],[0.099,-0.148],[0.176,-0.076],[0.149,-0.046],[0.155,-0.031],[0.11,0.009],[0.123,0],[0.172,-0.028],[0.145,-0.123],[0.122,-0.147],[0.172,-0.175],[0.173,-0.125],[0,0],[0.176,-0.023],[0,0],[-0.098,0.121],[-0.124,0.148],[-0.124,0.248],[-0.073,0.365],[-0.097,0.125],[-0.121,0.145],[-0.074,0.093],[0,0],[0.129,-0.072],[0.149,-0.121],[0,0],[0.222,0],[0.272,-0.197],[0.122,-0.122],[0.123,-0.048],[0.15,-0.052],[0.492,0],[0.059,0.01],[0.07,-0.006],[0.299,0.047],[0.145,0.074],[0.196,0.225],[0,0],[0,0.173],[-0.098,0.2],[-0.049,0.119],[-0.1,0.245],[0,0.341],[0,0],[0,0],[0.169,-0.075],[0.146,0],[0.346,0.124],[0.05,0.125],[0.073,0.273],[0.023,0.125],[0.022,0.145],[0.096,0.196],[0,0],[0,0.244],[-0.122,0.149],[-0.05,0.121],[-0.046,0.144],[0,0],[0,0],[0.54,0],[0,0],[0.17,-0.096],[0.196,-0.122],[0.123,-0.052],[0.146,-0.074],[0.169,-0.076],[0.08,-0.024],[0.089,0.017],[0.146,-0.074],[0.047,-0.097],[0.023,-0.268],[0,-0.196],[0,-0.12],[0,0],[-0.397,0],[-0.173,-0.12],[-0.049,-0.343],[0,-0.124],[-0.072,-0.124],[-0.125,-0.099],[-0.149,-0.1],[-0.122,-0.1],[-0.121,-0.099],[-0.072,-0.097],[-0.072,-0.149],[-0.073,-0.193],[0,-0.419],[0.048,-0.166],[0.072,-0.144],[0.078,-0.126],[0.055,-0.038],[0.061,0.011],[0.319,-0.094],[0,0],[0.291,-0.025],[0,0],[0,-0.15],[0.024,-0.127],[0.07,-0.149],[0.048,-0.024],[0.072,0.014],[0.147,-0.05],[0.417,-0.222],[0.097,-0.147],[0.221,-0.268],[0.128,-0.046],[0.151,0],[0.659,0.172],[0.123,0.021],[0.321,0],[0.146,-0.07],[0.15,-0.1],[0.148,-0.097],[0.066,-0.039],[0.063,0.014],[0.17,-0.074],[0.15,-0.056],[0.114,0.017],[0.147,-0.028],[0.12,-0.021],[0.144,-0.098],[0.099,-0.075],[0.223,-0.297],[0.122,-0.097],[0.097,-0.121],[0.102,-0.124],[0.42,-0.467],[0.15,-0.121],[0.298,-0.247],[0.049,-0.121],[0.076,-0.175],[0.052,-0.121],[0.125,-0.298],[0.075,-0.173],[0.219,-0.368],[0.125,-0.074],[0.121,-0.079],[0.064,-0.04],[0.064,0.014],[0.341,-0.172],[0.124,-0.144],[0.098,-0.122],[0.125,-0.169],[0.146,-0.147],[0.125,-0.145],[0.05,-0.272],[0,-0.149],[0.022,-0.296],[0,0],[0.022,-0.169],[0.075,-0.173],[0.176,-0.369],[0,0],[0,-0.151],[0,0],[0,-0.148],[0.025,-0.176],[0.031,-0.122],[0.051,-0.267],[0.078,-0.192],[0.07,-0.124],[0.069,-0.148],[0.122,0.073],[0.122,0.098],[0.098,0.05],[0.149,0.098],[0.121,0.146],[0,0.149],[0,0.172],[-0.052,0.196],[0,0.393],[0.093,0.64],[0,0.513],[0,0.151],[-0.077,0.172],[-0.098,0.15],[-0.1,0.176],[0,0.223],[0.073,0.468],[0.124,0.37],[0,0.221],[-0.075,0.166],[-0.125,0.122],[-0.076,0.224],[0,0.221],[0,0.194],[0,0.147],[0,0],[0.119,-0.095],[0.05,-0.119],[0,0],[0.073,-0.173],[0.072,-0.123],[0.103,0.099],[0.072,0.272],[0.072,0.146],[0.37,0.271],[-0.022,-0.147],[-0.022,-0.148],[-0.024,-0.122],[-0.068,-0.176],[-0.124,-0.169],[-0.1,-0.122],[-0.097,-0.145],[-0.147,-0.291],[-0.078,-0.17],[-0.124,-0.269],[0,-0.394],[0.074,-0.146],[0.026,-0.196],[0.026,-0.122],[0.051,-0.147],[0.074,-0.125],[0.122,-0.096],[0.318,0],[0.345,0.171],[0.197,0],[-0.023,-0.147],[-0.023,-0.144],[-0.025,-0.124],[-0.073,-0.297],[-0.025,-0.121],[0,-0.196],[-0.051,-0.173],[-0.074,-0.445],[-0.025,-0.124],[-0.074,-0.172],[-0.074,-0.149],[-0.198,-0.323],[-0.052,-0.146],[-0.023,-0.122],[0,-0.169],[0,-0.15],[0,0],[0,-0.195],[0,-0.171],[0,-0.146],[-0.052,-0.149],[-0.038,-0.065],[-0.079,0.007],[-0.146,-0.247],[-0.024,-0.272],[-0.029,-0.346],[0,-0.295],[0,0],[0,0],[-0.268,0],[-0.174,0.028],[0,0],[0,0.146],[0,0],[0.021,0.145],[0.049,0.267],[0,0],[-0.055,-0.03],[-0.09,0.001],[-0.075,-0.145],[0,-0.147],[0,-0.148],[0.047,-0.269],[0,0],[-0.024,-0.175],[-0.098,-0.169],[-0.15,-0.073],[-0.062,-0.013],[-0.066,0.005],[-0.193,-0.051],[-0.124,-0.099],[-0.095,-0.07],[-0.517,-0.319],[0,0],[0,0],[0,0],[-0.027,-0.15],[-0.027,-0.172],[-0.17,-0.54],[0,0],[0.024,0.147],[0,0],[0,0.148],[-0.1,-0.013],[-0.073,0.007],[-0.173,-0.027],[0,0],[0,-0.147],[0.049,-0.226],[0,-0.445],[-0.145,0.147],[-0.151,0.047],[0,0],[0,0],[-0.17,0],[0.026,-0.294],[0.053,-0.173],[0.124,-0.149],[0.065,-0.026],[0.061,0.008],[0.295,-0.098],[0.175,-0.049],[0.148,-0.099],[0.15,-0.195],[0.173,-0.197],[0.125,-0.049],[0.149,-0.024],[0.272,-0.048],[0,-0.565],[0.051,-0.146],[0.122,-0.147],[0.122,-0.099],[0.121,-0.073],[0.101,-0.146],[0.122,-0.074],[0.123,-0.103],[0.149,-0.097],[0.145,-0.125],[0.125,-0.1],[0.125,-0.075],[0.058,-0.023],[0.071,0.013],[0.12,-0.072],[0.075,-0.124],[0.048,-0.125],[0.051,-0.147],[0.078,-0.172],[0.078,-0.127],[0.224,-0.219],[0.152,-0.025],[0.149,0.016],[0.322,-0.077],[0.149,-0.096],[0.147,-0.171],[0.194,-0.248],[0.393,0],[0.068,0],[0.374,0],[0,0],[0.172,0],[0,0],[0.147,0],[0.246,-0.024],[0,0],[0.172,0],[0.268,0.099],[0.224,0],[0.151,-0.027],[0,0],[0,0],[0.029,-0.345],[0.099,-0.152],[0.2,0.148],[0.196,0.122],[0.296,0],[0.249,0],[0.172,0.097],[0.12,0.048],[0.17,0.075],[-0.049,0.123],[-0.097,0.169],[0,0.273],[0.124,0.096],[0,0],[0.39,0],[0.124,-0.145],[0.122,-0.146],[0.518,0],[0.125,0.121],[0.023,-0.145],[0.023,-0.173],[0.121,0.051],[0.171,0.073],[0,0],[-0.028,-0.124],[-0.075,-0.172],[-0.027,-0.099],[-0.293,0.025],[-0.146,0],[0,0],[0,-0.344],[0.061,-0.037],[0.071,0.019],[0.148,-0.099],[0.098,-0.126],[0.069,-0.148],[0.096,-0.148],[0.124,-0.149],[0.053,-0.009],[0.076,0.01],[0,0],[0.172,-0.098],[0.27,-0.39],[0.394,-0.441],[0.293,-0.246],[0.219,0],[0.223,0.052],[0,0],[0.175,0],[0.173,-0.095],[0,0],[0.193,0],[0.122,0.101],[0.123,0.045],[0.063,0.014],[0.066,-0.005],[0.171,0.026],[-0.148,0.222],[0,0],[0.022,0.15],[0.076,0.12],[0.052,0.121],[0.052,0.267],[0,0],[0.121,-0.077],[0.145,-0.126],[0.291,-0.273],[0.122,-0.05],[0.144,-0.074],[0.148,-0.098],[0.124,-0.143],[0.122,-0.098],[0.268,-0.099],[0.051,-0.01],[0.079,0.015],[0.126,-0.072],[0.075,-0.123],[0.052,-0.146],[0.05,-0.27],[0.025,-0.296],[0.293,0],[0.319,-0.051],[0,0],[0,0],[-0.144,0.098],[0,0],[-0.15,0.074],[-0.168,0.1],[-0.073,0.148],[-0.025,0.123],[-0.025,0.121],[-0.025,0.121],[-0.072,0.345],[-0.029,0.122],[-0.023,0.122],[-0.073,0.153],[-0.097,0.074],[-0.172,0.07],[-0.126,0.05],[-0.1,0.099],[-0.05,0.122],[-0.15,0.347],[-0.467,0.27],[-0.493,0.316],[-0.469,0.268],[-0.441,0.366],[-0.101,0.122],[-0.27,0.196],[-0.077,0.096],[-0.096,0.174],[-0.063,0.013],[-0.066,-0.006],[-0.085,0.013],[-0.079,-0.006],[-0.149,0.024],[-0.126,0.026],[-0.343,0.101],[-0.148,0.049],[-0.055,0.012],[-0.075,-0.01],[-0.144,0.051],[-0.126,0.15],[0,0.248],[0,0.417],[-0.072,0.199],[-0.1,0.122],[-0.05,0.099],[-0.071,0.17],[-0.025,0.198],[0,0.295],[-0.073,0.319],[-0.097,0.319],[0,0.295],[0,1.649],[0,0.223],[-0.049,0.196],[0,0],[0,0],[0.174,0],[0.196,0],[0.125,-0.025],[0.15,-0.051],[0.123,-0.025],[0.244,-0.02],[0,-0.465],[0,-0.124],[0.075,-0.173],[0.102,-0.121],[0.145,-0.122],[0.1,-0.147],[0,0],[0.077,-0.146],[0.126,-0.199],[0,0],[0.168,0],[0,0],[0.15,0],[0.151,-0.073],[0.121,-0.101],[0,0],[0.27,-0.272],[0.123,-0.125],[0,0],[0,0],[0,-0.318],[-0.07,-0.173],[0,0],[0,0],[0.028,-0.169],[0.099,-0.197],[0.073,-0.127],[0.122,-0.172],[0.223,0],[0.1,0.075],[0.122,0.146],[0,0],[0,0],[-0.097,-0.123],[-0.248,-0.244],[-0.045,-0.118],[-0.025,-0.12],[-0.025,-0.145],[-0.047,-0.294],[0,-0.172],[0.075,-0.123],[0.123,-0.076],[-0.021,-0.123],[-0.049,-0.172],[-0.055,0.012],[-0.075,-0.01],[-0.168,0.073],[0,0],[0.021,-0.296],[0.098,-0.321],[0.046,-0.122],[0.078,-0.148],[0.245,-0.222],[0.122,-0.099],[0.074,-0.122],[0.045,-0.145],[0.025,-0.121],[0.049,-0.32],[0,-0.147],[0.022,-0.124],[0.075,-0.144],[0.097,-0.075],[0.121,-0.024],[0.344,0],[0.121,0.074],[0.168,0.172],[0.246,0],[0.144,-0.073],[0.123,-0.121],[0.122,-0.097],[0.101,0.148],[0.052,0.124],[0.073,0.176],[0.061,-0.012],[0.067,0.006],[0.176,-0.049],[0.146,-0.099],[0.269,-0.273],[0.096,-0.148],[0.195,-0.072],[0.222,0],[0.147,0],[0.152,0.025],[0,0],[0,0.294],[0,0.148],[0.099,0.323],[0.053,0.027],[0.063,-0.009],[0,-0.613],[0.098,-0.093],[0.148,-0.099],[0.151,-0.098],[0.246,-0.32],[0.146,-0.196],[0.119,-0.125],[0.245,-0.098],[0.176,-0.051],[0,0],[0.342,0],[0.147,-0.022],[0.293,-0.097],[0.17,-0.048],[0.124,-0.097],[0.124,-0.148],[0.122,-0.047],[0.467,-0.246],[0.189,-0.044],[0.115,0.01],[0.194,0],[0.171,-0.048],[0.366,-0.271],[0.151,-0.074],[0.271,-0.049],[0.467,0],[0.169,0.052],[0.171,0.099],[0.121,0.05],[0.367,0.094],[0,0],[0.193,0],[0,0],[-0.148,-0.097],[-0.123,-0.124],[-0.047,-0.122],[0,0],[-0.072,-0.175],[-0.074,-0.145],[-0.05,-0.122],[0,0],[-0.415,0],[-0.071,-0.121],[-0.048,-0.124],[-0.072,-0.124],[-0.1,-0.148],[0,0],[-0.195,0],[-0.101,-0.071],[0.148,-0.123],[0.122,-0.074],[0.171,-0.096],[0.126,-0.026],[0,0],[0.369,0.046],[0,0],[0.319,0],[0.292,0],[0.32,-0.121],[0.122,-0.145],[0.099,-0.128],[0.096,-0.194],[0,-0.221],[-0.029,-0.065],[-0.078,0.002],[-0.075,-0.095],[0,0],[0.371,-0.028],[0.488,0],[0.05,0.125],[0.05,0.145],[0.143,0.343],[0,0],[0.194,0],[0.171,0.048],[0.123,0.098],[0.1,0.447],[0,0],[0.346,0],[0.149,0.099],[0.245,0.194],[0.173,0.076],[0.218,0.095],[0,0],[0.169,-0.046],[0.048,-0.124],[0.025,-0.294],[0,-0.15],[0,0],[0.273,-0.024],[0,-0.468],[0,-0.148],[0,-0.145],[0.028,-0.122],[0.049,-0.147],[0.298,0.216],[0.175,0.078],[0,0],[0.142,0],[0.146,-0.049],[0.146,-0.097],[0.123,-0.121],[0.119,-0.101],[0.048,-0.026],[0.069,0.012],[0.169,-0.075],[0.125,-0.073],[0.074,-0.119],[0,-0.323],[-0.151,-0.074],[-0.11,-0.027],[-0.163,0.01],[-0.099,-0.072],[-0.099,-0.151],[-0.098,-0.149],[-0.267,-0.198],[0,0],[-0.271,0.028],[-0.443,0],[0,0],[-0.081,-0.009],[-0.082,0.006],[-0.198,-0.02],[-0.174,-0.099],[-0.151,-0.026],[-0.174,0],[-0.171,0.026],[0.147,0.099],[0.062,0.025],[0.07,-0.012],[0.124,0.074],[0.151,0.124],[0,0],[-0.021,0.122],[-0.098,0.224],[-0.439,0],[-0.048,-0.095],[0,0],[0,-0.174],[-0.147,-0.097],[-0.149,-0.048],[0,0],[-0.122,0],[-0.342,-0.024],[-0.196,-0.046],[-0.124,-0.052],[-0.176,-0.074],[-0.27,-0.099],[-0.194,-0.093],[-0.147,-0.121],[-0.076,-0.098],[-0.099,-0.073],[-0.168,-0.075],[-0.322,-0.047],[-0.145,0],[-0.344,-0.026],[0,-0.42],[-0.346,-0.417],[-0.223,-0.147],[-0.246,-0.096],[-0.167,-0.011],[-0.139,0.006],[-0.172,0],[-0.174,-0.047],[-0.167,-0.098],[-0.062,-0.01],[-0.066,0.006],[-0.147,-0.048],[0,0],[0,0],[-0.174,0],[-0.176,-0.049],[-0.39,-0.127],[-0.149,-0.077],[-0.467,0],[0,0],[-0.171,0],[-0.223,0.096],[-0.195,0.073],[-0.417,0],[0,0],[-0.198,0],[-0.194,-0.048],[-0.063,-0.011],[-0.067,0.007],[-0.321,-0.098],[-0.298,-0.17],[-0.122,-0.022],[-0.194,-0.027],[-0.222,0],[-0.146,0.025],[-0.146,0.097],[0,0.149],[-0.075,0.17],[-0.048,0.148],[-0.102,0.169],[0.122,0.051],[0.169,0.073],[0.12,0.073],[0.172,0.223],[0,0.145],[-0.048,0.198],[-0.099,0.122],[-0.122,0.099],[0,0],[0,0],[0,0],[0,0],[0,0],[0.464,0],[0.32,-0.1],[0,0],[-0.12,-0.029],[-0.146,-0.025],[0,0],[0,0.319],[0,0.148],[-0.049,0.149],[-0.075,0.121],[-0.22,0.096],[0,0],[-0.172,-0.026],[-0.267,-0.126],[-0.833,-0.12],[0,0],[-0.194,0],[-0.418,0.05],[-0.221,0.025],[-0.22,0],[-0.198,-0.024],[-0.194,-0.151],[-0.124,-0.075],[0,0],[-0.021,0.223],[0,0.145],[0,0],[0,0],[0,0],[0,0],[0,-0.294],[-0.099,-0.151],[-0.122,-0.073],[-0.147,-0.047],[-0.151,-0.047],[-0.175,-0.097],[-0.146,-0.246],[0,-0.394],[0,-0.124],[0,-0.171],[-0.075,-0.169],[-0.074,-0.12],[-0.097,-0.074],[-0.147,-0.126],[-0.097,-0.071],[-0.097,-0.05],[-0.058,-0.009],[-0.07,0.007],[-0.149,-0.021],[-0.166,-0.023],[-0.122,-0.029],[-0.292,-0.023],[-0.343,-0.023],[-0.148,0],[-0.148,0.024],[-0.147,0.073],[-0.143,0.077],[-0.175,0.075],[-0.148,0.051],[0,0],[-0.149,0.026],[-0.488,0.021],[-0.392,0],[-0.174,0.052],[0,0],[-0.145,0],[-0.145,-0.028],[-0.124,-0.049],[-0.193,-0.094],[-0.176,-0.121],[-0.122,-0.021],[0,0],[-0.198,0],[-0.217,-0.023],[-0.222,-0.029],[-0.194,-0.048],[0,0],[-0.297,-0.148],[-0.146,-0.097],[-0.121,-0.099],[-0.246,-0.15],[0,0],[0,0],[0.122,-0.121],[0.267,-0.176],[0,0],[-0.073,-0.01],[-0.067,0.007],[-0.195,-0.048],[0,0],[-0.024,0.298],[-0.046,0.174],[-0.197,0.295],[-0.121,0.052],[0,0],[-0.175,-0.025],[0.07,-0.148],[0.076,-0.17],[0.021,-0.125],[0.068,-0.17],[0.076,-0.094],[0.098,-0.076],[-0.296,0],[-0.197,0],[-0.172,-0.072],[-0.076,-0.011],[-0.089,0.011],[-0.322,-0.094],[-0.123,-0.022],[-0.197,0],[-0.346,0.023],[-0.291,0],[-0.219,-0.047],[-0.08,-0.012],[-0.088,0.011],[-0.294,-0.075],[-0.248,-0.038],[-0.188,0.015],[-0.293,-0.025],[-0.15,0],[-0.196,0],[-0.071,0.097],[-0.071,0.321],[0,0],[-0.343,0],[0,0.145],[0.028,0.194],[0.099,0.148],[0.146,0.075],[0.123,0.073],[0.123,0.075],[0.128,0.149],[0.053,0.12],[0.022,0.147],[0,0.147],[0,0],[-0.266,-0.051],[-0.122,-0.025],[-0.09,-0.013],[-0.078,0.006],[-0.124,-0.027],[-0.176,-0.048],[-0.149,-0.026],[-0.143,0],[-0.391,0],[0,0],[0,0],[0.151,0.075],[0.196,0.127],[0,0.267],[-0.372,-0.072],[-0.147,-0.101],[-0.147,-0.124],[-0.127,-0.098],[-0.096,-0.15],[-0.047,-0.1],[-0.098,-0.076],[-0.296,-0.073],[-0.169,0],[-0.12,0],[-0.123,0.073],[-0.1,0.146],[-0.346,0.348],[-0.444,0],[-0.343,0],[-0.12,0],[-0.172,-0.048],[-0.123,-0.051],[-0.148,0],[-0.174,0.048],[-0.439,0],[-0.245,0],[-0.124,0.294],[0.025,0.467],[-0.024,0.294],[0,0],[0,-0.464],[-0.124,-0.144],[-0.175,-0.149],[-0.122,-0.048],[-0.175,-0.07],[-0.173,-0.097],[-0.171,-0.122],[-0.32,-0.273],[0,0],[0,-0.145],[0.048,-0.149],[0,-0.194],[-0.025,-0.296],[0,-0.344],[-0.025,-0.341],[0,-0.297],[-0.049,-0.148],[-0.075,-0.172],[-0.175,-0.146],[-0.147,-0.071],[-0.248,-0.048],[-0.271,0],[-0.075,0.121],[-0.074,0.095],[-0.122,0.172],[-0.467,0],[-0.075,-0.146],[-0.096,-0.171],[-0.145,-0.121],[-0.125,-0.029],[-0.137,-0.019],[-0.198,0.008],[-0.175,-0.079],[-0.318,-0.246],[-0.272,0],[-0.169,0.046],[-0.195,0.101],[-0.177,0.072],[-0.198,0.094],[0,0],[0.076,0.169],[0.098,0.146],[0.021,0.173],[0,0.171],[0,0],[-0.221,0],[-0.397,0.15],[-0.442,0],[-0.221,-0.097],[-0.321,-0.096],[-0.194,-0.072],[-0.199,-0.101],[-0.171,0],[-0.194,0.049],[-0.243,0],[-0.149,-0.251],[0,0],[-0.146,-0.101],[-0.172,-0.073],[-0.127,-0.022],[-0.143,0],[-0.171,0],[-0.145,0.076],[-0.298,0],[0,0],[-0.147,-0.025],[0,0],[0,0],[-0.464,0],[-0.125,0],[-0.123,0.024],[-0.222,0.128],[0,0],[-0.15,0],[-0.174,0],[0,-0.293],[0,-0.149],[0,-0.15],[0,0],[-0.124,0.075],[-0.121,0.097],[-0.273,0.294],[-0.22,0],[-0.198,-0.079],[0,0],[0.297,0],[0.149,0],[0.174,-0.075],[0.122,-0.074],[0.104,-0.077],[0.147,-0.075],[0.198,-0.125],[0,0],[-0.05,-0.151],[-0.147,-0.148],[-0.39,0],[-0.171,0.05],[-0.124,0.069],[-0.153,0.125],[-0.099,0.15],[-0.126,0.125],[-0.173,0.147],[0,0],[0,0],[0.025,0.149],[0.072,0.221],[0,0],[-0.052,0.146],[-0.124,0.101],[-0.197,0.12],[0,0],[-0.15,0],[-0.296,-0.028],[-0.197,0],[-0.172,0.074],[-0.266,0.051],[0,0],[-0.393,0.025],[0,0],[-0.071,0],[0.226,-0.025],[0.147,-0.098],[0.122,-0.127],[0.127,-0.098],[0.121,-0.071],[0.143,-0.039],[0.119,0.015],[0.124,0],[0.149,-0.075],[0.121,-0.103],[0.271,-0.251],[0.192,-0.271],[0.22,-0.173],[0,0],[0.147,0],[0.124,0],[0.149,-0.05],[0.1,-0.074],[0.1,-0.151],[0.218,-0.173],[0,0],[0.15,0],[0.194,0],[0.123,-0.024],[0.17,-0.048],[0.151,-0.124],[0.027,-0.122],[0.075,-0.275],[0,0],[0.027,-0.221],[0.023,-0.145],[0.047,-0.147],[0.038,-0.05],[0.079,0.024],[0.097,-0.125],[0,-0.145],[-0.026,-0.122],[-0.04,-0.062],[-0.08,0.005],[-0.07,-0.124],[-0.07,-0.122],[-0.039,-0.05],[-0.082,0.025],[-0.051,-0.101],[-0.075,-0.173],[-0.145,-0.2],[-0.174,-0.074],[-0.087,-0.011],[-0.081,0.007],[-0.121,-0.024],[-0.05,-0.467],[0,0],[-0.32,0],[-0.319,-0.049],[-0.148,0],[-0.147,0.048],[-0.143,0.076],[-0.099,0.08],[-0.245,-0.269],[-0.098,-0.05],[-0.222,-0.051],[-0.22,0],[0,0],[0,0],[0,0],[0.097,-0.12],[0.098,-0.072],[0.195,-0.22],[0,-0.169],[0,0],[-0.319,0],[-0.397,-0.024],[-0.147,0],[0.072,-0.146],[0.194,-0.268],[0.069,-0.028],[0.06,0.009],[0.169,-0.051],[0,0],[0,0]],\"v\":[[172.657,-138.643],[172.24,-138.443],[171.456,-138.15],[171.064,-138.15],[169.88,-137.757],[169.486,-137.658],[169.095,-137.364],[168.801,-136.872],[168.801,-136.481],[168.801,-136.086],[168.508,-135.69],[167.719,-135.299],[167.915,-134.906],[168.306,-134.713],[168.212,-134.244],[164.28,-134.244],[164.081,-133.432],[163.65,-133.343],[163.196,-133.239],[163.196,-132.843],[162.899,-132.447],[162.507,-132.252],[161.425,-132.151],[160.736,-132.151],[160.344,-132.349],[159.952,-132.643],[159.658,-133.038],[159.264,-133.136],[158.868,-133.136],[157.887,-133.136],[157.493,-133.136],[156.61,-133.432],[156.117,-133.333],[155.944,-133.328],[155.626,-133.239],[155.331,-132.843],[155.428,-132.349],[155.331,-131.955],[154.939,-131.761],[154.421,-131.564],[152.308,-131.564],[151.298,-131.171],[150.808,-130.974],[150.019,-130.583],[149.628,-130.484],[149.137,-130.088],[148.746,-130.189],[148.548,-130.583],[148.103,-130.583],[147.27,-130.484],[146.874,-130.189],[146.092,-129.791],[145.696,-129.401],[145.301,-129.304],[144.813,-129.304],[143.829,-129.205],[143.043,-128.812],[142.746,-128.419],[142.647,-127.924],[142.454,-127.535],[142.235,-127.527],[142.058,-127.535],[141.568,-127.535],[141.175,-127.437],[140.783,-127.337],[140.391,-127.238],[139.993,-126.845],[140.391,-126.057],[140.783,-125.863],[141.663,-125.566],[142.058,-125.368],[142.058,-124.978],[142.058,-124.585],[141.764,-124.19],[141.371,-124.289],[140.092,-124.485],[139.306,-124.386],[138.913,-124.289],[138.618,-123.893],[138.225,-123.597],[137.834,-123.597],[137.441,-123.597],[136.947,-123.994],[135.866,-123.893],[135.079,-123.893],[134.684,-123.797],[134.271,-123.597],[132.449,-123.597],[132.033,-123.7],[131.639,-123.597],[131.538,-123.207],[131.246,-122.816],[129.204,-122.816],[128.491,-122.225],[128.691,-121.832],[129.079,-121.437],[129.472,-121.045],[129.866,-120.748],[129.866,-119.963],[129.866,-119.566],[130.066,-119.177],[130.163,-118.784],[131.149,-118.685],[131.736,-118.685],[132.227,-118.784],[132.624,-118.585],[132.918,-118.195],[133.309,-117.799],[133.309,-117.408],[133.309,-117.015],[132.423,-116.421],[131.835,-116.619],[131.441,-116.818],[131.246,-117.212],[131.05,-117.211],[130.855,-117.212],[130.361,-117.408],[129.967,-117.503],[129.571,-117.604],[129.472,-117.998],[129.376,-118.391],[128.983,-118.585],[126.647,-118.585],[125.839,-118.978],[125.743,-119.373],[124.949,-119.566],[124.559,-119.566],[124.168,-119.274],[123.772,-119.177],[122.594,-118.881],[122.691,-118.491],[123.082,-118.391],[123.871,-118.391],[124.267,-118.391],[124.559,-117.998],[124.853,-117.604],[124.658,-117.212],[123.772,-117.306],[123.381,-117.408],[123.082,-117.799],[122.447,-117.799],[122.197,-117.799],[121.806,-117.799],[121.611,-117.408],[121.514,-117.015],[121.116,-116.619],[122.103,-115.736],[122.48,-115.736],[122.889,-115.736],[123.283,-115.639],[124.46,-115.144],[124.756,-114.752],[125.149,-114.655],[125.543,-114.458],[125.743,-114.066],[125.543,-113.67],[125.149,-114.262],[124.72,-114.326],[124.361,-114.36],[123.97,-114.655],[123.775,-114.654],[123.576,-114.655],[123.383,-114.654],[123.184,-114.655],[122.79,-114.95],[122.396,-115.05],[121.813,-115.048],[121.219,-115.05],[120.431,-115.344],[120.04,-115.736],[119.746,-116.128],[119.842,-116.525],[119.842,-117.306],[119.842,-118.096],[120.137,-118.491],[120.137,-118.881],[120.137,-119.274],[120.04,-119.669],[119.644,-119.867],[119.644,-120.257],[119.249,-121.045],[118.858,-120.849],[118.66,-120.848],[118.464,-120.849],[118.464,-120.257],[118.566,-119.867],[118.566,-118.685],[118.464,-118.29],[118.464,-117.847],[117.678,-117.896],[117.186,-117.799],[116.796,-117.847],[116.796,-117.212],[116.694,-116.818],[116.301,-116.619],[115.91,-116.525],[115.415,-115.639],[115.415,-115.441],[116.301,-114.36],[116.991,-113.67],[116.991,-113.277],[117.186,-112.491],[117.087,-112.098],[116.892,-111.705],[116.4,-111.117],[116.4,-110.92],[116.595,-110.525],[116.694,-110.034],[116.796,-109.642],[116.595,-109.247],[116.694,-108.853],[117.087,-108.069],[117.504,-107.871],[119.447,-107.871],[119.746,-108.265],[120.137,-108.561],[120.527,-108.951],[120.725,-108.951],[121.116,-108.853],[121.413,-108.462],[122.197,-107.968],[122.594,-107.871],[122.988,-107.577],[123.381,-106.79],[124.066,-106.099],[124.46,-105.808],[124.756,-105.413],[124.46,-104.626],[124.168,-104.232],[123.772,-103.941],[123.97,-103.546],[124.152,-103.552],[124.361,-103.546],[124.756,-103.349],[125.051,-102.954],[125.818,-102.851],[126.23,-102.857],[126.621,-102.76],[126.331,-102.367],[125.936,-102.169],[125.149,-102.071],[124.756,-102.071],[124.361,-102.367],[123.97,-102.66],[123.576,-102.76],[123.381,-103.741],[123.381,-104.334],[123.477,-104.727],[122.889,-105.512],[122.495,-105.709],[122.495,-106.099],[122.197,-106.494],[121.806,-106.594],[121.314,-106.691],[120.527,-106.79],[119.348,-106.691],[118.954,-106.691],[118.566,-106.494],[118.17,-106.296],[117.775,-105.903],[117.876,-105.512],[117.975,-105.119],[118.267,-104.134],[118.071,-103.148],[117.975,-102.76],[117.581,-102.367],[117.186,-102.071],[116.694,-101.676],[116.301,-101.38],[116.301,-100.4],[115.517,-100.4],[114.339,-99.708],[113.546,-99.222],[113.546,-98.824],[113.254,-98.43],[112.861,-98.43],[112.072,-98.533],[111.68,-98.727],[111.287,-98.824],[110.868,-99.12],[108.536,-99.12],[108.142,-99.32],[108.436,-99.708],[108.73,-100.104],[109.319,-100.104],[109.913,-100.104],[110.305,-99.907],[111.092,-99.907],[111.878,-99.907],[112.274,-100.204],[112.665,-100.497],[113.056,-100.792],[113.449,-101.579],[113.845,-101.778],[114.529,-102.464],[114.629,-102.857],[115.025,-103.057],[115.415,-103.252],[115.415,-103.645],[115.517,-104.035],[115.808,-104.824],[115.91,-105.217],[116.009,-105.609],[116.202,-105.981],[116.103,-106.47],[115.316,-106.397],[114.827,-106.494],[114.339,-106.691],[114.042,-107.083],[113.943,-107.676],[114.137,-108.658],[114.137,-109.835],[114.137,-110.23],[114.339,-111.016],[114.529,-112.196],[114.529,-112.591],[114.137,-113.377],[114.042,-113.772],[113.746,-114.554],[113.449,-114.95],[113.254,-115.316],[113.254,-117.752],[114.042,-117.702],[114.434,-117.799],[114.529,-117.752],[114.556,-120.159],[113.546,-120.257],[113.157,-120.652],[112.762,-120.748],[111.977,-120.748],[111.188,-120.748],[110.6,-120.849],[109.616,-120.652],[109.22,-120.358],[108.832,-120.159],[108.436,-120.159],[107.648,-120.159],[107.258,-120.064],[107.258,-118.881],[107.258,-118.391],[106.766,-117.604],[106.471,-117.212],[105.78,-116.421],[105.587,-115.639],[105.391,-115.144],[104.996,-115.05],[104.543,-115.036],[104.208,-115.05],[103.816,-115.05],[103.424,-114.85],[103.227,-114.262],[103.227,-114.066],[103.323,-113.576],[103.523,-113.569],[103.717,-113.576],[104.406,-112.884],[104.504,-112.098],[104.31,-111.313],[103.915,-111.214],[103.522,-111.016],[103.424,-110.404],[103.522,-109.642],[104.31,-109.642],[104.703,-109.642],[105.098,-109.346],[105.391,-108.951],[105.391,-108.561],[105.587,-108.168],[105.979,-107.968],[106.273,-107.577],[106.668,-107.479],[107.354,-106.79],[107.75,-106.594],[107.75,-106.201],[107.75,-105.808],[107.354,-105.413],[107.258,-105.02],[106.867,-105.02],[106.471,-105.02],[105.684,-105.02],[104.897,-105.413],[104.406,-106.79],[103.62,-106.887],[102.441,-107.083],[102.143,-107.479],[101.751,-107.773],[101.29,-107.79],[100.966,-107.773],[100.572,-107.871],[99.786,-107.968],[99.393,-108.361],[99.198,-108.853],[98.805,-108.951],[98.408,-109.052],[97.918,-109.346],[97.499,-109.543],[95.585,-109.543],[95.165,-109.738],[94.971,-110.131],[94.552,-110.326],[92.536,-110.326],[91.723,-110.82],[90.938,-111.313],[90.544,-111.41],[90.346,-111.803],[89.954,-111.902],[89.561,-112.196],[89.465,-112.591],[89.236,-112.601],[89.072,-112.591],[88.478,-112.687],[88.28,-112.687],[87.891,-112.491],[87.497,-112.098],[87.596,-111.51],[87.988,-111.117],[88.382,-110.82],[88.382,-110.427],[88.382,-109.936],[89.169,-109.936],[89.561,-109.835],[89.954,-109.835],[90.346,-109.642],[90.448,-109.247],[90.643,-108.757],[91.626,-108.462],[92.021,-108.265],[92.311,-107.871],[92.217,-107.479],[92.118,-107.083],[91.427,-106.397],[91.039,-106.397],[90.643,-106.397],[90.249,-106.397],[90.053,-106.002],[89.954,-105.609],[89.757,-105.217],[89.365,-105.02],[88.921,-105.119],[88.973,-105.903],[89.072,-106.296],[89.072,-107.083],[88.921,-107.479],[88.382,-107.479],[87.988,-107.379],[87.596,-107.083],[87.397,-106.691],[87.203,-106.296],[86.415,-106.296],[86.023,-106.296],[85.236,-106.397],[85.025,-106.414],[84.743,-106.397],[84.548,-106.002],[84.251,-105.609],[83.787,-105.609],[83.37,-105.609],[82.971,-105.709],[82.579,-105.709],[81.698,-105.709],[81.303,-105.633],[81.303,-104.626],[80.125,-104.626],[79.729,-104.923],[79.536,-105.316],[79.141,-105.413],[79.337,-105.808],[79.337,-106.201],[79.729,-106.987],[79.633,-107.379],[79.237,-107.28],[79.042,-106.887],[78.65,-106.79],[78.253,-106.691],[77.914,-106.677],[77.37,-106.594],[77.074,-106.201],[76.29,-105.808],[75.703,-105.808],[74.523,-105.709],[74.126,-105.512],[74.029,-105.119],[73.632,-104.923],[73.244,-104.923],[72.849,-104.923],[72.456,-104.824],[71.572,-104.626],[71.177,-104.334],[70.393,-103.645],[69.898,-103.349],[69.21,-103.331],[68.329,-103.252],[67.932,-102.857],[68.126,-102.464],[68.526,-101.973],[68.329,-101.38],[67.539,-100.993],[67.145,-100.696],[66.753,-100.598],[66.361,-100.598],[65.868,-100.598],[65.277,-100.302],[65.083,-100.302],[64.786,-100.696],[64.298,-100.894],[63.899,-101.284],[63.805,-101.676],[63.411,-102.268],[63.508,-103.202],[65.672,-103.202],[65.672,-104.427],[65.277,-104.824],[64.885,-104.923],[64.69,-105.316],[64.395,-105.709],[63.997,-106.099],[63.215,-105.903],[63.018,-105.903],[62.626,-106.296],[62.23,-106.397],[61.369,-106.397],[60.557,-106.397],[60.165,-106.296],[59.871,-106.369],[59.871,-105.512],[60.656,-105.413],[61.001,-105.217],[61.001,-102.884],[60.755,-102.464],[60.361,-102.169],[60.462,-101.778],[60.462,-101.38],[60.855,-101.284],[61.249,-101.088],[61.543,-100.696],[61.936,-100.204],[61.936,-100.005],[61.592,-99.76],[61.639,-99.419],[61.639,-98.236],[61.592,-98.042],[60.755,-98.141],[60.361,-98.141],[59.969,-98.43],[59.969,-98.824],[59.676,-99.222],[59.233,-99.222],[58.79,-99.222],[58.397,-98.923],[58.001,-98.923],[57.12,-98.923],[56.726,-98.824],[56.726,-98.43],[56.628,-98.042],[56.234,-97.844],[55.839,-97.746],[55.053,-97.546],[54.56,-97.449],[54.169,-97.152],[53.973,-96.763],[53.581,-96.469],[52.991,-96.378],[52.992,-96.369],[52.992,-95.585],[53.186,-95.191],[53.284,-94.795],[53.68,-94.7],[54.072,-94.5],[54.268,-93.911],[54.169,-93.321],[54.169,-93.519],[53.385,-93.519],[52.596,-93.519],[51.809,-93.715],[51.419,-93.715],[51.025,-93.812],[50.135,-93.911],[49.743,-94.203],[49.354,-94.306],[49.159,-94.305],[48.958,-94.306],[48.568,-94.597],[48.27,-95.09],[48.074,-95.482],[47.685,-95.29],[47.385,-94.893],[47.216,-94.9],[46.993,-94.893],[46.599,-94.404],[46.796,-93.812],[47.188,-93.519],[47.586,-93.421],[47.586,-93.027],[47.78,-92.632],[48.173,-92.632],[49.055,-92.73],[49.844,-92.239],[50.135,-91.751],[49.844,-91.356],[47.876,-91.356],[47.685,-90.962],[47.29,-90.862],[46.895,-90.962],[46.796,-91.356],[46.406,-91.648],[45.224,-92.143],[45.03,-92.142],[44.828,-92.143],[44.141,-92.73],[43.945,-93.126],[43.945,-93.519],[43.945,-94.7],[42.691,-94.7],[42.667,-95.972],[42.863,-97.648],[42.57,-98.43],[41.9,-98.592],[41.391,-98.629],[41.19,-99.025],[40.801,-99.419],[40.505,-100.204],[39.993,-100.291],[39.621,-100.302],[39.228,-100.696],[38.438,-101.088],[38.538,-101.482],[38.931,-101.38],[39.326,-101.284],[39.522,-100.894],[40.307,-100.598],[41.094,-100.104],[41.486,-99.907],[42.199,-99.902],[42.863,-99.907],[43.255,-99.907],[43.552,-99.515],[44.363,-99.12],[47.066,-99.12],[47.484,-99.025],[47.876,-98.923],[48.074,-98.533],[48.469,-98.43],[48.859,-98.43],[49.254,-98.334],[50.04,-98.334],[50.432,-98.334],[50.826,-98.334],[51.22,-98.533],[51.415,-98.533],[51.612,-98.533],[52.005,-98.629],[52.793,-99.025],[53.186,-99.025],[53.973,-99.12],[54.365,-99.419],[54.758,-99.708],[55.154,-100.005],[55.35,-100.4],[55.449,-101.185],[55.35,-102.367],[55.35,-102.76],[54.954,-103.546],[54.56,-103.839],[54.169,-104.232],[53.775,-104.334],[53.284,-104.427],[52.496,-104.427],[51.708,-104.427],[50.928,-104.923],[50.531,-105.119],[50.333,-105.512],[49.941,-105.709],[49.646,-106.099],[49.448,-106.099],[49.254,-106.099],[48.859,-106.296],[48.568,-106.691],[48.173,-106.79],[47.78,-106.987],[47.385,-107.28],[46.993,-107.379],[46.06,-107.479],[45.128,-107.379],[44.536,-107.28],[44.339,-107.28],[43.945,-107.577],[43.456,-107.773],[42.764,-108.462],[41.586,-108.462],[41.586,-107.871],[41.391,-107.479],[40.997,-107.479],[40.603,-107.479],[40.113,-107.773],[40.307,-108.168],[40.505,-108.757],[40.505,-108.951],[40.113,-109.148],[39.716,-109.346],[39.716,-109.738],[39.621,-110.23],[38.466,-110.23],[38.046,-110.034],[37.656,-109.642],[37.061,-109.835],[36.671,-110.034],[36.572,-110.427],[35.686,-110.326],[34.805,-110.525],[34.41,-110.623],[34.41,-111.065],[34.805,-111.016],[35.195,-111.117],[35.686,-111.065],[35.786,-111.902],[35.488,-112.296],[35.195,-112.687],[34.805,-112.687],[33.917,-112.687],[33.13,-112.787],[32.837,-113.178],[32.54,-113.576],[32.148,-113.67],[31.755,-113.576],[31.755,-112.394],[30.673,-112.296],[30.673,-113.104],[30.868,-113.475],[31.26,-113.87],[31.26,-114.213],[28.559,-114.213],[28.609,-112.984],[28.411,-112.591],[28.411,-112.196],[28.559,-111.803],[28.017,-111.902],[28.115,-112.296],[28.216,-112.884],[27.922,-113.475],[27.499,-113.67],[26.736,-113.67],[26.717,-114.655],[26.249,-114.752],[25.362,-114.163],[24.973,-113.968],[24.579,-114.066],[24.185,-114.066],[23.888,-113.67],[23.495,-112.884],[22.906,-112.591],[22.71,-112.591],[22.217,-112.687],[21.928,-113.081],[22.121,-113.475],[22.516,-113.772],[21.163,-113.772],[19.957,-113.475],[19.462,-113.277],[18.971,-112.984],[18.876,-112.591],[19.074,-112.196],[19.462,-111.803],[20.249,-111.705],[20.939,-111.605],[20.939,-110.721],[20.178,-110.721],[19.76,-111.016],[18.876,-111.016],[18.087,-111.117],[17.672,-111.214],[16.91,-111.214],[16.91,-110.131],[16.91,-109.738],[16.714,-109.346],[16.319,-109.148],[16.319,-109.936],[16.221,-110.326],[15.828,-110.525],[15.632,-110.524],[15.436,-110.525],[15.043,-110.82],[14.746,-111.214],[14.56,-111.213],[14.354,-111.214],[13.543,-111.803],[12.88,-111.705],[12.88,-110.943],[13.074,-110.525],[13.174,-110.034],[12.88,-109.247],[12.98,-108.853],[12.585,-108.561],[11.993,-108.265],[11.406,-108.361],[11.406,-108.757],[11.21,-109.148],[11.21,-109.543],[10.815,-109.346],[10.715,-108.853],[10.505,-108.847],[10.32,-108.853],[9.538,-108.757],[9.438,-108.069],[9.634,-107.676],[9.816,-107.682],[10.029,-107.676],[10.421,-107.479],[10.421,-107.083],[10.421,-106.691],[10.225,-106.296],[9.833,-106.397],[9.438,-106.79],[8.941,-106.8],[8.555,-106.79],[8.06,-106.987],[8.258,-108.168],[8.06,-108.561],[7.474,-108.361],[7.474,-107.183],[7.079,-106.987],[6.484,-107.183],[5.51,-106.79],[5.605,-106.397],[6,-106.201],[5.803,-105.808],[4.816,-105.808],[4.424,-105.709],[4.031,-105.709],[3.639,-105.413],[3.54,-105.02],[3.143,-104.923],[2.753,-104.528],[2.654,-104.134],[2.445,-104.128],[2.262,-104.134],[1.866,-103.645],[2.628,-103.645],[3.046,-103.839],[3.341,-104.232],[3.734,-104.427],[4.13,-104.427],[4.523,-104.528],[4.915,-104.427],[5.307,-104.727],[5.51,-105.119],[5.721,-105.125],[5.898,-105.119],[6.09,-105.118],[6.293,-105.119],[6.686,-105.413],[7.716,-105.512],[8.751,-105.413],[9.142,-105.119],[8.945,-104.727],[8.16,-104.727],[7.764,-104.727],[7.667,-104.334],[7.276,-104.232],[7.087,-104.286],[6.882,-104.334],[6.484,-104.035],[6.391,-103.645],[6.193,-103.252],[5.803,-103.057],[5.605,-102.66],[5.704,-102.268],[5.605,-101.482],[4.523,-101.284],[4.13,-100.497],[3.734,-100.302],[3.341,-100.005],[3.143,-99.613],[2.753,-99.419],[2.359,-99.12],[2.359,-98.727],[2.359,-98.334],[1.966,-97.945],[1.573,-97.546],[1.573,-96.763],[1.378,-96.369],[1.378,-95.972],[1.283,-96.369],[0.884,-96.074],[0.1,-95.779],[-0.194,-95.384],[-0.589,-95.09],[-0.816,-95.078],[-0.986,-95.09],[-1.572,-94.893],[-1.966,-94.597],[-1.867,-94.108],[-1.473,-94.01],[-1.081,-94.108],[-0.293,-94.108],[-0.392,-93.615],[-0.392,-93.225],[-0.784,-93.027],[-1.18,-92.831],[-1.572,-92.534],[-2.163,-92.437],[-2.555,-92.045],[-2.948,-91.751],[-3.34,-91.648],[-3.736,-91.356],[-3.931,-90.962],[-4.029,-90.569],[-4.62,-90.175],[-5.626,-90.569],[-6.388,-90.569],[-6.486,-89.881],[-6.19,-89.094],[-7.37,-88.8],[-7.57,-88.799],[-7.763,-88.8],[-8.553,-88.409],[-8.944,-88.11],[-9.339,-87.817],[-9.512,-87.822],[-9.73,-87.817],[-10.125,-87.619],[-10.125,-87.227],[-10.125,-86.833],[-10.517,-86.44],[-10.914,-86.144],[-11.307,-86.144],[-11.698,-86.144],[-12.091,-85.85],[-12.487,-85.554],[-12.387,-85.161],[-12.19,-84.768],[-12.387,-84.375],[-12.605,-84.318],[-12.78,-84.277],[-12.979,-83.884],[-12.879,-83.488],[-12.585,-82.899],[-12.681,-82.21],[-12.876,-82.205],[-13.073,-82.21],[-13.271,-81.82],[-13.271,-81.03],[-12.217,-81.03],[-11.796,-81.132],[-11.402,-80.937],[-11.206,-80.542],[-11.503,-80.149],[-11.895,-79.954],[-11.895,-79.557],[-11.895,-79.165],[-12.387,-78.967],[-12.487,-78.575],[-12.387,-78.083],[-10.814,-78.035],[-10.914,-77.101],[-11.307,-76.804],[-11.503,-76.411],[-11.307,-76.017],[-11.307,-75.721],[-10.517,-75.721],[-10.322,-75.734],[-10.03,-75.721],[-9.73,-75.33],[-9.339,-74.939],[-8.553,-75.134],[-8.159,-75.037],[-7.569,-74.838],[-6.587,-75.134],[-6.292,-75.527],[-6.072,-75.533],[-5.897,-75.527],[-5.504,-75.627],[-5.115,-75.921],[-4.913,-76.313],[-4.52,-76.707],[-3.931,-77.491],[-3.638,-77.884],[-3.243,-77.986],[-2.852,-77.884],[-2.458,-78.083],[-2.458,-78.871],[-2.271,-78.876],[-2.064,-78.871],[-1.667,-78.675],[-1.473,-78.279],[-1.473,-77.884],[-1.081,-77.593],[-1.081,-76.707],[-0.986,-76.313],[-0.589,-76.017],[-0.194,-75.43],[-0.194,-75.233],[-0.589,-74.838],[-0.491,-74.442],[-0.001,-73.659],[0.393,-73.56],[0.689,-73.167],[0.986,-72.775],[0.986,-72.379],[0.986,-71.989],[1.283,-71.204],[1.671,-70.908],[2.065,-70.513],[2.458,-70.216],[2.557,-69.826],[2.458,-69.433],[2.165,-68.841],[2.165,-68.646],[2.359,-68.254],[2.359,-67.855],[5.112,-67.855],[5.211,-68.449],[5.211,-68.841],[5.51,-69.236],[5.898,-69.63],[6.293,-69.63],[6.686,-69.63],[7.079,-69.532],[7.474,-69.333],[7.867,-69.532],[8.16,-69.925],[9.044,-70.022],[9.044,-71.204],[10.616,-71.204],[10.715,-71.597],[10.616,-72.185],[9.855,-72.185],[9.438,-72.088],[9.266,-72.081],[9.044,-72.088],[9.044,-72.482],[8.65,-72.578],[9.142,-73.366],[9.438,-73.76],[9.538,-74.545],[9.634,-75.33],[9.634,-75.721],[9.833,-76.12],[10.225,-76.313],[10.616,-76.707],[11.01,-76.804],[11.406,-77.101],[11.797,-77.2],[11.987,-77.193],[12.19,-77.2],[12.388,-77.593],[12.388,-77.986],[12.684,-78.379],[13.074,-78.675],[13.469,-78.967],[13.469,-79.338],[13.469,-79.753],[13.368,-80.245],[12.585,-80.245],[11.797,-80.346],[11.406,-80.27],[11.406,-81.525],[11.01,-81.916],[10.803,-81.916],[10.616,-81.916],[10.225,-82.21],[10.275,-82.582],[10.275,-85.751],[10.715,-86.048],[10.911,-86.44],[11.307,-86.833],[11.504,-87.227],[11.702,-88.01],[11.893,-88.409],[12.289,-88.602],[12.505,-88.608],[12.684,-88.602],[13.469,-88.998],[13.764,-89.388],[14.159,-89.682],[14.354,-90.074],[14.837,-90.161],[15.138,-90.175],[15.348,-90.163],[15.633,-90.175],[15.927,-90.569],[16.319,-90.862],[16.319,-91.255],[16.609,-91.648],[17.01,-91.751],[17.402,-91.849],[17.797,-91.849],[18.186,-91.944],[18.483,-92.534],[18.186,-93.126],[17.797,-93.421],[17.797,-93.812],[18.087,-94.993],[18.383,-95.384],[18.589,-95.391],[18.777,-95.384],[19.171,-95.678],[19.462,-96.174],[19.76,-96.957],[19.858,-97.352],[20.648,-97.449],[21.434,-97.352],[21.629,-97.351],[21.824,-97.352],[22.121,-96.957],[22.71,-96.174],[23.103,-96.27],[23.398,-96.663],[23.792,-96.763],[24.185,-96.469],[24.579,-96.174],[24.773,-95.779],[24.973,-95.361],[24.973,-94.108],[23.792,-94.108],[23.792,-92.926],[23.792,-92.534],[23.398,-91.751],[23.004,-91.454],[22.413,-91.158],[21.333,-91.356],[20.939,-91.158],[20.544,-90.962],[20.353,-90.569],[20.056,-90.175],[19.957,-89.783],[19.565,-89.584],[19.171,-89.191],[18.971,-88.8],[18.579,-88.602],[17.893,-87.913],[18.186,-86.539],[17.99,-85.947],[17.598,-85.358],[17.797,-83.985],[17.797,-83.589],[17.893,-83.194],[17.893,-82.309],[18.876,-82.21],[19.661,-81.916],[19.957,-81.525],[20.249,-81.132],[21.039,-80.834],[21.434,-80.542],[22.413,-80.053],[22.612,-80.053],[23.004,-80.245],[24.384,-80.937],[25.362,-80.639],[25.953,-80.736],[26.348,-80.736],[26.741,-80.937],[26.837,-81.328],[27.232,-81.525],[30.35,-81.525],[30.771,-81.82],[31.361,-81.916],[31.557,-81.916],[31.855,-81.525],[31.952,-81.132],[32.344,-80.937],[34.31,-80.937],[34.508,-80.542],[34.113,-80.149],[33.329,-80.149],[32.344,-80.149],[31.952,-80.053],[31.557,-79.753],[31.163,-79.46],[30.771,-79.165],[30.478,-78.771],[30.281,-78.379],[29.987,-77.986],[29.589,-77.986],[28.807,-78.083],[28.411,-78.478],[27.823,-78.871],[26.837,-78.575],[26.052,-78.575],[25.267,-78.675],[24.876,-78.575],[24.484,-78.379],[24.087,-78.083],[23.691,-78.182],[23.302,-78.379],[22.906,-78.182],[22.516,-77.986],[22.516,-77.593],[22.121,-77.2],[22.023,-76.804],[21.632,-76.903],[21.236,-76.903],[20.842,-77.2],[20.842,-77.593],[20.449,-77.593],[20.056,-77.593],[19.661,-77.398],[19.565,-77.005],[19.957,-76.707],[20.154,-76.707],[20.353,-76.707],[20.747,-76.411],[19.957,-76.411],[18.681,-76.017],[18.288,-75.823],[18.383,-75.43],[19.074,-74.838],[19.462,-74.838],[19.858,-74.738],[20.449,-74.738],[21.039,-74.738],[21.632,-75.527],[22.121,-75.921],[22.71,-75.721],[23.103,-75.527],[23.495,-75.233],[23.595,-74.838],[23.595,-74.442],[23.987,-74.249],[24.384,-74.056],[24.773,-73.76],[24.579,-73.366],[23.495,-72.876],[23.103,-72.675],[23.103,-72.283],[23.004,-71.597],[22.245,-71.597],[21.725,-71.694],[21.333,-71.79],[21.137,-72.185],[21.137,-72.578],[20.842,-72.97],[20.635,-72.97],[20.449,-72.97],[20.449,-73.366],[20.449,-73.76],[19.661,-73.76],[19.074,-72.97],[18.681,-72.675],[18.288,-72.482],[18.288,-72.088],[18.288,-71.694],[18.087,-71.301],[17.797,-70.908],[17.797,-70.513],[17.499,-69.925],[17.598,-69.333],[17.698,-68.94],[17.893,-68.545],[17.598,-68.155],[17.206,-67.763],[17.105,-67.267],[17.598,-66.876],[17.402,-66.484],[17.01,-66.484],[16.023,-66.876],[15.236,-66.876],[14.453,-66.876],[13.958,-66.68],[13.665,-66.288],[13.862,-65.895],[14.549,-65.206],[14.453,-64.814],[14.057,-64.714],[12.684,-65.598],[12.289,-65.895],[11.893,-66.384],[11.504,-66.484],[11.111,-66.288],[10.225,-65.794],[9.833,-65.5],[9.438,-65.402],[9.044,-65.206],[8.751,-64.814],[8.355,-64.515],[7.177,-64.418],[6.391,-64.319],[5.898,-64.025],[5.26,-63.926],[4.13,-64.221],[3.934,-65.598],[3.143,-65.598],[2.753,-65.402],[2.557,-65.129],[2.165,-65.108],[1.671,-65.206],[0.884,-65.206],[0.049,-65.129],[0.049,-63.926],[-0.762,-63.926],[-1.378,-64.025],[-1.77,-64.319],[-1.966,-65.206],[-2.357,-65.011],[-3.145,-65.011],[-3.145,-65.698],[-3.243,-66.091],[-3.047,-66.484],[-1.499,-66.484],[-0.689,-66.288],[-0.293,-65.992],[0.32,-65.794],[1.105,-65.895],[1.283,-66.68],[1.083,-67.66],[1.283,-68.254],[1.671,-68.841],[1.573,-69.63],[0.811,-69.63],[0.393,-69.433],[0.068,-69.45],[-0.392,-69.433],[-0.784,-69.236],[-0.986,-68.841],[-1.378,-68.449],[-1.572,-68.449],[-1.966,-68.646],[-1.867,-69.433],[-1.473,-69.727],[-1.378,-70.095],[-1.378,-70.708],[-2.163,-70.611],[-2.555,-70.708],[-2.458,-71.204],[-1.966,-71.989],[-1.966,-72.379],[-1.966,-72.775],[-2.26,-73.167],[-2.458,-73.56],[-2.751,-73.953],[-3.145,-73.855],[-3.638,-73.56],[-3.835,-72.775],[-4.52,-72.088],[-4.745,-72.081],[-4.913,-72.088],[-5.409,-71.989],[-5.801,-71.597],[-5.603,-71.004],[-5.603,-70.811],[-5.701,-70.415],[-6.094,-70.315],[-6.486,-70.216],[-7.079,-69.333],[-6.781,-68.352],[-6.486,-67.959],[-6.094,-67.855],[-5.701,-67.562],[-5.801,-67.173],[-6.044,-66.778],[-5.897,-66.384],[-5.897,-65.992],[-6.044,-65.352],[-6.094,-65.108],[-5.996,-64.714],[-5.701,-64.319],[-5.409,-63.512],[-5.409,-62.746],[-5.996,-62.746],[-6.486,-62.648],[-7.471,-62.551],[-7.964,-62.551],[-8.65,-62.648],[-9.635,-62.648],[-10.422,-62.551],[-10.617,-62.159],[-11.009,-61.959],[-11.895,-61.763],[-11.991,-61.369],[-12.19,-60.977],[-13.073,-60.29],[-13.469,-60.587],[-13.887,-60.587],[-14.254,-60.587],[-14.648,-60.485],[-15.042,-60.558],[-15.042,-59.796],[-14.254,-59.406],[-14.254,-58.129],[-14.841,-58.129],[-15.236,-57.93],[-15.63,-57.832],[-16.025,-57.536],[-16.81,-56.943],[-17.206,-56.554],[-17.598,-56.262],[-17.99,-56.262],[-19.27,-56.262],[-19.27,-53.898],[-20.743,-53.801],[-21.137,-53.702],[-21.529,-53.605],[-21.529,-52.423],[-22.979,-52.423],[-23.396,-52.618],[-23.749,-52.608],[-24.182,-52.618],[-24.678,-52.72],[-24.678,-53.115],[-25.163,-53.502],[-25.754,-53.412],[-25.754,-52.227],[-24.971,-51.936],[-25.361,-51.145],[-25.163,-50.753],[-25.163,-50.263],[-26.421,-50.166],[-26.835,-50.361],[-27.232,-50.463],[-27.625,-50.361],[-28.116,-50.361],[-28.509,-50.657],[-28.706,-51.049],[-29.493,-50.753],[-29.689,-50.753],[-29.884,-50.753],[-30.671,-50.463],[-31.064,-50.166],[-31.163,-49.772],[-30.965,-49.379],[-30.754,-49.366],[-30.573,-49.379],[-30.281,-48.985],[-29.884,-48.786],[-29.493,-48.593],[-28.986,-48.58],[-28.607,-48.593],[-28.214,-48.593],[-27.823,-48.296],[-27.428,-48.002],[-27.033,-47.805],[-26.738,-47.411],[-25.956,-46.72],[-25.956,-44.66],[-25.659,-44.267],[-25.267,-44.07],[-24.482,-43.674],[-24.182,-43.087],[-24.281,-42.497],[-24.482,-41.809],[-24.182,-40.43],[-24.182,-39.843],[-24.182,-39.251],[-25.267,-38.367],[-25.361,-37.974],[-25.754,-37.778],[-26.936,-37.288],[-27.331,-37.288],[-27.823,-37.482],[-28.509,-37.679],[-28.902,-37.778],[-29.884,-37.778],[-30.281,-38.073],[-30.671,-38.469],[-31.09,-38.563],[-34.579,-38.563],[-35.587,-38.661],[-36.081,-38.661],[-36.667,-39.056],[-36.866,-39.056],[-37.259,-38.856],[-37.259,-38.469],[-37.456,-38.073],[-39.423,-38.073],[-39.618,-37.679],[-39.327,-37.288],[-38.93,-36.991],[-38.833,-36.402],[-38.93,-35.81],[-39.227,-34.827],[-39.128,-34.141],[-38.93,-33.743],[-38.635,-33.331],[-38.635,-31.018],[-38.734,-30.598],[-39.128,-30.305],[-39.327,-29.911],[-39.815,-28.731],[-39.815,-28.339],[-39.52,-27.947],[-39.327,-27.549],[-39.03,-27.061],[-39.03,-26.668],[-39.03,-26.275],[-39.327,-25.88],[-39.423,-25.266],[-39.327,-24.307],[-38.168,-24.307],[-37.259,-24.505],[-36.866,-24.307],[-36.572,-23.916],[-35.982,-23.817],[-34.999,-24.114],[-34.603,-23.817],[-34.211,-23.621],[-33.818,-23.521],[-33.423,-23.326],[-33.132,-22.933],[-32.835,-22.539],[-32.736,-22.146],[-32.342,-21.85],[-32.146,-22.345],[-32.538,-22.439],[-32.146,-22.636],[-31.749,-22.636],[-31.359,-22.636],[-30.573,-22.832],[-30.18,-23.128],[-29.396,-23.721],[-29.003,-24.114],[-28.214,-24.406],[-27.833,-24.405],[-27.428,-24.406],[-27.033,-24.601],[-26.544,-24.798],[-25.956,-25.586],[-24.773,-26.473],[-23.986,-26.668],[-23.296,-26.673],[-22.708,-26.668],[-21.923,-26.764],[-21.923,-28.068],[-22.12,-28.437],[-22.512,-28.832],[-22.905,-29.224],[-22.809,-29.814],[-22.512,-30.203],[-22.02,-31.092],[-21.824,-31.484],[-21.63,-31.877],[-21.43,-32.27],[-21.201,-32.281],[-21.038,-32.27],[-20.251,-32.37],[-19.956,-32.762],[-19.66,-33.154],[-19.27,-33.253],[-19.072,-33.253],[-18.875,-33.253],[-18.579,-33.647],[-18.361,-33.652],[-18.185,-33.647],[-17.794,-33.843],[-17.12,-33.855],[-16.615,-33.843],[-15.827,-33.944],[-15.827,-35.122],[-15.827,-35.517],[-15.926,-36.3],[-15.852,-36.72],[-15.926,-37.482],[-15.732,-37.875],[-14.943,-38.171],[-14.352,-38.266],[-13.37,-38.073],[-13.173,-38.073],[-12.979,-38.073],[-11.796,-37.482],[-10.79,-37.383],[-10.224,-37.383],[-9.831,-37.482],[-9.438,-37.406],[-9.438,-38.073],[-9.339,-38.469],[-8.944,-38.762],[-8.65,-39.151],[-8.254,-39.151],[-7.862,-39.151],[-7.079,-39.151],[-6.688,-39.447],[-6.292,-39.744],[-5.897,-40.04],[-5.504,-40.43],[-5.115,-40.333],[-4.326,-39.941],[-3.638,-39.251],[-2.948,-38.073],[-2.852,-37.679],[-2.555,-37.288],[-2.26,-36.895],[-1.867,-36.697],[-1.473,-36.5],[-1.081,-36.3],[-0.689,-35.909],[-0.589,-35.517],[-0.1,-35.221],[0.195,-34.827],[0.59,-34.63],[0.986,-34.239],[1.378,-34.039],[1.772,-33.647],[2.262,-33.451],[3.046,-33.154],[3.264,-33.161],[3.54,-33.154],[3.934,-32.958],[4.13,-32.566],[5.112,-31.484],[5.51,-31.387],[5.898,-31.191],[6.293,-30.995],[6.785,-30.203],[7.57,-29.617],[7.764,-29.224],[7.867,-28.832],[7.961,-28.019],[7.867,-27.255],[5.898,-26.863],[5.605,-26.473],[5.211,-26.371],[4.424,-26.371],[3.906,-26.473],[1.184,-26.445],[1.283,-25.979],[2.065,-25.586],[2.458,-25.291],[2.654,-24.895],[2.85,-24.505],[3.245,-24.209],[3.465,-24.203],[3.639,-24.209],[4.449,-24.012],[6.785,-24.012],[6.785,-25.489],[7.276,-25.684],[8.06,-26.175],[8.456,-26.568],[8.658,-26.562],[8.846,-26.568],[8.945,-26.962],[9.142,-27.747],[9.242,-28.143],[9.634,-28.437],[9.854,-28.442],[10.029,-28.437],[10.715,-28.731],[10.815,-29.128],[10.715,-29.522],[10.715,-29.962],[10.225,-29.911],[9.438,-29.911],[9.044,-29.962],[9.044,-30.401],[9.142,-30.995],[10.694,-30.995],[11.504,-30.701],[11.893,-30.498],[12.289,-30.109],[12.684,-30.305],[12.19,-31.484],[12.19,-32.27],[11.603,-32.37],[11.408,-32.369],[11.21,-32.37],[10.815,-32.666],[10.421,-32.958],[10.029,-33.351],[9.634,-33.451],[9.242,-33.843],[9.048,-33.837],[8.846,-33.843],[8.555,-34.239],[8.456,-34.63],[8.24,-34.636],[8.06,-34.63],[7.858,-34.63],[7.667,-34.63],[7.276,-34.827],[6.882,-34.925],[6.686,-35.322],[6.293,-35.616],[6.076,-35.621],[5.898,-35.616],[5.51,-35.81],[5.311,-35.811],[5.112,-35.81],[5.112,-36.203],[5.409,-36.596],[5.307,-36.991],[5.014,-37.482],[4.621,-37.778],[3.443,-38.171],[3.245,-38.563],[3.048,-38.557],[2.85,-38.563],[2.753,-38.956],[2.753,-39.843],[1.866,-39.941],[0.986,-39.89],[0.986,-40.923],[1.378,-41.317],[1.772,-41.609],[1.772,-41.809],[1.671,-42.203],[1.283,-42.592],[1.573,-43.185],[2.165,-43.283],[2.753,-43.185],[3.143,-42.891],[3.245,-42.397],[3.443,-42.004],[3.641,-41.998],[3.835,-42.004],[4.227,-41.906],[4.621,-41.609],[4.915,-41.218],[5.307,-41.022],[5.529,-41.016],[5.704,-41.022],[6.098,-40.725],[6.391,-40.236],[6.686,-39.352],[6.889,-39.345],[7.079,-39.352],[7.867,-38.762],[8.258,-38.563],[8.555,-38.171],[9.438,-37.778],[9.707,-37.778],[10.225,-37.679],[10.32,-37.288],[10.616,-36.895],[11.01,-36.697],[11.797,-36.3],[12.98,-35.322],[13.764,-35.122],[14.159,-34.827],[14.255,-34.435],[14.549,-34.039],[14.354,-33.647],[13.958,-33.351],[13.958,-32.958],[13.862,-32.37],[13.958,-31.779],[14.648,-31.092],[14.549,-30.305],[15.043,-29.522],[15.236,-29.128],[15.471,-29.113],[15.633,-29.128],[16.023,-29.128],[16.811,-28.925],[16.811,-27.357],[15.828,-27.357],[15.828,-27.747],[15.436,-27.849],[15.043,-27.65],[15.138,-27.255],[15.436,-26.863],[16.023,-26.079],[16.415,-25.88],[16.811,-25.489],[17.206,-25.783],[17.303,-26.175],[17.698,-26.473],[17.797,-26.079],[17.893,-25.684],[18.681,-25.195],[18.579,-24.307],[18.579,-23.916],[19.074,-23.521],[19.957,-23.521],[20.353,-23.521],[20.747,-23.621],[20.939,-24.012],[21.333,-24.307],[21.333,-24.703],[21.333,-25.093],[21.137,-25.489],[21.434,-25.88],[21.824,-26.079],[22.217,-25.979],[22.612,-25.586],[23.027,-25.586],[23.398,-25.586],[23.888,-25.684],[23.888,-26.568],[23.987,-26.962],[23.938,-27.158],[24.773,-27.158],[25.168,-27.255],[24.876,-27.747],[24.484,-28.042],[24.087,-28.437],[23.595,-28.437],[23.691,-27.65],[23.595,-27.255],[23.103,-27.255],[22.71,-27.357],[22.413,-27.849],[22.023,-28.143],[22.023,-28.535],[21.928,-28.925],[21.824,-29.32],[21.632,-29.716],[21.236,-29.814],[21.02,-29.818],[20.842,-29.814],[20.449,-30.203],[20.056,-30.498],[20.056,-30.895],[20.056,-31.289],[20.353,-31.678],[20.747,-31.484],[21.137,-31.191],[21.533,-30.895],[22.315,-30.895],[22.71,-30.895],[23.103,-30.895],[23.495,-31.191],[23.202,-31.584],[22.807,-31.678],[23.103,-32.073],[23.495,-32.47],[24.384,-32.47],[25.267,-32.47],[25.66,-32.37],[26.052,-32.173],[26.445,-31.779],[26.618,-31.785],[26.837,-31.779],[27.232,-31.678],[27.333,-31.289],[27.333,-30.895],[27.721,-30.795],[28.115,-30.498],[28.017,-30.109],[27.626,-30.009],[27.232,-29.617],[27.626,-28.635],[28.411,-28.24],[28.708,-27.136],[28.609,-26.962],[28.708,-26.568],[28.609,-26.175],[28.609,-25.844],[28.755,-25.439],[29.048,-25.046],[29.198,-24.798],[29.344,-24.601],[29.544,-24.505],[29.689,-24.307],[29.934,-24.114],[30.133,-23.964],[30.332,-23.672],[30.281,-23.326],[30.083,-23.128],[29.987,-22.933],[29.889,-22.684],[29.889,-22.316],[29.934,-21.753],[30.035,-21.553],[30.23,-21.357],[30.428,-21.211],[30.82,-21.655],[30.868,-21.85],[30.967,-22.146],[31.016,-22.345],[31.016,-22.933],[30.967,-23.128],[31.016,-23.721],[31.361,-23.721],[31.557,-23.672],[31.755,-23.521],[31.905,-23.326],[32.1,-23.176],[32.54,-22.785],[32.738,-22.587],[32.936,-22.345],[33.082,-22.146],[33.281,-22.049],[33.475,-22.049],[33.868,-22.049],[34.259,-22.001],[34.456,-21.85],[34.876,-21.8],[35.096,-21.8],[35.293,-21.903],[35.488,-22.049],[35.441,-22.232],[35.488,-22.439],[35.392,-22.992],[35.441,-23.274],[35.635,-23.469],[35.737,-23.672],[36.031,-23.865],[36.547,-23.916],[37.109,-23.817],[37.311,-23.672],[37.656,-23.274],[37.85,-23.128],[38.243,-22.785],[38.538,-22.587],[38.685,-22.394],[38.883,-22.245],[39.079,-22.197],[39.337,-22.098],[42.004,-22.098],[41.98,-22.785],[41.98,-23.028],[41.928,-23.326],[42.004,-23.806],[42.324,-23.721],[42.52,-23.768],[42.719,-23.817],[43.01,-23.817],[43.699,-23.672],[43.993,-23.274],[44.19,-23.176],[44.612,-23.128],[44.828,-23.128],[45.027,-23.227],[45.128,-23.423],[45.324,-23.569],[45.52,-23.521],[45.665,-23.128],[45.861,-23.028],[45.911,-22.832],[45.911,-22.439],[45.861,-21.8],[45.714,-21.553],[45.467,-21.012],[45.37,-20.239],[45.37,-19.884],[45.467,-19.586],[45.566,-19.39],[45.616,-19.196],[45.812,-18.901],[45.861,-18.608],[45.812,-18.263],[45.616,-18.064],[45.422,-17.916],[45.324,-17.719],[45.324,-17.277],[45.224,-17.033],[45.076,-16.836],[44.732,-16.348],[44.582,-15.953],[44.141,-15.656],[43.897,-15.51],[43.699,-15.363],[43.501,-15.165],[43.456,-14.969],[43.405,-14.575],[43.061,-13.644],[42.911,-13.1],[42.57,-12.607],[42.372,-12.462],[42.176,-12.264],[41.98,-12.119],[41.781,-12.119],[41.579,-12.121],[41.336,-12.119],[40.945,-11.97],[40.749,-11.923],[40.622,-11.922],[40.505,-11.923],[40.307,-11.873],[40.113,-11.774],[39.865,-11.58],[39.522,-11.626],[39.326,-11.774],[38.883,-12.119],[38.685,-12.119],[38.389,-12.119],[38.046,-12.166],[37.753,-12.214],[37.26,-12.264],[37.013,-12.361],[36.794,-12.361],[36.572,-12.361],[36.324,-12.214],[36.767,-12.019],[37.408,-11.774],[38.046,-11.677],[38.438,-11.626],[38.438,-11.233],[38.438,-10.985],[38.732,-10.644],[38.831,-10.447],[38.883,-10.102],[38.857,-9.896],[38.883,-9.708],[38.831,-9.462],[38.831,-8.677],[39.126,-8.285],[39.816,-7.595],[40.01,-7.204],[40.21,-6.807],[40.505,-6.415],[40.801,-6.024],[41.19,-5.626],[41.586,-5.432],[42.027,-5.432],[42.473,-5.432],[42.863,-5.726],[42.863,-6.122],[43.255,-6.513],[43.456,-6.122],[44.339,-4.939],[44.536,-4.548],[44.928,-4.256],[45.324,-4.057],[45.616,-3.66],[45.714,-2.78],[45.812,-2.386],[46.108,-1.991],[46.796,-1.109],[47.188,-0.714],[47.29,-0.027],[47.29,0.169],[47.188,0.565],[47.385,1.843],[47.978,2.138],[48.367,2.333],[48.76,2.433],[49.156,2.725],[49.354,3.117],[49.547,3.514],[50.333,4.396],[50.728,5.185],[51.122,5.97],[51.516,7.2],[51.516,7.64],[51.22,8.037],[51.22,8.429],[51.419,9.218],[51.809,9.509],[52.204,9.707],[52.596,10.101],[53.385,10.788],[53.775,11.084],[53.973,11.475],[54.365,11.869],[54.758,12.753],[55.053,13.243],[55.544,13.638],[56.333,14.817],[57.513,16],[57.71,16.392],[58.001,16.882],[58.199,17.277],[58.199,18.06],[58.199,18.456],[58.397,18.848],[58.888,19.662],[58.888,23.051],[59.871,24.06],[60.656,24.647],[61.445,24.647],[62.626,24.553],[63.018,24.158],[63.508,23.374],[64.298,22.882],[64.715,22.782],[67.118,22.782],[67.539,23.077],[67.738,23.078],[67.932,23.077],[68.329,22.29],[68.621,21.899],[69.115,21.604],[69.507,21.208],[70.682,21.013],[71.077,20.711],[71.482,20.709],[71.868,20.711],[72.257,20.421],[72.652,20.421],[73.436,20.324],[73.832,19.93],[74.225,19.538],[74.62,19.145],[75.009,19.145],[76.191,19.145],[76.191,18.456],[76.191,18.06],[76.484,17.67],[76.688,17.664],[76.879,17.67],[77.273,17.374],[77.665,17.277],[78.059,17.085],[78.453,17.085],[78.846,16.981],[81.599,17.085],[81.599,16.49],[81.698,16.097],[81.698,15.708],[82.188,14.915],[84.157,14.915],[84.251,14.523],[84.451,14.131],[84.743,13.341],[85.135,13],[85.529,13.049],[85.924,13.049],[86.316,13],[86.514,12.26],[86.71,11.869],[86.71,11.475],[87.005,11.084],[87.203,10.691],[87.793,10.392],[87.988,10.392],[88.28,10.788],[88.674,10.886],[88.674,9.707],[88.973,8.429],[89.072,7.939],[89.169,7.546],[89.561,7.444],[89.751,7.446],[89.954,7.444],[90.742,7.151],[90.544,6.268],[90.152,5.874],[89.977,5.88],[89.757,5.874],[89.365,5.674],[88.973,5.478],[88.973,5.088],[88.87,4.591],[88.674,4.2],[88.28,3.81],[87.497,3.514],[87.105,3.514],[86.71,3.318],[86.71,2.92],[87.005,2.138],[86.904,1.744],[86.514,1.549],[86.096,1.353],[85.333,1.353],[85.333,2.239],[84.743,2.92],[84.548,2.038],[84.548,1.644],[84.157,1.448],[83.861,1.055],[83.861,-0.913],[83.565,-1.305],[83.172,-1.599],[82.971,-1.203],[82.579,-1.01],[82.188,-0.812],[81.698,-0.027],[81.698,1.156],[81.599,1.939],[80.811,1.843],[79.928,1.843],[79.536,1.843],[79.042,1.644],[78.306,1.448],[78.059,1.448],[77.665,1.744],[77.273,1.939],[76.879,2.333],[76.484,2.725],[75.703,2.433],[75.302,2.038],[74.913,1.644],[74.913,1.253],[74.913,0.861],[75.302,0.758],[76.29,0.37],[76.484,0.37],[77.074,0.665],[77.714,0.665],[78.353,0.665],[78.749,0.466],[78.749,0.074],[78.353,-0.223],[77.96,-0.223],[77.197,-0.125],[76.78,-0.125],[76.387,-0.223],[75.994,-0.223],[75.009,-0.613],[74.339,-0.615],[73.733,-0.613],[73.341,-0.714],[72.849,-0.714],[72.849,-2.679],[72.553,-3.072],[72.161,-3.174],[71.766,-3.565],[71.374,-3.66],[70.98,-3.66],[70.586,-3.861],[69.999,-4.057],[69.999,-4.548],[69.999,-5.334],[69.507,-6.122],[69.115,-6.513],[69.115,-6.908],[69.115,-7.3],[68.918,-7.791],[68.918,-8.432],[68.918,-9.07],[69.115,-9.462],[69.507,-9.856],[70.096,-9.856],[71.077,-9.759],[72.161,-8.777],[72.553,-8.48],[73.244,-7.696],[73.632,-7.3],[74.225,-6.122],[74.62,-5.726],[75.801,-5.136],[76.584,-4.451],[77.37,-3.861],[78.156,-3.369],[78.664,-3.356],[79.042,-3.369],[79.432,-3.268],[80.958,-3.072],[81.203,-3.072],[81.599,-3.072],[81.992,-3.268],[82.391,-3.268],[82.777,-3.268],[83.172,-3.465],[83.565,-3.465],[84.35,-3.369],[84.743,-3.072],[85.333,-2.386],[85.333,-1.991],[85.432,-1.599],[85.629,-1.203],[86.023,-1.01],[86.538,-0.913],[88.555,-0.913],[88.973,-1.01],[89.465,-1.01],[89.855,-0.714],[90.053,-0.321],[90.448,-0.125],[90.964,0.074],[92.979,0.074],[93.814,0.37],[97.132,0.37],[99.587,-0.027],[101.826,-0.027],[102.641,0.565],[103.027,0.861],[103.424,1.156],[103.915,1.939],[104.31,2.239],[104.703,2.333],[105.098,2.629],[105.292,3.024],[105.391,3.81],[105.65,3.824],[106.077,3.909],[106.273,4.299],[106.57,4.692],[106.962,4.692],[107.354,4.692],[108.142,4.791],[108.536,4.989],[108.927,5.088],[109.816,5.478],[108.633,5.478],[107.846,5.674],[107.454,5.874],[107.454,6.268],[107.648,6.662],[108.046,6.759],[108.436,6.856],[108.73,7.25],[109.026,7.64],[109.816,8.331],[110.305,8.624],[110.699,9.018],[111.092,9.018],[111.485,9.018],[111.878,8.726],[112.176,8.331],[112.957,8.135],[113.254,7.64],[113.647,7.25],[114.629,7.64],[114.827,8.037],[115.025,9.018],[115.123,9.804],[115.517,10.691],[115.613,11.084],[115.613,11.915],[115.613,12.753],[115.517,13.243],[115.517,14.62],[115.517,15.015],[115.808,15.804],[115.91,16.196],[115.91,17.473],[116.499,18.259],[116.796,18.651],[117.186,19.043],[117.482,19.434],[117.482,19.833],[117.678,20.711],[117.775,21.109],[118.071,21.505],[118.267,21.994],[118.267,22.39],[118.464,22.782],[118.66,23.175],[119.051,23.568],[119.249,23.964],[119.644,24.354],[119.746,25.14],[119.746,25.532],[119.644,26.323],[120.04,27.699],[120.431,28.092],[120.626,28.484],[120.921,28.876],[121.806,30.644],[122.396,31.827],[122.495,32.221],[122.691,32.611],[123.082,32.907],[123.673,33.302],[124.267,33.204],[124.658,32.907],[124.756,32.514],[124.949,32.121],[125.641,30.939],[125.839,30.547],[126.022,30.548],[126.23,30.547],[126.621,30.448],[127.021,30.055],[127.413,29.759],[127.511,29.37],[127.704,28.979],[128.098,28.288],[128.001,27.303],[128.296,26.91],[128.589,26.125],[128.788,25.338],[128.788,24.553],[128.691,23.764],[128.788,23.397],[128.788,21.208],[128.691,19.515],[128.887,19.145],[129.079,18.752],[130.259,18.651],[131.441,18.456],[131.736,17.67],[131.931,17.277],[132.322,16.882],[132.72,16.783],[133.113,16.686],[133.507,16.392],[133.801,16],[134.191,15.804],[134.589,15.708],[134.879,15.309],[135.274,14.523],[135.668,14.131],[135.962,13.738],[136.259,13.341],[137.043,12.949],[137.339,12.56],[137.538,12.166],[137.733,11.77],[137.957,11.76],[138.124,11.77],[138.298,11.776],[138.52,11.77],[138.913,11.475],[138.913,11.084],[139.6,10.493],[139.993,10.493],[140.251,10.489],[140.783,10.392],[141.072,10],[141.371,8.429],[141.467,7.64],[143.311,7.64],[143.728,7.84],[144.319,7.939],[144.517,7.939],[144.91,7.64],[145.103,7.642],[145.301,7.64],[145.696,7.25],[146.092,7.151],[146.483,6.856],[146.683,6.461],[148.646,6.461],[148.646,5.281],[149.334,5.385],[149.501,5.366],[149.727,5.385],[150.019,5.772],[150.116,6.167],[150.316,6.559],[150.712,6.759],[150.905,7.151],[151.199,8.037],[151.103,8.798],[151.298,9.218],[151.498,9.61],[151.889,9.804],[151.99,10.199],[152.774,10.788],[153.168,11.084],[153.464,11.475],[153.758,11.869],[153.758,12.26],[153.66,12.655],[153.658,13.441],[153.66,13.441],[154.447,13.341],[154.838,13.538],[155.233,13.638],[155.233,14.033],[155.134,14.817],[154.939,15.211],[154.838,16.392],[155.233,17.964],[155.626,18.259],[156.021,18.556],[156.806,18.556],[157.197,18.556],[157.594,18.556],[157.788,18.16],[158.184,18.06],[158.576,17.867],[159.462,17.67],[159.462,17.277],[159.462,16.882],[159.756,16.49],[160.938,16.981],[161.132,17.374],[161.329,17.767],[161.624,18.556],[161.92,19.833],[162.016,20.225],[162.309,20.619],[162.704,20.815],[162.803,21.208],[162.113,22.583],[162.309,22.979],[162.507,23.374],[162.899,23.667],[163.493,24.453],[163.886,24.749],[164.081,25.338],[163.886,26.125],[164.176,26.91],[163.59,27.796],[163.196,27.991],[162.803,28.092],[162.607,28.484],[162.507,28.876],[162.507,30.055],[162.507,30.448],[162.309,31.235],[162.309,31.878],[162.408,32.907],[162.704,33.302],[163.098,33.5],[163.493,33.596],[164.176,34.384],[164.965,35.069],[165.36,35.167],[165.654,35.56],[165.947,35.956],[165.947,36.843],[166.145,37.626],[166.639,38.412],[166.735,38.904],[167.126,39.297],[167.421,40.208],[167.421,42.323],[167.618,42.738],[167.719,43.228],[168.012,43.622],[168.405,44.019],[168.801,44.213],[170.077,45],[170.865,45.294],[171.358,46.08],[171.553,46.472],[171.947,46.574],[172.339,46.672],[172.831,46.868],[173.517,47.064],[173.712,47.064],[174.11,46.772],[173.613,45.978],[173.42,45.588],[173.027,45.492],[172.537,44.707],[172.537,43.818],[172.436,43.426],[172.436,42.252],[172.339,41.853],[172.142,41.456],[171.749,41.064],[171.749,39.885],[171.749,39.495],[171.65,39.102],[171.65,38.708],[171.553,38.217],[171.553,37.431],[170.373,37.33],[169.98,37.038],[169.684,36.645],[169.29,36.447],[168.897,36.052],[168.111,35.756],[167.9,35.764],[167.618,35.756],[166.933,35.167],[166.639,34.775],[166.538,34.384],[166.538,33.596],[166.538,33.204],[166.441,32.809],[166.045,32.611],[165.654,32.415],[165.559,31.631],[165.559,31.235],[165.559,30.842],[165.162,30.744],[164.771,30.547],[164.473,30.448],[164.473,28.457],[165.261,27.205],[165.847,26.028],[166.045,25.436],[165.847,24.647],[165.947,24.06],[166.343,23.764],[166.639,23.273],[167.029,23.374],[167.421,23.667],[167.618,24.06],[168.012,24.354],[168.212,25.14],[168.602,25.436],[169.191,25.633],[169.392,25.633],[169.785,25.436],[170.175,25.235],[170.764,25.929],[171.358,26.713],[171.65,27.597],[172.043,28.383],[172.537,29.172],[173.223,29.858],[173.449,29.866],[173.613,29.858],[174.009,29.96],[174.405,30.055],[174.795,30.154],[175.094,30.547],[174.699,31.331],[174.6,32.121],[175.189,33.792],[175.485,33.399],[176.17,32.611],[176.567,32.318],[176.96,31.927],[177.451,31.531],[177.842,31.235],[178.04,30.842],[178.335,30.448],[178.434,30.055],[178.532,29.662],[178.925,29.269],[179.517,29.37],[180.301,29.37],[180.79,29.075],[181.678,28.185],[182.171,27.796],[182.564,27.699],[182.956,27.402],[183.055,27.009],[183.154,26.223],[183.154,24.303],[183.154,22.882],[183.154,21.994],[182.564,20.711],[182.363,19.833],[182.363,18.948],[181.386,18.948],[180.991,18.752],[180.693,18.356],[180.107,17.473],[180.107,17.085],[179.712,16.981],[179.318,16.686],[178.532,16.097],[178.04,15.804],[177.842,15.412],[177.451,15.112],[177.35,14.327],[177.35,13.934],[176.96,13.638],[176.96,13],[176.96,12.36],[177.056,11.869],[177.451,11.574],[177.842,11.281],[178.236,11.084],[178.236,10.588],[178.335,10.101],[178.532,9.509],[178.631,9.018],[178.925,8.525],[179.318,8.429],[179.592,8.417],[179.809,8.429],[180.693,8.037],[180.891,8.037],[181.087,8.037],[181.386,7.64],[181.777,7.64],[182.587,7.64],[182.956,7.741],[184.137,7.668],[184.137,8.135],[184.04,8.525],[184.04,10.691],[183.743,11.084],[183.35,11.281],[183.154,11.281],[182.956,11.281],[182.564,11.574],[182.269,11.967],[181.874,12.56],[181.975,13.148],[182.072,13.638],[182.467,13.837],[185.609,13.837],[185.809,12.46],[185.905,12.065],[186.201,11.673],[186.201,11.231],[186.201,10.788],[185.462,10.493],[185.462,8.135],[186.298,8.135],[186.693,8.135],[187.087,7.939],[187.478,7.546],[187.873,7.25],[188.655,7.051],[189.491,6.956],[189.939,6.956],[190.332,7.051],[191.113,7.151],[191.508,7.151],[191.902,6.956],[192.197,6.559],[192.395,6.268],[193.18,6.167],[193.572,5.97],[193.957,5.97],[194.361,5.97],[194.754,5.874],[194.926,5.88],[195.147,5.874],[195.443,5.478],[195.835,5.185],[196.228,5.088],[196.62,4.791],[197.012,4.591],[197.213,4.2],[197.509,3.81],[197.902,3.514],[198.29,3.221],[198.686,3.221],[198.887,3.221],[199.079,3.221],[199.866,2.725],[200.064,2.333],[200.457,2.138],[200.848,1.744],[201.145,1.353],[201.438,0.958],[201.537,0.565],[201.734,0.169],[202.519,-0.613],[203.11,-1.794],[203.209,-2.187],[203.602,-2.586],[203.895,-2.977],[204.391,-3.369],[204.879,-3.66],[205.176,-4.057],[205.274,-4.548],[205.467,-5.039],[205.467,-5.432],[205.566,-5.828],[205.668,-6.217],[206.158,-6.513],[206.844,-7.3],[207.338,-8.381],[207.139,-8.971],[206.844,-9.366],[206.615,-9.377],[206.452,-9.366],[205.615,-9.462],[205.566,-10.25],[205.668,-10.644],[205.615,-11.034],[206.354,-11.034],[206.354,-11.432],[206.061,-11.822],[206.061,-13.001],[206.061,-13.396],[205.668,-13.789],[205.274,-14.084],[205.371,-15.263],[205.077,-16.444],[204.483,-17.231],[203.701,-18.113],[203.306,-18.409],[203.069,-18.402],[202.816,-18.409],[202.421,-18.707],[202.421,-19.1],[202.421,-19.492],[202.616,-19.884],[203.011,-20.276],[203.405,-20.571],[203.405,-21.357],[203.405,-22.146],[204.483,-22.146],[204.879,-22.439],[205.176,-22.832],[205.371,-23.227],[205.598,-23.238],[205.762,-23.227],[206.158,-23.227],[206.55,-23.423],[206.944,-23.423],[208.124,-23.423],[208.223,-24.406],[208.124,-24.749],[206.158,-24.749],[205.96,-25.093],[205.371,-25.88],[203.895,-25.88],[203.798,-25.093],[203.798,-24.703],[203.602,-24.355],[203.209,-24.307],[202.816,-24.406],[202.374,-24.355],[202.374,-26.568],[199.889,-26.568],[199.176,-27.405],[199.277,-28.042],[199.569,-28.437],[199.965,-28.832],[200.358,-28.925],[201.537,-28.925],[201.931,-28.925],[202.324,-29.027],[202.324,-29.421],[202.616,-29.814],[202.91,-30.203],[203.405,-30.305],[203.798,-30.498],[204.251,-30.508],[204.587,-30.498],[204.978,-30.498],[205.274,-30.895],[205.668,-31.289],[205.96,-31.678],[206.452,-32.073],[206.944,-32.47],[207.139,-32.47],[207.536,-32.27],[207.634,-31.877],[207.338,-31.484],[206.944,-31.191],[206.844,-30.401],[206.158,-29.617],[205.861,-29.224],[205.467,-28.925],[205.371,-28.535],[205.467,-28.143],[205.861,-28.339],[206.158,-28.731],[208.098,-28.731],[208.616,-29.027],[209.303,-29.716],[209.598,-30.109],[209.99,-30.203],[210.386,-30.401],[211.566,-30.009],[211.754,-30.01],[211.958,-30.009],[212.746,-29.716],[213.137,-29.522],[213.334,-28.731],[213.334,-28.339],[213.137,-27.947],[212.746,-27.549],[212.746,-27.158],[212.352,-26.568],[212.452,-25.684],[213.238,-25.684],[213.629,-25.88],[214.121,-26.175],[214.512,-26.079],[215.204,-25.391],[215.301,-24.999],[215.499,-24.209],[215.598,-23.817],[215.792,-23.423],[216.186,-22.907],[216.186,-20.791],[215.792,-20.276],[215.4,-19.983],[215.301,-19.586],[215.204,-19.172],[215.204,-18.018],[217.342,-18.018],[218.545,-18.707],[218.939,-18.901],[219.43,-19.196],[219.92,-19.586],[220.314,-19.687],[220.709,-19.884],[221.102,-20.179],[221.34,-20.174],[221.592,-20.179],[221.988,-20.474],[221.988,-20.867],[221.988,-21.655],[222.085,-22.146],[222.184,-22.514],[222.184,-23.721],[221.197,-23.916],[220.902,-24.406],[220.902,-25.291],[220.902,-25.684],[220.512,-25.88],[220.116,-26.175],[219.819,-26.568],[219.43,-26.764],[219.037,-27.061],[218.939,-27.451],[218.642,-27.849],[218.642,-28.437],[218.741,-29.522],[219.037,-29.911],[219.23,-30.305],[219.332,-30.701],[219.546,-30.71],[219.723,-30.701],[220.61,-30.895],[221.006,-30.895],[221.787,-30.995],[221.787,-34.457],[221.889,-34.827],[221.988,-35.221],[222.283,-35.616],[222.465,-35.615],[222.676,-35.616],[223.066,-35.81],[223.855,-36.697],[224.15,-37.089],[224.832,-37.778],[225.228,-37.778],[225.626,-37.778],[227.196,-36.792],[227.587,-36.697],[228.379,-36.991],[228.767,-37.188],[229.061,-37.582],[229.456,-37.875],[229.665,-37.88],[229.853,-37.875],[230.146,-38.266],[230.585,-38.279],[230.931,-38.266],[231.326,-38.469],[231.719,-38.563],[232.111,-38.856],[232.111,-39.251],[233.095,-40.04],[233.488,-40.236],[233.681,-40.629],[234.077,-40.923],[235.157,-42.203],[235.551,-42.497],[236.144,-43.283],[236.238,-43.674],[236.533,-44.07],[236.633,-44.461],[236.928,-45.249],[237.225,-45.642],[238.009,-46.429],[238.405,-46.622],[238.6,-47.017],[238.809,-47.023],[238.995,-47.017],[239.684,-47.805],[240.074,-48.1],[240.27,-48.493],[240.663,-48.887],[241.055,-49.281],[241.451,-49.572],[241.451,-50.361],[241.551,-50.753],[241.551,-51.542],[241.551,-51.936],[241.842,-52.327],[242.139,-52.72],[242.238,-53.801],[242.238,-54.488],[242.139,-54.883],[242.139,-55.276],[242.139,-55.665],[242.431,-56.062],[242.431,-56.457],[242.629,-57.246],[243.027,-57.635],[243.223,-58.028],[243.517,-58.421],[243.908,-58.323],[244.107,-57.93],[244.496,-57.832],[244.894,-57.536],[245.184,-57.143],[245.092,-56.751],[244.894,-56.357],[244.793,-55.768],[245.092,-54.783],[245.092,-53.061],[245.092,-51.739],[245.092,-51.344],[244.793,-50.952],[244.4,-50.657],[244.4,-50.067],[244.4,-49.474],[244.793,-48.296],[245.092,-47.313],[244.993,-46.72],[244.598,-46.429],[244.204,-46.133],[244.254,-45.518],[244.204,-44.953],[244.301,-44.461],[244.254,-44.07],[244.993,-44.07],[245.383,-44.267],[245.482,-44.66],[245.678,-45.052],[245.973,-45.442],[246.168,-45.841],[246.568,-45.642],[246.568,-44.855],[246.954,-44.562],[248.134,-44.267],[248.134,-44.66],[247.936,-45.052],[247.84,-45.442],[247.548,-45.841],[247.055,-46.133],[246.858,-46.527],[246.464,-46.824],[246.271,-47.707],[245.973,-48.1],[245.678,-48.887],[246.366,-49.674],[246.66,-50.067],[246.66,-50.558],[246.66,-50.952],[247.055,-51.145],[247.251,-51.542],[247.548,-51.936],[248.332,-51.638],[249.118,-51.049],[249.512,-51.344],[249.512,-51.739],[249.316,-52.128],[249.316,-52.523],[249.02,-53.309],[249.02,-53.702],[248.923,-54.194],[248.628,-54.587],[248.628,-55.768],[248.628,-56.161],[248.332,-56.554],[248.134,-56.943],[247.447,-57.734],[247.251,-58.129],[247.35,-58.497],[247.251,-58.911],[247.35,-59.307],[247.35,-59.7],[247.447,-60.192],[247.35,-60.611],[247.447,-60.977],[247.251,-61.369],[247.051,-61.422],[246.858,-61.468],[246.761,-62.255],[246.568,-63.041],[246.568,-63.926],[246.464,-64.714],[245.678,-64.714],[245.678,-61.863],[244.993,-61.863],[244.598,-61.666],[244.598,-61.272],[244.696,-60.882],[244.696,-60.485],[244.894,-60.091],[244.894,-59.307],[244.204,-59.307],[244.012,-59.335],[243.813,-59.406],[243.615,-59.796],[243.714,-60.192],[243.813,-60.587],[243.908,-61.369],[243.908,-61.763],[243.615,-62.159],[243.223,-62.551],[242.824,-62.845],[242.623,-62.845],[242.431,-62.845],[241.941,-63.14],[241.746,-63.535],[241.353,-63.633],[240.173,-64.714],[238.995,-64.714],[238.995,-62.746],[237.324,-62.746],[237.324,-63.14],[237.126,-63.535],[236.34,-64.814],[235.848,-64.714],[235.947,-64.319],[235.947,-63.535],[235.848,-63.14],[235.598,-63.14],[235.355,-63.14],[234.96,-63.337],[234.96,-63.733],[235.061,-64.122],[235.254,-64.714],[234.569,-65.598],[234.178,-65.206],[233.783,-65.011],[233.34,-65.011],[232.897,-65.011],[232.504,-65.206],[232.6,-65.992],[232.897,-66.384],[233.194,-66.778],[233.408,-66.783],[233.585,-66.778],[234.373,-67.073],[234.865,-67.267],[235.157,-67.66],[235.551,-68.155],[236.043,-68.646],[236.436,-68.745],[236.829,-68.94],[237.616,-68.94],[237.712,-70.415],[237.912,-70.811],[238.306,-71.105],[238.699,-71.301],[238.894,-71.694],[239.092,-72.185],[239.486,-72.379],[239.876,-72.578],[240.173,-72.97],[240.663,-73.266],[240.858,-73.659],[241.257,-73.76],[241.459,-73.759],[241.65,-73.76],[241.842,-74.152],[242.043,-74.545],[242.139,-74.939],[242.332,-75.33],[242.629,-75.721],[242.824,-76.12],[243.615,-76.509],[244.035,-76.504],[244.496,-76.509],[245.283,-77.005],[245.579,-77.398],[245.973,-77.884],[246.761,-78.379],[247.772,-78.182],[247.936,-78.083],[248.9,-78.279],[249.118,-78.279],[249.512,-78.083],[249.907,-78.083],[250.3,-78.083],[250.887,-78.379],[251.085,-78.379],[251.477,-78.182],[252.462,-77.79],[253.051,-77.884],[253.47,-78.083],[258.358,-78.083],[258.358,-78.871],[258.556,-79.753],[258.949,-80.053],[259.444,-79.656],[260.033,-79.36],[260.816,-79.557],[261.408,-79.36],[261.803,-78.967],[262.196,-78.871],[262.587,-78.575],[262.488,-78.182],[262.098,-77.79],[262.293,-77.101],[262.712,-77.005],[264.629,-77.005],[265.439,-77.593],[265.733,-77.986],[266.126,-78.379],[267.11,-77.491],[267.504,-77.2],[267.504,-77.593],[267.699,-77.986],[268.095,-77.884],[268.512,-77.593],[269.668,-77.593],[269.668,-77.986],[269.374,-78.379],[269.272,-78.724],[268.483,-78.675],[268.095,-78.724],[268.095,-79.78],[268.683,-80.443],[268.889,-80.443],[269.077,-80.443],[269.374,-80.834],[269.571,-81.231],[269.863,-81.621],[270.158,-82.015],[270.551,-82.41],[270.723,-82.403],[270.941,-82.41],[271.337,-82.605],[271.633,-83.098],[272.42,-84.08],[273.503,-85.161],[274.483,-85.554],[275.072,-85.459],[275.662,-85.259],[275.858,-85.259],[276.251,-85.459],[276.646,-85.85],[276.848,-85.85],[277.136,-85.459],[277.433,-85.061],[277.826,-84.965],[278.029,-84.963],[278.22,-84.965],[278.613,-84.671],[278.22,-84.08],[278.22,-83.884],[278.415,-83.488],[278.806,-83.294],[278.806,-82.899],[278.806,-82.115],[279.402,-82.015],[279.795,-82.21],[280.09,-82.605],[280.973,-83.194],[281.366,-83.294],[281.754,-83.589],[282.051,-83.985],[282.447,-84.375],[282.743,-84.768],[283.529,-84.867],[283.691,-84.855],[283.92,-84.867],[284.118,-85.259],[284.314,-85.654],[284.511,-86.048],[284.511,-86.833],[284.71,-87.619],[285.496,-87.619],[286.305,-87.913],[288.245,-87.913],[288.245,-87.325],[287.855,-87.027],[287.068,-86.636],[286.673,-86.44],[286.28,-86.048],[286.085,-85.654],[285.986,-85.259],[285.986,-84.867],[285.887,-84.473],[285.496,-83.589],[285.396,-83.194],[285.298,-82.806],[285.003,-82.41],[284.608,-82.309],[284.118,-82.115],[283.725,-82.015],[283.624,-81.621],[283.529,-81.231],[282.743,-80.639],[281.564,-79.753],[280.285,-78.967],[279.103,-78.083],[278.123,-76.903],[277.826,-76.509],[277.04,-76.017],[276.944,-75.627],[276.548,-75.233],[276.35,-75.232],[276.154,-75.233],[275.908,-75.232],[275.662,-75.233],[275.272,-75.037],[274.876,-74.939],[273.993,-74.545],[273.598,-74.349],[273.423,-74.354],[273.202,-74.349],[272.814,-74.152],[272.517,-73.76],[272.814,-73.167],[272.613,-72.088],[272.223,-71.694],[271.827,-71.4],[271.73,-71.004],[271.434,-70.513],[271.434,-70.022],[271.434,-69.236],[270.941,-68.449],[270.941,-67.562],[270.845,-66.778],[271.142,-62.551],[271.142,-61.959],[270.748,-61.565],[271.777,-59.895],[271.777,-56.751],[272.223,-56.554],[272.613,-56.85],[273.007,-56.943],[273.402,-57.143],[273.796,-57.246],[274.483,-57.246],[274.483,-58.421],[274.483,-58.816],[274.775,-59.208],[275.173,-59.406],[275.465,-59.796],[275.762,-60.192],[275.957,-60.587],[276.154,-60.977],[276.646,-61.369],[276.848,-61.369],[277.236,-61.176],[277.626,-61.176],[278.022,-61.176],[278.318,-61.565],[278.516,-61.938],[278.516,-63.926],[279.202,-64.714],[279.595,-65.011],[282.447,-65.011],[282.447,-66.116],[282.051,-66.876],[281.754,-67.267],[281.754,-67.66],[281.754,-68.058],[282.051,-68.449],[282.447,-68.94],[282.642,-69.333],[283.035,-69.727],[283.624,-69.63],[283.725,-69.236],[284.118,-68.94],[284.905,-68.94],[285.003,-69.727],[284.71,-70.119],[284.017,-70.811],[284.017,-71.204],[284.017,-71.597],[283.821,-71.989],[283.725,-72.824],[283.725,-73.266],[284.118,-73.366],[284.511,-73.56],[284.511,-73.953],[284.217,-74.349],[284.04,-74.354],[283.821,-74.349],[283.504,-73.953],[282.743,-73.953],[282.743,-74.838],[283.136,-75.627],[283.232,-76.017],[283.529,-76.411],[284.314,-76.804],[284.608,-77.2],[284.71,-77.593],[284.905,-77.986],[285.003,-78.379],[285.003,-79.263],[285.102,-79.656],[285.197,-80.053],[285.496,-80.443],[285.887,-80.542],[286.28,-80.639],[287.068,-80.245],[287.267,-79.853],[287.855,-79.557],[288.447,-79.753],[288.74,-80.149],[289.035,-80.542],[289.425,-80.736],[289.819,-80.443],[289.819,-80.053],[290.115,-79.656],[290.313,-79.656],[290.508,-79.656],[290.9,-79.954],[291.296,-80.245],[291.884,-81.03],[292.178,-81.427],[292.769,-81.427],[293.36,-81.427],[293.749,-81.328],[294.168,-81.231],[296.996,-81.231],[296.996,-80.443],[296.996,-80.053],[297.589,-79.36],[297.796,-79.354],[297.98,-79.36],[298.373,-80.937],[298.767,-81.132],[299.157,-81.427],[299.454,-81.82],[300.046,-82.703],[300.441,-83.194],[300.73,-83.589],[301.517,-83.783],[302.008,-83.985],[302.503,-83.985],[303.387,-83.985],[303.78,-84.18],[304.569,-84.473],[305.059,-84.671],[305.254,-85.061],[305.647,-85.459],[306.04,-85.554],[307.22,-86.34],[307.73,-86.352],[308.107,-86.34],[308.595,-86.539],[309.09,-86.731],[309.874,-87.619],[310.269,-87.913],[311.053,-87.913],[312.236,-87.817],[312.629,-87.523],[313.022,-87.129],[313.415,-87.027],[314.421,-86.933],[314.991,-86.933],[315.478,-87.027],[315.478,-88.209],[315.085,-88.503],[314.691,-88.8],[314.594,-89.191],[314.397,-89.584],[314.103,-89.98],[313.809,-90.373],[313.71,-90.766],[313.61,-91.944],[312.527,-92.143],[312.332,-92.534],[312.236,-92.926],[312.038,-93.321],[311.521,-93.421],[309.603,-93.421],[309.09,-93.519],[308.99,-93.911],[309.287,-94.306],[309.68,-94.404],[310.069,-94.795],[310.467,-94.795],[310.86,-94.795],[311.67,-94.203],[314.079,-94.203],[314.892,-94.306],[315.676,-94.306],[316.363,-94.993],[316.758,-95.384],[317.152,-95.585],[317.152,-96.174],[317.152,-96.763],[316.949,-96.82],[316.758,-96.862],[316.658,-97.231],[316.658,-98.43],[317.62,-98.533],[318.623,-97.746],[318.623,-97.352],[318.824,-96.957],[319.41,-96.174],[322.533,-96.174],[323.048,-96.074],[323.54,-95.877],[323.931,-95.585],[323.931,-94.404],[325.777,-94.404],[326.587,-94.01],[326.884,-93.615],[327.671,-93.126],[328.163,-92.926],[328.749,-92.632],[328.947,-92.632],[329.342,-92.926],[329.241,-93.321],[329.241,-94.108],[329.342,-94.5],[329.733,-94.5],[330.42,-94.597],[330.42,-95.779],[330.324,-96.174],[330.324,-96.566],[330.42,-96.957],[330.814,-97.152],[331.6,-96.566],[331.996,-96.27],[332.392,-96.27],[332.782,-96.27],[333.175,-96.469],[333.47,-96.862],[333.866,-97.152],[334.063,-97.546],[334.249,-97.546],[334.454,-97.546],[334.845,-97.844],[335.238,-98.042],[335.337,-98.43],[334.749,-99.025],[334.355,-99.222],[334.021,-99.236],[333.569,-99.32],[333.47,-99.708],[333.175,-100.104],[332.782,-100.4],[331.897,-100.598],[331.504,-100.598],[330.863,-100.4],[329.733,-100.598],[329.342,-100.598],[329.118,-100.595],[328.85,-100.598],[328.457,-100.894],[328.064,-101.284],[327.62,-101.284],[327.178,-101.284],[326.785,-100.993],[327.079,-100.598],[327.285,-100.597],[327.472,-100.598],[327.865,-100.4],[327.865,-99.811],[327.865,-99.613],[327.865,-99.222],[327.225,-98.923],[326.293,-99.613],[326.197,-99.983],[326.197,-102.386],[325.9,-102.76],[325.41,-102.954],[325.014,-103.148],[324.623,-103.148],[324.228,-103.252],[323.344,-103.349],[322.951,-103.741],[322.559,-103.839],[322.066,-104.035],[321.378,-104.334],[320.887,-104.727],[320.493,-105.119],[320.395,-105.512],[319.999,-105.609],[319.512,-105.709],[318.623,-105.808],[318.233,-105.903],[317.348,-105.903],[317.152,-106.987],[315.972,-107.773],[315.478,-108.265],[314.691,-108.462],[314.262,-108.46],[313.809,-108.462],[313.415,-108.658],[312.92,-108.853],[312.527,-109.247],[312.332,-109.246],[312.137,-109.247],[311.741,-109.443],[311.35,-109.443],[310.957,-109.443],[310.566,-109.642],[310.069,-109.835],[309.09,-110.23],[308.694,-110.525],[307.415,-110.525],[306.925,-110.525],[306.533,-110.326],[306.04,-109.936],[305.451,-109.835],[304.368,-110.034],[303.978,-110.034],[303.483,-110.131],[303.094,-110.525],[302.894,-110.525],[302.699,-110.525],[301.814,-110.82],[301.027,-111.313],[300.634,-111.41],[300.046,-111.41],[299.454,-111.41],[299.061,-111.214],[298.668,-110.92],[298.767,-110.525],[298.47,-110.131],[298.277,-109.738],[297.883,-109.346],[298.277,-109.247],[298.668,-108.951],[299.061,-108.757],[299.258,-107.968],[299.258,-107.577],[298.866,-107.183],[298.668,-106.79],[298.251,-106.594],[296.6,-106.594],[296.6,-108.02],[294.59,-108.02],[294.59,-109.346],[294.933,-109.346],[296.111,-109.443],[296.897,-109.936],[296.798,-110.326],[296.405,-110.427],[295.988,-110.575],[293.36,-110.575],[293.36,-109.738],[293.36,-109.346],[293.163,-108.951],[292.769,-108.853],[292.079,-108.658],[291.884,-108.658],[291.491,-108.951],[290.704,-109.247],[288.493,-109.247],[286.772,-109.247],[286.28,-109.247],[285.298,-108.757],[284.71,-108.757],[284.118,-108.757],[283.624,-108.951],[283.232,-109.443],[282.811,-109.543],[282.051,-109.543],[281.952,-108.951],[282.051,-108.561],[282.051,-107.28],[281.465,-107.183],[281.071,-107.379],[281.071,-108.168],[280.973,-108.951],[280.579,-109.247],[280.184,-109.346],[279.795,-109.543],[279.402,-109.738],[279.004,-110.131],[278.71,-110.82],[279.004,-111.803],[279.103,-112.196],[278.908,-112.591],[278.613,-112.984],[278.415,-113.377],[278.022,-113.475],[277.626,-113.772],[277.53,-114.163],[277.136,-114.262],[276.949,-114.261],[276.745,-114.262],[276.348,-114.458],[275.858,-114.554],[275.465,-114.655],[274.68,-114.655],[273.796,-114.752],[273.402,-114.752],[273.007,-114.554],[272.613,-114.36],[272.324,-113.968],[271.827,-113.87],[271.408,-113.772],[270.551,-113.772],[270.059,-113.67],[268.78,-113.67],[267.798,-113.576],[267.404,-113.277],[267.009,-113.277],[266.62,-113.277],[266.225,-113.475],[265.831,-113.576],[265.439,-113.968],[264.947,-114.262],[264.556,-114.36],[263.671,-114.36],[263.178,-114.458],[262.587,-114.554],[261.998,-114.655],[261.507,-114.95],[261.9,-115.344],[261.113,-115.736],[260.719,-116.029],[260.522,-116.421],[259.736,-116.525],[258.853,-116.525],[258.756,-116.917],[259.051,-117.306],[259.832,-117.702],[259.639,-118.096],[259.436,-118.095],[259.246,-118.096],[258.728,-118.344],[253.837,-118.344],[253.741,-117.604],[253.447,-117.212],[252.756,-116.525],[252.361,-116.525],[251.973,-116.525],[251.579,-116.818],[251.772,-117.212],[251.973,-117.702],[251.973,-118.096],[252.264,-118.491],[252.658,-118.585],[252.658,-118.978],[251.873,-118.978],[251.381,-119.177],[250.986,-119.472],[250.77,-119.465],[250.498,-119.472],[249.71,-119.867],[249.316,-119.867],[248.827,-119.766],[247.936,-119.766],[247.154,-119.867],[246.568,-120.159],[246.342,-120.154],[246.071,-120.159],[245.283,-120.455],[244.616,-120.461],[244.007,-120.455],[243.223,-120.652],[242.824,-120.748],[242.431,-120.455],[242.431,-120.064],[242.332,-119.177],[240.197,-119.177],[239.288,-118.978],[239.288,-118.585],[239.486,-118.096],[239.779,-117.702],[240.173,-117.503],[240.566,-117.408],[240.759,-117.015],[241.155,-116.718],[241.257,-116.325],[241.353,-115.908],[241.257,-115.54],[240.858,-115.54],[240.074,-115.736],[239.684,-115.833],[239.428,-115.834],[239.189,-115.833],[238.798,-115.933],[238.405,-116.226],[237.983,-116.325],[237.616,-116.226],[236.633,-116.277],[236.633,-115.736],[237.024,-115.54],[237.421,-115.344],[237.814,-114.85],[237.616,-114.163],[236.733,-114.554],[236.34,-114.85],[235.947,-115.246],[235.551,-115.441],[235.254,-115.833],[235.254,-116.226],[234.865,-116.325],[234.027,-116.325],[233.585,-116.325],[233.194,-116.325],[233.194,-115.933],[232.801,-115.639],[231.572,-115.246],[230.537,-115.736],[229.556,-115.833],[229.16,-115.833],[228.866,-116.226],[228.475,-116.325],[228.082,-116.226],[227.783,-115.833],[226.702,-116.226],[226.115,-115.933],[226.214,-115.05],[226.214,-113.87],[226.115,-113.081],[224.051,-113.081],[223.855,-114.262],[223.464,-114.554],[222.969,-114.95],[222.579,-115.05],[222.184,-115.344],[221.689,-115.639],[221.296,-116.029],[220.61,-116.917],[220.61,-117.114],[220.709,-117.503],[221.102,-117.702],[220.902,-118.195],[220.902,-118.978],[220.902,-119.867],[220.806,-120.748],[220.806,-121.537],[220.61,-121.929],[220.217,-122.225],[219.723,-122.617],[219.23,-122.816],[218.545,-122.914],[217.858,-122.715],[217.66,-122.32],[217.561,-121.929],[216.921,-121.832],[215.792,-122.225],[215.694,-122.715],[215.301,-123.11],[215.006,-123.5],[214.61,-123.5],[214.23,-123.508],[213.629,-123.597],[213.334,-123.994],[212.352,-124.386],[211.66,-124.19],[211.17,-123.994],[210.681,-123.7],[210.188,-123.5],[209.696,-123.11],[210.089,-122.32],[210.386,-121.929],[210.681,-121.537],[210.778,-121.02],[210.681,-120.552],[208.147,-120.552],[207.634,-120.358],[206.503,-120.064],[205.371,-120.358],[204.783,-120.652],[203.895,-120.849],[203.504,-121.24],[202.91,-121.437],[202.519,-121.24],[202.126,-120.849],[201.537,-121.14],[201.438,-121.929],[201.438,-122.715],[200.947,-123.11],[200.556,-123.406],[200.158,-123.406],[199.767,-123.5],[199.373,-123.307],[199.129,-122.914],[198.389,-123.01],[197.998,-123.01],[197.581,-123.207],[195.639,-123.207],[194.85,-123.01],[193.772,-123.207],[193.376,-123.207],[193.277,-122.816],[192.616,-122.816],[192.004,-122.816],[191.61,-122.914],[191.163,-122.864],[191.217,-123.597],[191.113,-123.994],[191.163,-124.386],[190.525,-124.485],[190.132,-124.386],[189.939,-123.994],[188.951,-123.5],[188.365,-123.597],[187.97,-123.994],[188.068,-124.386],[188.857,-124.386],[189.246,-124.386],[189.642,-124.682],[189.835,-125.075],[190.233,-125.172],[190.624,-125.368],[190.92,-125.96],[190.92,-126.153],[190.72,-126.548],[190.132,-126.548],[189.149,-126.452],[188.758,-126.153],[188.365,-125.96],[188.167,-125.469],[187.873,-125.075],[187.478,-124.781],[186.962,-124.386],[184.53,-124.386],[184.137,-124.19],[184.233,-123.797],[184.53,-123.207],[184.53,-123.01],[184.137,-122.816],[183.839,-122.419],[183.204,-122.32],[182.956,-122.32],[182.564,-122.419],[181.777,-122.419],[181.287,-122.225],[180.889,-121.929],[180.107,-121.929],[179.318,-121.929],[178.313,-121.732],[178.137,-121.732],[177.941,-121.832],[178.532,-121.929],[178.827,-122.32],[179.22,-122.617],[179.517,-123.01],[179.908,-123.207],[180.327,-123.213],[180.693,-123.207],[181.087,-123.207],[181.287,-123.597],[181.678,-123.893],[182.467,-124.485],[182.956,-125.27],[183.743,-125.469],[184.137,-125.469],[184.53,-125.566],[184.921,-125.566],[185.313,-125.761],[185.413,-126.153],[185.71,-126.548],[186.493,-126.748],[186.887,-126.748],[187.285,-126.845],[187.772,-126.845],[188.167,-126.942],[188.559,-127.238],[188.951,-127.535],[188.951,-127.924],[189.149,-128.713],[191.113,-128.713],[191.217,-129.304],[191.217,-129.697],[191.408,-130.088],[191.607,-130.088],[191.806,-130.088],[192.004,-130.484],[191.902,-130.877],[191.806,-131.268],[191.605,-131.317],[191.408,-131.367],[191.408,-131.761],[191.217,-132.151],[191.006,-132.153],[190.822,-132.151],[190.822,-132.546],[190.624,-133.038],[190.132,-133.432],[189.741,-133.727],[189.496,-133.726],[189.246,-133.727],[188.857,-133.825],[188.806,-135.005],[185.929,-135.005],[185.118,-135.201],[184.233,-135.299],[183.839,-135.299],[183.447,-135.102],[183.154,-134.713],[182.758,-134.611],[182.072,-135.299],[181.678,-135.398],[181.064,-135.494],[180.499,-135.398],[180.499,-134.216],[179.318,-134.216],[178.925,-134.512],[179.123,-134.906],[179.517,-135.005],[179.908,-135.768],[179.809,-136.185],[177.668,-136.185],[176.863,-136.38],[175.876,-136.38],[175.485,-136.481],[175.683,-136.872],[176.368,-137.562],[176.587,-137.567],[176.764,-137.562],[177.158,-137.854],[177.158,-138.643]],\"c\":true},\"ix\":2},\"nm\":\"Path 30\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":30,\"ty\":\"sh\",\"ix\":31,\"ks\":{\"a\":0,\"k\":{\"i\":[[0,0.444],[0,0.146],[0,0.072],[0,0],[-0.149,0],[-0.03,-0.018],[0,0],[0,0]],\"o\":[[0,-0.145],[0,-0.078],[0,0],[0.147,0],[0.037,0],[0,0],[0,0],[0,-0.444]],\"v\":[[25.267,-112.787],[25.362,-113.178],[25.314,-113.377],[26.151,-113.377],[26.544,-113.475],[26.641,-113.439],[26.641,-111.654],[25.314,-111.654]],\"c\":true},\"ix\":2},\"nm\":\"Path 31\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":31,\"ty\":\"sh\",\"ix\":32,\"ks\":{\"a\":0,\"k\":{\"i\":[[0,0],[0,0],[0,0],[0.295,-0.396],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],\"o\":[[0,0],[0,0],[0,0],[-0.296,0.392],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],\"v\":[[-242.727,-137.658],[-244.988,-137.658],[-246.462,-137.757],[-247.84,-135.69],[-249.315,-134.216],[-251.082,-134.216],[-252.756,-133.531],[-252.068,-132.349],[-250.099,-131.658],[-249.315,-132.643],[-248.136,-131.859],[-247.053,-132.447],[-246.854,-133.239],[-245.578,-133.333],[-245.184,-134.512],[-244.104,-135.299],[-243.219,-134.02],[-242.234,-134.416],[-240.566,-135.005],[-240.076,-136.872],[-239.483,-138.15],[-241.646,-138.643]],\"c\":true},\"ix\":2},\"nm\":\"Path 32\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":32,\"ty\":\"sh\",\"ix\":33,\"ks\":{\"a\":0,\"k\":{\"i\":[[0,0],[0.151,-0.127],[0.368,-0.075],[0,0],[-0.171,0],[-0.27,-0.049],[-0.146,-0.026],[0,0],[-0.05,0],[0.1,0.247],[0.1,0.096],[0.248,0]],\"o\":[[-0.198,0.027],[-0.271,0.219],[0,0],[0.146,-0.045],[0.3,0],[0.146,0.022],[0,0],[0.05,0],[-0.028,-0.268],[-0.048,-0.118],[-0.174,-0.172],[0,0]],\"v\":[[158.576,-137.167],[158.28,-136.773],[157.396,-136.38],[157.396,-135.891],[157.788,-136.086],[158.576,-135.987],[158.969,-135.789],[159.363,-135.789],[159.462,-135.891],[159.363,-136.58],[159.363,-136.968],[158.772,-137.167]],\"c\":true},\"ix\":2},\"nm\":\"Path 33\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":33,\"ty\":\"sh\",\"ix\":34,\"ks\":{\"a\":0,\"k\":{\"i\":[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],\"o\":[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],\"v\":[[-203.503,-136.481],[-203.699,-135.201],[-201.929,-134.216],[-200.257,-133.333],[-198.39,-133.239],[-197.307,-134.317],[-197.406,-135.201],[-198.782,-136.284],[-200.651,-136.284],[-201.73,-136.773]],\"c\":true},\"ix\":2},\"nm\":\"Path 34\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":34,\"ty\":\"sh\",\"ix\":35,\"ks\":{\"a\":0,\"k\":{\"i\":[[0,0],[0,0],[0.146,0],[0.113,0.009],[0.15,-0.029],[0.197,-0.246],[0.077,-0.126],[0.096,-0.12],[0.171,-0.077],[0.159,0.026],[0.113,-0.008],[0.124,-0.021],[0.15,-0.069],[0.17,-0.074],[0.15,-0.03],[0.147,0],[0.298,0],[0.2,-0.05],[0.15,-0.051],[0.123,-0.047],[0.171,-0.021],[0.067,0.006],[0.069,-0.009],[0.544,0.028],[0.295,0],[0,0],[0.149,0],[0.126,0.008],[0.174,-0.026],[0.147,-0.027],[0.22,-0.196],[0.074,-0.128],[0.173,-0.295],[0,0],[0.121,-0.125],[0.122,-0.122],[0.146,-0.099],[0.122,-0.049],[0.196,-0.049],[0.101,-0.071],[0.077,-0.146],[0,-0.125],[0,-0.346],[0.222,0],[0.466,-0.023],[0.146,-0.026],[0,-0.221],[0.2,-0.27],[0.079,-0.172],[0,-0.123],[0,0],[0,0],[0.218,0],[0.155,0.008],[0.255,-0.03],[0.295,-0.145],[0.169,-0.122],[0,-0.343],[-0.047,-0.176],[-0.122,0.021],[-0.271,0],[-0.223,-0.024],[0,-0.245],[0,0],[-0.073,-0.145],[0.294,0.024],[0.296,0],[0.201,-0.028],[0,0],[0.368,-0.051],[0.295,-0.12],[0,-0.123],[0,-0.17],[0.025,-0.121],[0.075,-0.173],[0.028,-0.123],[0.027,-0.147],[0.271,-0.027],[0.124,-0.076],[0.096,-0.149],[0.071,-0.124],[0.047,-0.148],[0,-0.321],[0,-0.15],[0,-0.149],[0,-0.148],[0,0],[-0.07,0.1],[-0.124,0.099],[-0.05,-0.099],[-0.048,-0.097],[-0.073,-0.147],[-0.099,0.198],[-0.025,0.121],[-0.127,-0.075],[-0.172,-0.12],[-0.271,-0.267],[-0.1,-0.124],[0,0],[0,0],[-0.047,-0.148],[0,0],[-0.567,-0.05],[-0.169,-0.025],[-0.347,-0.049],[-0.266,0],[0,0],[-0.146,0],[-0.122,0],[0,0],[0.076,0.098],[0.049,0.148],[0,0.296],[0.061,-0.011],[0.055,0.041],[0.095,0.121],[0.048,0.124],[0.121,0.149],[0.143,0.146],[0.148,0.193],[0.076,0.099],[0.077,-0.004],[0.027,0.069],[0.027,0.122],[0,0.151],[0,0.241],[0,0],[-0.072,0.171],[-0.023,0.124],[-0.118,0.444],[-0.122,0.123],[-0.224,0.322],[-0.098,0.073],[-0.095,0.048],[-0.097,0.074],[-0.097,0.077],[-0.099,0.075],[-0.197,0.296],[-0.07,0.121],[-0.102,0.101],[-0.124,0.072],[-0.075,-0.017],[-0.046,0.023],[-0.148,0.294],[-0.048,0.121],[-0.076,0.123],[-0.097,0.144],[-0.095,0.146],[-0.019,0.121],[-0.32,0.024],[-0.07,-0.008],[-0.097,0.027],[-0.167,0.074],[-0.086,-0.016],[-0.082,0.023],[-0.12,0.178],[-0.102,0.074],[-0.122,0.022],[-0.068,-0.007],[-0.061,0.011],[-0.126,0.051],[-0.144,0.124],[-0.097,0.124],[-0.124,0.098],[0,0.221],[0.025,0.274],[-0.298,0],[-0.162,-0.009],[-0.385,0.153],[-0.148,0.121],[-0.224,0.074],[-0.067,-0.006],[-0.064,0.014],[-0.344,0],[0,0],[-0.12,0.071],[-0.196,0.074],[-0.296,0],[-0.271,0.046],[-0.395,0],[0,0],[-0.123,0.072],[-0.245,0.295],[-0.126,0.074],[-0.125,0.023],[-0.294,0],[0,0.246],[0.053,0.175],[0.075,0.119],[0.123,0.073],[0.188,-0.037],[0.127,0.008],[0.198,0]],\"o\":[[0,0],[-0.151,0],[-0.131,0.011],[-0.141,-0.011],[-0.322,0.05],[-0.068,0.099],[-0.07,0.121],[-0.098,0.122],[-0.169,0.078],[-0.099,-0.016],[-0.145,0],[-0.147,0.027],[-0.17,0.075],[-0.148,0.074],[-0.115,0.022],[-0.295,0.022],[-0.223,0],[-0.147,0.048],[-0.124,0.05],[-0.172,0.051],[-0.066,0.015],[-0.062,-0.006],[-0.543,0.079],[-0.292,-0.021],[0,0],[-0.146,0],[-0.157,0.013],[-0.151,-0.011],[-0.149,0.028],[-0.293,0.075],[-0.126,0.099],[-0.194,0.268],[0,0],[-0.124,0.1],[-0.124,0.122],[-0.122,0.126],[-0.097,0.048],[-0.197,0.076],[-0.124,0.026],[-0.121,0.101],[-0.071,0.123],[-0.05,0.314],[-0.219,-0.026],[-0.468,-0.023],[-0.148,0],[0.098,0.172],[0,0.346],[-0.101,0.148],[-0.048,0.123],[0,0],[0,0],[-0.22,0.026],[-0.2,0.009],[-0.211,-0.011],[-0.32,0.049],[-0.194,0.097],[-0.273,0.196],[0,0.197],[0.148,-0.029],[0.245,-0.079],[0.222,0],[-0.076,0.221],[0,0],[0,0.194],[-0.294,0],[-0.294,-0.028],[-0.196,0],[0,0],[-0.392,0],[-0.296,0.024],[0.026,0.15],[0.026,0.148],[0,0.15],[-0.048,0.171],[-0.048,0.124],[-0.023,0.121],[-0.292,0],[-0.121,0],[-0.147,0.094],[-0.072,0.099],[-0.072,0.147],[-0.128,0.271],[0,0.147],[0,0.144],[0,0.148],[0,0],[0.074,-0.119],[0.104,-0.121],[0.123,0.074],[0.049,0.096],[0.1,0.147],[0.146,-0.147],[0.048,-0.122],[0.149,0.073],[0.169,0.12],[0.293,0.224],[0.122,0.12],[0,0],[0,0],[0.051,0.149],[0,0],[0.567,0],[0.196,0],[0.32,0.027],[0.27,0.027],[0,0],[0.148,0],[0.123,0],[0,0],[-0.071,-0.126],[-0.074,-0.121],[-0.097,-0.267],[-0.053,-0.012],[-0.081,0.015],[-0.148,-0.124],[-0.075,-0.102],[-0.102,-0.173],[-0.124,-0.148],[-0.174,-0.172],[-0.072,-0.1],[-0.035,-0.046],[-0.089,0.003],[-0.049,-0.121],[-0.023,-0.126],[-0.023,-0.243],[0,0],[0.049,-0.17],[0.05,-0.125],[0.099,-0.442],[0.027,-0.143],[0.271,-0.267],[0.047,-0.096],[0.095,-0.074],[0.098,-0.046],[0.099,-0.074],[0.099,-0.071],[0.27,-0.217],[0.074,-0.123],[0.074,-0.124],[0.095,-0.095],[0.066,-0.04],[0.065,0.015],[0.271,-0.171],[0.049,-0.124],[0.072,-0.147],[0.096,-0.146],[0.098,-0.151],[0.077,-0.124],[0.348,0],[0.075,-0.01],[0.089,0.011],[0.172,-0.048],[0.092,-0.037],[0.075,0.014],[0.195,-0.071],[0.074,-0.095],[0.101,-0.075],[0.061,-0.013],[0.066,0.005],[0.124,-0.026],[0.172,-0.074],[0.128,-0.097],[0.1,-0.122],[0.145,-0.124],[0,-0.273],[0.293,-0.024],[0.193,-0.007],[0.351,0.02],[0.173,-0.049],[0.17,-0.148],[0.056,-0.011],[0.067,0.006],[0.322,-0.096],[0,0],[0.171,0],[0.17,-0.127],[0.272,-0.096],[0.296,0],[0.364,-0.051],[0,0],[0.173,0],[0.321,-0.222],[0.101,-0.124],[0.099,-0.049],[0.266,-0.076],[0.077,-0.224],[0,-0.197],[-0.05,-0.147],[-0.047,-0.099],[-0.17,-0.108],[-0.111,0.022],[-0.199,0],[0,0]],\"v\":[[105.484,-136.185],[105.098,-136.185],[104.703,-136.086],[104.342,-136.093],[103.915,-136.086],[103.126,-135.69],[103.027,-135.299],[102.833,-134.906],[102.441,-134.611],[101.965,-134.586],[101.652,-134.611],[101.258,-134.611],[100.866,-134.416],[100.474,-134.119],[100.078,-133.921],[99.689,-133.921],[98.9,-133.921],[98.309,-133.825],[97.918,-133.628],[97.523,-133.531],[97.132,-133.239],[96.934,-133.236],[96.74,-133.239],[95.359,-133.239],[94.574,-133.333],[94.082,-133.333],[93.69,-133.239],[93.275,-133.242],[92.806,-133.239],[92.411,-133.038],[91.626,-132.742],[91.427,-132.349],[90.938,-131.564],[88.185,-131.564],[87.793,-131.268],[87.497,-130.877],[87.203,-130.484],[86.807,-130.386],[86.22,-130.286],[85.823,-130.189],[85.432,-129.893],[85.432,-129.497],[85.432,-128.614],[84.844,-128.713],[83.661,-128.713],[83.272,-128.614],[83.565,-128.122],[83.072,-127.337],[82.678,-127.041],[82.678,-126.649],[82.678,-126.257],[82.678,-125.469],[82.091,-125.368],[81.572,-125.376],[80.909,-125.368],[80.025,-125.075],[79.536,-124.781],[79.042,-123.994],[79.237,-123.5],[79.633,-123.597],[80.246,-123.893],[80.811,-123.797],[80.615,-123.207],[80.615,-123.01],[80.909,-122.617],[79.831,-122.419],[79.042,-122.522],[78.548,-122.419],[78.548,-121.14],[77.569,-121.14],[76.78,-120.849],[76.78,-120.455],[76.98,-120.064],[76.879,-119.669],[76.484,-119.373],[76.484,-118.978],[76.387,-118.585],[75.599,-118.585],[75.207,-118.585],[74.913,-118.195],[74.913,-117.799],[74.523,-117.604],[74.473,-116.793],[74.421,-116.421],[74.523,-116.029],[74.473,-115.639],[75.503,-115.54],[75.599,-115.933],[75.993,-116.128],[76.387,-116.029],[76.484,-115.639],[76.78,-115.246],[77.174,-115.639],[77.174,-116.029],[77.569,-115.833],[77.96,-115.441],[78.846,-114.95],[79.042,-114.554],[78.353,-113.67],[78.353,-113.475],[78.548,-113.081],[80.689,-113.081],[82.091,-112.787],[82.579,-112.787],[83.467,-112.591],[84.126,-112.591],[84.743,-112.591],[85.135,-112.687],[85.432,-112.64],[85.432,-113.475],[85.333,-113.87],[84.941,-114.066],[84.941,-114.85],[84.764,-114.839],[84.548,-114.85],[84.156,-115.144],[84.156,-115.54],[83.763,-115.833],[83.37,-116.226],[82.876,-116.718],[82.777,-117.114],[82.587,-117.151],[82.384,-117.212],[82.384,-117.604],[82.384,-117.998],[82.188,-118.585],[82.188,-118.784],[82.579,-119.077],[82.678,-119.472],[82.678,-120.652],[83.072,-120.849],[83.763,-121.636],[83.861,-122.027],[84.251,-122.127],[84.645,-122.225],[84.645,-122.617],[85.04,-122.715],[85.725,-123.406],[85.725,-123.797],[86.125,-123.994],[86.316,-124.386],[86.536,-124.392],[86.71,-124.386],[87.299,-125.075],[87.397,-125.469],[87.596,-125.863],[87.988,-126.153],[88.28,-126.548],[88.28,-126.942],[89.169,-126.942],[89.385,-126.936],[89.66,-126.942],[89.954,-127.337],[90.216,-127.342],[90.448,-127.337],[90.938,-127.633],[90.938,-128.025],[91.332,-128.122],[91.53,-128.122],[91.723,-128.122],[92.118,-128.221],[92.508,-128.516],[92.706,-128.909],[93.103,-129.106],[93.493,-129.497],[93.397,-130.189],[94.184,-130.286],[94.711,-130.274],[95.755,-130.386],[96.052,-130.776],[96.546,-131.171],[96.734,-131.17],[96.935,-131.171],[97.743,-131.464],[100.057,-131.464],[100.474,-131.658],[100.866,-132.055],[101.652,-132.151],[102.441,-132.151],[103.253,-132.742],[105.165,-132.742],[105.587,-132.937],[106.273,-133.727],[106.471,-134.119],[106.867,-134.216],[107.648,-134.216],[107.846,-134.808],[107.549,-135.201],[107.354,-135.591],[107.258,-135.987],[106.73,-136.023],[106.375,-135.987],[105.879,-136.185]],\"c\":true},\"ix\":2},\"nm\":\"Path 35\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":35,\"ty\":\"sh\",\"ix\":36,\"ks\":{\"a\":0,\"k\":{\"i\":[[0.099,0.396],[0,0],[0,0],[0,0]],\"o\":[[0,0],[0,0],[0,0],[0,0]],\"v\":[[-237.518,-136.185],[-237.319,-135.398],[-235.157,-135.201],[-235.255,-136.185]],\"c\":true},\"ix\":2},\"nm\":\"Path 36\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":36,\"ty\":\"sh\",\"ix\":37,\"ks\":{\"a\":0,\"k\":{\"i\":[[0,0],[0,0],[-0.197,-0.391],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[-0.392,0.294],[0,0],[0.491,0],[0,0],[0,0],[0,0],[0,0],[-0.295,-0.591],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],\"o\":[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0.394,-0.297],[0,0],[-0.491,0],[0,0],[0,0],[0,0],[0,0],[0.295,0.588],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],\"v\":[[-218.642,-134.02],[-217.952,-133.038],[-215.593,-131.268],[-213.432,-130.583],[-212.254,-130.974],[-211.267,-131.171],[-210.481,-130.286],[-209.793,-128.516],[-208.807,-129.007],[-207.14,-129.106],[-205.96,-129.304],[-205.861,-130.386],[-205.861,-131.955],[-205.174,-132.742],[-205.566,-133.921],[-207.237,-134.713],[-208.318,-134.02],[-210.186,-135.201],[-211.758,-135.201],[-210.578,-134.216],[-209.203,-132.447],[-210.382,-132.349],[-212.35,-134.216],[-213.825,-134.216],[-213.728,-133.038],[-213.333,-131.761],[-215.102,-132.843],[-215.987,-134.808],[-218.544,-135.69]],\"c\":true},\"ix\":2},\"nm\":\"Path 37\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":37,\"ty\":\"sh\",\"ix\":38,\"ks\":{\"a\":0,\"k\":{\"i\":[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0.393,-0.094],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],\"o\":[[0,0],[0,0],[0,0],[0,0],[0,0.689],[0,0],[0,0],[-0.393,0.099],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[-0.492,0.592],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],\"v\":[[-227.882,-135.591],[-228.474,-134.906],[-229.553,-134.611],[-229.454,-133.825],[-228.278,-133.038],[-228.572,-131.564],[-227.096,-131.367],[-227.096,-130.583],[-228.278,-130.484],[-230.243,-130.484],[-231.522,-131.268],[-232.8,-132.843],[-234.371,-133.432],[-235.747,-133.432],[-237.125,-134.119],[-238.107,-134.317],[-239.975,-133.727],[-240.957,-132.349],[-241.943,-131.367],[-243.023,-130.286],[-242.826,-129.106],[-240.665,-129.007],[-238.795,-128.614],[-237.125,-128.812],[-235.65,-129.304],[-233.093,-128.909],[-231.422,-128.909],[-233.389,-128.317],[-235.255,-128.317],[-236.534,-127.728],[-236.338,-126.845],[-235.157,-126.349],[-232.7,-126.349],[-230.243,-127.238],[-228.669,-128.419],[-226.902,-128.614],[-224.54,-128.614],[-222.18,-128.614],[-221.296,-129.697],[-220.706,-131.761],[-221.492,-132.546],[-222.575,-132.546],[-222.771,-131.658],[-224.147,-132.151],[-225.817,-133.432],[-225.817,-134.416],[-226.406,-135.591]],\"c\":true},\"ix\":2},\"nm\":\"Path 38\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":38,\"ty\":\"sh\",\"ix\":39,\"ks\":{\"a\":0,\"k\":{\"i\":[[0,0],[0,0],[-0.198,-0.395],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[-0.494,-0.392],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[-0.49,0],[0,0.393],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],\"o\":[[0,0],[0,0],[0.197,0.392],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0.49,0.392],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0.491,0],[0,-0.395],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],\"v\":[[-194.753,-135.005],[-196.424,-134.808],[-195.735,-132.742],[-194.656,-130.877],[-195.538,-129.304],[-194.457,-128.122],[-192.588,-126.942],[-189.935,-127.14],[-188.656,-127.924],[-186.885,-126.649],[-184.037,-126.548],[-180.791,-126.548],[-179.317,-126.942],[-178.631,-127.633],[-177.644,-126.845],[-175.976,-126.942],[-173.124,-127.238],[-172.926,-128.317],[-171.845,-129.007],[-172.14,-130.583],[-174.699,-131.268],[-177.451,-131.859],[-179.513,-131.171],[-182.564,-130.484],[-184.525,-130.286],[-187.28,-130.776],[-189.541,-130.676],[-191.408,-132.151],[-191.607,-133.628],[-192.293,-135.005]],\"c\":true},\"ix\":2},\"nm\":\"Path 39\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":39,\"ty\":\"sh\",\"ix\":40,\"ks\":{\"a\":0,\"k\":{\"i\":[[0.164,0],[0,0],[0.146,0],[0.762,0],[0.075,-0.323],[0.125,-0.294],[0.05,-0.122],[0.024,-0.198],[0.024,-0.122],[0.026,-0.146],[0,0],[-0.124,-0.149],[-0.124,-0.1],[-0.121,-0.053],[-0.167,-0.075],[-0.124,-0.047],[-0.124,-0.194],[-0.073,-0.145],[-0.101,-0.121],[-0.269,0],[-0.39,0.025],[-0.026,0.196],[-0.026,0.126],[-0.071,0.174],[-0.496,0],[-0.466,0.023],[-0.093,-0.002],[-0.203,0.101],[-0.124,0.049],[-0.149,0],[-0.122,-0.049],[-0.176,-0.048],[-0.147,0],[-0.272,0.199],[-0.148,0.097],[-0.218,0],[0,0],[-0.17,-0.051],[-0.121,-0.026],[-0.172,0],[0,0],[-0.096,0.415],[-0.076,0.147],[-0.101,0.173],[-0.049,0.171],[-0.022,0.121],[0.12,0.023],[0.06,-0.009],[0.066,0.027],[0.145,0.045],[0.122,0],[0.216,-0.015],[0.192,0.009],[0.223,0],[0,0],[0.1,-0.094],[0.048,-0.096],[0.075,-0.198],[0.025,-0.118],[0,-0.319],[0.298,0],[0.147,0],[0,0],[-0.072,0.121],[0,0.346],[0.024,0.147],[0.291,0.024],[0.149,0],[0.293,0],[0.147,-0.024],[0,0],[0.291,0],[0.27,0.023],[0.121,0.023],[0.125,0.094],[0.099,0.124],[0.125,0.101],[0.1,0.072],[0.063,0]],\"o\":[[0,0],[-0.149,0],[-0.765,0.022],[0.027,0.344],[-0.072,0.315],[-0.047,0.126],[-0.075,0.197],[-0.029,0.123],[-0.029,0.121],[0,0],[0.098,0.147],[0.101,0.124],[0.101,0.073],[0.149,0.072],[0.126,0.049],[0.196,0.099],[0.072,0.128],[0.074,0.148],[0.145,0.172],[0.396,0],[0.027,-0.222],[0.024,-0.121],[0.024,-0.174],[0.393,0.249],[0.465,0],[0.106,-0.007],[0.205,0.005],[0.123,-0.048],[0.121,-0.049],[0.148,0],[0.173,0.049],[0.124,0.022],[0.347,0],[0.149,-0.097],[0.17,-0.122],[0,0],[0.173,0.026],[0.124,0.046],[0.149,0.048],[0,0],[0,-0.417],[0.027,-0.172],[0.098,-0.198],[0.07,-0.145],[0.025,-0.124],[-0.146,-0.024],[-0.056,-0.012],[-0.075,0.01],[-0.149,-0.053],[-0.123,-0.054],[-0.261,-0.044],[-0.152,0.011],[-0.222,0],[0,0],[-0.148,0.049],[-0.097,0.1],[-0.121,0.172],[-0.023,0.121],[-0.05,0.298],[-0.296,-0.023],[-0.146,0],[0,0],[0,-0.173],[0.145,-0.272],[0,-0.17],[-0.295,0],[-0.15,0],[-0.292,-0.025],[-0.15,0],[0,0],[-0.294,-0.024],[-0.296,0],[-0.122,0],[-0.174,-0.026],[-0.121,-0.103],[-0.097,-0.125],[-0.097,-0.074],[-0.056,-0.05],[-0.126,0]],\"v\":[[239.756,-132.643],[239.189,-132.643],[238.798,-132.546],[236.829,-132.546],[236.928,-131.658],[236.533,-130.877],[236.436,-130.484],[236.144,-129.992],[236.144,-129.598],[236.043,-129.205],[235.751,-129.497],[236.043,-129.106],[236.238,-128.713],[236.633,-128.614],[237.024,-128.317],[237.421,-128.221],[237.912,-127.831],[238.107,-127.437],[238.306,-127.041],[238.969,-126.942],[239.975,-127.041],[240.074,-127.633],[240.074,-128.025],[240.366,-128.419],[241.551,-127.924],[242.728,-128.025],[243.025,-128.029],[243.615,-128.122],[243.714,-128.516],[244.107,-128.516],[244.496,-128.516],[244.793,-128.122],[245.184,-128.025],[245.973,-128.516],[246.271,-128.909],[246.858,-129.007],[247.055,-129.007],[247.447,-128.713],[247.84,-128.614],[248.258,-128.516],[249.806,-128.516],[249.806,-129.598],[250.006,-129.992],[250.4,-130.386],[250.691,-130.776],[250.691,-131.171],[250.3,-131.268],[250.123,-131.261],[249.907,-131.268],[249.71,-131.658],[249.316,-131.658],[248.637,-131.67],[248.134,-131.658],[247.548,-131.761],[247.35,-131.761],[246.954,-131.564],[246.858,-131.171],[246.464,-130.776],[246.366,-130.386],[246.366,-129.549],[245.579,-129.598],[245.184,-129.549],[245.184,-130.705],[245.482,-131.071],[245.876,-131.859],[245.678,-132.252],[244.894,-132.252],[244.496,-132.349],[243.714,-132.349],[243.321,-132.252],[243.321,-131.171],[242.533,-131.268],[241.746,-131.268],[241.353,-131.268],[241.055,-131.658],[240.759,-132.055],[240.366,-132.252],[240.366,-132.643],[240.188,-132.709]],\"c\":true},\"ix\":2},\"nm\":\"Path 40\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":40,\"ty\":\"sh\",\"ix\":41,\"ks\":{\"a\":0,\"k\":{\"i\":[[0,0],[0,0],[0,0],[0,0]],\"o\":[[0,0],[0,0],[0,0],[0,0]],\"v\":[[-245.381,-131.955],[-246.365,-130.776],[-244.497,-130.484],[-243.515,-132.447]],\"c\":true},\"ix\":2},\"nm\":\"Path 41\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":41,\"ty\":\"sh\",\"ix\":42,\"ks\":{\"a\":0,\"k\":{\"i\":[[0.053,-0.197],[0,-0.145],[-0.022,-0.122],[-0.174,-0.097],[-0.197,0],[-0.194,0.148],[0,0.145],[-0.046,0.293],[0.197,0],[0.17,0]],\"o\":[[-0.022,0.122],[0,0.15],[0.029,0.173],[0.17,0.101],[0.243,0],[-0.02,-0.149],[0,-0.298],[-0.194,-0.027],[-0.174,0],[-0.223,0]],\"v\":[[232.402,-131.268],[232.402,-130.877],[232.402,-130.484],[232.801,-130.189],[233.194,-129.893],[233.681,-130.286],[233.585,-130.676],[233.681,-131.464],[233.194,-131.464],[232.801,-131.658]],\"c\":true},\"ix\":2},\"nm\":\"Path 42\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":42,\"ty\":\"sh\",\"ix\":43,\"ks\":{\"a\":0,\"k\":{\"i\":[[0,0],[0,0],[-0.171,-0.072],[-0.126,-0.048],[-0.125,-0.074],[-0.123,-0.096],[-0.268,0],[-0.22,0.05],[-0.343,0],[-0.272,-0.174],[-0.198,-0.095],[-0.12,-0.047],[-0.148,-0.025],[-0.297,0],[0,0],[-0.124,0.026],[-0.148,0.121],[-0.174,0.022],[-0.121,0],[-0.219,0],[0,0],[0,0.148],[0,0.051],[0.513,0],[0.149,-0.025],[0.323,0],[0,0],[0.147,0],[0,0],[0.151,0],[0,0],[0.489,0],[0.124,-0.07],[0.099,-0.048],[0.221,0],[0.198,0.076],[0.269,0.466]],\"o\":[[0,0],[0.145,0.073],[0.126,0.049],[0.145,0.077],[0.124,0.072],[0.196,0.149],[0.247,0],[0.322,-0.077],[0.343,0],[0.169,0.101],[0.122,0.051],[0.148,0.049],[0.27,0.048],[0,0],[0.122,0],[0.193,-0.047],[0.148,-0.122],[0.124,-0.026],[0.199,-0.026],[0,0],[0,-0.144],[0,-0.046],[-0.517,-0.025],[-0.173,0],[-0.293,0.051],[0,0],[-0.146,0],[0,0],[-0.145,0],[0,0],[-0.49,-0.021],[-0.175,0],[-0.099,0.051],[-0.171,0.123],[-0.223,0],[-0.467,-0.222],[0,0]],\"v\":[[252.858,-130.877],[252.858,-129.205],[252.952,-128.909],[253.348,-128.812],[253.741,-128.614],[253.936,-128.221],[254.574,-128.025],[255.214,-128.122],[256.1,-128.419],[256.886,-128.025],[257.28,-127.633],[257.673,-127.535],[258.064,-127.337],[258.853,-127.337],[259.246,-127.337],[259.639,-127.337],[260.033,-127.728],[260.329,-128.122],[260.719,-128.122],[261.308,-128.122],[261.308,-128.909],[261.21,-129.304],[261.287,-129.401],[259.96,-129.497],[259.538,-129.401],[258.728,-129.304],[258.358,-129.304],[257.969,-129.401],[257.475,-129.401],[257.082,-129.328],[257.082,-130.386],[255.831,-130.484],[255.412,-130.386],[255.313,-129.992],[254.723,-129.992],[254.133,-129.992],[253.249,-131.071]],\"c\":true},\"ix\":2},\"nm\":\"Path 43\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":43,\"ty\":\"sh\",\"ix\":44,\"ks\":{\"a\":0,\"k\":{\"i\":[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],\"o\":[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],\"v\":[[-200.847,-130.776],[-202.812,-129.992],[-203.207,-129.007],[-201.832,-127.728],[-200.355,-127.728],[-198.979,-127.14],[-197.801,-127.633],[-197.406,-129.106],[-198.782,-129.893],[-199.57,-130.974]],\"c\":true},\"ix\":2},\"nm\":\"Path 44\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":44,\"ty\":\"sh\",\"ix\":45,\"ks\":{\"a\":0,\"k\":{\"i\":[[-0.026,-0.102],[0,0],[0,0],[0,0],[0,0.393],[0.408,0]],\"o\":[[0.097,0.398],[0,0],[0,0],[0,0],[0,-0.29],[-0.142,0]],\"v\":[[-218.445,-130.189],[-219.132,-129.791],[-218.741,-128.713],[-217.462,-128.812],[-216.97,-129.697],[-218.242,-130.333]],\"c\":true},\"ix\":2},\"nm\":\"Path 45\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":45,\"ty\":\"sh\",\"ix\":46,\"ks\":{\"a\":0,\"k\":{\"i\":[[0,0],[0,0],[0,0]],\"o\":[[0,0],[0,0],[0,0]],\"v\":[[-206.255,-126.548],[-204.877,-126.548],[-205.464,-127.437]],\"c\":true},\"ix\":2},\"nm\":\"Path 46\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":46,\"ty\":\"sh\",\"ix\":47,\"ks\":{\"a\":0,\"k\":{\"i\":[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[-0.099,0.389],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],\"o\":[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0.096,-0.397],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],\"v\":[[-255.999,-126.548],[-255.999,-125.566],[-255.506,-123.797],[-256.099,-121.14],[-258.849,-117.702],[-255.407,-116.718],[-253.542,-114.163],[-251.872,-115.54],[-249.805,-115.54],[-248.526,-116.525],[-248.038,-118.391],[-246.168,-119.566],[-244.892,-120.849],[-241.349,-122.225],[-239.188,-122.914],[-239.386,-124.19],[-242.137,-125.761],[-243.709,-125.96],[-245.578,-125.172],[-247.741,-125.863],[-249.904,-126.649],[-252.556,-126.845]],\"c\":true},\"ix\":2},\"nm\":\"Path 47\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":47,\"ty\":\"sh\",\"ix\":48,\"ks\":{\"a\":0,\"k\":{\"i\":[[0,0],[0,-0.199],[-0.147,-0.123],[-0.12,-0.027],[-0.296,0],[-0.197,0],[-0.124,0.071],[-0.073,0.124],[0.147,0.028],[0.067,-0.006],[0.062,0.014],[0.344,0]],\"o\":[[0,0.193],[0,0.195],[0.1,0.071],[0.271,0.097],[0.196,0],[0.167,0],[0.122,-0.078],[-0.147,-0.049],[-0.062,-0.012],[-0.069,0.008],[-0.316,-0.072],[0,0]],\"v\":[[241.257,-126.153],[241.155,-125.664],[241.451,-125.27],[241.842,-125.172],[242.629,-124.978],[243.124,-125.075],[243.517,-125.27],[243.615,-125.664],[243.223,-125.863],[243.027,-125.863],[242.824,-125.863],[242.016,-126.153]],\"c\":true},\"ix\":2},\"nm\":\"Path 48\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":48,\"ty\":\"sh\",\"ix\":49,\"ks\":{\"a\":0,\"k\":{\"i\":[[0,0],[-0.049,-0.123],[-0.123,-0.296],[-0.027,-0.149],[0,-0.295],[0,0],[0.149,0.074],[0.148,0.075],[0.124,0.099],[0.172,0.292],[0,0],[0.1,0.146]],\"o\":[[0.053,0.122],[0.147,0.296],[0.049,0.143],[0.046,0.271],[0,0],[-0.096,-0.127],[-0.172,-0.074],[-0.127,-0.073],[-0.245,-0.197],[0,0],[-0.077,-0.171],[0,0]],\"v\":[[232.6,-126.057],[232.702,-125.664],[233.194,-124.876],[233.392,-124.485],[233.392,-123.746],[235.157,-123.746],[234.96,-124.19],[234.472,-124.289],[234.077,-124.485],[233.585,-125.27],[233.392,-125.664],[233.095,-126.057]],\"c\":true},\"ix\":2},\"nm\":\"Path 49\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":49,\"ty\":\"sh\",\"ix\":50,\"ks\":{\"a\":0,\"k\":{\"i\":[[0.394,0],[0,-0.591],[0,0],[0,0],[0,-0.39],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0.492,0],[0,0],[0,0]],\"o\":[[-0.393,0],[0,0.593],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],\"v\":[[-200.061,-125.469],[-200.158,-124.19],[-201.437,-123.207],[-201.437,-120.748],[-200.847,-118.195],[-198.979,-118.491],[-197.702,-119.373],[-197.503,-120.748],[-195.538,-120.358],[-194.36,-121.24],[-193.473,-122.816],[-192.194,-124.19],[-193.965,-124.978],[-195.735,-124.978],[-197.503,-125.566]],\"c\":true},\"ix\":2},\"nm\":\"Path 50\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":50,\"ty\":\"sh\",\"ix\":51,\"ks\":{\"a\":0,\"k\":{\"i\":[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0.395,0.196],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,-0.392],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0.391,0.492],[0,0],[0,0]],\"o\":[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[-0.393,-0.199],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0.397],[0.392,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[-0.392,-0.493],[0,0],[0,0]],\"v\":[[-208.514,-125.172],[-208.71,-124.089],[-209.402,-124.089],[-210.776,-124.585],[-212.254,-124.19],[-211.956,-123.11],[-210.677,-121.929],[-211.17,-120.552],[-212.153,-120.159],[-213.529,-121.24],[-214.709,-121.14],[-214.906,-120.064],[-213.432,-119.177],[-212.35,-118.491],[-210.677,-118.096],[-209.893,-116.525],[-207.629,-115.441],[-206.255,-116.619],[-203.994,-116.718],[-203.11,-118.29],[-203.895,-119.566],[-205.174,-120.748],[-206.548,-121.537],[-204.78,-122.32],[-204.877,-123.207],[-206.255,-124.485],[-206.942,-125.27]],\"c\":true},\"ix\":2},\"nm\":\"Path 51\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":51,\"ty\":\"sh\",\"ix\":52,\"ks\":{\"a\":0,\"k\":{\"i\":[[0.082,0],[0,0],[0.392,-0.196],[0.146,-0.095],[0.147,-0.079],[0.087,0.017],[0.082,-0.024],[0.439,-0.32],[0,0],[-0.291,-0.018],[-0.298,0],[0,0],[-0.197,0],[-0.166,-0.005],[-0.251,0.016],[-0.22,0],[0,0],[-0.174,-0.075],[-0.297,-0.074],[-0.197,0],[0,0],[0,0],[0.124,0.075],[0.124,0.076],[0.173,0.046],[0.072,-0.007],[0.057,0.01],[0.121,0.052],[0.147,0.121],[0.123,0.072],[0.045,0]],\"o\":[[0,0],[-0.471,0],[-0.174,0.075],[-0.126,0.073],[-0.079,0.036],[-0.079,-0.013],[-0.517,0.169],[0,0],[0.296,0.048],[0.296,0.028],[0,0],[0.196,0],[0.215,-0.008],[0.191,0.006],[0.221,0],[0,0],[0.172,0.048],[0.27,0.121],[0.174,0.05],[0,0],[0,0],[-0.1,-0.124],[-0.121,-0.073],[-0.147,-0.073],[-0.064,-0.016],[-0.064,0.005],[-0.122,-0.031],[-0.177,-0.097],[-0.1,-0.074],[-0.041,-0.025],[-0.09,0]],\"v\":[[245.383,-124.386],[244.993,-124.386],[243.813,-124.289],[243.418,-123.994],[243.223,-123.597],[242.972,-123.593],[242.728,-123.597],[241.551,-122.715],[241.155,-122.617],[241.941,-122.522],[242.728,-122.419],[243.124,-122.419],[243.615,-122.522],[244.165,-122.519],[244.793,-122.522],[245.383,-122.617],[245.579,-122.617],[245.973,-122.32],[246.761,-122.027],[247.277,-121.929],[247.936,-121.929],[248.037,-122.715],[247.84,-123.11],[247.447,-123.307],[247.055,-123.597],[246.845,-123.599],[246.66,-123.597],[246.271,-123.7],[245.876,-123.994],[245.777,-124.386],[245.647,-124.42]],\"c\":true},\"ix\":2},\"nm\":\"Path 52\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":52,\"ty\":\"sh\",\"ix\":53,\"ks\":{\"a\":0,\"k\":{\"i\":[[0,0],[-0.391,-0.099],[0,0],[0,0],[0,0],[0,0],[0,0]],\"o\":[[0,0],[0.395,0.095],[0,0],[0,0],[0,0],[0,0],[0,0]],\"v\":[[-222.867,-123.406],[-221.198,-122.32],[-219.723,-120.849],[-218.642,-121.636],[-218.249,-123.11],[-219.032,-123.797],[-222.082,-124.289]],\"c\":true},\"ix\":2},\"nm\":\"Path 53\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":53,\"ty\":\"sh\",\"ix\":54,\"ks\":{\"a\":0,\"k\":{\"iov\":[[-184.135,-124.19],[-186.885,-123.893],[-189.345,-121.929],[-190.818,-119.177],[-190.915,-115.736],[-188.656,-115.344],[-187.082,-115.246],[-186.395,-113.968],[-188.165,-114.262],[-190.032,-113.772],[-188.46,-112.196],[-186.298,-112.196],[-185.215,-112.591],[-183.739,-111.605],[-180.99,-110.721],[-182.66,-110.23],[-182.758,-108.853],[-181.58,-107.871],[-183.446,-105.217],[-184.333,-103.349],[-185.708,-101.876],[-186.985,-102.464],[-187.97,-104.727],[-186.985,-106.099],[-189.442,-108.265],[-191.408,-106.594],[-194.161,-109.642],[-195.142,-110.034],[-194.949,-111.605],[-195.341,-113.377],[-196.62,-113.576],[-196.717,-115.05],[-198.782,-116.718],[-201.242,-116.818],[-201.634,-115.833],[-202.715,-115.736],[-203.796,-114.163],[-203.207,-112.884],[-203.503,-111.902],[-201.534,-110.23],[-199.667,-109.148],[-200.257,-107.676],[-202.32,-108.069],[-201.73,-106.397],[-199.96,-106.494],[-197.996,-107.676],[-197.996,-105.903],[-201.437,-104.134],[-201.14,-101.579],[-203.305,-102.954],[-202.715,-104.727],[-204.091,-104.727],[-204.188,-106.397],[-202.909,-106.397],[-203.305,-108.853],[-206.452,-110.326],[-207.14,-108.561],[-208.807,-107.773],[-205.96,-105.903],[-207.336,-104.824],[-207.827,-103.448],[-213.134,-103.252],[-215.79,-104.334],[-217.758,-104.626],[-220.311,-106.099],[-222.082,-105.02],[-224.835,-103.839],[-224.147,-102.169],[-224.54,-99.613],[-226.21,-102.66],[-228.865,-103.839],[-231.816,-103.252],[-238.305,-103.839],[-238.402,-104.727],[-236.139,-105.512],[-239.386,-107.183],[-241.448,-107.083],[-247.249,-108.757],[-248.725,-110.034],[-251.376,-110.326],[-252.95,-110.23],[-253.641,-109.148],[-255.114,-108.853],[-256.589,-111.313],[-257.573,-109.148],[-259.344,-109.443],[-261.014,-112.296],[-262.979,-112.787],[-263.573,-110.92],[-264.846,-109.738],[-266.813,-109.443],[-269.37,-108.561],[-271.924,-107.28],[-269.863,-109.247],[-267.701,-109.835],[-266.125,-110.427],[-265.438,-111.41],[-266.319,-111.605],[-268.975,-110.721],[-271.924,-109.443],[-273.597,-109.346],[-275.171,-109.346],[-278.414,-107.577],[-281.461,-107.871],[-283.918,-109.738],[-288.345,-109.936],[-289.917,-110.92],[-292.176,-111.313],[-294.93,-110.721],[-296.698,-111.705],[-299.551,-111.705],[-302.597,-112.491],[-305.352,-112.491],[-307.516,-112.491],[-308.103,-113.87],[-312.43,-114.066],[-314.199,-113.87],[-313.71,-114.95],[-316.266,-115.05],[-318.523,-113.772],[-322.065,-113.772],[-324.72,-111.803],[-326.785,-111.803],[-328.551,-110.427],[-328.749,-108.658],[-330.913,-107.183],[-334.454,-107.083],[-335.139,-105.119],[-331.108,-103.349],[-329.732,-101.482],[-327.47,-100.598],[-325.997,-98.334],[-328.163,-98.042],[-330.224,-98.43],[-330.421,-100.104],[-332.878,-98.824],[-334.941,-98.629],[-337.4,-96.663],[-336.22,-95.972],[-334.941,-94.993],[-334.156,-92.831],[-327.768,-93.519],[-326.193,-94.5],[-324.521,-94.306],[-324.917,-92.437],[-324.917,-90.276],[-327.177,-90.175],[-329.436,-89.388],[-331.404,-89.584],[-331.992,-87.424],[-334.355,-85.259],[-333.86,-83.783],[-332.781,-83.589],[-332.387,-82.41],[-331.504,-80.542],[-328.845,-79.656],[-327.568,-81.132],[-326.094,-79.165],[-326.389,-76.411],[-325.016,-76.411],[-324.129,-76.903],[-322.065,-77.005],[-320.69,-76.216],[-319.9,-77.593],[-318.622,-76.509],[-317.049,-77.398],[-318.035,-74.939],[-319.706,-73.167],[-322.751,-70.811],[-323.833,-69.433],[-325.801,-69.333],[-327.768,-67.959],[-330.421,-67.366],[-332.682,-65.5],[-331.404,-64.911],[-329.143,-66.583],[-327.668,-66.68],[-325.212,-67.959],[-322.461,-69.137],[-316.854,-71.79],[-316.068,-73.463],[-310.266,-76.707],[-311.742,-78.871],[-308.792,-80.542],[-307.222,-83.194],[-304.667,-83.783],[-303.287,-83.001],[-306.336,-81.82],[-307.12,-80.245],[-306.728,-78.478],[-302.893,-80.346],[-300.141,-80.834],[-300.732,-82.115],[-301.124,-82.899],[-300.24,-83.194],[-297.784,-83.098],[-295.618,-81.621],[-293.358,-80.443],[-290.996,-79.853],[-289.03,-80.346],[-287.36,-79.656],[-285.789,-79.656],[-284.215,-78.379],[-281.758,-77.2],[-280.479,-75.823],[-278.609,-75.33],[-277.626,-75.721],[-276.152,-74.838],[-275.171,-73.463],[-272.907,-72.876],[-273.3,-71.597],[-271.141,-70.708],[-271.534,-69.532],[-270.155,-69.037],[-268.779,-68.841],[-268.68,-67.466],[-267.602,-65.992],[-267.305,-64.319],[-266.716,-62.746],[-264.945,-62.551],[-264.451,-60.683],[-262.586,-58.911],[-262.095,-57.635],[-260.227,-56.651],[-258.359,-55.964],[-256.784,-55.472],[-256.491,-54.488],[-254.524,-53.212],[-253.049,-52.128],[-252.265,-49.772],[-252.265,-47.901],[-253.347,-49.083],[-254.624,-50.657],[-254.919,-51.638],[-256.491,-52.618],[-257.573,-53.016],[-257.771,-54.587],[-259.047,-54.587],[-260.128,-55.375],[-261.112,-55.768],[-262.095,-56.062],[-263.273,-55.868],[-262.293,-54.587],[-261.014,-53.801],[-259.733,-52.72],[-257.081,-50.952],[-256.196,-49.083],[-255.214,-46.72],[-255.31,-44.855],[-255.506,-42.298],[-255.506,-39.447],[-256.394,-38.761],[-256.394,-36.895],[-255.31,-34.925],[-255.702,-33.057],[-255.407,-31.584],[-254.624,-30.305],[-254.723,-28.437],[-253.641,-26.863],[-252.166,-25.586],[-251.279,-22.933],[-250.004,-21.85],[-249.708,-20.474],[-248.526,-18.901],[-246.758,-18.901],[-245.48,-17.823],[-243.515,-16.936],[-242.137,-15.556],[-241.745,-13.886],[-241.055,-12.214],[-240.173,-9.462],[-238.991,-8.285],[-237.518,-6.908],[-237.125,-5.924],[-238.305,-5.039],[-237.518,-3.955],[-236.042,-2.879],[-234.172,-1.698],[-233.093,-0.42],[-233.29,0.665],[-232.897,1.549],[-231.422,2.138],[-230.047,3.318],[-229.062,4.299],[-228.965,5.478],[-228.177,5.088],[-227.981,3.81],[-228.572,2.333],[-229.852,1.744],[-230.047,0.466],[-231.522,-0.613],[-232.111,-2.284],[-232.7,-3.861],[-233.979,-5.039],[-234.371,-6.611],[-235.65,-7.103],[-236.435,-9.07],[-237.909,-10.74],[-238.107,-12.906],[-236.927,-13.001],[-235.255,-12.315],[-234.274,-11.13],[-234.172,-9.265],[-232.405,-6.807],[-230.535,-4.843],[-228.865,-3.465],[-227.686,-2.088],[-227.391,-0.52],[-225.623,0.466],[-224.345,1.939],[-223.36,3.514],[-221.296,5.674],[-220.509,7.546],[-219.429,8.429],[-220.509,9.119],[-220.803,10.296],[-218.544,12.065],[-216.675,13.538],[-214.411,14.23],[-212.055,15.608],[-209.303,16.783],[-206.255,18.259],[-203.796,18.948],[-202.226,18.848],[-201.73,18.06],[-199.96,17.867],[-197.996,18.848],[-195.834,20.517],[-194.656,21.899],[-192.884,21.899],[-192.194,21.899],[-191.212,22.29],[-190.131,23.764],[-187.97,24.453],[-187.87,23.469],[-186.687,24.06],[-185.511,25.732],[-183.347,27.991],[-183.543,29.759],[-182.858,30.547],[-181.969,30.154],[-180.791,30.744],[-179.121,32.318],[-177.35,32.809],[-174.403,34.281],[-172.829,34.973],[-172.926,33.399],[-172.14,32.415],[-169.388,32.611],[-169.09,33.596],[-168.208,33.5],[-167.716,32.221],[-168.7,31.038],[-171.551,31.038],[-173.417,30.939],[-176.17,30.744],[-177.451,29.858],[-179.218,27.991],[-179.121,26.517],[-179.121,24.553],[-178.532,22.094],[-178.532,20.421],[-179.415,19.145],[-181.185,18.259],[-183.839,18.456],[-185.708,18.06],[-187.773,18.848],[-189.148,17.964],[-187.87,16.981],[-187.87,15.211],[-187.379,14.131],[-186.687,12.36],[-186.687,10.392],[-185.511,9.61],[-185.313,8.135],[-186.197,7.546],[-189.148,7.741],[-191.016,8.037],[-191.804,9.411],[-192.588,11.475],[-193.473,13.341],[-195.048,13.538],[-197.307,14.131],[-199.667,14.426],[-200.748,13.049],[-202.715,12.065],[-203.404,10.493],[-204.78,8.429],[-205.566,4.889],[-205.861,2.333],[-204.877,0.37],[-204.386,-1.894],[-205.37,-4.256],[-203.599,-6.513],[-202.126,-6.611],[-200.651,-7.791],[-199.175,-9.17],[-197.111,-8.876],[-195.638,-8.381],[-194.457,-8.876],[-193.473,-7.595],[-191.705,-7.595],[-190.328,-7.696],[-190.624,-8.677],[-190.131,-10.25],[-187.97,-10.35],[-186.493,-10.544],[-183.739,-10.25],[-182.66,-8.876],[-181.775,-8.876],[-181.185,-9.658],[-180.401,-9.856],[-179.121,-8.677],[-177.939,-7.204],[-177.939,-5.531],[-177.255,-4.548],[-176.96,-3.465],[-176.072,-2.679],[-175.584,-1.5],[-174.5,-0.913],[-174.403,0.37],[-173.417,0.665],[-172.829,-0.224],[-172.336,-1.599],[-172.926,-3.268],[-173.516,-5.828],[-174.793,-8.086],[-174.793,-11.034],[-174.11,-13.1],[-173.027,-15.263],[-171.351,-15.953],[-169.388,-17.626],[-167.521,-18.901],[-165.75,-19.586],[-165.455,-20.867],[-164.081,-21.654],[-165.259,-23.817],[-166.144,-24.798],[-165.75,-25.979],[-166.538,-27.061],[-165.16,-27.747],[-163.982,-26.175],[-163.291,-27.747],[-162.508,-29.127],[-161.622,-30.009],[-160.736,-32.958],[-158.081,-32.958],[-156.409,-33.944],[-154.445,-34.141],[-154.936,-35.322],[-155.034,-37.778],[-153.66,-39.647],[-152.085,-39.647],[-151.592,-40.725],[-149.528,-40.629],[-147.662,-41.71],[-146.484,-43.185],[-144.219,-43.381],[-141.762,-42.891],[-142.352,-42.1],[-144.909,-42.1],[-146.286,-41.119],[-146.286,-39.447],[-145.203,-38.956],[-144.023,-39.941],[-143.139,-40.53],[-141.467,-41.022],[-139.697,-41.906],[-137.927,-42.298],[-136.553,-43.971],[-135.174,-45.15],[-134.979,-46.527],[-136.846,-46.034],[-138.125,-43.971],[-140.288,-43.874],[-142.059,-44.759],[-143.924,-46.234],[-144.909,-48.786],[-143.236,-50.067],[-143.337,-52.128],[-145.792,-52.327],[-148.448,-51.542],[-151.396,-49.871],[-154.248,-47.115],[-156.511,-45.542],[-155.624,-47.017],[-154.248,-48.593],[-153.362,-49.379],[-155.624,-49.967],[-152.772,-49.967],[-152.085,-51.344],[-150.512,-52.618],[-148.643,-52.72],[-147.858,-54.295],[-146.286,-54.883],[-143.826,-54.883],[-139.404,-54.979],[-137.141,-54.587],[-135.372,-54.69],[-133.603,-55.964],[-132.029,-57.734],[-129.177,-58.028],[-127.701,-58.614],[-126.917,-59.406],[-127.801,-60.192],[-127.214,-60.977],[-127.115,-62.648],[-129.177,-62.944],[-129.572,-63.926],[-131.833,-63.926],[-133.603,-62.944],[-134.781,-62.159],[-135.763,-62.551],[-135.372,-63.733],[-133.309,-64.418],[-130.85,-65.011],[-129.77,-65.992],[-131.342,-66.091],[-132.913,-66.876],[-134.979,-67.466],[-136.257,-68.646],[-137.732,-69.826],[-138.319,-70.908],[-137.436,-71.105],[-137.141,-71.889],[-138.52,-73.76],[-140.189,-75.823],[-142.547,-79.46],[-143.337,-81.132],[-145.103,-78.967],[-145.103,-77.101],[-146.974,-76.411],[-148.152,-75.134],[-149.921,-75.233],[-150.317,-76.411],[-151.493,-77.295],[-153.265,-76.903],[-152.772,-78.967],[-152.772,-81.718],[-152.871,-83.194],[-155.034,-83.294],[-156.707,-84.375],[-158.278,-85.947],[-161.03,-87.619],[-162.014,-86.833],[-164.374,-86.933],[-165.358,-87.523],[-168.009,-87.523],[-169.09,-86.44],[-168.11,-84.867],[-168.503,-82.806],[-168.208,-81.427],[-167.323,-79.557],[-168.7,-79.557],[-168.6,-77.79],[-169.485,-76.804],[-168.309,-76.017],[-166.538,-74.738],[-166.045,-72.482],[-166.045,-69.925],[-167.323,-68.155],[-169.09,-66.778],[-171.551,-66.484],[-170.175,-64.319],[-170.175,-61.565],[-169.485,-59.996],[-169.878,-58.717],[-170.959,-57.143],[-173.318,-56.85],[-174.699,-59.112],[-176.367,-61.076],[-176.367,-62.746],[-176.858,-65.108],[-176.563,-67.073],[-179.613,-67.466],[-181.872,-67.562],[-183.052,-68.254],[-185.906,-68.94],[-186.985,-70.119],[-189.442,-71.4],[-191.998,-72.775],[-195.341,-71.989],[-196.131,-73.266],[-197.503,-76.216],[-199.175,-77.005],[-200.257,-78.182],[-199.863,-81.82],[-198.192,-84.57],[-196.522,-87.027],[-194.36,-87.913],[-192.685,-89.191],[-193.376,-90.569],[-196.03,-91.158],[-199.08,-92.143],[-195.538,-91.648],[-192.685,-90.962],[-191.408,-91.255],[-191.113,-92.73],[-188.758,-91.944],[-187.379,-92.239],[-187.28,-93.421],[-186.395,-93.911],[-185.906,-95.482],[-187.577,-95.678],[-189.735,-95.877],[-190.525,-96.763],[-192.983,-97.746],[-191.312,-97.648],[-188.656,-96.957],[-186.885,-96.369],[-185.116,-96.957],[-183.936,-98.43],[-185.215,-99.613],[-183.446,-99.613],[-182.362,-98.533],[-183.248,-97.352],[-184.037,-95.191],[-184.037,-92.534],[-185.807,-91.944],[-185.313,-90.766],[-183.446,-90.667],[-183.446,-89.584],[-180.99,-89.783],[-180.3,-91.158],[-177.939,-91.059],[-176.664,-90.862],[-175.385,-90.276],[-173.516,-90.276],[-173.318,-91.751],[-175.187,-92.143],[-176.072,-94.01],[-178.331,-94.203],[-180.104,-95.678],[-181.775,-96.074],[-181.775,-97.152],[-180.202,-96.862],[-179.513,-97.648],[-179.71,-98.533],[-177.843,-98.533],[-177.154,-99.811],[-175.385,-101.088],[-174.793,-102.169],[-175.779,-103.349],[-176.664,-105.316],[-174.99,-105.609],[-174.5,-107.083],[-175.779,-108.561],[-177.547,-109.346],[-179.809,-110.525],[-177.255,-110.525],[-176.96,-111.313],[-175.09,-111.117],[-173.614,-110.23],[-171.551,-110.326],[-169.683,-110.721],[-171.256,-112.196],[-170.175,-112.491],[-168.503,-110.82],[-166.637,-110.623],[-165.848,-109.052],[-164.471,-108.757],[-163.686,-107.577],[-162.212,-106.987],[-161.423,-105.512],[-159.755,-104.923],[-158.377,-103.448],[-158.081,-101.676],[-160.049,-99.811],[-161.718,-97.945],[-160.836,-96.174],[-163.786,-95.779],[-165.358,-96.174],[-167.028,-96.174],[-169.09,-94.7],[-169.09,-93.126],[-166.637,-92.73],[-164.668,-92.831],[-164.176,-93.715],[-163.291,-94.203],[-162.014,-93.911],[-159.656,-93.225],[-157.393,-91.059],[-156.903,-89.881],[-155.525,-88.409],[-153.558,-88.409],[-151.493,-86.44],[-148.448,-86.34],[-146.484,-85.459],[-146.286,-86.636],[-149.528,-89.094],[-150.905,-90.175],[-151.592,-91.356],[-149.431,-90.276],[-145.792,-88.409],[-143.924,-87.325],[-143.924,-89.094],[-142.844,-90.667],[-144.615,-91.648],[-145.007,-94.108],[-147.463,-94.993],[-150.414,-98.141],[-149.431,-99.025],[-148.448,-99.811],[-144.516,-96.862],[-143.139,-94.993],[-141.467,-94.7],[-140.974,-96.862],[-138.913,-97.648],[-138.617,-98.533],[-137.238,-98.533],[-136.65,-99.515],[-136.749,-100.993],[-139.501,-100.993],[-139.501,-101.778],[-141.171,-103.057],[-142.352,-103.252],[-144.122,-104.035],[-145.497,-104.035],[-145.893,-105.119],[-146.383,-106.099],[-148.743,-106.099],[-149.727,-106.201],[-149.727,-107.871],[-148.055,-107.871],[-147.17,-108.658],[-149.431,-109.247],[-149.137,-109.936],[-148.055,-110.131],[-149.333,-111.313],[-151.101,-111.803],[-150.414,-112.884],[-152.283,-113.67],[-154.346,-113.576],[-154.641,-114.458],[-156.313,-114.554],[-156.999,-114.752],[-155.624,-115.639],[-157.491,-116.226],[-159.853,-115.639],[-161.423,-117.212],[-161.622,-118.096],[-163.095,-118.195],[-163.192,-119.274],[-165.554,-120.064],[-168.6,-120.064],[-168.995,-119.177],[-170.565,-118.978],[-172.04,-119.274],[-172.534,-118.195],[-174.009,-118.096],[-174.11,-119.472],[-173.221,-120.748],[-174.699,-122.522],[-175.385,-124.089],[-178.137,-124.089],[-179.415,-122.914],[-181.285,-122.816],[-182.564,-122.027],[-182.858,-120.455],[-181.676,-118.784],[-182.463,-117.702],[-180.888,-115.639],[-182.167,-115.441],[-183.936,-117.212],[-184.525,-119.566],[-184.724,-121.14],[-183.446,-122.816],[-181.58,-124.19]],\"c\":true},\"ix\":2},\"nm\":\"Path 54\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":54,\"ty\":\"sh\",\"ix\":55,\"ks\":{\"a\":0,\"k\":{\"i\":[[0,0],[0,0],[0,0],[0,0]],\"o\":[[0,0],[0,0],[0,0],[0,0]],\"v\":[[-225.131,-123.893],[-225.817,-123.207],[-224.44,-123.01],[-223.951,-123.994]],\"c\":true},\"ix\":2},\"nm\":\"Path 55\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":55,\"ty\":\"sh\",\"ix\":56,\"ks\":{\"a\":0,\"k\":{\"i\":[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],\"o\":[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],\"v\":[[-173.318,-123.893],[-172.926,-122.127],[-172.336,-120.748],[-168.404,-120.552],[-167.028,-121.537],[-164.668,-122.127],[-167.028,-123.7],[-170.764,-123.893]],\"c\":true},\"ix\":2},\"nm\":\"Path 56\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":56,\"ty\":\"sh\",\"ix\":57,\"ks\":{\"a\":0,\"k\":{\"i\":[[0.269,-0.167],[0.147,-0.118],[0.273,-0.269],[-0.218,0],[-0.194,0.028],[-0.123,0.028],[-0.146,0.027],[-0.125,-0.007],[-0.151,0.014],[0,0],[-0.171,0.073],[0.051,0.103],[0.126,0.098],[0.149,0.05],[0.122,0.024],[0.152,0]],\"o\":[[-0.174,0.098],[-0.298,0.249],[0.174,0.1],[0.222,0],[0.121,0],[0.149,-0.019],[0.131,-0.012],[0.128,0.006],[0,0],[0.171,-0.025],[-0.024,-0.122],[-0.095,-0.145],[-0.12,-0.096],[-0.121,-0.047],[-0.123,-0.024],[-0.34,0]],\"v\":[[110.111,-122.914],[109.715,-122.522],[108.927,-121.832],[109.418,-121.537],[110.009,-121.636],[110.404,-121.636],[110.796,-121.832],[111.171,-121.831],[111.582,-121.832],[111.977,-121.832],[112.368,-122.127],[112.368,-122.522],[112.072,-122.914],[111.68,-123.11],[111.287,-123.207],[110.892,-123.307]],\"c\":true},\"ix\":2},\"nm\":\"Path 57\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":57,\"ty\":\"sh\",\"ix\":58,\"ks\":{\"a\":0,\"k\":{\"i\":[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[-0.389,-0.096],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],\"o\":[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0.393,0.1],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],\"v\":[[-239.188,-122.522],[-240.369,-121.537],[-241.549,-121.045],[-243.122,-120.652],[-244.497,-119.766],[-244.203,-118.391],[-245.875,-117.408],[-245.774,-116.619],[-244.596,-116.619],[-243.808,-115.833],[-242.335,-116.325],[-240.467,-116.525],[-239.287,-115.639],[-241.155,-115.144],[-242.826,-114.752],[-243.612,-113.968],[-241.448,-113.081],[-239.287,-113.081],[-236.927,-113.277],[-234.862,-113.277],[-233.193,-112.591],[-233.389,-111.605],[-236.828,-111.705],[-239.975,-111.705],[-242.234,-110.721],[-240.86,-108.757],[-238.402,-108.658],[-236.338,-108.658],[-235.255,-106.79],[-233.882,-106.002],[-231.227,-106.002],[-228.768,-106.099],[-227.096,-106.987],[-225.328,-107.479],[-223.556,-108.462],[-222.575,-109.052],[-221.787,-108.361],[-220.706,-108.561],[-217.952,-107.183],[-216.083,-107.083],[-214.411,-107.28],[-213.728,-108.561],[-215.102,-109.642],[-214.019,-109.738],[-212.35,-110.034],[-211.956,-110.92],[-213.529,-111.902],[-216.774,-112.984],[-218.445,-114.655],[-218.15,-116.325],[-219.626,-117.408],[-219.92,-119.669],[-221.099,-121.14],[-223.26,-122.027],[-225.131,-122.027],[-225.131,-120.358],[-224.736,-119.177],[-223.85,-117.604],[-224.44,-116.917],[-225.228,-117.015],[-226.017,-117.702],[-226.21,-118.881],[-226.703,-119.867],[-228.177,-121.437],[-229.65,-121.537],[-229.257,-120.455],[-228.669,-119.566],[-230.339,-119.566],[-230.438,-118.784],[-231.816,-118.585],[-231.522,-119.472],[-231.126,-120.552],[-232.305,-120.652],[-233.78,-121.14],[-235.255,-121.045],[-235.452,-119.963],[-236.631,-120.159],[-236.338,-120.849],[-236.631,-122.225],[-237.419,-122.522]],\"c\":true},\"ix\":2},\"nm\":\"Path 58\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":58,\"ty\":\"sh\",\"ix\":59,\"ks\":{\"a\":0,\"k\":{\"i\":[[0.049,-0.018],[0.149,-0.098],[0.122,-0.051],[0.12,0],[0.194,0],[0.292,-0.025],[0.148,-0.07],[0,-0.49],[-0.195,-0.048],[-0.121,0],[-0.394,0],[-0.541,0.076],[-0.294,0.097],[-0.147,0.027],[-0.343,0],[0,0],[-0.146,0],[0,0],[-0.146,0],[0,0],[0.12,0.073],[0.171,0.078],[0.273,-0.014],[0.145,0.007],[0.123,0],[0.08,-0.006],[0.094,0.011],[0.148,0.048],[0.194,0.023],[0.175,0],[0.094,0]],\"o\":[[-0.169,0.07],[-0.097,0.074],[-0.124,0.052],[-0.171,0.023],[-0.294,0],[-0.172,0],[-0.442,0.224],[0.099,0.173],[0.122,0.027],[0.369,0.051],[0.564,0],[0.295,-0.023],[0.148,-0.05],[0.32,-0.074],[0,0],[0.15,0],[0,0],[0.148,0],[0,0],[-0.074,-0.122],[-0.15,-0.097],[-0.273,-0.133],[-0.123,0.007],[-0.147,0],[-0.09,-0.013],[-0.074,0.006],[-0.172,-0.027],[-0.196,-0.077],[-0.149,-0.026],[-0.113,0],[-0.046,0]],\"v\":[[317.051,-116.421],[316.658,-116.128],[316.561,-115.736],[316.168,-115.736],[315.676,-115.736],[314.892,-115.736],[314.496,-115.54],[314.103,-114.36],[314.397,-113.87],[314.792,-113.87],[315.822,-113.87],[317.249,-113.87],[318.037,-114.163],[318.428,-114.36],[319.288,-114.36],[320.098,-114.36],[320.493,-114.262],[320.986,-114.262],[321.378,-114.333],[321.378,-114.95],[321.184,-115.344],[320.79,-115.639],[320.009,-115.742],[319.61,-115.736],[319.215,-115.833],[318.969,-115.834],[318.723,-115.833],[318.329,-116.029],[317.939,-116.421],[317.493,-116.421],[317.193,-116.444]],\"c\":true},\"ix\":2},\"nm\":\"Path 59\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":59,\"ty\":\"sh\",\"ix\":60,\"ks\":{\"a\":0,\"k\":{\"i\":[[0,0],[0,-0.195],[-0.028,-0.147],[0,0],[0,0],[-0.121,0.097],[-0.198,0.096],[-0.038,-0.006],[-0.022,0.012],[-0.225,0.097],[-0.075,0.099],[-0.096,0.143],[-0.021,0.127],[0.118,0.049],[0.101,0.072],[0.071,0.124],[0.025,0.149]],\"o\":[[0,0.197],[0,0.174],[0,0],[0,0],[0.174,0],[0.177,-0.149],[0.025,-0.013],[0.036,0.005],[0.196,-0.1],[0.12,-0.052],[0.1,-0.148],[0.078,-0.098],[-0.118,-0.02],[-0.124,-0.048],[-0.124,-0.101],[-0.074,-0.121],[0,0]],\"v\":[[68.818,-109.148],[68.72,-108.658],[68.918,-108.265],[68.918,-106.397],[70.07,-106.397],[70.487,-106.494],[70.784,-107.083],[70.885,-107.083],[70.98,-107.083],[71.572,-107.28],[71.962,-107.379],[72.257,-107.773],[72.257,-108.168],[71.868,-108.265],[71.471,-108.361],[71.276,-108.757],[71.276,-109.148]],\"c\":true},\"ix\":2},\"nm\":\"Path 60\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":60,\"ty\":\"sh\",\"ix\":61,\"ks\":{\"a\":0,\"k\":{\"i\":[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],\"o\":[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],\"v\":[[-223.85,-106.594],[-226.406,-105.316],[-224.44,-104.923],[-222.867,-105.709],[-221.296,-106.002],[-221.198,-107.28]],\"c\":true},\"ix\":2},\"nm\":\"Path 61\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":61,\"ty\":\"sh\",\"ix\":62,\"ks\":{\"a\":0,\"k\":{\"i\":[[0.394,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],\"o\":[[-0.393,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],\"v\":[[-166.538,-104.824],[-168.11,-103.148],[-167.224,-101.876],[-165.554,-101.676],[-163.786,-102.071],[-162.898,-103.448],[-163.686,-104.923]],\"c\":true},\"ix\":2},\"nm\":\"Path 62\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":62,\"ty\":\"sh\",\"ix\":63,\"ks\":{\"a\":0,\"k\":{\"i\":[[0,0],[0,0],[0.49,0],[0.393,-0.049],[0.248,-0.049],[0.193,-0.196],[0,-0.394],[0,-0.392],[-0.128,-0.013],[-0.125,0.026],[-0.345,0],[-0.244,-0.048],[-0.199,-0.151],[-0.198,-0.241],[-0.099,-0.345],[0.293,0],[0.938,-0.052],[0.291,-0.051],[0,0],[-0.298,0],[0,0],[-0.048,0],[0,0],[0,0],[0,0],[-0.296,0],[-0.591,0],[0,0],[-0.243,-0.101],[-0.297,-0.196],[-0.297,-0.101],[-0.447,0],[-0.389,0.048],[-0.292,0.196],[-0.347,0.244],[-0.343,0.147],[-0.135,-0.025],[-0.121,0.048],[-0.341,0.149],[-0.587,0.096],[-1.13,0],[0,0],[0.295,0.146],[0,0],[0.145,-0.022],[0.129,0.022],[0,0.241],[0,0.346],[0,0.39],[0,0],[0.298,-0.097],[0.345,-0.145],[0.393,0],[0.2,0],[0.297,0],[0.589,0],[0.54,-0.102],[0.785,0],[0,0],[0,0],[0,0],[0.147,0.343]],\"o\":[[0,0],[-0.441,-0.145],[-0.441,0],[-0.244,0],[-0.296,0.098],[-0.247,0.248],[0,0.389],[0.143,-0.023],[0.132,0.011],[0.295,-0.047],[0.293,0],[0.248,0.048],[0.242,0.193],[0.196,0.249],[-0.295,-0.051],[-0.936,-0.052],[-0.296,0],[0,0],[0.291,-0.048],[0,0],[0.101,0],[0,0],[0,0],[0,0],[0.293,0],[0.586,-0.053],[0,0],[0.248,0],[0.344,0.145],[0.246,0.149],[0.392,0.145],[0.442,0],[0.349,-0.051],[0.344,-0.247],[0.294,-0.201],[0.122,-0.049],[0.135,0.024],[0.396,-0.149],[0.544,-0.294],[1.083,-0.147],[0,0],[-0.199,-0.243],[0,0],[-0.137,-0.055],[-0.116,0.017],[0.049,-0.294],[0.049,-0.297],[0,-0.394],[0,0],[-0.345,0],[-0.341,0.148],[-0.339,0.151],[-0.194,0],[-0.296,0],[-0.587,-0.052],[-0.587,0],[-0.738,0.146],[0,0],[0,0],[0,0],[-0.053,-0.345],[0,0]],\"v\":[[-63.41,-98.923],[-63.41,-98.141],[-64.589,-98.533],[-65.771,-98.334],[-66.556,-98.334],[-67.34,-97.945],[-67.928,-97.152],[-67.734,-96.174],[-67.331,-96.172],[-66.948,-96.174],[-66.161,-96.566],[-65.378,-96.566],[-64.783,-95.972],[-64,-95.585],[-64,-94.597],[-64.783,-94.795],[-67.147,-94.795],[-67.928,-94.597],[-67.734,-93.421],[-66.948,-93.615],[-65.378,-93.615],[-65.18,-93.421],[-65.18,-91.849],[-64.783,-91.059],[-64,-91.059],[-63.212,-91.255],[-61.638,-91.255],[-60.855,-91.255],[-60.068,-91.255],[-59.477,-90.471],[-58.689,-90.074],[-57.509,-90.074],[-56.335,-90.074],[-55.546,-90.667],[-54.956,-91.648],[-54.169,-92.239],[-53.775,-92.239],[-53.384,-92.239],[-52.598,-93.027],[-51.025,-93.615],[-48.073,-93.615],[-48.073,-95.191],[-48.469,-95.972],[-49.253,-96.369],[-49.671,-96.381],[-50.038,-96.369],[-50.038,-97.152],[-49.648,-97.892],[-49.84,-98.923],[-51.758,-98.923],[-52.598,-98.727],[-53.384,-98.141],[-54.365,-97.697],[-54.758,-97.352],[-55.546,-97.546],[-57.118,-97.746],[-58.689,-97.546],[-60.509,-96.763],[-62.031,-96.763],[-62.031,-97.546],[-62.031,-98.334],[-62.626,-99.12]],\"c\":true},\"ix\":2},\"nm\":\"Path 63\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":63,\"ty\":\"sh\",\"ix\":64,\"ks\":{\"a\":0,\"k\":{\"i\":[[0.026,-0.008],[-0.03,0.001],[0.012,0]],\"o\":[[0.031,-0.001],[-0.003,-0.01],[-0.017,0]],\"v\":[[52.898,-96.376],[52.991,-96.378],[52.967,-96.392]],\"c\":true},\"ix\":2},\"nm\":\"Path 64\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":64,\"ty\":\"sh\",\"ix\":65,\"ks\":{\"a\":0,\"k\":{\"i\":[[0.036,-0.004],[-0.043,0.014],[-0.002,0.001]],\"o\":[[0.013,0.024],[0.002,-0.001],[-0.034,0.002]],\"v\":[[52.793,-96.369],[52.893,-96.374],[52.898,-96.376]],\"c\":true},\"ix\":2},\"nm\":\"Path 65\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":65,\"ty\":\"sh\",\"ix\":66,\"ks\":{\"a\":0,\"k\":{\"i\":[[0.566,-0.123],[-0.171,-0.023],[-0.145,0.011],[-0.12,-0.009],[-0.119,-0.047],[-0.168,-0.076],[-0.345,0],[0,0],[-0.246,0],[-0.345,-0.149],[-0.273,0],[-0.218,0.028],[0,0],[0.121,0.025],[0.147,0.048],[0.125,0.025],[0.319,0.051],[0.271,0.047],[0.15,0.025],[0.151,0.025],[0.225,0]],\"o\":[[0.148,0.098],[0.154,0.028],[0.113,-0.008],[0.122,0],[0.173,0.05],[0.298,0.12],[0,0],[0.245,0],[0.394,0],[0.248,0.097],[0.221,0],[0,0],[-0.121,-0.023],[-0.147,-0.048],[-0.126,-0.027],[-0.318,-0.074],[-0.269,-0.051],[-0.145,-0.024],[-0.124,0],[-0.219,-0.024],[-0.588,0]],\"v\":[[331.699,-90.471],[331.798,-89.783],[332.241,-89.776],[332.587,-89.783],[332.978,-89.783],[333.271,-89.388],[334.158,-89.29],[334.65,-89.29],[335.238,-89.488],[336.222,-89.191],[336.837,-88.898],[337.4,-88.998],[337.4,-89.783],[337.009,-89.881],[336.616,-90.074],[336.222,-90.175],[335.337,-90.373],[334.551,-90.471],[334.158,-90.667],[333.762,-90.667],[333.175,-90.766]],\"c\":true},\"ix\":2},\"nm\":\"Path 66\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":66,\"ty\":\"sh\",\"ix\":67,\"ks\":{\"a\":0,\"k\":{\"i\":[[0.346,-0.148],[0.245,-0.097],[0.639,-0.348],[-0.44,0],[-0.639,0.445],[-0.196,0.246],[0,0]],\"o\":[[-0.246,0.096],[-0.689,0.296],[0.345,0.192],[0.839,0],[0.297,-0.196],[0,0],[-0.295,0.149]],\"v\":[[-177.057,-87.913],[-177.843,-87.72],[-179.613,-86.731],[-178.631,-86.144],[-176.664,-86.933],[-176.072,-87.72],[-176.268,-88.503]],\"c\":true},\"ix\":2},\"nm\":\"Path 67\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":67,\"ty\":\"sh\",\"ix\":68,\"ks\":{\"a\":0,\"k\":{\"i\":[[0,0],[0,0],[0,0],[0,0],[0,0],[0.046,0.542],[0,0]],\"o\":[[0,0],[0,0],[0,0],[0,0],[-0.048,-0.541],[0,0],[0,0]],\"v\":[[-173.516,-86.539],[-172.926,-84.57],[-170.959,-84.57],[-170.175,-84.965],[-170.175,-85.751],[-170.367,-87.129],[-171.944,-87.325]],\"c\":true},\"ix\":2},\"nm\":\"Path 68\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":68,\"ty\":\"sh\",\"ix\":69,\"ks\":{\"a\":0,\"k\":{\"i\":[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],\"o\":[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],\"v\":[[-335.828,-81.328],[-336.516,-80.834],[-336.22,-79.656],[-334.549,-79.557],[-333.763,-79.954],[-334.355,-81.328]],\"c\":true},\"ix\":2},\"nm\":\"Path 69\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":69,\"ty\":\"sh\",\"ix\":70,\"ks\":{\"a\":0,\"k\":{\"i\":[[0,0],[0.223,-0.025],[0.244,-0.127],[0,-0.343],[0,0],[-0.149,0],[-0.346,0],[-0.148,0.049],[-0.148,0.1],[-0.076,0.098],[-0.025,0.291],[0.168,0]],\"o\":[[-0.222,0],[-0.293,0.024],[-0.297,0.146],[0,0],[0.149,0],[0.343,0],[0.171,0],[0.171,-0.077],[0.099,-0.051],[0.173,-0.221],[-0.148,-0.051],[0,0]],\"v\":[[287.068,-77.69],[286.475,-77.593],[285.693,-77.491],[285.102,-76.831],[285.102,-76.067],[285.496,-76.017],[286.355,-76.067],[286.772,-76.313],[287.168,-76.609],[287.561,-76.707],[287.657,-77.491],[287.267,-77.69]],\"c\":true},\"ix\":2},\"nm\":\"Path 70\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":70,\"ty\":\"sh\",\"ix\":71,\"ks\":{\"a\":0,\"k\":{\"i\":[[0.164,0],[0,0],[0.146,0],[0.617,0.072],[0.027,-0.291],[0.052,-0.122],[0,-0.222],[0,-0.072],[0,-0.295],[0,-0.148],[0.347,0],[0.149,0.072],[0.244,0],[0.099,-0.197],[0,-0.146],[-0.171,-0.219],[-0.151,-0.079],[-0.267,-0.048],[0.029,-0.147],[0,0],[0,-0.15],[0,-0.175],[0.095,-0.123],[0.125,-0.049],[0.123,-0.05],[0,-0.222],[-0.022,-0.224],[0,0],[-0.169,0],[-0.098,-0.049],[-0.075,-0.121],[-0.099,-0.145],[0,0],[-0.027,0.145],[-0.046,0.146],[0,0],[0,-0.149],[0,-0.367],[0.049,-0.098],[0.122,-0.072],[0.147,-0.049],[-0.027,-0.122],[-0.071,-0.17],[0,0],[0,0],[-0.074,-0.124],[-0.073,-0.148],[0,-0.196],[0,-0.247],[-0.172,-0.175],[-0.295,-0.147],[0,0],[0,-0.32],[0.099,-0.125],[0.218,0],[0.197,0.02],[0.172,0.05],[0.22,0],[0,0],[0.099,-0.047],[0.12,-0.125],[0.098,-0.05],[0.079,0.01],[0.054,-0.011],[0.147,0],[0,0],[-0.196,0],[-0.393,0],[-0.223,-0.026],[0.046,-0.126],[0.073,-0.096],[0.085,0.021],[0.044,-0.022],[0.147,-0.097],[0.12,-0.074],[0.187,0.004],[0.088,-0.007],[0,0],[-0.027,-0.122],[-0.046,-0.146],[-0.061,-0.006],[-0.073,0.011],[-0.146,0.05],[-0.25,0],[-0.392,-0.098],[-0.148,0],[-0.112,0.009],[-0.154,-0.027],[-0.124,-0.025],[-0.101,-0.098],[0.174,-0.079],[0.123,-0.025],[0.346,-0.027],[0.124,-0.027],[0.145,-0.075],[0.146,-0.073],[0.075,0.01],[0.056,-0.01],[0.268,-0.047],[0.073,-0.269],[0.047,-0.1],[0.125,-0.072],[0.172,-0.072],[0.122,-0.049],[-0.196,0],[-0.147,0],[-0.127,0.022],[-0.125,0.051],[0,0],[-0.171,0],[-0.148,0],[-0.169,0],[0,0],[-0.076,0.418],[-0.296,0],[-0.151,0],[-0.174,0],[-0.296,0.024],[-0.126,0.048],[-0.146,0.103],[-0.198,0],[-0.196,-0.052],[-0.44,0],[0,0],[-0.149,0],[-0.12,-0.006],[-0.15,0.013],[-0.124,0.051],[-0.15,0.1],[-0.143,0.078],[-0.074,-0.011],[-0.057,0.013],[-0.144,0],[-0.148,0.048],[0,0],[0.075,0.154],[0,0.243],[0,0],[-0.098,0.073],[-0.124,0.048],[-0.067,-0.014],[-0.051,0.038],[-0.052,0.121],[-0.021,0.124],[0,0],[0,0],[0.124,0.147],[0.073,0.199],[0.073,0.096],[0.128,0.099],[0.147,0.097],[0,0],[0.052,-0.097],[0.097,-0.149],[0.1,-0.121],[0.075,0.096],[0.072,0.172],[0,0.146],[0.022,0.296],[0.025,0.221],[0,0],[0.077,0.391],[0.052,0.121],[0.294,0.197],[0.067,-0.018],[0.062,0.04],[0.118,0.098],[0.046,0.098],[0.046,0.125],[0.094,0.148],[0.073,0.172],[0.051,0.118],[0.07,0.172],[0.075,0.123],[0.201,0.097],[0.173,0],[0.121,-0.006],[0.149,0.013],[0.246,0.096],[0.147,0.122],[-0.079,0.124],[-0.124,0.145],[-0.118,0.072],[-0.08,-0.015],[-0.051,0.01],[-0.149,0.024],[0,0],[-0.05,0.125],[-0.102,0.147],[-0.123,0.097],[0,0.172],[0,0],[0,0],[-0.072,0.121],[-0.071,0.169],[-0.02,0.124],[-0.049,0.123],[-0.099,0.122],[-0.125,0.1],[-0.126,0.074],[0.195,0.072],[0.064,0]],\"o\":[[0,0],[-0.149,0],[-0.612,0.053],[0,0.297],[0,0.147],[-0.095,0.199],[0,0.075],[-0.024,0.293],[0,0.147],[-0.341,0.021],[-0.168,0],[-0.197,-0.099],[-0.248,0],[-0.048,0.12],[0,0.298],[0.099,0.12],[0.243,0.123],[-0.047,0.149],[0,0],[0,0.148],[0,0.171],[0,0.169],[-0.074,0.097],[-0.125,0.048],[-0.198,0.078],[0,0.22],[0,0],[0.146,-0.026],[0.149,0],[0.099,0.047],[0.099,0.15],[0,0],[0.02,-0.145],[0.02,-0.171],[0,0],[0,0.147],[0.022,0.368],[0,0.147],[-0.053,0.098],[-0.124,0.074],[0.02,0.124],[0.047,0.176],[0,0],[0,0],[0.123,0.099],[0.073,0.125],[0.073,0.173],[0,0.247],[0,0.244],[0.218,0.221],[0,0],[0.124,0.292],[0,0.196],[-0.122,0.147],[-0.224,0],[-0.169,-0.028],[-0.193,-0.047],[0,0],[-0.124,0],[-0.149,0.1],[-0.098,0.099],[-0.054,0.027],[-0.064,-0.009],[-0.124,0.023],[0,0],[0.178,0.048],[0.397,0],[0.222,0],[0,0.145],[-0.049,0.12],[-0.042,0.054],[-0.069,-0.017],[-0.145,0.097],[-0.125,0.077],[-0.172,0.102],[-0.082,-0.001],[0,0],[0.029,0.121],[0.047,0.148],[0.076,-0.012],[0.061,0.006],[0.171,-0.025],[0.223,-0.072],[0.415,0],[0.123,0.023],[0.13,0.011],[0.142,-0.01],[0.119,0],[0.147,0.023],[-0.147,0.12],[-0.121,0.044],[-0.32,0.099],[-0.147,0],[-0.147,0.048],[-0.151,0.072],[-0.069,0.026],[-0.06,-0.008],[-0.269,0.073],[0,0.299],[-0.027,0.124],[-0.077,0.124],[-0.147,0.099],[-0.124,0.052],[0.174,0.051],[0.147,0],[0.148,0],[0.119,-0.028],[0,0],[0.147,-0.073],[0.152,0],[0.168,0],[0,0],[0,-0.419],[0.294,0.026],[0.151,0],[0.171,0],[0.294,0],[0.147,0],[0.168,-0.075],[0.147,-0.1],[0.222,0],[0.416,0.148],[0,0],[0.147,0],[0.146,-0.011],[0.124,0.007],[0.147,0],[0.169,-0.075],[0.121,-0.073],[0.066,-0.026],[0.061,0.009],[0.125,-0.02],[0.174,0],[0,0],[-0.098,-0.144],[-0.097,-0.192],[0,0],[0,-0.148],[0.101,-0.076],[0.057,-0.024],[0.075,0.016],[0.103,-0.078],[0.045,-0.126],[0,0],[0,0],[-0.148,-0.101],[-0.117,-0.149],[-0.053,-0.119],[-0.074,-0.124],[-0.123,-0.097],[0,0],[-0.021,0.148],[-0.098,0.146],[-0.098,0.146],[-0.12,-0.048],[-0.099,-0.148],[-0.05,-0.122],[-0.029,-0.295],[0,-0.224],[0,0],[0.047,-0.419],[0,-0.121],[-0.122,-0.32],[-0.062,-0.033],[-0.068,0.019],[-0.146,-0.069],[-0.102,-0.071],[-0.049,-0.098],[-0.074,-0.17],[-0.124,-0.169],[-0.049,-0.122],[-0.074,-0.172],[-0.078,-0.149],[-0.099,-0.169],[-0.145,-0.072],[-0.146,-0.01],[-0.124,0.006],[-0.296,-0.023],[-0.174,-0.077],[0.073,-0.127],[0.095,-0.152],[0.075,-0.097],[0.073,-0.042],[0.056,0.011],[0.121,-0.024],[0,0],[0,-0.122],[0.073,-0.17],[0.095,-0.124],[0.123,-0.1],[0,0],[0,0],[0.071,-0.121],[0.097,-0.147],[0.049,-0.124],[0.026,-0.125],[0.075,-0.172],[0.099,-0.122],[0.119,-0.094],[-0.15,-0.148],[-0.075,-0.024],[-0.127,0]],\"v\":[[-29.025,-76.216],[-29.589,-76.216],[-29.984,-76.12],[-31.559,-76.192],[-31.559,-75.43],[-31.656,-75.037],[-32.001,-74.545],[-32.049,-74.349],[-31.951,-73.56],[-32.001,-73.167],[-32.91,-73.069],[-33.328,-73.167],[-33.818,-73.56],[-34.409,-73.266],[-34.409,-72.876],[-34.31,-72.088],[-33.915,-71.889],[-33.132,-71.694],[-33.328,-71.301],[-33.328,-70.908],[-33.423,-70.513],[-33.229,-70.119],[-33.423,-69.727],[-33.818,-69.63],[-34.211,-69.532],[-34.603,-69.137],[-34.508,-68.545],[-33.72,-68.545],[-33.328,-68.745],[-32.934,-68.646],[-32.934,-68.254],[-32.538,-67.959],[-31.751,-67.959],[-31.751,-68.352],[-31.559,-68.745],[-31.163,-68.449],[-31.259,-68.058],[-30.867,-67.173],[-30.965,-66.778],[-31.359,-66.68],[-31.751,-66.484],[-31.751,-66.091],[-31.46,-65.698],[-29.493,-65.698],[-29.294,-66.091],[-28.902,-65.895],[-28.706,-65.5],[-28.409,-65.108],[-28.607,-64.515],[-28.409,-63.926],[-27.625,-63.535],[-27.823,-62.746],[-27.529,-61.959],[-27.823,-61.565],[-28.409,-61.565],[-29.003,-61.565],[-29.396,-61.863],[-29.984,-61.863],[-30.18,-61.863],[-30.573,-61.863],[-30.867,-61.468],[-30.965,-61.076],[-31.176,-61.07],[-31.359,-61.076],[-31.751,-61.076],[-31.855,-60.683],[-31.46,-60.386],[-30.452,-60.587],[-29.884,-60.485],[-29.884,-60.091],[-29.984,-59.7],[-30.197,-59.688],[-30.379,-59.7],[-30.77,-59.406],[-30.965,-59.011],[-31.497,-58.915],[-31.751,-58.911],[-31.855,-58.518],[-31.751,-58.129],[-31.559,-57.734],[-31.359,-57.734],[-31.163,-57.734],[-30.77,-57.93],[-30.18,-58.129],[-29.197,-57.734],[-28.805,-57.734],[-28.448,-57.741],[-28.016,-57.734],[-27.625,-57.734],[-27.428,-57.34],[-27.724,-56.943],[-28.116,-56.85],[-29.003,-56.751],[-29.396,-56.751],[-29.783,-56.554],[-29.984,-56.161],[-30.203,-56.155],[-30.379,-56.161],[-31.163,-55.964],[-31.163,-55.179],[-31.259,-54.783],[-31.656,-54.587],[-32.049,-54.295],[-32.443,-54.194],[-32.049,-53.898],[-31.656,-53.998],[-31.259,-54.094],[-30.867,-54.194],[-30.474,-54.393],[-30.281,-54.783],[-29.884,-54.69],[-29.469,-54.488],[-28.31,-54.488],[-28.214,-55.547],[-27.428,-55.472],[-27.059,-55.572],[-26.641,-55.472],[-25.855,-55.472],[-25.46,-55.472],[-25.069,-55.768],[-24.773,-56.161],[-24.182,-56.062],[-23.202,-55.472],[-23.003,-55.472],[-22.611,-55.572],[-22.223,-55.572],[-21.824,-55.572],[-21.43,-55.572],[-21.038,-55.868],[-20.841,-56.262],[-20.628,-56.266],[-20.448,-56.262],[-20.057,-56.262],[-19.66,-56.457],[-19.562,-56.85],[-19.859,-57.246],[-20.155,-57.832],[-20.155,-58.028],[-20.057,-58.421],[-19.66,-58.518],[-19.467,-58.513],[-19.27,-58.518],[-19.167,-58.911],[-19.073,-59.307],[-18.285,-59.307],[-18.285,-60.091],[-18.68,-60.386],[-18.973,-60.882],[-18.973,-61.272],[-19.366,-61.468],[-19.76,-61.763],[-20.155,-61.666],[-20.057,-61.272],[-20.448,-60.977],[-20.743,-60.587],[-21.137,-60.683],[-21.43,-61.076],[-21.43,-61.468],[-21.43,-62.255],[-21.529,-62.845],[-22.708,-62.845],[-22.611,-63.926],[-22.611,-64.319],[-23.297,-65.011],[-23.492,-65.009],[-23.693,-65.011],[-23.884,-65.402],[-24.281,-65.5],[-24.281,-65.895],[-24.576,-66.288],[-25.069,-66.583],[-25.069,-66.974],[-25.361,-67.366],[-25.56,-67.763],[-25.956,-68.155],[-26.348,-68.352],[-26.736,-68.351],[-27.132,-68.352],[-27.921,-68.545],[-28.214,-68.94],[-28.016,-69.333],[-27.625,-69.63],[-27.529,-70.022],[-27.294,-70.034],[-27.132,-70.022],[-26.738,-70.119],[-26.738,-70.513],[-26.738,-70.908],[-26.443,-71.301],[-26.051,-71.497],[-25.855,-71.866],[-25.855,-73.463],[-29.688,-73.463],[-29.493,-73.855],[-29.1,-74.152],[-29.1,-74.545],[-29.1,-74.939],[-28.706,-75.233],[-28.409,-75.627],[-28.016,-75.823],[-28.409,-76.216],[-28.615,-76.249]],\"c\":true},\"ix\":2},\"nm\":\"Path 71\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":71,\"ty\":\"sh\",\"ix\":72,\"ks\":{\"a\":0,\"k\":{\"i\":[[0.121,-0.024],[0.319,-0.197],[0.124,-0.073],[0.096,-0.124],[0.124,-0.365],[0.025,-0.122],[0,0],[-0.126,0.099],[-0.122,0.103],[-0.169,0.046],[-0.062,-0.008],[-0.066,0.025],[-0.098,0.075],[-0.052,0.123],[-0.048,0.171],[-0.049,0.272]],\"o\":[[-0.369,0.126],[-0.126,0.074],[-0.123,0.074],[-0.248,0.268],[-0.025,0.126],[0,0],[0.12,-0.073],[0.149,-0.122],[0.124,-0.096],[0.058,-0.012],[0.074,0.01],[0.126,-0.054],[0.099,-0.071],[0.071,-0.172],[0.099,-0.269],[-0.122,0.024]],\"v\":[[-34.112,-75.921],[-34.898,-75.33],[-35.292,-75.233],[-35.487,-74.838],[-36.178,-74.056],[-36.178,-73.659],[-35.783,-73.463],[-35.391,-73.659],[-35.098,-74.056],[-34.805,-74.442],[-34.622,-74.437],[-34.409,-74.442],[-34.014,-74.545],[-34.014,-74.939],[-33.72,-75.33],[-33.525,-76.12]],\"c\":true},\"ix\":2},\"nm\":\"Path 72\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":72,\"ty\":\"sh\",\"ix\":73,\"ks\":{\"a\":0,\"k\":{\"i\":[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],\"o\":[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],\"v\":[[-310.169,-74.838],[-312.921,-73.266],[-312.037,-71.4],[-310.266,-72.379],[-308.792,-74.056],[-308.792,-75.823]],\"c\":true},\"ix\":2},\"nm\":\"Path 73\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":73,\"ty\":\"sh\",\"ix\":74,\"ks\":{\"a\":0,\"k\":{\"i\":[[-0.053,-0.371],[0,-0.169],[-0.022,-0.345],[-0.024,-0.293],[0,0],[0.05,0.15],[0.022,0.146],[0.047,0.343],[0.076,0.172],[0.124,0.15],[0.192,0.149]],\"o\":[[0.02,0.149],[0.025,0.345],[0,0.296],[0,0],[-0.05,-0.149],[-0.049,-0.146],[-0.072,-0.322],[-0.025,-0.196],[-0.1,-0.194],[-0.145,-0.174],[0,0.397]],\"v\":[[290.217,-66.974],[290.408,-66.583],[290.408,-65.698],[290.508,-64.959],[291.689,-64.959],[291.491,-65.402],[291.296,-65.794],[291.296,-66.68],[291.001,-67.073],[290.704,-67.562],[290.217,-67.959]],\"c\":true},\"ix\":2},\"nm\":\"Path 74\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":74,\"ty\":\"sh\",\"ix\":75,\"ks\":{\"a\":0,\"k\":{\"i\":[[0,0],[0.22,-0.099],[0.101,-0.075],[0.123,-0.099],[0.124,-0.096],[0.121,0.124],[0.123,0.124],[0.122,0.099],[0,0],[0,-0.15],[0,-0.146],[0,-0.248],[-0.047,-0.217],[0,-0.001],[0.006,0.001],[0.058,-0.009],[0.148,-0.025],[0.067,0.006],[0.062,-0.011],[0.317,0],[0.17,0.052],[0,0],[0,0],[-0.12,0],[-0.394,0.02],[0,0],[0.195,-0.048],[0.065,0.009],[0.053,-0.026],[0.079,-0.148],[0.027,-0.147],[0.097,-0.269],[0.048,-0.146],[0,-0.149],[-0.073,-0.124],[-0.147,-0.098],[-0.243,0],[-0.246,0.024],[-0.118,-0.024],[-0.148,0],[-0.099,0],[-0.194,0.171],[-0.099,0.17],[-0.049,0.117],[-0.099,0.145],[0,0],[0,0],[0,0.347],[-0.076,0.145],[-0.048,0.149],[0,0.146],[-0.026,0.298],[0,0.149],[0.027,0.295],[0,0],[-0.057,-0.009],[-0.067,0.029],[0,0.396],[0.099,0.196],[0.077,0.196],[0.051,0.126],[0.051,0.099],[0.146,0.075],[0.072,-0.017],[0.056,0.024],[0.174,0.027]],\"o\":[[-0.248,0],[-0.123,0.047],[-0.122,0.098],[-0.124,0.1],[-0.122,-0.096],[-0.124,-0.122],[-0.122,-0.123],[0,0],[0,0.149],[0,0.149],[0,0.25],[0,0.22],[0,0.001],[-0.006,-0.001],[-0.061,-0.005],[-0.149,0.027],[-0.062,0.015],[-0.067,-0.006],[-0.294,0.077],[-0.198,0],[0,0],[0,0],[0.126,0],[0.394,0],[0,0],[-0.22,0.023],[-0.058,0.014],[-0.077,-0.011],[-0.12,0.076],[-0.072,0.149],[-0.048,0.268],[-0.048,0.146],[-0.048,0.123],[0,0.146],[0.074,0.148],[0.194,0.126],[0.248,0],[0.148,0],[0.127,0.024],[0.096,0],[0.271,0],[0.125,-0.098],[0.048,-0.123],[0.098,-0.176],[0,0],[0,0],[0,-0.345],[0,-0.17],[0.074,-0.15],[0.027,-0.119],[0.027,-0.293],[0,-0.145],[0,-0.292],[0,0],[0.063,-0.009],[0.075,0.011],[0.347,-0.173],[0,-0.244],[-0.099,-0.17],[-0.022,-0.121],[-0.049,-0.119],[-0.095,-0.15],[-0.065,-0.04],[-0.063,0.015],[-0.171,-0.051],[0,0]],\"v\":[[-34.703,-67.173],[-35.292,-66.974],[-35.689,-66.876],[-35.882,-66.484],[-36.277,-66.288],[-36.667,-66.484],[-36.866,-66.876],[-37.259,-67.073],[-38.193,-66.974],[-38.146,-66.583],[-38.243,-66.191],[-38.193,-65.572],[-38.243,-65.011],[-38.243,-65.007],[-38.262,-65.009],[-38.439,-65.011],[-38.833,-64.814],[-39.031,-64.813],[-39.227,-64.814],[-40.01,-64.515],[-40.404,-64.814],[-40.848,-64.714],[-40.848,-61.91],[-40.503,-61.863],[-39.52,-61.91],[-39.52,-60.683],[-40.109,-60.587],[-40.299,-60.591],[-40.503,-60.587],[-40.702,-60.192],[-40.896,-59.796],[-40.896,-59.011],[-41.29,-58.816],[-41.389,-58.421],[-41.29,-58.028],[-40.896,-57.734],[-40.307,-57.536],[-39.716,-57.832],[-39.327,-57.832],[-38.93,-57.734],[-38.734,-57.589],[-38.146,-57.93],[-37.751,-58.225],[-37.751,-58.614],[-37.357,-58.911],[-34.014,-58.911],[-34.014,-59.479],[-34.31,-60.29],[-33.915,-60.485],[-33.72,-60.882],[-33.72,-61.272],[-33.72,-62.061],[-33.621,-62.454],[-33.72,-63.239],[-33.72,-64.025],[-33.542,-64.017],[-33.328,-64.025],[-32.637,-64.814],[-32.835,-65.402],[-33.229,-65.794],[-33.328,-66.191],[-33.328,-66.583],[-33.72,-66.876],[-33.93,-66.882],[-34.112,-66.876],[-34.508,-67.173]],\"c\":true},\"ix\":2},\"nm\":\"Path 75\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":75,\"ty\":\"sh\",\"ix\":76,\"ks\":{\"a\":0,\"k\":{\"i\":[[-0.001,0.001],[-0.012,-0.02],[0.032,0]],\"o\":[[0.043,-0.014],[-0.035,0.007],[0.001,0]],\"v\":[[-38.142,-65.003],[-38.044,-65.011],[-38.145,-65.002]],\"c\":true},\"ix\":2},\"nm\":\"Path 76\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":76,\"ty\":\"sh\",\"ix\":77,\"ks\":{\"a\":0,\"k\":{\"i\":[[0.028,-0.02],[0.047,-0.172],[0,-0.243],[0,0],[0.096,0.175],[0,0],[0.175,-0.022],[0.06,0.012],[0.039,0]],\"o\":[[-0.146,0.097],[-0.051,0.222],[0,0],[-0.024,-0.219],[0,0],[-0.072,-0.147],[-0.053,0.012],[-0.042,-0.008],[-0.036,0]],\"v\":[[293.064,-66.288],[292.969,-65.794],[292.969,-65.159],[294.147,-65.159],[294.147,-65.698],[293.947,-66.091],[293.457,-66.288],[293.283,-66.299],[293.16,-66.315]],\"c\":true},\"ix\":2},\"nm\":\"Path 77\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":77,\"ty\":\"sh\",\"ix\":78,\"ks\":{\"a\":0,\"k\":{\"i\":[[0.068,-0.04],[0.15,-0.246],[0.048,-0.249],[0.05,-0.342],[0.199,-0.296],[0.196,-0.297],[0.54,-0.538],[0,-1.182],[0,-0.34],[0,0],[-0.542,-0.54],[-0.737,-0.345],[-0.049,0.348],[0,0.589],[0,0.297],[-0.343,0.594],[0,0],[0.114,-0.018],[0.138,0.058],[0.542,0.394],[0.395,0.148],[0.245,0.049],[0.246,0],[0.294,0.097],[-0.342,0.49],[-0.147,0.297],[0,0.294],[0.049,0.296],[0.111,0.022],[0.074,0]],\"o\":[[-0.248,0.147],[-0.147,0.195],[-0.099,0.34],[-0.049,0.347],[-0.194,0.293],[-0.443,0.592],[-0.837,0.837],[0,0.342],[0,0],[0.785,0],[0.538,0.545],[0.197,-0.297],[0.098,-0.537],[0,-0.295],[0.049,-0.688],[0,0],[-0.129,-0.02],[-0.147,0.021],[-0.587,-0.242],[-0.34,-0.243],[-0.246,-0.048],[-0.244,-0.053],[-0.295,-0.053],[0.198,-0.589],[0.146,-0.246],[0.099,-0.245],[0,-0.347],[-0.125,0.022],[-0.078,-0.016],[-0.07,0]],\"v\":[[-127.507,-56.85],[-128.294,-56.457],[-128.294,-55.665],[-128.491,-54.69],[-129.082,-53.898],[-129.671,-53.115],[-131.046,-51.542],[-132.618,-48.935],[-132.423,-48.002],[-126.77,-48.002],[-125.147,-46.824],[-123.576,-45.642],[-122.79,-46.234],[-122.79,-47.805],[-122.986,-48.593],[-122.198,-50.166],[-122.398,-50.952],[-122.76,-50.937],[-123.182,-50.952],[-124.757,-51.936],[-125.542,-52.72],[-126.328,-52.916],[-127.115,-52.916],[-127.9,-53.309],[-127.312,-54.883],[-126.525,-55.276],[-126.328,-56.062],[-126.72,-56.85],[-127.072,-56.872],[-127.301,-56.904]],\"c\":true},\"ix\":2},\"nm\":\"Path 78\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":78,\"ty\":\"sh\",\"ix\":79,\"ks\":{\"a\":0,\"k\":{\"i\":[[0,0],[0.074,-0.172],[0.05,-0.171],[0.05,-0.125],[0.171,-0.226],[0,0],[-0.069,-0.012],[-0.05,0.027],[-0.124,0.147],[-0.123,0.12],[-0.073,0.122],[-0.045,0.121],[-0.026,0.145],[-0.026,0.147],[0,0]],\"o\":[[-0.048,0.172],[-0.073,0.175],[-0.022,0.121],[-0.1,0.266],[0,0],[0.058,-0.022],[0.073,0.013],[0.171,-0.122],[0.124,-0.147],[0.126,-0.124],[0.075,-0.101],[0.054,-0.15],[0.024,-0.122],[0,0],[0,0]],\"v\":[[270.65,-55.375],[270.452,-54.883],[270.158,-54.488],[270.158,-54.094],[269.668,-53.502],[269.472,-53.115],[269.671,-53.113],[269.863,-53.115],[270.158,-53.605],[270.452,-53.998],[270.845,-54.194],[270.941,-54.587],[271.142,-54.979],[271.142,-55.375],[270.748,-55.472]],\"c\":true},\"ix\":2},\"nm\":\"Path 79\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":79,\"ty\":\"sh\",\"ix\":80,\"ks\":{\"a\":0,\"k\":{\"i\":[[0.079,-0.011],[0.109,0.022],[0,0],[-0.245,-0.193],[-0.247,-0.197],[-0.243,-0.192],[-0.54,0],[-0.343,0.348],[-0.099,0.147],[0.295,0.049],[0.137,-0.012],[0.12,0.025],[0.295,0.148],[0.392,0.196],[0.07,0]],\"o\":[[-0.12,0.017],[0,0],[0.246,0.145],[0.247,0.194],[0.246,0.196],[0.394,0.348],[0.49,0],[0.149,-0.144],[-0.293,-0.095],[-0.125,-0.026],[-0.133,0.013],[-0.296,-0.053],[-0.394,-0.193],[-0.065,-0.026],[-0.079,0]],\"v\":[[-141.711,-54.106],[-142.059,-54.094],[-142.844,-53.702],[-142.059,-53.309],[-141.467,-52.523],[-140.682,-51.936],[-139.501,-51.145],[-138.52,-51.936],[-138.125,-52.523],[-138.913,-52.916],[-139.311,-52.917],[-139.697,-52.916],[-140.483,-53.309],[-141.27,-54.094],[-141.473,-54.129]],\"c\":true},\"ix\":2},\"nm\":\"Path 80\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":80,\"ty\":\"sh\",\"ix\":81,\"ks\":{\"a\":0,\"k\":{\"i\":[[0.031,-0.013],[0.171,-0.075],[0.127,-0.072],[0.172,-0.12],[0.147,-0.078],[-0.295,0],[-0.147,0.173],[-0.069,0.097],[-0.148,0.368],[0.06,0.008],[0.039,0]],\"o\":[[-0.169,0.074],[-0.15,0.075],[-0.17,0.097],[-0.126,0.073],[0.246,0.146],[0.246,0],[0.075,-0.097],[0.248,-0.296],[-0.054,0.01],[-0.04,-0.005],[-0.034,0]],\"v\":[[260.621,-44.855],[260.228,-44.562],[259.832,-44.364],[259.444,-43.971],[259.051,-43.771],[259.787,-43.481],[260.423,-43.577],[260.522,-43.971],[261.014,-44.855],[260.84,-44.861],[260.72,-44.872]],\"c\":true},\"ix\":2},\"nm\":\"Path 81\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":81,\"ty\":\"sh\",\"ix\":82,\"ks\":{\"a\":0,\"k\":{\"i\":[[0.031,-0.012],[0.197,-0.247],[0.071,-0.125],[0.096,-0.122],[0.128,-0.073],[0.32,-0.072],[0.148,0],[0.124,0.005],[0.146,-0.011],[0,0],[0.148,-0.029],[0,0],[0.098,0.018],[0.165,-0.078],[0.149,-0.077],[0.147,-0.071],[0.145,-0.048],[0.245,0],[0.222,0.076],[0.419,0.272],[0.145,0.122],[0.27,0.271],[0.148,0.098],[0.17,0.048],[0.466,0.126],[0.173,0.098],[0,-0.175],[-0.024,-0.344],[0,-0.147],[0,-0.296],[0.023,-0.124],[0.049,-0.122],[0.1,-0.148],[0.096,-0.1],[0.099,-0.123],[0.072,-0.172],[0,-0.467],[0.176,0],[0.122,0.176],[0.071,0.149],[0.097,-0.169],[0.12,-0.076],[0.067,0.018],[0.06,-0.038],[0.096,-0.119],[0,-0.42],[-0.144,-0.199],[-0.121,-0.074],[-0.075,-0.17],[-0.075,-0.101],[-0.171,-0.051],[0,0],[-0.218,0.1],[0,0],[0,0],[0,-0.297],[0,0],[0.025,-0.168],[0.029,-0.17],[0,-0.15],[0,-0.172],[0,0],[0.075,-0.321],[0.077,-0.095],[0.152,-0.076],[0.074,0.011],[0.056,-0.011],[0.099,-0.173],[0.176,-0.267],[0.171,-0.195],[0.223,-0.248],[0,0.149],[0,0.171],[0.027,0.292],[0.026,-0.096],[0.051,-0.172],[0.024,-0.292],[0,0],[0,0],[0,0],[0.075,0.146],[0.026,0.148],[-0.047,0.296],[0,0],[0.051,-0.172],[0.027,-0.168],[0.025,-0.295],[0.149,0],[0.295,0],[0,0],[0,0],[0.073,0.121],[0.101,0.072],[0.147,0.119],[0.121,0.052],[0.271,-0.173],[0.123,-0.02],[0.297,0.026],[0.491,-0.027],[0.122,-0.027],[0.147,-0.027],[0.124,0],[0.103,0.014],[0.162,-0.058],[0.169,-0.296],[0.026,-0.146],[0,-0.146],[0,-0.32],[0,0],[0,-0.169],[-0.023,-0.293],[0.32,-0.097],[0.121,-0.049],[0.099,-0.149],[0.076,-0.173],[0.049,-0.123],[0.051,-0.148],[0.027,-0.149],[-0.199,0],[-0.343,0],[-0.343,0.049],[-0.002,0],[0.016,-0.104],[0.049,-0.127],[0.072,-0.147],[0,0],[0.074,-0.174],[0,-0.225],[-0.542,0],[0,0],[-0.025,0.468],[-0.169,0.199],[-0.295,0.1],[0,0.442],[0.097,0.42],[0,0.146],[0,0.295],[0.149,0],[0.345,0.026],[-0.123,0.097],[-0.121,0.071],[-0.146,0.026],[-0.344,0],[-0.296,0.199],[-0.494,0.146],[-0.126,0],[-0.146,0],[-0.132,-0.007],[-0.139,0.01],[-0.123,0],[-0.15,0],[-0.197,-0.011],[-0.211,0.013],[-0.15,0.027],[0.175,-0.028],[0.121,0],[0.113,0.008],[0.151,-0.027],[0.685,0],[0,0],[0,0],[0,0],[-0.198,0.074],[-0.269,0.169],[-0.098,0.125],[-0.174,0.1],[-0.171,0.048],[-0.122,0.025],[-0.115,-0.022],[-0.129,0.085],[-0.077,0.122],[-0.05,0.123],[-0.099,0.093],[-0.074,-0.173],[-0.074,-0.097],[-0.145,-0.072],[-0.246,0],[-0.175,0.198],[-0.12,0.121],[-0.418,0],[0,0.148],[0,0.172],[0.023,0.151],[0.028,0.124],[0,0],[0,0],[-0.32,0.068],[-0.155,-0.041],[-0.155,0.012],[-0.15,0.217],[0,0.347],[0,0],[-0.052,0.149],[-0.021,0.125],[-0.051,0.37],[0,0],[0.02,0.295],[0,0],[-0.098,0.223],[-0.173,0.12],[-0.049,0.147],[-0.049,0.467],[-0.026,0.118],[-0.122,0.271],[-0.05,0.175],[0,0.345],[0.124,0.246],[0.096,0.146],[0.072,0.127],[0.099,0.316],[0.024,0.121],[0.097,0.322],[0.049,0.123],[0.119,0.099],[0.121,0.053],[0.27,0.05],[0,0],[0,0],[-0.222,0],[0,0],[-0.219,-0.073],[-0.146,-0.05],[-0.068,0.011],[-0.063,-0.025],[-0.144,-0.046],[-0.343,-0.024],[-0.341,-0.02],[0,0.148],[0.025,0.469],[0,0],[-0.176,0.049],[-0.123,0.051],[-0.072,0.094],[-0.024,0.123],[-0.024,0.269],[-0.047,0.121],[-0.124,0.101],[-0.124,0.048],[-0.148,0.027],[-0.118,-0.013],[-0.147,0.041],[-0.171,0.051],[-0.443,0.075],[0,0],[-0.118,0.026],[-0.096,0.096],[-0.074,0.121],[-0.049,0.099],[-0.099,0.098],[-0.098,0.124],[-0.074,0.147],[-0.049,0.126],[0,0.149],[0.06,0.009],[0.037,0]],\"o\":[[-0.295,0.124],[-0.076,0.1],[-0.074,0.119],[-0.098,0.123],[-0.267,0.197],[-0.125,0.024],[-0.149,0.012],[-0.121,-0.007],[0,0],[-0.145,0.024],[0,0],[-0.114,0.009],[-0.157,-0.026],[-0.172,0.07],[-0.123,0.072],[-0.148,0.075],[-0.223,0.099],[-0.246,0],[-0.489,-0.147],[-0.171,-0.096],[-0.296,-0.247],[-0.12,-0.122],[-0.148,-0.096],[-0.471,-0.126],[-0.199,-0.05],[-0.023,0.148],[-0.024,0.342],[0,0.147],[0.023,0.296],[0,0.146],[-0.026,0.124],[-0.074,0.173],[-0.098,0.123],[-0.099,0.095],[-0.126,0.145],[-0.197,0.391],[-0.177,0],[-0.218,0],[-0.074,-0.118],[-0.101,0.174],[-0.049,0.099],[-0.063,0.036],[-0.069,-0.019],[-0.149,0.095],[-0.245,0.297],[0,0.245],[0.077,0.123],[0.176,0.124],[0.05,0.126],[0.1,0.148],[0,0],[0.242,0],[0,0],[0,0],[-0.023,0.295],[0,0],[0,0.197],[-0.023,0.172],[-0.022,0.126],[0,0.172],[0,0],[0,0.344],[-0.022,0.119],[-0.097,0.122],[-0.065,0.027],[-0.061,-0.008],[-0.196,0.071],[-0.151,0.268],[-0.124,0.217],[-0.196,0.247],[0,-0.15],[0,-0.169],[0.028,-0.294],[-0.073,0.069],[-0.051,0.175],[-0.072,0.271],[0,0],[0,0],[0,0],[-0.127,-0.097],[-0.07,-0.151],[-0.073,-0.268],[0,0],[-0.076,0.17],[-0.048,0.172],[-0.048,0.273],[-0.147,0.025],[-0.293,0.024],[0,0],[0,0],[-0.124,-0.102],[-0.073,-0.098],[-0.119,-0.097],[-0.099,-0.077],[-0.171,0.297],[-0.096,0.048],[-0.27,0.049],[-0.494,-0.027],[-0.148,0],[-0.152,0.026],[-0.12,0.025],[-0.108,0.009],[-0.155,-0.02],[-0.32,0.12],[-0.078,0.149],[-0.023,0.126],[-0.023,0.323],[0,0],[-0.025,0.169],[0,0.298],[-0.343,0],[-0.125,0.026],[-0.176,0.074],[-0.097,0.15],[-0.048,0.122],[-0.049,0.146],[-0.045,0.147],[0.175,0.022],[0.343,0.027],[0.344,0],[0.002,0],[0.005,0.103],[-0.023,0.122],[-0.051,0.168],[0,0],[-0.074,0.148],[-0.076,0.197],[0,0.537],[0,0],[0,-0.468],[0.027,-0.291],[0.194,-0.219],[0.419,-0.148],[0,-0.418],[-0.025,-0.148],[-0.025,-0.297],[-0.146,0],[-0.345,0],[0.049,-0.15],[0.122,-0.101],[0.128,-0.073],[0.321,-0.072],[0.37,0],[0.441,-0.29],[0.12,-0.028],[0.124,0],[0.157,-0.016],[0.114,0.005],[0.147,0],[0.124,0],[0.255,-0.025],[0.161,0.008],[0.144,0],[-0.15,0.097],[-0.121,0.024],[-0.119,0.011],[-0.144,-0.011],[-0.662,0.146],[0,0],[0,0],[0,0],[0.221,0],[0.292,-0.123],[0.126,-0.078],[0.124,-0.146],[0.147,-0.096],[0.124,-0.024],[0.113,-0.021],[0.16,0.031],[0.12,-0.078],[0.072,-0.123],[0.049,-0.148],[0.076,0.17],[0.047,0.121],[0.096,0.147],[0.201,0.123],[0.267,0],[0.096,-0.121],[0.299,-0.3],[0.023,-0.148],[0,-0.178],[0,-0.173],[0,-0.122],[0,0],[0,0],[0.247,-0.246],[0.178,-0.044],[0.124,0.034],[0.297,-0.027],[0.195,-0.272],[0,0],[0,-0.173],[0.022,-0.121],[0.125,-0.368],[0,0],[0.021,-0.295],[0,0],[0,-0.245],[0.098,-0.198],[0.123,-0.076],[0.172,-0.418],[0,-0.151],[0.072,-0.299],[0.074,-0.17],[0.124,-0.322],[0,-0.294],[-0.077,-0.171],[-0.074,-0.125],[-0.174,-0.27],[-0.029,-0.125],[-0.099,-0.319],[-0.029,-0.121],[-0.05,-0.147],[-0.098,-0.072],[-0.267,-0.096],[0,0],[0,0],[0.222,0],[0,0],[0.243,0],[0.147,0.049],[0.061,0.024],[0.068,-0.012],[0.149,0.071],[0.296,0.121],[0.341,0.022],[0.027,-0.145],[0.049,-0.467],[0,0],[0.197,0],[0.12,-0.024],[0.124,-0.048],[0.076,-0.1],[0.074,-0.271],[0,-0.126],[0.051,-0.147],[0.097,-0.072],[0.147,-0.051],[0.124,-0.021],[0.14,0.017],[0.168,-0.046],[0.418,-0.147],[0,0],[0.122,0],[0.125,-0.024],[0.103,-0.101],[0.071,-0.126],[0.071,-0.122],[0.119,-0.123],[0.098,-0.121],[0.05,-0.125],[0.05,-0.121],[-0.067,0.014],[-0.038,-0.006],[-0.031,0]],\"v\":[[256.983,-42.989],[256.199,-42.497],[256.1,-42.1],[255.9,-41.71],[255.507,-41.514],[254.723,-41.022],[254.331,-41.022],[253.933,-41.021],[253.543,-41.022],[253.149,-41.022],[252.756,-40.823],[252.361,-40.823],[252.048,-40.848],[251.579,-40.823],[251.28,-40.429],[250.887,-40.236],[250.498,-40.04],[249.907,-39.843],[249.316,-40.04],[248.134,-40.629],[247.646,-40.923],[247.055,-41.71],[246.66,-42.004],[246.271,-42.298],[244.993,-42.497],[244.496,-42.792],[244.301,-42.397],[244.301,-41.514],[244.4,-41.119],[244.496,-40.333],[244.4,-39.941],[244.4,-39.548],[244.007,-39.251],[243.813,-38.856],[243.418,-38.661],[243.124,-38.266],[243.027,-37.089],[242.629,-36.895],[242.238,-37.288],[242.043,-37.679],[241.746,-37.188],[241.65,-36.792],[241.452,-36.792],[241.257,-36.792],[240.959,-36.402],[240.467,-35.418],[240.663,-34.827],[241.055,-34.63],[241.451,-34.239],[241.451,-33.843],[241.842,-33.548],[242.043,-33.548],[242.629,-33.843],[242.629,-32.861],[241.155,-32.861],[241.055,-32.073],[241.055,-31.584],[241.155,-31.092],[240.858,-30.701],[240.809,-30.329],[240.858,-29.911],[240.858,-28.635],[240.858,-27.747],[240.759,-27.356],[240.366,-27.158],[240.152,-27.152],[239.975,-27.158],[239.585,-26.764],[239.189,-25.979],[238.699,-25.489],[238.107,-24.798],[238.009,-25.195],[238.206,-25.586],[238.107,-26.371],[237.814,-26.275],[237.712,-25.783],[237.616,-24.999],[236.144,-24.999],[236.144,-23.423],[235.751,-23.326],[235.355,-23.521],[235.157,-23.916],[235.254,-24.702],[234.865,-24.798],[234.569,-24.406],[234.569,-23.916],[234.472,-23.128],[234.077,-23.028],[233.34,-23.028],[233.34,-20.669],[232.504,-20.669],[232.111,-20.867],[232.011,-21.26],[231.621,-21.553],[231.227,-21.654],[230.733,-20.867],[230.342,-20.771],[229.556,-20.867],[228.277,-20.867],[227.886,-20.867],[227.49,-20.669],[227.095,-20.571],[226.782,-20.589],[226.311,-20.571],[225.626,-19.883],[225.425,-19.492],[225.425,-19.1],[225.425,-18.263],[223.634,-18.263],[223.559,-17.823],[223.657,-17.033],[222.772,-16.936],[222.381,-16.835],[222.085,-16.444],[221.787,-16.048],[221.689,-15.656],[221.491,-15.263],[221.395,-14.82],[221.889,-14.674],[222.772,-14.674],[223.657,-14.674],[223.662,-14.674],[223.657,-14.378],[223.559,-13.982],[223.264,-13.593],[223.066,-13.2],[222.772,-12.804],[222.676,-12.214],[223.681,-11.233],[224.443,-11.233],[224.443,-12.414],[224.639,-13.2],[225.425,-13.496],[226.214,-14.279],[225.722,-15.263],[225.722,-15.656],[225.722,-16.394],[225.329,-16.348],[224.443,-16.394],[224.443,-16.835],[224.832,-17.033],[225.228,-17.231],[226.115,-17.231],[226.999,-17.626],[228.181,-18.409],[228.574,-18.409],[228.965,-18.504],[229.384,-18.506],[229.754,-18.504],[230.146,-18.608],[230.537,-18.707],[231.178,-18.711],[231.719,-18.707],[232.111,-18.804],[231.816,-18.409],[231.423,-18.409],[231.076,-18.414],[230.637,-18.409],[229.042,-17.626],[227.095,-17.626],[227.095,-14.969],[227.861,-14.969],[228.379,-15.165],[229.16,-15.556],[229.358,-15.953],[229.754,-16.348],[230.146,-16.641],[230.537,-16.738],[230.883,-16.715],[231.326,-16.738],[231.522,-17.131],[231.522,-17.525],[231.915,-17.719],[232.21,-17.326],[232.21,-16.936],[232.6,-16.641],[233.243,-16.544],[233.783,-16.936],[233.978,-17.326],[235.061,-17.525],[235.061,-17.916],[235.254,-18.311],[235.061,-18.707],[234.96,-19.1],[235.355,-19.246],[239.779,-19.196],[240.467,-19.782],[240.946,-19.743],[241.353,-19.687],[242.043,-20.079],[242.431,-20.894],[242.431,-22.807],[242.533,-23.227],[242.629,-23.621],[243.223,-24.406],[243.223,-24.798],[243.124,-25.586],[243.124,-26.227],[243.124,-26.863],[243.615,-27.158],[244.007,-27.356],[244.107,-28.535],[244.204,-28.925],[244.496,-29.716],[244.793,-30.109],[244.894,-30.995],[244.793,-31.779],[244.4,-32.073],[244.204,-32.47],[243.714,-33.253],[243.714,-33.647],[243.321,-34.435],[243.321,-34.827],[243.124,-35.221],[242.728,-35.322],[241.941,-35.517],[241.941,-36.105],[243.884,-36.105],[244.4,-36.402],[244.598,-36.402],[245.184,-36.105],[245.579,-35.909],[245.775,-35.909],[245.973,-35.909],[246.168,-35.517],[247.055,-35.418],[247.936,-35.322],[248.037,-35.711],[247.964,-36.895],[250.077,-36.895],[250.498,-37.188],[250.887,-37.288],[251.28,-37.382],[251.381,-37.778],[251.381,-38.563],[251.477,-38.956],[251.676,-39.352],[252.068,-39.447],[252.462,-39.647],[252.824,-39.64],[253.249,-39.647],[253.642,-39.941],[254.822,-40.236],[255.214,-40.236],[255.605,-40.333],[255.996,-40.429],[256.1,-40.823],[256.199,-41.218],[256.592,-41.415],[256.886,-41.808],[257.28,-42.1],[257.379,-42.497],[257.379,-42.989],[257.189,-42.993],[257.077,-43.005]],\"c\":true},\"ix\":2},\"nm\":\"Path 82\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":82,\"ty\":\"sh\",\"ix\":83,\"ks\":{\"a\":0,\"k\":{\"i\":[[-0.007,0],[-0.001,-0.012]],\"o\":[[0,0.013],[-0.006,-0.021]],\"v\":[[223.657,-14.82],[223.658,-14.783]],\"c\":true},\"ix\":2},\"nm\":\"Path 83\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":83,\"ty\":\"sh\",\"ix\":84,\"ks\":{\"a\":0,\"k\":{\"i\":[[0.294,0],[0.246,-0.048],[0.59,-0.099],[0.298,0],[0.306,0.021],[0.515,-0.085],[0.346,-0.148],[0.294,-0.196],[0.244,0.199],[0.292,0.195],[0.633,0],[0.887,-0.343],[0.149,0.021],[0.11,-0.022],[0.297,-0.296],[0,0],[0.147,-0.296],[0.147,-0.196],[0.346,-0.15],[0.296,0],[0.223,0.018],[0.303,-0.056],[0.344,0],[0,0],[0.442,0],[0.306,-0.022],[0.513,0.085],[0.246,0.098],[0.341,0.147],[0,0],[0.046,-0.344],[0.046,-0.249],[0,-0.292],[0,-0.486],[0.293,0],[0.295,0],[0.542,0],[0,0],[0,0],[0.048,-0.589],[0.048,-0.588],[0.05,-0.29],[0,-0.588],[0,0],[0,0],[0.783,-0.494],[0.195,-0.098],[0.343,-0.146],[0.25,-0.102],[0.139,0.025],[0.098,-0.051],[0.198,-0.245],[0.149,-0.293],[0.345,-0.641],[0.197,-0.392],[0.145,-0.246],[0.15,-0.345],[0.149,-0.246],[0.146,-0.248],[0.183,0.051],[0.097,-0.019],[0.543,-0.049],[0.104,-0.98],[0.05,-0.244],[0.147,-0.196],[0.29,-0.242],[0.246,-0.145],[0.197,-0.249],[0,0],[-0.589,-0.051],[-0.243,-0.051],[-0.135,0.013],[-0.121,-0.025],[-0.292,-0.195],[0,0],[0,-0.343],[0,-1.867],[0,0],[0.098,-0.24],[0.198,-0.246],[0.166,0.048],[0.047,-0.097],[0,-0.302],[-0.053,-0.293],[-0.052,-0.245],[0,-0.297],[0,0],[-0.243,-0.497],[-0.244,-0.295],[-0.244,-0.195],[-0.247,-0.149],[-0.344,-0.101],[-0.134,0.023],[-0.126,-0.051],[-0.195,-0.248],[-0.345,-0.393],[-0.247,-0.143],[-0.155,0.031],[-0.12,-0.018],[-0.148,-0.882],[-0.193,-0.294],[-0.344,-0.147],[-0.637,-0.244],[-0.688,-0.048],[0,-0.296],[-0.051,-0.25],[-0.15,-0.244],[-0.246,-0.193],[-0.248,-0.148],[-0.294,-0.198],[-0.638,-0.197],[-0.136,0.013],[-0.124,-0.023],[-0.298,-0.05],[-0.443,0],[-0.248,0.346],[-0.195,0.15],[-0.592,0],[-0.296,0],[-0.297,0],[0,0],[-0.738,-0.1],[-0.248,-0.1],[-0.295,-0.145],[-0.783,0],[-0.39,0.052],[-0.294,0.095],[-0.126,-0.029],[-0.131,0.079],[-0.248,0.196],[-0.291,0.197],[-0.342,0.051],[-0.59,0],[-0.589,0.045],[0,0],[-0.445,0.142],[-0.787,0],[-0.297,-0.344],[-0.1,-0.196],[-0.096,-0.346],[-0.099,-0.249],[-0.148,-0.195],[-0.248,-0.145],[-0.345,0],[0,0],[0,0],[0,-0.296],[0.05,-0.591],[0.05,-0.24],[0.145,-0.348],[0,-0.291],[0,-0.937],[0.195,-0.099],[0.148,0.025],[0.097,-0.049],[0.196,-0.199],[-0.295,-0.098],[-0.391,-0.491],[-0.196,-0.545],[-0.196,-0.195],[-0.198,-0.098],[-0.194,-0.194],[-0.148,-0.243],[-0.393,-0.638],[-0.149,-0.246],[-0.247,-0.592],[-0.046,-0.294],[-0.046,-0.688],[-0.147,-0.541],[-0.05,-0.346],[0,-0.295],[0,0],[-0.293,-0.491],[-0.15,-0.292],[0,-0.445],[0.051,-0.438],[0.046,-0.251],[0.145,-0.243],[0.197,-0.296],[0.146,-0.982],[0.097,-0.542],[0.043,-0.25],[0.196,-0.392],[0,-0.342],[0,-0.595],[-0.295,-0.835],[-0.243,-0.296],[-0.046,-0.347],[-0.046,-0.249],[-0.046,-0.25],[-0.147,-0.293],[-0.196,-0.248],[-0.59,-0.348],[-0.048,-0.299],[-0.047,-0.341],[-0.049,-0.242],[-0.049,-0.249],[0,-0.345],[0,0],[-0.054,-0.542],[-0.054,-0.244],[-0.344,-0.541],[-0.489,-1.033],[-0.049,-0.249],[-0.05,-0.246],[-0.1,-0.294],[-0.294,-0.544],[-0.244,-0.295],[-0.05,-0.343],[-0.149,-0.539],[-0.099,-0.296],[-0.051,-0.346],[0,0],[0.198,-0.296],[0.196,-0.293],[0.048,-0.241],[-0.295,0],[0,0],[-0.046,-0.248],[-0.099,-0.195],[-0.245,-0.198],[-0.344,0],[0,0],[-0.64,0.198],[-0.645,0],[0,0],[-0.151,0.34],[-0.199,0.154],[-0.248,0.05],[-0.297,0],[-0.54,0.151],[-0.196,0.148],[-0.196,0.297],[-0.147,0.2],[-0.244,0.201],[-0.294,0.198],[-0.293,0.296],[-0.197,0.392],[-0.293,0.541],[-0.297,0.245],[-0.395,0.642],[-0.146,0.244],[-0.295,0.295],[-0.148,0.391],[0,0.783],[0.146,0.392],[0.145,0.346],[0.1,0.244],[-0.346,0.053],[-0.244,0.053],[-0.133,-0.013],[-0.123,0.027],[-0.296,0.245],[-0.244,0.248],[-0.292,0.194],[-0.292,0.247],[-0.1,0.196],[0,0.295],[0.196,0.884],[0.144,0.539],[0.246,0.538],[0,0.692],[-0.244,0.294],[-0.244,0.292],[-0.346,0.247],[-0.194,0.096],[-0.196,0.246],[-0.246,0.346],[-0.25,0.152],[-0.638,0.146],[-0.246,0.053],[-0.134,-0.012],[-0.123,0.027],[-0.34,0.145],[-0.444,0.44],[-0.148,0.641],[-0.044,0.589],[0,0.296],[0,0],[0.05,0.441],[0,0.342],[0,0],[0.199,0.297],[0.443,0.938],[-0.049,0.589],[0,0.288],[0.049,0.294],[0.049,0.295],[0.049,0.293],[0,0],[-0.103,0.392],[-0.05,0.244],[-0.248,0.295],[-0.489,1.033],[-0.097,0.241],[-0.147,0.348],[-0.1,0.247],[-0.341,0.54],[-0.245,0.197],[-0.25,0.244],[-0.2,0.248],[-0.592,0.493],[-0.297,0.292],[-0.344,0.201],[-0.495,0.442],[-0.197,0.244],[-0.24,0.297],[-0.201,0.14],[-0.198,0.097],[-0.293,0.149],[-0.295,0.196],[-0.199,0.199],[-0.149,0.299],[-0.346,0.834],[-0.192,0.247],[-0.348,0.241],[-0.293,0.245],[-0.149,0.296],[-0.096,0.345],[0,0.59],[-0.052,0.592],[0,1.029],[0,0],[0.443,0],[0.448,-0.195],[0.296,-0.151],[1.132,0],[0.539,0.049],[0,0],[0.59,-0.047],[0.591,0],[0.294,0.048],[0,0],[0.149,0.347],[0.149,0.244],[0.146,0.3],[0,0],[0.15,0.194],[0.294,0.194],[0.143,-0.025],[0.122,0.047],[0.295,0.299],[0.296,0.247],[0.248,0.199],[0.295,0.148],[0.297,0.099],[0.136,-0.026],[0.122,0.049],[0.247,0.195],[0.149,0.642],[0,0.246],[0.246,0.488],[0.246,0.3],[0.34,0.692],[0,0.395],[0,0.293],[0,0],[0.198,0.538],[0.144,0.341],[0.343,0.538],[0.194,0.248],[0.143,0.249],[0.1,0.296],[0,0.296],[0.1,0.545],[0.049,0.242],[0.198,0.291],[0.297,0.689],[0.049,0.296],[0.101,0.546],[0.296,0.54],[0.243,0.292],[0.25,0.245],[0.244,0.246],[0.198,0.246],[0.048,0.347],[0.048,0.244],[0.146,0.247],[0.298,0.194],[0.293,0.103],[0.148,-0.021],[0.11,0.023],[0.345,0.049],[0,0],[0.784,-0.246],[0,0],[0,0],[0.59,0],[0.393,0.2],[0.296,0.248],[0.685,0.344],[1.133,0],[0.787,0],[0.44,0.098],[-0.05,-0.734],[0,-0.299],[0.047,-0.934],[0.444,0],[0,0],[0.295,0.05],[0.296,0.296],[0.344,0.147],[0.392,0],[0,0],[0.145,0.292],[0.142,0.196],[0.247,0.145],[0.346,0.148],[0.242,0.048],[0.592,0.047],[0.226,-0.017],[0.302,0.053],[0.59,0.296],[0.147,0.737],[0,0.29],[-0.151,0.298],[-0.149,0.345],[0,0.297],[0.148,0.246],[0.246,0.147],[0.298,0.196],[-0.345,0.147],[-0.247,0.101],[-0.249,0.048],[0.239,0.145],[0.248,0.096],[0.637,0]],\"o\":[[-0.3,0],[-0.587,0.099],[-0.245,0.049],[-0.389,0.021],[-0.429,-0.032],[-0.343,0.049],[-0.346,0.149],[-0.243,-0.196],[-0.246,-0.196],[-0.494,-0.343],[-0.986,0],[-0.137,0.056],[-0.12,-0.018],[-0.393,0.152],[0,0],[-0.1,0.293],[-0.099,0.249],[-0.248,0.295],[-0.245,0.098],[-0.259,0.022],[-0.284,-0.022],[-0.296,0.048],[0,0],[-0.442,0],[-0.389,-0.02],[-0.428,0.031],[-0.243,-0.05],[-0.347,-0.102],[0,0],[-0.147,0.345],[-0.048,0.246],[-0.048,0.246],[-0.05,0.49],[-0.293,0],[-0.294,0],[-0.545,0],[0,0],[0,0],[-0.052,0.593],[-0.049,0.593],[0,0.343],[-0.097,0.541],[0,0],[0,0],[-0.048,0.985],[-0.244,0.146],[-0.296,0.197],[-0.247,0.096],[-0.121,0.048],[-0.142,-0.025],[-0.245,0.148],[-0.196,0.246],[-0.341,0.645],[-0.146,0.345],[-0.098,0.248],[-0.198,0.345],[-0.148,0.294],[-0.146,0.244],[-0.09,0.149],[-0.117,-0.032],[-0.491,0.147],[0,0.981],[0,0.295],[-0.048,0.247],[-0.197,0.299],[-0.2,0.152],[-0.246,0.148],[0,0],[0.591,0.055],[0.293,0],[0.124,0.026],[0.135,-0.014],[0.343,0.052],[0,0],[-0.148,0.295],[0,1.869],[0,0],[0,0.249],[-0.147,0.348],[-0.073,0.099],[-0.165,-0.049],[-0.099,0.196],[0,0.344],[0.047,0.247],[0.051,0.248],[0,0],[0.05,0.591],[0.151,0.343],[0.198,0.242],[0.25,0.198],[0.293,0.145],[0.122,0.046],[0.137,-0.026],[0.293,0.144],[0.345,0.392],[0.194,0.25],[0.144,0.089],[0.108,-0.022],[0,0.937],[0.049,0.342],[0.201,0.292],[0.587,0.294],[0.639,0.242],[0.048,0.296],[0,0.295],[0.048,0.245],[0.147,0.247],[0.247,0.197],[0.295,0.192],[0.488,0.393],[0.123,0.026],[0.134,-0.012],[0.294,0.051],[0.39,0.1],[0.442,0],[0.147,-0.195],[0.442,-0.347],[0.297,0],[0.291,0],[0,0],[0.785,0],[0.244,0],[0.291,0.096],[0.689,0.344],[0.444,0],[0.3,-0.045],[0.115,-0.045],[0.144,0.033],[0.244,-0.147],[0.246,-0.201],[0.3,-0.197],[0.541,-0.095],[0.588,0],[0,0],[0.445,-0.102],[0.684,-0.247],[0.489,0],[0.146,0.197],[0.198,0.299],[0.1,0.244],[0.1,0.246],[0.196,0.248],[0.244,0.149],[0,0],[0,0],[0,0.297],[0,0.591],[0,0.295],[-0.098,0.347],[-0.101,0.241],[0,0.94],[-0.147,0.196],[-0.1,0.049],[-0.149,-0.024],[-0.246,0.145],[0.295,0.096],[0.59,0.199],[0.347,0.444],[0.102,0.293],[0.196,0.195],[0.244,0.149],[0.193,0.2],[0.395,0.639],[0.147,0.244],[0.292,0.538],[0.097,0.293],[0.148,0.639],[0.05,0.592],[0.097,0.348],[0.048,0.243],[0,0],[0,0.591],[0.148,0.296],[0.148,0.346],[0,0.445],[-0.05,0.297],[-0.051,0.244],[-0.152,0.295],[-0.589,0.789],[-0.049,0.542],[-0.049,0.242],[-0.152,0.391],[-0.149,0.295],[-0.051,0.589],[0,0.928],[0.149,0.396],[0.242,0.296],[0.05,0.245],[0.05,0.247],[0.05,0.296],[0.146,0.296],[0.445,0.491],[0,0.292],[0.048,0.39],[0.051,0.252],[0.05,0.245],[0.05,0.29],[0,0],[0,0.589],[0,0.244],[0.145,0.638],[0.637,0.933],[0.099,0.243],[0.048,0.247],[0.05,0.294],[0.196,0.589],[0.148,0.345],[0.249,0.294],[0.095,0.54],[0.046,0.297],[0.149,0.341],[0,0],[0,0.396],[-0.192,0.296],[-0.148,0.245],[0.295,0.051],[0,0],[0,0.3],[0.048,0.242],[0.147,0.248],[0.244,0.196],[0,0],[0.687,0],[0.588,-0.146],[0,0],[0.149,-0.346],[0.097,-0.247],[0.196,-0.143],[0.244,-0.048],[0.588,-0.048],[0.248,-0.046],[0.293,-0.245],[0.099,-0.196],[0.149,-0.242],[0.247,-0.195],[0.344,-0.245],[0.292,-0.295],[0.248,-0.538],[0.149,-0.343],[0.588,-0.494],[0.145,-0.244],[0.195,-0.345],[0.296,-0.299],[0.244,-0.738],[0,-0.449],[-0.099,-0.347],[-0.098,-0.244],[0.343,-0.149],[0.244,0],[0.124,-0.025],[0.136,0.013],[0.396,-0.098],[0.245,-0.197],[0.246,-0.248],[0.297,-0.195],[0.198,-0.144],[0.1,-0.198],[0,-0.934],[-0.1,-0.536],[-0.147,-0.588],[-0.296,-0.587],[0,-0.44],[0.246,-0.296],[0.248,-0.295],[0.2,-0.101],[0.245,-0.149],[0.249,-0.289],[0.196,-0.247],[0.539,-0.387],[0.246,-0.051],[0.121,-0.024],[0.137,0.013],[0.347,-0.097],[0.589,-0.3],[0.442,-0.443],[0.15,-0.538],[0,-0.295],[0,0],[0,-0.442],[-0.048,-0.349],[0,0],[-0.249,-0.244],[-0.539,-0.834],[0.097,-0.54],[0,-0.293],[0,-0.35],[-0.049,-0.294],[-0.049,-0.294],[0,0],[0,-0.444],[0.047,-0.246],[0.097,-0.348],[0.735,-0.891],[0.099,-0.248],[0.147,-0.348],[0.099,-0.245],[0.243,-0.591],[0.194,-0.296],[0.246,-0.196],[0.246,-0.246],[0.492,-0.542],[0.293,-0.248],[0.294,-0.3],[0.54,-0.339],[0.245,-0.196],[0.196,-0.294],[0.151,-0.196],[0.196,-0.153],[0.293,-0.196],[0.297,-0.145],[0.245,-0.144],[0.245,-0.242],[0.445,-0.783],[0.144,-0.344],[0.249,-0.292],[0.342,-0.251],[0.297,-0.246],[0.145,-0.291],[0.147,-0.544],[0,-0.588],[0.098,-1.031],[0,0],[-0.442,-0.045],[-0.539,0],[-0.341,0.149],[-0.931,0.537],[-0.544,0],[0,0],[-0.587,0],[-0.589,0.049],[-0.292,0],[0,0],[-0.146,-0.348],[-0.098,-0.243],[-0.145,-0.253],[0,0],[-0.101,-0.247],[-0.196,-0.297],[-0.1,-0.051],[-0.14,0.024],[-0.393,-0.151],[-0.246,-0.245],[-0.248,-0.194],[-0.292,-0.243],[-0.242,-0.145],[-0.124,-0.051],[-0.134,0.025],[-0.346,-0.149],[-0.49,-0.444],[-0.046,-0.244],[-0.047,-0.539],[-0.148,-0.296],[-0.49,-0.589],[-0.15,-0.342],[0,-0.293],[0,0],[0,-0.591],[-0.097,-0.345],[-0.297,-0.594],[-0.146,-0.246],[-0.196,-0.247],[-0.148,-0.243],[-0.049,-0.242],[-0.049,-0.586],[-0.049,-0.243],[-0.1,-0.346],[-0.389,-0.641],[-0.097,-0.296],[-0.147,-0.54],[-0.095,-0.634],[-0.146,-0.297],[-0.249,-0.295],[-0.244,-0.249],[-0.246,-0.244],[-0.146,-0.346],[0,-0.242],[-0.05,-0.248],[-0.145,-0.293],[-0.243,-0.15],[-0.135,-0.051],[-0.122,0.016],[-0.344,-0.094],[0,0],[-0.837,0],[0,0],[0,0],[-0.537,0.145],[-0.442,0],[-0.393,-0.193],[-0.587,-0.49],[-0.988,-0.544],[-0.788,0],[-0.443,0],[0,0.736],[0,0.296],[0.099,0.93],[-0.442,0.05],[0,0],[-0.348,0],[-0.393,-0.048],[-0.295,-0.29],[-0.346,-0.148],[0,0],[-0.098,-0.297],[-0.101,-0.252],[-0.198,-0.248],[-0.295,-0.193],[-0.244,-0.103],[-0.544,-0.151],[-0.261,-0.022],[-0.28,0.02],[-0.634,-0.147],[-0.687,-0.341],[-0.05,-0.248],[0,-0.347],[0.145,-0.343],[0.098,-0.246],[0,-0.347],[-0.146,-0.246],[-0.293,-0.196],[0.298,-0.247],[0.244,-0.095],[0.244,-0.101],[-0.149,-0.246],[-0.25,-0.147],[-0.539,-0.248],[-0.297,0]],\"v\":[[-4.814,-24.406],[-5.603,-24.406],[-7.177,-23.817],[-7.964,-23.817],[-8.978,-23.84],[-10.322,-23.817],[-11.107,-23.227],[-11.895,-22.636],[-12.681,-23.227],[-13.271,-24.012],[-14.841,-24.601],[-17.206,-23.621],[-17.641,-23.608],[-17.99,-23.621],[-18.779,-22.832],[-22.708,-22.832],[-23.103,-22.049],[-23.297,-21.26],[-24.085,-20.669],[-24.872,-20.669],[-25.583,-20.682],[-26.443,-20.669],[-27.232,-20.276],[-27.625,-20.276],[-28.805,-20.474],[-29.822,-20.45],[-31.163,-20.474],[-31.951,-20.669],[-32.736,-21.26],[-33.525,-21.654],[-34.112,-20.867],[-34.112,-20.079],[-34.31,-19.294],[-34.31,-18.018],[-35.098,-18.113],[-35.882,-17.916],[-37.259,-18.018],[-37.259,-14.775],[-40.208,-14.775],[-40.404,-13.2],[-40.404,-11.626],[-40.799,-10.84],[-40.997,-9.07],[-40.997,-7.696],[-43.353,-7.696],[-44.337,-5.334],[-45.124,-5.136],[-45.711,-4.352],[-46.503,-4.154],[-46.908,-4.155],[-47.285,-4.154],[-47.68,-3.369],[-48.272,-2.586],[-49.057,-0.812],[-49.648,0.169],[-49.84,0.958],[-50.63,1.744],[-51.025,2.531],[-51.22,3.318],[-51.674,3.364],[-52.007,3.318],[-53.384,3.514],[-53.384,6.068],[-53.579,6.856],[-53.775,7.64],[-54.559,8.23],[-55.349,8.429],[-55.742,9.218],[-55.742,10.588],[-54.169,10.788],[-53.384,10.788],[-52.988,10.789],[-52.598,10.788],[-52.007,11.574],[-52.4,12.36],[-52.988,13.096],[-52.792,17.867],[-52.792,18.651],[-52.792,19.434],[-53.384,20.225],[-53.796,20.226],[-54.169,20.225],[-54.365,21.013],[-53.971,21.798],[-53.775,22.583],[-53.579,23.374],[-53.579,24.158],[-53.384,25.732],[-52.598,26.323],[-52.204,27.105],[-51.414,27.503],[-50.63,28.092],[-50.241,28.091],[-49.84,28.092],[-49.057,28.484],[-48.663,30.055],[-47.876,30.448],[-47.432,30.473],[-47.09,30.448],[-47.09,32.809],[-46.503,33.596],[-45.516,33.987],[-43.944,34.973],[-42.176,35.167],[-41.977,35.956],[-41.977,36.743],[-41.977,37.526],[-41.191,37.921],[-40.404,38.315],[-39.815,39.102],[-38.243,40.082],[-37.848,40.083],[-37.456,40.082],[-36.667,40.477],[-35.487,40.675],[-34.703,39.885],[-34.508,39.102],[-32.934,38.904],[-32.146,39.102],[-31.359,38.904],[-30.867,38.904],[-28.805,38.904],[-28.016,38.904],[-27.625,39.69],[-25.659,39.885],[-24.482,39.885],[-23.693,39.495],[-23.324,39.507],[-22.905,39.495],[-22.512,38.708],[-21.729,38.118],[-20.939,37.526],[-19.366,37.526],[-17.794,37.728],[-17.402,37.728],[-16.415,36.94],[-14.352,36.548],[-13.073,36.743],[-12.879,37.526],[-12.29,38.315],[-12.091,39.102],[-11.895,39.885],[-11.107,40.278],[-10.272,40.477],[-3.443,40.477],[-3.443,42.882],[-3.638,43.622],[-3.638,45.197],[-3.638,45.978],[-4.225,46.772],[-4.422,47.503],[-4.62,49.917],[-4.814,50.701],[-5.21,50.701],[-5.603,50.701],[-5.996,51.487],[-5.21,51.878],[-3.638,52.469],[-3.443,54.046],[-3.047,54.829],[-2.26,55.024],[-1.473,55.418],[-1.279,56.205],[0.1,57.781],[0.493,58.568],[1.475,60.14],[1.866,60.924],[1.866,62.693],[2.262,64.266],[2.85,65.053],[2.654,65.843],[2.654,66.627],[3.046,68.201],[3.835,68.592],[3.835,69.773],[3.835,70.952],[3.639,71.741],[3.443,72.525],[2.654,73.116],[1.475,75.475],[1.475,77.05],[1.283,77.838],[0.493,78.621],[0.1,79.408],[0.1,80.983],[0.294,83.339],[1.083,84.128],[1.866,84.717],[1.866,85.503],[1.866,86.291],[2.262,87.074],[2.654,87.863],[4.424,89.044],[4.424,89.829],[4.816,90.808],[5.014,91.596],[5.014,92.387],[5.605,93.122],[5.605,97.152],[6,98.679],[6,99.463],[6.785,101.035],[8.945,103.198],[8.945,103.986],[9.142,104.771],[9.538,105.558],[10.126,107.132],[10.911,107.916],[11.702,108.507],[11.702,110.078],[12.092,110.868],[12.684,111.65],[12.684,112.043],[11.893,112.636],[11.307,113.422],[11.307,114.204],[12.092,114.402],[12.88,114.402],[12.88,115.194],[12.88,115.977],[13.665,116.373],[14.503,116.763],[18.336,116.763],[19.957,116.175],[21.583,115.782],[26.445,115.782],[27.036,114.998],[27.036,114.204],[27.823,114.011],[28.609,114.011],[30.181,113.812],[30.967,113.618],[31.557,112.832],[31.557,112.043],[32.344,111.65],[33.13,111.063],[33.917,110.276],[34.704,109.491],[35.293,107.916],[36.083,107.132],[37.656,105.753],[37.85,104.969],[38.635,104.18],[39.423,103.395],[39.621,101.432],[39.621,100.25],[39.029,99.463],[38.831,98.679],[39.621,98.084],[40.405,98.084],[40.796,98.085],[41.19,98.084],[41.98,97.3],[42.764,96.711],[43.353,95.925],[44.141,95.332],[44.928,95.136],[44.928,94.351],[44.536,91.99],[44.141,90.417],[43.552,88.846],[42.764,87.269],[43.552,86.487],[44.141,85.699],[44.928,84.914],[45.714,84.717],[46.108,83.928],[46.895,83.142],[47.29,82.352],[48.859,81.571],[49.646,81.373],[50.036,81.374],[50.432,81.373],[51.22,80.787],[52.793,79.799],[53.775,78.229],[53.775,76.654],[53.973,75.868],[53.973,74.687],[53.973,73.512],[53.581,72.675],[53.581,68.001],[52.793,67.413],[51.612,64.857],[52.005,63.285],[51.809,62.552],[52.005,61.711],[51.612,60.924],[51.22,60.14],[51.22,59.746],[51.419,58.568],[51.419,57.781],[52.204,57.191],[54.169,54.829],[54.365,54.046],[54.954,53.257],[55.154,52.469],[55.939,50.898],[56.725,50.309],[57.513,49.719],[58.104,48.931],[59.676,47.556],[60.462,46.772],[61.249,45.978],[62.823,45],[63.215,44.213],[63.997,43.622],[64.199,42.839],[64.984,42.641],[65.768,42.049],[66.557,41.456],[67.344,41.064],[67.932,40.278],[68.526,37.921],[69.307,37.33],[70.096,36.548],[71.077,35.956],[71.671,35.167],[72.257,34.384],[72.456,32.809],[72.456,31.235],[73.044,28.633],[73.044,27.105],[71.913,26.91],[70.487,27.105],[69.703,27.699],[66.951,28.876],[65.577,28.484],[64.786,28.484],[63.215,28.68],[61.639,28.68],[60.462,28.288],[60.066,27.503],[59.478,26.713],[59.478,25.929],[58.693,25.532],[58.299,24.749],[58.299,23.964],[57.513,23.374],[57.133,23.373],[56.725,23.374],[55.939,22.583],[55.35,21.798],[54.56,21.405],[53.973,20.619],[53.186,20.225],[52.79,20.225],[52.401,20.225],[51.612,19.638],[50.826,18.06],[50.63,17.277],[50.432,15.708],[49.646,15.112],[48.469,13.538],[47.876,12.753],[48.074,11.967],[48.074,11.179],[47.876,9.61],[47.29,8.824],[46.503,7.25],[46.108,6.461],[45.324,6.068],[44.928,5.281],[44.928,4.495],[44.928,2.92],[44.732,2.138],[44.141,1.353],[42.764,-0.223],[42.372,-1.01],[42.372,-2.586],[41.586,-4.154],[40.997,-4.939],[40.405,-5.726],[39.621,-6.318],[38.831,-8.086],[38.243,-8.876],[38.243,-9.658],[38.243,-10.447],[37.454,-11.034],[36.671,-11.432],[36.238,-11.442],[35.885,-11.432],[35.096,-12.019],[34.704,-12.019],[32.738,-11.233],[32.344,-11.233],[26.641,-12.607],[25.07,-12.214],[23.888,-12.414],[23.103,-13.2],[21.533,-14.378],[18.777,-15.363],[16.811,-14.969],[15.633,-15.263],[15.633,-13.396],[15.828,-12.607],[15.633,-10.25],[14.453,-10.054],[13.717,-10.054],[12.88,-10.054],[12.092,-10.84],[11.307,-11.626],[10.275,-11.822],[6.391,-11.822],[6,-12.607],[5.803,-13.396],[5.014,-13.789],[4.227,-14.378],[3.443,-14.575],[1.866,-14.969],[1.146,-14.957],[0.294,-14.969],[-1.279,-15.758],[-2.852,-17.131],[-3.047,-17.916],[-2.652,-18.707],[-1.867,-19.294],[-1.667,-20.079],[-2.064,-20.867],[-2.852,-21.26],[-3.638,-21.85],[-3.047,-22.636],[-2.26,-22.832],[-1.473,-23.028],[-1.667,-23.817],[-2.458,-24.012],[-4.029,-24.601]],\"c\":true},\"ix\":2},\"nm\":\"Path 84\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":84,\"ty\":\"sh\",\"ix\":85,\"ks\":{\"a\":0,\"k\":{\"i\":[[0.041,-0.016],[0.149,-0.103],[0.129,-0.101],[0.098,-0.145],[0.096,-0.121],[0.097,-0.128],[0.052,-0.094],[0.047,-0.121],[0,-0.293],[0,0],[0,0],[-0.027,0.347],[-0.025,0.123],[-0.05,0.122],[-0.072,0.15],[0,0],[-0.025,0.122],[-0.097,0.172],[-0.073,0.147],[-0.194,0.32],[-0.025,0.173],[0,0],[0,0],[0,0.149],[-0.023,0.222],[0.271,-0.025],[0.09,0]],\"o\":[[-0.171,0.074],[-0.146,0.097],[-0.123,0.097],[-0.099,0.147],[-0.1,0.122],[-0.075,0.094],[-0.049,0.1],[-0.1,0.272],[0,0],[0,0],[0,-0.346],[0,-0.145],[0.023,-0.121],[0.07,-0.146],[0,0],[0.05,-0.117],[0.077,-0.195],[0.078,-0.122],[0.195,-0.321],[0.075,-0.151],[0,0],[0,0],[0,-0.151],[0,-0.217],[-0.296,0],[-0.08,0],[-0.045,0]],\"v\":[[206.158,0.466],[205.861,0.861],[205.467,1.156],[205.077,1.448],[204.783,1.843],[204.587,2.239],[204.189,2.333],[204.094,2.725],[203.895,3.489],[203.895,6.856],[205.077,6.856],[205.077,5.97],[205.176,5.577],[205.274,5.185],[205.668,4.889],[205.861,4.495],[205.861,4.104],[206.254,3.71],[206.452,3.318],[207.139,2.531],[207.434,2.138],[207.434,1.744],[207.434,1.353],[207.236,1.03],[207.337,0.466],[206.55,0.466],[206.288,0.444]],\"c\":true},\"ix\":2},\"nm\":\"Path 85\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":85,\"ty\":\"sh\",\"ix\":86,\"ks\":{\"a\":0,\"k\":{\"i\":[[0.325,0],[0.488,-0.049],[0.345,0],[0.294,0],[0,0],[0.294,-0.047],[0.248,-0.101],[0,-0.489],[-0.394,-0.342],[-0.688,0],[-0.25,0.048],[-0.639,0.151],[-0.294,0],[-0.738,-0.588],[-0.242,-0.145],[-0.248,-0.098],[-0.294,-0.05],[-0.159,0.024],[-0.175,-0.048],[-0.294,-0.248],[-0.784,0],[0,0],[0.589,0.442],[0.785,0.048],[0,0],[0.27,-0.012],[0.343,0.024],[0.246,0.048],[0.246,0.148],[0.297,0.195],[0.291,0.151],[0.589,0.344],[0,0],[0.345,0.15],[0.135,0]],\"o\":[[-0.493,0],[-0.344,0.048],[-0.296,0],[0,0],[-0.346,0],[-0.244,0],[-0.392,0.197],[0,0.539],[0.491,0.393],[0.294,0],[0.636,-0.194],[0.248,-0.048],[0.984,0],[0.247,0.196],[0.198,0.152],[0.296,0.096],[0.169,0.048],[0.161,-0.024],[0.39,0.095],[0.591,0.491],[0,0],[-0.395,-0.641],[-0.592,-0.441],[0,0],[-0.345,-0.024],[-0.271,0.012],[-0.297,0],[-0.296,-0.098],[-0.294,-0.148],[-0.244,-0.147],[-0.592,-0.343],[0,0],[-0.295,-0.144],[-0.149,-0.065],[-0.27,0]],\"v\":[[-174.793,4.495],[-176.072,4.495],[-176.858,4.889],[-177.644,4.692],[-179.317,4.692],[-180.202,4.692],[-180.99,4.692],[-181.58,5.874],[-180.791,7.051],[-179.022,7.444],[-178.234,7.444],[-176.664,6.461],[-175.876,6.461],[-173.516,7.444],[-173.124,8.23],[-172.336,8.429],[-171.551,8.824],[-171.063,8.824],[-170.565,8.824],[-169.782,9.61],[-167.963,10.493],[-161.915,10.493],[-163.291,9.018],[-165.06,8.037],[-165.848,8.037],[-166.734,8.037],[-167.617,8.037],[-168.404,8.037],[-169.191,7.64],[-169.782,6.856],[-170.565,6.461],[-172.14,5.674],[-172.926,5.281],[-173.516,4.495],[-173.937,4.408]],\"c\":true},\"ix\":2},\"nm\":\"Path 86\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":86,\"ty\":\"sh\",\"ix\":87,\"ks\":{\"a\":0,\"k\":{\"i\":[[0.593,-0.097],[0,0],[-0.343,-0.194],[-0.343,-0.049],[0,0],[-0.247,0.046],[-0.389,0.149],[-0.247,0.052],[-0.293,0],[-0.294,0],[-0.295,0],[-0.591,0.052],[-0.59,0.05],[-0.293,0],[-0.296,0],[-0.59,0],[0,0],[-0.295,0.099],[0.146,0.295],[0.1,0.396],[0.933,0],[0,0],[0.49,0],[0,0],[0.342,-0.052],[0.293,0],[0.246,0.048],[0.345,0.146],[0.245,0.1],[0.346,0.099],[0.59,0],[0.639,0]],\"o\":[[0,0],[0.296,0.295],[0.296,0.151],[0,0],[0.292,0],[0.395,-0.097],[0.249,-0.053],[0.248,-0.051],[0.298,0],[0.296,0],[0.592,0],[0.591,-0.051],[0.295,0],[0.295,0],[0.588,0.05],[0,0],[0.343,0],[-0.196,-0.247],[-0.197,-0.397],[-0.936,0.197],[0,0],[-0.492,-0.049],[0,0],[-0.343,0.044],[-0.245,0.048],[-0.298,0],[-0.343,-0.099],[-0.244,-0.1],[-0.343,-0.146],[-0.54,-0.148],[-0.638,-0.048],[-0.589,0]],\"v\":[[-159.361,11.77],[-159.361,14.131],[-158.574,14.915],[-157.786,15.509],[-156.999,15.509],[-156.214,15.509],[-155.43,14.721],[-154.641,14.523],[-153.856,14.523],[-153.068,14.721],[-152.283,14.523],[-150.708,14.523],[-149.137,14.327],[-148.35,14.131],[-147.562,14.327],[-145.991,14.523],[-145.203,14.523],[-144.418,14.131],[-145.203,13.738],[-145.203,12.604],[-147.562,12.949],[-148.35,12.949],[-149.528,12.56],[-149.921,12.56],[-150.708,13.148],[-151.493,13.148],[-152.283,13.148],[-153.068,12.56],[-153.856,12.36],[-154.641,11.77],[-156.214,11.77],[-157.836,11.574]],\"c\":true},\"ix\":2},\"nm\":\"Path 87\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":87,\"ty\":\"sh\",\"ix\":88,\"ks\":{\"a\":0,\"k\":{\"i\":[[0,0],[0,-0.071],[0,-0.077],[0,-0.088],[0,-0.076],[-0.015,-0.095],[-0.015,-0.06],[-0.009,-0.074],[0,-0.148],[0.011,-0.062],[0.052,-0.1],[0.011,-0.078],[0,-0.158],[0,-0.355],[0.088,-0.06],[0.073,-0.033],[0.158,-0.072],[0.122,-0.099],[0.01,-0.111],[0,-0.099],[-0.009,-0.09],[-0.073,-0.108],[-0.112,-0.11],[-0.122,-0.088],[-0.099,-0.06],[-0.197,-0.113],[-0.09,-0.025],[-0.035,0.003],[-0.031,-0.007],[0,-0.309],[-0.034,-0.139],[-0.173,-0.085],[-0.086,-0.018],[-0.126,0],[0,0],[0,0],[0,0.188],[0,0],[-0.133,0.16],[-0.146,0.113],[-0.057,0.038],[-0.055,0.064],[-0.063,0.085],[-0.052,0.1],[-0.038,0.114],[-0.048,0.179],[-0.014,0.159],[0,0],[0,0.097],[0,0],[0.049,0.16],[0.025,0.075],[0.023,0.072],[0.008,0.061],[0.023,0.086],[0.023,0.088],[0.024,0.062],[0.052,0.072],[0.078,0.061],[0.097,0.048],[0.103,0],[0,0],[0.041,0],[0.086,0.044],[0.061,0.037],[0.075,0.053],[0.059,0.037],[0.175,0]],\"o\":[[0,0.076],[0,0.075],[0,0.085],[0,0.07],[0,0.097],[0,0.077],[0.01,0.078],[0.028,0.131],[0,0.075],[-0.024,0.107],[-0.035,0.071],[-0.024,0.145],[0,0.363],[0,0.111],[-0.074,0.051],[-0.148,0.089],[-0.146,0.073],[-0.073,0.06],[-0.009,0.097],[0,0.1],[0.01,0.124],[0.072,0.125],[0.111,0.111],[0.102,0.073],[0.187,0.122],[0.075,0.031],[0.029,0.006],[0.034,-0.003],[-0.136,0.285],[0,0.144],[0.063,0.182],[0.086,0.033],[0.108,0.023],[0,0],[0,0],[0,-0.18],[0,0],[0,-0.219],[0.124,-0.147],[0.061,-0.038],[0.064,-0.032],[0.059,-0.086],[0.057,-0.089],[0.047,-0.097],[0.06,-0.169],[0.036,-0.156],[0,0],[0,-0.101],[0,0],[0,-0.174],[-0.014,-0.074],[-0.027,-0.073],[-0.023,-0.061],[-0.032,-0.091],[-0.024,-0.086],[-0.023,-0.061],[-0.026,-0.085],[-0.05,-0.086],[-0.079,-0.077],[-0.074,-0.039],[0,0],[-0.046,-0.003],[-0.092,0],[-0.075,-0.037],[-0.072,-0.05],[-0.061,-0.034],[-0.135,-0.073],[0,0]],\"v\":[[204.365,13.441],[204.391,13.638],[204.339,13.837],[204.365,14.046],[204.339,14.23],[204.391,14.472],[204.391,14.668],[204.483,14.87],[204.535,15.26],[204.535,15.46],[204.339,15.708],[204.241,15.903],[204.189,16.316],[204.339,17.226],[204.141,17.422],[203.946,17.569],[203.504,17.767],[203.11,18.012],[202.962,18.259],[202.962,18.505],[202.962,18.752],[203.16,19.043],[203.405,19.389],[203.746,19.638],[203.993,19.833],[204.483,20.179],[204.684,20.324],[204.78,20.324],[204.879,20.324],[204.631,21.088],[204.73,21.457],[205.029,21.848],[205.274,21.899],[205.581,21.994],[206.452,21.994],[206.452,21.366],[206.353,20.9],[206.353,19.992],[206.647,19.488],[207.042,19.145],[207.236,19.043],[207.337,18.848],[207.535,18.605],[207.733,18.356],[207.829,18.06],[208.025,17.616],[208.124,17.178],[208.124,16.934],[208.173,16.686],[208.173,16.49],[208.124,16.048],[208.025,15.852],[207.926,15.655],[207.882,15.46],[207.78,15.211],[207.681,14.965],[207.634,14.77],[207.483,14.575],[207.283,14.377],[207.042,14.182],[206.793,14.08],[206.6,14.08],[206.47,14.077],[206.207,14.033],[206.011,13.934],[205.912,13.685],[205.715,13.59],[205.308,13.441]],\"c\":true},\"ix\":2},\"nm\":\"Path 88\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":88,\"ty\":\"sh\",\"ix\":89,\"ks\":{\"a\":0,\"k\":{\"i\":[[-0.011,-0.028],[0,0.024]],\"o\":[[0,-0.025],[-0.031,0.001]],\"v\":[[153.66,13.514],[153.658,13.441]],\"c\":true},\"ix\":2},\"nm\":\"Path 89\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":89,\"ty\":\"sh\",\"ix\":90,\"ks\":{\"a\":0,\"k\":{\"i\":[[0,-0.008],[0.005,0.014]],\"o\":[[0.007,0],[0,0.008]],\"v\":[[153.66,13.538],[153.66,13.514]],\"c\":true},\"ix\":2},\"nm\":\"Path 90\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":90,\"ty\":\"sh\",\"ix\":91,\"ks\":{\"a\":0,\"k\":{\"i\":[[0,0],[-0.439,-0.146],[-0.126,0.029],[-0.133,-0.077],[-0.244,-0.145],[-0.148,-0.248],[-0.122,-0.018],[-0.134,0.053],[-0.295,0.296],[0.244,0.148],[0.249,0.146],[0.343,0]],\"o\":[[0.298,0.396],[0.116,0.046],[0.145,-0.032],[0.293,0.145],[0.243,0.151],[0.11,-0.024],[0.148,0.021],[0.395,-0.199],[-0.149,-0.247],[-0.246,-0.146],[-0.295,-0.148],[0,0]],\"v\":[[-169.584,13.538],[-168.8,14.523],[-168.432,14.511],[-168.009,14.523],[-167.224,14.915],[-167.028,15.708],[-166.676,15.719],[-166.243,15.708],[-165.455,14.915],[-165.651,14.131],[-166.439,13.934],[-167.274,13.538]],\"c\":true},\"ix\":2},\"nm\":\"Path 91\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":91,\"ty\":\"sh\",\"ix\":92,\"ks\":{\"a\":0,\"k\":{\"i\":[[0.162,-0.09],[0.122,-0.072],[0.146,-0.048],[0.147,0],[0.294,0],[-0.342,-0.22],[-0.175,-0.073],[-0.151,-0.076],[-0.064,0.015],[-0.054,-0.041],[-0.075,-0.094],[-0.123,-0.117],[-0.076,-0.194],[-0.025,-0.122],[-0.05,-0.124],[-0.099,-0.125],[-0.124,-0.074],[-0.294,-0.221],[-0.078,-0.126],[-0.073,-0.172],[-0.022,-0.315],[0,0],[0,0.169],[0,0.293],[0,0.075],[0.346,0.345],[0.096,0.119],[0.073,0.123],[0.125,0.174],[0.172,0.126],[0.172,0.099],[0.069,-0.001],[0.026,0.068],[0,0],[0,0.17],[0,0],[0.147,0],[0.147,0],[0,0],[0.107,0]],\"o\":[[-0.146,0.068],[-0.123,0.072],[-0.124,0.025],[-0.294,0.025],[0.314,0.222],[0.149,0.077],[0.145,0.05],[0.055,0.021],[0.077,-0.016],[0.098,0.07],[0.098,0.126],[0.15,0.152],[0.023,0.125],[0.021,0.121],[0.049,0.145],[0.096,0.123],[0.297,0.218],[0.121,0.099],[0.095,0.145],[0.121,0.27],[0,0],[0,-0.17],[0,-0.297],[0,-0.079],[0,-0.514],[-0.1,-0.097],[-0.076,-0.097],[-0.098,-0.172],[-0.123,-0.168],[-0.174,-0.125],[-0.054,-0.031],[-0.088,0],[0,0],[-0.074,-0.144],[0,0],[-0.15,0],[-0.149,0],[0,0],[-0.129,0],[-0.157,0]],\"v\":[[209.499,22.39],[209.303,22.782],[208.91,22.979],[208.517,22.979],[207.535,23.175],[208.418,23.764],[208.814,24.06],[209.207,24.257],[209.392,24.249],[209.598,24.257],[209.598,24.647],[209.99,24.843],[210.386,25.235],[210.483,25.633],[210.483,26.028],[210.681,26.42],[211.072,26.617],[211.86,27.303],[212.257,27.503],[212.548,27.894],[212.646,28.729],[214.267,28.729],[214.217,28.288],[214.319,27.503],[214.267,27.327],[213.629,26.125],[213.238,25.929],[213.137,25.532],[212.844,25.041],[212.452,24.647],[211.957,24.354],[211.762,24.324],[211.566,24.257],[211.368,23.861],[211.467,23.448],[211.467,22.317],[211.072,22.39],[210.681,22.29],[210.309,22.29],[209.96,22.282]],\"c\":true},\"ix\":2},\"nm\":\"Path 92\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":92,\"ty\":\"sh\",\"ix\":93,\"ks\":{\"a\":0,\"k\":{\"i\":[[0,-0.243],[-0.196,-0.144],[-0.172,-0.046],[-0.148,0],[-0.27,0],[-0.071,-0.444],[-0.024,-0.147],[0,-0.369],[0.025,-0.243],[-0.024,-0.12],[0,-0.073],[-0.101,-0.074],[-0.17,-0.076],[-0.152,-0.025],[-0.294,0.052],[0.047,-0.166],[0.022,-0.12],[0,-0.17],[-0.074,-0.121],[-0.149,-0.073],[-0.15,-0.03],[-0.148,0],[-0.122,0.045],[-0.072,0.097],[-0.12,0.05],[-0.273,0],[0,0],[0.269,0.17],[0.097,0.046],[0.099,0.148],[0.046,0.126],[0.071,0.122],[0.145,0.102],[0.145,0.072],[0.097,0.074],[0.073,0.15],[0.02,0.148],[0.052,0.269],[0.098,0.145],[0.295,0.196],[0.272,0.196],[0.149,0.103],[0.148,0.099],[0.121,0.023]],\"o\":[[0,0.27],[0.149,0.124],[0.119,0.028],[0.271,0.028],[0,0.47],[0.025,0.145],[0.097,0.343],[0,0.246],[0,0.151],[0,0.056],[0,0.152],[0.145,0.119],[0.146,0.073],[0.266,0.046],[-0.077,0.177],[-0.026,0.124],[-0.026,0.149],[0,0.15],[0.073,0.124],[0.147,0.078],[0.122,0.021],[0.147,0],[0.125,-0.05],[0.074,-0.099],[0.247,-0.097],[0,0],[0,-0.343],[-0.099,-0.05],[-0.145,-0.103],[-0.049,-0.103],[-0.051,-0.124],[-0.076,-0.152],[-0.122,-0.074],[-0.12,-0.048],[-0.125,-0.098],[-0.076,-0.149],[-0.05,-0.272],[-0.027,-0.174],[-0.198,-0.297],[-0.269,-0.17],[-0.149,-0.099],[-0.148,-0.097],[-0.123,-0.076],[-0.023,0.248]],\"v\":[[204.587,24.084],[204.879,24.749],[205.274,25.041],[205.668,25.041],[206.353,25.041],[206.353,26.223],[206.55,26.617],[206.746,27.574],[206.647,28.185],[206.55,28.577],[206.647,28.777],[206.944,29.075],[207.337,29.37],[207.733,29.566],[208.517,29.465],[208.223,29.858],[208.223,30.253],[208.025,30.644],[208.124,31.038],[208.517,31.235],[208.91,31.435],[209.303,31.435],[209.696,31.435],[209.696,31.038],[210.089,30.939],[210.777,30.939],[210.777,29.786],[210.287,29.075],[209.892,28.979],[209.499,28.68],[209.404,28.288],[209.404,27.894],[209.009,27.597],[208.616,27.402],[208.223,27.303],[208.025,26.91],[207.829,26.517],[207.829,25.732],[207.535,25.338],[206.844,24.647],[206.061,24.257],[205.762,23.861],[205.371,23.568],[204.684,23.469]],\"c\":true},\"ix\":2},\"nm\":\"Path 93\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":93,\"ty\":\"sh\",\"ix\":94,\"ks\":{\"a\":0,\"k\":{\"i\":[[0.073,-0.123],[0.15,-0.391],[0.052,-0.127],[0.078,-0.15],[0.073,-0.121],[0.097,-0.151],[0.073,-0.121],[0.072,-0.123],[0.078,-0.171],[0.028,-0.126],[0,-0.123],[0.075,-0.151],[0.125,-0.147],[0.12,-0.073],[0.221,-0.171],[0.099,-0.073],[0.174,-0.1],[0.123,-0.022],[0.057,0.011],[0.073,-0.042],[0.099,-0.148],[0.099,-0.296],[-0.146,0],[-0.147,0],[-0.122,0.048],[-0.121,0.127],[-0.072,0.165],[-0.047,0.119],[-0.27,0.178],[-0.125,0.051],[-0.145,0.026],[-0.346,0],[-0.027,0.27],[-0.128,0.272],[-0.242,0.22],[-0.124,0.095],[-0.077,0.124],[-0.025,0.176],[-0.025,0.347],[0,0.147],[0,0.346]],\"o\":[[-0.243,0.369],[-0.024,0.124],[-0.073,0.173],[-0.072,0.146],[-0.097,0.146],[-0.074,0.121],[-0.072,0.124],[-0.077,0.149],[-0.048,0.121],[-0.021,0.122],[-0.021,0.172],[-0.072,0.146],[-0.095,0.123],[-0.225,0.173],[-0.099,0.078],[-0.144,0.125],[-0.122,0.046],[-0.052,0.011],[-0.078,-0.015],[-0.145,0.074],[-0.17,0.245],[0.147,0],[0.174,0],[0.124,0],[0.172,-0.073],[0.121,-0.124],[0.049,-0.124],[0.124,-0.296],[0.122,-0.071],[0.151,-0.049],[0.32,-0.074],[0,-0.295],[0.05,-0.296],[0.148,-0.29],[0.123,-0.101],[0.122,-0.103],[0.097,-0.15],[0.073,-0.316],[0,-0.148],[0.025,-0.346],[-0.072,0.148]],\"v\":[[203.602,25.338],[202.91,26.223],[202.91,26.617],[202.616,27.009],[202.421,27.402],[202.029,27.699],[201.832,28.092],[201.639,28.484],[201.24,28.777],[201.24,29.172],[201.24,29.566],[200.947,29.96],[200.65,30.351],[200.457,30.744],[199.668,30.939],[199.569,31.331],[199.176,31.631],[198.785,31.726],[198.621,31.715],[198.389,31.726],[198.095,32.121],[197.803,32.907],[198.168,33.003],[198.585,32.907],[198.98,32.907],[199.373,32.611],[199.668,32.221],[199.668,31.827],[200.258,31.135],[200.65,31.038],[201.046,30.842],[201.931,30.842],[201.931,30.055],[202.227,29.269],[202.715,28.484],[203.11,28.288],[203.504,28.092],[203.602,27.597],[203.602,26.713],[203.701,26.323],[203.798,24.942]],\"c\":true},\"ix\":2},\"nm\":\"Path 94\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":94,\"ty\":\"sh\",\"ix\":95,\"ks\":{\"a\":0,\"k\":{\"i\":[[0,0],[0.15,-0.019],[0.126,-0.051],[0.096,-0.124],[0.025,-0.124],[0,-0.347],[0,0],[0.292,-0.196],[0.174,-0.071],[0.173,-0.05],[0.172,-0.019],[0.32,-0.048],[0.149,0],[0.295,0],[0,0],[0.37,-0.068],[0.119,0],[0.294,0],[0.048,-0.194],[0.051,-0.146],[0.047,-0.144],[0.047,-0.124],[0.101,-0.126],[0.247,-0.274],[0.07,-0.169],[0.051,-0.126],[0.098,-0.198],[0.023,-0.124],[-0.125,-0.022],[-0.07,0.006],[-0.059,-0.01],[-0.198,-0.026],[-0.099,-0.586],[-0.027,-0.127],[-0.124,-0.296],[-0.023,-0.126],[0,-0.222],[0.075,-0.196],[0.127,-0.122],[0.046,-0.223],[0,-0.147],[0,-0.296],[0.095,-0.319],[0.146,-0.121],[0.172,-0.048],[0.068,0.006],[0.058,-0.011],[0.294,-0.027],[0,0],[-0.05,-0.175],[-0.025,-0.125],[0.416,-0.267],[0,0],[0.12,-0.027],[0.246,-0.195],[0.098,-0.149],[0,-0.609],[0,0],[0.052,-0.471],[0,-0.296],[0,-0.145],[0,-0.169],[0,-0.146],[-0.167,-0.295],[-0.148,0.048],[-0.248,0],[-0.345,-0.022],[0,0],[0.122,-0.076],[0.295,-0.052],[0.149,0],[0.201,-0.024],[0.076,-0.271],[0.095,-0.075],[0.123,-0.098],[0.147,-0.098],[0.074,-0.167],[0,-0.218],[-0.049,-0.202],[-0.074,-0.175],[-0.029,-0.175],[0,0],[-0.029,-0.346],[-0.05,-0.125],[-0.145,-0.121],[-0.144,-0.047],[-0.12,0],[-0.126,-0.026],[-0.149,-0.047],[-0.121,-0.074],[-0.125,-0.172],[-0.077,-0.146],[-0.099,-0.17],[-0.098,-0.121],[-0.073,-0.152],[-0.048,-0.151],[-0.025,-0.295],[-0.026,-0.127],[-0.077,-0.12],[-0.093,-0.122],[-0.098,-0.125],[-0.074,-0.145],[0,-0.293],[0,0],[-0.075,-0.127],[-0.075,-0.124],[-0.1,-0.146],[-0.025,-0.494],[-0.199,-0.438],[-0.075,-0.122],[-0.1,-0.098],[-0.124,-0.098],[-0.121,-0.071],[-0.145,-0.097],[-0.099,-0.122],[-0.049,-0.153],[0,-0.147],[-0.025,-0.393],[-0.026,-0.173],[-0.05,-0.125],[-0.073,-0.151],[-0.171,-0.295],[-0.1,-0.124],[-0.147,-0.12],[-0.148,-0.075],[-0.17,-0.102],[-0.174,-0.053],[-0.124,-0.025],[-0.128,0.012],[-0.136,-0.025],[-0.149,-0.075],[-0.144,-0.146],[-0.147,-0.101],[-0.125,-0.078],[-0.147,-0.095],[-0.345,-0.168],[-0.293,-0.101],[-0.148,-0.049],[-0.269,-0.317],[-0.099,-0.12],[-0.122,-0.151],[-0.296,-0.243],[-0.172,-0.023],[-0.121,0],[-0.292,0],[0,0],[0.025,-0.32],[0,-0.219],[0,-0.074],[0,0],[0,-0.368],[0,0],[0.025,-0.152],[0.025,-0.124],[0.022,-0.175],[0,-0.273],[0,-0.045],[0,0],[0,-0.147],[0,-0.221],[0,0],[0,0],[0.026,-0.22],[0,-0.344],[-0.025,-0.172],[0,0],[0,0],[0.022,-0.148],[0.022,-0.124],[0.026,-0.125],[0.049,-0.149],[0.073,-0.172],[0.145,-0.373],[0.022,-0.196],[0,-0.292],[0,-0.098],[-0.025,-0.392],[0,-0.146],[0,-0.175],[0,-0.195],[0.022,-0.124],[0.073,-0.197],[0.047,-0.124],[0.076,-0.148],[0.12,-0.174],[0,-0.494],[0,0],[0,-0.121],[-0.022,-0.121],[-0.073,-0.149],[-0.074,-0.15],[0,-0.644],[0.123,-0.586],[0,-0.15],[0.047,-0.442],[0.122,-0.296],[0.05,-0.123],[0.049,-0.195],[0.049,-0.171],[0.049,-0.148],[0.097,-0.15],[0.124,-0.172],[0,-0.149],[0,0],[0,-0.198],[0,-0.247],[0,-0.097],[0.022,-0.124],[0.076,-0.175],[0.075,-0.126],[0.078,-0.175],[0.026,-0.196],[0.148,-0.144],[0.074,-0.145],[0.023,-0.145],[0,-0.146],[-0.072,-0.193],[-0.026,-0.123],[-0.052,-0.3],[0,-0.148],[0,-0.148],[0,-0.317],[0.318,-0.517],[0.099,-0.147],[0.075,-0.145],[0,-0.298],[-0.025,-0.127],[-0.072,-0.173],[0,0],[0,-0.344],[0,-0.151],[0.244,-0.121],[0.099,-0.152],[0.049,-0.124],[0.049,-0.124],[0.05,-0.203],[0.026,-0.123],[0,-0.218],[-0.146,-0.167],[-0.124,-0.079],[-0.2,0],[0,0],[0,0],[0,0],[0,0],[0.146,-0.123],[0.123,-0.103],[0.126,-0.122],[0,0],[0.127,-0.145],[0.073,-0.149],[0.024,-0.122],[0,-0.151],[0,-0.49],[0.02,-0.469],[0.019,-0.148],[0,0],[0.121,0.1],[0.068,0],[0.041,0.068],[0,0.12],[0,0],[0.049,0.295],[0.049,0],[0.22,0],[0,0],[-0.099,-0.104],[-0.1,-0.123],[-0.072,-0.146],[-0.048,-0.147],[0,-0.12],[0,-0.147],[0,-0.292],[0,0],[0.099,0.072],[0.073,0.123],[0.049,0.125],[0.073,0.098],[0.197,0],[0.172,0],[0,0],[0.222,-0.147],[0.075,-0.122],[0,-0.198],[-0.469,-0.075],[-0.147,0],[-0.119,-0.03],[-0.064,0.007],[-0.064,-0.015],[-0.148,-0.098],[0.073,-0.121],[0,-0.216],[0,-0.169],[-0.027,-0.148],[-0.371,-0.146],[-0.296,-0.146],[0.024,-0.169],[0.024,-0.151],[0.292,-0.028],[0.125,-0.028],[0.297,-0.052],[0.112,0.008],[0.151,-0.029],[0.149,-0.075],[0,-0.223],[0,0],[-0.022,-0.149],[-0.022,-0.122],[-0.022,-0.121],[-0.073,-0.124],[0,-0.246],[0,0],[0.051,-0.172],[0,-0.169],[-0.196,-0.273],[0,-0.343],[0,-0.17],[-0.075,-0.126],[-0.119,-0.092],[-0.123,-0.099],[-0.049,-0.12],[0,0],[0,0],[-0.146,0],[0,0],[-0.144,-0.024],[0.147,-0.12],[0.296,-0.145],[-0.322,-0.127],[-0.072,0.01],[-0.056,-0.014],[-0.064,0.006],[-0.064,-0.015],[-0.097,-0.071],[0,0],[-0.098,-0.145],[-0.075,-0.169],[-0.052,-0.174],[-0.046,-0.127],[-0.144,-0.102],[-0.394,-0.266],[-0.099,-0.145],[-0.048,-0.12],[-0.048,-0.126],[-0.124,-0.077],[-0.047,-0.198],[-0.029,-0.123],[-0.027,-0.222],[-0.298,-0.031],[-0.126,-0.055],[-0.098,-0.073],[-0.05,-0.096],[-0.32,-0.127],[-0.141,0.021],[-0.123,-0.022],[-0.145,-0.025],[-0.121,-0.029],[-0.127,-0.025],[-0.169,-0.05],[-0.146,0.015],[-0.125,-0.012],[0,0],[-0.169,-0.048],[-0.198,0],[0,0],[-0.17,0],[-0.145,0.124],[-0.073,0.102],[-0.15,0.069],[-0.22,0],[-0.294,0.02],[0.223,0.149],[0.091,-0.021],[0.078,0.024],[0.321,0.074],[0.126,0],[0.15,0],[0.345,0],[0.145,0],[0,0],[0.295,0.024],[0.098,0.078],[0.096,0.143],[0.049,0.169],[0.022,0.296],[0.022,0.127],[0.049,0.121],[0.073,0.169],[0.047,0.144],[0,0.121],[0,0],[0.025,0.148],[0.025,0.265],[0.027,0.118],[0.074,0.15],[0,0.272],[0,0.243],[0,0],[0.048,0.15],[0,0],[-0.026,0.37],[0,0],[0.026,0.247],[0,0.142],[-0.122,0.246],[-0.147,0.093],[-0.124,0.026],[-0.273,0.073],[-0.099,0.168],[-0.196,0.61],[-0.047,0.127],[-0.122,0.126],[-0.146,0.074],[-0.171,0.072],[-0.067,-0.011],[-0.061,0.025],[-0.097,0.103],[0,0],[0.222,0],[0.318,0.1],[0.121,0.101],[0.05,0.099],[0.173,0.073],[0.122,0.049],[0.147,0.099],[0.097,0.171],[0.047,0.173],[0,0.295],[0,0],[-0.071,0.15],[-0.147,0.148],[-0.54,0],[0,0],[0,0],[-0.075,0.098],[-0.097,0.145],[-0.121,0.299],[-0.026,0.145],[0,0.146],[0,0.124],[-0.026,0.126],[-0.223,0],[-0.394,0],[-0.196,0.098],[-0.049,0.194],[0,0.145],[0,0],[0.052,0.148],[0.061,0.005],[0.074,-0.012],[0.148,-0.075],[0.199,-0.093],[0.077,0.01],[0.052,-0.009],[0.025,0.171],[0.025,0.295],[0.022,0.295],[0,0.152],[0,0],[0,0],[-0.293,-0.146],[-0.392,0],[0,0],[0,0.173],[0.027,0.175],[0,0],[-0.022,0.121],[-0.075,0.148],[-0.071,0.145],[0,0.143],[0.026,0.124],[0.071,0.294],[0,0.147],[0,0],[0,0],[-0.171,0],[0,0],[-0.268,0.073],[-0.344,0],[0,0],[-0.341,0],[-0.126,0.141],[-0.05,0.123],[-0.05,0.124],[-0.071,0.145],[-0.197,0.245],[-0.178,0.098],[-0.269,0.195],[-0.099,0.15],[-0.098,0.173],[0,0],[0,0.175],[0,0],[0,0],[0.149,0.032],[0,0],[0.025,0.125],[0.05,0.122],[0.123,0.097],[0.17,0.099],[0.297,0.222],[0.076,0.128],[0.098,0.149],[0.025,0.12],[0,0],[-0.32,-0.1],[-0.345,-0.176],[-0.174,-0.019],[-0.071,0.006],[-0.058,-0.009],[-0.467,0],[-0.127,0.025],[-0.196,0.051],[-0.3,0],[-0.271,0.078],[-0.168,0.074],[-0.097,0.073],[-0.098,0.148],[-0.147,0.293],[-0.073,0.124],[-0.173,0.102],[-0.124,0.052],[-0.123,0.169],[-0.049,0.17],[-0.022,0.122],[0,0.298],[-0.176,0.344],[-0.024,0.169],[-0.024,0.466],[0,0.126],[-0.024,0.125],[-0.073,0.119],[-0.295,0.122],[-0.172,0],[-0.172,-0.023],[0.047,-0.147],[0.027,-0.121],[0,-0.169],[-0.049,-0.168],[-0.223,0.224],[-0.072,0.122],[-0.148,0.298],[-0.074,0.122],[-0.099,0.169],[-0.073,0.145],[-0.074,0.172],[-0.025,0.124],[-0.027,0.149],[-0.027,0.123],[-0.073,0.126],[-0.147,0.097],[-0.126,0.044],[-0.126,0.025],[-0.149,0.097],[-0.099,0.197],[0,0.174],[0,0.296],[0.049,0.273],[0.048,0.293],[0,0.147],[0,0.195],[0,0.348],[-0.097,0.314],[-0.075,0.149],[-0.121,0.123],[-0.175,0.126],[-0.296,0.166],[-0.126,0.046],[-0.097,0.122],[-0.149,0.193],[-0.096,0.148],[-0.123,0.144],[-0.146,0.097],[-0.196,0],[0,0],[-0.27,0.194],[-0.122,0.148],[-0.1,0.126],[-0.124,0.127],[0,0],[-0.048,0.196],[-0.023,0.124],[-0.17,0.126],[-0.097,0.077],[-0.098,0.126],[-0.195,0.32],[-0.122,0.292],[-0.05,0.125],[-0.146,0.122],[-0.198,0.174],[-0.049,0.296],[-0.199,0.467],[-0.074,0.125],[-0.097,0.123],[-0.075,0.097],[-0.072,0.148],[-0.023,0.144],[0,0.125],[0,0.295],[-0.024,0.465],[0,0.121],[0,0],[-0.048,0.15],[-0.1,0.347],[-0.027,0.124],[0,0.121],[-0.023,0.151],[0,0.219],[0,0],[0,0.393],[0,0],[0,0.147],[0,0],[-0.122,0.029],[-0.065,-0.007],[-0.063,0.015],[-0.169,0.072],[-0.122,0.076],[-0.172,0.498],[-0.048,0.176],[-0.173,0.248],[-0.147,0.074],[-0.071,-0.016],[-0.059,0.026],[-0.121,0.025],[-0.343,0.246],[-0.097,0.095],[-0.143,0.296],[-0.317,0.639],[-0.047,0.121],[-0.1,0.119],[-0.076,0.171],[-0.053,0.125],[0,0],[-0.052,0.396],[0,0.22],[0.025,0.197],[0.074,0.174],[0.146,0.369],[0.027,0.293],[0,0.295],[0.127,0.296],[0.148,0.101],[0.347,0],[0,0],[0.148,0.027],[0.145,0.028],[0.08,-0.007],[0.086,0.014],[0.123,0.026],[0.269,0.169],[0.099,0.118],[0.049,0.123],[0.099,0.296],[0.024,0.121],[0.122,0.121],[0.17,0.125],[0.175,0.098],[0.123,0.024],[0.219,0],[0.393,0],[0,0],[0.172,0.078],[0.346,0.168],[0.148,0.047],[0.322,0],[0.37,-0.05],[0.047,-0.468],[0.221,0.024],[0.123,0],[0.122,0.027],[0.148,0.078],[0.123,0.075],[0.073,0.122],[-0.149,0.07],[-0.123,0.072],[-0.146,0.074],[0,0],[0.068,-0.006],[0.058,0.009],[0.148,0.024],[0.174,0.048],[0.148,0.098],[0.173,0.123],[0.15,0.1],[0.123,0.047],[0.223,0.017],[0.196,0],[0.121,0],[0,0],[0.145,0.048],[0.223,0.101],[0.345,0],[0.318,-0.048],[0,0],[0,0],[0,0],[-0.075,0.12],[-0.149,0.123],[-0.149,0.128],[-0.047,0.096],[-0.024,0.292],[0.27,0.102],[0.169,0.053],[0.271,0.074],[0.195,0],[0,0],[0,0],[0.197,-0.025],[0.025,-0.295],[0.025,-0.121],[0.417,0],[0.274,0.028],[0,0],[0,0.145],[0,0.148],[-0.392,0.195],[-0.097,0.073],[-0.048,0.148],[-0.021,0.293],[-0.026,0.294],[0,0.222],[0.026,0.42],[0.222,0],[0.147,0],[0.124,0],[0,0],[0.027,0.146],[0.048,0.171],[0.048,0.123],[0.072,0.197],[0.051,0.1],[0.148,0.098],[0.075,-0.017],[0.057,0.025],[0.297,0.145],[0.072,0.145],[0.221,0.193],[0.121,0.075],[0.148,0.077],[0.173,0.075],[0.174,-0.025],[0.138,0.013],[0.174,0.073],[0.173,0.074],[0,0],[0.244,0],[0.169,-0.075],[0.149,-0.1],[0.393,0],[0,0],[0.147,0],[0.271,0.073],[0.296,0.124],[0.122,0.052],[0.272,0.145],[0.294,0.248],[0.098,0.15],[0.025,0.194],[0,0.465],[0.174,0.023],[0.069,-0.007],[0.059,0.011],[0.173,0.07],[0.124,0.071],[0.146,0.145],[0.096,0.119],[0.096,0.074],[0.075,-0.016],[0.057,0.025],[0.147,0.125],[0.049,0.172],[0.023,0.122],[0,0.347],[0,0],[0.27,-0.075],[0.297,-0.025],[0.147,0],[0.05,0.174],[0.024,0.124],[0.027,0.393],[0,0],[-0.17,0.076],[0.22,0.094],[0.176,0.048],[0.148,0.053],[0.175,0.047],[0,0],[0,0],[0.147,0.051],[0.294,0],[0.145,-0.194],[0.051,-0.122],[0.048,-0.121],[0.071,-0.122],[0.344,0],[0.174,0.096],[0.097,0.127],[0.099,0.149],[0.171,0.075],[0.319,0.075],[0.196,0],[0,0],[0.145,0.021],[0.397,0.075],[0,0],[0.295,0.023],[0.148,0.053],[0.147,0.1],[0.171,0.077],[0.122,0.027],[0.54,0.102],[0.024,-0.293],[0.099,-0.122],[0.17,-0.024],[0.129,0.012],[0.135,-0.024],[0.172,-0.073],[0.147,-0.123],[0,-0.218],[0,-0.149],[-0.027,-0.121],[0,-0.122],[-0.025,-0.149],[0,-0.219],[0.025,-0.222],[0.048,-0.175],[0.123,0.124],[0.098,0.122],[0.148,0.391],[0,0.344],[-0.022,0.12],[-0.051,0.175],[-0.025,0.125],[0,0.146],[0,0.248],[-0.321,0.294],[-0.124,0.102],[-0.121,0.098],[-0.122,0.073],[0,0]],\"o\":[[-0.169,0],[-0.122,0.029],[-0.145,0.072],[-0.075,0.099],[-0.075,0.318],[0,0],[-0.37,0],[-0.148,0.099],[-0.171,0.075],[-0.17,0.05],[-0.32,0.074],[-0.124,0],[-0.291,0.022],[0,0],[-0.271,0.271],[-0.123,0.029],[-0.273,0.023],[0,0.222],[-0.048,0.151],[-0.047,0.148],[-0.051,0.124],[-0.051,0.173],[-0.244,0.266],[-0.097,0.124],[-0.05,0.123],[-0.077,0.17],[-0.049,0.117],[0,0],[0.064,0.014],[0.064,-0.007],[0.173,0.048],[0,0.612],[0,0.123],[0.096,0.315],[0.048,0.123],[0.05,0.195],[0,0.22],[-0.07,0.177],[-0.171,0.17],[-0.026,0.124],[-0.026,0.293],[0,0.343],[-0.052,0.196],[-0.147,0.122],[-0.062,0.014],[-0.067,-0.006],[-0.275,0.051],[0,0],[0.076,0.171],[0.025,0.12],[-0.467,0.222],[0,0],[-0.123,0.021],[-0.297,0.072],[-0.149,0.123],[-0.322,0.493],[0,0],[0.05,0.472],[-0.02,0.293],[0,0.148],[0,0.172],[0,0.173],[0.049,0.318],[0.149,-0.074],[0.219,-0.075],[0.341,0],[0,0],[-0.097,0.124],[-0.271,0.168],[-0.124,0.023],[-0.198,0.023],[0,0.295],[-0.02,0.123],[-0.121,0.095],[-0.147,0.126],[-0.148,0.098],[-0.072,0.176],[0,0.22],[0.05,0.169],[0.075,0.166],[0,0],[0.021,0.341],[0,0.147],[0.073,0.166],[0.121,0.096],[0.128,0.026],[0.122,0],[0.147,0.026],[0.148,0.052],[0.173,0.096],[0.073,0.124],[0.075,0.172],[0.072,0.124],[0.124,0.147],[0.073,0.117],[0.073,0.269],[0,0.148],[0.022,0.121],[0.071,0.145],[0.099,0.12],[0.1,0.123],[0.121,0.244],[0,0],[0.074,0.145],[0.074,0.123],[0.099,0.147],[0.291,0.368],[0.026,0.491],[0.046,0.148],[0.074,0.123],[0.098,0.098],[0.124,0.096],[0.146,0.099],[0.124,0.078],[0.099,0.12],[0.025,0.117],[0.025,0.396],[0,0.196],[0.025,0.125],[0.074,0.17],[0.174,0.271],[0.073,0.147],[0.096,0.125],[0.124,0.101],[0.174,0.098],[0.149,0.07],[0.122,0.024],[0.136,0.025],[0.129,-0.013],[0.17,0.022],[0.174,0.097],[0.124,0.125],[0.124,0.07],[0.148,0.097],[0.32,0.198],[0.269,0.126],[0.147,0.049],[0.367,0.174],[0.099,0.127],[0.122,0.172],[0.246,0.293],[0.147,0.128],[0.122,0.024],[0.271,0.024],[0,0],[0,0.318],[0,0.222],[0,0.074],[0,0],[0.025,0.371],[0,0],[0,0.173],[-0.025,0.122],[-0.025,0.149],[-0.027,0.269],[0,0.046],[0,0],[0,0.174],[0.025,0.198],[0,0],[0,0],[-0.025,0.196],[-0.049,0.345],[0.074,0.174],[0,0],[0,0],[-0.025,0.148],[-0.027,0.125],[-0.027,0.12],[-0.025,0.144],[-0.048,0.174],[-0.173,0.367],[-0.049,0.171],[-0.025,0.294],[0,0.104],[0,0.393],[0,0.146],[0,0.174],[0,0.194],[0,0.15],[-0.025,0.196],[-0.049,0.124],[-0.073,0.174],[-0.122,0.194],[-0.295,0.368],[0,0],[0,0.15],[0,0.126],[0.051,0.145],[0.07,0.171],[0.294,0.539],[0,0.611],[-0.023,0.127],[-0.051,0.465],[-0.051,0.32],[-0.049,0.122],[-0.073,0.198],[-0.05,0.17],[-0.05,0.148],[-0.05,0.171],[-0.124,0.172],[-0.049,0.097],[0,0],[0,0.198],[0,0.244],[0,0.097],[0,0.147],[-0.05,0.171],[-0.075,0.144],[-0.099,0.17],[-0.072,0.171],[-0.144,0.147],[-0.125,0.12],[-0.073,0.148],[-0.025,0.125],[0,0.222],[0.024,0.127],[0.098,0.294],[0.024,0.123],[0,0.145],[0.024,0.32],[0,0.64],[-0.074,0.147],[-0.095,0.149],[-0.122,0.247],[0,0.146],[0.048,0.173],[0,0],[0.15,0.296],[0,0.143],[-0.297,0.023],[-0.174,0.099],[-0.075,0.095],[-0.05,0.122],[-0.075,0.192],[-0.02,0.121],[-0.047,0.196],[0,0.249],[0.098,0.126],[0.146,0.096],[0,0],[0,0],[0,0],[0,0],[-0.126,0.125],[-0.126,0.097],[-0.147,0.119],[0,0],[-0.096,0.125],[-0.122,0.148],[-0.077,0.121],[-0.027,0.123],[0,0.492],[0,0.469],[0,0.169],[0,0],[-0.146,-0.098],[-0.045,-0.031],[-0.085,0.001],[-0.074,-0.123],[0,0],[0,-0.296],[-0.05,0.025],[-0.196,0.05],[0,0],[0.121,0.077],[0.121,0.12],[0.099,0.124],[0.076,0.126],[0.026,0.124],[0,0.122],[0.028,0.296],[0,0],[-0.12,-0.024],[-0.126,-0.072],[-0.076,-0.102],[-0.05,-0.122],[-0.125,-0.149],[-0.169,0],[0,0],[-0.274,0.049],[-0.124,0.076],[-0.097,0.153],[0,0.489],[0.121,0.022],[0.146,0],[0.059,0.011],[0.072,-0.006],[0.171,0.047],[-0.049,0.123],[-0.099,0.176],[0,0.177],[0,0.151],[0.415,0],[0.294,0.122],[-0.046,0.146],[-0.029,0.147],[-0.297,0],[-0.148,0],[-0.293,0.066],[-0.118,0.011],[-0.144,-0.012],[-0.173,0.023],[-0.173,0.099],[0,0],[0,0.168],[0,0.117],[0.026,0.125],[0.026,0.147],[0.123,0.171],[0,0],[-0.025,0.171],[-0.046,0.147],[0,0.347],[0.197,0.272],[0,0.171],[0,0.15],[0.072,0.121],[0.125,0.1],[0.098,0.073],[0,0],[0,0],[0.146,-0.024],[0,0],[0.147,0],[-0.072,0.173],[-0.246,0.198],[0.245,0.269],[0.066,0.025],[0.062,-0.009],[0.06,0.011],[0.071,-0.006],[0.102,0.022],[0,0],[0.099,0.125],[0.097,0.146],[0.072,0.172],[0.02,0.124],[0.072,0.169],[0.37,0.269],[0.148,0.102],[0.074,0.097],[0.052,0.125],[0.073,0.146],[0.17,0.122],[0.025,0.119],[0.023,0.196],[0.294,0.018],[0.148,0],[0.12,0.042],[0.099,0.075],[0.194,0.297],[0.148,0.052],[0.116,-0.017],[0.146,0.023],[0.127,0.024],[0.12,0.02],[0.168,0.049],[0.157,0.043],[0.108,-0.012],[0,0],[0.171,0.02],[0.174,0.049],[0,0],[0.173,0],[0.198,0],[0.097,-0.071],[0.126,-0.145],[0.171,-0.098],[0.294,0],[-0.047,-0.297],[-0.081,-0.05],[-0.075,0.016],[-0.296,-0.123],[-0.121,-0.027],[-0.122,0],[-0.342,-0.026],[-0.149,0],[0,0],[-0.295,0],[-0.149,0],[-0.148,-0.121],[-0.098,-0.151],[-0.077,-0.273],[0,-0.145],[-0.027,-0.121],[-0.075,-0.174],[-0.072,-0.149],[-0.023,-0.126],[0,0],[-0.023,-0.145],[-0.024,-0.268],[0,-0.127],[-0.02,-0.149],[-0.126,-0.22],[0,-0.244],[0,0],[0,-0.17],[0,0],[0,-0.368],[0,0],[0,-0.248],[0,-0.148],[0,-0.297],[0.099,-0.173],[0.099,-0.073],[0.27,-0.073],[0.196,-0.048],[0.343,-0.566],[0.026,-0.128],[0.074,-0.149],[0.099,-0.095],[0.146,-0.071],[0.061,-0.022],[0.068,0.012],[0.15,-0.073],[0,0],[-0.223,-0.023],[-0.345,0],[-0.146,-0.046],[-0.101,-0.076],[-0.121,-0.17],[-0.122,-0.048],[-0.172,-0.072],[-0.176,-0.097],[-0.099,-0.145],[-0.072,-0.266],[0,0],[0,-0.177],[0.099,-0.197],[0.37,-0.366],[0,0],[0,0],[0,-0.149],[0.096,-0.151],[0.173,-0.271],[0.05,-0.144],[0.025,-0.124],[0,-0.148],[0,-0.12],[0.05,-0.193],[0.392,0],[0.248,0],[0.172,-0.097],[0.025,-0.126],[0,0],[0,-0.169],[-0.073,0.012],[-0.06,-0.007],[-0.174,0.025],[-0.195,0.097],[-0.071,0.031],[-0.057,-0.009],[-0.099,-0.143],[-0.048,-0.272],[-0.022,-0.29],[0,-0.145],[0,0],[0,0],[0.348,0],[0.346,0.172],[0,0],[0,-0.173],[0,-0.197],[0,0],[0,-0.146],[0.051,-0.145],[0.072,-0.146],[0.051,-0.126],[0,-0.152],[-0.05,-0.296],[-0.028,-0.122],[0,0],[0,0],[0.173,0],[0,0],[0.292,0],[0.32,-0.078],[0,0],[0.343,0],[0.199,0],[0.073,-0.101],[0.049,-0.126],[0.072,-0.171],[0.174,-0.295],[0.12,-0.148],[0.293,-0.172],[0.151,-0.098],[0.098,-0.144],[0,0],[0.073,-0.142],[0,0],[0,0],[-0.147,0],[0,0],[0,-0.147],[-0.025,-0.123],[-0.049,-0.175],[-0.147,-0.126],[-0.324,-0.201],[-0.12,-0.099],[-0.097,-0.145],[-0.05,-0.098],[0,0],[0.342,0],[0.368,0.121],[0.173,0.073],[0.063,0.016],[0.064,-0.006],[0.44,0.099],[0.147,0],[0.194,-0.048],[0.271,-0.044],[0.293,0],[0.171,-0.044],[0.123,-0.047],[0.151,-0.125],[0.195,-0.269],[0.074,-0.148],[0.099,-0.173],[0.121,-0.067],[0.197,-0.095],[0.097,-0.151],[0.027,-0.122],[0.05,-0.272],[0.222,-0.293],[0.069,-0.17],[0.073,-0.444],[0,-0.151],[0,-0.122],[0.051,-0.147],[0.173,-0.273],[0.148,-0.047],[0.169,0],[-0.05,0.149],[-0.027,0.119],[-0.022,0.148],[0,0.197],[0.293,-0.144],[0.1,-0.095],[0.172,-0.273],[0.072,-0.144],[0.098,-0.173],[0.073,-0.128],[0.075,-0.177],[0.051,-0.122],[0.05,-0.149],[0.024,-0.124],[0.048,-0.149],[0.101,-0.147],[0.1,-0.075],[0.119,-0.052],[0.169,-0.048],[0.172,-0.101],[0.073,-0.148],[0.024,-0.294],[0,-0.294],[-0.05,-0.296],[-0.024,-0.123],[0,-0.195],[-0.023,-0.345],[0,-0.345],[0.027,-0.155],[0.073,-0.172],[0.149,-0.145],[0.269,-0.194],[0.124,-0.055],[0.147,-0.078],[0.147,-0.173],[0.098,-0.145],[0.098,-0.172],[0.123,-0.148],[0.146,-0.1],[0,0],[0.368,0],[0.147,-0.098],[0.099,-0.123],[0.121,-0.15],[0,0],[0.025,-0.224],[0.028,-0.125],[0.049,-0.197],[0.098,-0.047],[0.123,-0.096],[0.249,-0.297],[0.176,-0.267],[0.051,-0.125],[0.1,-0.17],[0.221,-0.172],[0.198,-0.169],[0.026,-0.539],[0.048,-0.15],[0.072,-0.118],[0.072,-0.097],[0.096,-0.125],[0.075,-0.149],[0.026,-0.126],[0.026,-0.269],[0,-0.466],[0,-0.147],[0,0],[0.026,-0.145],[0.097,-0.34],[0.022,-0.121],[0.024,-0.121],[0,-0.126],[0.027,-0.224],[0,0],[-0.023,-0.399],[0,0],[0,-0.149],[0,0],[0.145,-0.028],[0.059,-0.011],[0.07,0.006],[0.173,-0.047],[0.15,-0.073],[0.42,-0.295],[0.049,-0.172],[0.076,-0.291],[0.099,-0.146],[0.063,-0.037],[0.063,0.014],[0.124,-0.051],[0.394,-0.147],[0.097,-0.049],[0.223,-0.226],[0.324,-0.633],[0.052,-0.124],[0.077,-0.176],[0.098,-0.124],[0.045,-0.124],[0,0],[0.174,-0.34],[0.025,-0.22],[0,-0.223],[-0.022,-0.171],[-0.169,-0.342],[-0.052,-0.271],[-0.022,-0.295],[0,-0.346],[-0.071,-0.173],[-0.27,-0.171],[0,0],[-0.173,0],[-0.148,-0.023],[-0.087,-0.012],[-0.081,0.007],[-0.122,-0.026],[-0.322,-0.098],[-0.121,-0.078],[-0.07,-0.099],[-0.122,-0.267],[-0.025,-0.127],[-0.048,-0.174],[-0.147,-0.148],[-0.171,-0.122],[-0.121,-0.074],[-0.197,-0.075],[-0.397,0],[0,0],[-0.196,0],[-0.342,-0.147],[-0.147,-0.072],[-0.294,-0.098],[-0.367,0],[0,0.464],[-0.224,0],[-0.15,0],[-0.126,0],[-0.149,-0.024],[-0.149,-0.073],[-0.099,-0.075],[0.146,-0.123],[0.122,-0.075],[0.148,-0.073],[0,0],[-0.078,-0.013],[-0.061,0.005],[-0.149,-0.026],[-0.172,-0.051],[-0.171,-0.048],[-0.174,-0.1],[-0.145,-0.1],[-0.096,-0.048],[-0.196,-0.1],[-0.171,-0.028],[-0.147,0],[0,0],[-0.148,-0.03],[-0.221,-0.074],[-0.294,-0.118],[-0.321,0],[0,0],[0,0],[0,0],[0.05,-0.123],[0.097,-0.179],[0.122,-0.1],[0.099,-0.068],[0.15,-0.221],[-0.293,-0.025],[-0.171,-0.049],[-0.273,-0.099],[-0.169,-0.047],[0,0],[0,0],[-0.197,0],[0,0.294],[0,0.146],[-0.148,0.391],[-0.269,0],[0,0],[0,-0.145],[0,-0.148],[0.443,0],[0.123,-0.046],[0.125,-0.097],[0.1,-0.27],[0.025,-0.296],[0.026,-0.221],[0,-0.414],[-0.22,0],[-0.145,0],[-0.125,0],[0,0],[0,-0.176],[-0.022,-0.171],[-0.021,-0.122],[-0.074,-0.196],[-0.049,-0.123],[-0.097,-0.147],[-0.052,-0.037],[-0.067,0.014],[-0.297,-0.121],[-0.12,-0.098],[-0.146,-0.272],[-0.099,-0.076],[-0.124,-0.074],[-0.146,-0.072],[-0.177,-0.072],[-0.115,0.017],[-0.197,0],[-0.194,-0.097],[0,0],[-0.221,-0.099],[-0.219,0],[-0.172,0.075],[-0.316,0.218],[0,0],[-0.151,0],[-0.294,-0.027],[-0.316,-0.097],[-0.121,-0.05],[-0.294,-0.116],[-0.319,-0.198],[-0.15,-0.124],[-0.095,-0.169],[-0.075,-0.445],[-0.196,-0.021],[-0.062,-0.013],[-0.066,0.006],[-0.174,-0.052],[-0.147,-0.072],[-0.17,-0.096],[-0.124,-0.124],[-0.075,-0.104],[-0.054,-0.038],[-0.067,0.015],[-0.17,-0.072],[-0.12,-0.095],[-0.05,-0.124],[-0.074,-0.319],[0,0],[-0.266,0.054],[-0.296,0.096],[-0.119,0],[-0.194,0],[-0.048,-0.122],[-0.1,-0.366],[0,0],[0.169,-0.049],[-0.148,-0.197],[-0.176,-0.076],[-0.148,-0.048],[-0.168,-0.049],[0,0],[0,0],[-0.148,-0.051],[-0.27,-0.073],[-0.271,0],[-0.074,0.103],[-0.048,0.12],[-0.05,0.147],[-0.173,0.271],[-0.197,0],[-0.147,-0.074],[-0.097,-0.121],[-0.097,-0.147],[-0.297,-0.146],[-0.174,-0.024],[0,0],[-0.175,0],[-0.37,-0.1],[0,0],[-0.291,0],[-0.174,0],[-0.171,-0.049],[-0.146,-0.095],[-0.124,-0.047],[-0.494,-0.172],[0,0.294],[0,0.197],[-0.1,0.125],[-0.137,0.025],[-0.128,-0.013],[-0.174,0.026],[-0.169,0.077],[-0.148,0.125],[0,0.148],[0,0.147],[0.023,0.122],[0.023,0.15],[0.025,0.194],[0,0.224],[-0.025,0.195],[-0.124,-0.101],[-0.125,-0.124],[-0.27,-0.346],[-0.119,-0.323],[0,-0.15],[0.051,-0.173],[0.026,-0.121],[0.023,-0.123],[0,-0.245],[0,-0.465],[0.12,-0.097],[0.122,-0.095],[0.123,-0.098],[0,0],[0,0]],\"v\":[[-156.459,25.264],[-156.875,25.357],[-157.27,25.459],[-157.659,25.655],[-157.759,26.048],[-157.759,26.936],[-159.993,26.936],[-160.805,27.424],[-161.2,27.719],[-161.693,27.916],[-162.184,28.111],[-163.068,28.305],[-163.463,28.41],[-164.247,28.41],[-164.247,30.668],[-165.036,31.256],[-165.425,31.359],[-166.214,31.359],[-166.214,31.946],[-166.412,32.339],[-166.605,32.733],[-166.605,33.127],[-167.002,33.426],[-167.788,34.013],[-168.18,34.306],[-168.18,34.7],[-168.574,35.094],[-168.6,35.463],[-168.6,35.856],[-168.396,35.858],[-168.208,35.856],[-167.716,35.956],[-167.716,37.526],[-167.617,37.921],[-167.224,38.708],[-167.129,39.102],[-167.028,39.69],[-167.129,40.278],[-167.521,40.577],[-168.009,40.97],[-168.009,41.359],[-167.914,42.149],[-168.009,43.032],[-168.404,43.426],[-168.7,43.818],[-168.898,43.819],[-169.09,43.818],[-169.878,43.919],[-169.978,44.508],[-169.683,44.904],[-169.683,45.294],[-170.863,45.978],[-170.959,46.772],[-171.351,46.868],[-172.14,47.163],[-172.434,47.556],[-172.73,49.124],[-174.403,49.124],[-174.306,50.309],[-174.403,51.095],[-174.5,51.487],[-174.403,51.904],[-174.5,52.373],[-174.11,53.157],[-173.713,52.964],[-173.097,52.768],[-172.239,52.862],[-172.239,53.647],[-172.434,54.046],[-173.221,54.339],[-173.614,54.339],[-174.11,54.436],[-174.11,55.224],[-174.205,55.618],[-174.599,55.811],[-174.99,56.107],[-175.385,56.401],[-175.482,56.992],[-175.385,57.587],[-175.09,57.98],[-174.793,58.372],[-174.793,58.765],[-174.793,59.648],[-174.793,60.043],[-174.5,60.433],[-174.11,60.63],[-173.713,60.63],[-173.318,60.63],[-172.926,60.825],[-172.534,61.025],[-172.14,61.417],[-171.944,61.811],[-171.648,62.3],[-171.453,62.693],[-171.058,62.992],[-170.863,63.385],[-170.863,64.169],[-170.764,64.566],[-170.665,64.956],[-170.274,65.252],[-169.978,65.645],[-169.584,65.94],[-169.485,66.725],[-169.485,67.612],[-169.191,68.104],[-168.995,68.497],[-168.6,68.79],[-168.11,69.97],[-168.009,71.249],[-167.815,71.642],[-167.421,71.839],[-167.224,72.231],[-166.832,72.426],[-166.439,72.72],[-166.045,72.92],[-165.848,73.316],[-165.848,73.705],[-165.848,74.687],[-165.75,75.18],[-165.75,75.575],[-165.358,75.868],[-164.964,76.654],[-164.764,77.05],[-164.374,77.342],[-163.982,77.54],[-163.49,77.838],[-163.095,78.132],[-162.702,78.229],[-162.309,78.229],[-161.915,78.229],[-161.522,78.524],[-161.131,78.916],[-160.836,79.312],[-160.439,79.508],[-160.049,79.799],[-159.262,80.388],[-158.475,80.687],[-158.081,80.883],[-157.197,81.469],[-156.999,81.865],[-156.608,82.261],[-155.918,83.043],[-155.624,83.438],[-155.232,83.438],[-154.47,83.438],[-154.47,87.545],[-154.641,88.354],[-154.542,88.941],[-154.641,89.139],[-154.641,89.53],[-154.445,90.491],[-154.445,90.712],[-154.641,91.108],[-154.641,91.499],[-154.835,91.895],[-154.74,92.558],[-154.835,92.677],[-154.835,93.171],[-154.641,93.564],[-154.641,94.129],[-154.641,94.351],[-154.641,94.742],[-154.936,95.234],[-154.936,96.119],[-154.641,96.614],[-154.641,97.004],[-154.641,97.397],[-154.835,97.792],[-154.835,98.189],[-154.936,98.58],[-155.133,98.972],[-155.329,99.463],[-155.819,100.446],[-156.015,100.936],[-156.015,101.695],[-156.114,101.921],[-156.015,102.904],[-155.918,103.295],[-156.015,103.766],[-155.918,104.278],[-156.015,104.672],[-156.313,105.166],[-156.409,105.558],[-156.707,105.953],[-157.098,106.443],[-157.687,107.573],[-157.687,107.817],[-157.592,108.21],[-157.592,108.606],[-157.393,109],[-157.098,109.394],[-156.608,110.968],[-156.903,112.533],[-156.999,112.932],[-156.999,114.109],[-157.294,114.998],[-157.393,115.389],[-157.786,115.782],[-157.786,116.274],[-157.984,116.667],[-158.278,117.058],[-158.671,117.454],[-158.966,117.749],[-158.966,118.533],[-158.867,119.027],[-158.966,119.642],[-158.867,119.91],[-158.867,120.306],[-159.164,120.698],[-159.361,121.092],[-159.755,121.485],[-159.853,121.975],[-160.439,122.466],[-160.836,122.761],[-161.03,123.152],[-161.131,123.547],[-160.736,123.938],[-160.736,124.334],[-160.439,125.123],[-160.439,125.515],[-160.344,125.908],[-160.344,126.742],[-160.638,128.365],[-160.935,128.758],[-161.326,129.053],[-161.423,129.843],[-161.423,130.234],[-161.131,130.627],[-160.935,131.02],[-160.541,131.834],[-160.638,132.2],[-161.423,132.295],[-161.817,132.594],[-161.915,132.986],[-162.014,133.38],[-162.409,133.775],[-162.409,134.166],[-162.508,134.753],[-162.31,135.341],[-161.915,135.546],[-161.497,135.839],[-160.245,135.839],[-159.95,132.295],[-158.475,132.295],[-158.475,133.473],[-158.768,133.87],[-159.164,134.071],[-159.46,134.459],[-159.46,136.525],[-159.755,136.916],[-160.144,137.213],[-160.245,137.607],[-160.291,137.999],[-160.144,139.276],[-160.144,140.458],[-160.291,140.852],[-160.736,140.555],[-161.03,140.162],[-161.209,140.132],[-161.423,140.065],[-161.423,139.673],[-161.423,139.276],[-161.522,138.49],[-161.522,138.688],[-162.112,138.688],[-162.112,139.865],[-161.718,139.969],[-161.522,140.357],[-161.131,140.652],[-160.935,141.047],[-160.935,141.44],[-160.836,141.835],[-160.836,142.617],[-161.131,142.422],[-161.522,142.326],[-161.915,142.131],[-161.915,141.735],[-162.014,141.342],[-162.409,141.047],[-162.799,141.247],[-162.799,142.422],[-163.587,142.617],[-163.786,143.013],[-164.176,143.31],[-163.291,144.195],[-162.898,144.093],[-162.508,144.195],[-162.32,144.193],[-162.112,144.195],[-161.817,144.586],[-161.915,144.977],[-162.31,145.37],[-162.112,145.763],[-162.112,146.159],[-161.03,146.26],[-160.245,146.649],[-160.439,147.042],[-160.439,147.441],[-161.227,147.441],[-161.622,147.441],[-162.409,147.732],[-162.752,147.727],[-163.192,147.732],[-163.587,148.026],[-163.982,148.422],[-163.982,148.618],[-163.786,149.012],[-163.786,149.403],[-163.786,149.796],[-163.392,149.994],[-163.095,150.584],[-163.095,150.781],[-163.392,151.172],[-163.587,151.564],[-162.996,152.256],[-162.606,153.039],[-162.996,153.236],[-162.898,153.63],[-162.508,153.824],[-162.112,154.023],[-162.112,154.416],[-162.898,154.812],[-162.702,155.301],[-162.31,155.205],[-161.522,155.205],[-161.131,155.301],[-161.227,155.792],[-162.014,156.187],[-161.326,156.878],[-161.115,156.882],[-160.935,156.878],[-160.747,156.876],[-160.541,156.878],[-160.541,157.171],[-160.935,157.464],[-160.638,157.857],[-160.245,158.153],[-160.144,158.644],[-160.245,159.039],[-159.853,159.334],[-158.671,159.821],[-158.278,160.117],[-158.181,160.51],[-158.081,160.908],[-157.687,161.102],[-157.197,161.4],[-157.294,161.791],[-157.197,162.381],[-156.409,162.482],[-156.015,162.482],[-155.624,162.576],[-155.624,162.968],[-154.936,163.66],[-154.506,163.671],[-154.149,163.66],[-153.759,163.854],[-153.362,163.955],[-152.967,164.052],[-152.578,164.348],[-152.136,164.36],[-151.791,164.348],[-151.396,164.348],[-151.006,164.639],[-150.485,164.742],[-147.366,164.742],[-146.974,164.937],[-146.581,164.639],[-146.484,164.245],[-146.087,163.906],[-145.497,163.955],[-144.714,163.906],[-144.909,163.164],[-145.171,163.154],[-145.4,163.164],[-146.188,162.775],[-146.581,162.775],[-146.974,162.677],[-147.858,162.677],[-148.249,162.576],[-148.249,161.691],[-149.038,161.691],[-149.431,161.691],[-149.823,161.4],[-149.921,160.908],[-150.117,160.117],[-150.117,159.724],[-150.117,159.334],[-150.512,159.039],[-150.708,158.644],[-150.708,158.252],[-150.708,157.857],[-150.905,157.464],[-150.905,156.682],[-151.006,156.287],[-151.2,155.891],[-151.669,155.4],[-151.493,154.812],[-151.493,154.416],[-151.691,154.023],[-151.691,152.745],[-151.592,151.812],[-149.627,151.812],[-149.627,151.172],[-149.727,150.781],[-149.627,149.994],[-149.333,149.601],[-148.939,149.502],[-148.152,149.403],[-147.759,149.012],[-147.17,147.441],[-147.071,147.042],[-146.776,146.649],[-146.383,146.453],[-145.991,146.159],[-145.796,146.16],[-145.598,146.159],[-145.4,145.763],[-145.4,144.977],[-145.991,144.878],[-146.875,144.878],[-147.265,144.68],[-147.366,144.29],[-147.759,143.896],[-148.152,143.799],[-148.544,143.503],[-148.939,143.112],[-149.234,142.718],[-149.333,141.93],[-149.333,141.542],[-149.137,141.144],[-148.743,140.752],[-147.538,140.065],[-145.203,140.065],[-145.203,137.879],[-145.103,137.508],[-144.714,137.213],[-144.319,136.424],[-144.122,136.032],[-144.122,135.641],[-144.219,135.245],[-144.122,134.851],[-143.729,134.459],[-142.745,134.658],[-142.155,134.459],[-141.762,134.071],[-141.762,133.676],[-141.762,133.277],[-141.961,132.887],[-142.158,132.888],[-142.352,132.887],[-142.745,133.083],[-143.139,133.473],[-143.365,133.482],[-143.531,133.473],[-144.236,133.229],[-144.236,132.44],[-144.331,131.654],[-144.431,131.286],[-144.431,130.084],[-143.77,130.084],[-142.958,130.375],[-142.146,130.969],[-139.712,130.969],[-139.513,130.572],[-139.811,130.179],[-139.811,129.787],[-139.811,129.394],[-139.613,129.001],[-139.221,128.808],[-139.221,128.415],[-139.221,128.019],[-139.513,127.232],[-139.613,126.863],[-139.613,125.953],[-137.77,125.953],[-137.354,125.854],[-136.564,125.854],[-135.781,125.759],[-134.969,125.465],[-133.051,125.465],[-132.241,125.759],[-131.846,125.465],[-131.749,125.07],[-131.65,124.675],[-131.358,124.284],[-130.865,123.497],[-130.37,123.2],[-129.587,122.709],[-129.29,122.315],[-128.995,121.923],[-128.801,121.527],[-128.602,121.159],[-128.602,119.959],[-128.995,119.959],[-129.389,119.856],[-129.389,119.073],[-129.389,118.678],[-129.486,118.288],[-129.882,117.993],[-130.37,117.697],[-131.161,117.006],[-131.552,116.811],[-131.846,116.418],[-131.846,116.026],[-130.298,116.026],[-129.389,116.222],[-128.602,116.811],[-128.207,117.103],[-128.001,117.106],[-127.814,117.103],[-126.637,117.302],[-126.241,117.302],[-125.852,116.907],[-125.061,116.907],[-124.276,116.907],[-123.885,116.614],[-123.493,116.516],[-123.194,116.122],[-122.802,115.337],[-122.607,114.944],[-122.212,114.547],[-121.819,114.45],[-121.327,114.159],[-121.034,113.765],[-120.935,113.37],[-120.935,112.582],[-120.245,111.797],[-119.951,111.407],[-119.951,110.228],[-119.854,109.83],[-119.854,109.436],[-119.658,109.047],[-118.969,108.453],[-118.574,108.259],[-118.184,108.453],[-118.378,108.848],[-118.478,109.24],[-118.673,109.633],[-118.378,110.025],[-117.591,109.633],[-117.395,109.24],[-117.003,108.453],[-116.806,108.063],[-116.411,107.672],[-116.216,107.279],[-115.921,106.884],[-115.822,106.488],[-115.626,106.097],[-115.626,105.703],[-115.431,105.306],[-115.137,104.916],[-114.74,104.82],[-114.348,104.717],[-113.954,104.427],[-113.561,104.028],[-113.365,103.637],[-113.365,102.851],[-113.365,102.063],[-113.66,101.279],[-113.66,100.885],[-113.759,100.394],[-113.759,99.509],[-113.759,98.627],[-113.561,98.23],[-113.169,97.935],[-112.775,97.542],[-111.988,97.056],[-111.594,96.955],[-111.398,96.559],[-111.005,96.068],[-110.712,95.674],[-110.417,95.183],[-110.021,94.889],[-109.607,94.593],[-107.686,94.593],[-106.876,94.103],[-106.486,93.807],[-106.286,93.414],[-105.892,93.118],[-101.076,93.118],[-100.978,92.531],[-100.978,92.136],[-100.585,91.74],[-100.191,91.643],[-99.995,91.249],[-99.406,90.464],[-98.915,89.679],[-98.915,89.283],[-98.618,88.891],[-97.833,88.695],[-97.635,87.907],[-97.34,86.337],[-97.142,85.94],[-96.947,85.548],[-96.553,85.451],[-96.358,85.058],[-96.163,84.666],[-96.163,84.27],[-96.064,83.485],[-96.064,82.305],[-95.964,81.91],[-95.964,81.517],[-95.766,81.125],[-95.374,80.239],[-95.276,79.846],[-95.178,79.454],[-95.081,79.059],[-95.081,78.47],[-95.081,77.883],[-95.276,76.897],[-95.276,76.013],[-95.374,75.645],[-95.374,73.261],[-94.982,73.16],[-94.792,73.162],[-94.589,73.16],[-94.195,72.868],[-93.803,72.671],[-92.917,71.587],[-92.819,71.096],[-92.522,70.309],[-92.228,69.916],[-92.021,69.912],[-91.835,69.916],[-91.443,69.819],[-90.655,69.032],[-90.263,68.937],[-89.872,68.145],[-88.986,66.477],[-88.887,66.085],[-88.493,65.79],[-88.098,65.495],[-87.999,65.099],[-87.805,64.706],[-87.312,63.822],[-87.312,63.233],[-87.312,62.643],[-87.611,62.249],[-88.098,61.365],[-88.493,60.381],[-88.493,59.596],[-88.594,58.711],[-88.887,58.316],[-89.699,57.924],[-91.615,57.924],[-92.031,57.825],[-92.423,57.629],[-92.669,57.63],[-92.917,57.629],[-93.309,57.53],[-94.098,57.139],[-94.491,56.943],[-94.589,56.544],[-94.883,55.762],[-94.883,55.368],[-95.276,55.073],[-95.766,54.777],[-96.163,54.383],[-96.553,54.285],[-97.142,54.188],[-98.151,54.481],[-100.559,54.481],[-101.076,54.383],[-101.863,53.795],[-102.257,53.599],[-103.068,53.501],[-104.026,53.599],[-104.073,54.777],[-104.615,54.777],[-105.008,54.679],[-105.4,54.679],[-105.796,54.481],[-106.188,54.285],[-106.286,53.892],[-105.991,53.501],[-105.598,53.402],[-105.206,53.107],[-105.4,52.715],[-105.616,52.714],[-105.796,52.715],[-106.188,52.517],[-106.68,52.418],[-107.072,52.123],[-107.566,51.828],[-107.861,51.435],[-108.253,51.34],[-108.845,51.046],[-109.335,51.046],[-109.727,50.949],[-110.12,50.949],[-110.513,50.747],[-111.104,50.449],[-112.013,50.253],[-112.823,50.353],[-112.823,52.221],[-114.445,52.221],[-114.445,51.435],[-114.348,51.046],[-113.954,50.65],[-113.66,50.253],[-113.268,50.157],[-113.169,49.373],[-113.954,49.271],[-114.348,48.975],[-115.137,48.779],[-115.626,48.583],[-116.043,48.583],[-116.411,48.583],[-116.905,48.681],[-116.905,49.471],[-116.905,49.862],[-117.789,50.449],[-118.478,50.353],[-118.478,49.566],[-118.378,49.176],[-118.451,48.779],[-117.297,48.681],[-116.905,48.583],[-116.708,48.191],[-116.708,47.405],[-116.608,46.619],[-116.51,46.052],[-116.608,44.994],[-117.201,45.047],[-117.591,44.946],[-117.888,44.994],[-117.888,42.859],[-118.085,42.489],[-118.184,41.997],[-118.281,41.604],[-118.673,41.211],[-118.673,40.818],[-118.969,40.423],[-119.168,40.419],[-119.361,40.423],[-120.501,39.91],[-120.892,39.713],[-121.188,38.928],[-121.581,38.829],[-121.977,38.631],[-122.27,38.235],[-122.779,38.214],[-123.154,38.235],[-123.647,38.042],[-124.138,37.749],[-124.531,37.552],[-125.122,37.256],[-125.708,37.356],[-126.007,37.749],[-127.036,37.843],[-127.676,37.843],[-128.069,37.749],[-128.857,37.649],[-129.645,37.256],[-130.036,37.154],[-130.823,36.668],[-131.706,36.175],[-132.003,35.778],[-132.297,35.292],[-132.297,34.109],[-132.789,34.013],[-132.99,34.013],[-133.181,34.013],[-133.576,33.718],[-133.969,33.522],[-134.359,33.127],[-134.753,32.934],[-134.753,32.537],[-134.954,32.532],[-135.148,32.537],[-135.639,32.241],[-136.031,31.946],[-136.129,31.554],[-136.129,30.668],[-136.526,30.668],[-137.31,30.867],[-138.1,31.16],[-138.492,31.256],[-138.982,31.061],[-138.982,30.668],[-139.082,29.687],[-138.587,29.586],[-138.197,29.294],[-138.587,28.804],[-139.082,28.704],[-139.475,28.506],[-139.966,28.41],[-140.85,29.097],[-141.049,29.097],[-141.44,28.898],[-142.177,28.704],[-142.816,28.898],[-142.917,29.294],[-143.012,29.687],[-143.21,30.08],[-143.898,30.668],[-144.389,30.572],[-144.585,30.175],[-144.88,29.782],[-145.176,29.39],[-146.06,29.097],[-146.576,29.001],[-148.589,29.001],[-149.008,28.804],[-149.995,28.605],[-149.995,27.424],[-150.778,27.424],[-151.173,27.228],[-151.665,27.031],[-151.958,26.636],[-152.351,26.538],[-153.727,26.244],[-153.727,27.031],[-153.925,27.523],[-154.219,27.916],[-154.615,27.917],[-155.006,27.916],[-155.401,28.211],[-155.792,28.506],[-156.186,28.898],[-156.087,29.294],[-155.988,29.687],[-155.988,30.08],[-155.792,30.474],[-155.792,31.061],[-155.792,31.653],[-155.988,32.146],[-156.382,31.946],[-156.579,31.554],[-157.171,30.572],[-157.367,29.687],[-157.367,29.294],[-157.071,28.898],[-156.972,28.506],[-156.875,28.111],[-157.171,27.523],[-156.481,26.538],[-156.087,26.244],[-155.792,25.852],[-155.401,25.655],[-155.596,25.264]],\"c\":true},\"ix\":2},\"nm\":\"Path 95\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":95,\"ty\":\"sh\",\"ix\":96,\"ks\":{\"a\":0,\"k\":{\"i\":[[0.078,-0.171],[0,0],[0.075,-0.1],[0.318,-0.079],[0.147,0],[0.168,-0.073],[0.121,-0.17],[0.1,-0.069],[0.295,0],[0.12,0.023],[0.147,0.096],[0.273,-0.096],[0.101,-0.071],[0.101,-0.076],[0.146,-0.051],[0.122,0],[0.121,-0.024],[0.117,-0.074],[0.125,-0.147],[0,-0.172],[0,0],[0,0],[-0.023,0.172],[0,0],[0,0],[-0.045,0.098],[-0.123,0.072],[-0.171,0.051],[-0.342,0],[-0.468,-0.025],[0,0],[-0.096,-0.272],[-0.097,-0.097],[-0.15,-0.078],[-0.072,0.009],[-0.056,-0.013],[-0.176,-0.073],[-0.194,-0.075],[-0.079,0.02],[-0.057,-0.07],[-0.096,-0.126],[-0.096,-0.099],[-0.078,0.022],[-0.055,-0.022],[-0.168,-0.069],[0,0],[0,0],[0.077,0.12],[0.048,0.144],[0.024,0.12],[0.05,0.273],[-0.198,0],[-0.174,-0.022],[-0.126,-0.022],[-0.151,0],[0,0],[0,0],[0,0],[0.047,0.149],[0.069,0.125],[0.321,0]],\"o\":[[0,0],[-0.054,0.124],[-0.193,0.247],[-0.121,0.02],[-0.194,0.019],[-0.177,0.072],[-0.049,0.096],[-0.219,0.201],[-0.146,0],[-0.174,-0.025],[-0.296,0.026],[-0.122,0.051],[-0.095,0.073],[-0.123,0.098],[-0.124,0.048],[-0.122,0],[-0.147,0.048],[-0.152,0.098],[-0.096,0.125],[0,0],[0,0],[0.07,-0.175],[0,0],[0,0],[0,-0.124],[0.051,-0.096],[0.148,-0.077],[0.319,-0.101],[0.467,0],[0,0],[0,0.293],[0.051,0.148],[0.097,0.098],[0.065,0.025],[0.062,-0.009],[0.174,0.046],[0.195,0.102],[0.073,0.021],[0.104,-0.026],[0.1,0.121],[0.077,0.096],[0.055,0.054],[0.064,-0.017],[0.153,0.072],[0,0],[0,0],[0,-0.171],[-0.073,-0.126],[-0.05,-0.123],[-0.072,-0.276],[0.17,-0.046],[0.194,0],[0.123,0.024],[0.12,0.027],[0,0],[0,0],[0,0],[0,-0.168],[-0.05,-0.143],[-0.176,-0.243],[-0.219,0]],\"v\":[[214.121,30.842],[213.926,31.235],[213.822,31.631],[213.04,32.025],[212.646,31.927],[212.257,32.221],[211.86,32.611],[211.759,33.003],[210.975,33.204],[210.582,33.204],[210.483,32.611],[209.696,32.707],[209.303,32.809],[209.303,33.204],[208.91,33.399],[208.517,33.399],[208.124,33.399],[207.733,33.596],[207.434,33.987],[207.236,34.356],[207.236,36.348],[207.634,36.645],[207.926,36.251],[207.926,35.856],[207.926,35.463],[207.926,35.069],[208.321,34.973],[208.714,34.678],[209.574,34.577],[210.777,34.678],[210.777,35.463],[210.777,36.251],[210.975,36.645],[211.368,36.843],[211.579,36.848],[211.759,36.843],[212.157,37.134],[212.646,37.431],[212.879,37.413],[213.137,37.431],[213.43,37.825],[213.43,38.217],[213.639,38.229],[213.822,38.217],[214.217,38.507],[214.61,38.412],[214.61,37.649],[214.512,37.236],[214.121,37.038],[214.121,36.645],[213.926,35.856],[214.319,35.56],[214.811,35.756],[215.204,35.856],[215.598,35.856],[215.887,35.463],[215.499,34.678],[215.499,31.752],[215.4,31.331],[215.204,30.939],[214.512,30.448]],\"c\":true},\"ix\":2},\"nm\":\"Path 96\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":96,\"ty\":\"sh\",\"ix\":97,\"ks\":{\"a\":0,\"k\":{\"i\":[[0.049,-0.171],[0.026,-0.119],[0,-0.168],[0,-0.148],[0,-0.172],[0,-0.176],[0.024,-0.147],[0.049,-0.172],[0,-0.396],[-0.222,-0.517],[-0.343,-0.175],[-0.173,-0.052],[-0.322,0],[-0.439,0.028],[0,0.297],[0,0.169],[0,0.172],[0.024,0.295],[0,0],[0,0],[0.07,0.146],[0.097,0.148],[0.098,0.127],[0.1,0.124],[0.122,0.144],[0.028,0.169],[0.027,0.345],[0,0]],\"o\":[[-0.027,0.125],[-0.027,0.149],[0,0.148],[0,0.172],[0,0.171],[0,0.17],[-0.027,0.169],[-0.122,0.369],[0,0.566],[0.148,0.345],[0.173,0.072],[0.294,0.102],[0.442,0],[0,-0.291],[0,-0.173],[0,-0.173],[-0.023,-0.296],[0,0],[0,0],[-0.03,-0.17],[-0.076,-0.152],[-0.075,-0.123],[-0.101,-0.146],[-0.101,-0.122],[-0.12,-0.147],[-0.071,-0.318],[0,0],[-0.124,0.15]],\"v\":[[128.296,30.939],[128.197,31.331],[128.296,31.752],[128.197,32.121],[128.394,32.514],[128.296,32.934],[128.394,33.399],[128.098,33.792],[128.001,34.825],[128.197,36.251],[128.983,36.843],[129.376,37.134],[130.188,37.236],[131.293,37.134],[131.342,36.348],[131.293,35.883],[131.342,35.463],[131.149,34.678],[131.149,34.281],[131.149,33.888],[130.855,33.5],[130.558,33.104],[130.361,32.707],[129.967,32.415],[129.671,32.025],[129.376,31.631],[129.279,30.744],[128.691,30.644]],\"c\":true},\"ix\":2},\"nm\":\"Path 97\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":97,\"ty\":\"sh\",\"ix\":98,\"ks\":{\"a\":0,\"k\":{\"i\":[[0.074,-0.122],[0.147,-0.125],[0.174,-0.076],[0.272,-0.096],[0.143,-0.145],[0.097,-0.172],[0.073,-0.174],[0.051,-0.125],[0.072,-0.147],[0.121,-0.147],[0.102,-0.12],[0.169,-0.07],[0.147,-0.05],[0.442,-0.151],[0.145,-0.121],[0.124,-0.147],[0.096,-0.17],[0.097,-0.083],[0.125,-0.099],[0.147,-0.097],[0.119,-0.119],[0.15,-0.121],[0.175,-0.026],[0.126,0],[0.295,0],[0,0],[0.267,-0.022],[0.171,0],[0.221,0],[0.246,0.024],[0.219,0.295],[0,0],[0,0],[0.147,-0.024],[0.292,-0.515],[0.072,-0.175],[0.024,-0.124],[0,-0.345],[-0.074,-0.316],[-0.048,-0.099],[-0.146,-0.098],[-0.271,-0.199],[-0.099,-0.146],[-0.07,-0.149],[0,-0.22],[0,-0.071],[0,0],[0,-0.25],[-0.05,-0.196],[-0.048,-0.118],[-0.144,-0.126],[-0.146,-0.051],[-0.294,0],[-0.321,-0.073],[-0.099,-0.074],[-0.073,-0.098],[-0.32,-0.098],[-0.292,0],[-0.298,0.025],[-0.418,0],[-0.169,-0.098],[-0.176,-0.075],[-0.194,0],[-0.242,0],[-0.296,-0.296],[-0.199,-0.047],[-0.125,-0.024],[-0.248,0],[0,0],[-0.073,0],[0,0],[-0.099,0.072],[-0.123,0.073],[-0.119,0.097],[0,0.242],[0.056,0.201],[0.077,0.172],[0,0.196],[-0.072,0.148],[-0.1,0.123],[-0.072,0.126],[-0.048,0.198],[-0.097,0.446],[0,0],[0,0],[-0.493,0.022],[-0.172,0.053],[-0.121,0.172],[-0.072,0.148],[0.176,0.023],[0.079,-0.005],[0.086,0.012],[0.146,0],[0.296,0.022],[0,0.249],[0,0.17],[0,0],[0.052,0.197],[0.053,0.142],[0,0.317],[0,0],[-0.414,0.027],[-0.147,0],[-0.03,0.146],[-0.051,0.12],[-0.143,0.125],[-0.075,-0.017],[-0.058,0.024],[-0.174,0.075],[-0.296,0.099],[0.222,0.201],[0.299,0.025],[0.122,-0.007],[0.146,0.012],[0.169,0.046],[0.145,0.097],[0.074,0.12],[0.024,0.121],[0.047,0.124],[0.075,0.146],[0.245,0.196],[0.123,0.048],[0.123,0.024]],\"o\":[[-0.097,0.173],[-0.123,0.097],[-0.245,0.098],[-0.195,0.075],[-0.149,0.152],[-0.103,0.146],[-0.051,0.123],[-0.047,0.145],[-0.074,0.169],[-0.123,0.147],[-0.097,0.125],[-0.15,0.079],[-0.441,0.174],[-0.198,0.072],[-0.153,0.128],[-0.121,0.149],[-0.069,0.12],[-0.124,0.094],[-0.146,0.121],[-0.146,0.101],[-0.126,0.126],[-0.147,0.122],[-0.122,0.025],[-0.268,0.025],[0,0],[-0.273,-0.026],[-0.175,0.024],[-0.223,0.024],[-0.246,0],[-0.395,-0.052],[0,0],[0,0],[-0.149,0],[0,0.614],[-0.072,0.147],[-0.048,0.123],[-0.074,0.318],[0,0.342],[0.024,0.127],[0.099,0.151],[0.274,0.193],[0.147,0.1],[0.098,0.147],[0.099,0.17],[0,0.073],[0,0],[0,0.247],[0,0.219],[0.027,0.125],[0.074,0.154],[0.127,0.096],[0.273,0.097],[0.342,0],[0.121,0.023],[0.095,0.074],[0.2,0.248],[0.269,0.074],[0.296,0],[0.413,-0.05],[0.22,0],[0.174,0.101],[0.17,0.077],[0.244,0],[0.447,0],[0.144,0.146],[0.122,0.026],[0.219,0.048],[0,0],[0.071,0],[0,0],[0.073,-0.126],[0.119,-0.073],[0.124,-0.071],[0.177,-0.122],[0,-0.226],[-0.048,-0.166],[-0.071,-0.174],[0,-0.196],[0.075,-0.146],[0.096,-0.119],[0.101,-0.171],[0.15,-0.415],[0,0],[0,0],[0.492,0],[0.193,0],[0.197,-0.045],[0.076,-0.124],[-0.149,-0.096],[-0.085,-0.012],[-0.078,0.006],[-0.124,-0.024],[-0.295,0],[-0.076,-0.222],[0,-0.165],[0,0],[0,-0.222],[-0.025,-0.149],[-0.096,-0.296],[0,0],[0.414,0.028],[0.149,0],[0,-0.169],[0,-0.122],[0.071,-0.174],[0.053,-0.039],[0.066,0.014],[0.176,-0.074],[0.266,-0.143],[-0.097,-0.297],[-0.194,-0.167],[-0.148,-0.012],[-0.123,0.006],[-0.197,0],[-0.174,-0.05],[-0.124,-0.076],[-0.077,-0.126],[-0.025,-0.123],[-0.077,-0.174],[-0.171,-0.273],[-0.099,-0.073],[-0.121,-0.046],[-0.048,0.127]],\"v\":[[197.605,36.152],[197.212,36.548],[196.915,36.94],[196.129,37.134],[195.738,37.526],[195.345,37.921],[195.051,38.315],[194.949,38.708],[194.754,39.102],[194.361,39.495],[194.064,39.885],[193.772,40.278],[193.376,40.477],[192.1,40.675],[191.709,41.064],[191.311,41.359],[191.017,41.853],[190.92,42.252],[190.525,42.445],[190.132,42.738],[189.741,43.032],[189.444,43.426],[188.951,43.622],[188.559,43.723],[187.772,43.723],[187.772,45.784],[187.087,45.687],[186.693,45.883],[186.126,45.883],[185.512,45.883],[184.725,45.197],[184.332,45],[183.941,45],[183.545,45.097],[183.35,46.672],[182.956,46.968],[182.858,47.36],[182.858,48.245],[182.858,49.124],[182.956,49.52],[183.35,49.817],[184.137,50.209],[184.431,50.602],[184.822,50.898],[184.725,51.487],[184.822,51.682],[184.822,52.077],[184.629,52.67],[184.725,53.257],[184.822,53.647],[185.118,54.046],[185.512,54.242],[186.298,54.339],[187.184,54.339],[187.577,54.436],[187.673,54.829],[188.365,55.418],[189.149,55.418],[189.939,55.418],[190.92,54.926],[191.508,55.024],[191.902,55.32],[192.197,55.713],[192.785,55.418],[193.772,56.009],[194.165,56.401],[194.559,56.502],[195.171,56.502],[195.738,56.502],[195.934,56.401],[195.934,55.618],[196.033,55.224],[196.423,55.024],[196.816,54.829],[197.113,54.242],[197.012,53.647],[196.717,53.257],[196.524,52.768],[196.816,52.373],[197.212,52.077],[197.408,51.682],[197.702,51.192],[197.999,50.01],[199.176,50.01],[199.176,47.948],[200.457,47.948],[200.947,47.847],[201.34,47.457],[201.537,47.064],[201.24,46.672],[200.995,46.672],[200.751,46.672],[200.358,46.672],[199.569,46.574],[199.373,45.978],[199.569,45.588],[199.569,45],[199.569,44.409],[199.373,44.019],[199.079,43.257],[199.079,41.212],[200.158,41.263],[200.556,41.212],[200.556,40.773],[200.556,40.382],[200.848,39.984],[201.048,39.979],[201.24,39.984],[201.639,39.59],[202.421,39.297],[202.126,38.507],[201.34,38.315],[200.947,38.315],[200.556,38.315],[200.064,38.315],[199.668,38.021],[199.277,37.825],[199.277,37.431],[199.277,37.038],[198.881,36.743],[198.488,35.956],[198.095,35.856],[197.702,35.756]],\"c\":true},\"ix\":2},\"nm\":\"Path 98\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":98,\"ty\":\"sh\",\"ix\":99,\"ks\":{\"a\":0,\"k\":{\"i\":[[0.174,-0.023],[-0.025,-0.121],[-0.15,-0.268],[-0.125,-0.144],[-0.153,-0.174],[-0.146,-0.143],[-0.169,-0.071],[-0.272,-0.121],[-0.123,-0.146],[-0.123,-0.148],[-0.073,-0.172],[-0.099,-0.295],[-0.099,-0.15],[-0.15,-0.05],[-0.12,-0.027],[-0.067,0.007],[-0.063,-0.014],[-0.125,-0.053],[-0.148,-0.294],[-0.05,-0.296],[-0.027,-0.294],[0,0],[-0.074,-0.15],[-0.29,-0.222],[-0.273,-0.248],[-0.123,-0.124],[-0.249,-0.296],[-0.174,-0.345],[-0.097,-0.318],[-0.071,-0.321],[-0.051,-0.149],[-0.148,-0.269],[-0.126,-0.148],[-0.149,-0.172],[-0.123,-0.145],[-0.121,-0.122],[-0.315,-0.269],[-0.245,-0.298],[-0.127,-0.177],[-0.075,-0.126],[-0.297,-0.226],[-0.246,-0.272],[-0.099,-0.147],[-0.05,-0.124],[-0.149,0.026],[-0.122,0],[-0.344,0],[-0.272,0.049],[-0.101,0.176],[-0.028,0.175],[0,0],[-0.052,0.465],[0,0.121],[-0.027,0.292],[0,0],[-0.073,0.147],[-0.242,0],[-0.221,-0.025],[-0.172,0],[-0.17,0.048],[0.024,0.123],[0.126,0.168],[0.196,0.078],[0.064,-0.007],[0.066,0.016],[0.147,0.046],[-0.049,0.125],[-0.144,0.148],[0.125,0.075],[0.147,0.053],[0.119,0],[0.195,0],[0.173,-0.045],[0.098,-0.07],[0.047,-0.121],[0.022,-0.125],[0,0],[0,0.298],[-0.025,0.295],[0.118,0],[0,0],[0.121,-0.008],[0.179,0.027],[0.166,0.074],[0.175,0.072],[0.121,0.151],[0,0.172],[0,0],[0.396,0.097],[0.068,-0.007],[0.062,0.012],[0.121,0.145],[0.075,0.169],[0.052,0.124],[0.024,0.147],[0.024,0.126],[0,0.126],[0.072,0.169],[0.171,0],[0,0],[0.273,0.073],[0.168,0.121],[0.124,0.169],[0.073,0.1],[0.095,0.074],[0.128,0.122],[0.124,0.126],[0.122,0.101],[0.175,0.119],[0.147,0.149],[0.122,0.079],[0.271,0.127],[0.072,0.096],[0.048,0.127],[0.025,0.122],[0.094,-0.001],[0.043,0.032],[0.145,0.197],[0.144,0.369],[0.467,0.051],[0.122,0.024],[0.174,0.075],[0.121,0.052],[0.363,0.095],[0.172,0]],\"o\":[[0.025,0.147],[0.096,0.322],[0.099,0.175],[0.145,0.174],[0.116,0.148],[0.147,0.148],[0.273,0.149],[0.196,0.095],[0.125,0.147],[0.127,0.146],[0.151,0.271],[0.048,0.173],[0.071,0.121],[0.123,0.048],[0.062,0.013],[0.068,-0.007],[0.123,0.026],[0.291,0.147],[0.148,0.27],[0.023,0.272],[0,0],[0.023,0.175],[0.197,0.317],[0.296,0.221],[0.122,0.094],[0.271,0.273],[0.244,0.29],[0.149,0.294],[0.098,0.322],[0.027,0.144],[0.124,0.293],[0.101,0.17],[0.147,0.172],[0.123,0.145],[0.101,0.127],[0.294,0.295],[0.295,0.247],[0.122,0.15],[0.071,0.123],[0.219,0.297],[0.295,0.217],[0.098,0.128],[0.053,0.098],[0.148,-0.048],[0.118,-0.019],[0.32,-0.048],[0.294,0],[0.195,-0.048],[0.07,-0.145],[0,0],[0.048,-0.464],[0,-0.148],[0.024,-0.272],[0,0],[0,-0.17],[0.101,-0.199],[0.224,0],[0.174,0],[0.194,0],[-0.023,-0.123],[-0.05,-0.197],[-0.122,-0.169],[-0.059,-0.01],[-0.072,0.006],[-0.144,-0.045],[0.027,-0.124],[0.097,-0.192],[-0.096,-0.124],[-0.121,-0.073],[-0.122,-0.046],[-0.173,-0.021],[-0.202,0],[-0.123,0.028],[-0.096,0.08],[-0.05,0.124],[0,0],[-0.025,-0.297],[0,-0.295],[-0.126,-0.076],[0,0],[-0.153,-0.009],[-0.158,0.01],[-0.173,-0.022],[-0.172,-0.073],[-0.173,-0.076],[-0.097,-0.119],[0,0],[-0.418,0],[-0.059,-0.011],[-0.068,0.005],[-0.197,-0.053],[-0.098,-0.126],[-0.048,-0.124],[-0.048,-0.147],[-0.023,-0.121],[-0.023,-0.123],[-0.023,-0.173],[-0.147,0.044],[0,0],[-0.296,0],[-0.194,-0.052],[-0.176,-0.126],[-0.069,-0.099],[-0.073,-0.101],[-0.149,-0.122],[-0.12,-0.121],[-0.122,-0.119],[-0.15,-0.125],[-0.173,-0.125],[-0.1,-0.099],[-0.244,-0.166],[-0.121,-0.047],[-0.073,-0.097],[-0.047,-0.121],[-0.015,-0.067],[-0.074,0],[-0.171,-0.151],[-0.221,-0.295],[-0.468,0],[-0.148,0],[-0.174,-0.048],[-0.122,-0.05],[-0.344,-0.169],[-0.15,-0.023],[-0.17,0]],\"v\":[[156.904,38.412],[156.904,38.804],[157.296,39.59],[157.691,39.984],[158.087,40.477],[158.478,40.868],[158.868,41.263],[159.658,41.557],[160.05,41.95],[160.344,42.346],[160.736,42.738],[161.037,43.523],[161.23,44.019],[161.426,44.409],[161.818,44.508],[162.014,44.508],[162.214,44.508],[162.608,44.606],[163.196,45.294],[163.493,46.08],[163.493,46.868],[163.493,47.261],[163.787,47.653],[164.569,48.342],[165.36,49.03],[165.753,49.323],[166.342,50.113],[167.03,50.898],[167.421,51.682],[167.52,52.572],[167.719,52.964],[168.111,53.75],[168.508,54.142],[168.897,54.634],[169.29,55.024],[169.585,55.418],[170.469,56.107],[171.158,56.895],[171.553,57.29],[171.749,57.683],[172.537,58.372],[173.322,59.055],[173.712,59.352],[173.816,59.746],[174.209,59.548],[174.6,59.45],[175.485,59.45],[176.271,59.45],[176.668,59.055],[176.96,58.663],[176.96,58.269],[176.96,57.092],[177.056,56.699],[177.158,55.913],[177.158,55.517],[177.35,55.125],[177.842,54.731],[178.434,54.829],[178.827,55.024],[179.22,54.731],[179.22,54.339],[178.925,53.848],[178.533,53.451],[178.345,53.454],[178.137,53.451],[177.745,53.257],[177.745,52.862],[178.137,52.469],[177.941,52.077],[177.548,51.878],[177.158,51.78],[176.668,51.682],[176.171,51.78],[175.779,51.878],[175.683,52.273],[175.584,52.67],[174.503,52.67],[174.405,51.878],[174.503,51.095],[174.209,50.799],[173.816,50.799],[173.413,50.806],[172.93,50.799],[172.537,50.506],[172.142,50.209],[171.65,50.01],[171.553,49.547],[171.553,47.556],[170.469,47.556],[170.275,47.557],[170.077,47.556],[169.684,47.163],[169.29,46.868],[169.191,46.472],[168.996,46.08],[168.996,45.687],[168.996,45.294],[168.702,44.904],[168.306,45.097],[167.915,45.097],[167.126,45],[166.639,44.707],[166.241,44.312],[166.145,43.919],[165.753,43.818],[165.454,43.426],[165.162,43.032],[164.771,42.738],[164.376,42.346],[163.887,42.049],[163.688,41.652],[162.899,41.359],[162.507,41.263],[162.408,40.868],[162.408,40.477],[162.207,40.413],[162.016,40.382],[161.624,39.885],[161.132,39],[159.658,39.396],[159.264,39.396],[158.868,39.102],[158.478,39],[157.691,38.412],[157.296,38.217]],\"c\":true},\"ix\":2},\"nm\":\"Path 99\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":99,\"ty\":\"sh\",\"ix\":100,\"ks\":{\"a\":0,\"k\":{\"i\":[[0,-0.169],[-0.025,-0.15],[-0.049,-0.124],[-0.098,-0.075],[-0.193,0.008],[-0.096,-0.009],[0,0],[0,0.344],[0.052,0.124],[0,0]],\"o\":[[0,0.171],[0.023,0.121],[0.048,0.125],[0.132,0.115],[0.092,-0.005],[0,0],[-0.272,-0.196],[0,-0.144],[0,0],[0,0.172]],\"v\":[[158.378,43.647],[158.576,44.019],[158.673,44.409],[158.772,44.804],[159.275,44.903],[159.559,44.904],[159.658,44.508],[158.969,43.892],[158.868,43.523],[158.478,43.228]],\"c\":true},\"ix\":2},\"nm\":\"Path 100\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":100,\"ty\":\"sh\",\"ix\":101,\"ks\":{\"a\":0,\"k\":{\"i\":[[0.271,-0.27],[0.167,-0.1],[0.176,-0.072],[0.066,0.014],[0.052,-0.038],[0.027,-0.125],[0,0],[0,-0.392],[0,-0.149],[0.075,-0.275],[0.076,-0.175],[0,-0.289],[0,-0.174],[0,-0.293],[-0.069,0.007],[-0.082,-0.01],[-0.175,0],[-0.291,0.073],[0,0.365],[0.026,0.442],[-0.071,0],[-0.543,-0.027],[-0.15,-0.023],[0,0.275],[0.15,0.219],[0,0.172],[0,0.147],[0,0.199],[0.148,0],[0.292,-0.022],[0,0],[-0.054,0.15],[-0.071,0.169],[0,0.147],[0,0.194]],\"o\":[[-0.146,0.144],[-0.15,0.069],[-0.057,0.024],[-0.074,-0.016],[-0.099,0.072],[0,0],[0,0.392],[0,0.148],[0,0.295],[-0.05,0.171],[-0.1,0.269],[0,0.177],[0,0.296],[0.088,0.014],[0.066,-0.005],[0.174,0.026],[0.297,0],[0.026,-0.371],[0,-0.445],[0.077,0],[0.543,-0.027],[0.147,0],[0.025,-0.271],[0,-0.27],[-0.072,-0.127],[0,-0.149],[-0.024,-0.2],[-0.149,-0.022],[-0.294,0],[0,0],[0,-0.172],[0.072,-0.173],[0.049,-0.126],[0,-0.196],[-0.22,0.293]],\"v\":[[218.741,44.804],[218.35,45.197],[217.952,45.492],[217.761,45.487],[217.561,45.492],[217.462,45.883],[217.462,46.08],[217.66,47.064],[217.561,47.457],[217.561,48.245],[217.266,48.639],[217.021,49.395],[217.069,49.817],[217.021,50.602],[217.248,50.603],[217.462,50.602],[217.858,50.799],[218.642,50.602],[218.741,49.671],[218.642,48.538],[218.837,48.443],[220.217,48.443],[220.61,48.538],[220.709,47.874],[220.41,47.261],[220.017,47.064],[220.116,46.672],[220.116,46.179],[219.723,46.08],[218.939,46.179],[218.939,45.614],[219.037,45.197],[219.43,44.904],[219.527,44.508],[219.43,44.019]],\"c\":true},\"ix\":2},\"nm\":\"Path 101\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":101,\"ty\":\"sh\",\"ix\":102,\"ks\":{\"a\":0,\"k\":{\"i\":[[0.222,-0.089],[0.07,-0.125],[0,0],[0.394,-0.149],[0.297,-0.027],[0.395,-0.217],[0.099,-0.149],[0,-0.244],[-0.024,-0.222],[-0.444,0.22],[-0.124,0.073],[-0.149,0.096],[-0.153,0.074],[-0.147,0.05],[-0.077,-0.01],[-0.052,0.009],[-0.148,0.143],[0,0],[0,0],[-0.148,-0.049],[-0.145,-0.045],[-0.273,0],[-0.195,0.066],[-0.146,0.074],[-0.169,0.073],[-0.069,-0.013],[-0.063,0.024],[0,0],[-0.122,0.144],[-0.075,0.369],[0.122,0]],\"o\":[[-0.125,0.048],[0,0],[-0.419,0],[-0.269,0.099],[-0.47,0.021],[-0.145,0.075],[-0.121,0.196],[0,0.222],[0.467,-0.222],[0.124,-0.052],[0.148,-0.074],[0.121,-0.08],[0.149,-0.074],[0.068,-0.026],[0.058,0.008],[0.196,-0.074],[0,0],[0,0],[0.173,0],[0.15,0.051],[0.223,0.101],[0.218,0],[0.147,-0.052],[0.146,-0.074],[0.061,-0.026],[0.067,0.013],[0,0],[0.172,-0.074],[0.222,-0.273],[-0.157,0],[-0.184,0]],\"v\":[[212.352,46.179],[212.257,46.574],[205.693,46.574],[204.879,47.261],[204.094,47.36],[202.91,47.653],[202.616,48.049],[202.421,48.66],[202.519,49.226],[203.701,48.639],[204.094,48.538],[204.391,48.149],[204.783,47.948],[205.176,47.752],[205.399,47.746],[205.566,47.752],[205.96,47.36],[206.746,47.556],[209.18,47.556],[209.598,47.653],[209.99,47.847],[210.582,48.245],[211.17,48.149],[211.566,47.948],[211.86,47.556],[212.059,47.555],[212.257,47.556],[212.646,47.36],[212.939,46.968],[213.334,46.08],[212.925,46.072]],\"c\":true},\"ix\":2},\"nm\":\"Path 102\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":102,\"ty\":\"sh\",\"ix\":103,\"ks\":{\"a\":0,\"k\":{\"i\":[[0.026,-0.173],[-0.005,-0.058],[-0.266,-0.223],[-0.198,-0.148],[-0.096,-0.149],[-0.096,-0.223],[0,0.072],[0,0],[0.148,0.242],[0.102,0.123],[0.319,0.199],[0.124,0.048]],\"o\":[[-0.01,0.07],[0.161,0.286],[0.17,0.143],[0.145,0.095],[0.145,0.196],[0,-0.052],[0,0],[0,-0.317],[-0.101,-0.149],[-0.245,-0.273],[-0.127,-0.076],[-0.049,0.147]],\"v\":[[160.54,46.472],[160.54,46.659],[161.132,47.36],[161.624,47.752],[162.016,48.049],[162.309,48.639],[162.408,48.443],[162.408,48.069],[162.214,47.261],[161.818,46.968],[161.132,46.179],[160.736,46.08]],\"c\":true},\"ix\":2},\"nm\":\"Path 103\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":103,\"ty\":\"sh\",\"ix\":104,\"ks\":{\"a\":0,\"k\":{\"i\":[[0,0],[0.007,0.066],[0.033,0.067]],\"o\":[[0.014,-0.078],[-0.032,-0.058],[0,0]],\"v\":[[160.54,46.868],[160.54,46.659],[160.441,46.472]],\"c\":true},\"ix\":2},\"nm\":\"Path 104\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":104,\"ty\":\"sh\",\"ix\":105,\"ks\":{\"a\":0,\"k\":{\"i\":[[0.034,-0.026],[0.073,-0.128],[0.148,-0.295],[-0.294,-0.123],[-0.152,0.011],[-0.066,-0.011],[0,0.444],[0.198,0.097],[0.169,0],[0,0],[0.085,0]],\"o\":[[-0.097,0.071],[-0.171,0.292],[0.267,0.169],[0.068,0.027],[0.126,-0.008],[0.319,-0.324],[0,-0.248],[-0.146,-0.078],[0,0],[-0.1,0],[-0.042,0]],\"v\":[[223.066,48.049],[222.969,48.443],[222.579,49.226],[223.36,49.719],[223.736,49.725],[224.051,49.719],[224.639,48.735],[224.245,48.245],[223.855,48.049],[223.464,48.049],[223.181,48.014]],\"c\":true},\"ix\":2},\"nm\":\"Path 105\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":105,\"ty\":\"sh\",\"ix\":106,\"ks\":{\"a\":0,\"k\":{\"i\":[[0.292,-0.147],[0.172,-0.047],[0.297,0],[0.298,-0.025],[0.151,-0.1],[0.122,-0.146],[0.002,-0.002],[0,0],[0.071,0.009],[0.091,-0.026],[0.295,-0.145],[0,0],[-0.122,-0.045],[-0.145,-0.049],[-0.145,-0.023],[-0.119,0],[-0.067,0.01],[-0.098,-0.04],[-0.146,-0.1],[-0.05,-0.122],[-0.201,-0.047],[-0.148,0],[0,0],[-0.217,0],[-0.096,0],[-0.149,0],[-0.149,0],[-0.244,0],[-0.223,0.019],[-0.17,0.076],[0.073,0.099],[0.07,0.148],[0.021,0.466],[0.07,0.176],[0.147,0.12],[0.126,0.049],[0.344,0]],\"o\":[[-0.172,0.07],[-0.269,0.078],[-0.296,0],[-0.199,0],[-0.145,0.094],[-0.002,0.003],[0,0],[-0.091,0.014],[-0.082,-0.011],[-0.32,0.103],[0,0],[0.123,0.023],[0.15,0.054],[0.146,0.049],[0.126,0.026],[0.073,0.012],[0.093,-0.015],[0.175,0.077],[0.1,0.048],[0.072,0.172],[0.123,0.027],[0,0],[0.221,0],[0.1,0],[0.15,0],[0.146,0],[0.246,0.019],[0.246,0],[0.17,-0.027],[-0.072,-0.124],[-0.095,-0.119],[-0.198,-0.415],[0,-0.195],[-0.077,-0.173],[-0.097,-0.074],[-0.294,-0.147],[-0.347,0]],\"v\":[[227.295,49.719],[226.902,50.01],[226.115,50.113],[225.329,50.113],[224.832,50.309],[224.443,50.602],[224.436,50.61],[224.54,50.403],[224.303,50.399],[224.051,50.403],[223.264,50.799],[223.36,51.192],[223.756,51.288],[224.15,51.487],[224.54,51.682],[224.931,51.682],[225.142,51.672],[225.425,51.682],[225.819,51.978],[225.918,52.373],[226.214,52.862],[226.605,52.862],[226.999,52.862],[227.587,52.716],[227.783,52.572],[228.181,52.67],[228.574,52.768],[229.21,52.768],[229.853,52.768],[230.241,52.469],[230.146,52.077],[229.754,51.878],[229.754,50.701],[229.754,50.209],[229.456,49.817],[229.061,49.719],[228.181,49.52]],\"c\":true},\"ix\":2},\"nm\":\"Path 106\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":106,\"ty\":\"sh\",\"ix\":107,\"ks\":{\"a\":0,\"k\":{\"i\":[[0,0],[0.022,-0.037]],\"o\":[[-0.017,0.04],[0,0]],\"v\":[[224.301,50.881],[224.245,50.996]],\"c\":true},\"ix\":2},\"nm\":\"Path 107\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":107,\"ty\":\"sh\",\"ix\":108,\"ks\":{\"a\":0,\"k\":{\"i\":[[0.04,-0.008],[0.147,-0.074],[0.125,-0.121],[0.517,-0.073],[0.271,0.051],[0.118,0.027],[0.293,0.096],[0.124,0],[0,0],[0.126,-0.171],[0.122,-0.32],[0.022,-0.199],[0,-0.173],[0.025,-0.121],[0.072,-0.124],[0.15,-0.101],[0.07,0.014],[0.051,-0.037],[0.095,-0.143],[0,-0.247],[-0.222,-0.147],[-0.124,-0.024],[-0.144,-0.025],[-0.295,0],[0,-0.199],[0.101,-0.294],[0.025,-0.146],[0,-0.175],[-0.024,-0.15],[-0.05,-0.174],[-0.047,-0.177],[-0.049,-0.147],[-0.1,0.128],[-0.047,0.17],[0,0.343],[-0.024,0.293],[0,0.172],[0,0],[0,0],[0,0],[0,0],[0,0],[-0.122,0],[-0.122,-0.022],[-0.145,-0.024],[-0.118,-0.025],[-0.147,0],[0,0],[0.028,-0.147],[0,-0.126],[0,0],[-0.025,-0.15],[-0.124,-0.097],[-0.216,0],[0,0],[0,0.15],[0,0],[0.125,0.366],[0.124,0.097],[0.148,0.145],[0.072,0.149],[0,0.244],[-0.023,0.248],[0,0],[0.051,0.12],[0.122,0.145],[0.124,0.127],[0.149,0.097],[0.081,-0.004],[0.078,0.068],[0.078,0.094],[0,0],[-0.466,0.123],[-0.176,0.052],[-0.124,0.026],[-0.182,-0.018],[-0.225,0.039],[-0.066,-0.006],[-0.063,0.014],[0,0.222],[0.051,0.15],[0.122,0.103],[0.119,0.072],[0.145,0.072],[0.171,0.023],[0,0],[0.084,0]],\"o\":[[-0.149,0.051],[-0.17,0.074],[-0.368,0.371],[-0.268,0.051],[-0.125,-0.025],[-0.3,-0.072],[-0.099,-0.025],[0,0],[-0.219,0.024],[-0.196,0.271],[-0.074,0.195],[-0.027,0.15],[0,0.148],[-0.026,0.125],[-0.101,0.149],[-0.047,0.025],[-0.078,-0.017],[-0.146,0.095],[-0.122,0.174],[0,0.295],[0.098,0.048],[0.149,0.048],[0.269,0.05],[0,0.196],[0,0.317],[-0.048,0.148],[-0.024,0.148],[0,0.172],[0.025,0.174],[0.048,0.17],[0.052,0.146],[0.147,-0.098],[0.097,-0.12],[0.099,-0.322],[0,-0.292],[0,-0.174],[0,0],[0,0],[0,0],[0,0],[0,0],[0.145,0.027],[0.122,0],[0.147,0.027],[0.123,0.028],[0.124,0.026],[0,0],[0,0.174],[-0.022,0.123],[0,0],[0,0.171],[0.023,0.167],[0.146,0.123],[0,0],[0.025,-0.145],[0,0],[0,-0.395],[-0.05,-0.148],[-0.147,-0.121],[-0.123,-0.123],[-0.097,-0.196],[0,-0.25],[0,0],[0,-0.15],[-0.077,-0.174],[-0.127,-0.143],[-0.122,-0.123],[-0.07,-0.046],[-0.09,0.003],[-0.099,-0.074],[0,0],[0.49,0],[0.169,-0.022],[0.122,-0.021],[0.218,-0.035],[0.186,0.019],[0.06,-0.01],[0.068,0.006],[0.198,-0.048],[0,-0.173],[-0.072,-0.171],[-0.121,-0.094],[-0.15,-0.096],[-0.149,-0.079],[0,0],[-0.098,0],[-0.042,0]],\"v\":[[207.829,49.62],[207.434,49.817],[207.139,50.209],[205.96,50.996],[205.176,50.898],[204.783,50.799],[203.993,50.506],[203.701,50.309],[203.306,50.309],[202.91,50.701],[202.421,51.487],[202.421,52.077],[202.227,52.469],[202.227,52.862],[202.227,53.257],[201.832,53.552],[201.646,53.548],[201.438,53.552],[201.145,53.944],[200.947,54.534],[201.34,55.224],[201.733,55.32],[202.126,55.517],[202.91,55.517],[203.011,56.037],[202.715,56.796],[202.519,57.191],[202.519,57.633],[202.519,58.075],[202.816,58.469],[202.91,58.96],[203.11,59.352],[203.504,59.055],[203.895,58.765],[203.993,57.879],[203.993,57.092],[204.189,56.672],[204.189,54.046],[205.371,54.046],[205.371,54.926],[205.176,55.32],[205.274,55.713],[205.668,55.811],[206.061,55.811],[206.452,56.009],[206.844,56.107],[207.236,56.107],[207.236,56.918],[207.042,57.29],[206.944,57.683],[206.944,58.124],[206.944,58.568],[207.337,58.862],[207.85,59.055],[209.107,59.055],[209.207,58.663],[209.207,58.1],[209.107,57.092],[208.714,56.895],[208.321,56.502],[207.926,56.205],[207.733,55.618],[207.926,55.024],[207.926,54.634],[207.926,54.242],[207.535,53.944],[207.236,53.552],[206.844,53.257],[206.613,53.218],[206.353,53.157],[206.254,52.768],[206.353,52.077],[207.634,52.077],[208.025,51.78],[208.418,51.682],[209.001,51.684],[209.598,51.682],[209.79,51.683],[209.99,51.682],[210.287,51.192],[210.089,50.799],[209.795,50.403],[209.404,50.209],[209.009,49.917],[208.616,49.62],[208.223,49.62],[207.952,49.61]],\"c\":true},\"ix\":2},\"nm\":\"Path 108\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":108,\"ty\":\"sh\",\"ix\":109,\"ks\":{\"a\":0,\"k\":{\"i\":[[0,0],[0,-0.171],[-0.074,-0.27],[-0.172,-0.27],[-0.242,-0.295],[-0.273,-0.265],[-0.147,-0.097],[-0.098,-0.097],[-0.102,-0.149],[-0.076,-0.099],[-0.096,-0.126],[-0.089,0.02],[-0.05,-0.011],[0,0],[0.121,0.072],[0.195,0.05],[0.124,0.028],[0.087,-0.011],[0.078,0.012],[0.099,0.169],[0.048,0.169],[0.031,0.12],[0,0.292],[0.149,0.224],[0.294,0.124]],\"o\":[[0.046,0.147],[0.023,0.296],[0.072,0.321],[0.199,0.318],[0.248,0.294],[0.122,0.124],[0.099,0.048],[0.126,0.126],[0.05,0.097],[0.097,0.144],[0.042,0.057],[0.062,-0.014],[0,0],[-0.145,-0.076],[-0.17,-0.123],[-0.125,-0.022],[-0.093,-0.027],[-0.073,0.009],[-0.194,-0.051],[-0.098,-0.149],[-0.025,-0.124],[-0.047,-0.272],[0,-0.295],[-0.194,-0.269],[0,0]],\"v\":[[163.59,50.602],[163.59,50.799],[163.59,51.583],[164.081,52.373],[164.668,53.157],[165.36,53.944],[165.654,54.339],[166.046,54.436],[166.342,54.829],[166.441,55.224],[166.735,55.618],[166.952,55.635],[167.126,55.618],[167.126,54.046],[166.735,53.848],[166.342,53.451],[165.947,53.354],[165.68,53.348],[165.454,53.354],[165.063,52.964],[164.771,52.572],[164.668,52.176],[164.668,51.39],[164.569,50.602],[163.787,50.209]],\"c\":true},\"ix\":2},\"nm\":\"Path 109\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":109,\"ty\":\"sh\",\"ix\":110,\"ks\":{\"a\":0,\"k\":{\"i\":[[0.223,-0.022],[-0.023,-0.148],[0,-0.245],[0.023,-0.415],[0,0],[0,0],[0,0],[0,0.295],[0,0.197],[0,0.126],[0.23,0]],\"o\":[[0.023,0.174],[0.052,0.222],[0,0.422],[0,0],[0,0],[0,0],[0.022,-0.295],[0,-0.197],[0,-0.121],[-0.294,-0.016],[-0.177,0]],\"v\":[[232.801,50.259],[232.897,50.701],[233.095,51.313],[232.998,52.373],[234.96,52.373],[234.96,51.878],[234.129,51.878],[234.178,51.095],[234.077,50.602],[234.129,50.259],[233.384,50.229]],\"c\":true},\"ix\":2},\"nm\":\"Path 110\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":110,\"ty\":\"sh\",\"ix\":111,\"ks\":{\"a\":0,\"k\":{\"i\":[[0,0],[0.121,-0.021],[0.071,0.006],[0.06,-0.009],[0.098,-0.099],[-0.177,-0.021],[0,0],[0,0],[-0.319,0],[-0.291,0.052],[0.044,-0.014],[0,0.041],[0,0.324],[0.226,0]],\"o\":[[-0.148,0],[-0.065,0.016],[-0.065,-0.005],[-0.145,0.028],[0.173,0.075],[0,0],[0,0],[0.318,0.024],[0.296,0],[0,-0.022],[-0.052,0.017],[-0.073,-0.317],[-0.217,0],[0,0]],\"v\":[[212.646,51.583],[212.452,51.78],[212.243,51.782],[212.053,51.78],[211.86,52.176],[212.257,52.469],[212.646,52.469],[213.04,52.469],[213.848,52.572],[214.61,52.469],[214.524,52.476],[214.415,52.469],[214.415,51.634],[213.822,51.583]],\"c\":true},\"ix\":2},\"nm\":\"Path 111\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":111,\"ty\":\"sh\",\"ix\":112,\"ks\":{\"a\":0,\"k\":{\"i\":[[0.172,-0.099],[0.151,-0.124],[0.369,0],[0.296,-0.022],[0.148,-0.074],[0.049,-0.194],[0.097,-0.272],[0.096,-0.124],[0.147,-0.05],[0.297,0],[0.32,0.05],[0.223,0.195],[0.099,0.145],[0.075,0.096],[0.322,0],[0.124,-0.023],[0.171,-0.077],[0.17,0],[0,0],[0,0],[-0.12,-0.122],[-0.071,-0.147],[0,-0.126],[0,-0.294],[0,0],[-0.098,0.05],[-0.069,-0.012],[-0.063,0.026],[-0.194,0],[-0.172,0],[-0.295,-0.022],[-0.123,-0.022],[-0.295,-0.146],[-0.294,-0.199],[-0.122,-0.074],[-0.169,-0.077],[-0.076,0.01],[-0.055,-0.009],[-0.173,-0.028],[-0.146,0],[-0.176,0.017],[-0.262,-0.056],[-0.145,-0.05],[-0.271,-0.145],[-0.12,-0.076],[-0.148,-0.149],[-0.198,-0.32],[-0.072,-0.125],[0,-0.541],[0,-0.144],[0.049,-0.168],[0.298,-0.146],[0.075,0.011],[0.056,-0.01],[0.121,-0.027],[0.151,-0.101],[0.079,-0.195],[0,-0.169],[0,-0.148],[-0.396,0],[-0.318,0.218],[-0.124,0.103],[-0.047,0.098],[-0.244,0],[-0.365,-0.248],[-0.144,-0.128],[-0.146,-0.126],[-0.194,-0.097],[-0.12,-0.051],[-0.147,-0.052],[-0.3,-0.149],[-0.171,-0.075],[-0.172,-0.028],[-0.272,-0.026],[-0.32,0],[-0.296,0.075],[-0.148,0.098],[-0.073,0.123],[-0.023,0.124],[0,0.291],[-0.194,0.048],[-0.27,0.148],[-0.12,0.145],[-0.445,0],[0,0],[-0.147,-0.051],[-0.123,-0.048],[-0.147,-0.05],[-0.295,-0.169],[-0.121,-0.098],[-0.171,-0.269],[-0.07,-0.121],[-0.271,-0.272],[-0.099,-0.147],[-0.174,-0.297],[-0.099,-0.173],[-0.171,-0.048],[-0.25,0],[-0.565,0.043],[-0.295,0],[-0.347,-0.347],[-0.343,-0.125],[-0.246,0],[-0.222,0.021],[0,0],[0.244,0.122],[0.123,0.047],[0.101,0.076],[0.097,0.125],[0.124,0.147],[0.198,0.027],[0.125,0.027],[0.067,-0.006],[0.062,0.014],[0.172,0.047],[0.122,0.026],[0.149,0],[0.296,0],[0,0],[0.665,-0.048],[0,0],[-0.588,-0.051],[0,0],[0.128,0.096],[0.122,0.097],[0.123,0.098],[0,0],[0.126,0.147],[0.074,0.15],[0.095,0.272],[0.071,0.101],[0.124,0.098],[0.146,0.101],[0.147,0.121],[0.12,0.121],[0.395,0.169],[0.148,0.027],[0.343,0],[0.271,0.247],[0.147,0.075],[0.074,-0.009],[0.055,0.013],[0.17,0.027],[0.269,0.121],[0.297,0.118],[0.149,0.024],[0.149,0],[0.197,-0.007],[0.246,0.012],[0.194,0],[0.12,-0.004],[0.288,0.122],[0.272,0.146],[0.297,0.117],[0.122,0.02],[0.169,0.075],[0.292,0]],\"o\":[[-0.146,0.075],[-0.27,0.222],[-0.292,0],[-0.171,0],[-0.197,0.096],[-0.048,0.274],[-0.048,0.145],[-0.099,0.124],[-0.271,0.124],[-0.342,0],[-0.27,-0.025],[-0.147,-0.124],[-0.072,-0.124],[-0.196,-0.243],[-0.148,0],[-0.173,0.053],[-0.149,0.047],[0,0],[0,0],[0.152,0.073],[0.124,0.126],[0.074,0.123],[0.027,0.271],[0,0],[0.047,-0.12],[0.048,-0.023],[0.071,0.012],[0.171,-0.072],[0.169,0],[0.295,0],[0.149,0],[0.322,0.078],[0.345,0.174],[0.123,0.072],[0.149,0.1],[0.071,0.028],[0.06,-0.008],[0.172,0.028],[0.121,0],[0.215,0.021],[0.226,-0.021],[0.15,0.021],[0.298,0.12],[0.123,0.073],[0.171,0.099],[0.272,0.271],[0.073,0.147],[0.298,0.442],[0,0.146],[0,0.198],[-0.099,0.321],[-0.07,0.027],[-0.059,-0.008],[-0.121,0.023],[-0.174,0.049],[-0.171,0.093],[-0.047,0.145],[0,0.146],[0.05,0.392],[0.391,0],[0.151,-0.099],[0.099,-0.072],[0.121,-0.197],[0.44,0],[0.175,0.098],[0.146,0.12],[0.153,0.121],[0.122,0.048],[0.147,0.049],[0.318,0.1],[0.167,0.073],[0.168,0.07],[0.248,0.051],[0.319,0.027],[0.318,0],[0.172,-0.05],[0.122,-0.075],[0.048,-0.097],[0.074,-0.271],[0.221,0],[0.323,-0.103],[0.172,-0.098],[0.271,-0.324],[0,0],[0.171,0],[0.12,0.023],[0.147,0.045],[0.298,0.125],[0.147,0.073],[0.245,0.222],[0.075,0.121],[0.2,0.32],[0.123,0.121],[0.196,0.275],[0.098,0.175],[0.096,0.145],[0.223,0.077],[0.565,0],[0.294,-0.029],[0.491,0],[0.267,0.268],[0.221,0.072],[0.222,0],[0,0],[0,-0.296],[-0.124,-0.047],[-0.119,-0.055],[-0.12,-0.073],[-0.124,-0.145],[-0.127,-0.144],[-0.125,0],[-0.061,-0.012],[-0.068,0.007],[-0.173,-0.046],[-0.12,-0.029],[-0.123,-0.024],[-0.294,-0.025],[0,0],[-0.663,-0.03],[0,0],[0.587,-0.025],[0,0],[-0.121,-0.073],[-0.121,-0.099],[-0.12,-0.102],[0,0],[-0.103,-0.124],[-0.124,-0.147],[-0.145,-0.242],[-0.051,-0.123],[-0.075,-0.123],[-0.144,-0.126],[-0.169,-0.122],[-0.146,-0.124],[-0.294,-0.298],[-0.147,-0.051],[-0.319,-0.074],[-0.366,0],[-0.122,-0.096],[-0.066,-0.025],[-0.061,0.009],[-0.174,-0.047],[-0.297,-0.05],[-0.297,-0.147],[-0.145,-0.052],[-0.122,-0.025],[-0.248,-0.013],[-0.195,0.006],[-0.198,0],[-0.144,-0.008],[-0.269,0.009],[-0.296,-0.118],[-0.268,-0.145],[-0.125,-0.053],[-0.174,-0.051],[-0.248,-0.122],[-0.223,0]],\"v\":[[237.225,52.077],[236.928,52.469],[236.043,52.862],[235.254,52.862],[234.865,53.061],[234.472,53.451],[234.472,54.242],[234.277,54.634],[233.879,54.829],[233.095,54.926],[232.21,54.829],[231.423,54.634],[231.128,54.242],[231.128,53.848],[230.342,53.552],[229.947,53.552],[229.556,53.848],[229.139,53.944],[226.702,53.944],[226.702,54.731],[227.095,54.926],[227.49,55.224],[227.49,55.618],[227.49,56.401],[228.082,56.401],[228.082,56.009],[228.266,56.01],[228.475,56.009],[228.767,55.618],[229.16,55.811],[229.947,55.811],[230.342,55.811],[231.128,56.205],[231.915,56.796],[232.306,56.992],[232.6,57.385],[232.824,57.392],[232.998,57.385],[233.488,57.486],[233.879,57.587],[234.454,57.574],[235.157,57.587],[235.551,57.781],[236.34,58.269],[236.733,58.469],[237.126,58.862],[237.814,59.648],[238.009,60.043],[238.798,61.219],[238.699,61.613],[238.699,62.103],[238.107,62.793],[237.887,62.799],[237.712,62.793],[237.324,62.895],[236.928,63.192],[236.533,63.58],[236.34,63.973],[236.436,64.37],[237.225,65.053],[238.206,64.762],[238.6,64.463],[238.699,64.071],[239.189,63.678],[240.27,63.973],[240.663,64.37],[241.055,64.663],[241.451,65.053],[241.842,65.152],[242.238,65.348],[243.124,65.645],[243.517,65.94],[244.007,66.038],[244.696,66.234],[245.532,66.234],[246.366,66.234],[246.761,65.94],[247.154,65.742],[247.251,65.348],[247.251,64.566],[247.84,64.566],[248.628,64.169],[249.02,63.78],[249.907,63.091],[250.103,63.091],[250.498,63.285],[250.887,63.385],[251.28,63.58],[252.068,63.973],[252.462,64.169],[252.952,64.956],[253.149,65.348],[253.936,65.94],[254.232,66.331],[254.723,67.119],[255.02,67.612],[255.313,68.001],[255.952,68.001],[257.379,67.91],[258.116,67.807],[259.15,68.497],[259.934,69.086],[260.548,69.282],[261.113,69.185],[261.113,67.977],[260.621,67.413],[260.228,67.319],[259.832,67.218],[259.639,66.822],[259.344,66.432],[258.853,66.135],[258.457,66.135],[258.264,66.135],[258.064,66.135],[257.673,65.843],[257.28,65.742],[256.886,65.645],[256.1,65.645],[256.1,63.139],[254.379,63.139],[254.379,61.27],[255.9,61.27],[255.9,60.63],[255.507,60.433],[255.214,60.043],[254.822,59.746],[252.858,59.746],[252.559,59.352],[252.167,59.055],[251.973,58.269],[251.873,57.879],[251.477,57.683],[251.085,57.385],[250.691,56.992],[250.3,56.699],[249.512,55.913],[249.118,55.713],[248.233,55.713],[247.35,55.32],[247.154,54.926],[246.939,54.921],[246.761,54.926],[246.271,54.829],[245.482,54.534],[244.696,54.046],[244.301,53.848],[243.908,53.848],[243.267,53.848],[242.629,53.848],[242.139,53.75],[241.746,53.751],[240.959,53.647],[240.173,53.157],[239.387,52.67],[238.995,52.572],[238.504,52.373],[237.814,51.978]],\"c\":true},\"ix\":2},\"nm\":\"Path 112\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":112,\"ty\":\"sh\",\"ix\":113,\"ks\":{\"a\":0,\"k\":{\"i\":[[0,0],[0,0],[0,0],[0,0],[-0.026,-0.243],[-0.49,-0.05],[0,0]],\"o\":[[0,0],[0,0],[0,0],[0.026,0.243],[0.492,-0.025],[0,0],[0,0]],\"v\":[[222.283,51.978],[222.283,52.572],[222.085,52.176],[222.085,52.572],[222.184,53.207],[223.41,53.207],[223.41,51.978]],\"c\":true},\"ix\":2},\"nm\":\"Path 113\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":113,\"ty\":\"sh\",\"ix\":114,\"ks\":{\"a\":0,\"k\":{\"i\":[[0.088,-0.092],[0.077,-0.122],[0.05,-0.149],[0,0],[0,-0.149],[-0.025,-0.147],[0,0],[-0.321,0],[-0.152,0],[0,0],[-0.12,-0.024],[-0.126,-0.021],[-0.127,-0.025],[-0.171,-0.046],[-0.347,0],[-0.046,0.463],[0.395,0.047],[0.295,0.026],[0.146,0],[0,0],[0.273,0.049],[0.39,0],[0.083,0]],\"o\":[[-0.097,0.096],[-0.073,0.126],[0,0],[0,0.145],[0,0.172],[0,0],[0.319,0],[0.147,0],[0,0],[0.124,0],[0.126,0.027],[0.12,0.025],[0.166,0.05],[0.32,0.078],[-0.054,-0.464],[-0.392,-0.053],[-0.296,-0.024],[-0.151,0],[0,0],[-0.269,-0.025],[-0.368,-0.074],[-0.086,0],[-0.128,0]],\"v\":[[218.837,54.046],[218.741,54.436],[218.545,54.829],[218.545,54.436],[218.449,54.829],[218.642,55.224],[219.798,55.224],[220.61,55.125],[221.006,55.224],[221.395,55.224],[221.787,55.32],[222.184,55.418],[222.579,55.517],[222.969,55.811],[223.855,55.811],[223.801,54.634],[222.772,54.534],[221.988,54.436],[221.592,54.339],[221.197,54.339],[220.41,54.142],[219.43,53.944],[219.173,53.937]],\"c\":true},\"ix\":2},\"nm\":\"Path 114\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":114,\"ty\":\"sh\",\"ix\":115,\"ks\":{\"a\":0,\"k\":{\"i\":[[0,0],[-0.151,-0.074],[0,0],[-0.173,0],[0,0],[0,0],[0.145,0.073],[0.269,0.047],[0.27,0.048]],\"o\":[[0.123,0.12],[0,0],[0.147,0.076],[0,0],[0,0],[-0.097,-0.124],[-0.248,-0.123],[-0.268,-0.05],[0,0]],\"v\":[[215.301,55.125],[215.598,55.517],[215.991,55.713],[216.405,55.811],[217.165,55.811],[217.165,55.125],[216.973,54.731],[216.186,54.534],[215.4,54.339]],\"c\":true},\"ix\":2},\"nm\":\"Path 115\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":115,\"ty\":\"sh\",\"ix\":116,\"ks\":{\"a\":0,\"k\":{\"i\":[[0.118,0],[0.123,-0.022],[0.145,-0.074],[0.073,-0.123],[0.073,-0.275],[0.073,-0.15],[0.098,-0.052],[0.122,0],[0.688,0],[0,0],[0,0],[0.49,0.018],[0.15,0],[0,-0.147],[0,-0.296],[0,-0.07],[-0.663,-0.07],[-0.294,-0.021],[-0.293,0],[-0.295,0.028],[-0.147,0.075],[-0.198,0.055],[-0.058,-0.009],[-0.071,0.031],[-0.121,0.025],[-0.096,0.172],[-0.078,0.322],[-0.097,0.267],[-0.049,0.171],[0,0.148],[0.021,0.145]],\"o\":[[-0.122,0],[-0.146,0.024],[-0.148,0.076],[-0.145,0.242],[-0.048,0.166],[-0.076,0.119],[-0.1,0.048],[-0.661,0.097],[0,0],[0,0],[-0.495,0],[-0.147,0],[0,0.15],[0.025,0.296],[0,0.069],[0.664,0],[0.293,0.026],[0.299,0.028],[0.296,0],[0.172,0],[0.194,-0.097],[0.052,-0.009],[0.076,0.012],[0.125,-0.045],[0.198,-0.073],[0.178,-0.267],[0.044,-0.27],[0.048,-0.174],[0.025,-0.124],[0,-0.174],[-0.148,0.022]],\"v\":[[263.671,56.796],[263.275,56.796],[262.882,56.992],[262.488,57.191],[262.488,57.98],[262.196,58.372],[262.098,58.765],[261.702,58.765],[259.96,58.765],[259.538,58.765],[259.15,58.765],[257.868,58.765],[257.475,58.663],[257.28,59.352],[257.379,60.14],[257.329,60.334],[259.051,60.334],[259.832,60.529],[260.621,60.529],[261.408,60.529],[261.803,60.334],[262.196,59.941],[262.363,59.949],[262.587,59.941],[262.98,59.844],[263.371,59.45],[263.771,58.663],[263.868,57.879],[264.16,57.486],[264.259,57.092],[264.064,56.699]],\"c\":true},\"ix\":2},\"nm\":\"Path 116\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":116,\"ty\":\"sh\",\"ix\":117,\"ks\":{\"a\":0,\"k\":{\"i\":[[0.051,-0.176],[0.026,-0.12],[0,0],[0,0],[0,0.12],[0,0]],\"o\":[[-0.024,0.12],[0,0],[0,0],[0,-0.12],[0,0],[-0.072,0.169]],\"v\":[[170.077,58.765],[170.077,59.154],[170.469,59.45],[170.469,59.055],[170.373,58.765],[170.373,58.372]],\"c\":true},\"ix\":2},\"nm\":\"Path 117\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":117,\"ty\":\"sh\",\"ix\":118,\"ks\":{\"a\":0,\"k\":{\"i\":[[0.148,-0.099],[0.097,-0.122],[0.046,-0.172],[0.021,-0.126],[0.027,-0.12],[0,-0.146],[0,-0.175],[-0.219,0.024],[-0.121,0.024],[-0.121,0.149],[-0.049,0.125],[0,0.566],[0,0],[0.121,0.123]],\"o\":[[-0.147,0.1],[-0.098,0.124],[-0.028,0.123],[-0.028,0.124],[-0.024,0.127],[0,0.176],[0,0.219],[0.145,0],[0.171,-0.052],[0.076,-0.096],[0.248,-0.491],[0,0],[-0.027,-0.169],[-0.148,0.098]],\"v\":[[230.832,59.154],[230.439,59.45],[230.051,59.746],[230.051,60.14],[229.947,60.529],[229.853,60.924],[229.652,61.322],[230.241,61.417],[230.637,61.417],[231.029,61.121],[231.128,60.728],[231.621,59.352],[231.621,59.154],[231.227,58.862]],\"c\":true},\"ix\":2},\"nm\":\"Path 118\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":118,\"ty\":\"sh\",\"ix\":119,\"ks\":{\"a\":0,\"k\":{\"i\":[[0,0],[0.15,-0.023],[-0.026,-0.149],[-0.024,-0.168],[0,-0.144],[-0.07,-0.146],[-0.247,-0.296],[-0.097,-0.123],[-0.198,-0.072],[-0.172,0],[-0.169,0.027],[0.054,0.124],[0.047,0.173],[0.047,0.124],[0.099,0.149],[0.268,0.245],[0.074,0.122],[0.024,0.126],[0,0.148]],\"o\":[[-0.146,0],[0.048,0.148],[0.048,0.172],[0,0.148],[0,0.199],[0.175,0.321],[0.099,0.122],[0.123,0.168],[0.146,0.051],[0.172,0],[-0.045,-0.12],[-0.07,-0.175],[-0.048,-0.121],[-0.072,-0.17],[-0.195,-0.319],[-0.125,-0.097],[-0.075,-0.121],[-0.025,-0.121],[0,0]],\"v\":[[268.78,59.154],[268.387,59.254],[268.585,59.648],[268.683,60.164],[268.585,60.529],[268.876,60.924],[269.668,61.515],[269.863,61.91],[270.257,62.3],[270.65,62.496],[271.04,62.3],[270.941,61.91],[270.65,61.515],[270.65,61.121],[270.353,60.728],[269.571,60.14],[269.176,59.941],[269.176,59.548],[269.176,59.154]],\"c\":true},\"ix\":2},\"nm\":\"Path 119\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":119,\"ty\":\"sh\",\"ix\":120,\"ks\":{\"a\":0,\"k\":{\"i\":[[0,0],[0,0],[0,0],[0,0],[-0.295,-0.023],[-0.12,-0.043],[0,0],[-0.122,-0.127],[-0.194,-0.096],[-0.226,0],[-0.395,0.1],[-0.147,0],[-0.296,0],[-0.318,0],[-0.27,-0.146],[-0.126,-0.072],[-0.169,0],[-0.146,0],[-0.316,0],[-0.346,-0.074],[-0.34,-0.175],[-0.171,-0.021],[-0.082,0.007],[-0.083,-0.009],[-0.342,-0.024],[-0.024,0.141],[-0.053,0.148],[-0.067,0.006],[-0.061,-0.012],[-0.173,-0.024],[-0.148,0],[0,0],[-0.244,0],[-0.223,-0.093],[-0.124,-0.076],[-0.146,-0.099],[-0.317,-0.1],[-0.321,0],[0,0],[-0.149,0.024],[0.145,0.27],[0.198,0.073],[0.066,-0.013],[0.061,0.027],[0.195,0.32],[0,0],[-0.075,0.147],[-0.122,0.098],[-0.12,0.025],[-0.134,-0.016],[-0.131,0.027],[-0.293,0.175],[0.271,0.051],[0.146,0.024],[0.069,-0.006],[0.062,0.012],[0.344,0],[0.295,0],[0.198,0],[0.115,-0.003],[0.307,0.105],[0.315,0.098],[0.323,0.049]],\"o\":[[0,0],[0,0],[0,0],[0.293,0],[0.149,0],[0,0],[0.17,0.075],[0.151,0.145],[0.201,0.098],[0.415,0],[0.12,-0.024],[0.296,-0.024],[0.318,-0.024],[0.323,0],[0.148,0.072],[0.122,0.072],[0.151,0],[0.319,0],[0.368,0],[0.367,0.098],[0.175,0.066],[0.086,0.014],[0.077,-0.005],[0.322,0.048],[0.024,-0.146],[0.024,-0.175],[0.059,0.012],[0.068,-0.006],[0.173,0.053],[0.125,0.027],[0,0],[0.244,-0.024],[0.27,0],[0.122,0.051],[0.149,0.066],[0.272,0.196],[0.297,0.1],[0,0],[0.172,0],[-0.149,-0.295],[-0.103,-0.175],[-0.061,-0.024],[-0.067,0.013],[-0.348,-0.147],[0,0],[0.022,-0.169],[0.072,-0.152],[0.096,-0.074],[0.142,-0.037],[0.123,0.016],[0.32,-0.049],[-0.293,-0.047],[-0.15,-0.022],[-0.062,-0.012],[-0.068,0.006],[-0.316,-0.049],[-0.293,0],[-0.198,0],[-0.141,-0.006],[-0.267,0.005],[-0.321,-0.098],[-0.323,-0.096],[0,0]],\"v\":[[176.368,61.219],[176.368,61.711],[177.548,61.711],[177.548,62.595],[178.335,62.595],[178.728,62.595],[179.123,62.793],[179.415,63.192],[179.809,63.58],[180.402,63.678],[181.386,63.285],[181.777,63.285],[182.564,63.285],[183.397,63.192],[184.233,63.285],[184.431,63.678],[184.822,63.899],[185.217,63.973],[186.027,63.874],[186.986,63.973],[187.772,64.566],[188.167,64.857],[188.418,64.858],[188.655,64.857],[189.543,64.956],[189.543,64.566],[189.741,64.169],[189.936,64.169],[190.132,64.169],[190.525,64.463],[190.92,64.463],[191.311,64.463],[191.902,64.266],[192.59,64.463],[192.983,64.566],[193.277,64.956],[194.064,65.448],[194.902,65.548],[195.345,65.548],[195.738,65.348],[195.345,64.566],[194.949,64.169],[194.754,64.17],[194.559,64.169],[193.868,63.43],[190.822,63.43],[190.822,62.992],[191.017,62.595],[191.408,62.496],[191.819,62.492],[192.197,62.496],[192.983,62.103],[192.197,62.005],[191.806,61.811],[191.607,61.811],[191.408,61.811],[190.525,61.613],[189.741,61.711],[189.246,61.613],[188.868,61.611],[188.068,61.515],[187.285,61.121],[186.395,60.924]],\"c\":true},\"ix\":2},\"nm\":\"Path 120\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":120,\"ty\":\"sh\",\"ix\":121,\"ks\":{\"a\":0,\"k\":{\"i\":[[0.489,-0.376],[0,-0.293],[-0.025,-0.149],[0,0],[-0.094,0.144],[0,0.242],[0.124,0.368],[0.075,0.155]],\"o\":[[-0.048,0.292],[0,0.15],[0,0],[0.144,-0.097],[0.151,-0.201],[0,-0.395],[-0.048,-0.173],[-0.564,0.223]],\"v\":[[224.443,63.192],[224.344,64.266],[224.443,64.663],[225.626,64.663],[226.012,64.37],[226.311,63.78],[226.115,62.793],[225.819,62.397]],\"c\":true},\"ix\":2},\"nm\":\"Path 121\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":121,\"ty\":\"sh\",\"ix\":122,\"ks\":{\"a\":0,\"k\":{\"i\":[[0,0],[-0.018,-0.147],[-0.051,-0.149],[-0.066,-0.007],[-0.063,0.013],[-0.199,0],[-0.241,0],[0,0],[-0.148,0.072],[0,0]],\"o\":[[0.027,0.143],[0.027,0.17],[0.06,-0.011],[0.07,0.006],[0.171,-0.024],[0.242,0],[0,0],[0.195,0],[0,0],[0,0]],\"v\":[[214.217,63.091],[214.217,63.484],[214.415,63.874],[214.608,63.875],[214.811,63.874],[215.204,63.58],[215.792,63.78],[215.991,63.78],[216.381,63.484],[216.085,63.091]],\"c\":true},\"ix\":2},\"nm\":\"Path 122\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":122,\"ty\":\"sh\",\"ix\":123,\"ks\":{\"a\":0,\"k\":{\"i\":[[0.025,-0.005],[0.172,-0.032],[0.22,0.021],[0.223,-0.024],[0.271,-0.029],[0,0],[0.147,0],[0.146,-0.031],[0.244,0],[0.194,0.074],[0.22,0.069],[0.293,0.028],[0.22,0],[0.2,-0.044],[0.172,-0.072],[0.225,0],[0,0],[0,0],[-0.393,-0.052],[-0.836,0],[0,0],[-0.687,0.047],[-0.147,0],[-0.123,0.024],[-0.123,0.024],[-0.145,0.075],[-0.198,0.048],[-0.126,0],[-0.129,-0.005],[-0.144,0.011],[-0.198,0.022],[-0.173,0.074],[0,0],[0.07,0.006],[0.039,0]],\"o\":[[-0.171,0.048],[-0.257,0.051],[-0.181,-0.017],[-0.294,0.021],[0,0],[-0.15,0],[-0.149,0],[-0.243,0.024],[-0.221,0],[-0.219,-0.075],[-0.269,-0.076],[-0.221,-0.024],[-0.222,0],[-0.168,0.028],[-0.196,0.074],[0,0],[0,0],[0.271,0.271],[0.839,0.097],[0,0],[0.687,0],[0.148,0],[0.147,0],[0.125,-0.024],[0.15,-0.023],[0.173,-0.075],[0.122,-0.026],[0.137,-0.013],[0.123,0.006],[0.194,0],[0.199,-0.026],[0,0],[-0.063,0.014],[-0.039,-0.004],[-0.026,0]],\"v\":[[211.759,64.071],[211.368,64.37],[210.681,64.38],[210.089,64.37],[209.303,64.566],[208.91,64.566],[208.517,64.663],[208.124,64.663],[207.535,64.857],[206.944,64.762],[206.452,64.37],[205.668,64.266],[205.077,64.169],[204.483,64.266],[203.993,64.463],[203.475,64.762],[203.011,64.762],[203.306,64.956],[204.094,65.548],[206.207,65.548],[206.55,65.548],[208.321,65.548],[208.714,65.448],[209.107,65.448],[209.499,65.348],[209.892,65.152],[210.287,64.762],[210.681,64.762],[211.074,64.761],[211.467,64.762],[211.957,64.762],[212.352,64.463],[212.157,64.071],[211.956,64.072],[211.837,64.064]],\"c\":true},\"ix\":2},\"nm\":\"Path 123\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":123,\"ty\":\"sh\",\"ix\":124,\"ks\":{\"a\":0,\"k\":{\"i\":[[0.222,-0.071],[0.146,-0.053],[0.147,0],[0.297,-0.052],[0,-0.269],[-0.099,-0.147],[-0.465,0],[-0.27,0.072],[-0.146,0.076],[-0.174,0.05],[-0.343,-0.023],[-0.345,0],[-0.146,0],[0.046,-0.013],[0,0.025],[0.023,0.2],[0.272,0.051],[0.175,0.028],[0.063,-0.006],[0.061,0.014],[0.274,0]],\"o\":[[-0.147,0.053],[-0.122,0.046],[-0.294,0],[-0.27,0.02],[0,0.196],[0.272,0.37],[0.295,0],[0.149,-0.052],[0.17,-0.069],[0.316,-0.099],[0.344,0.024],[0.15,0],[-0.013,-0.025],[-0.046,0.012],[-0.047,-0.172],[-0.295,0],[-0.145,-0.024],[-0.071,-0.012],[-0.067,0.007],[-0.248,-0.044],[-0.244,0]],\"v\":[[199.176,64.169],[198.785,64.37],[198.488,64.663],[197.702,64.566],[197.113,64.956],[197.408,65.348],[198.585,65.548],[199.373,65.548],[199.767,65.348],[200.064,64.956],[200.947,65.053],[201.832,65.053],[202.227,64.956],[202.118,64.956],[202.029,64.956],[202.029,64.463],[201.24,64.463],[200.848,64.266],[200.649,64.267],[200.457,64.266],[199.814,64.071]],\"c\":true},\"ix\":2},\"nm\":\"Path 124\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":124,\"ty\":\"sh\",\"ix\":125,\"ks\":{\"a\":0,\"k\":{\"i\":[[0.041,-0.011],[0.123,-0.024],[0.198,-0.073],[0.124,-0.051],[0.123,-0.023],[0.17,-0.052],[0.169,-0.076],[0.125,-0.076],[0.119,-0.075],[0.168,0.004],[0.099,-0.017],[0.065,0.01],[0.101,-0.043],[0.147,-0.101],[0.123,-0.119],[0,-0.248],[0,0],[-0.004,-0.021],[0,0],[0,-0.15],[-0.295,-0.097],[-0.146,0],[-0.147,0],[-0.203,0.267],[-0.294,0.243],[-0.22,0.1],[-0.127,0],[-0.269,0.05],[-0.343,0.169],[-0.293,0.024],[-0.112,-0.008],[-0.149,0.027],[-0.12,0.024],[-0.099,0.099],[0.124,0.075],[0.193,0.074],[0.295,0],[0.083,0]],\"o\":[[-0.125,0.021],[-0.195,0.074],[-0.122,0.048],[-0.121,0.05],[-0.175,0.048],[-0.173,0.051],[-0.124,0.048],[-0.123,0.072],[-0.157,0.094],[-0.098,-0.002],[-0.071,0.01],[-0.094,-0.016],[-0.172,0.071],[-0.145,0.095],[-0.171,0.175],[0,0],[-0.004,0.025],[0,0],[0,0.144],[0,0.321],[0.122,0.026],[0.15,0],[0.346,0],[0.219,-0.297],[0.198,-0.17],[0.125,-0.045],[0.273,-0.051],[0.37,-0.07],[0.244,-0.125],[0.131,-0.01],[0.141,0.011],[0.124,0],[0.147,-0.024],[-0.149,-0.073],[-0.172,-0.121],[-0.271,-0.093],[-0.099,0],[-0.041,0]],\"v\":[[215.694,64.37],[215.301,64.463],[214.908,64.857],[214.512,64.956],[214.121,65.053],[213.728,65.348],[213.238,65.448],[212.844,65.548],[212.746,65.94],[212.254,66.026],[211.957,66.038],[211.756,66.027],[211.467,66.038],[211.17,66.432],[210.777,66.725],[210.386,67.218],[210.386,67.413],[210.386,67.482],[210.287,67.319],[210.188,67.71],[210.878,68.201],[211.27,68.3],[211.66,68.395],[212.257,67.71],[213.04,67.021],[213.53,66.527],[213.926,66.432],[214.709,66.331],[215.499,65.645],[216.283,65.448],[216.644,65.454],[217.069,65.448],[217.462,65.448],[217.66,65.053],[217.266,64.857],[216.876,64.463],[216.085,64.37],[215.816,64.356]],\"c\":true},\"ix\":2},\"nm\":\"Path 125\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":125,\"ty\":\"sh\",\"ix\":126,\"ks\":{\"a\":0,\"k\":{\"i\":[[0,0],[-0.016,-0.047]],\"o\":[[0.03,0.037],[0,0]],\"v\":[[210.508,67.683],[210.582,67.807]],\"c\":true},\"ix\":2},\"nm\":\"Path 126\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":126,\"ty\":\"sh\",\"ix\":127,\"ks\":{\"a\":0,\"k\":{\"i\":[[0.006,-0.001],[0.294,-0.145],[-0.097,-0.121],[-0.097,-0.151],[-0.097,-0.122],[-0.145,-0.073],[-0.173,-0.023],[-0.348,0],[-0.469,0.028],[0,0],[0.123,0.023],[0.127,0.122],[0.093,0.05],[0.127,0.078],[0.124,0.052],[0.147,0.123],[0.138,0.056],[0.069,0]],\"o\":[[-0.317,0.097],[0.073,0.124],[0.122,0.147],[0.073,0.12],[0.099,0.122],[0.15,0.074],[0.321,0.073],[0.462,0],[0,0],[-0.123,-0.029],[-0.174,-0.052],[-0.093,-0.094],[-0.104,-0.051],[-0.122,-0.071],[-0.174,-0.071],[-0.073,0.013],[-0.126,-0.05],[-0.007,0]],\"v\":[[202.616,66.234],[201.832,66.627],[202.029,67.021],[202.421,67.319],[202.616,67.71],[202.91,68.104],[203.405,68.201],[204.267,68.201],[205.467,68.15],[205.371,67.71],[204.978,67.612],[204.483,67.413],[204.391,67.021],[203.993,66.922],[203.602,66.822],[203.306,66.432],[202.954,66.333],[202.636,66.233]],\"c\":true},\"ix\":2},\"nm\":\"Path 127\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":127,\"ty\":\"sh\",\"ix\":128,\"ks\":{\"a\":0,\"k\":{\"i\":[[0.218,-0.029],[-0.048,-0.098],[-0.149,-0.126],[-0.298,0],[0,0],[-0.176,0.073],[0.072,0.124],[0.068,0.124],[0.121,0.052],[0.294,0]],\"o\":[[0.023,0.123],[0.097,0.145],[0.221,0.194],[0,0],[0.168,-0.029],[-0.054,-0.149],[-0.074,-0.121],[-0.076,-0.122],[-0.25,-0.095],[-0.223,0]],\"v\":[[278.123,66.432],[278.22,67.119],[278.516,67.516],[279.301,67.71],[279.694,67.71],[280.09,67.413],[279.889,67.021],[279.795,66.627],[279.402,66.527],[278.688,66.331]],\"c\":true},\"ix\":2},\"nm\":\"Path 128\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":128,\"ty\":\"sh\",\"ix\":129,\"ks\":{\"a\":0,\"k\":{\"i\":[[0.125,-0.05],[0.296,-0.15],[-0.05,-0.248],[0,0],[0,0],[0,0]],\"o\":[[-0.291,0.118],[0.073,0.221],[0,0],[0,0],[0,0],[-0.123,0.021]],\"v\":[[209.499,68.988],[208.714,69.382],[208.91,69.97],[210.089,69.97],[210.089,69.282],[209.892,68.889]],\"c\":true},\"ix\":2},\"nm\":\"Path 129\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":129,\"ty\":\"sh\",\"ix\":130,\"ks\":{\"a\":0,\"k\":{\"i\":[[0.115,0],[0,0],[0.146,0],[0.149,0],[0,0],[-0.123,-0.045],[-0.27,-0.076],[-0.144,-0.075],[-0.12,-0.07],[-0.05,-0.125],[0.176,0],[0.341,0],[0.297,-0.024],[0.149,-0.046],[0.172,-0.122],[0.368,-0.249],[0.169,-0.1],[0.147,-0.124],[0,-0.245],[0,0],[0,-0.145],[0.024,-0.293],[0,-0.122],[0.048,-0.173],[0.169,-0.048],[0.242,0],[0.517,0.324],[0.147,0.051],[0.123,0],[0.39,0],[0.026,0.293],[0,0],[0.323,-0.026],[0.112,0.009],[0.149,-0.028],[0.268,-0.2],[0.099,-0.123],[0.148,-0.122],[0.17,-0.021],[0.116,0.016],[0.148,-0.052],[0.121,-0.467],[0.023,-0.121],[0.221,-0.047],[0.064,0.006],[0.064,-0.013],[0.294,0],[0,0],[-0.097,-0.119],[-0.121,-0.141],[0,-0.172],[0,0],[0,0],[0,0.05],[0,0.292],[0,0.153],[0,0],[0.148,-0.072],[0.124,-0.101],[0.07,-0.171],[0,-0.294],[0.098,-0.464],[0.028,-0.118],[0.126,-0.147],[0.124,-0.199],[0.075,-0.147],[0.078,-0.121],[0.125,-0.094],[0.217,-0.295],[0.123,-0.1],[0.123,-0.073],[0.149,-0.046],[0.148,-0.025],[0.122,0],[0.199,0],[0.311,0.011],[0.294,-0.008],[0.197,-0.022],[0.347,-0.199],[0.196,-0.027],[0.174,0.021],[0.23,-0.052],[0.193,-0.126],[0.367,-0.145],[0.47,-0.194],[0.147,-0.098],[0.072,-0.318],[0.025,-0.297],[0.05,-0.144],[0.062,-0.005],[0.06,0.013],[0.148,0.025],[0.123,0.054],[0.097,0.096],[0.049,0.124],[0.074,0.171],[0.145,-0.244],[0.074,-0.145],[0,-0.147],[0,0],[0,-0.145],[0.022,-0.342],[0,0],[0.077,-0.148],[0.048,-0.194],[0,-0.147],[-0.122,-0.249],[-0.095,-0.15],[-0.099,-0.151],[-0.127,-0.268],[-0.291,-0.422],[0,0],[0.174,0.045],[0.08,-0.012],[0.084,0.023],[0.173,0.021],[0.147,0],[0.147,-0.027],[0,0],[-0.124,-0.149],[-0.248,-0.293],[-0.124,-0.123],[-0.122,-0.097],[-0.099,-0.203],[0,-0.173],[-0.026,-0.318],[-0.144,-0.293],[-0.074,-0.194],[-0.052,-0.395],[-0.022,-0.197],[-0.022,-0.194],[-0.175,-0.299],[-0.077,-0.146],[-0.171,-0.394],[-0.024,-0.153],[0,-0.125],[-0.05,-0.465],[-0.1,-0.319],[-0.024,-0.144],[0,-0.194],[0,0],[0.275,-0.071],[0.271,-0.147],[0.125,-0.075],[0.144,-0.196],[0,0],[-0.34,-0.271],[-0.246,-0.223],[-0.122,-0.074],[-0.149,-0.077],[-0.294,-0.121],[-0.124,-0.047],[-0.32,-0.098],[-0.246,0],[-0.245,0.023],[-0.27,0.049],[-0.125,0.025],[-0.197,0.149],[-0.072,0.124],[-0.098,0.146],[-0.049,0.099],[-0.124,0.127],[-0.143,0.072],[-0.295,0.022],[-0.27,0.099],[-0.196,0.071],[-0.294,0],[-0.661,-0.172],[-0.345,-0.097],[-0.197,-0.029],[-0.272,0],[-0.197,0.073],[-0.147,0.144],[-0.124,0.167],[-0.171,0.273],[-0.171,0.17],[-0.813,0.273],[-0.124,0.053],[-0.145,0.051],[-0.148,0.027],[-0.151,0],[-0.125,-0.022],[-0.143,-0.05],[-0.168,-0.047],[-0.296,0],[-0.27,0.053],[-0.152,0.071],[-0.37,0.271],[-0.145,0.126],[-0.121,0.095],[-0.171,0.05],[-0.068,-0.006],[-0.061,0.012],[-0.395,0],[-0.295,-0.025],[-0.198,0.015],[-0.275,-0.039],[-0.271,-0.12],[0,0],[-0.146,-0.077],[-0.293,0],[-0.243,0],[-0.148,0],[0,0],[-0.294,-0.026],[-0.123,-0.026],[-0.148,-0.072],[-0.1,-0.124],[-0.072,-0.22],[0,-0.144],[0,-0.466],[-0.444,-0.37],[-0.075,-0.147],[0,-0.292],[-0.12,-0.465],[-0.074,-0.12],[-0.147,-0.072],[-0.144,0],[-0.245,0.437],[-0.075,0.127],[-0.244,0.296],[-0.096,0.122],[-0.096,0.144],[-0.075,0.153],[-0.101,0.295],[-0.048,0.148],[-0.222,-0.221],[0,-0.195],[0.272,-0.273],[0,-0.518],[-0.047,-0.292],[-0.072,0.096],[-0.095,0.047],[-0.195,0],[-0.174,0],[-0.147,-0.025],[0,0],[0.025,-0.197],[0,0],[0.026,-0.466],[-0.059,-0.009],[-0.069,0.029],[-0.149,0.144],[-0.272,0],[-0.124,-0.198],[-0.072,-0.323],[-0.271,-0.271],[-0.1,-0.099],[0,-0.224],[0,0],[0,-0.149],[-0.025,-0.292],[-0.025,-0.12],[-0.247,-0.196],[-0.29,-0.176],[-0.173,-0.049],[-0.294,0],[-0.419,-0.193],[-0.149,-0.072],[-0.121,-0.076],[-0.151,-0.073],[-0.177,-0.05],[-0.393,0],[-0.445,0.441],[0,0.589],[0,0],[-0.17,-0.439],[-0.024,-0.119],[-0.247,-0.196],[-0.343,0],[-0.395,0.344],[-0.143,0.097],[-0.345,0.193],[-0.15,0.073],[-0.392,0],[-0.221,0],[-0.833,0],[-0.126,0.098],[-0.076,0.122],[-0.049,0.12],[-0.073,0.317],[-0.271,0.391],[-0.27,0.198],[0,0.272],[0,0],[0.051,0.196],[0,0.245],[-0.17,0.563],[-0.051,0.147],[-0.052,0.121],[-0.074,0.152],[-0.294,0.244],[-0.124,0.096],[-0.098,0.149],[-0.073,0.146],[-0.026,0.148],[-0.026,0.125],[-0.029,0.121],[-0.097,0.155],[-0.198,0.1],[-0.123,0.073],[-0.075,-0.004],[-0.073,0.085],[-0.048,0.173],[0,0.121],[0,0.146],[0,0.343],[-0.221,0.345],[-0.074,0.372],[-0.098,0.441],[-0.027,0.119],[0,0.144],[0,0],[0.072,0.147],[0.07,0.122],[0.1,0.174],[0.025,0.173],[0,0],[-0.022,0.118],[-0.075,0.319],[0,0.294],[0,0],[0,0],[0.024,0.122],[0.145,0.194],[0.172,0.348],[0.049,0.17],[0.023,0.124],[0.073,0.145],[0.075,0.126],[0.099,0.124],[0.274,0.219],[0.174,0.07],[0.147,0.119],[0,0.224],[0,0],[0.296,0],[0.466,0.052],[0.172,0.071],[0.122,0.069],[0.052,0.365],[0,0],[0,0.15],[0,0.342],[0.056,-0.011],[0.068,0.041],[0.073,0.121],[0.145,0.225],[0.12,0.079],[0.15,0.05],[0.269,0.196],[0.125,0.121],[0.099,0.121],[0.099,0.123],[0.198,0.076],[0.466,0.15],[0.152,0.099],[0.046,0.195],[0.073,0.269],[0.097,0.321],[0.025,0.171],[0.027,0.124],[0.021,0.145],[0,0.147],[0,0],[0.022,0.295],[0.022,0.126],[0.247,0.221],[0.097,0.195],[0,0.219],[0,0.296],[0.37,0.123],[0.124,0],[0.125,0.02],[0.15,0.025],[0.298,0.148],[0.074,0.12],[0.029,0.124],[0,0.125],[0.023,0.146],[0,0],[0.097,0.441],[0.097,0.172],[0.074,0.125],[0.051,0.196],[0.026,0.123],[0.045,0.272],[0.049,0.125],[0.294,0.197],[0.077,-0.015],[0.052,0.013],[0,0],[0.027,-0.295],[0,0],[0.072,-0.171],[0.097,-0.148],[0.17,-0.297],[0.047,-0.177],[0,-0.297],[-0.029,-0.123],[-0.025,-0.172],[0,-0.293],[0,0],[0.049,-0.197],[0.073,-0.172],[0,-0.193],[0,0],[0.123,-0.17],[0.123,-0.1],[0.198,-0.091],[0.224,0],[0.372,0.074],[0.069,-0.006],[0.061,0.01],[0.148,0.096],[0.095,0.177],[0.046,0.123],[0.127,0.148],[0.565,0.295],[0.395,0.121],[0.149,0.1],[0.247,0.314],[0.122,0.072],[0.081,-0.011],[0.054,0.01],[0.124,0],[0.072,-0.009],[0.094,0.026],[0.125,0.07],[0.077,0.174],[0,0.147],[0,0.175],[0,0.394],[0,0],[0.024,0.144],[0,0.169],[-0.074,0.149],[-0.074,0.126],[-0.07,0.122],[-0.075,0.146],[-0.12,0.148],[-0.2,0.32],[-0.048,0.121],[0,0],[0.27,0.047],[0.344,0.024],[0,0],[0.49,0.044],[0.17,0.047],[0.173,0],[0.127,0.024],[0.067,-0.005],[0.062,0.013],[0.194,0.098],[0.146,0.023],[0.068,-0.006],[0.061,0.012],[0.147,0.052],[0.12,0.053],[0.321,0.075],[0.043,0]],\"o\":[[0,0],[-0.148,0],[-0.147,0],[0,0],[0.075,0.125],[0.245,0.12],[0.152,0.049],[0.124,0.047],[0.125,0.078],[-0.146,0.049],[-0.343,0.023],[-0.295,0],[-0.17,0],[-0.219,0.098],[-0.343,0.273],[-0.174,0.1],[-0.176,0.096],[-0.174,0.149],[0,0],[0,0.146],[0.024,0.297],[0,0.15],[-0.024,0.174],[-0.051,0.17],[-0.222,0.079],[-0.615,0],[-0.147,-0.077],[-0.123,-0.047],[-0.367,-0.047],[-0.053,-0.29],[0,0],[-0.317,0],[-0.131,0.011],[-0.14,-0.01],[-0.324,0.043],[-0.124,0.07],[-0.118,0.172],[-0.146,0.127],[-0.121,0.023],[-0.143,-0.02],[-0.441,0.147],[-0.027,0.122],[-0.074,0.217],[-0.058,0.01],[-0.07,-0.006],[-0.271,0.049],[0,0],[0.073,0.126],[0.124,0.154],[0.098,0.129],[0,0],[0,0],[0,-0.046],[0,-0.295],[0,-0.149],[0,0],[-0.174,0],[-0.147,0.075],[-0.147,0.121],[-0.125,0.245],[0,0.487],[-0.027,0.124],[-0.073,0.202],[-0.146,0.173],[-0.072,0.144],[-0.071,0.125],[-0.072,0.124],[-0.266,0.242],[-0.074,0.123],[-0.123,0.096],[-0.124,0.072],[-0.147,0.05],[-0.123,0.023],[-0.173,0.023],[-0.39,0.03],[-0.233,-0.008],[-0.197,0],[-0.418,0.05],[-0.175,0.098],[-0.21,0.035],[-0.194,-0.023],[-0.223,0.046],[-0.347,0.22],[-0.491,0.198],[-0.171,0.079],[-0.273,0.17],[-0.052,0.269],[0,0.173],[-0.073,-0.01],[-0.066,0.007],[-0.152,-0.02],[-0.123,-0.022],[-0.124,-0.046],[-0.099,-0.098],[-0.075,-0.171],[-0.097,0.292],[-0.073,0.121],[-0.049,0.123],[0,0],[0,0.145],[0.022,0.348],[0,0],[-0.028,0.171],[-0.095,0.169],[-0.025,0.126],[0,0.294],[0.076,0.17],[0.097,0.145],[0.168,0.243],[0.219,0.49],[0,0],[-0.172,-0.076],[-0.087,-0.025],[-0.079,0.011],[-0.174,-0.049],[-0.12,-0.025],[-0.172,0],[0,0],[0,0.194],[0.244,0.296],[0.117,0.148],[0.124,0.124],[0.147,0.123],[0.071,0.146],[0.022,0.343],[0.022,0.317],[0.098,0.193],[0.146,0.345],[0.022,0.192],[0.026,0.196],[0.047,0.368],[0.072,0.146],[0.219,0.368],[0.05,0.149],[0.021,0.117],[0.075,0.465],[0.048,0.323],[0.047,0.147],[0.048,0.175],[0,0],[-0.294,0],[-0.319,0.098],[-0.123,0.08],[-0.195,0.149],[0,0],[0.466,0],[0.248,0.195],[0.123,0.098],[0.125,0.074],[0.296,0.145],[0.128,0.051],[0.294,0.125],[0.224,0.049],[0.248,0],[0.295,-0.029],[0.122,0],[0.225,-0.051],[0.123,-0.072],[0.102,-0.147],[0.073,-0.098],[0.097,-0.146],[0.119,-0.121],[0.248,-0.122],[0.296,-0.025],[0.201,-0.074],[0.269,-0.096],[0.689,0],[0.345,0.1],[0.172,0.048],[0.269,0.021],[0.217,0],[0.195,-0.072],[0.148,-0.151],[0.195,-0.275],[0.147,-0.221],[0.613,-0.612],[0.121,-0.026],[0.144,-0.045],[0.146,-0.05],[0.124,-0.022],[0.147,0],[0.146,0.027],[0.173,0.051],[0.272,0.076],[0.29,0],[0.171,-0.026],[0.394,-0.223],[0.17,-0.121],[0.147,-0.12],[0.123,-0.099],[0.061,-0.012],[0.068,0.006],[0.371,-0.123],[0.292,0],[0.255,0.024],[0.225,-0.016],[0.296,0.05],[0,0],[0.172,0.071],[0.249,0.149],[0.248,0],[0.149,0],[0,0],[0.299,0],[0.148,0],[0.151,0.046],[0.175,0.074],[0.148,0.171],[0.027,0.125],[0.021,0.47],[0.586,0],[0.145,0.125],[0.145,0.249],[0.028,0.493],[0.025,0.124],[0.072,0.145],[0.123,0.073],[0.517,0],[0.074,-0.122],[0.167,-0.319],[0.1,-0.122],[0.098,-0.125],[0.101,-0.15],[0.147,-0.243],[0.049,-0.145],[0.293,0.097],[0.119,0.125],[0,0.393],[-0.343,0.341],[0,0.294],[0.125,-0.073],[0.075,-0.098],[0.151,-0.099],[0.171,0],[0.147,0],[0,0],[0,0.22],[0,0],[-0.072,0.444],[0.054,-0.01],[0.075,0.011],[0.199,-0.096],[0.172,-0.17],[0.243,0],[0.17,0.274],[0.098,0.366],[0.096,0.095],[0.149,0.148],[0,0],[0,0.146],[-0.025,0.296],[0,0.15],[0.096,0.324],[0.245,0.198],[0.149,0.073],[0.271,0.096],[0.49,0],[0.172,0.079],[0.12,0.074],[0.145,0.073],[0.147,0.072],[0.342,0.123],[0.641,0],[0.416,-0.413],[0,0],[0.49,0],[0.025,0.127],[0.075,0.321],[0.244,0.197],[0.537,0],[0.147,-0.124],[0.32,-0.247],[0.147,-0.073],[0.321,-0.197],[0.223,0],[0.835,0.021],[0.177,0],[0.122,-0.094],[0.073,-0.098],[0.121,-0.293],[0.099,-0.468],[0.17,-0.275],[0.195,-0.147],[0,0],[0,-0.225],[-0.047,-0.218],[0,-0.587],[0.025,-0.15],[0.026,-0.124],[0.048,-0.147],[0.174,-0.343],[0.147,-0.125],[0.124,-0.1],[0.075,-0.121],[0.075,-0.146],[0.02,-0.125],[0.02,-0.118],[0.047,-0.171],[0.099,-0.166],[0.147,-0.073],[0.062,-0.03],[0.102,0.005],[0.121,-0.149],[0.019,-0.122],[0,-0.126],[0.025,-0.343],[0.219,-0.322],[0.217,-0.316],[0.098,-0.44],[0.026,-0.123],[0.02,-0.126],[0,0],[0,-0.174],[-0.074,-0.147],[-0.1,-0.175],[-0.072,-0.149],[0,0],[0,-0.149],[0.078,-0.323],[0.047,-0.27],[0,0],[0,0],[0,-0.149],[-0.054,-0.217],[-0.221,-0.295],[-0.075,-0.17],[-0.024,-0.126],[-0.05,-0.149],[-0.076,-0.149],[-0.098,-0.144],[-0.223,-0.243],[-0.146,-0.126],[-0.169,-0.078],[-0.175,-0.122],[0,0],[-0.294,-0.024],[-0.465,0],[-0.198,0],[-0.148,-0.049],[-0.296,-0.223],[0,0],[0,-0.124],[-0.023,-0.339],[-0.064,-0.012],[-0.073,0.015],[-0.124,-0.074],[-0.147,-0.224],[-0.074,-0.096],[-0.146,-0.074],[-0.295,-0.121],[-0.151,-0.101],[-0.121,-0.128],[-0.095,-0.127],[-0.123,-0.146],[-0.443,-0.196],[-0.171,-0.045],[-0.171,-0.097],[-0.049,-0.267],[-0.098,-0.319],[-0.05,-0.169],[-0.024,-0.124],[-0.024,-0.145],[-0.029,-0.121],[0,0],[-0.029,-0.296],[0,-0.146],[-0.1,-0.318],[-0.169,-0.147],[-0.099,-0.174],[0,-0.294],[0,-0.396],[-0.122,-0.026],[-0.12,0],[-0.146,-0.026],[-0.318,-0.073],[-0.146,-0.073],[-0.073,-0.103],[-0.024,-0.125],[-0.024,-0.149],[0,0],[-0.027,-0.467],[-0.051,-0.199],[-0.073,-0.122],[-0.1,-0.169],[-0.021,-0.122],[-0.048,-0.272],[-0.029,-0.122],[-0.147,-0.322],[-0.072,-0.04],[-0.058,0.011],[0,0],[0.048,0.296],[0,0],[-0.022,0.177],[-0.075,0.172],[-0.175,0.27],[-0.076,0.148],[-0.099,0.268],[0,0.144],[0.024,0.17],[0.051,0.272],[0,0],[0,0.225],[-0.024,0.172],[-0.075,0.174],[0,0],[0,0.218],[-0.098,0.122],[-0.145,0.123],[-0.193,0.103],[-0.392,0],[-0.061,-0.014],[-0.065,0.006],[-0.171,-0.027],[-0.15,-0.1],[-0.055,-0.12],[-0.099,-0.172],[-0.417,-0.496],[-0.346,-0.172],[-0.171,-0.049],[-0.322,-0.246],[-0.098,-0.127],[-0.057,-0.029],[-0.063,0.008],[-0.119,-0.028],[-0.079,-0.011],[-0.087,0.01],[-0.147,-0.027],[-0.146,-0.102],[-0.049,-0.122],[0,-0.175],[0,-0.392],[0,0],[-0.027,-0.151],[-0.022,-0.149],[0,-0.172],[0.077,-0.148],[0.074,-0.096],[0.074,-0.147],[0.099,-0.178],[0.242,-0.297],[0.071,-0.124],[0,0],[-0.265,-0.049],[-0.321,-0.072],[0,0],[-0.494,0],[-0.195,0],[-0.147,-0.049],[-0.149,0],[-0.061,-0.012],[-0.067,0.006],[-0.198,-0.048],[-0.151,-0.071],[-0.063,-0.013],[-0.066,0.006],[-0.146,-0.025],[-0.126,-0.021],[-0.295,-0.145],[-0.048,-0.008],[-0.085,0]],\"v\":[[226.975,69.674],[226.605,69.674],[226.214,69.773],[225.819,69.722],[225.819,70.461],[225.918,70.856],[226.702,71.052],[227.095,71.249],[227.49,71.343],[227.49,71.741],[227.095,71.937],[226.214,71.937],[225.425,71.937],[225.032,72.133],[224.54,72.525],[223.657,73.216],[223.168,73.512],[222.676,73.804],[222.283,74.294],[222.283,74.493],[222.381,74.883],[222.381,75.672],[222.283,76.062],[222.184,76.557],[221.889,76.946],[221.249,76.946],[219.723,76.654],[219.527,76.261],[219.134,76.261],[218.155,76.261],[217.952,75.379],[217.193,75.379],[216.381,75.575],[216.022,75.568],[215.598,75.575],[214.811,75.971],[214.61,76.359],[214.217,76.751],[213.926,77.145],[213.572,77.134],[213.137,77.145],[212.452,78.229],[212.352,78.621],[211.957,79.113],[211.772,79.112],[211.566,79.113],[210.777,79.113],[210.777,79.799],[210.975,80.192],[211.368,80.487],[211.566,80.908],[211.566,81.667],[209.845,81.667],[209.892,81.571],[209.795,80.787],[209.845,80.388],[208.741,80.388],[208.321,80.487],[207.926,80.687],[207.634,81.079],[207.535,81.865],[207.535,83.142],[207.434,83.533],[207.042,83.928],[206.647,84.424],[206.353,84.813],[206.254,85.206],[205.861,85.404],[205.176,86.191],[204.978,86.587],[204.587,86.781],[204.189,86.978],[203.798,87.174],[203.405,87.174],[202.91,87.269],[201.913,87.277],[201.145,87.269],[200.65,87.37],[199.668,87.765],[199.176,88.061],[198.615,88.055],[197.999,88.061],[197.509,88.455],[196.524,88.941],[195.243,89.53],[194.754,89.731],[194.262,90.516],[194.262,91.304],[194.064,91.695],[193.863,91.696],[193.676,91.695],[193.277,91.499],[192.884,91.4],[192.493,91.304],[192.493,90.91],[192.197,90.516],[191.902,91.304],[191.508,91.499],[191.508,91.895],[191.508,92.285],[191.61,92.677],[191.61,93.564],[191.61,93.958],[191.311,94.351],[190.92,94.742],[190.92,95.136],[191.017,95.925],[191.311,96.318],[191.709,96.614],[192.004,97.397],[192.785,98.58],[192.689,98.972],[192.295,98.679],[192.046,98.679],[191.806,98.679],[191.408,98.383],[191.017,98.282],[190.624,98.482],[190.624,99.243],[190.92,99.66],[191.61,100.446],[191.902,100.839],[192.295,101.132],[192.689,101.53],[192.884,101.921],[192.884,102.805],[193.18,103.688],[193.475,104.18],[193.772,105.166],[193.868,105.658],[193.868,106.147],[194.262,107.032],[194.559,107.425],[195.147,108.406],[195.345,108.806],[195.443,109.198],[195.443,110.47],[195.738,111.357],[195.934,111.747],[196.033,112.264],[196.033,113.913],[195.243,113.913],[194.457,114.402],[194.064,114.602],[193.676,115.094],[193.772,115.486],[194.949,115.682],[195.443,116.471],[195.835,116.667],[196.228,116.866],[197.012,117.255],[197.408,117.353],[198.194,117.749],[198.832,117.749],[199.473,117.749],[200.258,117.551],[200.65,117.551],[201.145,117.157],[201.537,116.961],[201.832,116.569],[201.931,116.175],[202.324,115.877],[202.616,115.486],[203.405,115.389],[204.189,115.29],[204.587,114.898],[205.371,114.802],[207.139,115.094],[208.025,115.486],[208.517,115.587],[209.207,115.682],[209.795,115.587],[210.188,115.194],[210.582,114.802],[211.072,114.011],[211.566,113.521],[213.334,112.143],[213.728,112.043],[214.121,111.851],[214.512,111.65],[214.908,111.65],[215.301,111.65],[215.694,111.851],[216.085,112.143],[216.876,112.143],[217.66,112.143],[218.056,111.851],[218.939,111.063],[219.43,110.766],[219.723,110.375],[220.017,109.981],[220.214,109.981],[220.41,109.981],[221.447,109.786],[222.184,109.883],[222.84,109.877],[223.559,109.883],[224.344,110.177],[224.74,110.375],[225.129,110.669],[225.819,111.063],[226.433,110.912],[226.803,110.968],[227.587,110.968],[228.475,110.968],[228.866,110.968],[229.261,111.161],[229.556,111.555],[229.947,112.043],[230.051,112.439],[230.051,113.618],[231.522,113.913],[231.816,114.306],[232.011,115.094],[232.111,116.373],[232.21,116.763],[232.504,117.157],[232.897,117.157],[234.077,116.471],[234.178,116.075],[234.96,115.486],[235.157,115.094],[235.551,114.802],[235.848,114.402],[236.144,113.618],[236.34,113.225],[237.126,113.521],[237.421,113.913],[236.829,114.702],[236.436,116.004],[236.533,116.763],[236.928,116.667],[237.024,116.274],[237.421,115.977],[237.814,116.175],[238.206,116.175],[238.206,117.331],[238.009,117.848],[238.009,118.237],[237.814,119.419],[237.986,119.426],[238.206,119.419],[238.6,119.027],[239.092,118.533],[239.684,118.731],[239.779,119.617],[240.566,120.306],[240.959,120.5],[241.055,121.092],[241.055,121.287],[240.959,121.679],[240.959,122.466],[240.959,122.859],[241.551,123.547],[242.332,124.041],[242.728,124.334],[243.517,124.43],[244.793,124.527],[245.092,124.925],[245.482,125.022],[245.876,125.319],[246.271,125.613],[247.251,125.711],[248.827,125.219],[249.219,123.745],[249.98,123.745],[250.986,124.527],[250.986,124.925],[251.381,125.711],[252.264,126.005],[253.447,125.219],[253.837,124.925],[254.723,124.334],[255.116,124.041],[256.123,123.745],[256.689,123.844],[258.827,123.769],[259.246,123.547],[259.639,123.351],[259.639,122.959],[260.033,122.174],[260.132,120.896],[260.918,120.5],[261.308,119.91],[261.308,119.718],[261.014,119.223],[261.014,118.584],[261.21,117.058],[261.408,116.667],[261.507,116.274],[261.702,115.877],[262.392,115.094],[262.783,114.802],[263.178,114.503],[263.371,114.109],[263.576,113.718],[263.576,113.322],[263.671,112.932],[263.965,112.533],[264.358,112.143],[264.751,111.947],[264.964,111.925],[265.243,111.851],[265.243,111.357],[265.342,110.968],[265.439,110.572],[265.439,109.688],[266.03,108.702],[266.522,107.817],[266.816,106.638],[266.917,106.248],[267.009,105.879],[267.009,103.862],[266.717,103.492],[266.522,103.101],[266.126,102.708],[265.831,102.314],[265.831,101.921],[265.831,101.53],[266.225,100.74],[266.225,99.956],[266.03,99.857],[266.03,98.679],[266.03,98.282],[265.637,97.792],[265.045,97.004],[264.751,96.614],[264.751,96.219],[264.556,95.825],[264.358,95.43],[263.965,95.136],[263.275,94.45],[262.882,94.155],[262.392,93.958],[262.098,93.49],[262.098,91.596],[261.308,91.499],[260.132,91.499],[259.639,91.304],[259.246,91.108],[258.655,90.322],[258.655,89.929],[258.556,89.53],[258.556,88.65],[258.376,88.661],[258.167,88.65],[257.772,88.455],[257.772,87.662],[257.379,87.566],[256.983,87.37],[256.199,86.978],[255.9,86.587],[255.507,86.291],[255.313,85.896],[254.822,85.6],[253.642,85.206],[253.149,85.011],[252.756,84.618],[252.756,83.832],[252.264,83.043],[252.264,82.554],[252.167,82.159],[251.973,81.766],[251.973,81.373],[251.973,80.983],[251.873,80.192],[251.873,79.799],[251.28,79.113],[250.79,78.721],[250.691,78.132],[250.887,77.342],[250.199,76.557],[249.806,76.557],[249.413,76.557],[249.02,76.359],[248.134,76.164],[247.743,75.971],[247.743,75.575],[247.743,75.18],[247.548,74.789],[247.548,74.393],[247.548,73.216],[247.154,72.82],[247.055,72.426],[246.66,72.035],[246.66,71.642],[246.568,70.856],[246.464,70.461],[245.777,69.773],[245.55,69.763],[245.383,69.773],[245.283,70.165],[245.184,70.952],[245.184,71.343],[244.894,71.741],[244.598,72.133],[244.107,72.92],[243.813,73.316],[243.714,74.101],[243.714,74.493],[244.007,74.883],[244.007,75.672],[244.007,76.455],[243.908,77.05],[243.714,77.54],[243.418,77.955],[243.418,81.251],[243.223,81.766],[242.824,81.965],[242.431,82.352],[241.842,82.455],[240.858,82.261],[240.658,82.26],[240.467,82.261],[240.074,81.965],[239.684,81.667],[239.684,81.276],[239.288,80.983],[237.912,79.997],[236.928,79.605],[236.436,79.408],[235.848,78.524],[235.652,78.132],[235.436,78.125],[235.254,78.132],[234.865,78.033],[234.641,78.039],[234.373,78.033],[233.978,77.838],[233.585,77.54],[233.681,77.175],[233.585,76.751],[233.783,75.745],[233.783,75.575],[233.585,75.18],[233.392,74.789],[233.585,74.393],[233.978,74.197],[234.077,73.804],[234.373,73.412],[234.668,72.92],[235.454,72.231],[235.551,71.839],[235.157,71.839],[234.373,71.642],[233.488,71.446],[233.095,71.446],[231.816,71.446],[231.326,71.249],[230.931,71.052],[230.537,71.052],[230.342,71.052],[230.146,71.052],[229.754,70.657],[229.358,70.461],[229.158,70.461],[228.965,70.461],[228.574,70.263],[228.181,70.165],[227.392,69.674],[227.258,69.663]],\"c\":true},\"ix\":2},\"nm\":\"Path 130\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":130,\"ty\":\"sh\",\"ix\":131,\"ks\":{\"a\":0,\"k\":{\"i\":[[0.338,-0.023],[0.34,0],[0,-0.245],[-0.197,-0.12],[-0.146,0],[-0.149,0.024],[-0.296,0.024],[0,0],[-0.297,0.022],[0,0],[0,0]],\"o\":[[-0.347,0.029],[-0.199,0.153],[0,0.251],[0.121,0.074],[0.171,0],[0.268,-0.048],[0,0],[0.295,-0.023],[0,0],[0,0],[-0.319,0.075]],\"v\":[[223.464,70.065],[222.579,70.065],[222.184,70.56],[222.381,71.148],[222.772,71.249],[223.168,71.052],[223.952,70.952],[224.344,70.952],[225.129,70.856],[225.129,70.065],[224.344,69.869]],\"c\":true},\"ix\":2},\"nm\":\"Path 131\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":131,\"ty\":\"sh\",\"ix\":132,\"ks\":{\"a\":0,\"k\":{\"i\":[[0.096,-0.07],[0,0]],\"o\":[[0,0],[-0.146,0.025]],\"v\":[[222.579,70.065],[222.969,69.97]],\"c\":true},\"ix\":2},\"nm\":\"Path 132\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":132,\"ty\":\"sh\",\"ix\":133,\"ks\":{\"a\":0,\"k\":{\"i\":[[0.046,-0.244],[0.098,-0.248],[0.244,-0.296],[0.197,-0.248],[0.147,-0.293],[0.099,-0.242],[0.099,-0.248],[0.167,0.013],[0.073,-0.121],[0.492,-0.341],[0.25,0],[0.282,0.023],[0.262,-0.021],[0.494,-0.293],[0.148,-0.246],[0.048,-0.246],[0.048,-0.247],[0,-0.687],[0,-0.289],[-0.099,-0.541],[-0.049,-0.347],[0,-0.293],[0.148,-0.248],[0.165,0.058],[0.07,-0.097],[0.147,-0.296],[0.048,-0.295],[0.147,-0.54],[0.048,-0.339],[0,0],[-0.098,-0.442],[0,-0.296],[0,0],[0,-0.3],[0,-0.588],[-0.295,0],[-0.591,0],[-0.248,-0.049],[-0.136,0.013],[-0.122,-0.024],[-0.3,0],[-0.294,0],[-0.171,-0.003],[-0.305,0.204],[-0.194,0.292],[-0.047,0.292],[0,0.298],[-0.148,0.886],[-0.048,0.241],[-0.149,0.348],[-0.051,0.341],[0,0.589],[-0.1,0.544],[-0.246,0.248],[-0.244,0.296],[0,0.392],[0,0.786],[-0.146,0.442],[0,0.344],[0,0],[0,0.295],[0,0],[-0.147,0.345],[-0.052,0.244],[0,0],[0.047,0.791],[0.047,0.538],[0.047,0.248],[0.296,0.244],[0.347,0.15],[0.249,0.099]],\"o\":[[-0.048,0.244],[-0.147,0.34],[-0.248,0.296],[-0.202,0.244],[-0.096,0.248],[-0.1,0.244],[-0.05,0.124],[-0.165,-0.013],[-0.295,0.494],[-0.196,0.101],[-0.3,0.057],[-0.224,-0.017],[-0.589,0.05],[-0.292,0.146],[-0.148,0.242],[-0.049,0.241],[-0.148,0.639],[0,0.296],[0,0.593],[0.052,0.341],[0.048,0.243],[0,0.296],[-0.076,0.126],[-0.155,-0.054],[-0.196,0.244],[-0.146,0.291],[-0.1,0.54],[-0.049,0.347],[0,0],[0,0.488],[0.047,0.245],[0,0],[0,0.296],[0.05,0.588],[0.294,0],[0.593,0],[0.297,0],[0.123,0.027],[0.133,-0.012],[0.246,0.054],[0.293,0],[0.181,-0.015],[0.384,0.008],[0.292,-0.195],[0.147,-0.249],[0.05,-0.245],[0.05,-0.931],[0.05,-0.244],[0.097,-0.348],[0.145,-0.34],[0.096,-0.541],[0,-0.589],[0.046,-0.34],[0.296,-0.29],[0.2,-0.25],[0,-0.785],[0,-0.496],[0.098,-0.293],[0,0],[0,-0.296],[0,0],[0,-0.391],[0.099,-0.245],[0,0],[0,-0.79],[0,-0.587],[0,-0.248],[-0.049,-0.345],[-0.295,-0.244],[-0.242,-0.099],[0,0.296]],\"v\":[[69.703,73.116],[69.703,73.905],[68.918,74.493],[68.329,75.279],[67.539,75.868],[67.344,76.654],[67.344,77.443],[66.966,77.542],[66.557,77.638],[65.965,79.211],[65.178,79.211],[64.326,79.224],[63.607,79.211],[62.034,79.605],[61.249,79.997],[61.249,80.787],[61.249,81.571],[60.462,83.142],[60.656,83.928],[60.656,85.503],[61.249,86.291],[61.249,87.074],[61.249,87.863],[60.84,87.874],[60.462,87.863],[60.066,88.65],[59.676,89.434],[59.676,91.007],[59.083,91.793],[59.083,92.189],[59.478,93.368],[59.676,94.155],[59.676,94.938],[59.871,95.73],[59.871,97.202],[60.656,97.3],[62.23,97.202],[62.626,97.887],[63.022,97.888],[63.411,97.887],[64.199,98.084],[64.984,97.887],[65.514,97.879],[66.557,97.692],[67.145,96.91],[67.539,96.119],[67.539,95.332],[67.539,92.973],[67.734,92.189],[68.329,91.4],[68.918,90.615],[68.918,89.044],[68.918,87.465],[69.703,86.877],[70.682,86.291],[71.471,85.699],[70.883,83.735],[71.276,82.554],[71.671,81.766],[71.671,80.983],[71.471,80.192],[71.471,79.799],[72.257,79.211],[72.456,78.425],[72.456,78.033],[72.062,76.062],[72.062,74.493],[72.062,73.705],[71.276,73.116],[70.487,72.525],[69.703,72.327]],\"c\":true},\"ix\":2},\"nm\":\"Path 133\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":133,\"ty\":\"sh\",\"ix\":134,\"ks\":{\"a\":0,\"k\":{\"i\":[[0.039,-0.004],[0.063,0.014],[0,0],[-0.095,-0.15],[-0.075,-0.124],[-0.127,-0.101],[-0.049,-0.196],[-0.049,-0.273],[-0.095,-0.145],[-0.144,-0.095],[-0.124,-0.072],[-0.466,-0.223],[-0.296,-0.119],[-0.147,-0.045],[-0.172,0],[0,0],[0.027,0.124],[0.1,0.148],[0.147,0.102],[0.122,0.05],[0.197,0.124],[0.22,0.123],[0.121,0.074],[0.073,0.201],[0.024,0.125],[0.296,0.222],[0.37,0.248],[0.196,0.05],[0.025,0]],\"o\":[[-0.069,0.006],[0,0],[0.097,0.15],[0.076,0.123],[0.073,0.12],[0.146,0.121],[0.05,0.271],[0.023,0.172],[0.101,0.145],[0.124,0.074],[0.439,0.295],[0.297,0.148],[0.146,0.052],[0.147,0.048],[0,0],[-0.02,-0.123],[-0.048,-0.171],[-0.099,-0.146],[-0.096,-0.046],[-0.221,-0.097],[-0.224,-0.122],[-0.124,-0.076],[-0.175,-0.1],[-0.024,-0.117],[-0.121,-0.367],[-0.343,-0.247],[-0.17,-0.096],[-0.025,-0.004],[-0.038,0]],\"v\":[[287.269,87.372],[287.068,87.37],[286.379,87.465],[286.673,87.863],[286.87,88.259],[287.267,88.455],[287.657,88.846],[287.657,89.633],[287.949,90.026],[288.245,90.417],[288.641,90.615],[289.92,91.206],[290.704,91.596],[291.097,91.793],[291.514,91.99],[292.374,91.99],[292.374,91.596],[292.079,91.206],[291.785,90.808],[291.392,90.712],[290.803,90.516],[290.311,90.026],[289.92,89.929],[289.525,89.53],[289.525,89.139],[288.835,88.354],[287.949,87.662],[287.46,87.37],[287.386,87.365]],\"c\":true},\"ix\":2},\"nm\":\"Path 134\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":134,\"ty\":\"sh\",\"ix\":135,\"ks\":{\"a\":0,\"k\":{\"i\":[[0,-0.244],[-0.124,-0.272],[-0.07,-0.145],[-0.219,-0.294],[-0.341,-0.268],[-0.099,-0.124],[-0.073,-0.147],[-0.051,-0.124],[-0.076,-0.149],[0,-0.295],[-0.047,-0.145],[-0.049,-0.145],[0,-0.194],[0,0],[0,0],[-0.05,-0.392],[0,-0.15],[0,0],[0,0],[0,0],[0,0],[-0.173,0.393],[-0.126,0.118],[-0.121,0.125],[-0.07,0.175],[-0.044,0.122],[-0.126,0.295],[-0.026,0.146],[0,0.291],[0,0],[-0.049,0.174],[-0.048,0.145],[-0.075,0.172],[-0.075,0.123],[-0.12,0.124],[-0.078,-0.025],[-0.036,0.047],[0,0.173],[0,0.15],[0.074,0.171],[0.271,0],[0.174,-0.121],[0.075,-0.098],[0.246,0],[0.393,0.027],[0,0],[0.144,0],[0.147,-0.024],[0,0],[0,0.323],[0.222,0.244],[0.196,0.118],[0.073,-0.017],[0.057,0.022],[0.046,-0.171],[0.023,-0.122],[0.074,-0.168],[0.126,0.1],[0.095,0.145],[0,0.242],[-0.023,0.217],[0,0.147],[0.049,0.099],[0.084,-0.023],[0.047,0.035],[0.098,0.1],[0.122,0.145],[0.098,0.125],[0.124,0.176],[0.096,0.169],[0.104,0.149],[0.169,0.075],[0.22,0]],\"o\":[[0,0.324],[0.05,0.149],[0.173,0.347],[0.273,0.346],[0.119,0.073],[0.097,0.125],[0.048,0.121],[0.075,0.172],[0,0.295],[0,0.177],[0.05,0.148],[0.072,0.177],[0,0],[0,0],[-0.02,0.392],[0,0.148],[0,0],[0,0],[0,0],[0,0],[0.024,-0.443],[0.074,-0.175],[0.122,-0.126],[0.123,-0.121],[0.054,-0.119],[0.15,-0.294],[0.046,-0.15],[0.047,-0.268],[0,0],[0.027,-0.201],[0.051,-0.151],[0.051,-0.172],[0.045,-0.124],[0.074,-0.147],[0.051,-0.05],[0.075,0.024],[0.101,-0.123],[0,-0.146],[0,-0.193],[-0.097,-0.228],[-0.246,0],[-0.099,0.076],[-0.147,0.176],[-0.391,0],[0,0],[-0.146,0],[-0.172,0],[0,0],[0.119,-0.295],[0,-0.344],[-0.147,-0.173],[-0.065,-0.041],[-0.062,0.014],[-0.075,0.172],[-0.024,0.124],[-0.049,0.171],[-0.12,-0.072],[-0.145,-0.121],[-0.151,-0.198],[0,-0.221],[0,-0.147],[0,-0.144],[-0.027,-0.051],[-0.076,0.02],[-0.126,-0.099],[-0.124,-0.118],[-0.099,-0.123],[-0.123,-0.171],[-0.124,-0.17],[-0.099,-0.147],[-0.096,-0.146],[-0.174,-0.073],[-0.242,0]],\"v\":[[303.094,117.058],[303.387,117.848],[303.582,118.237],[304.072,119.123],[304.96,119.91],[305.353,120.107],[305.548,120.5],[305.647,120.896],[305.943,121.287],[305.845,122.342],[305.943,122.761],[306.139,123.152],[306.434,123.573],[306.434,126.053],[304.465,126.053],[304.368,127.086],[304.465,127.482],[304.465,127.923],[306.999,127.923],[306.999,131.167],[308.694,131.167],[308.892,130.038],[309.287,129.745],[309.68,129.445],[310.069,129.149],[310.168,128.758],[310.566,127.973],[310.762,127.578],[310.762,126.795],[312.137,126.795],[312.137,126.3],[312.332,125.908],[312.629,125.515],[312.629,125.123],[312.92,124.729],[313.131,124.728],[313.314,124.729],[313.514,124.334],[313.415,123.938],[313.314,123.453],[312.725,123.055],[312.137,123.253],[312.137,123.645],[311.496,123.745],[310.467,123.645],[309.973,123.645],[309.581,123.547],[309.188,123.721],[309.09,122.859],[309.384,122.071],[308.793,121.386],[308.4,120.896],[308.189,120.89],[308.008,120.896],[307.714,121.287],[307.714,121.679],[307.415,122.071],[307.022,121.875],[306.73,121.485],[306.533,120.896],[306.632,120.306],[306.73,119.91],[306.632,119.518],[306.441,119.512],[306.238,119.518],[306.04,119.123],[305.647,118.829],[305.451,118.436],[305.059,118.041],[304.764,117.551],[304.465,117.157],[304.176,116.763],[303.582,116.667]],\"c\":true},\"ix\":2},\"nm\":\"Path 135\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":135,\"ty\":\"sh\",\"ix\":136,\"ks\":{\"a\":0,\"k\":{\"i\":[[0.017,-0.008],[0.124,-0.12],[0,-0.175],[-0.271,-0.413],[0,0],[0,0],[0.103,0]],\"o\":[[-0.151,0.075],[-0.119,0.124],[0,0.515],[0,0],[0,0],[-0.125,0],[-0.019,0]],\"v\":[[248.727,127.187],[248.332,127.382],[248.134,127.777],[248.727,128.954],[249.118,128.856],[249.118,127.282],[248.78,127.176]],\"c\":true},\"ix\":2},\"nm\":\"Path 136\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":136,\"ty\":\"sh\",\"ix\":137,\"ks\":{\"a\":0,\"k\":{\"i\":[[0.042,-0.006],[0.054,0.013],[0.147,0],[-0.022,-0.126],[-0.07,-0.125],[-0.149,-0.099],[-0.069,0.021],[-0.051,-0.051],[-0.049,-0.119],[-0.025,-0.12],[0,0],[0,0],[0.099,0.122],[0.075,0.125],[0.122,0.146],[0.099,0.048],[0.033,0]],\"o\":[[-0.063,0.009],[-0.128,-0.026],[0,0.147],[0.029,0.116],[0.096,0.147],[0.046,0.036],[0.076,-0.024],[0.099,0.097],[0.05,0.125],[0,0],[0,0],[0,-0.172],[-0.096,-0.125],[-0.098,-0.147],[-0.077,-0.101],[-0.025,-0.012],[-0.037,0]],\"v\":[[256.48,127.377],[256.298,127.382],[255.9,127.676],[255.9,128.073],[255.9,128.464],[256.298,128.758],[256.483,128.753],[256.689,128.758],[256.788,129.149],[256.886,129.545],[257.574,129.545],[257.574,128.784],[257.475,128.365],[257.082,128.167],[256.788,127.777],[256.689,127.382],[256.6,127.365]],\"c\":true},\"ix\":2},\"nm\":\"Path 137\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":137,\"ty\":\"sh\",\"ix\":138,\"ks\":{\"a\":0,\"k\":{\"i\":[[0.248,-0.076],[0.151,-0.126],[0.072,-0.097],[-0.019,-0.121],[-0.072,-0.32],[0,-0.121],[0,0],[-0.079,-0.146],[-0.173,-0.096],[-0.122,-0.097],[-0.173,-0.302],[-0.051,-0.123],[-0.071,-0.148],[-0.173,-0.339],[-0.198,-0.273],[-0.172,0],[0,0],[0.019,0.468],[0,0.079],[0,0],[0,0],[0,0.319],[-0.103,0.123],[-0.097,0.051],[-0.025,0.194],[0,0.143],[0,0.177],[0,0.148],[0,0.151],[0,0],[0.148,-0.024],[0.08,0.006],[0.084,-0.012],[0.168,0],[0.119,0.05],[0.126,0.099],[0.123,0.122],[0.121,0.12],[0.244,0]],\"o\":[[-0.17,0.049],[-0.096,0.07],[0.024,0.144],[0.101,0.321],[0.027,0.124],[0,0],[0,0.172],[0.097,0.195],[0.125,0.073],[0.271,0.194],[0.071,0.121],[0.068,0.171],[0.197,0.321],[0.145,0.301],[0.07,0.12],[0,0],[0.024,-0.471],[0,-0.07],[0,0],[0,0],[0,-0.32],[0,-0.171],[0.071,-0.095],[0.173,-0.124],[0.024,-0.123],[0,-0.177],[0,-0.147],[0,-0.148],[0,0],[-0.171,0],[-0.087,0.013],[-0.08,-0.006],[-0.148,0.026],[-0.151,0],[-0.173,-0.072],[-0.124,-0.097],[-0.126,-0.127],[-0.173,-0.177],[-0.269,0]],\"v\":[[250.691,129.545],[250.199,129.645],[250.103,130.038],[249.806,130.528],[250.199,131.316],[250.199,131.709],[250.199,132.101],[250.4,132.494],[250.79,132.887],[251.184,133.083],[251.873,133.775],[251.973,134.166],[252.264,134.557],[252.858,135.341],[253.249,136.135],[253.665,136.231],[254.574,136.231],[254.626,135.047],[254.574,134.851],[256.199,134.851],[256.199,133.847],[255.9,133.083],[256.1,132.689],[256.493,132.594],[256.886,132.2],[256.837,131.834],[256.886,131.411],[256.788,131.02],[256.837,130.627],[254.55,130.627],[254.133,130.823],[253.884,130.824],[253.642,130.823],[253.249,131.02],[252.858,130.921],[252.559,130.528],[252.167,130.234],[251.873,129.843],[251.381,129.445]],\"c\":true},\"ix\":2},\"nm\":\"Path 138\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":138,\"ty\":\"sh\",\"ix\":139,\"ks\":{\"a\":0,\"k\":{\"i\":[[0.369,-0.026],[0,0],[0,0],[0.123,-0.099],[0.074,-0.146],[0,-0.146],[0.023,-0.464],[0.269,-0.268],[0.345,-0.173],[0.296,-0.176],[0.347,-0.169],[0,0],[0.101,-0.05],[0.118,-0.096],[0.123,-0.101],[0.147,-0.075],[0.123,-0.052],[0.244,-0.199],[0.077,-0.12],[0.219,-0.242],[0.147,-0.099],[0.144,-0.072],[0.175,-0.048],[0.068,0.006],[0.061,-0.011],[0.146,-0.027],[0.022,-0.121],[0.027,-0.123],[0,-0.193],[-0.268,-0.177],[-0.146,-0.025],[-0.489,0],[-0.246,-0.121],[-0.149,-0.1],[-0.149,-0.099],[-0.318,0],[-0.151,0.021],[-0.075,0.022],[-0.122,0.096],[-0.117,0.077],[-0.148,0.047],[-0.465,0],[-0.102,0.366],[-0.099,0.144],[-0.296,0.248],[-0.075,0.2],[-0.052,0.275],[-0.077,0.269],[-0.047,0.146],[-0.051,0.118],[-0.146,0.098],[-0.319,0.048],[-0.146,0],[-0.464,0.025],[-0.145,0.029],[0.074,0.124],[0,0.242],[-0.221,0.318],[-0.346,0.171],[-0.126,0.046],[-0.122,0.099],[-0.05,0.196],[-0.026,0.121],[0,0.151],[0,0.165],[0,0],[0.421,0.023],[0.224,0.173],[0.049,0.097],[0.074,0.144],[0.147,0.098],[0.248,0]],\"o\":[[0,0],[0,0],[-0.147,0.074],[-0.146,0.099],[-0.075,0.126],[-0.05,0.465],[-0.026,0.394],[-0.269,0.274],[-0.319,0.17],[-0.321,0.193],[0,0],[-0.122,0.052],[-0.147,0.095],[-0.123,0.098],[-0.124,0.097],[-0.12,0.074],[-0.318,0.127],[-0.122,0.097],[-0.171,0.273],[-0.098,0.128],[-0.125,0.072],[-0.176,0.077],[-0.059,0.012],[-0.067,-0.005],[-0.124,0.024],[0,0.148],[-0.025,0.126],[-0.052,0.172],[0,0.32],[0.122,0.071],[0.469,0.126],[0.296,0],[0.175,0.072],[0.146,0.096],[0.248,0.15],[0.171,0],[0.072,0],[0.126,-0.072],[0.126,-0.103],[0.127,-0.068],[0.417,-0.17],[0,-0.39],[0.023,-0.178],[0.197,-0.321],[0.145,-0.123],[0.097,-0.268],[0.05,-0.27],[0.047,-0.153],[0.051,-0.124],[0.069,-0.174],[0.247,-0.199],[0.122,-0.03],[0.468,0],[0.152,0],[-0.07,-0.147],[-0.124,-0.199],[0,-0.42],[0.222,-0.294],[0.124,-0.049],[0.172,-0.079],[0.148,-0.125],[0.025,-0.118],[0.025,-0.125],[0,-0.168],[0,0],[-0.416,0],[-0.288,0],[-0.1,-0.075],[-0.07,-0.122],[-0.074,-0.148],[-0.196,-0.126],[-0.37,0]],\"v\":[[301.42,129.645],[301.42,131.512],[300.634,131.903],[300.24,132.101],[299.848,132.394],[299.848,132.791],[299.947,133.968],[299.357,134.753],[298.569,135.443],[297.684,135.839],[296.897,136.424],[296.504,136.62],[296.111,136.723],[295.819,137.115],[295.423,137.412],[295.126,137.805],[294.736,137.9],[293.85,138.198],[293.65,138.587],[293.261,139.373],[292.868,139.673],[292.478,139.865],[292.079,140.162],[291.887,140.162],[291.689,140.162],[291.296,140.262],[291.296,140.652],[291.197,141.047],[290.9,141.44],[291.392,142.131],[291.785,142.326],[293.064,142.326],[293.85,142.422],[294.243,142.718],[294.538,143.112],[295.374,143.31],[295.819,143.31],[296.012,143.112],[296.405,142.917],[296.6,142.52],[296.996,142.326],[298.175,142.225],[298.277,141.247],[298.569,140.852],[299.357,140.162],[299.751,139.769],[299.947,138.98],[300.145,138.198],[300.339,137.805],[300.441,137.412],[300.829,137.115],[301.618,136.723],[302.008,136.723],[303.188,136.723],[303.582,136.62],[303.387,136.231],[302.993,135.742],[303.483,134.753],[304.272,134.166],[304.665,134.071],[304.96,133.676],[305.353,133.277],[305.353,132.887],[305.353,132.494],[305.548,132.13],[305.548,130.921],[304.465,130.921],[303.681,130.823],[303.582,130.43],[303.387,130.038],[302.993,129.745],[302.378,129.545]],\"c\":true},\"ix\":2},\"nm\":\"Path 139\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":139,\"ty\":\"sh\",\"ix\":140,\"ks\":{\"a\":0,\"k\":{\"i\":[[0.176,0.003],[0.056,-0.045],[0.125,-0.095],[0.081,0.017],[0.045,-0.02],[0.048,-0.073],[0,0],[0,0],[0,0.146]],\"o\":[[-0.157,-0.003],[-0.124,0.099],[-0.055,0.044],[-0.066,-0.014],[-0.097,0.052],[0,0],[0,0],[0,-0.145],[-0.065,0.064]],\"v\":[[293.723,144.252],[293.36,144.29],[293.163,144.68],[292.944,144.69],[292.769,144.68],[292.671,145.028],[294.243,145.028],[294.243,144.586],[294.147,144.195]],\"c\":true},\"ix\":2},\"nm\":\"Path 140\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ty\":\"gf\",\"o\":{\"a\":0,\"k\":35,\"ix\":10},\"r\":1,\"bm\":0,\"g\":{\"p\":2,\"k\":{\"a\":0,\"k\":[0,1,1,1,1,0,0,0],\"ix\":9}},\"s\":{\"a\":0,\"k\":[0,0],\"ix\":5},\"e\":{\"a\":0,\"k\":[0,250],\"ix\":6},\"t\":1,\"nm\":\"Gradient Fill 1\",\"mn\":\"ADBE Vector Graphic - G-Fill\",\"hd\":false},{\"ty\":\"tr\",\"p\":{\"a\":0,\"k\":[337.65,165.187],\"ix\":2},\"a\":{\"a\":0,\"k\":[0,0],\"ix\":1},\"s\":{\"a\":0,\"k\":[100,100],\"ix\":3},\"r\":{\"a\":0,\"k\":0,\"ix\":6},\"o\":{\"a\":0,\"k\":100,\"ix\":7},\"sk\":{\"a\":0,\"k\":0,\"ix\":4},\"sa\":{\"a\":0,\"k\":0,\"ix\":5},\"nm\":\"Transform\"}],\"nm\":\"Group 2\",\"np\":141,\"cix\":2,\"bm\":0,\"ix\":2,\"mn\":\"ADBE Vector Group\",\"hd\":false},{\"ty\":\"gr\",\"it\":[{\"ind\":0,\"ty\":\"sh\",\"ix\":1,\"ks\":{\"a\":0,\"k\":{\"i\":[[0.295,-0.054],[0.068,0.006],[0.061,-0.012],[0.171,-0.124],[0.198,-0.026],[0.173,0],[0,0],[0.195,0],[0,0],[0.147,0],[0.246,0],[0.219,-0.021],[0.441,-0.347],[-0.099,-0.197],[0,-0.196],[0.296,-0.095],[0.297,0],[0.295,0.122],[0.171,0],[0,0],[0.517,0.273],[0.149,0.027],[0.415,0],[0.173,-0.026],[0.122,-0.023],[0.15,-0.102],[0.197,0],[0.319,0],[0,0],[0.194,0.022],[0.245,0],[0.418,-0.15],[0.488,0],[0.095,-0.017],[0.072,-0.014],[0.032,0.002],[0.033,-0.007],[0.109,-0.024],[0.136,-0.039],[0.219,-0.086],[-0.12,-0.149],[-0.109,-0.048],[-0.086,-0.016],[-0.036,0.002],[-0.048,-0.008],[-0.173,-0.113],[-0.084,-0.073],[-0.051,-0.087],[-0.025,-0.087],[-0.024,-0.145],[0,-0.208],[0,0],[0.059,0.048],[0.085,0.026],[0.031,-0.003],[0.033,0.008],[0.097,0.01],[0.083,0.025],[0.101,0.024],[0.033,-0.002],[0.03,0.006],[0.089,0.024],[0.097,0.014],[0.075,0],[0.108,0],[0.16,0],[0.123,-0.061],[0.041,-0.085],[0,-0.089],[-0.012,-0.065],[-0.086,-0.135],[-0.072,-0.062],[-0.098,-0.049],[-0.185,-0.085],[-0.149,-0.062],[-0.062,-0.012],[-0.074,-0.017],[-0.086,-0.012],[-0.172,0],[0,0],[-0.085,-0.01],[-0.076,-0.049],[-0.075,-0.039],[-0.149,-0.15],[-0.061,-0.076],[-0.099,-0.162],[-0.039,-0.098],[-0.009,-0.085],[-0.009,-0.072],[0,-0.11],[0.146,0],[0.074,0],[0.16,0.036],[0.097,0.014],[0.036,-0.002],[0.052,0.008],[0.109,0.037],[0.149,0.059],[0.074,0.028],[0.084,0.025],[0.085,0.038],[0.109,0.037],[0.062,0.012],[0.28,0.036],[0.121,0.021],[0.206,0.073],[0.061,0.02],[0.097,0.061],[0.059,0.036],[0.101,0.063],[0.099,0.063],[0.076,0.072],[0.126,0.036],[0.039,-0.005],[0.044,0.012],[0.072,0.013],[0.061,0.015],[0.109,0],[0,0],[0.096,0.011],[0.159,0.047],[0.126,0.048],[0.243,0],[0.786,0],[-0.024,-0.097],[-0.046,-0.075],[-0.16,-0.165],[-0.199,-0.035],[-0.034,0.005],[-0.049,-0.02],[0,0],[-0.062,-0.061],[-0.147,-0.109],[-0.065,-0.072],[-0.064,-0.071],[-0.061,-0.097],[-0.06,-0.149],[-0.022,-0.063],[-0.037,-0.096],[0,-0.169],[0,0],[0,0],[0.097,0.016],[0.084,0.039],[0.087,0.048],[0.086,0.074],[0.058,0.059],[0.063,0.035],[0.099,0.061],[0.102,0.062],[0.11,0.073],[0.186,0.108],[0.075,0.036],[0.074,0.047],[0.073,0.06],[0.18,0.034],[0.059,0.01],[0.073,0],[0.174,0.09],[0.051,0.075],[0.051,0.074],[0.085,0.048],[0.062,0.023],[0.11,0.026],[0.073,0],[0.162,0],[0,0],[0,0],[-0.062,-0.146],[-0.11,-0.223],[0,-0.128],[0.015,-0.11],[0,-0.098],[0,-0.061],[0,0],[0.025,-0.074],[0.11,-0.314],[0.059,-0.074],[0.075,-0.038],[0.111,0],[0.121,0.05],[0.1,0.071],[0.061,0.159],[0,0.08],[-0.038,0.162],[-0.05,0.069],[-0.133,0.156],[-0.035,0.099],[0,0.086],[0.013,0.061],[0.05,0.089],[0.06,0.099],[0.017,0.103],[0,0],[0,0.063],[0.136,0.097],[0.087,0.048],[0.096,0.065],[0.073,0.061],[0.085,0.022],[0.133,0],[0.118,-0.025],[0.076,-0.01],[0.133,-0.038],[0.071,-0.026],[0.17,-0.112],[0.098,-0.049],[0.073,-0.021],[0.076,-0.015],[0.032,0.003],[0.033,-0.008],[0.084,-0.026],[0.085,-0.039],[0.099,-0.023],[0.171,0],[0.088,0],[0,0],[0.086,-0.027],[0.083,-0.036],[0.073,-0.014],[0.159,0],[0,0],[0.135,0],[0.433,0],[0.089,-0.024],[0.062,-0.028],[0.048,-0.1],[0.012,-0.058],[-0.072,-0.035],[-0.06,-0.014],[-0.077,0],[-0.068,0.003],[-0.087,-0.005],[-0.113,-0.049],[-0.085,-0.059],[-0.051,-0.086],[-0.038,-0.076],[-0.035,-0.071],[-0.101,-0.047],[-0.085,-0.024],[-0.158,-0.039],[-0.072,0],[-0.059,0.004],[-0.079,-0.007],[-0.074,-0.036],[-0.087,-0.051],[-0.147,-0.062],[-0.075,-0.022],[-0.061,-0.037],[-0.126,-0.133],[0,0],[0,0],[0.075,0.02],[0.06,0.013],[0.075,0.025],[0.173,0.087],[0.097,0.061],[0.085,0.049],[0.07,0.062],[0.097,0.017],[0.117,-0.011],[0.101,0.008],[0.099,0],[0,0],[0.088,0.025],[0.124,0.05],[0.16,0.036],[0.075,0.022],[0.187,0.135],[0.072,0.075],[0.061,0.088],[0.06,0.038],[0.09,0.035],[0.073,0],[0.32,-0.085],[0.074,-0.02],[0.086,-0.034],[0.083,-0.038],[0.086,-0.035],[0.085,-0.042],[0.198,-0.065],[0.059,-0.024],[0,-0.131],[-0.111,-0.172],[-0.051,-0.086],[-0.027,-0.073],[0,-0.085],[0,0],[0,0],[0.149,0.059],[0.087,0.063],[0.081,0.051],[0.085,0],[0.858,0.01],[0.052,-0.076],[0.073,-0.136],[0.097,-0.039],[0.135,-0.048],[0.237,-0.049],[0.135,-0.022],[0.135,-0.134],[0,0],[0.194,-0.126],[0.087,-0.024],[0.063,-0.012],[0.146,0],[0.137,-0.012],[0.1,0],[0.086,-0.011],[0.084,-0.05],[0.086,-0.048],[0.086,-0.038],[0.056,-0.021],[0.051,-0.038],[0.086,-0.036],[0.036,0.006],[0.03,-0.009],[0.063,-0.027],[0.051,-0.06],[0.133,-0.194],[0.051,-0.038],[0.049,-0.038],[0,-0.108],[-0.013,-0.145],[0,0],[-0.17,-0.025],[-0.149,-0.111],[-0.073,-0.05],[-0.086,-0.036],[-0.061,0],[-0.199,0],[-0.271,0.031],[-0.136,0.062],[-0.06,0.028],[-0.087,0.049],[-0.125,0],[-0.04,-0.184],[0,-0.146],[-0.026,-0.135],[-0.013,-0.076],[-0.013,-0.059],[0,-0.084],[0,0],[0.295,-0.294],[0.085,-0.06],[0.099,-0.011],[0.248,0],[0,0],[0.1,0],[0.175,-0.013],[0.135,-0.046],[0.11,-0.053],[0.084,-0.026],[0.134,0],[0,0],[0.269,0.037],[0.097,0.024],[0.085,0],[0.173,0],[0.234,-0.053],[0.171,-0.085],[0,-0.076],[0.01,-0.084],[0.156,-0.087],[0.088,0],[0,0],[0.174,-0.086],[0.088,-0.023],[0.206,0],[0.112,0.014],[0.148,0.013],[0.172,0],[0.171,-0.011],[0.11,-0.038],[0.087,-0.012],[0.087,-0.032],[0.036,-0.073],[0.025,-0.073],[0.012,-0.062],[0.022,-0.058],[0.034,-0.059],[0.085,0],[0,0],[0.036,-0.073],[0.048,-0.148],[-0.075,-0.121],[-0.097,-0.149],[-0.122,-0.097],[-0.145,-0.074],[-0.075,0.01],[-0.054,-0.009],[-0.146,0],[-0.122,-0.026],[-0.273,-0.175],[-0.099,-0.121],[0,0],[0,0],[-0.063,-0.025],[-0.075,-0.035],[-0.16,-0.036],[-0.171,0],[-0.112,0],[0,0],[-0.122,0.01],[-0.062,0.009],[-0.161,0.058],[-0.109,0],[0,0],[-0.174,0.027],[-0.174,0],[0,0],[-0.151,0],[-0.062,0],[0,0],[0.098,-0.137],[0.061,-0.038],[0.085,-0.037],[0.133,-0.086],[0.113,-0.024],[0.07,0],[0,0],[0.088,0.01],[0.038,-0.004],[0.045,0.012],[0.086,0.021],[0.097,0],[0,0],[0.232,-0.062],[0.096,-0.04],[0.221,0],[0,0],[0.1,0],[0.11,0.012],[0.208,0.021],[0.137,0],[0,0],[0.077,-0.011],[0.025,-0.193],[0,0],[0.063,-0.049],[0,-0.124],[-0.232,-0.176],[-0.099,-0.065],[-0.098,-0.008],[-0.098,0.008],[-0.107,-0.011],[-0.234,-0.111],[-0.194,-0.062],[-0.149,-0.059],[-0.221,-0.126],[0,0],[0.161,-0.122],[0.048,-0.076],[0.027,-0.063],[-0.088,-0.037],[-0.061,-0.026],[-0.135,-0.072],[-0.062,-0.064],[-0.065,-0.082],[-0.02,-0.049],[-0.064,-0.04],[-0.086,-0.039],[-0.073,-0.037],[-0.074,-0.027],[-0.184,-0.073],[-0.074,-0.039],[-0.098,-0.061],[-0.11,-0.036],[-0.232,0],[0,0],[-0.087,0.012],[-0.086,0.034],[0.037,0.061],[0.064,0.084],[0,0.124],[-0.097,0.059],[-0.063,0],[-0.196,0],[-0.284,-0.023],[-0.159,-0.061],[-0.075,-0.022],[-0.059,-0.013],[-0.086,0],[-0.074,0],[0,0],[0,0],[-0.075,-0.04],[-0.1,-0.037],[-0.193,0],[-0.171,0.087],[-0.073,0.051],[-0.074,0.036],[-0.075,0.028],[-0.059,0.018],[-0.048,0],[-0.079,0.041],[-0.074,0.051],[-0.064,0.036],[-0.135,0],[-0.175,-0.083],[-0.16,-0.085],[-0.084,0],[0,0],[-0.232,-0.01],[-0.06,-0.01],[-0.074,-0.014],[-0.196,-0.165],[-0.084,-0.05],[-0.086,-0.024],[-0.085,0],[0,0],[-0.073,-0.016],[-0.056,-0.022],[-0.222,-0.125],[-0.086,-0.023],[-0.233,0],[0,0],[-0.061,-0.012],[-0.075,-0.054],[-0.162,-0.1],[-0.086,-0.024],[-0.149,-0.015],[0,0],[-0.135,-0.048],[-0.074,-0.053],[0,-0.171],[0,0],[-0.099,-0.148],[-0.061,-0.073],[-0.097,-0.026],[-0.061,-0.013],[-0.047,0.005],[-0.052,-0.014],[-0.095,-0.048],[-0.086,-0.037],[-0.063,-0.083],[-0.038,-0.059],[-0.073,-0.148],[-0.037,-0.047],[-0.065,-0.062],[-0.124,-0.148],[-0.061,-0.09],[-0.073,-0.096],[-0.049,-0.062],[-0.05,-0.074],[-0.063,-0.15],[-0.073,-0.149],[-0.027,-0.072],[-0.173,-0.225],[-0.071,-0.052],[-0.061,-0.046],[0,-0.134],[0,0],[0.025,-0.096],[0,-0.123],[-0.06,-0.095],[0,-0.284],[0,0],[0.061,-0.095],[0,-0.161],[-0.012,-0.136],[0,0],[0,0],[0.184,-0.051],[0.122,-0.114],[0.024,-0.06],[-0.026,-0.297],[0.048,-0.218],[0,0],[0,0],[-0.148,-0.072],[-0.295,-0.025],[0,0],[-0.12,0],[-0.169,0],[0,0],[-0.024,0.196],[-0.022,0.123],[-0.296,0],[-0.146,0],[-0.146,0],[-0.024,-0.196],[-0.024,-0.12],[-0.074,-0.147],[-0.174,-0.097],[-0.172,-0.022],[-0.123,-0.022],[-0.068,0.007],[-0.059,-0.01],[-0.147,-0.072],[-0.119,-0.071],[-0.097,-0.12],[-0.126,-0.148],[-0.049,-0.124],[0,0],[0,0],[0.195,0],[0,0],[0.416,0.196],[0.124,0.072],[0.122,0.072],[0.079,-0.016],[0.048,0.009],[0.298,0.025],[0.343,0],[0.416,-0.174],[-0.147,-0.266],[-0.12,-0.121],[0,-0.222],[0,-0.169],[0.27,-0.075],[0.147,-0.096],[0,-0.271],[-0.199,-0.15],[-0.246,0.03],[-0.167,-0.026],[-0.267,-0.171],[-0.539,0],[-0.148,0.147],[-0.394,0.051],[-0.493,0],[0,0],[0.414,0.148],[0.06,-0.008],[0.069,0.027],[0.147,0.049],[0.075,-0.009],[0.054,0.012],[0.149,0.024],[0,0],[0,0],[-0.148,-0.077],[-0.172,-0.072],[-0.147,-0.022],[-0.12,0],[-0.194,0],[0,0],[-0.245,-0.12],[0,-0.271],[0,0],[0.072,-0.148],[0.048,-0.126],[0,-0.218],[0,0],[-0.101,-0.148],[-0.124,-0.171],[0,-0.176],[0,0],[0,0],[0.147,-0.072],[0.171,-0.101],[0.171,-0.078],[0.173,0],[0,0],[0.17,0.024],[0.172,0],[0,0],[0.198,0.048],[0.198,0],[0.169,-0.069],[0.147,-0.052],[0.122,-0.049],[0.095,-0.049],[0,-0.24],[0,0],[-0.072,-0.171],[-0.172,-0.075],[-0.123,-0.05],[-0.125,-0.046],[-0.147,-0.099],[-0.097,-0.118],[-0.049,-0.293],[0.25,-0.148],[0,-0.242],[-0.2,-0.347],[-0.193,-0.269],[-0.097,-0.124],[-0.223,0],[-0.198,0.101],[-0.173,0.05],[-0.149,0],[0,0],[-0.148,-0.048],[0.048,-0.121],[0.099,-0.1],[0.082,0.02],[0.045,-0.021],[0.098,-0.123],[0.048,-0.125],[0.049,-0.148],[0,-0.243],[-0.048,-0.198],[-0.173,-0.245],[-0.149,-0.07],[-0.151,0],[-0.123,0.051],[-0.124,0.1],[-0.1,0.121],[-0.12,0.073],[-0.148,0],[-0.222,-0.024],[0,0],[0.145,-0.075],[0.122,-0.075],[0.148,-0.074],[0.074,-0.167],[0,-0.224],[-0.097,-0.195],[-0.12,-0.122],[-0.124,-0.145],[-0.345,-0.391],[-0.099,-0.148],[-0.047,-0.15],[-0.023,-0.118],[-0.122,-0.294],[-0.101,-0.271],[-0.295,-0.195],[-0.094,-0.123],[-0.072,-0.175],[-0.119,-0.271],[-0.122,-0.096],[-0.442,-0.148],[-0.298,-0.22],[-0.172,-0.077],[-0.146,0],[0,0],[-0.15,0.024],[-0.221,0],[0,0],[-0.122,-0.023],[-0.059,0.01],[-0.058,-0.043],[-0.047,-0.124],[-0.049,-0.126],[-0.194,-0.099],[-0.201,0],[-0.115,0.009],[-0.149,-0.025],[-0.099,-0.174],[-0.074,-0.123],[-0.194,-0.047],[-0.297,0],[-0.27,0.077],[-0.172,0.074],[-0.125,0.097],[-0.076,0.148],[0,0.124],[0,0],[-0.319,0.516],[-0.25,0.266],[-0.072,0.149],[0,0.247],[0.028,0.22],[0,0.147],[0,0.148],[0.126,0.247],[0.075,0.148],[0.049,0.145],[0,0.142],[-0.42,0.021],[0,0],[-0.148,0],[-0.293,0],[-0.024,0.271],[-0.074,0.122],[-0.121,0.121],[-0.17,0.077],[-0.074,-0.012],[-0.055,0.012],[-0.174,0.073],[0,0],[0,0.248],[0.048,0.196],[0.074,0.15],[0.072,0.12],[0,0.176],[-0.197,0.125],[-0.079,-0.011],[-0.056,0.012],[-0.273,0.074],[-0.126,0.073],[-0.07,0.147],[-0.021,0.124],[0,0.145],[-0.026,0.147],[0,0],[-0.024,0.421],[0,0.15],[0,0],[-0.025,-0.466],[0,-0.172],[-0.318,0],[-0.146,0],[-0.339,0.369],[-0.145,0.15],[-0.198,0.096],[-0.169,0],[0,0],[-0.114,-0.008],[-0.152,0.028],[-0.145,0.071],[-0.073,0.099],[-0.073,0.127],[0,0],[-0.146,0.098],[-0.147,0.098],[-0.098,0.097],[-0.097,0.126],[-0.122,0.099],[-0.098,0.07],[-0.171,0.273],[-0.123,0.096],[-0.097,0.072],[-0.098,0.124],[-0.046,0.104],[-0.123,0.122],[-0.121,0.072],[-0.05,0.193],[0,0.468],[-0.045,0.019],[-0.059,0],[-0.122,-0.046],[-0.038,-0.016],[-0.035,-0.014],[-0.034,-0.014],[-0.08,-0.051],[-0.03,-0.017],[-0.084,-0.071],[-0.043,-0.021],[-0.148,0],[-0.27,-0.077],[-0.296,-0.148],[-0.392,0],[-0.244,0.025],[-0.149,0.048],[-0.294,0.221],[-0.149,0.173],[-0.171,0.123],[-0.321,0.048],[-0.146,-0.009],[-0.118,0.009],[-0.123,0.024],[-0.17,0.019],[-0.073,-0.009],[-0.094,0.026],[-0.146,0.024],[-0.143,0.048],[-0.061,-0.009],[-0.066,0.027],[-0.148,0.075],[-0.123,0.075],[-0.099,0.122],[-0.123,0.198],[-0.15,0.196],[-0.369,0],[0,0],[-0.27,0.176],[-0.149,0.127],[-0.124,0.195],[-0.048,0.124],[0,0],[0.268,-0.249],[0.098,-0.075],[0.246,0],[0,0],[0.246,0.195],[0.298,0.173],[0.121,0],[0,0],[0.615,0.197],[0.125,0.025],[0.149,0.125],[0.076,0.149],[0,0.172],[0,0],[-0.269,0],[-0.162,-0.009],[-0.256,0.028],[-0.12,0],[-0.318,0.123],[-0.219,0.294],[-0.096,-0.05],[-0.099,-0.146],[-0.075,-0.369],[-0.074,-0.146],[-0.074,-0.123],[-0.37,0],[-0.123,0.171],[-0.048,0.1],[-0.318,0.075],[-0.294,0],[-0.344,0.027],[-0.145,0.027],[0.026,0.274],[0.17,0.322],[0.172,0.121],[0.271,0.172],[0.122,0.318],[0.097,0.272],[0.073,0.149],[0.052,0.122],[0.052,0.102],[0.121,0.076],[0.295,0.127],[0.145,0.072],[-0.147,0.1],[-0.124,0.047],[-0.268,-0.199],[-0.145,-0.071],[-0.169,0],[0,0],[-0.148,0],[-0.147,0],[-0.025,0.589],[0,0],[-0.024,0.121],[0,0.171],[0.075,0.124],[0.152,0.076],[0.317,0],[0.271,-0.121],[0.123,-0.101],[0.174,0],[0,0],[-0.221,0.124],[-0.099,0.075],[-0.124,0.073],[-0.052,0.12],[0.296,0.098],[0.148,0.05],[0,0],[0,0],[0,0],[0,0],[-0.124,0.098],[-0.144,0.077],[-0.32,0],[0,0],[-0.442,0],[-0.197,0.103],[-0.124,0.124],[0,0.226],[0.121,0.193],[0.169,0.146],[0.273,0],[0.194,-0.051],[0.146,-0.023],[0.148,0],[0.123,0.049],[0.074,0.147],[0,0.17],[-0.244,0],[-0.147,0],[-0.15,0],[-0.32,0],[-0.296,0.049],[-0.149,0.073],[0,0],[-0.194,0],[-0.173,0],[0,0],[-0.222,0.049],[-0.126,0.048],[-0.075,0.122],[0.367,0.099],[0.067,-0.006],[0.06,0.013],[0.169,0.124],[0.079,0.249],[0,0.149],[0,0.22],[0,0.245],[0,0.148],[0,0.097],[-0.639,0.048],[0,0],[0.22,0.467],[0.026,0.118],[0.024,0.23],[0.466,0.079],[0.172,0.027],[0.123,0.029],[0.147,0.073],[0.122,0.074],[0.1,0.148],[0,0.224],[-0.023,0.051],[-0.122,0.072],[-0.173,0.07],[-0.076,-0.01],[-0.052,0.008],[-0.343,0.022],[-0.147,0],[0,0],[-0.272,-0.05],[-0.148,-0.098],[0,-0.245],[0,0],[0.047,-0.146],[0,-0.243],[-0.273,-0.541],[0,0],[0,0],[-0.125,0.15],[0,0.224],[0,0],[0.121,0.172],[0.27,0],[0.196,-0.051],[0.144,-0.023],[0.269,0],[0,0],[0.194,0],[0.121,0],[0,0],[-0.121,0],[-0.173,0],[0,0],[-0.296,0.075],[-0.149,0.074],[0.122,0.148],[0.224,0.022],[0.117,-0.032],[0.143,0.027],[0.175,0.049],[0.123,0.026],[0.149,0],[0.248,0],[0.368,-0.027],[0.05,-0.269],[0.074,-0.145],[0.059,-0.011],[0.059,0.043],[0.095,0.148],[0,0.148],[-0.095,0.245],[-0.099,0.124],[-0.072,0.099],[-0.075,0.174],[0,0.15],[0,0.294],[-0.05,0.395],[0,0],[-0.246,0.269],[-0.147,0.1],[-0.191,-0.004],[-0.085,0.009],[0,0],[-0.172,0.075],[0.022,0.145],[0,0.221],[-0.121,0.195],[-0.098,0.15],[-0.073,0.125],[-0.148,0.099],[-0.318,0.05],[-0.178,-0.045],[-0.228,0.05],[-0.101,0.075],[-0.072,0.144],[-0.049,0.121],[-0.097,0.124],[-0.148,0.076],[-0.149,0.025],[-0.123,0],[-0.122,0.021],[-0.069,-0.006],[-0.061,0.011],[-0.147,0.099],[0,0],[0,0],[0,0],[-0.317,0.124],[-0.494,0],[-0.222,-0.098],[-0.217,-0.024],[-0.174,0],[0,0],[-0.151,0],[-0.12,0.022],[-0.17,0.048],[-0.125,0.096],[-0.125,0.148],[-0.195,0.169],[-0.173,0.048],[-0.298,0],[0,0],[-0.592,0.073],[-0.123,0.022],[-0.123,0.051],[-0.099,0.175],[-0.05,0.17],[0,0.294],[0.201,0.199],[0.148,0.049],[0.345,0],[0.318,-0.076],[0.198,-0.049],[0.293,0],[0.321,0.124],[0.174,0.049],[0,0],[0.195,0],[0.316,-0.024],[0.082,0.006],[0.084,-0.011],[0.321,-0.099],[0.149,-0.099],[0.078,-0.149],[0.147,-0.27],[0.122,-0.079],[0.125,-0.026],[0.162,0.016],[0.145,-0.011],[0.32,0],[0.271,0.124],[0.148,0.101],[0.391,0],[0.222,-0.1],[0.221,-0.27],[0.121,-0.099],[0.15,-0.047],[0.148,0],[0.131,0.007],[0.176,-0.012],[0.273,-0.097],[0.17,-0.05],[0.318,-0.102],[0.149,-0.097],[0.151,-0.171],[0.392,-0.193],[0.172,0],[0.172,0.024],[-0.126,0.119],[-0.099,0.121],[-0.075,0.121],[-0.075,0.15],[-0.273,0.172],[-0.07,-0.013],[-0.061,0.026],[-0.248,0.098],[0,0.145],[0,0],[-0.173,0.072],[-0.099,0.08],[-0.075,0.147],[0,0.146],[0.025,0.119],[0.074,0.124],[0.148,0.073],[0.145,0],[0,0],[0.148,0],[0.147,0.006],[0.196,-0.013],[0.146,0],[0.491,0.023],[0.174,0.026],[0.027,-0.488],[0,-0.149],[0,-0.127],[0.203,0],[0.196,0.025],[0.273,0],[0.246,-0.052],[0.291,-0.122],[0.121,-0.048],[0.168,-0.07],[0.079,0.011],[0.053,-0.008],[-0.02,0.123],[-0.049,0.147],[-0.147,0.097],[-0.172,0.025],[0,0],[-0.339,0],[-0.269,0.072],[-0.147,0.07],[0,0],[0.174,0.023],[0.074,-0.006],[0.098,0.011],[0.246,0],[0.614,-0.072],[0.294,0],[0.173,0],[0,0],[0.414,0],[0.369,-0.096],[0.172,-0.048],[0.148,-0.05],[0.126,-0.024],[0.226,-0.05],[0.075,0.007],[0.1,-0.013],[0.248,-0.027],[0.072,0.006],[0.099,-0.014],[0.172,-0.05],[0.127,-0.025],[0.196,0],[0.169,0.024],[-0.054,0.124],[-0.222,0.299],[-0.147,0.125],[-0.372,0.072],[-0.195,0],[0,0],[-0.124,0.073],[-0.148,0.098],[-0.169,0],[0,0],[-0.178,0],[-0.267,0.097],[-0.147,0.072],[-0.149,0.071],[-0.081,-0.016],[-0.052,0.009],[-0.145,0.028],[-0.12,0.028],[-0.065,-0.005],[-0.065,0.016],[-0.174,0.023],[-0.245,-0.021],[-0.197,0.01],[-0.196,0.024],[0,0],[0,0],[0.244,0],[0,0],[0.15,0.022],[0.489,0],[0.298,0],[0.367,0.1],[0.145,0.075],[0,0.196],[0,0.17],[0.147,0.026],[0.295,0],[0.072,-0.028],[0.195,0],[0,0],[0.319,0.121],[0.124,0.027],[0.345,0],[0,0],[0,0],[0,0],[0,0],[0.27,-0.072],[0.147,-0.097],[0,0],[0,0],[0,0],[-0.295,0.051],[-0.096,0.12],[-0.05,0.148],[0,0],[0.05,0.148],[0.174,0.123],[0.15,0.051],[0.345,0.027],[0,0],[0.345,0.029],[0.268,0.076],[0.145,0.029],[0.124,0],[0.343,0],[0.341,-0.024],[0.147,0],[0.343,0],[0,0],[0.32,0],[3.27,0]],\"o\":[[-0.063,0.012],[-0.068,-0.005],[-0.194,0.023],[-0.173,0.126],[-0.145,0.026],[0,0],[-0.198,0],[0,0],[-0.15,0],[-0.248,-0.021],[-0.247,0],[-0.541,0.076],[0.15,0.193],[0.073,0.148],[0,0.318],[-0.273,0.074],[-0.343,0],[-0.15,-0.05],[0,0],[-0.586,0],[-0.124,-0.048],[-0.417,-0.074],[-0.198,0],[-0.124,0.024],[-0.173,0.049],[-0.147,0.098],[-0.318,0.022],[0,0],[-0.193,0],[-0.246,-0.025],[-0.441,0],[-0.491,-0.037],[-0.11,0],[-0.071,0.013],[-0.031,0.005],[-0.035,-0.004],[-0.11,0.022],[-0.139,0.039],[-0.222,0.075],[0.088,0.185],[0.075,0.087],[0.073,0.027],[0.045,0.005],[0.043,-0.004],[0.195,0.034],[0.097,0.056],[0.075,0.06],[0.05,0.073],[0.048,0.136],[0.027,0.209],[0,0],[-0.05,-0.071],[-0.063,-0.05],[-0.03,-0.005],[-0.035,0.004],[-0.085,-0.024],[-0.099,-0.011],[-0.099,-0.034],[-0.029,-0.005],[-0.034,0.003],[-0.088,-0.025],[-0.086,-0.025],[-0.074,0],[-0.109,-0.013],[-0.162,0],[-0.146,0],[-0.083,0.038],[-0.022,0.072],[0,0.072],[0.025,0.156],[0.047,0.085],[0.088,0.075],[0.172,0.098],[0.147,0.06],[0.061,0.026],[0.075,0.024],[0.088,0.01],[0.161,0.011],[0,0],[0.097,0],[0.09,0.013],[0.071,0.05],[0.167,0.094],[0.061,0.059],[0.122,0.147],[0.051,0.083],[0.024,0.073],[0.013,0.077],[0.013,0.111],[0,0.148],[-0.075,0],[-0.174,0],[-0.087,-0.015],[-0.047,-0.004],[-0.039,0.004],[-0.125,-0.01],[-0.16,-0.062],[-0.072,-0.027],[-0.084,-0.02],[-0.088,-0.027],[-0.11,-0.049],[-0.06,-0.024],[-0.256,-0.1],[-0.136,-0.01],[-0.222,-0.052],[-0.062,-0.027],[-0.1,-0.052],[-0.059,-0.037],[-0.099,-0.064],[-0.097,-0.059],[-0.088,-0.048],[-0.085,-0.089],[-0.042,-0.011],[-0.041,0.006],[-0.071,-0.012],[-0.064,-0.014],[-0.099,-0.024],[0,0],[-0.099,0],[-0.174,-0.021],[-0.123,-0.037],[-0.219,-0.083],[-0.787,0],[0,0.111],[0.028,0.087],[0.135,0.186],[0.149,0.147],[0.036,0.005],[0.046,-0.007],[0,0],[0.086,0.039],[0.134,0.137],[0.072,0.052],[0.063,0.073],[0.073,0.087],[0.086,0.135],[0.026,0.062],[0.039,0.096],[0.062,0.147],[0,0],[0,0],[-0.097,0],[-0.099,-0.011],[-0.088,-0.036],[-0.097,-0.065],[-0.058,-0.047],[-0.063,-0.061],[-0.099,-0.077],[-0.098,-0.063],[-0.094,-0.061],[-0.183,-0.123],[-0.059,-0.037],[-0.072,-0.037],[-0.073,-0.052],[-0.148,-0.127],[-0.066,-0.016],[-0.063,-0.014],[-0.197,-0.014],[-0.089,-0.034],[-0.048,-0.071],[-0.048,-0.086],[-0.061,-0.038],[-0.109,-0.049],[-0.063,-0.011],[-0.159,-0.011],[0,0],[0,0],[0,0.173],[0.099,0.221],[0.046,0.11],[0,0.111],[-0.012,0.097],[0,0.071],[0,0],[-0.015,0.075],[-0.099,0.32],[-0.025,0.091],[-0.053,0.058],[-0.087,0.051],[-0.133,0],[-0.112,-0.05],[-0.147,-0.111],[-0.025,-0.061],[0,-0.169],[0.014,-0.084],[0.121,-0.173],[0.061,-0.075],[0.025,-0.069],[0,-0.072],[-0.024,-0.102],[-0.062,-0.094],[-0.053,-0.086],[0,0],[0,-0.075],[-0.027,-0.162],[-0.083,-0.062],[-0.097,-0.062],[-0.087,-0.047],[-0.071,-0.063],[-0.125,-0.051],[-0.137,0],[-0.077,0.01],[-0.138,0.038],[-0.072,0.011],[-0.187,0.071],[-0.099,0.06],[-0.074,0.036],[-0.073,0.028],[-0.028,0.005],[-0.035,-0.003],[-0.085,0.01],[-0.085,0.024],[-0.101,0.047],[-0.159,0.039],[-0.084,0],[0,0],[-0.101,0],[-0.085,0.026],[-0.075,0.021],[-0.148,0.037],[0,0],[-0.137,-0.012],[-0.429,0],[-0.099,0],[-0.059,0.024],[-0.099,0.037],[-0.027,0.062],[0.048,0.066],[0.061,0.025],[0.063,0.011],[0.084,0.006],[0.067,-0.002],[0.122,0.011],[0.096,0.038],[0.089,0.063],[0.038,0.062],[0.038,0.072],[0.049,0.088],[0.086,0.037],[0.159,0.064],[0.063,0.011],[0.07,0.005],[0.064,-0.003],[0.085,0],[0.1,0.05],[0.135,0.073],[0.073,0.024],[0.06,0.027],[0.146,0.085],[0,0],[0,0],[-0.09,0],[-0.059,-0.015],[-0.074,-0.028],[-0.185,-0.061],[-0.098,-0.05],[-0.087,-0.052],[-0.075,-0.051],[-0.076,-0.061],[-0.137,-0.027],[-0.084,0.007],[-0.1,0],[0,0],[-0.097,0],[-0.122,-0.039],[-0.149,-0.063],[-0.073,-0.013],[-0.208,-0.074],[-0.084,-0.062],[-0.072,-0.073],[-0.05,-0.059],[-0.072,-0.048],[-0.063,-0.023],[-0.332,0],[-0.073,0.013],[-0.087,0.027],[-0.086,0.038],[-0.088,0.038],[-0.087,0.038],[-0.174,0.083],[-0.062,0.009],[-0.111,0.063],[0,0.209],[0.049,0.086],[0.035,0.075],[0.024,0.074],[0,0],[0,0],[-0.172,0],[-0.099,-0.039],[-0.084,-0.061],[-0.074,-0.037],[-0.864,0],[-0.063,0.057],[-0.083,0.135],[-0.048,0.085],[-0.135,0.048],[-0.222,0.073],[-0.133,0.026],[-0.184,0.04],[0,0],[-0.157,0.157],[-0.073,0.036],[-0.06,0.013],[-0.132,0.026],[-0.137,0],[-0.098,0],[-0.098,0],[-0.101,0.013],[-0.085,0.048],[-0.074,0.038],[-0.063,0.028],[-0.027,0.059],[-0.073,0.051],[-0.032,0.015],[-0.033,-0.005],[-0.059,0.027],[-0.072,0.023],[-0.145,0.184],[-0.028,0.05],[-0.049,0.037],[-0.087,0.061],[0,0.151],[0,0],[0.16,0.037],[0.2,0.027],[0.072,0.048],[0.073,0.05],[0.062,0.022],[0.185,0.022],[0.281,0],[0.144,-0.016],[0.063,-0.022],[0.099,-0.05],[0.098,-0.062],[0.196,0],[0.022,0.134],[0,0.148],[0.01,0.074],[0.012,0.059],[0.023,0.072],[0,0],[0,0.416],[-0.072,0.075],[-0.086,0.064],[-0.231,0.038],[0,0],[-0.098,0],[-0.169,-0.013],[-0.145,0.013],[-0.107,0.042],[-0.09,0.033],[-0.123,0.04],[0,0],[-0.271,0],[-0.111,-0.011],[-0.073,-0.012],[-0.172,-0.011],[-0.244,0],[-0.173,0.033],[0,0.073],[0,0.1],[-0.038,0.182],[-0.075,0.037],[0,0],[-0.196,0],[-0.085,0.036],[-0.181,0.073],[-0.112,0],[-0.143,-0.013],[-0.172,-0.011],[-0.174,0],[-0.126,0.013],[-0.088,0.024],[-0.097,0.023],[-0.073,0.04],[-0.037,0.072],[-0.027,0.061],[-0.013,0.06],[-0.025,0.079],[-0.041,0.064],[0,0],[-0.062,0.065],[-0.076,0.137],[0.022,0.119],[0.099,0.145],[0.099,0.148],[0.125,0.096],[0.069,0.028],[0.06,-0.009],[0.126,0.026],[0.147,0],[0.293,0.072],[0.12,0.072],[0,0],[0,0],[0.063,0.027],[0.087,0.038],[0.134,0.075],[0.162,0.037],[0.113,0],[0,0],[0.131,0],[0.061,0],[0.171,-0.036],[0.097,-0.039],[0,0],[0.184,0],[0.16,-0.023],[0,0],[0.149,0.011],[0.056,0],[0,0],[0,0.173],[-0.037,0.059],[-0.073,0.039],[-0.149,0.061],[-0.097,0.059],[-0.062,0.014],[0,0],[-0.099,0],[-0.04,-0.006],[-0.042,0.004],[-0.087,-0.024],[-0.085,-0.027],[0,0],[-0.243,0],[-0.097,0.021],[-0.198,0.085],[0,0],[-0.098,0],[-0.111,0],[-0.212,-0.038],[-0.136,-0.013],[0,0],[-0.074,0],[-0.009,0.196],[0,0],[-0.087,0],[-0.085,0.063],[0,0.294],[0.097,0.072],[0.084,0.045],[0.118,0.019],[0.084,-0.007],[0.258,0.024],[0.185,0.085],[0.162,0.051],[0.235,0.085],[0,0],[-0.209,0],[-0.072,0.052],[-0.022,0.049],[0.074,0.061],[0.063,0.024],[0.137,0.048],[0.07,0.035],[0.075,0.077],[0.027,0.049],[0.036,0.06],[0.074,0.05],[0.076,0.025],[0.073,0.036],[0.186,0.084],[0.085,0.02],[0.098,0.051],[0.099,0.063],[0.221,0.074],[0,0],[0.097,0],[0.086,-0.012],[-0.038,-0.077],[-0.06,-0.098],[-0.061,-0.085],[0,-0.12],[0.063,-0.037],[0.185,-0.023],[0.285,0],[0.181,0.012],[0.077,0.019],[0.06,0.027],[0.074,0.012],[0.075,0],[0,0],[0,0],[0.102,0],[0.086,0.05],[0.17,0.073],[0.199,0],[0.088,-0.037],[0.063,-0.039],[0.071,-0.037],[0.061,-0.01],[0.049,-0.006],[0.085,0.001],[0.086,-0.036],[0.061,-0.034],[0.11,-0.073],[0.198,0],[0.169,0.087],[0.075,0.038],[0,0],[0.234,0],[0.074,0],[0.076,0.014],[0.257,0.071],[0.073,0.063],[0.073,0.046],[0.074,0.014],[0,0],[0.086,0],[0.063,0.008],[0.237,0.085],[0.076,0.037],[0.208,0.086],[0,0],[0.063,0],[0.086,0.013],[0.111,0.145],[0.069,0.049],[0.136,0.035],[0,0],[0.145,0.011],[0.084,0.024],[0.137,0.097],[0,0],[0,0.188],[0.05,0.073],[0.059,0.075],[0.063,0.009],[0.048,0.012],[0.05,-0.007],[0.098,0.023],[0.09,0.037],[0.099,0.05],[0.039,0.062],[0.09,0.137],[0.025,0.062],[0.038,0.062],[0.147,0.145],[0.074,0.085],[0.063,0.082],[0.051,0.073],[0.05,0.066],[0.087,0.12],[0.058,0.147],[0.038,0.072],[0.111,0.248],[0.049,0.071],[0.076,0.049],[0.097,0.087],[0,0],[0.011,0.111],[-0.039,0.112],[0,0.127],[0.148,0.22],[0,0],[0,0.124],[-0.072,0.134],[0,0.132],[0,0],[0,0],[-0.196,0],[-0.161,0.037],[-0.049,0.033],[0.049,0.27],[0,0.22],[0,0],[0,0],[0.097,0.119],[0.246,0.122],[0,0],[0.148,0],[0.149,0.029],[0,0],[0.025,-0.196],[0.025,-0.149],[0.294,0],[0.146,0],[0.149,0],[0.025,0.219],[0.025,0.12],[0.025,0.17],[0.097,0.172],[0.146,0.072],[0.123,0],[0.063,0.014],[0.066,-0.005],[0.149,0.027],[0.147,0.074],[0.148,0.098],[0.1,0.125],[0.073,0.099],[0,0],[0,0],[-0.198,0],[0,0],[-0.469,0],[-0.148,-0.052],[-0.097,-0.048],[-0.074,-0.044],[-0.055,0.011],[-0.27,-0.075],[-0.342,-0.021],[-0.469,0],[0.099,0.294],[0.074,0.148],[0.15,0.148],[0,0.174],[-0.295,0.024],[-0.172,0.049],[-0.198,0.149],[0,0.241],[0.228,0.166],[0.15,-0.019],[0.319,0.052],[0.445,0.296],[0.222,0],[0.269,-0.271],[0.491,-0.047],[0,0],[-0.441,0],[-0.056,-0.01],[-0.076,0.011],[-0.146,-0.048],[-0.069,-0.026],[-0.06,0.01],[-0.124,-0.024],[0,0],[0,0],[0.172,0],[0.169,0.074],[0.148,0.051],[0.124,0.029],[0.173,0.029],[0,0],[0.294,0],[0.219,0.1],[0,0],[-0.024,0.169],[-0.076,0.123],[-0.076,0.173],[0,0],[0,0.195],[0.12,0.173],[0.074,0.125],[0,0],[0,0],[-0.172,0],[-0.146,0.079],[-0.173,0.095],[-0.149,0.049],[0,0],[-0.174,0],[-0.175,-0.03],[0,0],[-0.221,-0.028],[-0.173,-0.05],[-0.197,0],[-0.152,0.051],[-0.123,0.047],[-0.124,0.05],[-0.198,0.124],[0,0],[0,0.196],[0.099,0.196],[0.122,0.047],[0.124,0.051],[0.169,0.073],[0.124,0.074],[0.175,0.225],[-0.271,0.051],[-0.192,0.098],[0,0.421],[0.17,0.289],[0.076,0.123],[0.124,0.149],[0.219,0],[0.17,-0.074],[0.123,-0.049],[0,0],[0.167,0],[0,0.145],[-0.048,0.122],[-0.054,0.054],[-0.066,-0.017],[-0.122,0.071],[-0.073,0.1],[-0.051,0.147],[-0.099,0.215],[0,0.223],[0.075,0.291],[0.096,0.147],[0.124,0.076],[0.146,0],[0.174,-0.07],[0.122,-0.097],[0.097,-0.124],[0.101,-0.05],[0.222,0],[0,0],[-0.147,0.121],[-0.126,0.074],[-0.146,0.073],[-0.147,0.075],[-0.073,0.176],[0,0.243],[0.075,0.146],[0.15,0.145],[0.345,0.42],[0.1,0.125],[0.072,0.122],[0.052,0.12],[0.101,0.323],[0.097,0.247],[0.146,0.344],[0.125,0.077],[0.102,0.121],[0.124,0.273],[0.075,0.169],[0.345,0.319],[0.37,0.121],[0.145,0.098],[0.123,0.048],[0,0],[0.172,0],[0.195,-0.05],[0,0],[0.147,0],[0.05,0.01],[0.084,-0.017],[0.097,0.074],[0.05,0.124],[0.099,0.219],[0.148,0.077],[0.132,0.013],[0.138,-0.01],[0.197,0.045],[0.075,0.121],[0.102,0.175],[0.273,0.049],[0.295,0],[0.172,-0.047],[0.147,-0.074],[0.145,-0.123],[0.072,-0.124],[0,0],[0,-0.615],[0.173,-0.294],[0.097,-0.128],[0.098,-0.195],[0,-0.217],[0,-0.148],[0,-0.149],[0,-0.296],[-0.072,-0.168],[-0.072,-0.121],[-0.024,-0.125],[0,-0.422],[0,0],[0.144,0],[0.295,-0.025],[0,-0.269],[0,-0.149],[0.1,-0.148],[0.123,-0.127],[0.069,-0.028],[0.06,0.008],[0.172,-0.051],[0,0],[0.146,-0.199],[0,-0.219],[-0.025,-0.148],[-0.051,-0.124],[-0.079,-0.123],[0,-0.242],[0.053,-0.025],[0.064,0.008],[0.266,-0.071],[0.142,-0.05],[0.147,-0.093],[0.074,-0.125],[0.027,-0.125],[0,-0.145],[0,0],[-0.025,-0.418],[0,-0.145],[0,0],[-0.024,0.467],[0,0.173],[0.319,-0.025],[0.146,0],[0.515,0],[0.126,-0.148],[0.149,-0.146],[0.149,-0.079],[0,0],[0.132,-0.011],[0.14,0.011],[0.149,-0.026],[0.125,-0.054],[0.074,-0.102],[0,0],[0.073,-0.175],[0.149,-0.099],[0.124,-0.072],[0.099,-0.101],[0.101,-0.12],[0.101,-0.077],[0.247,-0.225],[0.076,-0.122],[0.094,-0.075],[0.12,-0.073],[0.076,-0.097],[0.099,-0.143],[0.099,-0.096],[0.174,-0.098],[0.098,-0.442],[0.025,-0.036],[0.046,-0.017],[0.134,0],[0.038,0.013],[0.038,0.01],[0.031,0.009],[0.084,0.037],[0.035,0.018],[0.092,0.06],[0.038,0.035],[0.148,0.024],[0.297,0],[0.317,0.072],[0.343,0.172],[0.249,0],[0.17,0],[0.365,-0.126],[0.198,-0.146],[0.122,-0.148],[0.271,-0.199],[0.152,-0.026],[0.113,0.009],[0.121,0],[0.172,-0.03],[0.079,-0.011],[0.086,0.01],[0.15,-0.05],[0.148,-0.021],[0.056,-0.01],[0.075,0.01],[0.174,-0.049],[0.148,-0.074],[0.148,-0.097],[0.145,-0.172],[0.122,-0.196],[0.197,-0.271],[0,0],[0.343,0],[0.173,-0.099],[0.169,-0.149],[0.07,-0.126],[0,0],[-0.292,0.223],[-0.098,0.07],[-0.175,0.146],[0,0],[-0.341,-0.028],[-0.246,-0.195],[-0.12,-0.07],[0,0],[-0.663,0],[-0.123,-0.022],[-0.171,-0.048],[-0.143,-0.121],[-0.074,-0.147],[0,0],[0.27,-0.023],[0.211,-0.012],[0.197,0.011],[0.147,0],[0.32,-0.049],[0.346,-0.126],[0.124,0.049],[0.147,0.097],[0.196,0.321],[0.022,0.147],[0.074,0.148],[0.193,0.295],[0.221,0],[0.05,-0.098],[0.198,-0.268],[0.269,-0.05],[0.343,0],[0.173,0],[-0.052,-0.293],[-0.046,-0.342],[-0.073,-0.175],[-0.269,-0.2],[-0.294,-0.196],[-0.101,-0.272],[-0.048,-0.146],[-0.049,-0.121],[-0.048,-0.126],[-0.07,-0.121],[-0.245,-0.149],[-0.17,-0.071],[0.145,-0.122],[0.1,-0.05],[0.293,0.173],[0.125,0.075],[0.149,0.076],[0,0],[0.146,0],[0.145,0],[0.074,-0.592],[0,0],[0,-0.122],[0.025,-0.147],[0,-0.145],[-0.072,-0.12],[-0.269,-0.148],[-0.32,0],[-0.147,0.075],[-0.123,0.1],[0,0],[0.148,-0.224],[0.124,-0.073],[0.122,-0.072],[0.097,-0.074],[-0.295,-0.121],[-0.144,-0.047],[0,0],[0,0],[0,0],[0,0],[0.171,0],[0.123,-0.095],[0.273,-0.122],[0,0],[0.442,0.027],[0.246,0],[0.146,-0.072],[0.149,-0.146],[0,-0.244],[-0.124,-0.196],[-0.197,-0.171],[-0.218,0],[-0.151,0.025],[-0.121,0.024],[-0.147,0],[-0.174,-0.072],[-0.073,-0.145],[0,-0.249],[0.144,0],[0.147,0],[0.317,0.02],[0.319,0],[0.146,-0.025],[0,0],[0.174,-0.074],[0.175,0],[0,0],[0.244,0],[0.121,-0.024],[0.118,-0.05],[-0.273,-0.269],[-0.061,-0.011],[-0.068,0.007],[-0.198,-0.052],[-0.197,-0.149],[-0.021,-0.12],[0,-0.22],[0,-0.246],[0,-0.148],[0,-0.102],[0.643,0.022],[0,0],[0,-0.517],[-0.05,-0.122],[-0.024,-0.201],[-0.467,0],[-0.196,-0.021],[-0.125,-0.023],[-0.146,-0.048],[-0.147,-0.073],[-0.145,-0.096],[-0.098,-0.176],[0,-0.072],[0.074,-0.148],[0.145,-0.097],[0.071,-0.028],[0.058,0.008],[0.325,-0.077],[0.147,0],[0,0],[0.291,0],[0.172,0.022],[0.199,0.122],[0,0],[0.021,0.176],[-0.077,0.223],[0,0.615],[0,0],[0,0],[0.096,-0.149],[0.119,-0.145],[0,0],[0,-0.224],[-0.153,-0.197],[-0.221,0],[-0.147,0.027],[-0.246,0.048],[0,0],[-0.198,0],[-0.124,0],[0,0],[0.146,0],[0.146,0.025],[0,0],[0.322,0],[0.173,-0.047],[-0.097,-0.147],[-0.124,-0.148],[-0.137,-0.01],[-0.135,0.036],[-0.173,-0.029],[-0.119,-0.026],[-0.123,-0.022],[-0.246,-0.022],[-0.37,0],[0,0.267],[-0.029,0.176],[-0.051,-0.009],[-0.084,0.015],[-0.145,-0.12],[-0.073,-0.121],[0,-0.296],[0.053,-0.151],[0.075,-0.099],[0.123,-0.147],[0.05,-0.124],[0.021,-0.294],[0.021,-0.392],[0,0],[0,-0.393],[0.1,-0.126],[0.15,-0.099],[0.087,0.002],[0,0],[0.171,-0.026],[-0.024,-0.145],[-0.027,-0.222],[0,-0.247],[0.075,-0.148],[0.074,-0.126],[0.098,-0.144],[0.267,-0.196],[0.212,-0.035],[0.191,0.047],[0.123,-0.024],[0.122,-0.1],[0.05,-0.128],[0.072,-0.15],[0.097,-0.122],[0.145,-0.074],[0.122,-0.025],[0.124,0],[0.064,-0.011],[0.066,0.006],[0.173,-0.047],[0,0],[0,0],[0,0],[0.346,-0.073],[0.443,-0.171],[0.244,0],[0.198,0.07],[0.173,0.022],[0,0],[0.144,0],[0.145,0],[0.175,-0.028],[0.173,-0.051],[0.119,-0.098],[0.169,-0.198],[0.123,-0.102],[0.271,-0.1],[0,0],[0.615,0],[0.124,0],[0.12,-0.026],[0.196,-0.072],[0.098,-0.151],[0.074,-0.273],[0,-0.293],[-0.095,-0.096],[-0.292,-0.124],[-0.346,0],[-0.198,0.049],[-0.269,0.073],[-0.343,0],[-0.171,-0.046],[0,0],[-0.176,-0.048],[-0.344,0],[-0.089,0.013],[-0.079,-0.007],[-0.321,0.025],[-0.172,0.049],[-0.147,0.1],[-0.147,0.273],[-0.074,0.148],[-0.1,0.07],[-0.184,0.043],[-0.117,-0.011],[-0.319,0.025],[-0.318,0],[-0.172,-0.076],[-0.322,-0.22],[-0.245,0],[-0.318,0.148],[-0.097,0.127],[-0.124,0.101],[-0.121,0.022],[-0.166,0.011],[-0.14,-0.005],[-0.297,0.022],[-0.172,0.05],[-0.323,0.124],[-0.174,0.048],[-0.195,0.15],[-0.269,0.32],[-0.15,0.076],[-0.173,0],[0.097,-0.12],[0.124,-0.127],[0.099,-0.125],[0.096,-0.147],[0.147,-0.269],[0.049,-0.024],[0.07,0.012],[0.248,-0.097],[0,-0.149],[0,0],[0.15,-0.073],[0.126,-0.052],[0.148,-0.094],[0.075,-0.124],[0,-0.146],[-0.024,-0.148],[-0.099,-0.149],[-0.121,-0.072],[0,0],[-0.145,0],[-0.197,0.013],[-0.147,-0.007],[-0.149,0],[-0.495,0.023],[-0.199,0],[0,0.494],[0,0.147],[0,0.124],[-0.195,0],[-0.194,0],[-0.27,-0.022],[-0.273,0],[-0.318,0.072],[-0.124,0.052],[-0.172,0.048],[-0.071,0.031],[-0.057,-0.008],[0.023,-0.123],[0.049,-0.146],[0.049,-0.171],[0.15,-0.1],[0,0],[0.345,-0.027],[0.297,0],[0.175,-0.047],[0,0],[-0.151,-0.024],[-0.1,-0.012],[-0.074,0.006],[-0.24,-0.025],[-0.613,0],[-0.293,0.023],[-0.173,0],[0,0],[-0.415,0],[-0.396,0],[-0.173,0.028],[-0.15,0.027],[-0.123,0.021],[-0.219,0.075],[-0.084,0.013],[-0.078,-0.006],[-0.244,0.025],[-0.098,0.012],[-0.074,-0.007],[-0.195,0.025],[-0.12,0.024],[-0.168,0.048],[-0.176,0],[0.046,-0.123],[0.169,-0.343],[0.097,-0.145],[0.271,-0.22],[0.193,-0.024],[0,0],[0.174,0],[0.146,-0.1],[0.125,-0.074],[0,0],[0.174,0],[0.291,0],[0.15,-0.052],[0.146,-0.073],[0.071,-0.044],[0.055,0.01],[0.146,-0.05],[0.124,0],[0.06,-0.009],[0.071,0.007],[0.17,-0.021],[0.28,-0.059],[0.162,0.013],[0.193,0],[0,0],[0,0],[-0.221,0.075],[0,0],[-0.175,0],[-0.467,-0.122],[-0.297,0],[-0.391,0],[-0.152,-0.02],[0.073,-0.147],[0,-0.173],[-0.147,0],[-0.298,-0.051],[-0.1,0],[-0.172,0.076],[0,0],[-0.365,0],[-0.121,-0.051],[-0.32,-0.048],[0,0],[0,0],[0,0],[0,0],[-0.296,0],[-0.17,0.051],[0,0],[0,0],[0,0],[0.317,0],[0.171,-0.024],[0.097,-0.123],[0,0],[-0.021,-0.147],[-0.073,-0.199],[-0.124,-0.073],[-0.293,-0.122],[0,0],[-0.346,-0.021],[-0.294,0],[-0.149,-0.021],[-0.121,-0.021],[-0.321,-0.054],[-0.346,0],[-0.147,0],[-0.343,0.029],[0,0],[-0.322,-0.021],[-3.265,0],[-0.322,0]],\"v\":[[-88.283,-164.791],[-88.482,-164.791],[-88.677,-164.791],[-89.167,-164.498],[-89.561,-164.104],[-90.003,-164.104],[-90.447,-164.104],[-90.938,-164.202],[-91.426,-164.202],[-91.82,-164.302],[-92.461,-164.302],[-93.099,-164.302],[-94.378,-163.61],[-94.082,-162.924],[-93.884,-162.432],[-94.573,-161.943],[-95.361,-161.843],[-96.245,-162.038],[-96.664,-162.235],[-98.681,-162.235],[-99.98,-163.024],[-100.374,-163.122],[-101.454,-163.219],[-101.948,-163.219],[-102.339,-163.122],[-102.638,-162.726],[-103.126,-162.531],[-103.964,-162.531],[-104.307,-162.531],[-104.796,-162.531],[-105.388,-162.828],[-106.47,-162.531],[-107.969,-162.628],[-108.238,-162.628],[-108.435,-162.531],[-108.53,-162.531],[-108.633,-162.531],[-108.926,-162.432],[-109.319,-162.334],[-109.861,-162.088],[-109.616,-161.646],[-109.37,-161.45],[-109.174,-161.349],[-109.056,-161.349],[-108.926,-161.349],[-108.435,-161.104],[-108.191,-160.907],[-107.993,-160.711],[-107.844,-160.515],[-107.749,-160.123],[-107.749,-159.583],[-107.943,-159.731],[-108.09,-159.924],[-108.238,-160.123],[-108.332,-160.122],[-108.435,-160.123],[-108.68,-160.171],[-108.926,-160.221],[-109.174,-160.369],[-109.27,-160.369],[-109.37,-160.369],[-109.568,-160.515],[-109.811,-160.564],[-110.01,-160.614],[-110.301,-160.614],[-110.721,-160.666],[-111.091,-160.614],[-111.289,-160.465],[-111.384,-160.268],[-111.336,-160.07],[-111.138,-159.679],[-110.943,-159.484],[-110.697,-159.286],[-110.204,-159.091],[-109.811,-158.893],[-109.616,-158.844],[-109.418,-158.745],[-109.174,-158.697],[-108.73,-158.697],[-108.288,-158.697],[-108.044,-158.649],[-107.844,-158.5],[-107.647,-158.351],[-107.206,-158.055],[-107.059,-157.86],[-106.716,-157.468],[-106.566,-157.221],[-106.47,-157.028],[-106.47,-156.831],[-106.421,-156.534],[-106.566,-156.19],[-106.763,-156.24],[-107.206,-156.336],[-107.451,-156.435],[-107.57,-156.434],[-107.699,-156.435],[-107.993,-156.534],[-108.387,-156.729],[-108.583,-156.831],[-108.827,-156.877],[-109.073,-156.979],[-109.37,-157.123],[-109.568,-157.172],[-110.253,-157.42],[-110.598,-157.468],[-111.138,-157.713],[-111.336,-157.76],[-111.582,-157.959],[-111.776,-158.055],[-112.025,-158.257],[-112.318,-158.403],[-112.517,-158.597],[-112.762,-158.844],[-112.883,-158.844],[-113.008,-158.844],[-113.202,-158.942],[-113.4,-158.992],[-113.658,-159.091],[-114.568,-159.091],[-114.824,-159.042],[-115.268,-159.188],[-115.615,-159.286],[-116.214,-159.534],[-118.219,-159.508],[-118.219,-159.239],[-118.072,-159.042],[-117.676,-158.597],[-117.234,-158.304],[-117.132,-158.309],[-116.99,-158.304],[-116.792,-158.205],[-116.645,-158.01],[-116.25,-157.666],[-116.055,-157.519],[-115.906,-157.273],[-115.663,-157.075],[-115.466,-156.682],[-115.418,-156.482],[-115.268,-156.24],[-115.122,-155.834],[-115.122,-155.55],[-115.602,-155.55],[-115.858,-155.602],[-116.102,-155.653],[-116.301,-155.846],[-116.596,-155.994],[-116.693,-156.19],[-116.891,-156.286],[-117.186,-156.482],[-117.434,-156.682],[-117.727,-156.877],[-118.171,-157.221],[-118.367,-157.318],[-118.561,-157.468],[-118.758,-157.614],[-119.15,-157.906],[-119.346,-157.959],[-119.544,-157.959],[-120.035,-158.109],[-120.233,-158.257],[-120.332,-158.5],[-120.529,-158.697],[-120.724,-158.745],[-121.018,-158.893],[-121.215,-158.893],[-121.622,-158.942],[-122.345,-158.942],[-122.345,-158.612],[-122.198,-158.205],[-121.853,-157.614],[-121.757,-157.318],[-121.807,-157.028],[-121.807,-156.778],[-121.853,-156.583],[-121.853,-156.386],[-121.953,-156.19],[-122.247,-155.356],[-122.345,-155.107],[-122.444,-154.911],[-122.742,-154.86],[-123.082,-154.961],[-123.378,-155.107],[-123.721,-155.453],[-123.721,-155.653],[-123.674,-156.093],[-123.525,-156.286],[-123.182,-156.729],[-122.986,-156.93],[-122.888,-157.123],[-122.938,-157.318],[-123.132,-157.519],[-123.279,-157.812],[-123.479,-158.01],[-123.479,-158.205],[-123.426,-158.403],[-123.674,-158.794],[-123.919,-158.942],[-124.163,-159.141],[-124.41,-159.286],[-124.557,-159.484],[-124.901,-159.484],[-125.245,-159.484],[-125.443,-159.387],[-125.835,-159.286],[-126.033,-159.188],[-126.525,-158.942],[-126.77,-158.745],[-126.967,-158.649],[-127.167,-158.549],[-127.257,-158.55],[-127.361,-158.549],[-127.605,-158.45],[-127.85,-158.351],[-128.096,-158.205],[-128.54,-158.156],[-128.749,-158.205],[-129.904,-158.205],[-130.163,-158.156],[-130.406,-158.055],[-130.603,-157.959],[-131.009,-157.86],[-131.145,-157.86],[-131.49,-157.906],[-132.609,-157.872],[-132.866,-157.812],[-133.062,-157.76],[-133.259,-157.565],[-133.259,-157.372],[-133.161,-157.172],[-132.965,-157.123],[-132.764,-157.075],[-132.546,-157.075],[-132.324,-157.075],[-132.029,-156.979],[-131.784,-156.831],[-131.589,-156.635],[-131.49,-156.435],[-131.342,-156.24],[-131.193,-155.994],[-130.947,-155.945],[-130.555,-155.747],[-130.361,-155.747],[-130.173,-155.747],[-129.965,-155.747],[-129.77,-155.653],[-129.572,-155.453],[-129.177,-155.256],[-128.98,-155.159],[-128.786,-155.107],[-128.441,-154.768],[-128.589,-154.568],[-129.411,-154.568],[-129.621,-154.664],[-129.818,-154.715],[-130.014,-154.813],[-130.505,-154.961],[-130.751,-155.159],[-130.996,-155.305],[-131.193,-155.453],[-131.391,-155.653],[-131.757,-155.659],[-132.029,-155.653],[-132.275,-155.7],[-132.471,-155.7],[-132.719,-155.747],[-132.965,-155.994],[-133.408,-156.093],[-133.603,-156.19],[-134.145,-156.435],[-134.339,-156.635],[-134.538,-156.831],[-134.635,-157.028],[-134.833,-157.172],[-135.027,-157.172],[-135.865,-157.028],[-136.06,-156.93],[-136.306,-156.831],[-136.5,-156.682],[-136.749,-156.635],[-136.943,-156.482],[-137.436,-156.286],[-137.633,-156.24],[-137.831,-155.945],[-137.633,-155.453],[-137.436,-155.256],[-137.337,-155.059],[-137.266,-154.852],[-137.266,-153.24],[-138.507,-153.24],[-138.913,-153.386],[-139.158,-153.536],[-139.352,-153.734],[-139.562,-153.781],[-141.762,-153.827],[-141.961,-153.682],[-142.155,-153.289],[-142.352,-153.09],[-142.745,-152.994],[-143.337,-152.75],[-143.729,-152.702],[-144.122,-152.356],[-144.319,-152.157],[-144.76,-151.765],[-144.958,-151.617],[-145.156,-151.57],[-145.546,-151.57],[-145.893,-151.57],[-146.139,-151.523],[-146.383,-151.523],[-146.629,-151.373],[-146.875,-151.226],[-147.071,-151.08],[-147.265,-151.031],[-147.316,-150.784],[-147.513,-150.638],[-147.617,-150.636],[-147.712,-150.638],[-147.908,-150.584],[-148.007,-150.39],[-148.397,-149.9],[-148.448,-149.7],[-148.643,-149.653],[-148.842,-149.458],[-148.791,-149.063],[-148.397,-149.063],[-148.007,-148.966],[-147.513,-148.864],[-147.316,-148.719],[-147.17,-148.519],[-146.974,-148.519],[-146.456,-148.519],[-145.742,-148.519],[-145.352,-148.669],[-145.156,-148.719],[-144.958,-148.912],[-144.661,-149.063],[-144.366,-148.669],[-144.366,-148.278],[-144.366,-147.882],[-144.27,-147.684],[-144.219,-147.489],[-144.122,-147.281],[-144.122,-146.369],[-144.615,-145.425],[-144.81,-145.231],[-145.057,-145.081],[-145.697,-145.081],[-145.893,-145.081],[-146.139,-145.131],[-146.581,-145.131],[-146.974,-145.036],[-147.218,-144.833],[-147.463,-144.787],[-147.771,-144.637],[-148.68,-144.637],[-149.382,-144.736],[-149.676,-144.787],[-149.872,-144.885],[-150.317,-144.885],[-150.953,-144.833],[-151.396,-144.637],[-151.493,-144.344],[-151.493,-144.098],[-151.838,-143.703],[-152.049,-143.61],[-153.156,-143.61],[-153.611,-143.359],[-153.856,-143.262],[-154.393,-143.166],[-154.692,-143.166],[-155.084,-143.262],[-155.525,-143.262],[-155.967,-143.262],[-156.261,-143.166],[-156.511,-143.065],[-156.804,-143.02],[-156.999,-142.917],[-157.098,-142.721],[-157.098,-142.524],[-157.147,-142.333],[-157.244,-142.135],[-157.455,-142.036],[-158.523,-142.036],[-158.72,-141.887],[-158.867,-141.492],[-158.867,-141.099],[-158.574,-140.708],[-158.181,-140.411],[-157.984,-140.018],[-157.763,-140.01],[-157.592,-140.018],[-157.197,-140.018],[-156.804,-139.92],[-156.015,-139.624],[-155.819,-139.234],[-153.856,-139.234],[-153.068,-138.84],[-152.772,-138.788],[-152.578,-138.643],[-152.184,-138.394],[-151.742,-138.394],[-151.444,-138.346],[-151.101,-138.346],[-150.758,-138.346],[-150.561,-138.394],[-150.117,-138.591],[-149.86,-138.69],[-148.755,-138.69],[-148.3,-138.84],[-147.845,-138.887],[-147.662,-138.887],[-147.265,-138.84],[-147.118,-138.864],[-147.118,-138.065],[-147.316,-137.658],[-147.513,-137.562],[-147.759,-137.463],[-148.152,-137.265],[-148.35,-137.021],[-148.544,-137.021],[-148.743,-137.021],[-148.989,-137.117],[-149.104,-137.114],[-149.234,-137.117],[-149.431,-137.265],[-149.676,-137.317],[-150.095,-137.317],[-150.708,-137.265],[-150.953,-137.117],[-151.52,-137.021],[-151.791,-137.021],[-152.037,-137.068],[-152.33,-137.068],[-152.822,-137.265],[-153.156,-137.265],[-153.461,-137.265],[-153.66,-137.218],[-153.707,-136.727],[-154.874,-136.727],[-155.084,-136.627],[-155.28,-136.38],[-154.789,-135.789],[-154.542,-135.591],[-154.295,-135.448],[-153.986,-135.445],[-153.707,-135.448],[-153.068,-135.201],[-152.578,-135.005],[-152.134,-134.857],[-151.543,-134.562],[-151.347,-134.464],[-151.889,-134.416],[-152.085,-134.265],[-152.134,-134.068],[-151.987,-133.875],[-151.791,-133.825],[-151.396,-133.679],[-151.25,-133.481],[-151.053,-133.287],[-151.006,-133.088],[-150.805,-132.987],[-150.561,-132.89],[-150.366,-132.792],[-150.167,-132.692],[-149.676,-132.497],[-149.431,-132.4],[-149.187,-132.202],[-148.89,-132.055],[-148.3,-132.006],[-148.201,-132.006],[-147.956,-132.006],[-147.759,-132.151],[-147.858,-132.349],[-148.055,-132.596],[-148.249,-132.843],[-148.152,-133.136],[-147.956,-133.136],[-147.441,-133.136],[-146.726,-133.136],[-146.286,-132.937],[-146.087,-132.843],[-145.893,-132.792],[-145.684,-132.692],[-145.497,-132.742],[-145.497,-133.136],[-144.677,-133.136],[-144.465,-132.987],[-144.219,-132.843],[-143.706,-132.792],[-143.189,-132.843],[-143.042,-133.038],[-142.844,-133.136],[-142.646,-133.239],[-142.452,-133.287],[-142.305,-133.294],[-142.059,-133.333],[-141.909,-133.531],[-141.714,-133.628],[-141.419,-133.825],[-140.926,-133.679],[-140.535,-133.383],[-140.326,-133.287],[-139.747,-133.287],[-139.109,-133.239],[-138.913,-133.239],[-138.714,-133.136],[-138.074,-132.843],[-137.879,-132.643],[-137.633,-132.546],[-137.426,-132.497],[-136.072,-132.497],[-135.865,-132.447],[-135.671,-132.4],[-135.079,-132.055],[-134.88,-131.908],[-134.289,-131.859],[-134.095,-131.859],[-133.897,-131.859],[-133.749,-131.658],[-133.355,-131.268],[-133.161,-131.122],[-132.764,-131.071],[-132.568,-131.071],[-132.176,-130.974],[-131.982,-130.825],[-131.685,-130.471],[-131.685,-129.122],[-131.44,-128.713],[-131.293,-128.516],[-131.095,-128.317],[-130.898,-128.268],[-130.755,-128.268],[-130.603,-128.268],[-130.361,-128.122],[-130.113,-128.025],[-129.866,-127.876],[-129.77,-127.682],[-129.572,-127.289],[-129.522,-127.093],[-129.324,-126.99],[-129.03,-126.548],[-128.786,-126.349],[-128.641,-126.057],[-128.491,-125.863],[-128.294,-125.713],[-128.145,-125.319],[-127.951,-124.926],[-127.85,-124.733],[-127.507,-124.089],[-127.312,-123.942],[-126.917,-123.7],[-126.77,-123.38],[-126.77,-123.256],[-126.819,-122.964],[-126.967,-122.667],[-126.819,-122.371],[-126.426,-121.77],[-126.426,-120.762],[-126.624,-120.506],[-126.819,-120.132],[-126.77,-119.79],[-125.824,-119.79],[-125.824,-118.978],[-126.328,-118.978],[-126.72,-118.732],[-126.77,-118.536],[-126.525,-117.799],[-126.671,-117.212],[-127.409,-117.212],[-127.409,-116.421],[-127.115,-115.933],[-126.328,-115.736],[-125.936,-115.736],[-125.542,-115.639],[-125.126,-115.54],[-123.182,-115.54],[-123.182,-116.029],[-122.986,-116.375],[-122.198,-116.421],[-121.807,-116.325],[-121.413,-116.375],[-121.314,-115.833],[-121.314,-115.441],[-121.018,-115.05],[-120.625,-114.655],[-120.233,-114.36],[-119.839,-114.36],[-119.638,-114.359],[-119.448,-114.36],[-119.053,-114.163],[-118.661,-113.968],[-118.367,-113.576],[-117.97,-113.277],[-117.872,-112.884],[-117.97,-112.491],[-118.733,-112.491],[-119.249,-112.591],[-120.035,-112.591],[-121.215,-112.687],[-121.609,-112.884],[-121.706,-113.277],[-121.943,-113.29],[-122.099,-113.277],[-122.888,-113.377],[-123.77,-113.475],[-124.952,-113.178],[-124.658,-112.394],[-124.266,-112.098],[-123.868,-111.705],[-124.068,-111.313],[-124.853,-111.214],[-125.245,-110.92],[-125.641,-110.326],[-125.443,-109.738],[-124.74,-109.631],[-124.266,-109.642],[-123.479,-109.247],[-122.398,-108.361],[-122,-108.757],[-121.215,-109.346],[-119.986,-109.346],[-119.986,-110.721],[-121.116,-110.82],[-121.292,-110.814],[-121.512,-110.82],[-121.706,-111.214],[-121.926,-111.22],[-122.099,-111.214],[-122.495,-111.313],[-122.297,-111.705],[-121.535,-111.705],[-121.116,-111.605],[-120.724,-111.313],[-120.332,-111.117],[-119.939,-111.117],[-119.448,-111.016],[-118.661,-111.016],[-117.872,-110.92],[-117.482,-110.326],[-117.482,-110.131],[-117.872,-109.835],[-117.872,-109.443],[-118.267,-109.052],[-118.267,-108.853],[-117.97,-108.462],[-117.579,-108.069],[-117.379,-107.647],[-117.379,-106.494],[-118.439,-106.494],[-118.857,-106.594],[-119.249,-106.296],[-119.544,-105.903],[-119.986,-105.903],[-120.427,-105.903],[-120.82,-106.099],[-121.264,-105.954],[-121.264,-104.035],[-121.807,-104.134],[-122.297,-104.334],[-122.59,-103.941],[-122.986,-103.741],[-123.378,-103.645],[-123.77,-103.546],[-123.868,-102.908],[-123.868,-102.66],[-123.674,-102.169],[-123.378,-101.676],[-122.986,-101.579],[-122.59,-101.482],[-122.198,-101.185],[-121.807,-100.993],[-121.609,-100.204],[-122.398,-100.005],[-122.693,-99.419],[-122.198,-98.43],[-121.807,-97.648],[-121.609,-97.253],[-121.018,-97.152],[-120.427,-97.253],[-120.134,-97.648],[-119.741,-97.648],[-119.346,-97.648],[-118.954,-97.449],[-118.954,-97.058],[-119.053,-96.663],[-119.273,-96.65],[-119.448,-96.663],[-119.839,-96.469],[-119.839,-96.074],[-120.035,-95.678],[-120.427,-95.191],[-120.332,-94.597],[-120.035,-93.812],[-119.741,-93.421],[-119.346,-93.421],[-118.954,-93.421],[-118.561,-93.715],[-118.267,-94.108],[-118.072,-94.5],[-117.676,-94.597],[-117.087,-94.5],[-117.087,-92.926],[-117.379,-92.534],[-117.775,-92.437],[-118.171,-92.143],[-118.561,-91.849],[-118.661,-91.255],[-118.464,-90.667],[-118.072,-90.373],[-117.676,-89.98],[-116.792,-88.8],[-116.397,-88.503],[-116.203,-88.11],[-116.203,-87.72],[-115.711,-86.933],[-115.513,-86.144],[-114.728,-85.459],[-114.337,-85.259],[-114.04,-84.867],[-114.04,-84.08],[-113.745,-83.687],[-112.566,-83.294],[-111.776,-82.703],[-111.486,-82.309],[-111.091,-82.309],[-110.697,-82.309],[-110.301,-82.508],[-109.714,-82.605],[-109.516,-82.605],[-109.125,-82.508],[-108.956,-82.519],[-108.73,-82.508],[-108.633,-82.115],[-108.534,-81.718],[-108.044,-81.328],[-107.548,-81.132],[-107.184,-81.136],[-106.763,-81.132],[-106.371,-80.736],[-106.275,-80.346],[-105.882,-79.954],[-105.091,-79.954],[-104.307,-79.954],[-103.913,-80.245],[-103.52,-80.443],[-103.126,-80.736],[-103.126,-81.132],[-103.126,-81.525],[-102.832,-83.098],[-102.142,-83.783],[-101.948,-84.18],[-101.751,-84.768],[-101.85,-85.358],[-101.948,-85.751],[-101.85,-86.144],[-101.948,-86.933],[-102.339,-87.227],[-102.538,-87.619],[-102.638,-88.01],[-101.652,-88.503],[-101.257,-88.503],[-100.866,-88.602],[-100.081,-88.602],[-100.081,-89.29],[-100.081,-89.682],[-99.784,-90.074],[-99.392,-90.373],[-99.173,-90.378],[-98.997,-90.373],[-98.602,-90.667],[-98.602,-92.632],[-98.21,-93.126],[-98.309,-93.715],[-98.505,-94.108],[-98.602,-94.5],[-98.997,-94.7],[-98.801,-95.29],[-98.592,-95.294],[-98.406,-95.29],[-97.618,-95.384],[-97.227,-95.585],[-96.837,-95.877],[-96.837,-96.27],[-96.837,-96.663],[-96.737,-97.058],[-94.328,-97.058],[-94.378,-98.141],[-94.328,-98.533],[-92.953,-98.533],[-93,-97.352],[-92.953,-96.886],[-92.117,-96.957],[-91.749,-96.862],[-90.645,-97.648],[-90.249,-98.042],[-89.855,-98.43],[-89.464,-98.629],[-89.072,-98.629],[-88.71,-98.623],[-88.283,-98.629],[-87.889,-98.824],[-87.496,-98.923],[-87.496,-99.32],[-87.301,-99.708],[-86.906,-100.005],[-86.513,-100.302],[-86.12,-100.497],[-85.924,-100.894],[-85.628,-101.284],[-85.236,-101.38],[-84.745,-102.169],[-84.546,-102.56],[-84.151,-102.66],[-83.76,-102.857],[-83.76,-103.252],[-83.465,-103.645],[-83.072,-103.741],[-82.677,-104.134],[-82.677,-105.316],[-82.652,-105.389],[-82.503,-105.389],[-82.163,-105.339],[-82.064,-105.289],[-81.969,-105.24],[-81.865,-105.217],[-81.671,-105.068],[-81.572,-105.02],[-81.378,-104.802],[-81.251,-104.727],[-80.811,-104.626],[-80.023,-104.626],[-79.236,-104.134],[-78.206,-104.035],[-77.566,-104.035],[-77.172,-104.232],[-76.289,-104.727],[-75.796,-105.119],[-75.503,-105.609],[-74.714,-106.002],[-74.271,-106.009],[-73.927,-106.002],[-73.536,-106.099],[-73.046,-106.296],[-72.819,-106.29],[-72.552,-106.296],[-72.161,-106.494],[-71.768,-106.691],[-71.59,-106.684],[-71.374,-106.691],[-70.98,-106.987],[-70.586,-107.183],[-70.292,-107.577],[-69.896,-108.069],[-69.505,-108.658],[-68.693,-109.148],[-66.677,-109.148],[-65.868,-109.543],[-65.473,-109.936],[-64.982,-110.326],[-64.982,-110.721],[-65.378,-110.92],[-66.161,-110.326],[-66.259,-109.936],[-66.9,-109.835],[-67.147,-109.835],[-68.03,-110.131],[-68.523,-110.92],[-68.915,-110.92],[-69.309,-110.92],[-70.98,-111.117],[-71.374,-111.214],[-71.768,-111.51],[-72.161,-111.803],[-72.257,-112.27],[-72.257,-113.081],[-71.572,-113.178],[-71.033,-113.172],[-70.391,-113.178],[-69.997,-113.277],[-69.113,-113.475],[-68.424,-114.262],[-68.03,-114.163],[-67.734,-113.772],[-67.734,-112.787],[-67.538,-112.394],[-67.34,-112],[-66.456,-111.605],[-65.966,-111.902],[-65.868,-112.296],[-65.081,-112.787],[-64.296,-112.787],[-63.41,-112.787],[-63.016,-112.984],[-63.115,-113.772],[-63.508,-114.655],[-63.805,-115.144],[-64.589,-115.54],[-65.277,-116.226],[-65.277,-117.015],[-65.671,-117.212],[-65.771,-117.604],[-65.771,-117.998],[-66.161,-118.195],[-66.948,-118.491],[-67.34,-118.784],[-67.048,-119.177],[-66.654,-119.274],[-65.966,-118.585],[-65.771,-118.195],[-65.305,-118.195],[-64.883,-118.195],[-64.49,-118.29],[-64.099,-118.241],[-64,-119.766],[-64,-120.159],[-63.901,-120.552],[-63.707,-120.948],[-63.805,-121.341],[-64.198,-121.537],[-65.03,-121.732],[-65.868,-121.636],[-66.064,-121.24],[-66.482,-121.14],[-67.833,-121.14],[-67.443,-121.732],[-67.048,-121.832],[-66.654,-122.027],[-66.654,-122.419],[-67.443,-122.715],[-67.833,-122.914],[-67.538,-123.207],[-65.868,-123.207],[-65.868,-122.127],[-64.318,-122.127],[-63.901,-122.225],[-63.707,-122.617],[-62.868,-122.715],[-62.423,-122.715],[-61.348,-122.32],[-60.753,-122.522],[-60.46,-122.914],[-60.068,-123.307],[-60.361,-123.893],[-60.753,-124.386],[-61.348,-124.781],[-61.934,-124.682],[-62.329,-124.485],[-62.721,-124.386],[-63.115,-124.485],[-63.508,-124.781],[-63.707,-125.172],[-63.212,-125.566],[-62.82,-125.469],[-62.423,-125.368],[-61.591,-125.368],[-60.753,-125.368],[-60.361,-125.566],[-59.97,-125.761],[-59.677,-126.153],[-59.28,-125.96],[-58.641,-125.96],[-58.003,-125.96],[-57.607,-126.057],[-57.509,-126.452],[-58.297,-127.041],[-58.492,-127.041],[-58.689,-127.041],[-59.18,-127.337],[-59.677,-127.831],[-59.773,-128.221],[-59.724,-128.786],[-59.773,-129.401],[-59.677,-129.791],[-59.724,-130.039],[-58.1,-130.039],[-58.1,-131.195],[-58.887,-132.252],[-58.887,-132.643],[-58.986,-133.239],[-60.164,-133.239],[-60.656,-133.333],[-61.049,-133.432],[-61.444,-133.628],[-61.836,-133.825],[-62.132,-134.216],[-62.229,-134.808],[-62.229,-135.005],[-61.836,-135.201],[-61.542,-135.591],[-61.318,-135.599],[-61.151,-135.591],[-60.264,-135.69],[-59.871,-135.789],[-59.081,-135.789],[-58.297,-135.789],[-57.904,-135.494],[-57.509,-135.005],[-57.509,-134.808],[-57.706,-134.416],[-58.003,-133.825],[-57.509,-132.349],[-57.017,-132.546],[-57.017,-135.69],[-56.723,-136.086],[-56.335,-136.481],[-56.335,-136.675],[-56.624,-137.167],[-57.118,-137.658],[-57.706,-137.562],[-58.1,-137.364],[-58.764,-137.364],[-59.378,-137.364],[-59.871,-137.463],[-60.164,-137.412],[-60.164,-138.643],[-59.773,-138.739],[-59.378,-138.542],[-59.012,-138.542],[-58.199,-138.643],[-57.807,-138.937],[-58.1,-139.33],[-58.495,-139.722],[-58.872,-139.669],[-59.28,-139.624],[-59.677,-139.92],[-60.068,-140.018],[-60.46,-140.018],[-61.074,-140.214],[-62.031,-140.115],[-62.031,-139.432],[-62.229,-139.036],[-62.4,-139.023],[-62.626,-139.036],[-63.016,-139.33],[-63.016,-139.722],[-62.921,-140.507],[-62.721,-140.903],[-62.329,-141.002],[-62.031,-141.394],[-62.031,-141.789],[-62.031,-142.575],[-61.836,-143.657],[-60.656,-143.657],[-60.46,-144.637],[-60.164,-145.036],[-59.637,-145.127],[-59.378,-145.131],[-58.986,-145.131],[-58.592,-145.425],[-58.689,-145.818],[-58.79,-146.407],[-58.495,-146.997],[-58.199,-147.39],[-58.003,-147.786],[-57.607,-148.081],[-56.823,-148.473],[-56.253,-148.419],[-55.643,-148.374],[-55.249,-148.473],[-55.055,-148.864],[-54.956,-149.257],[-54.758,-149.653],[-54.365,-149.851],[-53.971,-150.045],[-53.579,-150.045],[-53.186,-150.144],[-52.983,-150.144],[-52.792,-150.144],[-52.499,-150.536],[-52.598,-151.002],[-56.23,-151.002],[-57.216,-151.226],[-56.335,-151.424],[-55.249,-152.111],[-54.661,-151.913],[-54.169,-151.617],[-53.723,-151.617],[-53.28,-151.617],[-52.888,-151.715],[-52.499,-151.715],[-52.007,-151.812],[-51.71,-152.208],[-51.414,-152.601],[-50.926,-153.09],[-50.63,-153.485],[-49.84,-153.585],[-49.451,-153.585],[-47.876,-153.682],[-47.482,-153.781],[-47.09,-153.878],[-46.697,-154.271],[-46.401,-154.664],[-46.302,-155.453],[-46.503,-156.24],[-46.895,-156.435],[-47.777,-156.534],[-48.663,-156.435],[-49.155,-156.141],[-49.941,-156.041],[-50.826,-156.24],[-51.318,-156.435],[-51.906,-156.635],[-52.4,-156.831],[-53.28,-156.635],[-53.533,-156.633],[-53.775,-156.635],[-54.661,-156.435],[-55.055,-156.141],[-55.448,-155.846],[-55.742,-155.059],[-55.939,-154.664],[-56.335,-154.568],[-56.831,-154.557],[-57.216,-154.568],[-58.052,-154.468],[-58.887,-154.568],[-59.18,-154.961],[-60.215,-155.059],[-60.855,-155.059],[-61.542,-154.374],[-61.74,-153.979],[-62.132,-153.781],[-62.525,-153.781],[-62.956,-153.781],[-63.41,-153.781],[-64.198,-153.585],[-64.589,-153.289],[-65.473,-153.09],[-65.868,-152.799],[-66.361,-152.406],[-66.948,-151.424],[-67.34,-151.226],[-67.734,-151.424],[-67.538,-151.812],[-67.147,-152.011],[-66.948,-152.406],[-66.654,-152.799],[-66.161,-153.585],[-65.977,-153.584],[-65.771,-153.585],[-65.13,-153.878],[-65.18,-154.271],[-65.18,-155.159],[-64.689,-155.55],[-64.296,-155.653],[-63.901,-155.945],[-63.901,-156.336],[-63.901,-156.729],[-64.099,-157.123],[-64.395,-157.519],[-64.783,-157.519],[-65.18,-157.519],[-65.574,-157.42],[-66.066,-157.419],[-66.556,-157.42],[-66.948,-157.318],[-68.225,-157.318],[-68.72,-157.494],[-68.72,-156.24],[-68.815,-155.846],[-68.72,-155.525],[-69.214,-155.356],[-69.701,-155.55],[-70.391,-155.55],[-71.078,-155.55],[-71.863,-155.159],[-72.257,-155.059],[-72.65,-154.768],[-72.878,-154.76],[-73.046,-154.768],[-72.947,-155.159],[-72.749,-155.55],[-72.552,-156.041],[-72.161,-156.336],[-71.768,-156.336],[-70.883,-156.336],[-70.096,-156.435],[-69.701,-156.729],[-69.799,-157.123],[-70.193,-157.318],[-70.441,-157.318],[-70.688,-157.318],[-71.324,-157.42],[-72.849,-157.123],[-73.633,-157.123],[-74.051,-157.028],[-76.757,-157.028],[-77.81,-157.221],[-78.844,-157.028],[-79.335,-156.93],[-79.728,-156.729],[-80.124,-156.635],[-80.714,-156.336],[-80.944,-156.336],[-81.204,-156.336],[-81.796,-156.141],[-82.038,-156.141],[-82.285,-156.141],[-82.779,-155.945],[-83.172,-155.846],[-83.661,-155.653],[-84.055,-155.846],[-83.954,-156.24],[-83.366,-157.028],[-83.072,-157.42],[-82.185,-157.812],[-81.671,-157.906],[-75.035,-157.906],[-74.617,-158.01],[-74.323,-158.403],[-73.908,-158.5],[-68.352,-158.5],[-67.928,-158.597],[-67.147,-158.597],[-66.753,-158.794],[-66.556,-159.188],[-66.323,-159.2],[-66.161,-159.188],[-65.771,-159.387],[-65.378,-159.387],[-65.189,-159.385],[-64.982,-159.387],[-64.589,-159.679],[-63.836,-159.695],[-63.309,-159.679],[-62.82,-159.776],[-62.82,-160.666],[-64,-160.762],[-64.589,-160.564],[-64.783,-160.564],[-65.18,-160.762],[-66.456,-160.96],[-67.246,-160.86],[-68.225,-160.96],[-68.62,-161.154],[-68.225,-161.45],[-68.424,-161.843],[-68.815,-161.843],[-69.555,-162.038],[-69.799,-162.038],[-70.214,-161.745],[-72.137,-161.745],[-72.947,-162.235],[-73.339,-162.334],[-74.223,-162.334],[-76.583,-162.334],[-77.172,-162.334],[-78.647,-162.334],[-79.432,-162.334],[-80.223,-162.235],[-80.613,-161.894],[-84.055,-161.894],[-83.954,-162.334],[-83.193,-162.334],[-82.382,-162.235],[-82.089,-162.628],[-81.892,-163.072],[-70.096,-163.072],[-70.096,-163.513],[-70.49,-163.906],[-70.883,-164.104],[-71.768,-164.302],[-72.257,-164.302],[-73.142,-164.401],[-73.927,-164.498],[-74.323,-164.697],[-74.714,-164.791],[-75.599,-164.791],[-76.484,-164.791],[-76.878,-164.697],[-77.763,-164.697],[-78.253,-164.697],[-79.068,-164.89],[-87.47,-164.937]],\"c\":true},\"ix\":2},\"nm\":\"Path 1\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":1,\"ty\":\"sh\",\"ix\":2,\"ks\":{\"a\":0,\"k\":{\"i\":[[0.392,0.1],[0.13,-0.046],[0.245,0.309],[0.688,0],[0.395,0],[0,0],[0,0],[0,0],[0,0],[0.157,-0.468],[0,0],[0,0],[0,0],[0.589,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[-0.199,-0.496],[0,0],[0.395,0.396],[0.488,0],[0,0],[0.292,0.398],[0.492,-0.096],[0,0],[0,0],[0.491,-0.098],[0,0],[0,0],[0.395,0],[0,0],[0,0],[0,0],[0,0],[0.393,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[-0.395,0],[0,0],[-0.689,-0.198],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[-0.195,0.593],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[-0.492,0.096],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0.496,0.196],[0.392,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0.394,0],[0,-0.493],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[-0.492,0.195],[0,0],[0,0],[0,0],[0,0],[0,0],[0.788,0],[0,0],[0,0],[0.395,0],[0,0],[0,0],[0,0],[0,0],[0,0],[-0.787,-0.295],[-0.492,0],[-0.099,0.39],[0,0],[-0.391,0],[-0.393,0.195],[-0.593,0],[0,0],[-0.384,-0.084],[0,0],[0,0],[0,0],[-0.688,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[-0.296,0.394],[0,0],[-0.986,0],[0,0],[0,0.489],[0,0],[0.494,0.393],[0,0],[0,0],[0,0],[0,0],[0,0],[-0.395,0.097],[0,0],[0,0],[0,0],[0,0],[-0.392,0.392],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[-0.493,0.101],[0,0],[0,0],[0,0],[0,0],[0.39,0],[0.394,0.29],[0.79,0],[0,0],[0,0],[0,0],[0,0],[0,0],[-0.784,0],[0,0],[0,0],[-0.196,0.342],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0.198,0.395],[0,0],[0,0],[0,0]],\"o\":[[-0.149,-0.037],[-0.218,0.077],[-0.395,-0.489],[-0.687,0],[-0.394,0],[-0.589,0.489],[-1.084,-1.081],[0,0],[0,0],[-0.294,0.883],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[-0.886,-0.294],[-0.59,0.686],[0,0],[0,0],[0.591,0.591],[0,0],[0.195,0.486],[0,0],[-0.393,-0.388],[0,0],[0,0],[-0.297,-0.393],[-0.491,0.101],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0.393,0],[0,0],[0.688,0.198],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0.196,-0.588],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0.494,-0.097],[0,0],[0,0],[0,0],[-0.883,0.588],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[-0.785,0.396],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[-0.491,-0.196],[-0.395,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[-0.392,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0.49,-0.197],[0,0],[0,0],[0,0],[0,0],[0,0],[-0.785,0],[0,0],[0,0],[-0.394,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0.786,0.296],[0.494,0],[0.096,-0.395],[0,0],[0.397,0],[0.393,-0.196],[0,0],[0.193,0.491],[1.376,0.293],[0,0],[0,0],[0,0],[0.688,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0.293,-0.393],[0,0],[0,0],[0.59,0],[0,-0.492],[0,0],[-0.49,-0.398],[0,0],[0,0],[0,0],[0,0],[0,0],[0.393,-0.099],[0,0],[0,0],[0,0],[0,0],[0.391,-0.392],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0.491,-0.097],[0,0],[0,0],[0,0],[0,0],[-0.394,0],[-0.392,-0.297],[-0.787,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0.79,0],[0,0],[0,0],[0.392,-0.688],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[-0.196,-0.394],[0,0],[-0.979,-0.494],[0,0]],\"v\":[[-156.114,-161.45],[-156.528,-161.394],[-157.197,-161.549],[-158.081,-162.334],[-159.361,-162.235],[-159.656,-161.154],[-161.522,-161.253],[-163.291,-162.334],[-165.16,-162.432],[-166.734,-162.432],[-166.538,-160.564],[-167.421,-160.564],[-168.6,-161.253],[-169.485,-161.646],[-171.256,-161.646],[-171.351,-160.86],[-172.926,-160.86],[-175.482,-161.054],[-177.35,-160.268],[-178.234,-159.091],[-175.976,-159.091],[-173.124,-158.01],[-172.434,-157.906],[-171.845,-156.729],[-173.812,-156.93],[-175.187,-157.812],[-177.35,-157.812],[-178.824,-158.304],[-179.809,-159.387],[-181.382,-159.188],[-182.564,-159.877],[-183.446,-159.877],[-184.431,-159.679],[-184.627,-158.794],[-184.627,-157.713],[-186,-157.713],[-187.674,-158.205],[-188.556,-158.205],[-189.442,-157.42],[-190.328,-157.028],[-191.312,-157.028],[-192.39,-157.028],[-192.588,-156.24],[-194.556,-156.336],[-194.656,-155.453],[-193.376,-155.256],[-192.685,-155.059],[-192.784,-153.878],[-191.212,-153.585],[-190.328,-152.503],[-188.656,-152.406],[-187.181,-151.913],[-185.511,-151.715],[-184.525,-152.896],[-183.936,-153.585],[-181.969,-153.781],[-183.248,-152.896],[-184.135,-151.715],[-183.936,-150.536],[-181.086,-150.638],[-178.728,-150.638],[-177.843,-151.812],[-175.976,-151.617],[-173.516,-151.617],[-172.04,-152.601],[-171.058,-153.485],[-170.863,-154.174],[-169.584,-154.174],[-167.815,-154.86],[-166.144,-154.664],[-167.323,-154.568],[-168.8,-153.781],[-170.468,-152.702],[-168.309,-152.799],[-167.323,-152.601],[-166.439,-152.503],[-167.028,-151.715],[-169.191,-151.715],[-170.959,-151.617],[-172.04,-151.226],[-173.027,-151.13],[-175.286,-150.536],[-176.464,-150.536],[-177.644,-150.341],[-177.644,-149.356],[-176.367,-149.161],[-175.482,-148.573],[-174.99,-147.589],[-172.336,-147.193],[-173.516,-146.997],[-175.09,-147.096],[-176.96,-148.278],[-179.513,-149.653],[-181.481,-149.752],[-184.431,-150.045],[-184.627,-148.966],[-183.543,-148.081],[-182.07,-146.903],[-179.513,-145.327],[-177.843,-144.637],[-175.187,-144.44],[-175.876,-143.755],[-176.858,-143.359],[-176.858,-142.183],[-179.317,-143.852],[-180.99,-144.148],[-183.052,-143.951],[-184.525,-143.657],[-186,-142.966],[-186,-141.887],[-185.906,-141.099],[-184.431,-140.804],[-182.266,-140.804],[-180.496,-141.002],[-182.167,-140.115],[-181.676,-139.036],[-180.202,-138.84],[-179.121,-139.132],[-177.057,-140.507],[-177.644,-139.234],[-179.218,-138.15],[-180.99,-138.051],[-183.739,-138.937],[-185.807,-139.92],[-188.068,-139.821],[-187.577,-138.739],[-187.28,-137.167],[-189.148,-136.872],[-189.935,-135.789],[-188.556,-134.317],[-186.788,-133.628],[-184.922,-134.216],[-184.232,-134.317],[-182.463,-133.921],[-181.086,-133.921],[-179.809,-134.611],[-178.631,-134.02],[-177.154,-134.02],[-176.464,-134.317],[-174.892,-134.317],[-174.99,-133.136],[-172.926,-133.239],[-171.747,-133.239],[-170.175,-133.825],[-169.388,-134.317],[-168.208,-135.398],[-168.6,-136.481],[-170.175,-135.789],[-170.665,-137.265],[-168.995,-137.562],[-168.503,-138.937],[-169.09,-140.214],[-167.914,-140.214],[-165.75,-140.115],[-164.864,-140.314],[-164.764,-141.593],[-165.651,-142.771],[-163.982,-142.771],[-162.898,-142.966],[-163.786,-144.244],[-165.358,-144.637],[-166.931,-144.935],[-168.208,-144.244],[-169.191,-143.657],[-169.584,-144.637],[-168.009,-145.036],[-167.914,-145.719],[-166.734,-146.308],[-165.259,-146.308],[-164.571,-145.523],[-162.606,-145.231],[-161.326,-145.523],[-159.853,-146.508],[-161.622,-147.786],[-159.656,-147.882],[-158.867,-146.997],[-157.294,-147.096],[-155.43,-147.684],[-156.214,-149.063],[-157.491,-149.554],[-155.232,-149.554],[-153.856,-149.554],[-153.068,-150.437],[-151.396,-150.934],[-149.727,-152.011],[-147.562,-152.702],[-145.792,-153.979],[-144.023,-154.078],[-143.042,-154.664],[-143.826,-155.653],[-145.103,-155.159],[-147.17,-154.664],[-148.055,-155.059],[-150.512,-154.961],[-150.117,-155.846],[-148.249,-156.24],[-146.087,-156.24],[-143.924,-156.24],[-141.862,-156.729],[-139.893,-157.318],[-137.732,-157.42],[-137.141,-158.5],[-137.536,-159.877],[-139.206,-159.484],[-140.682,-159.679],[-141.072,-160.666],[-143.042,-161.646],[-144.516,-161.253],[-146.581,-161.253],[-148.842,-160.666],[-148.743,-161.549],[-150.414,-161.646],[-151.889,-161.549],[-152.38,-162.235],[-153.856,-162.334],[-155.819,-162.828]],\"c\":true},\"ix\":2},\"nm\":\"Path 2\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":2,\"ty\":\"sh\",\"ix\":3,\"ks\":{\"a\":0,\"k\":{\"i\":[[0.049,-0.009],[0.172,-0.022],[0.119,0],[0,0],[0.127,0],[0.146,-0.077],[0.02,-0.175],[0,-0.146],[0,-0.151],[0,-0.196],[0.344,0.024],[0.145,0],[0,0],[0,0],[0.07,0.011],[0.085,-0.043],[0,-0.198],[0.025,-0.123],[0,-0.171],[0,-0.173],[0,0],[0.61,-0.048],[0.173,-0.022],[0.124,-0.021],[0.152,-0.024],[0.069,0.007],[0.06,-0.012],[0.149,-0.072],[0.148,-0.147],[0,0],[0,0],[-0.049,0.148],[-0.074,0.124],[-0.122,0.072],[-0.16,-0.032],[-0.112,0.02],[-0.125,0.027],[-0.174,0.055],[-0.134,-0.016],[-0.129,0.027],[-0.17,0.029],[-0.118,0],[-0.27,0.099],[-0.124,0.05],[-0.172,0],[-0.301,-0.072],[-0.122,-0.024],[-0.195,0],[0,0],[0.023,0.121],[0,0.319],[-0.343,0],[-0.2,-0.097],[-0.099,-0.07],[-0.123,-0.125],[-0.416,0],[-0.414,0.024],[0,0.198],[0,0.146],[0,0],[0.343,-0.027],[0.148,0],[0.293,0],[0.147,0.024],[-0.171,0.199],[-0.176,0.175],[-0.148,0.196],[0,0],[0.083,0]],\"o\":[[-0.197,0.024],[-0.122,0],[0,0],[-0.122,0],[-0.17,0.024],[-0.15,0.072],[-0.027,0.124],[0,0.147],[0,0.195],[-0.345,0],[-0.147,0],[0,0],[0,0],[-0.072,0.011],[-0.098,-0.015],[-0.147,0.07],[0,0.146],[-0.05,0.148],[0,0.173],[0,0],[-0.614,0.078],[-0.198,0],[-0.125,0.027],[-0.145,0.028],[-0.061,0.014],[-0.066,-0.006],[-0.147,0.028],[-0.194,0.102],[0,0],[0,0],[0.099,-0.099],[0.05,-0.122],[0.075,-0.125],[0.131,-0.087],[0.114,0.022],[0.12,-0.025],[0.172,-0.047],[0.138,-0.035],[0.124,0.015],[0.175,-0.02],[0.123,-0.021],[0.275,-0.021],[0.12,-0.022],[0.148,-0.071],[0.323,0],[0.12,0.028],[0.178,0.05],[0,0],[-0.022,-0.148],[-0.075,-0.296],[0,-0.345],[0.244,0],[0.12,0.049],[0.122,0.078],[0.293,0.294],[0.419,0],[0,-0.196],[0,-0.146],[0,0],[-0.344,0],[-0.149,0],[-0.291,0.024],[-0.148,0],[0.147,-0.223],[0.148,-0.172],[0.169,-0.169],[0,0],[-0.098,0],[-0.042,0]],\"v\":[[87.005,-155.256],[86.514,-155.159],[86.125,-155.059],[85.725,-155.059],[85.333,-154.961],[84.844,-154.86],[84.451,-154.568],[84.451,-154.174],[84.548,-153.781],[84.451,-153.289],[83.565,-153.289],[83.172,-153.386],[82.678,-153.386],[82.286,-153.386],[82.074,-153.398],[81.796,-153.386],[81.504,-152.994],[81.599,-152.601],[81.203,-152.406],[81.402,-152.011],[81.402,-151.325],[79.831,-151.226],[79.337,-151.13],[78.941,-151.031],[78.548,-150.833],[78.349,-150.833],[78.156,-150.833],[77.763,-150.638],[77.37,-150.244],[76.98,-149.851],[77.37,-149.554],[77.763,-149.752],[77.763,-150.144],[77.96,-150.536],[78.406,-150.56],[78.749,-150.536],[79.141,-150.638],[79.536,-150.934],[79.943,-150.937],[80.32,-150.934],[80.712,-151.226],[81.103,-151.226],[81.893,-151.325],[82.286,-151.424],[82.48,-151.812],[83.272,-151.523],[83.661,-151.424],[84.178,-151.325],[84.941,-151.325],[84.941,-151.715],[84.645,-152.503],[85.432,-152.994],[86.023,-152.799],[86.415,-152.702],[86.611,-152.305],[87.618,-151.913],[88.674,-152.011],[88.773,-152.503],[88.674,-152.896],[88.674,-153.386],[87.793,-153.386],[87.397,-153.289],[86.611,-153.289],[86.22,-153.386],[86.611,-153.979],[87.105,-154.374],[87.497,-154.86],[87.397,-155.256],[87.139,-155.268]],\"c\":true},\"ix\":2},\"nm\":\"Path 3\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":3,\"ty\":\"sh\",\"ix\":4,\"ks\":{\"a\":0,\"k\":{\"i\":[[-0.098,-0.586],[0,0],[-0.099,-0.492],[0,0],[0,0],[0,0],[-0.492,-0.196],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0.394,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0.39],[-0.488,-0.195],[0,0],[0,0],[0,0],[0.884,0.394],[0,0],[0,0],[0,0],[0.395,0.102],[0,0.392],[0.394,0.196],[0.883,0.29],[0,0],[0,0],[0.394,0.093],[0,0]],\"o\":[[0,0],[0.589,0],[0.095,0.49],[0,0],[0,0],[0,0],[0.491,0.199],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0.491,0],[0,0],[0,0],[0,0],[0,-0.392],[0.494,0.197],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[-0.39,-0.095],[0,-0.396],[-0.392,-0.197],[-0.886,-0.299],[0,0],[0,0],[-0.392,-0.101],[0,0]],\"v\":[[-199.274,-154.078],[-197.801,-154.078],[-197.307,-153.386],[-198.484,-153.09],[-200.355,-153.09],[-201.14,-152.799],[-199.863,-152.011],[-199.766,-151.13],[-201.338,-151.226],[-202.42,-151.031],[-202.126,-149.752],[-203.11,-149.161],[-203.11,-147.982],[-201.832,-147.882],[-201.832,-146.607],[-200.257,-145.818],[-198.879,-146.011],[-197.503,-146.407],[-195.638,-146.508],[-194.753,-145.523],[-196.424,-145.036],[-198.094,-145.036],[-199.274,-144.44],[-197.604,-143.557],[-196.717,-142.183],[-193.866,-141.593],[-191.705,-141.887],[-189.735,-141.394],[-189.05,-142.183],[-188.165,-142.183],[-187.97,-143.166],[-187.773,-144.244],[-186.298,-143.657],[-185.807,-144.44],[-184.037,-144.344],[-182.758,-145.231],[-182.758,-146.703],[-184.724,-147.291],[-186,-147.684],[-186.592,-148.669],[-186.592,-149.458],[-187.773,-150.144],[-188.758,-149.458],[-189.442,-150.437],[-190.426,-151.325],[-192.49,-151.812],[-193.573,-152.799],[-194.556,-153.682],[-196.228,-154.86],[-197.307,-154.961]],\"c\":true},\"ix\":2},\"nm\":\"Path 4\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":4,\"ty\":\"sh\",\"ix\":5,\"ks\":{\"a\":0,\"k\":{\"i\":[[0.244,0],[0.17,0.048],[0.123,0.024],[0,0],[0,0],[-0.172,-0.074],[-0.145,-0.07],[-0.2,0],[0,0],[-0.194,0.122],[-0.023,0.15],[0,0.15],[0.027,0.148],[0.075,0.122],[0.248,0]],\"o\":[[-0.196,0],[-0.128,-0.025],[0,0],[0,0],[0.197,0.022],[0.172,0.073],[0.149,0.078],[0,0],[0.246,0],[0.124,-0.073],[0.028,-0.122],[0,-0.17],[-0.023,-0.124],[-0.123,-0.195],[-0.243,0]],\"v\":[[148.352,-153.979],[147.863,-154.174],[147.464,-154.271],[147.17,-153.878],[147.17,-153.09],[147.662,-152.994],[148.055,-152.702],[148.451,-152.406],[148.646,-152.406],[149.235,-152.601],[149.628,-152.799],[149.727,-153.192],[149.53,-153.585],[149.53,-153.979],[148.941,-154.271]],\"c\":true},\"ix\":2},\"nm\":\"Path 5\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":5,\"ty\":\"sh\",\"ix\":6,\"ks\":{\"a\":0,\"k\":{\"i\":[[0.274,-0.124],[0.121,-0.049],[0.171,-0.073],[0.165,0],[0.14,-0.033],[0.149,-0.05],[0.297,-0.023],[0.348,0],[0.152,0],[0.028,-0.296],[0.075,-0.148],[0.195,-0.047],[0.133,0.012],[0.131,-0.022],[0.149,-0.051],[0.171,-0.072],[0.07,-0.098],[-0.123,-0.074],[-0.241,0],[-0.295,0],[0,0],[-0.148,-0.121],[-0.169,-0.097],[-0.149,0],[-0.098,-0.046],[-0.146,-0.05],[-0.225,0],[-0.196,0.026],[-0.151,0.072],[-0.197,0.049],[-0.125,0],[-0.116,-0.009],[-0.149,0.027],[-0.125,0.049],[-0.171,0.051],[-0.294,0],[-0.611,0.049],[0,0.197],[-0.146,0.25],[-0.15,0.123],[-0.069,-0.018],[-0.063,0.038],[-0.148,0.101],[-0.123,0.076],[0.123,0.073],[0.024,0.025],[0,0],[0.248,0.296],[0.124,0.071],[0.083,-0.016],[0.048,0.009],[0.174,0]],\"o\":[[-0.121,0.048],[-0.147,0.075],[-0.166,0.07],[-0.127,-0.001],[-0.147,0.022],[-0.292,0.097],[-0.315,0.049],[-0.146,0],[0,0.296],[0,0.172],[-0.098,0.196],[-0.14,0.029],[-0.125,-0.013],[-0.147,0.028],[-0.171,0.075],[-0.125,0.054],[0.07,0.149],[0.2,0.15],[0.302,0],[0,0],[0.221,0.029],[0.127,0.102],[0.121,0.052],[0.12,0],[0.147,0.078],[0.195,0.054],[0.22,0],[0.175,-0.022],[0.173,-0.103],[0.126,-0.026],[0.12,-0.012],[0.142,0.01],[0.123,-0.026],[0.171,-0.075],[0.269,-0.099],[0.614,0],[0.026,-0.195],[0.029,-0.297],[0.075,-0.145],[0.05,-0.035],[0.071,0.018],[0.146,-0.094],[0.123,-0.074],[-0.151,-0.073],[-0.025,0],[0,0],[0,-0.394],[-0.098,-0.124],[-0.058,-0.045],[-0.058,0.011],[-0.148,-0.026],[-0.319,0]],\"v\":[[156.999,-153.682],[156.61,-153.585],[156.314,-153.192],[155.826,-153.122],[155.428,-153.09],[155.035,-152.896],[154.246,-152.601],[153.365,-152.601],[152.97,-152.503],[152.97,-151.715],[152.774,-151.325],[152.383,-150.934],[151.978,-150.932],[151.595,-150.934],[151.199,-150.734],[150.712,-150.638],[150.615,-150.244],[150.808,-149.851],[151.394,-149.653],[152.184,-149.851],[152.383,-149.851],[152.774,-149.458],[153.069,-149.063],[153.465,-148.966],[153.758,-148.769],[154.152,-148.573],[154.743,-148.573],[155.331,-148.573],[155.723,-148.864],[156.116,-149.257],[156.512,-149.257],[156.863,-149.252],[157.296,-149.257],[157.691,-149.356],[157.986,-149.752],[158.772,-149.752],[160.344,-149.851],[160.441,-150.341],[160.54,-151.13],[160.837,-151.523],[161.022,-151.521],[161.23,-151.523],[161.525,-151.913],[161.92,-152.111],[161.525,-152.305],[161.525,-152.406],[158.969,-152.406],[158.772,-153.386],[158.576,-153.781],[158.35,-153.792],[158.184,-153.781],[157.788,-153.979]],\"c\":true},\"ix\":2},\"nm\":\"Path 6\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":6,\"ty\":\"sh\",\"ix\":7,\"ks\":{\"a\":0,\"k\":{\"i\":[[0.067,-0.017],[0.123,-0.049],[0.124,-0.048],[0.124,0],[0.184,0.018],[0.221,-0.036],[0.122,-0.027],[0.174,-0.073],[0.2,0],[0.173,0.053],[0,0],[-0.321,-0.196],[-0.148,-0.074],[-0.394,0],[-0.194,0.05],[-0.147,0.078],[-0.121,0.099],[-0.099,0.12],[-0.145,0.098],[-0.121,0.049],[-0.147,0.049],[-0.149,0.049],[-0.264,0.048],[0,0],[0.144,0.022],[0,0],[0.147,0],[0.217,0],[0.126,0]],\"o\":[[-0.121,0.025],[-0.121,0.05],[-0.124,0.05],[-0.222,0.038],[-0.184,-0.019],[-0.124,0.027],[-0.175,0.048],[-0.171,0.075],[-0.195,0],[0,0],[0.273,0.27],[0.148,0.094],[0.319,0.196],[0.219,0],[0.148,-0.048],[0.147,-0.074],[0.123,-0.094],[0.097,-0.122],[0.101,-0.075],[0.148,-0.074],[0.145,-0.048],[0.269,-0.097],[0,0],[-0.147,-0.051],[0,0],[-0.121,0],[-0.221,-0.027],[-0.149,0],[-0.062,0]],\"v\":[[99.096,-153.682],[98.702,-153.585],[98.605,-153.192],[98.214,-153.192],[97.622,-153.192],[97.034,-153.192],[96.642,-153.09],[96.243,-152.799],[95.852,-152.503],[95.359,-152.702],[95.557,-152.305],[96.346,-151.617],[96.74,-151.325],[97.721,-151.031],[98.309,-151.13],[98.702,-151.325],[99.096,-151.523],[99.297,-151.913],[99.587,-152.305],[99.98,-152.406],[100.375,-152.601],[100.77,-152.799],[101.553,-152.994],[101.454,-153.386],[101.065,-153.585],[100.669,-153.585],[100.277,-153.682],[99.689,-153.682],[99.289,-153.705]],\"c\":true},\"ix\":2},\"nm\":\"Path 7\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":7,\"ty\":\"sh\",\"ix\":8,\"ks\":{\"a\":0,\"k\":{\"i\":[[0.101,-0.05],[0.121,-0.102],[0.198,-0.097],[0.125,-0.048],[0.145,-0.048],[0,0],[0.024,-0.125],[0.075,-0.098],[0.122,-0.078],[0.245,-0.197],[0.071,-0.117],[0,0],[-0.167,-0.076],[-0.221,0],[0,0],[-0.169,0.054],[-0.222,0],[0,0],[-0.197,0],[-0.561,0.023],[-0.147,0.027],[0.102,0.175],[0.051,0.175],[0.051,0.12],[0.074,0.322],[0,0.293],[0,0]],\"o\":[[-0.144,0.099],[-0.147,0.12],[-0.123,0.053],[-0.148,0.073],[0,0],[0,0.15],[-0.022,0.121],[-0.071,0.101],[-0.268,0.172],[-0.125,0.099],[0,0],[0.145,0.075],[0.198,0.096],[0,0],[0.196,-0.024],[0.199,-0.072],[0,0],[0.196,0],[0.566,0.048],[0.173,0],[-0.122,-0.148],[-0.074,-0.145],[-0.024,-0.118],[-0.124,-0.294],[-0.072,-0.268],[0,0],[-0.122,0.05]],\"v\":[[92.508,-153.485],[92.217,-153.09],[91.823,-152.702],[91.427,-152.601],[91.039,-152.406],[90.544,-152.702],[90.544,-152.305],[90.544,-151.913],[90.152,-151.812],[89.365,-151.325],[89.169,-150.934],[89.561,-150.734],[89.954,-150.437],[90.544,-150.341],[90.742,-150.341],[91.133,-150.638],[91.723,-150.638],[92.311,-150.638],[92.806,-150.536],[94.279,-150.536],[94.674,-150.685],[94.279,-151.13],[93.984,-151.523],[93.984,-151.913],[93.493,-152.702],[93.493,-153.485],[92.902,-153.585]],\"c\":true},\"ix\":2},\"nm\":\"Path 8\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":8,\"ty\":\"sh\",\"ix\":9,\"ks\":{\"a\":0,\"k\":{\"i\":[[0.147,0],[0.217,-0.17],[0.073,-0.122],[0.123,-0.146],[0.194,-0.073],[0.465,0],[0.269,-0.053],[0.145,-0.049],[0.15,-0.031],[0,0],[0.199,0.05],[0.123,0.024],[0.176,0.05],[0.101,-0.175],[0.124,-0.022],[0.169,0],[0.171,0.05],[0.124,0.028],[0.322,0],[0,0],[-0.147,-0.296],[-0.419,0],[-0.296,0.099],[-0.122,0.027],[-0.172,0.049],[-0.148,0.028],[-0.314,0],[-0.291,-0.021],[-0.146,0],[-0.148,0],[0,0],[0.197,-0.025],[0.342,0],[0,0],[-0.096,-0.128],[-0.199,-0.1],[0,0],[-0.467,0],[-0.271,0.099],[-0.097,0.147],[-0.027,0.247],[0.023,0.293],[0,0],[-0.445,0],[-0.167,0],[0,0],[-0.223,0.099],[-0.149,0.099],[-0.125,0.095],[0,0.17],[0,0],[0.416,0],[0,0],[0.172,0]],\"o\":[[-0.295,0],[-0.099,0.075],[-0.099,0.15],[-0.121,0.147],[-0.418,0.15],[-0.297,0],[-0.148,0.023],[-0.149,0.05],[0,0],[-0.219,0],[-0.121,-0.026],[-0.17,-0.049],[-0.099,0.172],[-0.072,0.121],[-0.146,0.051],[-0.199,0],[-0.123,-0.024],[-0.295,-0.072],[0,0],[0.024,0.342],[0.171,0.369],[0.32,0],[0.124,-0.025],[0.172,-0.047],[0.149,-0.046],[0.294,-0.049],[0.295,0],[0.149,0],[0.151,0],[0,0],[-0.147,0.147],[-0.32,0.052],[0,0],[0,0.17],[0.147,0.172],[0,0],[0.415,0.196],[0.295,0],[0.172,-0.072],[0.151,-0.199],[0.024,-0.291],[0,0],[0.441,-0.024],[0.169,0],[0,0],[0.273,0],[0.174,-0.073],[0.12,-0.102],[0.12,-0.1],[0,0],[-0.416,-0.098],[0,0],[-0.149,-0.024],[-0.151,0]],\"v\":[[72.456,-153.289],[71.671,-153.192],[71.671,-152.799],[71.276,-152.503],[70.883,-152.111],[69.507,-152.208],[68.72,-152.208],[68.329,-152.011],[67.932,-151.812],[67.734,-151.812],[67.145,-151.913],[66.753,-152.011],[66.262,-152.208],[65.965,-151.715],[65.868,-151.325],[65.475,-151.13],[65.083,-151.424],[64.69,-151.523],[63.876,-151.715],[63.116,-151.715],[63.215,-150.833],[64.1,-150.244],[64.885,-150.536],[65.277,-150.638],[65.768,-150.833],[66.163,-151.031],[66.971,-151.13],[67.734,-151.031],[68.126,-150.934],[68.526,-151.031],[68.621,-150.437],[68.23,-150.045],[67.344,-150.045],[67.344,-149.234],[67.539,-148.864],[68.03,-148.473],[68.427,-148.278],[69.556,-147.882],[70.293,-148.081],[70.682,-148.374],[70.98,-148.966],[70.883,-149.752],[70.883,-150.144],[72.039,-150.244],[72.456,-150.144],[72.676,-150.144],[73.341,-150.244],[73.733,-150.536],[74.126,-150.734],[74.323,-151.151],[74.323,-151.913],[73.243,-152.011],[73.243,-153.192],[72.849,-153.386]],\"c\":true},\"ix\":2},\"nm\":\"Path 9\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":9,\"ty\":\"sh\",\"ix\":10,\"ks\":{\"a\":0,\"k\":{\"i\":[[0.121,-0.072],[0.22,0],[0,0],[0.171,0],[0,0],[0.025,-0.394],[0.074,-0.269],[0.078,-0.145],[0,0],[0.268,0.345],[0.149,0.097],[0.151,0.05],[0.172,0],[1.255,0],[0.174,-0.026],[0.122,-0.047],[0,-0.297],[-0.1,-0.224],[-0.169,-0.05],[-0.148,-0.024],[0,0],[-0.122,-0.024],[-0.245,0],[-0.195,0.05],[-0.242,0],[-0.195,-0.049],[-0.124,-0.073],[-0.146,-0.122],[-0.047,-0.125],[0,0],[0,0],[-0.268,-0.101],[-0.342,0],[0,0],[-0.171,0],[-0.27,-0.102],[-0.151,-0.097],[-0.172,-0.024],[-0.121,-0.023],[-0.22,0],[-0.368,0.123],[-0.148,0.073],[-0.146,0.097],[-0.247,0],[-0.513,0],[-0.32,0.2],[-0.071,0.121],[-0.1,0.27],[-0.297,0.102],[-0.121,0],[-0.169,0.048],[-0.15,0.075],[0,0],[0.318,0.151],[0.316,0],[0.147,-0.027],[0.339,0],[0,0],[0.022,0.196],[0.072,0.148],[0.172,0.171],[0.095,0.146],[0.098,-0.051],[0.123,-0.099],[0.145,-0.122],[0.391,0],[0.145,0],[0.174,0.049],[0,0],[0,0],[0.027,0.148]],\"o\":[[-0.171,0.095],[0,0],[-0.174,0.025],[0,0],[-0.047,0.392],[0,0.296],[-0.047,0.174],[0,0],[0,-0.466],[-0.097,-0.149],[-0.119,-0.073],[-0.146,-0.047],[-1.253,0],[-0.172,0],[-0.147,0.027],[-0.244,0.124],[0,0.27],[0.073,0.172],[0.146,0.046],[0,0],[0.122,0],[0.222,0.049],[0.223,0],[0.222,-0.048],[0.225,0],[0.12,0.024],[0.146,0.076],[0.097,0.076],[0,0],[0,0],[0.298,0.124],[0.295,0.121],[0,0],[0.171,0],[0.296,0],[0.172,0.048],[0.146,0.099],[0.124,0.024],[0.198,0.025],[0.394,0],[0.148,-0.048],[0.172,-0.075],[0.197,-0.125],[0.515,0],[0.397,0],[0.122,-0.075],[0.144,-0.247],[0.096,-0.296],[0.118,-0.022],[0.173,-0.022],[0.172,-0.048],[0,0],[-0.246,-0.268],[-0.266,-0.124],[-0.177,0],[-0.319,0.049],[0,0],[-0.024,-0.2],[-0.024,-0.172],[-0.099,-0.196],[-0.122,-0.125],[-0.129,0.048],[-0.149,0.096],[-0.148,0.121],[-0.296,0.245],[-0.15,0],[-0.193,0],[0,0],[0,0],[-0.027,-0.147],[-0.119,0.049]],\"v\":[[22.023,-150.734],[21.632,-150.341],[21.434,-150.341],[21.016,-150.536],[19.858,-150.536],[19.76,-149.554],[19.661,-148.769],[19.366,-148.374],[18.971,-148.473],[18.777,-149.653],[18.383,-149.947],[17.99,-150.144],[17.572,-150.244],[14.378,-150.341],[13.958,-150.244],[13.568,-150.144],[13.074,-149.554],[13.174,-148.864],[13.665,-148.669],[14.057,-148.473],[14.453,-148.473],[14.845,-148.374],[15.436,-148.179],[16.023,-148.278],[16.609,-148.473],[17.206,-148.374],[17.598,-148.278],[17.99,-147.982],[18.087,-147.589],[15.138,-147.589],[15.138,-146.703],[15.927,-146.407],[16.737,-146.011],[18.852,-146.011],[19.268,-146.114],[20.056,-146.011],[20.353,-145.622],[20.842,-145.425],[21.236,-145.327],[21.824,-145.327],[22.807,-145.425],[23.202,-145.622],[23.595,-145.916],[24.087,-146.308],[25.362,-145.916],[26.348,-146.211],[26.741,-146.407],[26.741,-147.193],[27.333,-147.786],[27.721,-147.786],[28.216,-147.882],[28.609,-148.179],[29.001,-148.374],[28.312,-149.063],[27.48,-149.161],[27.036,-149.161],[26.227,-148.864],[25.464,-148.864],[25.464,-149.356],[25.267,-149.752],[24.773,-150.144],[24.484,-150.536],[24.087,-150.437],[23.792,-150.045],[23.398,-149.653],[22.516,-149.161],[22.121,-149.063],[21.725,-149.356],[22.516,-150.244],[22.516,-150.437],[22.413,-150.833]],\"c\":true},\"ix\":2},\"nm\":\"Path 10\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":10,\"ty\":\"sh\",\"ix\":11,\"ks\":{\"a\":0,\"k\":{\"i\":[[0,0],[0.319,-0.122],[0.171,-0.078],[0.171,-0.07],[0.399,-0.07],[0,0],[0,0],[0,0],[-0.096,0.197],[-0.047,0.123],[-0.071,0.095],[-0.296,-0.242],[-0.201,0],[-0.174,0],[-0.167,0.026],[0.05,0.468],[0,0],[0,0],[0.024,0.146]],\"o\":[[-0.346,0],[-0.174,0.052],[-0.172,0.072],[-0.342,0.172],[0,0],[0,0],[0,0],[0.148,-0.146],[0.051,-0.121],[0.051,-0.102],[0,0.393],[0.149,0.124],[0.164,0],[0.172,0],[0.026,-0.465],[0,0],[0,0],[0,-0.146],[0,0]],\"v\":[[85.656,-150.536],[84.844,-150.244],[84.35,-150.045],[83.956,-149.752],[82.971,-149.458],[82.971,-149.752],[82.971,-148.573],[84.743,-148.573],[85.135,-148.966],[85.135,-149.356],[85.432,-149.554],[85.629,-148.573],[86.125,-148.374],[86.514,-148.573],[86.954,-148.573],[86.954,-149.752],[88.674,-149.752],[88.674,-150.144],[88.578,-150.536]],\"c\":true},\"ix\":2},\"nm\":\"Path 11\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":11,\"ty\":\"sh\",\"ix\":12,\"ks\":{\"a\":0,\"k\":{\"i\":[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],\"o\":[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],\"v\":[[-210.578,-149.554],[-210.578,-148.374],[-209.105,-148.374],[-208.71,-147.291],[-207.533,-147.786],[-208.024,-149.161],[-209.303,-149.554]],\"c\":true},\"ix\":2},\"nm\":\"Path 12\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":12,\"ty\":\"sh\",\"ix\":13,\"ks\":{\"a\":0,\"k\":{\"i\":[[0.127,-0.027],[0.17,-0.025],[0,0],[0.126,0],[0,0],[-0.048,-0.1],[-0.121,-0.072],[-0.17,0],[-0.147,0.027],[-0.147,0.027],[-0.27,0.05],[0.024,0.118],[0.074,0.17]],\"o\":[[-0.17,0.049],[0,0],[-0.103,0],[0,0],[0.029,0.144],[0.077,0.123],[0.124,0.076],[0.171,0],[0.146,-0.023],[0.272,-0.073],[-0.022,-0.122],[-0.047,-0.175],[-0.122,0.024]],\"v\":[[89.855,-149.161],[89.365,-148.966],[88.973,-148.966],[88.674,-148.864],[88.28,-148.864],[88.28,-148.473],[88.478,-148.081],[88.921,-148.081],[89.365,-148.081],[89.757,-148.278],[90.544,-148.473],[90.544,-148.864],[90.249,-149.257]],\"c\":true},\"ix\":2},\"nm\":\"Path 13\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":13,\"ty\":\"sh\",\"ix\":14,\"ks\":{\"a\":0,\"k\":{\"i\":[[0.106,-0.016],[0.149,-0.072],[0.126,-0.073],[0.171,-0.075],[0.121,-0.023],[0.223,0.021],[0.187,-0.009],[0.121,-0.022],[0.06,0.008],[0.067,-0.026],[0.143,-0.075],[0.174,-0.076],[0.067,0.013],[0.06,-0.024],[0.12,-0.027],[0.101,-0.172],[0.072,-0.168],[0.024,-0.099],[-0.243,-0.153],[-0.074,-0.126],[-0.024,-0.124],[0,-0.145],[-0.024,-0.227],[0,0],[-0.147,-0.024],[-0.067,0.006],[-0.063,-0.012],[-0.124,-0.121],[-0.097,-0.171],[-1.007,-0.025],[-0.148,0],[0,0],[-0.271,0.025],[-0.12,0.027],[-0.273,0.149],[0,0.172],[0,0],[0.221,0.029],[0.147,0.074],[-0.099,0.268],[-0.075,0.148],[-0.095,0.148],[0,0.242],[0.119,0.246],[0.095,0.124],[0.15,0.078],[0.393,0],[0.194,-0.076],[0.124,-0.076],[0.123,-0.097],[0.175,-0.072],[0.15,0],[0.295,0],[-0.099,0.124],[-0.123,0.122],[0,0],[0.492,0],[0.193,0]],\"o\":[[-0.148,0.024],[-0.147,0.073],[-0.147,0.1],[-0.122,0.049],[-0.269,0.059],[-0.146,-0.014],[-0.144,0],[-0.057,0.012],[-0.075,-0.011],[-0.172,0.075],[-0.147,0.074],[-0.061,0.025],[-0.068,-0.011],[-0.12,0.049],[-0.201,0.072],[-0.101,0.149],[-0.027,0.099],[0.293,0.097],[0.126,0.067],[0.073,0.121],[0.022,0.123],[0,0.222],[0,0],[0.174,0],[0.06,0.012],[0.068,-0.005],[0.17,0.05],[0.144,0.148],[1.01,-0.022],[0.146,0],[0,0],[0.271,0],[0.147,0],[0.296,-0.053],[0.123,-0.072],[0,0],[-0.218,0],[-0.174,-0.021],[0.027,-0.292],[0.048,-0.153],[0.074,-0.172],[0.128,-0.195],[0,-0.299],[-0.077,-0.147],[-0.099,-0.123],[-0.317,-0.197],[-0.222,0],[-0.15,0.048],[-0.122,0.074],[-0.144,0.098],[-0.125,0.052],[-0.295,0.025],[0.074,-0.122],[0.123,-0.145],[0,0],[-0.489,0],[-0.23,0],[-0.096,0]],\"v\":[[159.658,-149.161],[159.264,-148.966],[158.868,-148.769],[158.576,-148.374],[158.184,-148.278],[157.488,-148.26],[156.999,-148.278],[156.61,-148.179],[156.433,-148.183],[156.215,-148.179],[155.822,-147.882],[155.527,-147.489],[155.331,-147.489],[155.134,-147.489],[154.743,-147.39],[154.347,-146.997],[154.053,-146.607],[154.053,-146.308],[154.837,-146.011],[155.233,-145.818],[155.233,-145.425],[155.233,-145.036],[155.331,-144.44],[158.845,-144.44],[159.264,-144.344],[159.457,-144.344],[159.658,-144.344],[159.952,-143.951],[160.246,-143.458],[162.803,-143.557],[163.196,-143.458],[163.809,-143.458],[164.473,-143.458],[164.866,-143.557],[165.654,-143.852],[165.848,-144.222],[165.848,-145.036],[165.261,-145.036],[164.866,-145.231],[164.965,-146.011],[165.162,-146.407],[165.454,-146.802],[165.848,-147.291],[165.559,-147.982],[165.36,-148.374],[165.063,-148.769],[164.081,-148.864],[163.493,-148.864],[163.098,-148.669],[162.899,-148.278],[162.507,-147.982],[162.113,-147.982],[161.329,-147.982],[161.525,-148.374],[161.92,-148.669],[161.818,-149.136],[160.566,-149.161],[159.957,-149.182]],\"c\":true},\"ix\":2},\"nm\":\"Path 14\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":14,\"ty\":\"sh\",\"ix\":15,\"ks\":{\"a\":0,\"k\":{\"i\":[[0.128,0],[0,0],[0,0],[0.049,-0.468],[-0.641,-0.074],[0,0],[-0.148,-0.101],[-0.173,-0.052],[-0.148,0],[-0.121,0.022],[-0.148,0.099],[-0.078,0.125],[0,0.145],[0,0],[0.048,0.148],[0.124,0],[0.125,0.025],[0.148,0.05],[0.17,0.05],[0.176,0.024],[0,0],[0.15,0]],\"o\":[[0,0],[0,0],[0.023,0.468],[0.636,0.071],[0,0],[0.176,0.026],[0.148,0.099],[0.122,0.022],[0.145,0],[0.172,-0.052],[0.122,-0.07],[0.068,-0.121],[0,0],[0,-0.171],[-0.146,0],[-0.121,0],[-0.148,-0.023],[-0.173,-0.048],[-0.174,-0.048],[0,0],[-0.144,0],[-0.124,0]],\"v\":[[150.116,-148.374],[149.727,-148.374],[149.384,-148.374],[149.384,-147.193],[151.008,-147.096],[151.394,-147.096],[151.793,-146.802],[151.99,-146.308],[152.383,-146.308],[152.774,-146.308],[153.168,-146.607],[153.566,-146.802],[153.566,-147.193],[153.566,-147.589],[153.365,-147.982],[152.97,-147.882],[152.577,-147.982],[152.184,-148.179],[151.696,-148.278],[151.199,-148.473],[150.808,-148.473],[150.415,-148.573]],\"c\":true},\"ix\":2},\"nm\":\"Path 15\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":15,\"ty\":\"sh\",\"ix\":16,\"ks\":{\"a\":0,\"k\":{\"i\":[[0.031,-0.012],[0.098,-0.199],[0,-0.295],[0,0],[-0.025,-0.127],[0,-0.271],[0.171,-0.196],[0.246,0],[0.149,0.172],[0.049,0.32],[0,0],[0,0.152],[0,0],[0.028,0.267],[0,0],[0.245,-0.199],[0.097,-0.125],[0.125,-0.099],[0.198,0],[0,0],[0,0],[-0.146,0.072],[-0.067,-0.011],[-0.062,0.025],[-0.172,0.072],[0,0],[0.062,0.008],[0.068,-0.026],[0.146,-0.075],[0.124,-0.076],[0.097,-0.127],[0,0],[0.171,-0.025],[0.315,-0.05],[0.148,-0.047],[-0.098,-0.269],[-0.15,-0.123],[-0.173,-0.023],[-0.221,0.02],[-0.185,-0.009],[-0.145,-0.022],[0.05,-0.124],[0.052,-0.124],[0,-0.197],[-0.068,-0.198],[-0.069,-0.144],[0,-0.219],[0.099,-0.246],[0.12,0.078],[0.097,0.124],[0.052,0.123],[0.123,0.097],[0.173,0.077],[0.147,0.052],[0.071,-0.011],[0.067,0.013],[-0.081,-0.319],[-0.03,-0.122],[-0.023,-0.121],[-0.147,-0.147],[-0.201,-0.097],[-0.367,0],[-0.177,0],[0,0.297],[0,0.146],[-0.094,0.007],[-0.168,-0.134],[-0.195,-0.247],[-0.149,-0.096],[-0.149,-0.025],[-0.295,0],[0,0],[-0.124,0.072],[-0.072,0.147],[-0.072,0.124],[-0.148,0.1],[-0.075,-0.016],[-0.058,0.022],[-0.148,0.045],[0,0.15],[0,0],[0,0],[-0.044,-0.17],[-0.02,-0.121],[-0.025,-0.295],[0,0],[0,0],[0,0],[-0.05,-0.344],[-0.024,-0.047],[0.146,-0.027],[0.345,0.022],[0,0],[0.145,0],[0.269,-0.049],[0.148,-0.052],[0.144,-0.023],[0.224,0.022],[0.217,-0.021],[0.392,-0.268],[0,-0.172],[0,0],[-0.468,-0.022],[0,0],[-0.148,0],[-0.271,0],[-0.344,0.149],[-0.29,0.148],[-0.248,0],[0,0],[-0.123,-0.048],[-0.098,-0.128],[0.178,-0.049],[0.06,0.009],[0.067,-0.027],[0.126,-0.048],[0.15,-0.096],[0.245,-0.029],[0.22,0],[0.539,-0.028],[0.124,-0.028],[0.148,-0.052],[0.074,-0.097],[0,-0.151],[-0.048,-0.122],[-0.32,-0.125],[-0.147,0],[-0.125,0.006],[-0.144,-0.01],[-0.123,-0.021],[-0.272,-0.195],[-0.101,-0.145],[-0.069,-0.128],[-0.094,-0.148],[-0.224,-0.295],[0,0],[-0.049,0.096],[-0.123,0.123],[-0.121,0.075],[-0.17,0.27],[-0.023,0.125],[-0.023,0.347],[-0.048,0.149],[-0.2,0.099],[-0.175,0],[-0.298,0],[0,0],[-0.274,0.075],[-0.269,0.172],[0.027,0.198],[0,0.152],[0,0.176],[0,0.148],[0,0.171],[0,0],[0.049,-0.197],[0,-0.342],[0,-0.149],[-0.3,-0.027],[-0.124,-0.096],[-0.027,-0.172],[0,-0.147],[0.099,-0.27],[0.122,-0.096],[0,-0.416],[0,-0.172],[0,0],[-0.442,0.268],[-0.345,0],[-0.099,-0.148],[0,-0.123],[0,-0.296],[0,0],[-0.079,0.146],[-0.048,0.12],[-0.047,0.145],[0,0],[0,0],[0,0],[0.517,0.05],[0.149,0],[0.367,0.022],[0,0.365],[0,0.146],[0,0],[0.441,0.392],[0.127,0.076],[0.102,0.099],[0.074,0.122],[0.097,0.07],[0.317,0.047],[0.122,0.047],[0.12,0.125],[0.252,0.197],[0.123,0.019],[0.147,0],[0.122,-0.028],[0.295,0],[0.272,0.073],[0.071,-0.006],[0.058,0.01],[0.152,0.075],[0,0],[0.209,0],[0.223,0.022],[0.146,0.073],[-0.047,0.126],[-0.124,0.367],[-0.027,0.119],[0,0],[0.061,0.008],[0.039,0]],\"o\":[[-0.194,0.098],[-0.123,0.243],[0,0],[0,0.145],[0.049,0.248],[0,0.272],[-0.146,0.175],[-0.246,0],[-0.196,-0.245],[0,0],[0,-0.149],[0,0],[-0.025,-0.274],[0,0],[-0.295,0.147],[-0.119,0.1],[-0.098,0.124],[-0.121,0.096],[0,0],[0,0],[0.099,-0.098],[0.061,-0.023],[0.069,0.013],[0.172,-0.076],[0,0],[-0.056,0.012],[-0.074,-0.011],[-0.171,0.075],[-0.125,0.074],[-0.124,0.072],[0,0],[-0.169,0],[-0.347,0.048],[-0.151,0.026],[0.024,0.296],[0.072,0.198],[0.144,0.121],[0.266,0.058],[0.147,-0.013],[0.149,0],[0,0.15],[-0.047,0.12],[-0.073,0.168],[0,0.223],[0.076,0.169],[0.099,0.172],[0,0.272],[-0.146,-0.07],[-0.126,-0.07],[-0.078,-0.1],[-0.072,-0.172],[-0.121,-0.097],[-0.148,-0.053],[-0.069,-0.026],[-0.059,0.009],[0.148,0.297],[0.023,0.121],[0.023,0.124],[0.072,0.198],[0.147,0.15],[0.316,0.147],[0.172,0],[-0.029,-0.292],[0,-0.15],[0.102,0.009],[0.195,-0.015],[0.244,0.197],[0.101,0.149],[0.122,0.073],[0.273,0.072],[0,0],[0.123,0],[0.149,-0.098],[0.075,-0.124],[0.075,-0.147],[0.052,-0.037],[0.067,0.014],[0.146,-0.048],[-0.025,-0.147],[0,0],[0,0],[0.095,0.145],[0.028,0.123],[0.056,0.273],[0,0],[0,0],[0,0],[0,0.344],[0,0.071],[-0.073,0.147],[-0.319,0.074],[0,0],[-0.151,0],[-0.297,0],[-0.145,0.026],[-0.148,0.046],[-0.262,0.056],[-0.177,-0.016],[-0.491,0.049],[-0.125,0.073],[0,0],[0.467,-0.096],[0,0],[0.149,0],[0.271,0.023],[0.391,0],[0.295,-0.121],[0.197,-0.099],[0,0],[0.146,0],[0.147,0.072],[-0.149,0.094],[-0.053,0.011],[-0.076,-0.01],[-0.125,0.048],[-0.169,0.052],[-0.193,0.148],[-0.222,0.027],[-0.544,-0.028],[-0.147,0],[-0.145,0.02],[-0.126,0.047],[-0.075,0.099],[0,0.145],[0.149,0.319],[0.124,0.049],[0.151,0.013],[0.121,-0.006],[0.144,0],[0.32,0.075],[0.147,0.099],[0.072,0.124],[0.097,0.145],[0.199,0.318],[0,0],[0.024,-0.122],[0.099,-0.146],[0.096,-0.097],[0.269,-0.174],[0.049,-0.096],[0.078,-0.316],[0,-0.172],[0.076,-0.196],[0.146,-0.077],[0.293,-0.024],[0,0],[0.296,0],[0.316,-0.099],[-0.075,-0.171],[0,-0.147],[0,-0.17],[0,-0.147],[0,-0.167],[0,0],[-0.025,0.22],[-0.074,0.322],[0,0.145],[0.291,0],[0.196,0],[0.122,0.1],[0.026,0.121],[0,0.296],[-0.052,0.149],[-0.293,0.273],[0,0.173],[0,0],[0.541,0],[0.27,-0.149],[0.196,0],[0.05,0.097],[0.026,0.27],[0,0],[0.123,-0.099],[0.051,-0.123],[0.07,-0.15],[0,0],[0,0],[0,0],[-0.298,-0.393],[-0.148,0],[-0.368,0],[-0.025,-0.372],[0,-0.151],[0,0],[0,-0.589],[-0.099,-0.073],[-0.121,-0.074],[-0.095,-0.098],[-0.048,-0.1],[-0.246,-0.222],[-0.125,0],[-0.172,-0.07],[-0.222,-0.22],[-0.097,-0.077],[-0.125,-0.028],[-0.148,0],[-0.271,0.045],[-0.292,0],[-0.064,-0.016],[-0.064,0.006],[-0.149,-0.03],[0,0],[-0.184,0.039],[-0.222,0],[-0.171,-0.029],[0.05,-0.123],[0.172,-0.34],[0.023,-0.127],[0,0],[-0.056,0.013],[-0.04,-0.006],[-0.034,0]],\"v\":[[8.65,-148.278],[8.258,-147.882],[8.06,-147.096],[8.06,-146.703],[8.16,-146.308],[8.456,-145.674],[8.16,-145.036],[7.57,-144.736],[6.98,-144.935],[6.686,-145.818],[6.686,-146.211],[6.587,-146.607],[6.587,-146.997],[6.484,-147.684],[5.704,-147.786],[4.915,-147.39],[4.719,-146.997],[4.324,-146.703],[3.906,-146.407],[2.654,-146.407],[2.654,-147.096],[2.85,-147.489],[3.046,-147.489],[3.245,-147.489],[3.639,-147.786],[3.54,-148.179],[3.362,-148.183],[3.143,-148.179],[2.753,-147.882],[2.359,-147.684],[2.165,-147.291],[-0.371,-147.291],[-0.784,-147.193],[-1.667,-147.096],[-2.064,-146.903],[-1.966,-146.114],[-1.572,-145.719],[-1.279,-145.327],[-0.587,-145.309],[-0.1,-145.327],[0.294,-145.231],[0.294,-144.833],[0.195,-144.44],[-0.194,-144.148],[-0.1,-143.557],[0.294,-143.262],[0.393,-142.674],[0.195,-141.985],[-0.194,-142.183],[-0.589,-142.377],[-0.689,-142.771],[-0.884,-143.262],[-1.279,-143.557],[-1.667,-143.755],[-1.875,-143.76],[-2.064,-143.755],[-1.667,-142.966],[-1.667,-142.575],[-1.572,-142.183],[-1.18,-141.789],[-0.784,-141.394],[0.122,-141.099],[0.544,-141.2],[0.493,-141.985],[0.544,-142.377],[0.837,-142.383],[1.378,-142.281],[1.671,-141.492],[2.065,-141.2],[2.458,-141.002],[3.245,-141.002],[3.639,-141.002],[4.031,-141.002],[4.324,-141.394],[4.324,-141.789],[4.621,-142.183],[4.82,-142.188],[5.014,-142.183],[5.409,-142.377],[5.307,-142.771],[5.307,-143.359],[6.098,-143.458],[6.484,-143.166],[6.484,-142.771],[6.587,-141.985],[8.06,-141.985],[8.846,-142.575],[9.242,-142.281],[9.242,-141.394],[9.438,-141.295],[9.242,-140.903],[8.355,-141.002],[7.867,-141.002],[7.474,-141.099],[6.686,-141.099],[6.293,-140.903],[5.898,-140.708],[5.198,-140.695],[4.621,-140.708],[3.443,-140.314],[3.341,-139.894],[3.341,-139.036],[4.523,-139.234],[4.915,-139.234],[5.307,-139.132],[6,-139.036],[6.98,-139.234],[7.764,-139.722],[8.355,-140.018],[8.555,-140.018],[8.945,-139.92],[9.142,-139.525],[8.846,-139.132],[8.674,-139.138],[8.456,-139.132],[8.06,-139.036],[7.764,-138.643],[7.177,-138.346],[6.587,-138.443],[5.211,-138.443],[4.816,-138.443],[4.424,-138.247],[4.031,-138.15],[3.934,-137.757],[4.031,-137.364],[4.719,-136.675],[5.112,-136.675],[5.513,-136.674],[5.898,-136.675],[6.293,-136.58],[7.079,-136.185],[7.474,-135.891],[7.667,-135.494],[7.961,-135.102],[8.555,-134.317],[8.945,-134.416],[8.945,-134.808],[9.242,-135.201],[9.634,-135.398],[10.421,-135.891],[10.518,-136.284],[10.518,-137.167],[10.715,-137.562],[11.111,-137.953],[11.504,-138.15],[12.241,-138.15],[12.241,-140.115],[12.98,-140.115],[13.764,-140.607],[13.469,-141.002],[13.516,-141.372],[13.469,-141.789],[13.568,-142.183],[13.516,-142.622],[16.319,-142.622],[16.319,-142.083],[16.023,-141.271],[16.124,-140.903],[16.91,-140.903],[17.402,-140.708],[17.797,-140.411],[17.797,-140.018],[17.698,-139.234],[17.303,-139.036],[16.714,-138.127],[16.811,-137.658],[17.672,-137.658],[18.876,-138.346],[19.661,-138.739],[20.056,-138.443],[20.056,-138.051],[20.056,-137.265],[21.137,-137.265],[21.533,-137.463],[21.632,-137.854],[21.824,-138.247],[24.087,-138.247],[24.876,-138.443],[24.973,-138.84],[23.888,-139.624],[23.495,-139.525],[22.561,-139.575],[22.516,-140.507],[22.561,-140.903],[20.056,-140.903],[19.76,-142.377],[19.366,-142.477],[18.971,-142.674],[18.777,-143.065],[18.681,-143.458],[17.797,-143.657],[17.402,-143.657],[17.01,-143.951],[16.609,-144.736],[16.221,-144.833],[15.828,-144.935],[15.436,-144.833],[14.794,-144.44],[14.057,-144.637],[13.85,-144.64],[13.665,-144.637],[13.344,-144.935],[13.344,-145.909],[12.781,-145.916],[12.19,-145.916],[11.797,-146.114],[11.893,-146.508],[12.487,-147.291],[12.487,-147.684],[9.044,-148.278],[8.867,-148.281],[8.747,-148.294]],\"c\":true},\"ix\":2},\"nm\":\"Path 16\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":16,\"ty\":\"sh\",\"ix\":17,\"ks\":{\"a\":0,\"k\":{\"i\":[[0,0],[0.171,-0.049],[0.174,-0.076],[0.123,-0.075],[0.125,-0.098],[0.095,-0.146],[0.075,-0.149],[0.074,-0.123],[0.124,-0.099],[0.073,0.018],[0.048,-0.036],[0.097,-0.146],[0,-0.126],[0.097,-0.269],[0.072,-0.148],[0.12,-0.073],[0.149,-0.073],[0.073,-0.122],[0.051,-0.172],[0.022,-0.196],[0,-0.199],[-0.245,0],[-0.321,0.273],[-0.146,0.148],[-0.199,0.073],[-0.122,0.027],[-0.196,0],[-0.148,-0.025],[0,0],[-0.173,0.073],[-0.148,0.024],[-0.147,0],[-0.292,0],[-0.146,0.024],[-0.248,0.026],[-0.395,0],[-0.194,0.17],[-0.045,0.147],[0,0.146],[0,0.174],[0,0],[0,0],[0.046,0.32],[0.046,0.098],[0.148,0.069],[0.127,0.026],[0.491,0],[0.146,-0.026],[0.124,-0.096],[0.221,0],[0,0],[0.15,0.073],[-0.122,0.15],[-0.098,0.17],[-0.026,0.121],[0.122,0.049],[0.124,0.049],[0.22,0]],\"o\":[[-0.195,0],[-0.176,0.048],[-0.123,0.049],[-0.149,0.075],[-0.124,0.098],[-0.075,0.125],[-0.05,0.12],[-0.072,0.148],[-0.051,0.038],[-0.073,-0.019],[-0.146,0.099],[-0.077,0.127],[-0.025,0.272],[-0.05,0.145],[-0.075,0.147],[-0.152,0.098],[-0.118,0.075],[-0.095,0.149],[-0.051,0.17],[-0.025,0.197],[0.219,0.097],[0.445,0],[0.147,-0.124],[0.147,-0.149],[0.124,-0.053],[0.174,-0.027],[0.172,0],[0,0],[0.194,0],[0.144,-0.049],[0.121,-0.028],[0.294,-0.028],[0.148,0],[0.249,-0.028],[0.393,-0.046],[0.293,0],[0.122,-0.101],[0.053,-0.119],[0,-0.171],[0,0],[0,0],[0,-0.344],[0,-0.124],[-0.079,-0.126],[-0.124,-0.053],[-0.461,-0.121],[-0.174,0],[-0.148,0.026],[-0.147,0.12],[0,0],[-0.197,0],[0.15,-0.15],[0.122,-0.145],[0.049,-0.122],[-0.127,-0.024],[-0.122,-0.048],[-0.196,-0.076],[0,0]],\"v\":[[170.175,-146.308],[169.785,-146.011],[169.29,-145.916],[168.897,-145.818],[168.602,-145.425],[168.212,-145.131],[168.012,-144.736],[167.915,-144.344],[167.719,-143.951],[167.52,-143.95],[167.324,-143.951],[166.933,-143.657],[166.933,-143.262],[166.933,-142.477],[166.735,-142.083],[166.342,-141.887],[165.848,-141.688],[165.454,-141.492],[165.162,-141.099],[165.162,-140.607],[165.162,-140.115],[165.947,-139.432],[166.933,-140.018],[167.324,-140.411],[167.719,-140.804],[168.111,-140.903],[168.602,-141.002],[168.996,-140.804],[171.136,-140.804],[171.553,-141.099],[171.947,-141.295],[172.339,-141.295],[173.124,-141.295],[173.517,-141.295],[174.11,-141.593],[175.094,-141.492],[175.876,-141.688],[176.072,-142.083],[176.171,-142.45],[176.072,-142.87],[176.072,-143.359],[174.405,-143.359],[174.405,-144.244],[174.405,-144.637],[174.009,-144.833],[173.613,-144.935],[172.389,-145.131],[171.947,-145.131],[171.749,-144.736],[171.358,-144.344],[171.158,-144.344],[170.764,-144.637],[171.158,-145.036],[171.553,-145.327],[171.553,-145.719],[171.158,-145.818],[170.764,-145.916],[170.373,-146.308]],\"c\":true},\"ix\":2},\"nm\":\"Path 17\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":17,\"ty\":\"sh\",\"ix\":18,\"ks\":{\"a\":0,\"k\":{\"i\":[[-0.012,-0.034],[0,0]],\"o\":[[0,0],[-0.018,0.008]],\"v\":[[13.344,-146.041],[13.344,-146.114]],\"c\":true},\"ix\":2},\"nm\":\"Path 18\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":18,\"ty\":\"sh\",\"ix\":19,\"ks\":{\"a\":0,\"k\":{\"i\":[[0,0],[-0.008,0.002],[0.02,0.057]],\"o\":[[0.009,-0.002],[0.032,0],[0,0]],\"v\":[[13.344,-145.909],[13.368,-145.916],[13.344,-146.041]],\"c\":true},\"ix\":2},\"nm\":\"Path 19\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":19,\"ty\":\"sh\",\"ix\":20,\"ks\":{\"a\":0,\"k\":{\"i\":[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],\"o\":[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],\"v\":[[-217.758,-145.818],[-220.706,-145.231],[-220.02,-144.244],[-218.935,-144.344],[-217.855,-143.852],[-217.559,-142.674],[-219.231,-142.674],[-218.642,-141.593],[-217.559,-141.688],[-216.774,-141.002],[-215.693,-141.492],[-214.709,-141.394],[-212.35,-141.2],[-210.578,-139.722],[-208.807,-139.33],[-208.318,-140.214],[-208.613,-141.394],[-209.698,-142.183],[-210.186,-143.359],[-211.659,-143.951],[-212.843,-144.637],[-214.019,-144.44],[-215.102,-145.231],[-216.58,-146.011]],\"c\":true},\"ix\":2},\"nm\":\"Path 20\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":20,\"ty\":\"sh\",\"ix\":21,\"ks\":{\"a\":0,\"k\":{\"i\":[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],\"o\":[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],\"v\":[[-206.844,-143.359],[-206.056,-142.281],[-205.464,-140.507],[-203.699,-140.214],[-202.027,-140.411],[-200.454,-140.708],[-200.061,-141.492],[-201.73,-142.674],[-204.091,-142.87],[-205.96,-144.05]],\"c\":true},\"ix\":2},\"nm\":\"Path 21\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":21,\"ty\":\"sh\",\"ix\":22,\"ks\":{\"a\":0,\"k\":{\"i\":[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0.494,0.099],[0,0]],\"o\":[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[-0.492,-0.096],[0,0]],\"v\":[[-231.717,-143.359],[-233.29,-142.966],[-234.666,-141.789],[-232.897,-141.789],[-230.535,-141.789],[-227.686,-141.789],[-228.08,-142.87],[-229.851,-143.458]],\"c\":true},\"ix\":2},\"nm\":\"Path 22\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":22,\"ty\":\"sh\",\"ix\":23,\"ks\":{\"a\":0,\"k\":{\"i\":[[0.13,0],[0,0],[0.17,-0.077],[0,0],[-0.12,-0.025],[-0.06,0.009],[-0.065,-0.03],[-0.147,-0.1],[-0.174,-0.075],[-0.344,0],[0,0],[-0.147,0],[0.05,0.12],[0.074,0.145],[0.101,0.073],[0.121,0.024],[0.176,0.022],[0,0],[0.151,0],[0.051,0]],\"o\":[[0,0],[-0.169,0.026],[0,0],[0.147,0.027],[0.053,0.011],[0.075,-0.011],[0.173,0.073],[0.151,0.097],[0.295,0.147],[0,0],[0.149,0],[-0.022,-0.126],[-0.097,-0.175],[-0.075,-0.126],[-0.1,-0.072],[-0.169,-0.047],[0,0],[-0.146,-0.026],[-0.057,-0.007],[-0.102,0]],\"v\":[[177.745,-141.593],[177.35,-141.593],[176.96,-141.295],[177.056,-140.903],[177.451,-140.804],[177.624,-140.81],[177.842,-140.804],[178.236,-140.507],[178.533,-140.115],[179.441,-140.018],[179.908,-140.018],[180.301,-140.115],[180.301,-140.507],[179.908,-140.804],[179.908,-141.2],[179.517,-141.295],[179.022,-141.394],[178.631,-141.394],[178.236,-141.593],[178.077,-141.602]],\"c\":true},\"ix\":2},\"nm\":\"Path 23\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":23,\"ty\":\"sh\",\"ix\":24,\"ks\":{\"a\":0,\"k\":{\"i\":[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],\"o\":[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],\"v\":[[-238.795,-141.002],[-238.402,-140.018],[-237.615,-139.33],[-236.139,-139.234],[-236.338,-140.507],[-237.812,-141.099]],\"c\":true},\"ix\":2},\"nm\":\"Path 24\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":24,\"ty\":\"sh\",\"ix\":25,\"ks\":{\"a\":0,\"k\":{\"i\":[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],\"o\":[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],\"v\":[[-229.454,-140.607],[-231.914,-140.607],[-233.389,-140.214],[-234.762,-139.432],[-233.681,-137.658],[-232.7,-137.463],[-231.62,-137.854],[-229.454,-137.953],[-228.965,-138.739],[-229.948,-139.624],[-228.965,-139.722],[-228.278,-140.607]],\"c\":true},\"ix\":2},\"nm\":\"Path 25\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":25,\"ty\":\"sh\",\"ix\":26,\"ks\":{\"a\":0,\"k\":{\"i\":[[0,0],[0,0],[0,0],[0,0],[0,0]],\"o\":[[0,0],[0,0],[0,0],[0,0],[0,0]],\"v\":[[-215.693,-139.92],[-215.398,-138.84],[-213.825,-138.739],[-212.546,-139.132],[-213.825,-140.018]],\"c\":true},\"ix\":2},\"nm\":\"Path 26\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":26,\"ty\":\"sh\",\"ix\":27,\"ks\":{\"a\":0,\"k\":{\"i\":[[-0.294,-0.593],[0,0],[0,0],[0,0],[0,0]],\"o\":[[0.296,0.589],[0,0],[0,0],[0,0],[0,0]],\"v\":[[-221.198,-138.443],[-219.527,-136.675],[-218.445,-137.167],[-219.723,-138.84],[-221.296,-139.722]],\"c\":true},\"ix\":2},\"nm\":\"Path 27\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":27,\"ty\":\"sh\",\"ix\":28,\"ks\":{\"a\":0,\"k\":{\"i\":[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],\"o\":[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],\"v\":[[-199.372,-139.624],[-201.338,-139.624],[-202.42,-138.739],[-202.42,-137.953],[-200.061,-138.051],[-198.782,-138.346],[-197.212,-138.643],[-197.212,-139.624]],\"c\":true},\"ix\":2},\"nm\":\"Path 28\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":28,\"ty\":\"sh\",\"ix\":29,\"ks\":{\"a\":0,\"k\":{\"i\":[[0,0],[0,0],[0,0],[0,0],[0.393,0.296]],\"o\":[[0,0],[0,0],[0,0],[0,0],[0,0]],\"v\":[[-194.161,-138.84],[-195.048,-137.463],[-192.194,-137.068],[-190.624,-137.757],[-191.903,-139.234]],\"c\":true},\"ix\":2},\"nm\":\"Path 29\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":29,\"ty\":\"sh\",\"ix\":30,\"ks\":{\"a\":0,\"k\":{\"i\":[[0,0],[0.149,-0.052],[0.294,-0.05],[0.121,0],[0.442,-0.169],[0.122,-0.048],[0.148,-0.098],[0.022,-0.196],[0.022,-0.12],[0.048,-0.121],[0.12,-0.125],[0.294,-0.15],[-0.123,-0.12],[-0.121,-0.096],[0,0],[0,0],[0.219,-0.171],[0.155,0.002],[0.127,-0.109],[0.048,-0.094],[0.123,-0.099],[0.148,-0.074],[0.419,0],[0.249,0.046],[0.149,0.073],[0.144,0.096],[0.145,0.075],[0.122,0.024],[0.151,0],[0.392,0.024],[0,0],[0.344,0],[0.172,-0.023],[0.058,0.002],[0.066,-0.099],[0.075,-0.165],[0.05,-0.175],[0.025,-0.126],[0.121,-0.072],[0.221,0],[0,0],[0.371,-0.172],[0.173,-0.076],[0.296,-0.122],[0.124,-0.048],[0.247,0],[0.121,0.026],[0.149,0.051],[0.172,0],[0.296,-0.099],[0.174,-0.071],[0.268,-0.151],[0.198,-0.048],[0.124,-0.024],[0.194,0],[0.372,-0.1],[0.268,-0.195],[0.073,-0.17],[0.1,-0.148],[0.124,-0.072],[0.081,0.01],[0.054,-0.008],[0.196,0],[0.125,-0.018],[0.122,-0.025],[0.117,-0.051],[0,-0.22],[-0.203,-0.273],[-0.127,-0.072],[-0.292,-0.147],[-0.074,-0.125],[0,-0.145],[0,0],[0.075,-0.172],[0.123,0.025],[0.493,0],[0.271,-0.075],[0.122,-0.073],[0.147,-0.101],[0.171,-0.079],[0.146,0],[0.12,0.021],[0.244,0],[0.417,0],[0.271,-0.028],[0.125,-0.024],[0.167,0],[0,0],[0.146,-0.046],[0.096,-0.079],[0.05,-0.1],[0.073,-0.148],[0,0],[0.249,-0.222],[-0.077,-0.122],[-0.147,-0.147],[-0.119,-0.146],[-0.022,-0.173],[-0.022,-0.294],[-0.022,-0.125],[-0.049,-0.145],[-0.096,-0.073],[-0.392,0],[0,0],[-0.169,-0.023],[-0.153,-0.048],[-0.126,-0.122],[-0.05,-0.199],[0,-0.147],[0,0],[0.421,0],[0.198,0.094],[0.122,0.075],[0.145,0.075],[0.066,-0.011],[0.061,0.026],[0.168,0.052],[0.121,0.05],[0.1,0.101],[0.079,0.123],[0.047,0.125],[0.126,0.094],[0,0],[0.246,0.218],[0.096,0.072],[0.3,0],[0.121,-0.029],[0.169,-0.048],[0.122,-0.025],[0.443,-0.097],[0,0],[-0.141,0],[-0.267,-0.022],[-0.125,-0.022],[-0.099,-0.146],[0,-0.195],[0,-0.17],[0.321,0.094],[0.126,0.052],[0.176,0.069],[0.243,0],[0,0],[0.096,-0.076],[0.074,-0.123],[0.047,-0.122],[0,-0.223],[-0.492,-0.075],[-0.123,0.006],[-0.151,-0.012],[-0.124,-0.02],[-0.394,-0.249],[-0.147,-0.078],[-0.122,-0.073],[-0.097,-0.125],[0,-0.169],[0.023,-0.173],[0.221,0.099],[0.148,-0.001],[0.121,0.035],[0.172,0.024],[0.067,-0.006],[0.062,0.013],[0.066,-0.006],[0.061,0.013],[0.171,0.048],[0.126,0.027],[0.182,-0.018],[0.223,0.039],[0.269,0.147],[0.071,0.175],[0,0.195],[0,0.15],[0,0],[-0.049,0.269],[-0.026,0.174],[0,0.149],[0.026,0.12],[0.048,0.123],[0.072,0.15],[0.05,0.125],[0.147,0.297],[0.174,-0.023],[0.063,0.006],[0.073,-0.01],[-0.026,-0.223],[0,-0.147],[0.02,-0.469],[0,-0.149],[0,0],[0.296,0],[0.197,0],[0.146,0],[0.069,-0.218],[0.102,-0.048],[0.15,-0.076],[0.124,-0.046],[0,-0.39],[0,0],[-0.391,-0.343],[-0.145,-0.321],[-0.025,-0.121],[0,-0.296],[0,-0.121],[0.073,-0.145],[0,-0.293],[0,0],[-0.024,-0.147],[-0.024,-0.174],[0,-0.148],[0,-0.171],[-0.024,-0.125],[-0.194,-0.27],[-0.169,0],[0,0],[-0.127,0.124],[-0.125,0.099],[-0.221,0],[0,0],[-0.122,-0.076],[-0.147,-0.099],[-0.295,-0.149],[-0.124,-0.073],[-0.098,-0.12],[-0.176,-0.271],[-0.269,-0.247],[-0.074,-0.146],[0,-0.196],[0.148,-0.247],[0.072,-0.148],[0,-0.193],[0,-0.171],[-0.057,0.009],[-0.068,-0.027],[0,0],[-0.17,-0.078],[-0.267,0.014],[-0.15,-0.008],[-0.143,-0.024],[0,0],[0.148,-0.023],[0.298,0],[0,0],[0.176,0.076],[0.148,0.072],[0.125,0.074],[0,0.392],[0,0],[0,0.151],[0.269,0.272],[0.073,0.149],[0.05,0.097],[0.15,0.097],[0.125,0.025],[0.172,0.025],[0.296,0],[0.47,-0.049],[0.126,-0.025],[0.146,-0.052],[0.124,-0.073],[0,-0.226],[0,-0.149],[-0.027,-0.121],[0,-0.394],[0.121,-0.375],[0.048,-0.124],[0.145,-0.121],[0.15,-0.098],[0.151,-0.174],[0.024,-0.174],[0,-0.392],[0.27,-0.073],[0.438,-0.249],[0.199,-0.269],[0.052,-0.099],[0.145,-0.103],[0.147,0],[0.273,0.075],[0.149,0.048],[0.122,0.047],[0.195,0],[0,0],[0,0],[-0.098,0.142],[-0.172,0.072],[-0.218,0],[-0.197,-0.025],[-0.149,-0.026],[-0.296,0],[-0.269,0.048],[-0.175,0.075],[-0.125,0.097],[-0.098,0.147],[-0.218,0.247],[-0.122,0.102],[-0.219,0.295],[-0.074,0.097],[-0.124,0.103],[-0.071,0.124],[-0.023,0.122],[-0.026,0.122],[-0.072,0.296],[-0.028,0.124],[-0.025,0.123],[0,0.173],[0,0.193],[0.297,0],[0.198,0.024],[0.095,0.048],[0.096,0.145],[0,0.221],[-0.05,0.393],[0,0.468],[0,0],[-0.053,0.269],[0,0.465],[0.027,0.124],[0.098,0.321],[0.024,0.123],[0.147,0.271],[0.074,0.148],[0,0.172],[0,0],[-0.296,0],[-0.148,0],[-0.047,0],[0,0],[0.37,0.098],[0.193,0.074],[0.123,0.022],[0.297,0],[0,0],[0.221,0],[0.344,-0.143],[0.176,-0.073],[0.146,-0.026],[0.145,0],[0.298,0],[0.147,-0.021],[0.025,-0.467],[0.025,-0.171],[0.171,-0.271],[0.124,-0.144],[0.128,-0.372],[0.073,-0.269],[0.171,-0.073],[0.122,-0.022],[0.151,0.015],[0.121,-0.009],[0,0],[0.121,-0.076],[0,-0.245],[0,0],[-0.096,-0.12],[-0.081,0.024],[-0.046,-0.034],[-0.151,-0.321],[0,-0.296],[0.194,-0.197],[0.096,-0.075],[0.125,-0.101],[0,-0.244],[-0.024,-0.294],[-0.298,-0.021],[-0.124,-0.07],[-0.126,-0.124],[-0.075,-0.174],[-0.052,-0.123],[-0.074,-0.121],[-0.119,-0.101],[-0.147,-0.099],[-0.097,-0.048],[-0.221,-0.245],[-0.075,-0.146],[0,-0.145],[0.024,-0.121],[0.125,-0.147],[0.123,-0.073],[0.121,0],[0,0],[0.273,0.048],[0.269,0.146],[0,0.566],[0.296,0],[0.364,0.242],[0.151,0.1],[0.171,0.076],[0.153,-0.02],[0.116,0.01],[0.147,0],[0.27,0.097],[0.097,0.173],[0.169,0.096],[0.122,0.049],[0.124,0.024],[0.172,0.076],[0.175,0],[0,0],[0.122,0.096],[0.117,0.097],[0.169,0],[0,0],[0.298,0.172],[0.272,0.174],[0.099,0.048],[0.126,0.072],[0.099,0.072],[0.145,0.122],[0.121,0.076],[0.077,-0.014],[0.051,0.012],[0.221,0],[0,0],[0.147,-0.073],[0,-0.221],[-0.076,-0.195],[-0.121,-0.145],[-0.025,-0.17],[-0.025,-0.122],[0,-0.195],[-0.299,-0.026],[-0.124,0],[-0.122,-0.053],[-0.098,-0.121],[-0.05,-0.12],[-0.046,-0.172],[-0.27,-0.148],[-0.1,-0.122],[0,-0.198],[0,-0.122],[0.049,-0.124],[0.324,-0.118],[0.145,0],[0,0],[0.098,-0.049],[0.074,-0.15],[0.049,-0.125],[0.075,-0.122],[0.121,-0.099],[0,0],[-0.024,0.294],[0,0.144],[0.02,0.293],[0.028,0.147],[0,0],[0.098,-0.076],[0.096,-0.124],[0.1,-0.121],[0.12,-0.123],[0.294,0],[0,0],[0.293,-0.022],[0.064,0.014],[0.103,-0.057],[0.122,-0.097],[0.172,-0.075],[0.169,0],[0,0],[0.149,0],[0,0],[0,0],[0.147,0],[0,0],[0,0],[0.123,0.121],[0.121,0.124],[0.123,0.074],[-0.025,0.147],[-0.025,0.126],[-0.147,0.296],[0,0],[0.101,-0.078],[0.148,-0.075],[0.122,-0.022],[0.126,0],[0.109,0.002],[0.185,-0.091],[0.147,-0.076],[0.294,-0.146],[0,0],[0.416,-0.194],[0.12,-0.097],[0.098,-0.073],[0.149,-0.049],[0.147,0],[0,0],[0.122,-0.024],[0.316,-0.101],[0.147,-0.124],[0.319,-0.194],[0.199,-0.025],[0.213,0.012],[0.32,-0.111],[0.15,-0.145],[-0.072,-0.124],[0,-0.247],[0.17,-0.174],[0.292,-0.145],[0.174,-0.049],[0.123,-0.02],[0.145,0],[0.198,-0.02],[0.247,0],[0,0],[0.145,0.098],[0.17,0.052],[0.099,0.146],[0.048,0.122],[0,0.272],[-0.025,0.366],[0,0],[0,0],[0.172,0.121],[0.099,0.075],[0.096,0.124],[0.097,0.149],[0.223,0],[0.293,0],[0,0],[0.197,0.072],[0.124,0.028],[0.345,0],[0,0],[0.15,0],[0.126,0],[0,0],[-0.269,-0.048],[-0.124,-0.023],[0,0],[0.074,-0.124],[0,-0.198],[0,-0.145],[-0.075,-0.102],[-0.1,-0.048],[-0.148,-0.075],[-0.097,-0.121],[0,-0.243],[0,0],[0,-0.173],[0,-0.123],[0,-0.469],[0,-0.073],[0.297,0.051],[0.101,0.075],[0.122,0.144],[0.075,0.097],[0.147,0.076],[0.175,0],[0.144,-0.021],[0.174,-0.029],[0.152,0],[0.341,0],[0.147,0],[0.05,-0.127],[0.073,-0.099],[0.146,-0.073],[0.127,-0.024],[0.271,-0.052],[0.176,-0.076],[0.125,-0.152],[0.122,-0.099],[0.171,-0.071],[0.211,-0.002],[0,-0.004],[-0.052,-0.269],[-0.073,-0.119],[-0.098,-0.098],[-0.126,-0.072],[-0.126,-0.076],[0,-0.245],[0.024,-0.222],[0.073,0],[0.294,0],[0.293,0.028],[0.271,0.026],[0,0],[0.144,0],[0.323,0.099],[0.174,0.047],[0.121,0.026],[0.066,-0.006],[0.062,0.014],[0.146,0.097],[0.075,0.172],[0,0],[0.119,-0.071],[0.15,-0.1],[0.064,0.015],[0.066,-0.04],[0,-0.244],[-0.147,-0.175],[-0.148,-0.123],[-0.078,-0.098],[-0.051,-0.121],[-0.048,-0.152],[0,0],[-0.315,-0.075],[-0.248,-0.198],[0,-0.217],[0.025,-0.171],[0,0],[0.144,-0.05],[0.144,0],[0.121,0.073],[0.074,0.101],[0.146,0.094],[0.466,0.075],[0.066,-0.006],[0.063,0.013],[0.173,0.27],[0.024,0.149],[0,0.149],[0,0.468],[0,0],[0,0],[0.098,0.59],[0.22,0.194],[0.248,-0.009],[0.175,0.048],[0.128,0.126],[0.097,0.197],[0.244,0.172],[0.179,-0.014],[0.128,0.032],[0.169,0.098],[0.294,0.15],[0,0],[-0.122,-0.053],[-0.125,-0.077],[-0.125,-0.073],[-0.268,-0.12],[-0.293,-0.121],[-0.15,-0.026],[-0.223,0.022],[-0.249,-0.036],[-0.122,-0.05],[-0.147,-0.098],[-0.345,0],[0,0],[-0.149,-0.048],[-0.124,-0.051],[-0.148,-0.072],[-0.124,-0.028],[-0.146,0],[-0.148,0],[-0.296,0],[0,0],[0,0],[-0.146,0.024],[-0.067,-0.006],[-0.061,0.013],[-0.124,0.024],[-0.32,0.073],[-0.146,0],[-0.271,0.074],[-0.145,0.08],[-0.117,0.095],[-0.075,0.146],[-0.05,0.147],[0,0.291],[0.047,0.471],[0.024,0.125],[0.171,0.27],[0.127,0.122],[0.196,0.073],[0.121,0.025],[0.199,0],[0.297,0],[0.274,0.069],[0.269,0.196],[0.123,0.099],[0.125,0.099],[0.127,0.1],[0.172,0.071],[0.067,-0.014],[0.061,0.025],[0,0],[0.146,0.076],[0.122,0.05],[0,0],[0.175,0.073],[0.124,0.021],[0.366,0],[0.364,-0.049],[0.223,0],[0,0],[0.171,0.075],[0.146,0.097],[0.246,0.274],[0,0],[0.098,-0.17],[0.146,-0.023],[0.145,0],[0,0],[0.168,0.097],[-0.05,0.148],[0,0.246],[0.026,0.049],[0.121,0.096],[0.078,0.124],[0.025,0.122],[0.025,0.196],[0,0],[0.125,-0.073],[0.217,0],[0.2,0.123],[0.123,0.072],[0.075,0.12],[0.296,0.019],[0.318,0.052],[0.123,0.026],[0,0],[-0.15,0],[-0.148,0],[-0.198,0],[0,0],[0.126,0.1],[0.169,0.027],[0.119,0],[0.342,0],[0.267,0.1],[0.123,0.097],[0.145,0.101],[0.121,0.047],[0,0],[0,0],[0.417,0],[0,0],[-0.074,0.123],[-0.069,0.174],[-0.024,0.099],[0,0],[0.099,-0.467],[0,-0.169],[0,0],[-0.024,-0.147],[0,0],[-0.019,0.149],[0,0.224],[0.125,0.17],[0.177,0],[0,0],[0,0],[0,0],[0.397,-0.12],[0.172,0],[0.122,0],[0.123,-0.048],[0,-0.2],[0.197,-0.244],[0.244,0],[0,0],[0.175,0.047],[0.144,0.097],[-0.098,0.123],[-0.123,0.123],[0,0],[0.468,-0.126],[0.172,-0.075],[0.051,-0.194],[0,-0.148],[-0.051,-0.147],[-0.194,-0.075],[-0.292,-0.026],[-0.269,-0.026],[0,0],[0,0],[0.196,0.026],[0.342,0],[0.273,0.052],[0.172,0],[0,0],[0.048,-0.418],[0.024,-0.125],[0.075,-0.151],[0.122,-0.099],[0.076,0.273],[0.072,0.096],[0.147,0.073],[0.067,-0.012],[0.061,0.026],[0.148,0.073],[0.151,0.097],[0.07,-0.013],[0.061,0.025],[0.393,0],[0.271,-0.026],[0,0],[0,-0.172],[0,-0.196],[0,-0.322],[0.02,-0.125],[0.121,-0.123],[0.248,0],[0.121,0.145],[0.02,0.124],[0.023,0.149],[0.023,0.15],[0.096,-0.124],[0.148,-0.098],[0.078,0.01],[0.056,-0.011],[0.295,-0.024],[0,0],[-0.147,-0.047],[-0.062,0.014],[-0.069,-0.039],[-0.072,-0.122],[0,-0.149],[0,0],[0.05,-0.15],[0.122,0.074],[0.196,0.027],[0.161,-0.016],[0.143,0.012],[0.171,0.049],[0.026,0.471],[0.048,0.149],[0.223,-0.051],[0,0],[0.175,0],[0.25,0],[0.365,-0.172],[-0.052,-0.118],[0,-0.168],[0,-0.173],[0.395,-0.024],[0.122,0],[0.122,-0.047],[0.146,-0.124],[0.098,-0.073],[0.101,-0.073],[0.124,-0.147],[0.099,-0.074],[0.078,0.016],[0.045,-0.023],[0.148,-0.194],[0,0],[-0.121,0.098],[-0.147,0.073],[-0.147,0.047],[-0.147,0],[-0.147,0],[-0.119,0.047],[-0.148,0.073],[-0.153,0.075],[-0.075,-0.01],[-0.056,0.011],[-0.065,-0.006],[-0.064,0.013],[-0.173,0.074],[-0.391,0],[-0.37,-0.099],[-0.149,-0.073],[0,0],[0.267,-0.049],[0.127,-0.049],[0.127,-0.046],[0.123,-0.031],[0.064,0.033],[0.064,-0.024],[0.102,-0.124],[0.074,-0.122],[0.075,-0.122],[0.072,-0.121],[0.02,-0.147],[0,-0.145],[0.02,-0.296],[0.245,-0.345],[0.219,-0.248],[0.121,-0.098],[0.126,-0.099],[0.125,-0.095],[0.098,-0.096],[0.075,-0.148],[0.023,-0.123],[0.023,-0.124],[0.149,-0.145],[0.049,-0.2],[0.025,-0.272],[0.022,-0.149],[0.022,-0.151],[0,0],[0.173,-0.072],[0.244,-0.171],[0.147,-0.098],[0.145,-0.101],[0.078,0.015],[0.053,-0.01],[0.119,-0.025],[0.173,-0.074],[0,0],[-0.149,0],[-0.15,0],[0,0],[0.052,-0.176],[0.052,-0.096],[0.118,-0.075],[0.147,-0.073],[0.144,-0.098],[0.123,-0.075],[0.172,-0.098],[0.168,-0.069],[0.097,-0.054],[0.123,-0.148],[0.074,-0.148],[0.073,-0.122],[0.27,0],[0.417,0],[0,0],[0,0],[-0.101,-0.294],[0.44,-0.071],[0.069,0.007],[0.06,-0.011],[0.299,-0.148],[0.146,-0.075],[0.17,-0.051],[0.06,0.008],[0.068,-0.028],[0.075,-0.125],[0.024,-0.121],[0.024,-0.121],[0.171,-0.099],[0.177,-0.024],[0.126,-0.024],[0.124,0],[0.148,-0.122],[0,-0.197],[0,-0.148],[0,-0.171],[0.074,-0.123],[0.086,0.004],[0.022,-0.046],[0,-0.171],[-0.022,-0.15],[0,-0.247],[0.147,-0.2],[0.079,0.022],[0.045,-0.038],[0.098,-0.096],[0,0],[0,0],[-0.147,-0.046],[-0.147,-0.046],[-0.101,-0.122],[0.101,-0.121],[0.071,-0.146],[0.048,-0.124],[0.025,-0.123],[0.074,-0.172],[0,-0.149],[0,-0.196],[-0.614,-0.048],[0.153,-0.317],[0.076,-0.173],[0,-0.175],[0,-0.175],[-0.02,-0.127],[-0.273,-0.054],[-0.063,0.011],[-0.102,-0.044],[-0.153,-0.1],[-0.148,-0.147],[0,0],[-0.123,-0.024],[-0.243,0],[-0.318,0.172],[-0.172,0.074],[-0.075,-0.011],[-0.055,0.011],[-0.122,0.049],[-0.145,0.098],[-0.101,0.121],[-0.127,0.145],[-0.269,0.269],[-0.17,0.046],[-0.125,0.027],[-0.146,0],[-0.147,0.024],[0,0],[-0.058,0.009],[-0.067,-0.026],[-0.103,-0.096],[-0.075,-0.151],[-0.047,-0.129],[-0.051,-0.173],[-0.072,-0.318],[-0.02,-0.124],[-0.101,-0.148],[0,-0.273],[0,0],[0,-0.223],[0,-0.128],[-0.268,-0.173],[-0.118,-0.076],[-0.099,-0.148],[-0.026,-0.173],[0,0],[0,0],[-0.152,-0.268],[-0.12,-0.12],[-0.123,-0.15],[-0.05,-0.178],[0,-0.148],[0.025,-0.122],[0,-0.249],[0,0],[-0.025,-0.146],[-0.025,-0.152],[0,0],[-0.023,0.195],[-0.023,0.121],[-0.081,0.146],[-0.195,0.048],[-0.148,0],[0,0],[-0.124,0],[-0.176,0],[-0.151,0.078],[-0.172,0.075],[-0.343,0],[0,0],[0,0],[0,0.149],[0.03,0.217],[0,0],[0.148,0.027],[0.059,-0.008],[0.068,0.027],[0.075,0.103],[0.101,0.075],[-0.173,0.297],[-0.05,0.176],[-0.025,0.296],[-0.024,0.293],[-0.024,0.122],[-0.072,0.149],[-0.124,0.097],[-0.168,0.074],[-0.123,0.047],[-0.174,0.048],[-0.123,0.05],[-0.066,-0.015],[-0.053,0.041],[-0.073,0.149],[-0.05,0.121],[-0.099,0.145],[-0.095,0.126],[-0.023,0.171],[0,0.149],[0,0],[0.029,0.192],[0.295,0.022],[0.295,0],[0.146,0],[0.097,0.469],[0.2,0.072],[0.071,-0.013],[0.049,0.025],[0.148,0.118],[0,0.148],[0,0],[-0.099,0.122],[-0.096,0.122],[-0.075,0.169],[-0.028,0.148],[-0.124,0.245],[-0.122,0.103],[-0.147,0.045],[-0.074,-0.011],[-0.057,0.011],[-0.249,0.198],[-0.1,0.12],[-0.125,0.122],[-0.125,0.068],[-0.166,-0.005],[-0.101,0.019],[-0.068,-0.011],[-0.1,0.043],[-0.123,0.098],[-0.074,0.147],[-0.046,0.097],[-0.145,0.121],[-0.128,0.03],[-0.124,0],[-0.125,0.029],[-0.119,0.046],[0,0.243],[0.124,0.2],[0.072,0.174],[0,0.147],[-0.264,0.37],[-0.144,0.094],[-0.077,-0.018],[-0.057,0.023],[-0.148,0.093],[-0.072,0.202],[-0.126,0.269],[-0.097,0.073],[-0.295,0],[-0.271,-0.048],[-0.069,0.005],[-0.061,-0.012],[-0.126,-0.101],[-0.221,-0.295],[-0.099,0.049],[-0.175,0.049],[-0.148,0],[-0.148,-0.097],[-0.077,-0.145],[-0.072,-0.123],[0,-0.168],[0,0],[0,0],[0.026,-0.468],[0.026,-0.124],[0.196,-0.265],[0.147,-0.1],[0.247,0],[0.419,0],[0.147,-0.048],[0.125,-0.097],[0.072,-0.122],[0.072,-0.147],[0.073,-0.122],[0.123,-0.098],[0.125,-0.149],[0.126,-0.122],[0.124,-0.073],[0,-0.368],[0,-0.54],[0.097,-0.221],[0,-0.272],[-0.027,-0.536],[0,0],[0,-0.151],[0,-0.344],[-0.372,-0.051],[-0.271,-0.149],[-0.124,-0.12],[-0.143,-0.072],[-0.292,-0.126],[-0.15,-0.073],[-0.418,0],[0,0],[-0.145,0.048],[-0.592,0],[-0.389,0],[-0.194,0.024],[-0.121,0.046],[-0.121,0.077],[-0.069,0.097],[-0.121,0.098],[0,0],[-0.173,0.051],[-0.221,0],[-0.047,-0.026],[-0.1,-0.148],[-0.076,-0.119],[-0.123,-0.093],[0,0],[0,0],[0.196,-0.048],[0.294,0],[0.369,-0.048],[0.12,-0.018],[0.149,-0.073],[0.149,-0.124],[0.098,-0.147],[0.098,-0.148],[0.098,-0.12],[0.146,-0.073],[0.148,0],[0.267,0.097],[0.171,0.126],[0.273,0],[0.372,-0.05],[0.296,0.026],[0.293,-0.024],[0.122,-0.025],[0.144,-0.051],[0.194,0],[0.148,0],[0.169,0],[0.147,-0.07],[0.096,-0.121],[0.046,-0.124],[0.124,-0.145],[0.147,0],[0.145,0],[0.123,0.047],[0.144,0.126],[0.097,0.051],[0.147,0],[0.122,-0.025],[0.124,-0.068],[0.07,-0.119],[-0.171,-0.05],[-0.068,0.006],[-0.063,-0.012],[-0.174,-0.073],[0.271,-0.026],[0.466,-0.148],[0.147,-0.048],[-0.073,-0.097],[-0.322,-0.124],[-0.117,0],[-0.144,0],[-0.222,0],[-0.197,0.048],[-0.251,0.294],[-0.248,0],[-0.194,-0.102],[-0.121,-0.072],[-0.096,-0.149],[-0.051,-0.124],[-0.051,-0.103],[-0.12,-0.075],[-0.151,-0.069],[-0.145,-0.095],[0.122,-0.122],[0.372,-0.24],[0.048,-0.149],[0.024,-0.124],[0.023,-0.269],[0,0],[0.174,0.074],[0.101,0.072],[0.073,0.146],[0.073,0.123],[0.124,0.146],[0.084,-0.025],[0.024,0.047],[0.022,0.123],[0,0.151],[0,0],[0.292,-0.225],[0.12,-0.1],[0.072,-0.121],[0.022,-0.122],[0.022,-0.123],[0.054,-0.147],[0.072,-0.17],[0.026,-0.122],[0,-0.245],[-0.048,-0.199],[0,-0.127],[0,-0.175],[0.074,-0.172],[0.072,-0.169],[0.025,-0.199],[0,0],[0,0],[0.145,0.027],[0.418,0.051],[0.297,0],[0.293,-0.025],[0.076,-0.145],[0,-0.196],[-0.051,-0.148],[-0.27,-0.245],[0,0],[0,0],[0.513,0.346],[0.124,0.125],[0.223,0.047],[0.148,0],[0.146,-0.022],[0.322,-0.198],[0.168,-0.072],[0.121,-0.049],[0.123,-0.072],[0.145,-0.097],[0.171,-0.076],[0.466,0],[0.269,-0.078],[0.199,-0.05],[0.25,0],[0.295,0.295],[0,0.54],[0,0],[0.124,-0.071],[0.12,0],[0.144,0],[0.195,0],[0,0],[0.318,0],[0.051,-0.471],[0,0],[0.175,0.127],[0.048,0.172],[0.072,0.322],[0,0],[0,0],[0,0],[0,0.15],[-0.023,0.147],[0,0],[-0.296,-0.096],[-0.175,-0.073],[-0.249,0],[-0.293,0.027],[0,0.296],[0,0.393],[-0.099,0.223],[0,0.27],[0.025,0.297],[0,0],[0.175,0],[0.101,0.013],[0.162,-0.059],[0.147,-0.073],[0.101,-0.127],[0.225,0],[0,0],[0.149,0.047],[-0.122,0.247],[-0.075,0.172],[0,0.145],[0,0],[0.296,0],[0.148,0.021],[-0.072,0.176],[-0.074,0.32],[0,0.148],[0.023,0.125],[0.075,0.171],[0.101,0.118],[0.196,0],[0.147,0],[0.075,-0.174],[0.125,-0.247],[0.32,-0.122],[0.076,0.011],[0.052,-0.009],[0.174,-0.05],[0,-0.22],[0,-0.248],[0,0],[0.098,-0.071],[0.123,-0.048],[0.123,-0.031],[0,-0.417],[-0.222,-0.321],[-0.149,-0.121],[-0.126,-0.077],[-0.148,-0.078],[0.025,-0.125],[0,-0.173],[0,-0.17],[0,0],[0,-0.246],[0,-0.098],[-0.048,-0.125],[-0.074,-0.174],[0,-0.339],[0,0],[0,0],[0.194,-0.024],[0.392,0],[0,0],[0.271,0],[0.397,0],[0.246,-0.145],[0.122,-0.071],[0.146,-0.051],[0.243,-0.196],[0.071,-0.128],[0.053,-0.149],[0.392,0],[0.174,0.029],[0,0],[0,0],[0.148,0],[0.151,0],[0,0],[0,0],[0,0],[0.193,-0.047],[0.148,-0.051],[0.122,-0.048],[0.147,-0.072],[0.296,-0.249],[0.176,-0.097],[0.172,-0.02],[0,0],[0.491,0],[0,0],[0.542,-0.097],[0.122,-0.026],[0.122,-0.025],[0,0],[0,0],[0.171,0],[0.109,-0.011],[0.152,0.041],[0.149,0.102],[0.077,0.099],[0.241,0],[0.216,-0.018],[0,0],[-0.296,-0.094],[0,0],[0,0],[0,0],[0.492,0],[0.144,0.022],[0.146,0],[0.147,0],[0.171,0.048],[0.146,0.099],[0.073,0.121],[0.296,-0.049],[0.067,0.006],[0.06,-0.013],[0.242,-0.168],[0.071,-0.147],[0,-0.147],[-0.098,-0.123],[-0.085,0.021],[-0.044,-0.02],[-0.148,-0.073],[-0.148,-0.073],[-0.144,-0.023],[-0.165,0.016],[-0.143,-0.009],[0,0],[-0.146,-0.073],[-0.147,-0.098],[-0.124,-0.072],[-0.124,-0.121],[-0.293,-0.223],[0,0],[-0.147,-0.097],[-0.144,-0.073],[-0.266,-0.2],[0,-0.244],[0.021,-0.197],[0,-0.272],[-0.078,-0.545],[0,-0.222],[0.097,-0.196],[0.372,-0.371],[0.094,-0.099],[0.12,-0.072],[0.494,0],[0,0],[0.176,0.05],[0.246,0.047],[0.149,0],[0.391,0.05],[0.152,0.075],[0.172,0.102],[0.174,0],[0,0],[0.393,0],[0.174,0.026],[0.268,0],[0,0],[0.073,-0.126],[0.052,-0.118],[0.049,-0.146],[0,0],[0,0],[-0.118,-0.118],[-0.101,-0.148],[0,-0.221],[0.048,-0.197],[0,-0.394],[-0.073,-0.245],[-0.052,-0.149],[0,-0.195],[0,0],[0.074,-0.125],[0.097,-0.149],[0.078,-0.125],[0,-0.493],[-0.025,-0.121],[-0.076,-0.169],[0,0],[-0.023,-0.194],[0,0],[0,0],[0.053,-0.173],[0,-0.246],[-0.021,-0.37],[0,0],[-0.343,0],[-0.147,-0.048],[-0.146,-0.096],[-0.222,0],[-0.393,0],[-0.176,-0.048],[-0.149,-0.051],[-0.125,-0.048],[0,0],[-0.097,-0.145],[-0.076,-0.145],[-0.075,-0.12],[-0.123,-0.151],[0,0],[0,0],[-0.174,0],[-0.126,-0.006],[-0.146,0.012],[-0.272,0.101],[-0.148,0.073],[-0.291,0.252],[-0.169,0.078],[-0.295,0.051],[-0.125,-0.006],[-0.149,0.013],[-0.147,0.048],[-0.146,0.096],[-0.244,0.295],[-0.518,0.197],[-0.295,0.028],[-0.214,-0.01],[-0.225,0.012],[-0.294,0.023],[0,0],[0.074,0.125],[0.147,0.146],[0,0.22],[-0.072,0.197],[-0.076,0.167],[-0.172,0.345],[0,0],[-0.07,0.121],[-0.124,0.072],[-0.08,-0.016],[-0.051,0.01],[-0.268,0.1],[-0.119,0.096],[-0.174,0.047],[-0.122,0.047],[-0.067,-0.012],[-0.062,0.024],[-0.172,0.075],[-0.076,-0.011],[-0.054,0.011],[-0.147,0.024],[-0.216,-0.016],[-0.193,0.011],[-0.293,0.025],[0,0],[0,0],[0,0.293],[0,0.172],[-0.074,0.27],[-0.096,0.123],[-0.293,0.074],[-0.223,0],[-0.368,-0.072],[-0.068,0.006],[-0.06,-0.012],[-0.494,-0.15],[-0.391,0],[0,0],[-0.146,0],[-0.148,0],[-0.072,0.249],[-0.074,0.102],[-0.125,0.1],[-0.174,0.074],[-0.124,0],[0,0],[-0.27,0.048],[-0.17,0.072],[-0.148,0.097],[-0.147,0.126],[-0.221,0],[-0.145,0],[-0.269,-0.196],[-0.196,-0.273],[-0.196,-0.464],[-0.05,-0.119],[-0.097,-0.144],[-0.147,-0.096],[-0.149,-0.074],[0,0],[-0.122,-0.075],[-0.122,-0.173],[-0.049,-0.099],[-0.145,-0.121],[-0.146,-0.127],[-0.121,-0.099],[-0.174,-0.121],[-0.125,-0.074],[-0.174,-0.096],[-0.173,-0.049],[-0.293,-0.052],[-0.071,0.009],[-0.098,-0.028],[-0.126,-0.099],[-0.074,-0.121],[-0.465,-0.272],[-0.127,-0.049],[-0.149,-0.069],[-0.123,-0.097],[-0.198,-0.276],[-0.172,-0.317],[-0.048,-0.149],[-0.027,-0.121],[0,-0.32],[0.047,-0.294],[0.663,-0.419],[0.169,-0.071],[0.123,-0.025],[0.294,0],[0.198,0],[1.051,0],[0,0],[-0.269,-0.197],[-0.099,-0.124],[-0.076,-0.123],[-0.098,-0.096],[-0.175,-0.077],[-0.076,0.011],[-0.054,-0.011],[-0.319,0],[0,0],[0,0],[-0.125,0.05],[-0.266,0.196],[-0.172,0.096],[-0.07,-0.02],[-0.038,0.05],[-0.049,0.125],[-0.098,0.267],[-0.075,0.101],[-0.171,0.098],[-0.075,-0.011],[-0.056,0.011],[-0.267,0.096],[0,0.148],[0,0.149],[0,0],[0.196,0],[0,0],[0.148,0],[0,0],[-0.023,0.226],[0,0],[-0.322,-0.121],[-0.122,-0.077],[-0.223,0],[-0.174,0],[0.074,0.466],[0,0.293],[0.194,0.027],[0.066,-0.005],[0.061,0.015],[0.17,0.077],[0.147,0.124],[0.171,0.098],[0.127,0.072],[0.172,0.072],[0.067,-0.014],[0.052,0.039],[0.122,0.126],[0.099,0.047],[0.08,-0.011],[0.055,0.01],[0.07,-0.007],[0.06,0.011],[0.146,0.05],[0.099,0.075],[0.121,0.076],[0.172,0.075],[0.075,-0.011],[0.055,0.013],[0.143,0.021],[0.068,-0.006],[0.071,0.011],[-0.023,0.121],[0,0.194],[0,0.147],[0.174,0.125],[0.175,0.05],[0.392,0.247],[0.123,0.094],[0.073,-0.021],[0.038,0.049],[0.026,0.121],[0,0.345],[0.349,0],[0.34,-0.024],[0,0],[0,0],[0,0.194],[0,0],[0.049,0.123],[0,0.221],[-0.173,0.148],[-0.223,0],[-0.175,-0.098],[-0.098,-0.146],[-0.101,-0.15],[-0.125,-0.096],[-0.074,0.017],[-0.059,-0.023],[-0.122,-0.047],[-0.148,-0.101],[-0.146,-0.099],[-0.148,-0.05],[-0.077,0.011],[-0.056,-0.01],[-0.152,-0.098],[-0.051,-0.193],[-0.245,-0.22],[-0.076,0.017],[-0.057,-0.021],[-0.296,-0.195],[-0.123,-0.072],[-0.146,-0.123],[-0.367,-0.02],[-0.086,0.005],[-0.154,-0.117],[-0.07,-0.094],[-0.12,-0.096],[-0.147,-0.074],[-0.293,-0.15],[-0.542,-0.195],[-0.249,-0.147],[-0.125,-0.147],[-0.05,-0.121],[0,-0.2],[0.05,-0.148],[0.076,-0.175],[0.028,-0.124],[0,-0.219],[-0.096,-0.171],[0,-0.369],[-0.046,-0.27],[-0.198,-0.24],[-0.12,-0.073],[-0.08,0.017],[-0.051,-0.009],[-0.145,0],[-0.267,-0.054],[0,0],[0,0],[0.124,0.025],[0.147,0],[0.148,-0.024],[-0.048,-0.126],[-0.074,-0.15],[-0.291,-0.243],[-0.121,-0.099],[-0.148,-0.145],[-0.1,0.149],[-0.05,0.096],[-0.126,0.15],[-0.053,-0.122],[-0.07,-0.099],[-0.149,-0.294],[-0.023,-0.345],[-0.023,-0.12],[-0.197,-0.151],[0,0],[-0.125,0.025],[-0.126,0.077],[-0.097,0.12],[-0.073,0.171],[0,0.149],[0,0],[0,0.171],[-0.125,0.097],[-0.171,0],[-0.121,-0.026],[-0.199,-0.025],[-0.168,0],[0,0],[-0.196,0.025],[-0.021,0.341],[0,0.146],[0,0.071],[-0.316,0.022],[-0.147,0.021],[0.122,0.147],[0.144,0.124],[0.194,0.071],[0.197,0],[0,-0.297],[0.025,-0.15],[0.169,0.07],[0.121,0.053],[0.124,0.175],[0.049,0.173],[0.024,0.123],[0.022,0.118],[0.049,0.12],[0.12,0.099],[0.123,0.052],[0.074,-0.011],[0.056,0.013],[0.123,0.148],[0.026,0.169],[0,0.148],[0,0],[-0.078,0.17],[0,0],[-0.151,-0.069],[-0.174,-0.025],[-0.292,0],[0,0],[0,0],[-0.171,0.077],[0.146,0.1],[0.121,0.048],[-0.121,0.146],[-0.193,0.025],[-0.347,0],[-0.322,-0.048],[-0.124,-0.023],[-0.146,-0.074],[-0.196,-0.047],[-0.06,0.008],[-0.067,-0.025],[-0.099,-0.101],[-0.052,-0.119],[-0.076,-0.1],[-0.095,-0.076],[-0.146,-0.077],[0,0],[0.12,-0.074],[0,-0.221],[-0.294,-0.27],[-0.269,-0.197],[0,-0.441],[0,-0.076],[0,-0.149],[0,-0.147],[0,0],[-0.062,-0.147],[-0.096,-0.158],[-0.058,-0.076],[-0.072,-0.062],[-0.065,-0.048],[-0.061,-0.048],[-0.096,-0.07],[-0.062,-0.072],[0,-0.134],[0.035,-0.124],[0.06,-0.089],[0.024,-0.071],[0.007,-0.101],[0,-0.15],[-0.044,-0.205],[-0.037,-0.077],[-0.088,-0.038],[-0.097,0],[-0.074,0.211],[-0.011,0.06],[-0.024,0.111],[0,0.079],[0.016,0.234],[0,0.073],[-0.011,0.237],[0,0],[-0.047,-0.021],[-0.076,-0.048],[-0.066,-0.057],[-0.076,-0.064],[-0.163,-0.16],[-0.064,-0.075],[-0.075,-0.082],[-0.086,-0.035],[-0.078,-0.02],[-0.077,0],[-0.149,0],[-0.135,-0.048],[-0.082,-0.023],[-0.16,0],[-0.075,0.01],[-0.062,0.041],[-0.036,0.091],[0,0.076],[0,0.084],[0,0.223],[-0.036,0.098],[-0.06,0.086],[-0.038,0.077],[-0.086,0.037],[-0.195,0],[-0.17,-0.122],[-0.065,-0.058],[-0.149,-0.128],[-0.077,-0.059],[-0.162,-0.11],[-0.1,-0.086],[-0.072,-0.045],[-0.074,-0.035],[-0.06,-0.021],[-0.109,0],[0,0],[0,0.271],[0,0],[0,0.109],[-0.024,0.185],[-0.122,0],[-0.075,0],[-0.079,0.011],[-0.109,0],[-0.232,-0.134],[-0.161,-0.088],[-0.073,-0.024],[-0.163,0],[-0.069,0.025],[-0.064,0.04],[-0.052,0.061],[-0.065,0.059],[-0.028,-0.048],[-0.076,-0.123],[-0.034,-0.075],[-0.016,-0.063],[0,-0.148],[0.064,-0.235],[0.037,-0.09],[0.087,-0.221],[0,-0.308],[-0.011,-0.137],[-0.033,-0.113],[-0.023,-0.075],[-0.027,-0.061],[-0.051,-0.122],[0,-0.11],[0.036,-0.122],[0.074,-0.075],[0.034,-0.089],[0.01,-0.073],[0,-0.171],[0.035,-0.073],[0.052,-0.075],[0.086,-0.208],[0.075,-0.134],[0.187,-0.087],[0.083,-0.046],[0.076,-0.06],[0.035,-0.098],[0.011,-0.063],[0.013,-0.151],[0.136,-0.354],[0.075,-0.199],[0.158,-0.162],[0.073,-0.06],[0.085,-0.051],[0.084,-0.011],[0,0],[0.062,0.004],[0.091,-0.012],[0.148,-0.025],[0.065,0],[0.042,0.004],[0.041,-0.005],[0.06,-0.011],[0.072,-0.038],[0.124,0],[0.124,0.036],[0.071,0.062],[0.219,0.026],[0,0],[0.113,0],[0.137,0.012],[0.108,0],[0.183,0.038],[0.097,0],[0,0],[0.084,-0.011],[0.087,-0.05],[-0.16,-0.062],[-0.246,-0.061],[-0.245,-0.024],[-0.147,-0.012],[0,0],[0,0],[-0.097,-0.123],[-0.033,-0.076],[0,-0.137],[0,-0.083],[0,-0.076],[0,-0.101],[0,-0.306],[-0.124,-0.122],[-0.196,-0.297],[-0.073,-0.147],[0,0],[-0.1,-0.147],[-0.126,-0.146],[-0.192,-0.075],[-0.172,0],[0,0],[-0.149,0.048],[-0.099,0.122],[-0.05,0.126],[-0.147,0.148],[0,0],[-0.32,-0.445],[-0.1,-0.122],[-0.147,-0.122],[-0.124,-0.073],[-0.072,-0.174],[-0.073,-0.316],[-0.024,-0.123],[-0.074,-0.148],[-0.272,-0.316],[-0.071,-0.199],[0,-0.269],[0,0],[0,-0.148],[-0.246,-0.395],[-0.225,-0.1],[-0.145,-0.048],[-0.118,-0.076],[-0.101,-0.121],[-0.078,-0.12],[-0.072,-0.124],[-0.217,-0.394],[-0.144,-0.296],[0,0],[0,-0.491],[0.027,-0.148],[0.025,-0.173],[0,-0.145],[-0.174,-0.224],[-0.148,-0.122],[-0.125,-0.072],[-0.148,-0.126],[-0.273,-0.272],[-0.122,-0.146],[-0.097,-0.122],[-0.123,-0.17],[-0.147,-0.318],[-0.122,-0.147],[-0.122,-0.17],[-0.297,-0.418],[-0.368,-0.491],[-0.073,-0.148],[-0.073,-0.196],[0,-0.175],[-0.022,-0.293],[-0.022,-0.125],[-0.049,-0.146],[0,-0.369],[0,0],[-0.393,-0.343],[-0.39,-0.042],[-0.297,0],[-0.42,0.145],[-0.096,0.169],[-0.22,0.219],[-0.3,0.122],[-0.173,0],[0,0],[-0.17,-0.05],[-0.069,0.006],[-0.061,-0.012],[0,0],[-0.122,0.146],[-0.174,0.117],[-0.2,0.072],[-0.438,0.149],[-0.171,0.056],[-0.133,-0.016],[-0.133,0.028],[-0.17,0.023],[-0.124,0],[-0.267,0.097],[-0.146,0.146],[0,0],[-0.199,0.049],[-0.123,0],[-0.469,0],[-0.025,0.267],[-0.074,0.1],[-0.147,0.125],[-0.076,-0.017],[-0.057,0.023],[-0.174,0.048],[-0.124,0.024],[-0.147,0.017],[-0.122,0],[-0.146,0.023],[0,0],[-0.027,0.217],[0,0.124],[-0.027,0.117],[-0.174,0.275],[0,0],[-0.023,0.124],[-0.051,0.148],[-0.196,0.226],[-0.172,0.073],[-0.147,0],[0,0],[-0.145,0],[0,0],[-0.046,0.145],[-0.046,0.123],[-0.075,0.169],[-0.097,0.121],[-0.248,0],[0,0],[-0.144,-0.097],[-0.12,-0.046],[-0.047,0.465],[-0.103,0.49],[-0.049,0.169],[-0.097,0.094],[-0.124,0.029],[-0.065,-0.007],[-0.064,0.015],[-0.294,0.124],[0.122,0.317],[0.195,0.072],[0.061,-0.008],[0.07,0.027],[0.146,0.074],[0.071,0.126],[0.023,0.121],[0.027,0.178],[0.076,0.148],[0.177,0.072],[0.296,0.074],[0.122,0],[0.146,0.05],[-0.023,0.127],[0,0.319],[0.051,0.099],[0.12,0.073],[0.175,0],[0,0],[0.099,-0.324],[0.246,-0.243],[0.07,0.319],[0.05,0.124],[0.095,0.127],[0.122,0.124],[0,0],[0.121,0.126],[0.121,0.099],[0.126,-0.075],[0.125,-0.074],[0.121,-0.076],[0.071,-0.317],[0.022,-0.468],[0.025,-0.295],[0.291,0],[0.339,0.023],[0,0],[0.171,0.048],[0.298,0],[0.074,-0.023],[0.172,-0.074],[0.12,-0.073],[0.149,-0.146],[0.223,0],[0.267,0.147],[0.153,0.149],[0.051,0.199],[0,0.146],[-0.049,0.097],[-0.095,0.078],[-0.42,0],[0,0],[-0.221,-0.051],[-0.245,0],[-0.246,0.023],[-0.145,0.023],[0.097,0.073],[0.195,0],[0,0],[0.296,0],[0,0],[0.146,0],[0.123,0.026],[0.419,0.022],[0.208,-0.007],[0.232,0.011],[0.147,0],[0,0],[0,0],[0.144,0.095],[0.128,0.078],[0.197,0.072],[0.121,0.02],[0.122,0],[0.147,0.052],[0.072,0.223],[0.023,0.17],[0.072,0.268],[0.196,0.273],[0.047,0.195],[0.025,0.125],[0,0.147],[0.023,0.196],[0,0.247],[-0.028,0.245],[-0.076,0.148],[-0.2,0.072],[-0.221,0],[-0.365,-0.075],[-0.395,-0.393],[-0.124,-0.099],[-0.249,-0.293],[-0.097,-0.171],[-0.249,-0.419],[-0.177,-0.102],[-0.447,-0.248],[-0.294,-0.245],[-0.32,-0.196],[-0.318,-0.072],[-0.164,0.016],[-0.141,-0.009],[-0.12,0],[-0.591,0],[0,0],[0,0],[-0.148,0.022],[-0.131,-0.006],[-0.133,0.012],[-0.148,0.024],[0,0],[-0.268,-0.072],[-0.146,-0.102],[-0.12,-0.319],[-0.023,-0.124],[-0.05,-0.12],[-0.12,-0.102],[-0.149,-0.074],[-0.197,0],[0,0],[-0.172,0],[-0.174,-0.047],[-0.148,-0.098],[-0.099,-0.124],[-0.125,-0.072],[-0.222,0],[0,0],[-0.345,0],[0,0],[0,0],[0,0],[-0.298,-0.248],[-0.119,-0.103],[-0.101,-0.147],[-0.247,-0.217],[-0.151,-0.076],[-0.102,-0.048],[-0.126,-0.148],[-0.048,-0.151],[-0.027,-0.296],[-0.101,0.002],[-0.076,-0.092],[-0.123,-0.099],[-0.149,-0.072],[-0.125,0],[0,0],[-0.271,-0.074],[-0.151,-0.053],[-0.122,-0.049],[-0.372,-0.071],[0.468,-0.047],[0.268,-0.07],[0.149,-0.049],[-0.073,-0.126],[-0.121,-0.103],[-0.124,-0.05],[-0.121,-0.049],[-0.12,-0.123],[-0.122,-0.148],[-0.32,-0.196],[-0.174,-0.122],[-0.198,-0.049],[-0.146,0],[-0.122,0.048],[-0.148,0.098],[-0.154,0.073],[-0.241,0.12],[-0.12,0.173],[-0.221,0],[-0.32,-0.244],[-0.073,-0.124],[0,-0.394],[-0.048,-0.27],[-0.078,-0.347],[0,-0.124],[0,-0.317],[0,0],[0,-0.194],[-0.026,-0.54],[-0.026,-0.121],[-0.072,-0.295],[0,-0.148],[-0.049,-0.492],[-0.249,-0.295],[-0.126,-0.146],[-0.099,-0.167],[-0.025,-0.164],[-0.025,-0.122],[-0.098,-0.315],[-0.023,-0.12],[-0.074,-0.175],[-0.025,-0.17],[-0.025,-0.124],[-0.046,-0.147],[-0.074,-0.124],[-0.118,-0.171],[-0.072,-0.123],[-0.075,-0.196],[0,-0.297],[0,0],[0,-0.295],[-0.324,-0.471],[-0.098,-0.174],[-0.074,-0.148],[-0.073,-0.147],[-0.32,-0.662],[-0.171,-0.468],[-0.047,-0.124],[0,0],[-0.141,-0.12],[-0.269,0],[-0.173,0.098],[-0.121,0.148],[-0.049,0.123],[-0.045,0.146],[-0.295,0.392],[-0.126,0.075],[-0.069,-0.012],[-0.061,0.026],[-0.118,0.026],[-0.125,0.149],[-0.076,0.174],[-0.049,0.123],[-0.048,0.146],[0,0.289],[-0.098,0.369],[-0.073,0.172],[-0.074,0.295],[-0.026,0.295],[0.024,0.29],[0,0.296],[0,0.147],[0,0],[0,0.609],[-0.075,0.125],[-0.118,0.076],[-0.467,0],[-0.323,0.296],[-0.096,0.294],[-0.073,0.145],[-0.195,0.075],[-0.122,0.05],[-0.124,0.052],[-0.147,0.098],[-0.145,0.097],[-0.117,0.068],[-0.098,0.071],[-0.096,0.151],[-0.147,0.273],[-0.122,0.148],[-0.096,0.124],[-0.149,0.1],[-0.244,0.222],[-0.098,0.146],[-0.074,0.122],[-0.122,0.078],[-0.077,-0.015],[-0.052,0.013],[-0.06,-0.008],[-0.068,0.027],[-0.124,0.147],[-0.077,0.122],[-0.318,0.095],[-0.147,0],[-0.083,-0.001],[-0.158,0.105],[-0.094,0.148],[-0.049,0.614],[-0.022,0.299],[0,0],[-0.145,-0.027],[-0.22,0],[0,0],[-0.172,0.076],[-0.065,-0.013],[-0.062,0.027],[-0.171,0.077],[-0.1,0.049],[-0.149,0.1],[-0.079,0.124],[0,0],[0,0],[-0.244,-0.052],[-0.06,0.014],[-0.043,-0.063],[-0.096,-0.146],[-0.046,-0.121],[-0.072,-0.121],[-0.125,-0.124],[-0.072,-0.124],[-0.096,-0.321],[0,-0.296],[-0.074,-0.124],[-0.075,-0.122],[-0.097,-0.122],[-0.075,-0.098],[-0.296,-0.248],[-0.121,-0.124],[-0.1,-0.146],[0,-0.196],[0,0],[0,-0.147],[-0.004,-0.285],[-0.001,0],[-0.296,0],[-0.121,-0.07],[-0.074,-0.1],[0,-0.149],[0.075,-0.268],[0.046,-0.145],[0,-0.465],[-0.419,-0.416],[-0.149,-0.099],[-0.173,-0.026],[-0.295,0],[0,0],[-0.125,0.049],[-0.145,0.076],[-0.13,0.052],[-0.145,0.024],[-0.321,0.074],[0,0],[0,0],[-0.073,0.172],[-0.323,-0.344],[-0.074,-0.148],[-0.053,-0.151],[-0.075,-0.297],[-0.151,-0.492],[-0.049,-0.119],[-0.096,-0.145],[-0.075,-0.147],[0,-0.146],[0,-0.589],[-0.047,-0.148],[-0.073,-0.123],[-0.095,-0.123],[-0.272,-0.272],[-0.1,-0.144],[0,-0.248],[0,-0.293],[0,-0.317],[0.344,-0.222],[0.148,-0.073],[0.095,-0.076],[0.047,-0.148],[0,-0.124],[0,-0.466],[0,0],[0.027,-0.296],[0,-0.247],[-0.171,-0.346],[-0.15,-0.123],[-0.148,-0.074],[-0.126,-0.053],[-0.241,-0.296],[-0.32,-0.173],[-0.124,-0.069],[-0.095,-0.146],[-0.026,-0.2],[-0.026,-0.35],[-0.099,-0.245],[-0.126,-0.294],[-0.075,-0.169],[-0.097,-0.195],[0,-0.368],[0,0],[-0.021,-0.148],[-0.051,-0.169],[-0.123,-0.144],[-0.171,-0.1],[-0.146,-0.073],[-0.539,-0.196],[-0.249,-0.197],[-0.173,-0.267],[-0.127,-0.094],[-0.127,-0.051],[-0.124,-0.024],[-0.175,-0.049],[-0.269,0],[0,0],[-0.146,0.069],[0.202,0.276],[0.097,0.099],[0.097,0.096],[0.072,0.317],[0.019,0.343],[0,0.148],[0.074,0.434],[0.026,0.12],[0.073,0.152],[0.049,0.199],[0,0.472],[0,0],[0,0.15],[0,0],[0,0.195],[0,0],[0.371,0.247],[0.123,0.096],[0.121,0.098],[0.121,0.101],[0.173,0.077],[0.295,0.054],[0.068,-0.008],[0.099,0.031],[0.194,0.272],[0.046,0.167],[0.027,0.12],[0,0.292],[0.027,0.123],[0.072,0.098],[0.126,0.096],[0.076,0.124],[0,0.296],[0,0],[0.071,0.097],[0.124,0.072],[0.145,0.051],[0,0],[0,0],[-0.27,0.494],[-0.194,0.462],[0,0.24],[0,0.295],[-0.072,0.197],[-0.102,0.149],[-0.101,0.175],[-0.097,-0.079],[-0.124,-0.099],[-0.099,-0.126],[-0.074,-0.15],[-0.101,-0.244],[-0.146,-0.098],[-0.244,0],[0,0],[-0.148,0.023],[-0.169,0],[-0.196,-0.274],[-0.15,-0.345],[-0.123,-0.316],[-0.148,-0.291],[-0.198,-0.274],[-0.318,-0.147],[-0.077,0.011],[-0.051,-0.008],[-0.124,-0.027],[-0.127,-0.021],[-0.096,-0.073],[0,-0.196],[0.096,-0.314],[0,-0.294],[-0.342,-0.588],[-0.098,0.144],[-0.294,0.246],[-0.149,0.123],[-0.15,0.118],[-0.174,0.146],[-0.097,0.15],[-0.073,0.122],[-0.074,0.174],[-0.047,0.123],[-0.048,0.124],[-0.196,0.048],[-0.224,0],[-0.27,0.02],[-0.167,0.119],[-0.371,0.322],[-0.196,0.098],[-0.098,0.074],[-0.097,0.146],[-0.027,0.122],[0,0.294],[0,0.738],[0,0],[0.074,0.323],[0.121,0.521],[0.026,0.346],[0,0.345],[0.364,0.095],[0.147,0.076],[0.124,0.125],[0.149,0.367],[0.07,0.093],[0.097,0.071],[0.152,0.072],[0.318,0.197],[0.126,0.144],[0.099,0.12],[0.073,0.173],[0.052,0.27],[0.026,0.124],[0.073,0.17],[0,0.243],[-0.052,0.223],[-0.048,0.175],[-0.12,0.099],[-0.115,0.124],[-0.07,0.147],[-0.05,0.179],[-0.023,0.171],[-0.048,0.22],[-0.049,0.174],[-0.196,0.075],[-0.12,0.051],[-0.091,-0.016],[-0.082,0.012],[-0.343,0.12],[-0.068,-0.012],[-0.061,0.024],[-0.175,0.052],[-0.123,0],[-0.318,0],[-0.15,0],[-0.467,0],[0,0],[0,-0.143],[0,0],[0.174,-0.074],[0.146,-0.05],[0.067,0.012],[0.062,-0.025],[0.146,-0.099],[0.094,-0.149],[0,-0.272],[-0.051,-0.199],[-0.077,-0.17],[-0.124,-0.124],[0,0],[-0.151,0.513],[-0.025,0.124],[-0.024,0.175],[0,0.174],[0.073,0.123],[0.272,0.095],[0,0],[-0.318,0.022],[0,0],[-0.148,0.07],[-0.173,0.094],[-0.174,0.046],[-0.268,0.052],[-0.318,0],[0,0],[-0.126,0],[-0.29,0],[-0.119,0.025],[-0.146,0.071],[-0.125,0.123],[-0.123,0.049],[-0.273,0.047],[-0.146,0.025],[-0.126,-0.005],[-0.148,0.013],[-0.125,0.024],[-0.059,-0.008],[-0.069,0.027],[-0.147,0.099],[-0.149,0.074],[-0.124,0.049],[-0.145,0.098],[-0.096,0.101],[-0.1,0.126],[-0.101,0.145],[-0.151,0.097],[-0.17,0.022],[-0.121,0.022],[-0.07,-0.006],[-0.061,0.012],[-0.244,0.223],[-0.099,0.124],[-0.127,0.101],[-0.121,0.148],[-0.075,0.143],[-0.072,0.171],[-0.05,0.123],[-0.076,0.148],[-0.22,0.365],[-0.223,0.443],[-0.049,0.123],[-0.126,0.15],[-0.12,0.125],[-0.201,0.123],[-0.15,0.118],[-0.074,0.175],[-0.05,0.17],[-0.02,0.172],[-0.02,0.124],[-0.021,0.127],[-0.053,0.119],[-0.171,0.098],[-0.197,0.319],[0,0.465],[0.125,0.172],[0.149,0.076],[0.079,-0.016],[0.05,0.01],[0.324,0.023],[0,0.294],[0,0.147],[0,0.146],[0,0],[0.025,0.126],[0.023,0.171],[0.072,0.442],[0.023,0.124],[0.122,0.145],[0.024,0.172],[0,0.465],[0.196,0.419],[0.2,0.321],[0.393,0.197],[0.17,0.047],[0.077,-0.015],[0.078,0.04],[0.097,0.151],[0,0.151],[0,0],[-0.072,0.149],[-0.124,0.149],[-0.027,0.171],[0,0.293],[0,0],[0,0],[-0.096,0.149],[-0.098,0.122],[-0.123,0.075],[-0.078,-0.015],[-0.052,0.011],[-0.122,0],[-0.146,0.021],[0,0],[-0.467,0],[0,0.394],[0.023,0.121],[0,0],[0.075,0.124],[0.224,0.294],[0,0],[0.027,-0.298],[0.027,-0.12],[0.022,-0.127],[0.15,0],[0.147,0],[0.169,0],[0,0],[0,0],[0,0.417],[-0.077,0.22],[-0.097,0.146],[-0.197,0.073],[-0.126,0.02],[-0.467,0],[-0.124,0.02],[-0.098,0.074],[-0.05,0.124],[-0.097,0.148],[-0.171,0.072],[-0.173,0.05],[-0.145,0.019],[-0.15,-0.01],[-0.115,0.009],[-0.123,0.019],[-0.147,0.126],[-0.122,0.149],[-0.124,0.122],[-0.169,0.123],[-0.248,0],[0,0],[-0.148,-0.052],[0,0],[0.124,-0.146],[0.075,-0.145],[0.052,-0.27],[0.246,-0.269],[0.125,-0.149],[0.129,-0.154],[0.047,-0.125],[0,0],[-0.121,0.099],[-0.122,0.123],[0,0],[-0.175,0.122],[-0.246,0.248],[-0.173,0.073],[-0.123,0.02],[-0.173,0],[-0.467,-0.074],[-0.064,0.006],[-0.064,-0.013],[-0.27,-0.146],[-0.098,-0.12],[0,-0.296],[0,0],[0.073,-0.147],[0.098,-0.198],[0.047,-0.124],[0,-0.269],[-0.027,-0.342],[0,0],[0,0],[-0.223,0],[-0.121,-0.021],[-0.176,-0.319],[-0.027,-0.119],[-0.075,-0.273],[-0.029,-0.122],[-0.075,-0.146],[0,-0.245],[0,0],[0.126,-0.175],[0.073,-0.174],[0.049,-0.128],[0,-0.17],[0,0],[0,0],[-0.468,0.27],[0,0],[-0.173,0.096],[-0.222,0.094],[-0.125,0.049],[-0.148,0.05],[-0.173,0.052],[-0.078,-0.014],[-0.078,0.039],[-0.099,0.146],[0,0.121],[-0.025,0.297],[-0.027,0.171],[0,0.149],[0,0],[0.294,0.223],[0.026,0.222],[0.052,0.322],[0.074,0.122],[0.122,0.097],[0.147,0.096],[0.148,0.096],[0.123,0.096],[0.124,0.148],[0.073,0.119],[0.05,0.175],[0,0.222],[-0.124,0.373],[-0.072,0.172],[-0.07,0.122],[-0.101,0.076],[-0.081,-0.014],[-0.053,0.014],[-0.321,0.049],[0,0],[-0.295,0.027],[0,0],[-0.026,0.123],[-0.075,0.122],[-0.15,0.099],[-0.069,-0.013],[-0.064,0.027],[-0.146,0.072],[-0.273,0.37],[-0.125,0.148],[-0.315,0.123],[-0.146,0],[-0.127,-0.02],[-0.66,-0.222],[-0.147,0],[-0.274,0.147],[-0.122,0.076],[-0.144,0.1],[-0.146,0.077],[-0.072,-0.017],[-0.06,0.024],[-0.171,0.047],[-0.145,-0.022],[-0.119,0.021],[-0.147,0.054],[-0.097,0.047],[-0.12,0.095],[-0.024,0.123],[-0.293,0.245],[-0.096,0.126],[-0.097,0.123],[-0.099,0.122],[-0.489,0.42],[-0.145,0.126],[-0.148,0.343],[-0.046,0.121],[-0.071,0.172],[-0.047,0.122],[-0.124,0.295],[-0.076,0.149],[-0.342,0.271],[-0.123,0.068],[-0.124,0.074],[-0.072,-0.017],[-0.058,0.022],[-0.25,0.294],[-0.122,0.151],[-0.097,0.124],[-0.144,0.149],[-0.121,0.151],[-0.025,0.173],[-0.025,0.294],[0,0.145],[-0.026,0.299],[0,0],[-0.072,0.175],[-0.072,0.172],[0,0.419],[0,0],[0,0.146],[0,0],[-0.025,0.118],[-0.047,0.17],[-0.02,0.124],[-0.095,0.272],[-0.099,0.173],[-0.078,0.148],[-0.099,0.146],[-0.096,-0.074],[-0.125,-0.072],[-0.096,-0.072],[-0.125,-0.151],[0,-0.197],[0,-0.148],[0.049,-0.148],[0,-0.218],[-0.054,-0.369],[0,-0.667],[0.046,-0.513],[0.046,-0.123],[0.1,-0.147],[0.096,-0.145],[0,-0.221],[-0.026,-0.2],[-0.148,-0.442],[0,-0.394],[0.072,-0.199],[0.118,-0.125],[0.05,-0.174],[0,-0.246],[0,-0.221],[0,-0.199],[0,-0.148],[0,0],[-0.073,0.15],[-0.049,0.125],[0,0],[-0.074,0.145],[-0.074,0.15],[-0.029,-0.15],[-0.15,-0.249],[-0.146,-0.098],[-0.465,-0.024],[0.028,0.125],[0.052,0.147],[0.052,0.118],[0.097,0.15],[0.123,0.146],[0.097,0.122],[0.075,0.175],[0.121,0.296],[0.072,0.174],[0,0.32],[-0.174,0.321],[-0.021,0.196],[-0.048,0.173],[-0.048,0.126],[-0.074,0.119],[-0.122,0.101],[-0.199,0],[-0.267,-0.151],[-0.392,0],[-0.171,0.053],[0.026,0.124],[0.025,0.145],[0.025,0.122],[0.052,0.293],[0,0.145],[0.048,0.17],[0.024,0.17],[0,0.465],[0.049,0.124],[0.074,0.175],[0.078,0.118],[0.124,0.368],[0.027,0.148],[0,0.149],[0,0.172],[0,0.145],[0,0],[0,0.196],[0,0.172],[0.024,0.121],[0.074,0.12],[0.08,-0.006],[0.037,0.058],[0.023,0.27],[0.019,0.295],[0.019,0.342],[0.025,0.296],[0,0],[0,0],[0.27,-0.047],[0.145,-0.073],[0,0],[0,-0.119],[0,0],[-0.026,-0.148],[0,-0.296],[0,0],[0.067,-0.001],[0.027,0.072],[0,0.169],[0,0.149],[-0.026,0.127],[0,0.293],[0,0],[0.07,0.149],[0.17,0.097],[0.175,0.049],[0.07,-0.007],[0.06,0.01],[0.149,0.124],[0.126,0.077],[0.121,0.073],[0.441,0.443],[0,0],[0,0],[0,0],[0.022,0.148],[0.049,0.148],[0.344,0.466],[0,0],[0,-0.148],[0,0],[0.024,-0.151],[0.075,-0.006],[0.096,0.013],[0.149,0.025],[0,0],[-0.023,0.12],[0,0.247],[0.323,0.271],[0.195,-0.072],[0.169,0],[0,0],[0,0],[0.149,0.027],[-0.07,0.269],[-0.122,0.146],[-0.174,0.045],[-0.074,-0.011],[-0.055,0.012],[-0.296,0.099],[-0.148,0.094],[-0.096,0.145],[-0.145,0.174],[-0.222,0.101],[-0.122,0.025],[-0.146,0.023],[-0.293,0],[-0.217,0.516],[-0.097,0.124],[-0.126,0.101],[-0.124,0.076],[-0.073,0.122],[-0.148,0.097],[-0.121,0.096],[-0.121,0.075],[-0.147,0.12],[-0.144,0.12],[-0.145,0.075],[-0.125,0.051],[-0.071,-0.011],[-0.051,0.026],[-0.072,0.124],[-0.053,0.149],[-0.048,0.123],[-0.07,0.147],[-0.095,0.143],[-0.096,0.103],[-0.323,0.05],[-0.133,-0.015],[-0.168,0.038],[-0.269,0.201],[-0.12,0.15],[-0.144,0.167],[-0.343,0],[-0.399,0],[-0.07,0],[-0.37,0],[0,0],[-0.147,-0.024],[0,0],[-0.148,0.024],[-0.245,0],[0,0],[-0.144,-0.052],[-0.295,0],[-0.193,0.046],[-0.17,0],[0,0],[0,0],[-0.197,0.269],[-0.147,0.099],[-0.198,-0.124],[-0.246,0],[-0.294,0],[-0.197,-0.1],[-0.176,-0.077],[-0.124,-0.048],[-0.147,-0.073],[0.073,-0.121],[0,-0.223],[-0.196,-0.172],[-0.174,0],[0,0],[-0.243,0.298],[-0.122,0.148],[-0.217,0],[-0.367,-0.374],[-0.122,-0.095],[-0.027,0.149],[-0.047,0.148],[-0.124,-0.051],[-0.196,0],[0,0],[0.048,0.121],[0.072,0.175],[0.025,0.099],[0.296,0],[0.146,0],[0,0],[-0.268,0.173],[-0.071,-0.018],[-0.049,0.037],[-0.124,0.144],[-0.08,0.126],[-0.097,0.148],[-0.124,0.149],[-0.198,0.074],[-0.059,-0.008],[-0.066,0.027],[0,0],[-0.098,0.175],[-0.322,0.365],[-0.444,0.368],[-0.418,0],[-0.195,-0.047],[-0.245,0],[0,0],[-0.145,0.077],[-0.222,0],[0,0],[-0.12,-0.095],[-0.175,-0.052],[-0.125,-0.02],[-0.07,0.006],[-0.062,-0.01],[-0.174,-0.075],[0,-0.271],[0,0],[-0.074,-0.127],[-0.069,-0.148],[0,-0.127],[0,-0.295],[0,0],[-0.125,0.095],[-0.129,0.097],[-0.367,0.147],[-0.124,0.075],[-0.146,0.101],[-0.099,0.125],[-0.147,0.122],[-0.175,0.047],[-0.27,0.047],[-0.056,-0.011],[-0.071,0.044],[-0.072,0.121],[-0.049,0.148],[-0.021,0.148],[-0.021,0.294],[-0.053,0.271],[-0.271,0.047],[-0.343,0],[0,0],[0,0],[0.171,-0.074],[0,0],[0.122,-0.074],[0.075,-0.17],[0.023,-0.146],[0.022,-0.123],[0.022,-0.118],[0.025,-0.121],[0.097,-0.343],[0.025,-0.125],[0.074,-0.117],[0.148,-0.098],[0.121,-0.052],[0.17,-0.095],[0.096,-0.1],[0.05,-0.126],[0.046,-0.122],[0.316,-0.195],[0.467,-0.3],[0.49,-0.296],[0.419,-0.347],[0.368,-0.419],[0.147,-0.1],[0.217,-0.247],[0.072,-0.122],[0.197,-0.023],[0.068,0.005],[0.062,-0.011],[0.081,0.005],[0.086,-0.011],[0.145,-0.024],[0.123,-0.023],[0.343,-0.125],[0.149,-0.047],[0.06,0.008],[0.07,-0.025],[0.096,-0.124],[0,-0.193],[0,-0.246],[0.149,-0.367],[0.121,-0.146],[0.103,-0.145],[0.047,-0.127],[0.028,-0.22],[0,-0.194],[0.076,-0.269],[0.099,-0.32],[0.025,-0.349],[0,-0.295],[0,-1.647],[0.049,-0.2],[0.149,-0.15],[0,0],[0,0],[-0.172,0],[-0.171,0.052],[-0.12,0.044],[-0.148,0.025],[-0.122,0],[-0.271,0],[-0.072,0.44],[-0.049,0.123],[-0.121,0.147],[-0.126,0.099],[-0.096,0.147],[-0.073,0.174],[0,0],[-0.073,0.121],[-0.246,0],[0,0],[-0.149,-0.022],[0,0],[-0.12,0.05],[-0.122,0.097],[0,0.175],[0,0],[-0.268,0.268],[-0.121,0.1],[0,0],[0,0],[0.149,0.27],[0.028,0.169],[0,0],[0,0],[-0.07,0.147],[-0.124,0.195],[-0.074,0.124],[-0.224,0],[-0.167,-0.12],[-0.072,-0.097],[-0.126,-0.15],[0,0],[0,0],[0.119,0.12],[0.125,0.325],[0.029,0.126],[0.029,0.125],[0.026,0.149],[0,0.321],[-0.072,0.12],[-0.101,0.051],[-0.144,0.048],[0.025,0.121],[0.071,0.172],[0.062,0.008],[0.068,-0.025],[0.197,0],[0,0],[-0.078,0.268],[-0.124,0.297],[-0.073,0.122],[-0.124,0.098],[-0.245,0.218],[-0.073,0.147],[-0.053,0.127],[-0.026,0.148],[0,0.127],[-0.024,0.344],[-0.024,0.122],[-0.073,0.128],[-0.149,0.097],[-0.125,0.024],[-0.148,0],[-0.273,-0.198],[-0.099,-0.101],[-0.247,0],[-0.203,0.097],[-0.125,0.126],[-0.148,0.124],[-0.121,0.072],[-0.075,-0.172],[-0.048,-0.118],[-0.074,-0.17],[-0.068,-0.006],[-0.06,0.011],[-0.151,0.101],[-0.124,0.121],[-0.22,0.294],[-0.17,0.074],[-0.22,0],[-0.224,-0.024],[-0.116,0],[-0.172,0],[0,0],[-0.025,-0.293],[-0.025,-0.118],[-0.273,-0.174],[-0.078,0.01],[-0.056,-0.011],[-0.418,0.419],[-0.123,0.102],[-0.141,0.099],[-0.097,0.147],[-0.248,0.317],[-0.177,0.168],[-0.171,0.072],[-0.269,0.068],[-0.193,0],[0,0],[-0.318,0.074],[-0.149,0.052],[-0.297,0.098],[-0.151,0.127],[-0.097,0.122],[-0.172,0.077],[-0.124,0.048],[-0.515,0.122],[-0.166,-0.016],[-0.141,0.009],[-0.169,0.051],[-0.149,0.095],[-0.39,0.243],[-0.17,0.026],[-0.292,0],[-0.445,-0.121],[-0.149,-0.096],[-0.197,-0.074],[-0.126,-0.026],[-0.392,0],[0,0],[-0.195,0.025],[0,0],[0.124,0.122],[0.074,0.173],[0.051,0.123],[0,0],[0.074,0.15],[0.07,0.172],[0.048,0.124],[0,0],[0.225,0.345],[0.073,0.146],[0.075,0.121],[0.072,0.124],[0.196,0],[0,0],[0.145,0.098],[0.074,0.099],[-0.149,0.103],[-0.121,0.074],[-0.196,0.046],[-0.149,0],[0,0],[-0.392,0],[0,0],[-0.323,0],[-0.273,0.103],[-0.222,0.244],[-0.126,0.146],[-0.077,0.151],[0,0.224],[0.096,0.171],[0.088,-0.004],[0.035,0.048],[0,0.145],[0,0],[-0.371,0],[-0.169,-0.442],[-0.019,-0.124],[-0.053,-0.147],[-0.22,-0.295],[0,0],[-0.172,-0.049],[-0.121,-0.095],[-0.024,-0.17],[0,-0.464],[0,0],[-0.243,-0.193],[-0.147,-0.124],[-0.297,-0.15],[-0.174,-0.075],[-0.245,0],[0,0],[-0.075,0.17],[0,0.147],[0,0.296],[-0.027,0.146],[0,0],[-0.267,0.021],[0.049,0.469],[0,0.148],[-0.024,0.125],[-0.048,0.121],[-0.122,0.094],[-0.342,-0.172],[-0.171,-0.024],[0,0],[-0.12,0.024],[-0.123,0.074],[-0.122,0.124],[-0.128,0.094],[-0.126,0.07],[-0.071,-0.013],[-0.062,0.024],[-0.151,0.098],[-0.073,0.125],[0,0.144],[0.272,0.147],[0.145,0.029],[0.111,-0.007],[0.132,0.105],[0.074,0.095],[0.096,0.147],[0.146,0.098],[0.345,0],[0,0],[0.271,0],[0.445,0.049],[0,0],[0.072,-0.006],[0.103,0.016],[0.146,0.077],[0.198,0.026],[0.173,0],[0.146,-0.026],[0.171,-0.066],[-0.174,-0.047],[-0.07,0.012],[-0.049,-0.023],[-0.122,-0.097],[0,-0.221],[0,0],[0.048,-0.117],[0.274,0],[0.249,0.345],[0,0.15],[0,0],[0.121,0.074],[0.17,0.046],[0.147,0.02],[0,0],[0.146,0],[0.319,0.097],[0.197,0.072],[0.121,0.046],[0.174,0.046],[0.244,0.126],[0.171,0.151],[0.122,0.173],[0.099,0.075],[0.126,0.049],[0.171,0.025],[0.344,0.026],[0.145,0],[0.339,0],[0.266,0.321],[0.441,0.294],[0.221,0.097],[0.299,0.027],[0.131,-0.006],[0.176,0.015],[0.147,0.048],[0.151,0.096],[0.198,0.073],[0.067,-0.006],[0.061,0.013],[0.148,0.025],[0,0],[0,0],[0.146,0.052],[0.174,0.045],[0.341,0.196],[0.148,0.098],[0.47,-0.024],[0,0],[0.148,-0.051],[0.223,-0.098],[0.22,0],[0.396,0.051],[0,0],[0.173,0.046],[0.196,0.052],[0.068,-0.005],[0.061,0.012],[0.294,0.172],[0.32,0.099],[0.122,0.025],[0.218,0],[0.195,-0.051],[0.123,-0.075],[0,-0.197],[0.047,-0.123],[0.076,-0.176],[0.07,-0.125],[0.146,-0.151],[-0.125,-0.048],[-0.149,-0.101],[-0.1,-0.121],[0,-0.297],[0.025,-0.12],[0.126,-0.149],[0.12,-0.097],[0.172,0],[0,0],[0,0],[0,0],[0,0],[0,0],[-0.415,0.148],[-0.267,0.173],[0,0],[0.126,0.023],[0.174,0],[0,0],[0.023,-0.32],[0.023,-0.124],[0.073,-0.126],[0.124,-0.049],[0.275,0],[0,0],[0.173,0.073],[0.296,0.05],[0.86,0],[0,0],[0.196,-0.023],[0.415,-0.073],[0.221,0],[0.222,0.025],[0.149,0.098],[0.199,0.123],[0.174,0],[0,0],[0,-0.223],[0,-0.144],[0,0],[0,0],[0,0],[0,0],[0.147,0.219],[0.148,0.099],[0.121,0.051],[0.145,0.046],[0.121,0.075],[0.1,0.169],[0,0.295],[-0.048,0.366],[0,0.147],[0.048,0.147],[0.097,0.147],[0.124,0.1],[0.101,0.077],[0.15,0.123],[0.097,0.049],[0.122,0.027],[0.065,-0.005],[0.062,0.014],[0.15,0.024],[0.175,0.023],[0.149,0],[0.296,0],[0.345,0],[0.123,-0.027],[0.15,-0.077],[0.125,-0.074],[0.17,-0.071],[0.175,-0.048],[0.174,0],[0,0],[0.15,0],[0.492,0],[0.368,-0.094],[0.176,-0.028],[0,0],[0.123,0.021],[0.143,0.05],[0.124,0.052],[0.173,0.125],[0.198,0.049],[0.146,0],[0,0],[0.194,0.024],[0.223,0.023],[0.198,0.049],[0.173,0.1],[0,0],[0.272,0.196],[0.147,0.121],[0.126,0.07],[0.296,0],[0,0],[0,0],[-0.148,0.094],[-0.294,0.147],[0,0],[0.063,-0.006],[0.062,0.014],[0.222,0],[0,0],[0.073,-0.271],[0.096,-0.144],[0.323,-0.121],[0.15,0],[0,0],[0.166,0.075],[-0.047,0.149],[-0.051,0.171],[-0.051,0.124],[-0.098,0.147],[-0.098,0.075],[-0.048,0.121],[0.294,0.024],[0.171,0.076],[0.171,0.026],[0.071,-0.009],[0.095,0.028],[0.319,0.052],[0.146,0],[0.193,0],[0.346,0],[0.271,0.077],[0.216,0.048],[0.073,-0.008],[0.094,0.026],[0.295,0.024],[0.213,-0.016],[0.229,0.023],[0.294,0.024],[0.153,0],[0.103,-0.146],[0.031,-0.121],[0,-0.344],[0,0],[0.321,-0.051],[-0.026,-0.147],[-0.099,-0.145],[-0.15,-0.073],[-0.124,-0.076],[-0.1,-0.074],[-0.097,-0.122],[-0.074,-0.148],[-0.026,-0.122],[0,-0.172],[0,-0.144],[0,0],[0.272,0.052],[0.124,0],[0.083,-0.006],[0.084,0.011],[0.119,0.025],[0.171,0.048],[0.175,0],[0.147,0],[0.391,0.025],[0,0],[0,0],[-0.124,-0.072],[0,-0.248],[0.096,-0.243],[0.291,0.194],[0.147,0.122],[0.167,0.126],[0.073,0.125],[0.101,0.149],[0.101,0.07],[0.124,0.023],[0.318,0],[0.149,-0.026],[0.12,-0.073],[0.049,-0.096],[0.122,-0.122],[0.49,0],[0.371,0.244],[0.32,0.046],[0.126,0.022],[0.175,0.048],[0.148,0],[0.122,-0.026],[0.201,0],[0.445,0],[0.099,-0.223],[-0.024,-0.343],[0.025,-0.463],[0.026,-0.296],[0,0],[0.294,0.344],[0.119,0.096],[0.199,0.1],[0.117,0.052],[0.144,0.073],[0.173,0.125],[0.15,0.121],[0,0.444],[0,0],[-0.05,0.121],[0,0.171],[0,0.197],[0,0.293],[0.026,0.346],[0,0.341],[0.072,0.273],[0.074,0.146],[0.121,0.098],[0.196,0.095],[0.174,0.026],[0.273,0],[0.148,-0.217],[0.098,-0.127],[0.075,-0.098],[0.244,0],[0.244,0.393],[0.074,0.146],[0.146,0.126],[0.17,0.023],[0.122,0],[0.118,-0.006],[0.216,0.106],[0.148,0.101],[0.417,0],[0.248,-0.099],[0.175,-0.074],[0.196,-0.097],[0.148,-0.076],[0.197,-0.146],[0,0],[-0.099,-0.15],[-0.027,-0.171],[0,-0.197],[0,-0.174],[0,0],[0.196,-0.073],[0.442,0],[0.391,0.173],[0.214,0.051],[0.323,0.123],[0.17,0.1],[0.249,0],[0.148,-0.05],[0.222,0],[0.121,0.192],[0,0.293],[0,0],[0.17,0.075],[0.171,0.026],[0.149,0],[0.147,0],[0.149,-0.073],[0.171,0],[0.273,0.026],[0,0],[0.17,0],[0,0],[0,0],[0.439,-0.075],[0.123,-0.024],[0.124,-0.07],[0.269,0],[0,0],[0.147,0],[0.175,0],[0,0.29],[0,0.147],[0,0.146],[0,0],[0.101,-0.075],[0.097,-0.122],[0.421,0],[0.194,0.068],[0.147,0.147],[0,0],[-0.298,0.024],[-0.121,0.049],[-0.15,0.097],[-0.121,0.073],[-0.126,0.049],[-0.123,0.069],[0,0.247],[0,0],[0.124,0.124],[0.221,0],[0.343,-0.124],[0.147,-0.104],[0.122,-0.097],[0.097,-0.147],[0.123,-0.124],[0.148,-0.122],[0.245,0],[0,0],[0,0],[-0.048,-0.124],[0,-0.245],[0,0],[0.121,-0.098],[0.149,-0.103],[0.243,0],[0,0],[0.146,0],[0.296,-0.028],[0.17,-0.074],[0.174,-0.025],[0.296,0],[0,0],[0.391,0],[0,0],[0.074,0],[-0.174,0.124],[-0.124,0.121],[-0.123,0.095],[-0.15,0.096],[-0.147,0.05],[-0.138,-0.016],[-0.125,0.024],[-0.122,0.05],[-0.128,0.097],[-0.125,0.096],[-0.198,0.295],[-0.245,0.195],[-0.297,0.026],[0,0],[-0.125,0],[-0.123,0.049],[-0.116,0.097],[-0.07,0.096],[-0.151,0.124],[-0.293,0.027],[0,0],[-0.149,0],[-0.173,0.024],[-0.122,0.024],[-0.147,0.124],[-0.046,0.173],[-0.024,0.121],[-0.046,0.271],[0,0],[-0.026,0.225],[-0.053,0.125],[-0.097,0.12],[-0.08,-0.025],[-0.039,0.049],[0,0.173],[0.023,0.126],[0.071,0.122],[0.08,-0.007],[0.038,0.061],[0.05,0.103],[0.072,0.122],[0.084,-0.024],[0.023,0.048],[0.047,0.124],[0.096,0.148],[0.201,0.099],[0.172,0.026],[0.079,-0.006],[0.088,0.014],[0.149,0],[-0.049,0.467],[0,0],[0.295,0.048],[0.347,0],[0.125,-0.024],[0.147,-0.075],[0.15,-0.096],[0.125,-0.051],[0.29,0.196],[0.121,0.026],[0.244,0],[0.222,-0.027],[0,0],[0,0],[0,0],[-0.123,0.073],[-0.075,0.099],[0,0.319],[0,0.173],[0,0],[0.318,0.022],[0.394,0],[0.148,0],[-0.099,0.121],[-0.321,0.174],[-0.075,-0.012],[-0.055,0.013],[-0.173,0.073],[0,0]],\"o\":[[-0.171,0],[-0.293,0.124],[-0.126,0.024],[-0.471,0.072],[-0.125,0.051],[-0.172,0.073],[-0.174,0.12],[0,0.121],[-0.027,0.122],[-0.074,0.172],[-0.223,0.218],[0.098,0.121],[0.121,0.122],[0,0],[0,0],[-0.054,0.322],[-0.122,0.095],[-0.163,-0.003],[-0.098,0.079],[-0.098,0.151],[-0.121,0.098],[-0.346,0.197],[-0.271,0],[-0.144,-0.029],[-0.144,-0.073],[-0.149,-0.099],[-0.125,-0.049],[-0.122,-0.023],[-0.391,0],[0,0],[-0.346,-0.023],[-0.196,0],[-0.054,0.01],[-0.126,-0.005],[-0.1,0.151],[-0.075,0.17],[-0.022,0.121],[-0.05,0.145],[-0.172,0.103],[0,0],[-0.418,0],[-0.171,0.074],[-0.294,0.124],[-0.121,0.051],[-0.221,0.097],[-0.146,0],[-0.15,-0.024],[-0.149,-0.046],[-0.32,0],[-0.172,0.048],[-0.294,0.15],[-0.175,0.094],[-0.123,0.024],[-0.17,0.05],[-0.393,0],[-0.32,0.073],[-0.146,0.1],[-0.073,0.174],[-0.068,0.121],[-0.059,0.028],[-0.061,-0.008],[-0.17,0.026],[-0.147,0],[-0.123,0.029],[-0.127,0.026],[-0.203,0.076],[0,0.345],[0.069,0.122],[0.269,0.15],[0.151,0.073],[0.051,0.098],[0,0],[-0.021,0.175],[-0.125,-0.024],[-0.466,-0.097],[-0.296,0],[-0.123,0.024],[-0.147,0.075],[-0.149,0.096],[-0.122,0.046],[-0.149,0],[-0.223,-0.051],[-0.419,0],[-0.296,0],[-0.12,0],[-0.147,0.024],[0,0],[-0.175,0],[-0.124,0.024],[-0.101,0.068],[-0.097,0.147],[0,0],[-0.344,0],[0.053,0.124],[0.097,0.177],[0.15,0.147],[0.126,0.15],[0.05,0.268],[0,0.148],[0.028,0.145],[0.05,0.123],[0.296,0.222],[0,0],[0.196,0],[0.147,0.024],[0.169,0.075],[0.147,0.149],[0.025,0.121],[0,0],[-0.075,0.396],[-0.244,0],[-0.147,-0.076],[-0.122,-0.071],[-0.064,-0.023],[-0.067,0.013],[-0.175,-0.047],[-0.125,-0.022],[-0.123,-0.052],[-0.099,-0.098],[-0.067,-0.121],[-0.071,-0.145],[0,0],[-0.344,0],[-0.096,-0.076],[-0.226,-0.173],[-0.145,0],[-0.173,0.045],[-0.124,0.025],[-0.442,0.148],[0,0],[0.148,0.027],[0.298,0],[0.124,0],[0.169,0.027],[0.099,0.151],[0,0.174],[-0.343,-0.021],[-0.122,-0.027],[-0.176,-0.074],[-0.193,-0.097],[0,0],[-0.119,0],[-0.122,0.069],[-0.05,0.102],[-0.101,0.197],[0,0.513],[0.133,0.012],[0.129,-0.006],[0.147,0],[0.465,0.099],[0.148,0.094],[0.125,0.074],[0.124,0.072],[0.097,0.125],[0,0.173],[-0.147,-0.223],[-0.136,-0.066],[-0.118,0],[-0.171,-0.046],[-0.062,-0.011],[-0.068,0.006],[-0.059,-0.011],[-0.069,0.006],[-0.175,-0.048],[-0.124,-0.024],[-0.218,-0.034],[-0.186,0.018],[-0.298,-0.048],[-0.171,-0.072],[-0.075,-0.172],[0,-0.149],[0,0],[0,-0.298],[0.025,-0.17],[0.026,-0.121],[0,-0.148],[-0.026,-0.125],[-0.075,-0.146],[-0.048,-0.119],[-0.122,-0.295],[-0.148,0.052],[-0.073,0.013],[-0.061,-0.006],[0,0.221],[0,0.146],[0.02,0.468],[0,0.149],[0,0],[-0.294,0],[-0.197,0],[-0.146,0],[0,0.243],[-0.03,0.128],[-0.123,0.075],[-0.123,0.069],[-0.346,0.15],[0,0],[0.123,0.515],[0.271,0.246],[0.049,0.125],[0.049,0.269],[0,0.148],[-0.022,0.148],[-0.126,0.244],[0,0],[0,0.173],[0.049,0.17],[0,0.123],[0,0.172],[0,0.145],[0.049,0.319],[0.099,0.125],[0,0],[0.096,-0.122],[0.121,-0.122],[0.147,-0.123],[0,0],[0.149,0],[0.149,0.072],[0.272,0.197],[0.124,0.048],[0.148,0.074],[0.217,0.245],[0.195,0.296],[0.124,0.097],[0.077,0.147],[0,0.32],[-0.074,0.147],[-0.074,0.146],[0,0.174],[0.064,0.011],[0.073,-0.01],[0,0],[0.148,0.073],[0.269,0.132],[0.127,-0.008],[0.149,0],[0,0],[-0.147,0.047],[-0.271,0.05],[0,0],[-0.171,-0.023],[-0.171,-0.075],[-0.123,-0.073],[-0.317,-0.194],[0,0],[0,-0.145],[0,-0.392],[-0.124,-0.121],[-0.047,-0.123],[-0.099,-0.151],[-0.095,-0.075],[-0.171,-0.049],[-0.269,-0.049],[-0.466,0],[-0.147,0],[-0.146,0.025],[-0.148,0.048],[-0.173,0.095],[0,0.147],[0,0.148],[0.096,0.371],[0,0.393],[-0.027,0.116],[-0.078,0.2],[-0.148,0.126],[-0.195,0.148],[-0.099,0.122],[-0.098,0.366],[-0.292,0],[-0.493,0.175],[-0.297,0.166],[-0.07,0.102],[-0.097,0.145],[-0.12,0.07],[-0.291,0],[-0.149,-0.024],[-0.121,-0.05],[-0.17,-0.075],[0,0],[0,0],[0.1,-0.146],[0.1,-0.151],[0.196,-0.073],[0.224,0],[0.144,0.025],[0.269,0.024],[0.296,0],[0.172,-0.026],[0.168,-0.072],[0.122,-0.101],[0.176,-0.267],[0.097,-0.123],[0.27,-0.218],[0.075,-0.096],[0.098,-0.124],[0.118,-0.091],[0.051,-0.097],[0.024,-0.122],[0.069,-0.299],[0.027,-0.122],[0.024,-0.122],[0.025,-0.147],[0,-0.195],[-0.296,0.024],[-0.194,0],[-0.122,-0.052],[-0.15,-0.099],[-0.125,-0.172],[0,-0.393],[0.051,-0.467],[0,0],[0.025,-0.295],[0.095,-0.445],[0,-0.147],[-0.07,-0.32],[-0.023,-0.121],[-0.099,-0.294],[-0.074,-0.174],[-0.073,-0.122],[0,0],[0.293,0],[0.147,0],[0.048,0],[0,0],[-0.393,0],[-0.197,-0.05],[-0.124,-0.023],[-0.271,-0.047],[0,0],[-0.22,0],[-0.393,0],[-0.173,0.074],[-0.144,0.051],[-0.125,0.027],[-0.294,0.027],[-0.148,0],[0,0.469],[0,0.196],[-0.075,0.322],[-0.098,0.151],[-0.249,0.295],[-0.096,0.265],[-0.047,0.174],[-0.129,0.046],[-0.159,0.045],[-0.104,-0.012],[0,0],[-0.169,0],[-0.197,0.122],[0,0],[0.026,0.173],[0.038,0.053],[0.073,-0.02],[0.295,0.224],[0.122,0.244],[0,0.295],[-0.102,0.099],[-0.121,0.097],[-0.171,0.148],[0,0.297],[0.294,0],[0.143,0],[0.146,0.099],[0.117,0.124],[0.049,0.121],[0.073,0.149],[0.073,0.127],[0.148,0.121],[0.101,0.05],[0.294,0.199],[0.1,0.124],[0.049,0.124],[0,0.151],[-0.051,0.199],[-0.071,0.097],[-0.125,0.074],[0,0],[-0.296,0],[-0.32,-0.073],[-0.467,-0.271],[-0.297,-0.022],[-0.466,0],[-0.147,-0.1],[-0.147,-0.098],[-0.163,-0.058],[-0.102,0.014],[-0.149,0],[-0.294,-0.024],[-0.199,-0.073],[-0.097,-0.15],[-0.126,-0.049],[-0.128,-0.048],[-0.194,-0.05],[-0.146,-0.072],[0,0],[-0.174,0],[-0.124,-0.097],[-0.126,-0.099],[0,0],[-0.37,0],[-0.27,-0.152],[-0.12,-0.072],[-0.123,-0.072],[-0.098,-0.047],[-0.147,-0.124],[-0.097,-0.074],[-0.072,-0.04],[-0.057,0.011],[-0.202,-0.049],[0,0],[-0.167,0],[-0.173,0.097],[0,0.22],[0.073,0.197],[0.125,0.145],[0.028,0.123],[0.028,0.171],[0.293,0],[0.148,0],[0.123,0],[0.147,0.045],[0.074,0.099],[0.074,0.17],[0.295,0.099],[0.148,0.075],[0.097,0.124],[0,0.148],[0,0.121],[-0.172,0.32],[-0.12,0.051],[0,0],[-0.121,0],[-0.122,0.074],[-0.071,0.122],[-0.07,0.148],[-0.072,0.124],[0,0],[0,-0.294],[0,-0.147],[0,-0.298],[0,-0.172],[0,0],[-0.121,0.051],[-0.148,0.099],[-0.099,0.121],[-0.097,0.122],[-0.198,0.197],[0,0],[-0.297,-0.027],[-0.08,0.011],[-0.093,-0.02],[-0.146,0.074],[-0.148,0.099],[-0.146,0.072],[0,0],[-0.15,0],[0,0],[0,0],[-0.149,0],[0,0],[0,0],[-0.124,-0.122],[-0.12,-0.121],[-0.104,-0.097],[0.049,-0.147],[0.025,-0.121],[0.095,-0.314],[0,0],[-0.122,0.073],[-0.121,0.097],[-0.122,0.075],[-0.124,0.027],[-0.118,0.018],[-0.184,-0.005],[-0.173,0.079],[-0.269,0.173],[0,0],[-0.469,0],[-0.147,0.048],[-0.098,0.075],[-0.122,0.075],[-0.117,0.026],[0,0],[-0.151,0],[-0.317,0.048],[-0.173,0.05],[-0.294,0.248],[-0.174,0.099],[-0.253,0.042],[-0.286,-0.016],[-0.202,0.074],[0.074,0.145],[0.124,0.196],[0,0.247],[-0.224,0.217],[-0.17,0.078],[-0.121,0.051],[-0.122,0.028],[-0.198,0],[-0.243,0.028],[0,0],[-0.198,0],[-0.146,-0.096],[-0.128,-0.147],[-0.046,-0.096],[-0.123,-0.22],[0,-0.367],[0,0],[0,0],[-0.148,-0.149],[-0.099,-0.049],[-0.12,-0.097],[-0.122,-0.145],[-0.124,-0.171],[-0.293,0],[0,0],[-0.224,-0.026],[-0.125,-0.027],[-0.317,-0.073],[0,0],[-0.144,0],[-0.121,0],[0,0],[0.294,0.051],[0.125,0],[0,0],[0,0.172],[-0.1,0.144],[0,0.147],[0,0.149],[0.072,0.096],[0.123,0.073],[0.148,0.074],[0.147,0.172],[0,0],[-0.022,0.172],[0,0.124],[-0.048,0.467],[0,0.075],[-0.322,-0.024],[-0.122,0],[-0.147,-0.121],[-0.073,-0.103],[-0.098,-0.15],[-0.151,-0.07],[-0.173,0],[-0.174,0.029],[-0.123,0.024],[-0.344,0.024],[-0.148,0],[0,0.145],[-0.05,0.121],[-0.1,0.125],[-0.123,0.048],[-0.267,0.073],[-0.171,0.021],[-0.169,0.072],[-0.097,0.117],[-0.124,0.1],[-0.191,0.096],[0.001,0.003],[0.072,0.295],[0.024,0.151],[0.076,0.126],[0.102,0.095],[0.119,0.077],[0.17,0.12],[0,0.222],[-0.049,-0.024],[-0.293,-0.071],[-0.296,0],[-0.293,-0.024],[0,0],[-0.15,0],[-0.346,-0.026],[-0.169,-0.047],[-0.122,-0.029],[-0.061,-0.011],[-0.069,0.006],[-0.172,-0.024],[-0.177,-0.126],[0,0],[-0.126,0.072],[-0.15,0.099],[-0.044,0.021],[-0.076,-0.017],[-0.197,0.098],[0,0.248],[0.099,0.123],[0.102,0.074],[0.07,0.1],[0.047,0.149],[0,0],[0.344,-0.026],[0.322,0.072],[0.146,0.12],[0,0.197],[0,0],[-0.097,0.122],[-0.125,0.021],[-0.151,0],[-0.121,-0.073],[-0.122,-0.148],[-0.372,-0.296],[-0.061,-0.01],[-0.069,0.006],[-0.318,-0.121],[-0.071,-0.123],[-0.024,-0.121],[-0.024,-0.468],[0,0],[0,0],[0,-0.62],[-0.05,-0.297],[-0.194,-0.179],[-0.163,0.006],[-0.15,-0.026],[-0.144,-0.145],[-0.126,-0.272],[-0.162,-0.116],[-0.12,0.011],[-0.198,-0.047],[-0.272,-0.146],[0,0],[0.126,0.025],[0.122,0.048],[0.121,0.073],[0.245,0.176],[0.295,0.151],[0.147,0.051],[0.269,0.05],[0.206,-0.021],[0.123,0],[0.174,0.074],[0.273,0.176],[0,0],[0.174,0],[0.126,0.051],[0.151,0.073],[0.123,0.053],[0.123,0.019],[0.149,0],[0.293,0.025],[0,0],[0,0],[0.149,-0.026],[0.059,-0.012],[0.068,0.006],[0.125,-0.024],[0.318,-0.098],[0.122,-0.021],[0.297,-0.021],[0.174,-0.05],[0.147,-0.072],[0.125,-0.103],[0.075,-0.148],[0.099,-0.269],[0,-0.467],[0,-0.146],[-0.075,-0.318],[-0.097,-0.148],[-0.144,-0.15],[-0.123,-0.05],[-0.17,-0.046],[-0.292,-0.031],[-0.291,0],[-0.315,-0.079],[-0.128,-0.073],[-0.124,-0.098],[-0.12,-0.097],[-0.146,-0.099],[-0.062,-0.027],[-0.067,0.012],[0,0],[-0.146,-0.073],[-0.126,-0.072],[0,0],[-0.17,-0.074],[-0.122,-0.052],[-0.344,-0.076],[-0.37,0],[-0.223,0.021],[0,0],[-0.198,-0.026],[-0.171,-0.07],[-0.296,-0.22],[0,0],[0,0.222],[-0.074,0.148],[-0.124,0.024],[0,0],[-0.198,-0.023],[0.072,-0.147],[0.075,-0.219],[0,-0.073],[-0.073,-0.126],[-0.124,-0.099],[-0.049,-0.097],[-0.049,-0.173],[0,0],[-0.175,0],[-0.173,0.123],[-0.248,0],[-0.121,-0.076],[-0.099,-0.073],[-0.293,0],[-0.341,-0.029],[-0.128,-0.024],[0,0],[0.145,0],[0.148,0],[0.196,0],[0,0],[-0.1,-0.147],[-0.123,-0.098],[-0.123,-0.025],[-0.323,-0.052],[-0.293,0],[-0.171,-0.05],[-0.124,-0.099],[-0.098,-0.047],[0,0],[0,0],[-0.418,0.051],[0,0],[0,-0.173],[0.127,-0.174],[0.052,-0.098],[0,0],[0.024,0.492],[-0.027,0.147],[0,0],[0,0.17],[0,0],[0.03,-0.147],[0.028,-0.219],[0,-0.244],[-0.099,-0.126],[0,0],[0,0],[0,0],[-0.319,0.221],[-0.148,0.049],[-0.148,0],[-0.122,0],[-0.148,0.075],[0,0.344],[-0.147,0.172],[0,0],[-0.194,-0.021],[-0.171,-0.052],[0.067,-0.124],[0.124,-0.148],[0,0],[-0.493,0],[-0.171,0.05],[-0.194,0.099],[-0.023,0.12],[0,0.172],[0.073,0.196],[0.273,0.098],[0.274,0.023],[0,0],[0,0],[-0.2,0],[-0.345,-0.049],[-0.297,0],[-0.144,-0.022],[0,0],[0,0.418],[0,0.148],[-0.048,0.148],[-0.075,0.149],[0,-0.295],[-0.025,-0.122],[-0.098,-0.126],[-0.062,-0.024],[-0.067,0.013],[-0.174,-0.072],[-0.146,-0.074],[-0.049,-0.024],[-0.07,0.012],[-0.344,-0.171],[-0.269,0],[0,0],[0,0.172],[0,0.199],[0,0.322],[0,0.145],[-0.03,0.169],[-0.172,0.174],[-0.221,0],[-0.078,-0.101],[-0.051,-0.145],[-0.028,-0.122],[-0.126,0.125],[-0.121,0.149],[-0.055,0.027],[-0.063,-0.008],[-0.268,0.072],[0,0],[0.1,0.101],[0.058,0.021],[0.072,-0.017],[0.125,0.075],[0.075,0.1],[0,0],[0,0.176],[-0.124,-0.05],[-0.175,-0.097],[-0.184,-0.041],[-0.119,0.011],[-0.199,0],[0.1,-0.441],[0,-0.171],[-0.22,0.077],[0,0],[-0.176,0.024],[-0.244,0],[-0.412,0],[0.068,0.124],[0.072,0.147],[0,0.173],[-0.395,0],[-0.145,0],[-0.126,0],[-0.175,0.076],[-0.098,0.074],[-0.098,0.074],[-0.171,0.121],[-0.076,0.101],[-0.051,0.038],[-0.07,-0.015],[-0.197,0.124],[0,0],[0.173,0],[0.148,-0.123],[0.126,-0.077],[0.121,-0.031],[0.149,0],[0.147,0],[0.174,-0.052],[0.122,-0.075],[0.063,-0.027],[0.061,0.009],[0.06,-0.01],[0.07,0.006],[0.172,-0.05],[0.344,-0.147],[0.392,0],[0.172,0.049],[0,0],[-0.295,0],[-0.124,0],[-0.121,0.052],[-0.121,0.052],[-0.06,0.012],[-0.071,-0.036],[-0.173,0.071],[-0.067,0.094],[-0.074,0.122],[-0.072,0.124],[-0.075,0.126],[-0.027,0.123],[-0.026,0.295],[-0.418,0],[-0.175,0.27],[-0.099,0.123],[-0.12,0.098],[-0.12,0.098],[-0.12,0.098],[-0.125,0.127],[-0.068,0.122],[-0.025,0.122],[-0.05,0.193],[-0.146,0.149],[-0.049,0.267],[-0.022,0.149],[-0.027,0.123],[0,0],[-0.152,0.075],[-0.294,0.124],[-0.147,0.101],[-0.146,0.094],[-0.071,0.043],[-0.058,-0.012],[-0.121,0.025],[-0.176,0.046],[0,0],[0.146,0],[0.146,0],[0,0],[-0.027,0.197],[-0.025,0.124],[-0.076,0.123],[-0.122,0.071],[-0.172,0.075],[-0.125,0.049],[-0.172,0.1],[-0.149,0.101],[-0.122,0.049],[-0.148,0.094],[-0.098,0.122],[-0.072,0.124],[-0.121,0.222],[-0.417,0],[0,0],[0,0],[0.123,0.297],[-0.444,0.096],[-0.063,0.014],[-0.067,-0.006],[-0.324,0.077],[-0.172,0.075],[-0.147,0.07],[-0.054,0.012],[-0.075,-0.012],[-0.153,0.073],[-0.075,0.096],[-0.025,0.126],[-0.051,0.197],[-0.147,0.073],[-0.12,0],[-0.12,0.024],[-0.171,0.024],[-0.148,0.123],[0,0.147],[0,0.176],[0,0.174],[-0.039,0.065],[-0.079,-0.002],[-0.073,0.124],[0,0.15],[0.026,0.244],[0,0.267],[-0.038,0.05],[-0.076,-0.021],[-0.123,0.095],[0,0],[0,0],[0.175,0],[0.145,0.045],[0.144,0.053],[-0.121,0.124],[-0.097,0.126],[-0.049,0.128],[-0.049,0.12],[-0.049,0.173],[-0.051,0.122],[0,0.196],[0.616,0],[-0.026,0.369],[-0.072,0.173],[-0.071,0.144],[0,0.17],[0,0.122],[0.298,0],[0.067,0.007],[0.095,-0.016],[0.178,0.07],[0.169,0.121],[0,0],[0.147,0.023],[0.221,0.053],[0.392,0],[0.148,-0.075],[0.069,-0.028],[0.06,0.008],[0.122,-0.025],[0.171,-0.076],[0.126,-0.074],[0.12,-0.171],[0.245,-0.298],[0.123,-0.127],[0.124,-0.027],[0.126,-0.027],[0.174,0],[0,0],[0.067,0.012],[0.072,-0.01],[0.148,0.075],[0.095,0.1],[0.045,0.121],[0.072,0.167],[0.095,0.32],[0.023,0.121],[0.052,0.169],[0.145,0.194],[0,0],[0,0.222],[0,0.148],[0.048,0.317],[0.123,0.075],[0.151,0.097],[0.096,0.145],[0,0],[0,0],[0.048,0.295],[0.068,0.151],[0.149,0.148],[0.1,0.119],[0.025,0.121],[0,0.147],[-0.05,0.224],[0,0],[0,0.173],[0.023,0.124],[0,0],[0.022,-0.225],[0.025,-0.122],[0.025,-0.173],[0.095,-0.172],[0.126,-0.024],[0,0],[0.121,0],[0.147,0.027],[0.169,0],[0.169,-0.071],[0.296,-0.146],[0,0],[0,0],[0,-0.146],[0,-0.22],[0,0],[-0.17,0],[-0.055,-0.009],[-0.076,0.011],[-0.121,-0.049],[-0.075,-0.096],[0.172,-0.272],[0.076,-0.146],[0.1,-0.268],[0.021,-0.293],[0,-0.148],[0.051,-0.15],[0.07,-0.144],[0.148,-0.124],[0.125,-0.05],[0.172,-0.076],[0.121,-0.023],[0.057,-0.022],[0.076,0.017],[0.125,-0.095],[0.05,-0.124],[0.072,-0.172],[0.097,-0.148],[0.1,-0.121],[0.027,-0.124],[0,0],[0,-0.201],[-0.294,0],[-0.296,-0.025],[-0.145,0],[0,-0.49],[-0.051,-0.193],[-0.062,-0.026],[-0.071,0.012],[-0.146,-0.099],[-0.098,-0.078],[0,0],[0.146,-0.099],[0.1,-0.12],[0.126,-0.147],[0.072,-0.148],[0.074,-0.267],[0.07,-0.149],[0.125,-0.094],[0.068,-0.027],[0.062,0.008],[0.316,-0.073],[0.144,-0.096],[0.097,-0.124],[0.097,-0.101],[0.155,-0.096],[0.099,0.002],[0.073,-0.011],[0.093,0.016],[0.171,-0.074],[0.122,-0.098],[0.076,-0.125],[0.096,-0.149],[0.104,-0.073],[0.12,-0.02],[0.122,0],[0.119,-0.02],[0.197,-0.101],[0,-0.25],[-0.099,-0.15],[-0.053,-0.122],[0,-0.468],[0.099,-0.145],[0.054,-0.042],[0.065,0.014],[0.171,-0.079],[0.175,-0.13],[0.126,-0.267],[0.05,-0.129],[0.198,-0.173],[0.291,0],[0.059,0.012],[0.066,-0.007],[0.171,0.048],[0.272,0.245],[0.121,-0.047],[0.149,-0.099],[0.124,-0.025],[0.195,0],[0.147,0.1],[0.072,0.124],[0.076,0.121],[0,0],[0,0],[0,0.466],[0,0.142],[-0.052,0.317],[-0.097,0.151],[-0.196,0.146],[-0.418,0],[-0.17,0],[-0.146,0.048],[-0.12,0.1],[-0.104,0.145],[-0.078,0.12],[-0.075,0.123],[-0.149,0.12],[-0.097,0.123],[-0.12,0.125],[-0.292,0.193],[0,0.537],[0,0.247],[-0.097,0.22],[0,0.538],[0,0],[0,0.147],[0.023,0.341],[0.395,0.048],[0.294,0.046],[0.149,0.072],[0.125,0.124],[0.274,0.149],[0.171,0.074],[0.343,0.196],[0,0],[0.173,0],[0.519,-0.224],[0.389,0],[0.225,0],[0.124,0],[0.144,-0.05],[0.096,-0.071],[0.1,-0.123],[0,0],[0.2,0],[0.196,-0.073],[0.075,0],[0.149,0.072],[0.069,0.098],[0.072,0.124],[0,0],[0,0],[-0.148,0.148],[-0.268,0.049],[-0.393,0],[-0.123,0],[-0.172,0.052],[-0.147,0.072],[-0.147,0.122],[-0.098,0.147],[-0.078,0.123],[-0.123,0.145],[-0.126,0.075],[-0.293,0],[-0.197,-0.075],[-0.196,-0.147],[-0.396,0],[-0.271,0.026],[-0.293,-0.025],[-0.149,0],[-0.15,0.048],[-0.176,0.047],[-0.149,0],[-0.169,0],[-0.175,0],[-0.15,0.075],[-0.076,0.102],[-0.103,0.175],[-0.074,0.099],[-0.15,0],[-0.146,0],[-0.171,-0.074],[-0.095,-0.073],[-0.095,-0.048],[-0.145,0],[-0.145,0.051],[-0.122,0.076],[0.171,0.077],[0.062,0.012],[0.067,-0.006],[0.17,0.047],[-0.297,0],[-0.494,0.072],[-0.149,0.046],[0.048,0.12],[0.197,0.271],[0.121,0.022],[0.126,0],[0.224,0.02],[0.22,0],[0.367,-0.1],[0.145,-0.176],[0.245,0],[0.149,0.07],[0.149,0.097],[0.049,0.099],[0.049,0.12],[0.077,0.118],[0.125,0.072],[0.17,0.073],[-0.098,0.124],[-0.319,0.32],[-0.121,0.075],[-0.025,0.121],[-0.049,0.244],[0,0],[-0.198,0],[-0.121,-0.048],[-0.123,-0.099],[-0.051,-0.122],[-0.072,-0.146],[-0.037,-0.049],[-0.082,0.023],[-0.051,-0.099],[-0.025,-0.122],[0,0],[-0.218,0.297],[-0.15,0.094],[-0.124,0.097],[-0.075,0.125],[-0.024,0.12],[-0.024,0.149],[-0.047,0.17],[-0.053,0.125],[-0.077,0.219],[0,0.223],[0.025,0.124],[0.022,0.145],[0,0.193],[-0.099,0.196],[-0.075,0.174],[0,0],[0,0],[-0.148,0],[-0.421,-0.07],[-0.291,-0.025],[-0.293,0],[-0.197,0],[-0.069,0.147],[0,0.172],[0.148,0.323],[0,0],[0,0],[-0.541,-0.317],[-0.147,-0.1],[-0.172,-0.17],[-0.122,-0.027],[-0.175,0],[-0.37,0.097],[-0.148,0.071],[-0.127,0.049],[-0.148,0.075],[-0.148,0.098],[-0.147,0.1],[-0.395,0.196],[-0.295,0],[-0.198,0.048],[-0.221,0.073],[-0.445,0],[-0.368,-0.37],[0,0],[-0.12,0.075],[-0.099,0.05],[-0.149,0],[-0.199,0],[0,0],[-0.316,0],[0.023,0.464],[0,0],[-0.244,0],[-0.142,-0.097],[-0.125,-0.32],[0,0],[0,0],[0,0],[0,-0.149],[0,-0.17],[0,0],[0.32,0],[0.173,0.05],[0.219,0.097],[0.296,0],[0.051,-0.296],[0.023,-0.393],[0,-0.251],[0.095,-0.219],[0,-0.296],[0,0],[-0.173,0],[-0.118,0.01],[-0.154,-0.021],[-0.148,0.052],[-0.149,0.074],[-0.121,0.146],[0,0],[-0.176,0.025],[0.023,-0.294],[0.074,-0.17],[0.045,-0.123],[0,0],[-0.289,0.021],[-0.146,0],[0.025,-0.2],[0.149,-0.293],[0.023,-0.122],[0,-0.151],[-0.05,-0.173],[-0.075,-0.148],[-0.121,-0.149],[-0.15,0],[-0.224,0],[-0.122,0.245],[-0.169,0.32],[-0.072,0.027],[-0.058,-0.008],[-0.174,0.027],[-0.194,0.052],[0,0.247],[0,0],[-0.023,0.124],[-0.099,0.073],[-0.126,0.048],[-0.397,0.145],[0,0.393],[0.094,0.145],[0.097,0.075],[0.147,0.069],[-0.024,0.119],[-0.025,0.147],[0,0.172],[0,0],[0,0.246],[0,0.1],[0,0.149],[0.05,0.172],[0.125,0.294],[0,0],[0,0],[-0.194,0],[-0.397,0.049],[0,0],[-0.267,0],[-0.393,-0.024],[-0.296,0],[-0.147,0.072],[-0.12,0.073],[-0.298,0.124],[-0.097,0.073],[-0.076,0.12],[-0.221,0.294],[-0.198,0],[0,0],[0,0],[-0.147,0],[-0.147,0],[0,0],[0,0],[0,0],[-0.221,0],[-0.148,0.026],[-0.123,0.05],[-0.172,0.073],[-0.321,0.196],[-0.147,0.118],[-0.147,0.072],[0,0],[-0.491,0.052],[0,0],[-0.565,0],[-0.12,0],[-0.124,0.021],[0,0],[0,0],[-0.171,0],[-0.128,-0.012],[-0.144,0.015],[-0.173,-0.03],[-0.095,-0.048],[-0.145,-0.194],[-0.223,0],[0,0],[0.295,0.122],[0,0],[0,0],[0,0],[-0.496,0.027],[-0.171,0],[-0.127,0],[-0.15,0],[-0.198,0],[-0.174,-0.047],[-0.124,-0.072],[-0.296,0.121],[-0.061,0.013],[-0.068,-0.006],[-0.295,0.048],[-0.149,0.102],[-0.077,0.125],[0,0.172],[0.038,0.055],[0.068,-0.017],[0.144,0.098],[0.125,0.077],[0.146,0.072],[0.189,0.045],[0.115,-0.011],[0,0],[0.168,0.026],[0.149,0.074],[0.126,0.076],[0.146,0.098],[0.268,0.272],[0,0],[0.129,0.125],[0.121,0.076],[0.296,0.172],[0.174,0.121],[0,0.222],[-0.049,0.247],[0,0.542],[0.023,0.22],[0,0.223],[-0.223,0.467],[-0.094,0.101],[-0.098,0.099],[-0.397,0.296],[0,0],[-0.198,0],[-0.244,-0.074],[-0.124,-0.026],[-0.392,0],[-0.198,-0.02],[-0.171,-0.098],[-0.149,-0.068],[0,0],[-0.394,0],[-0.196,0],[-0.243,-0.028],[0,0],[-0.147,0.025],[-0.074,0.095],[-0.051,0.15],[0,0],[0,0],[0.098,0.123],[0.127,0.127],[0.122,0.172],[0,0.224],[-0.101,0.368],[0,0.271],[0.05,0.15],[0.075,0.171],[0,0],[0,0.172],[-0.099,0.144],[-0.073,0.122],[-0.269,0.389],[0,0.148],[0.049,0.173],[0,0],[0.101,0.168],[0,0],[0,0],[-0.023,0.175],[-0.068,0.221],[0,0.371],[0,0],[0.347,0],[0.172,0],[0.171,0.073],[0.172,0.099],[0.394,0],[0.194,0],[0.146,0.049],[0.123,0.052],[0,0],[0.146,0.075],[0.101,0.148],[0.071,0.123],[0.07,0.145],[0,0],[0,0],[0.143,-0.05],[0.147,-0.013],[0.121,0.006],[0.296,-0.026],[0.174,-0.05],[0.317,-0.198],[0.149,-0.12],[0.272,-0.146],[0.133,-0.011],[0.126,0.006],[0.175,0],[0.171,-0.051],[0.296,-0.22],[0.346,-0.419],[0.271,-0.096],[0.268,-0.026],[0.179,0.009],[0.295,0],[0,0],[0,-0.172],[-0.123,-0.171],[-0.149,-0.147],[0,-0.221],[0.075,-0.174],[0.171,-0.35],[0,0],[0.075,-0.146],[0.077,-0.124],[0.069,-0.042],[0.055,0.01],[0.27,-0.052],[0.176,-0.051],[0.122,-0.099],[0.122,-0.052],[0.062,-0.025],[0.068,0.012],[0.172,-0.049],[0.067,-0.026],[0.06,0.008],[0.147,-0.048],[0.258,-0.044],[0.152,0.011],[0.296,-0.025],[0,0],[0,0],[-0.025,-0.293],[0,-0.175],[0,-0.294],[0.048,-0.15],[0.2,-0.222],[0.195,-0.048],[0.393,0],[0.062,0.013],[0.067,-0.005],[0.492,0.124],[0.369,0.1],[0,0],[0.147,0],[0.147,0],[0,-0.273],[0.025,-0.12],[0.122,-0.148],[0.121,-0.095],[0.122,-0.052],[0,0],[0.293,0],[0.174,-0.029],[0.175,-0.077],[0.147,-0.099],[0.147,-0.121],[0.147,0],[0.348,0.026],[0.297,0.197],[0.298,0.395],[0.047,0.124],[0.071,0.174],[0.097,0.149],[0.122,0.076],[0,0],[0.146,0.073],[0.174,0.097],[0.052,0.099],[0.12,0.175],[0.149,0.122],[0.126,0.098],[0.174,0.124],[0.119,0.078],[0.173,0.12],[0.144,0.099],[0.295,0.099],[0.077,0.01],[0.09,-0.01],[0.144,0.047],[0.122,0.097],[0.343,0.444],[0.124,0.076],[0.143,0.051],[0.144,0.077],[0.248,0.226],[0.196,0.292],[0.072,0.149],[0.053,0.124],[0.047,0.297],[0,0.297],[-0.788,0],[-0.149,0.073],[-0.127,0.051],[-0.271,0.049],[-0.198,0],[-1.056,0],[0,0],[0.29,0.148],[0.15,0.097],[0.099,0.124],[0.077,0.121],[0.122,0.125],[0.068,0.027],[0.06,-0.008],[0.295,0.048],[0,0],[0,0],[0.146,-0.023],[0.295,-0.124],[0.171,-0.127],[0.057,-0.034],[0.077,0.023],[0.077,-0.1],[0.099,-0.272],[0.025,-0.123],[0.123,-0.148],[0.071,-0.027],[0.059,0.008],[0.27,-0.074],[0,-0.147],[0,-0.147],[0,0],[-0.196,0],[0,0],[-0.148,0],[0,0],[0.027,-0.224],[0,0],[0.343,0],[0.148,0.051],[0.172,0.097],[0.171,0],[-0.224,-0.442],[-0.024,-0.272],[-0.219,-0.025],[-0.062,-0.01],[-0.069,0.007],[-0.173,-0.023],[-0.169,-0.074],[-0.146,-0.124],[-0.126,-0.075],[-0.171,-0.098],[-0.058,-0.022],[-0.076,0.017],[-0.145,-0.123],[-0.099,-0.094],[-0.057,-0.027],[-0.062,0.008],[-0.063,-0.014],[-0.065,0.006],[-0.147,-0.027],[-0.125,-0.049],[-0.124,-0.076],[-0.145,-0.096],[-0.068,-0.027],[-0.06,0.009],[-0.149,-0.019],[-0.067,-0.015],[-0.063,0.005],[0.022,-0.124],[0.048,-0.172],[0,-0.15],[-0.023,-0.221],[-0.147,-0.1],[-0.441,-0.146],[-0.125,-0.072],[-0.048,-0.035],[-0.081,0.022],[-0.072,-0.098],[-0.076,-0.32],[-0.345,-0.022],[-0.342,0],[0,0],[0,0],[0.123,-0.122],[0,0],[0,-0.145],[-0.073,-0.194],[0,-0.248],[0.147,-0.121],[0.217,0],[0.146,0.098],[0.101,0.147],[0.073,0.12],[0.051,0.04],[0.067,-0.015],[0.121,0.051],[0.172,0.074],[0.148,0.095],[0.122,0.074],[0.068,0.028],[0.059,-0.008],[0.172,0.048],[0.17,0.122],[0.094,0.322],[0.053,0.042],[0.065,-0.014],[0.343,0.172],[0.121,0.072],[0.151,0.094],[0.267,0.222],[0.093,0.008],[0.189,-0.009],[0.096,0.073],[0.127,0.149],[0.125,0.103],[0.298,0.176],[0.518,0.268],[0.268,0.101],[0.144,0.073],[0.07,0.098],[0.073,0.173],[0,0.171],[-0.049,0.171],[-0.049,0.122],[-0.049,0.196],[0,0.225],[0.174,0.295],[0,0.297],[0.075,0.317],[0.095,0.127],[0.074,0.047],[0.056,-0.011],[0.121,0.027],[0.296,0.027],[0,0],[0,0],[-0.048,-0.124],[-0.124,-0.027],[-0.174,0],[0.047,0.125],[0.076,0.168],[0.197,0.32],[0.124,0.1],[0.175,0.118],[0.123,-0.145],[0.048,-0.097],[0.098,-0.147],[0.022,0.123],[0.047,0.124],[0.194,0.269],[0.146,0.3],[0,0.146],[0.052,0.223],[0,0],[0.149,0],[0.119,-0.023],[0.119,-0.072],[0.126,-0.149],[0.048,-0.123],[0,0],[0,-0.173],[0,-0.195],[0.119,-0.099],[0.149,0],[0.195,0.049],[0.145,0.024],[0,0],[0.196,0],[0,-0.342],[0,-0.149],[0,-0.076],[0.322,0],[0.151,0],[-0.098,-0.175],[-0.126,-0.15],[-0.152,-0.124],[-0.172,-0.074],[0.049,0.294],[0,0.146],[-0.196,0],[-0.121,-0.048],[-0.194,-0.074],[-0.098,-0.146],[-0.028,-0.118],[-0.028,-0.125],[-0.029,-0.124],[-0.072,-0.148],[-0.099,-0.071],[-0.067,-0.026],[-0.061,0.008],[-0.194,-0.048],[-0.126,-0.148],[-0.026,-0.127],[0,0],[0.026,-0.172],[0,0],[0.145,0.076],[0.147,0.077],[0.268,0.049],[0,0],[0,0],[0.169,-0.025],[-0.147,-0.124],[-0.099,-0.046],[0.099,-0.148],[0.121,-0.147],[0.323,-0.069],[0.342,0],[0.123,0],[0.148,0.027],[0.175,0.073],[0.053,0.011],[0.076,-0.009],[0.126,0.047],[0.101,0.094],[0.049,0.123],[0.068,0.1],[0.15,0.094],[0,0],[-0.122,0.054],[-0.176,0.098],[0,0.417],[0.245,0.223],[0.344,0.245],[0,0.075],[0,0.146],[0,0.147],[0,0],[0,0.174],[0.075,0.173],[0.053,0.086],[0.061,0.072],[0.063,0.048],[0.073,0.062],[0.086,0.073],[0.077,0.051],[0.085,0.099],[0,0.138],[-0.039,0.099],[-0.037,0.063],[-0.041,0.091],[-0.012,0.145],[0,0.219],[0.012,0.075],[0.036,0.083],[0.085,0.035],[0.23,0],[0.012,-0.058],[0.027,-0.108],[0.015,-0.062],[0.016,-0.23],[0,-0.071],[0,-0.234],[0,0],[0.061,0.028],[0.077,0.051],[0.072,0.052],[0.059,0.06],[0.17,0.148],[0.076,0.075],[0.07,0.082],[0.048,0.065],[0.072,0.038],[0.059,0.014],[0.149,0.014],[0.147,0],[0.09,0.026],[0.147,0.05],[0.085,0],[0.073,-0.013],[0.072,-0.046],[0.029,-0.059],[0,-0.084],[0,-0.223],[0,-0.111],[0.036,-0.101],[0.038,-0.065],[0.073,-0.037],[0.17,-0.088],[0.22,0],[0.078,0.049],[0.132,0.138],[0.07,0.057],[0.146,0.124],[0.11,0.075],[0.063,0.048],[0.077,0.049],[0.062,0.027],[0.095,0.041],[0,0],[-0.014,-0.268],[0,0],[0,-0.112],[0,-0.184],[0.124,0.028],[0.072,0],[0.075,0],[0.107,-0.011],[0.272,0],[0.161,0.09],[0.076,0.034],[0.138,0.048],[0.081,0],[0.077,-0.024],[0.062,-0.039],[0.048,-0.061],[0.062,0.035],[0.069,0.119],[0.038,0.063],[0.026,0.058],[0.034,0.133],[0,0.242],[-0.024,0.096],[-0.098,0.196],[-0.011,0.304],[0,0.133],[0.016,0.122],[0.025,0.072],[0.014,0.06],[0.049,0.123],[0.036,0.097],[0,0.141],[-0.034,0.097],[-0.062,0.059],[-0.036,0.072],[-0.05,0.157],[-0.041,0.072],[-0.037,0.071],[-0.123,0.181],[-0.046,0.147],[-0.084,0.174],[-0.098,0.049],[-0.072,0.048],[-0.075,0.065],[-0.025,0.06],[-0.038,0.133],[-0.037,0.382],[-0.075,0.21],[-0.071,0.207],[-0.063,0.058],[-0.075,0.061],[-0.073,0.038],[0,0],[-0.076,0.006],[-0.077,-0.005],[-0.146,0.026],[-0.062,0.011],[-0.043,0.009],[-0.038,-0.002],[-0.062,0],[-0.074,0.014],[-0.102,0.049],[-0.135,0],[-0.088,-0.025],[-0.161,-0.134],[0,0],[-0.112,-0.011],[-0.134,0],[-0.111,-0.012],[-0.201,-0.012],[-0.086,-0.015],[0,0],[-0.088,0],[-0.11,0.009],[0.173,0.084],[0.236,0.096],[0.233,0.062],[0.147,0.013],[0,0],[0,0],[0,0.171],[0.053,0.063],[0.052,0.11],[0,0.088],[0,0.076],[0,0.097],[-0.007,0.31],[0.026,0],[0.248,0.249],[0.073,0.124],[0,0],[0.071,0.17],[0.098,0.145],[0.122,0.144],[0.146,0.048],[0,0],[0.174,0],[0.167,-0.073],[0.077,-0.102],[0.077,-0.168],[0,0],[0.267,0.467],[0.072,0.12],[0.096,0.125],[0.123,0.102],[0.143,0.102],[0.146,0.291],[0.026,0.123],[0.048,0.174],[0.219,0.368],[0.122,0.147],[0.102,0.247],[0,0],[0,0.148],[-0.022,0.49],[0.123,0.195],[0.15,0.049],[0.126,0.047],[0.149,0.074],[0.098,0.126],[0.072,0.126],[0.248,0.395],[0.177,0.296],[0,0],[0.194,0.421],[0,0.171],[-0.026,0.173],[-0.022,0.12],[0,0.297],[0.097,0.144],[0.127,0.101],[0.172,0.097],[0.293,0.243],[0.12,0.123],[0.101,0.122],[0.122,0.172],[0.224,0.297],[0.1,0.196],[0.149,0.174],[0.32,0.42],[0.368,0.492],[0.071,0.121],[0.072,0.171],[0.05,0.148],[0.026,0.292],[0,0.149],[0.026,0.149],[0.148,0.32],[0,0],[0,0.542],[0.294,0.243],[0.298,0.031],[0.468,0],[0.197,-0.076],[0.172,-0.269],[0.223,-0.225],[0.142,-0.051],[0,0],[0.201,0],[0.062,0.013],[0.067,-0.007],[0,0],[0.068,-0.173],[0.122,-0.15],[0.17,-0.124],[0.418,-0.146],[0.176,-0.052],[0.139,-0.034],[0.126,0.015],[0.171,-0.018],[0.126,-0.025],[0.27,-0.025],[0.195,-0.073],[0,0],[0.15,-0.149],[0.122,-0.022],[0.446,-0.076],[0,-0.269],[0,-0.147],[0.123,-0.147],[0.053,-0.04],[0.067,0.015],[0.171,-0.075],[0.12,-0.05],[0.147,-0.051],[0.126,-0.033],[0.122,0],[0,0],[0,-0.227],[0,-0.149],[0,-0.123],[0.098,-0.322],[0,0],[0.021,-0.119],[0.052,-0.146],[0.097,-0.294],[0.1,-0.12],[0.123,-0.051],[0,0],[0.152,0],[0,0],[0.023,-0.142],[0.026,-0.123],[0.049,-0.174],[0.075,-0.146],[0.146,-0.175],[0,0],[0.171,0.051],[0.102,0.072],[0,-0.465],[0.053,-0.515],[0.023,-0.174],[0.02,-0.126],[0.098,-0.102],[0.059,-0.011],[0.07,0.006],[0.295,-0.048],[-0.051,-0.32],[-0.071,-0.2],[-0.055,-0.011],[-0.074,0.01],[-0.147,-0.049],[-0.147,-0.07],[-0.052,-0.093],[-0.052,-0.173],[-0.021,-0.145],[-0.097,-0.198],[-0.266,-0.149],[-0.122,-0.025],[-0.151,-0.025],[0.026,-0.148],[0.078,-0.291],[0,-0.147],[-0.07,-0.122],[-0.122,-0.075],[0,0],[0,0.339],[-0.097,0.316],[-0.074,-0.316],[-0.027,-0.123],[-0.077,-0.148],[-0.102,-0.122],[0,0],[-0.098,-0.123],[-0.124,-0.12],[-0.1,0.124],[-0.118,0.071],[-0.122,0.077],[-0.273,0.148],[-0.099,0.444],[-0.027,0.292],[-0.296,-0.024],[-0.344,0],[0,0],[-0.199,0],[-0.27,-0.069],[-0.103,0],[-0.171,0.077],[-0.148,0.072],[-0.174,0.099],[-0.147,0.148],[-0.318,0],[-0.174,-0.076],[-0.144,-0.146],[-0.027,-0.119],[0,-0.15],[0.051,-0.103],[0.324,-0.218],[0,0],[0.248,0.021],[0.221,0.047],[0.246,0],[0.173,0],[-0.029,-0.122],[-0.145,-0.122],[0,0],[-0.294,0],[0,0],[-0.146,0],[-0.145,0],[-0.395,-0.073],[-0.258,-0.015],[-0.185,0.006],[-0.149,0],[0,0],[0,0],[-0.151,-0.124],[-0.124,-0.075],[-0.175,-0.094],[-0.123,-0.027],[-0.124,-0.027],[-0.147,-0.027],[-0.22,-0.077],[-0.047,-0.17],[-0.047,-0.271],[-0.074,-0.321],[-0.121,-0.168],[-0.026,-0.124],[-0.026,-0.121],[0,-0.196],[-0.028,-0.245],[0,-0.245],[0,-0.171],[0.095,-0.196],[0.196,-0.075],[0.39,0],[0.542,0.123],[0.128,0.124],[0.27,0.25],[0.121,0.146],[0.248,0.418],[0.097,0.176],[0.418,0.245],[0.343,0.17],[0.295,0.248],[0.273,0.174],[0.19,0.045],[0.116,-0.011],[0.148,0],[0.568,0.094],[0,0],[0,0],[0.147,-0.024],[0.137,-0.013],[0.126,0.005],[0.147,-0.025],[0,0],[0.296,0],[0.171,0.049],[0.273,0.193],[0.028,0.127],[0.028,0.121],[0.047,0.146],[0.124,0.094],[0.149,0.077],[0,0],[0.173,0],[0.196,0],[0.168,0.048],[0.127,0.07],[0.099,0.124],[0.171,0.098],[0,0],[0.344,0],[0,0],[0,0],[0,0],[0.393,0],[0.144,0.123],[0.126,0.097],[0.196,0.269],[0.121,0.099],[0.12,0.072],[0.146,0.1],[0.095,0.123],[0.099,0.265],[0.063,0.018],[0.168,-0.004],[0.099,0.124],[0.125,0.097],[0.121,0.077],[0,0],[0.294,0],[0.147,0.026],[0.123,0.024],[0.322,0.121],[-0.468,0],[-0.295,0.026],[-0.147,0.026],[0.025,0.144],[0.073,0.123],[0.102,0.069],[0.121,0.048],[0.175,0.074],[0.124,0.121],[0.248,0.299],[0.168,0.098],[0.172,0.128],[0.122,0.025],[0.147,0],[0.171,-0.072],[0.144,-0.102],[0.244,-0.146],[0.176,-0.075],[0.123,-0.167],[0.419,0],[0.124,0.076],[0.198,0.316],[0,0.295],[0.074,0.344],[0.021,0.121],[0.023,0.295],[0,0],[0,0.196],[-0.026,0.543],[0,0.15],[0.046,0.294],[0.027,0.123],[0.047,0.49],[0.024,0.394],[0.121,0.147],[0.121,0.151],[0.073,0.151],[0.023,0.128],[0.075,0.321],[0.022,0.128],[0.047,0.171],[0.076,0.169],[0.026,0.123],[0.026,0.148],[0.05,0.149],[0.1,0.17],[0.08,0.126],[0.126,0.168],[0.102,0.268],[0,0],[-0.03,0.3],[0,0.565],[0.097,0.169],[0.074,0.124],[0.073,0.149],[0.394,0.641],[0.222,0.445],[0.052,0.119],[0,0],[0.075,0.147],[0.2,0.171],[0.221,0],[0.147,-0.076],[0.073,-0.098],[0.073,-0.148],[0.2,-0.468],[0.102,-0.123],[0.048,-0.024],[0.071,0.012],[0.126,-0.048],[0.198,-0.073],[0.096,-0.122],[0.049,-0.117],[0.07,-0.149],[0.099,-0.25],[0,-0.394],[0.049,-0.172],[0.121,-0.271],[0.073,-0.273],[0.024,-0.297],[-0.026,-0.296],[0,-0.146],[0,0],[0,-0.616],[0,-0.174],[0.075,-0.123],[0.37,-0.271],[0.47,0],[0.219,-0.197],[0.051,-0.147],[0.075,-0.175],[0.127,-0.049],[0.123,-0.045],[0.171,-0.073],[0.15,-0.098],[0.124,-0.073],[0.126,-0.077],[0.145,-0.1],[0.199,-0.27],[0.099,-0.169],[0.124,-0.146],[0.1,-0.125],[0.27,-0.17],[0.127,-0.094],[0.073,-0.125],[0.073,-0.122],[0.069,-0.04],[0.058,0.011],[0.055,-0.011],[0.076,0.01],[0.171,-0.071],[0.071,-0.096],[0.172,-0.272],[0.125,-0.023],[0.089,-0.006],[0.196,0.004],[0.143,-0.096],[0.348,-0.491],[0.027,-0.294],[0,0],[0.175,0],[0.197,0.045],[0,0],[0.173,-0.026],[0.06,-0.024],[0.069,0.012],[0.196,-0.071],[0.123,-0.05],[0.145,-0.1],[0.12,-0.075],[0,0],[0,0],[0.272,0.026],[0.048,0.009],[0.091,-0.022],[0.1,0.119],[0.05,0.102],[0.081,0.15],[0.072,0.123],[0.121,0.12],[0.173,0.269],[0,0.294],[0,0.171],[0.077,0.121],[0.072,0.119],[0.073,0.097],[0.222,0.294],[0.147,0.123],[0.122,0.122],[0.101,0.147],[0,0],[0,0.15],[-0.024,0.312],[0,0],[0.295,-0.072],[0.17,0],[0.126,0.075],[0.073,0.1],[0,0.294],[-0.024,0.148],[-0.147,0.416],[0,0.612],[0.122,0.128],[0.146,0.097],[0.268,0.049],[0,0],[0.124,0],[0.145,-0.051],[0.124,-0.068],[0.147,-0.048],[0.32,-0.1],[0,0],[0,0],[0.02,-0.175],[0.465,0.099],[0.099,0.121],[0.074,0.149],[0.122,0.272],[0.126,0.487],[0.024,0.122],[0.073,0.147],[0.099,0.124],[0.073,0.122],[0,0.59],[0,0.173],[0.052,0.148],[0.101,0.143],[0.246,0.267],[0.12,0.121],[0.12,0.172],[0,0.295],[0,0.32],[0,0.417],[-0.124,0.072],[-0.121,0.046],[-0.122,0.093],[-0.053,0.122],[-0.073,0.441],[0,0],[-0.024,0.296],[-0.026,0.245],[0,0.389],[0.074,0.171],[0.126,0.097],[0.124,0.068],[0.339,0.173],[0.25,0.294],[0.122,0.074],[0.147,0.076],[0.099,0.15],[0.049,0.341],[0.028,0.291],[0.124,0.295],[0.072,0.171],[0.072,0.198],[0.147,0.322],[0,0],[0,0.169],[0.049,0.175],[0.051,0.172],[0.124,0.148],[0.123,0.072],[0.49,0.295],[0.296,0.097],[0.245,0.198],[0.069,0.123],[0.097,0.075],[0.121,0.047],[0.171,0.048],[0.244,0.072],[0,0],[0.198,0],[-0.175,-0.3],[-0.072,-0.116],[-0.098,-0.096],[-0.221,-0.226],[-0.075,-0.323],[0,-0.145],[-0.023,-0.466],[0,-0.125],[-0.022,-0.145],[-0.074,-0.166],[-0.099,-0.439],[0,0],[0,-0.147],[0,0],[0,-0.201],[0,0],[-0.472,0],[-0.149,-0.094],[-0.127,-0.098],[-0.122,-0.097],[-0.17,-0.122],[-0.27,-0.148],[-0.074,-0.009],[-0.092,0.012],[-0.321,-0.096],[-0.097,-0.146],[-0.027,-0.122],[-0.047,-0.272],[0,-0.149],[-0.025,-0.126],[-0.076,-0.124],[-0.124,-0.097],[-0.172,-0.222],[0,0],[0,-0.12],[-0.077,-0.098],[-0.122,-0.073],[0,0],[0,0],[0,-0.563],[0.246,-0.444],[0.1,-0.224],[0,-0.296],[0,-0.22],[0.076,-0.171],[0.12,-0.171],[0.12,0.05],[0.149,0.095],[0.125,0.097],[0.1,0.144],[0.124,0.251],[0.073,0.174],[0.172,0.122],[0,0],[0.146,-0.025],[0.147,-0.023],[0.345,0],[0.222,0.294],[0.122,0.296],[0.121,0.321],[0.149,0.297],[0.197,0.271],[0.072,0.03],[0.057,-0.008],[0.127,0.027],[0.121,0.022],[0.121,0.026],[0.125,0.099],[0,0.344],[-0.075,0.273],[0,0.688],[0.098,-0.146],[0.22,-0.295],[0.15,-0.124],[0.149,-0.125],[0.17,-0.147],[0.123,-0.096],[0.078,-0.12],[0.076,-0.146],[0.052,-0.123],[0.05,-0.122],[0.076,-0.197],[0.198,-0.048],[0.292,0.02],[0.198,-0.028],[0.393,-0.298],[0.172,-0.148],[0.122,-0.054],[0.146,-0.125],[0.072,-0.099],[0.072,-0.269],[0.022,-0.74],[0,0],[0,-0.344],[-0.126,-0.514],[-0.075,-0.315],[-0.02,-0.345],[-0.388,0],[-0.15,-0.027],[-0.173,-0.074],[-0.291,-0.296],[-0.049,-0.121],[-0.076,-0.104],[-0.146,-0.099],[-0.318,-0.196],[-0.174,-0.097],[-0.1,-0.126],[-0.115,-0.152],[-0.12,-0.242],[-0.019,-0.127],[-0.019,-0.174],[-0.098,-0.221],[0,-0.247],[0.024,-0.171],[0.05,-0.17],[0.123,-0.099],[0.126,-0.125],[0.076,-0.146],[0.048,-0.167],[0.023,-0.223],[0.022,-0.17],[0.073,-0.194],[0.126,-0.045],[0.1,-0.044],[0.065,0.012],[0.368,-0.047],[0.061,-0.024],[0.067,0.012],[0.175,-0.077],[0.12,-0.024],[0.296,-0.048],[0.147,0],[0.468,0],[0,0],[0,0.149],[0,0],[-0.122,0.121],[-0.15,0.072],[-0.061,0.025],[-0.068,-0.012],[-0.171,0.072],[-0.148,0.099],[-0.147,0.199],[0,0.219],[0.048,0.172],[0.049,0.148],[0,0],[0.075,-0.541],[0.023,-0.124],[0.049,-0.171],[0.027,-0.148],[0,-0.173],[-0.149,-0.248],[0,0],[0.324,0],[0,0],[0.171,0],[0.198,-0.099],[0.148,-0.102],[0.269,-0.099],[0.295,-0.047],[0,0],[0.145,0],[0.268,0.027],[0.151,0],[0.151,-0.048],[0.17,-0.077],[0.074,-0.121],[0.245,-0.101],[0.149,-0.025],[0.137,-0.011],[0.126,0.007],[0.15,0],[0.054,-0.011],[0.075,0.01],[0.175,-0.074],[0.147,-0.093],[0.125,-0.074],[0.173,-0.075],[0.123,-0.074],[0.101,-0.096],[0.123,-0.146],[0.097,-0.149],[0.145,-0.098],[0.128,0],[0.063,-0.013],[0.065,0.005],[0.319,-0.073],[0.122,-0.096],[0.095,-0.125],[0.147,-0.122],[0.123,-0.149],[0.074,-0.151],[0.049,-0.122],[0.049,-0.148],[0.198,-0.366],[0.247,-0.423],[0.05,-0.124],[0.097,-0.199],[0.124,-0.145],[0.172,-0.17],[0.168,-0.096],[0.149,-0.126],[0.073,-0.17],[0.048,-0.172],[0,-0.125],[0.025,-0.124],[0.029,-0.118],[0.073,-0.174],[0.32,-0.198],[0.246,-0.372],[0,-0.247],[-0.097,-0.147],[-0.069,-0.043],[-0.057,0.01],[-0.294,-0.073],[0,-0.297],[0,-0.149],[0,-0.148],[0,0],[-0.021,-0.126],[-0.047,-0.168],[-0.1,-0.442],[0,-0.127],[-0.05,-0.197],[-0.122,-0.145],[-0.075,-0.443],[0,-0.468],[-0.176,-0.345],[-0.242,-0.367],[-0.174,-0.073],[-0.08,-0.022],[-0.089,0.017],[-0.149,-0.075],[-0.047,-0.097],[0,0],[0,-0.17],[0.099,-0.196],[0.123,-0.15],[0.048,-0.27],[0,0],[0,0],[0.127,-0.099],[0.099,-0.148],[0.098,-0.123],[0.069,-0.042],[0.057,0.012],[0.126,-0.024],[0.149,-0.024],[0,0],[0.464,-0.027],[0.049,-0.394],[0,-0.124],[0,0],[-0.074,-0.125],[-0.198,-0.322],[0,0],[-0.023,0.294],[0,0.145],[-0.023,0.124],[-0.149,0],[-0.148,0],[-0.171,0],[0,0],[0,0],[-0.417,0],[0,-0.245],[0.047,-0.173],[0.099,-0.171],[0.123,-0.024],[0.443,-0.102],[0.147,0],[0.12,-0.028],[0.097,-0.073],[0.07,-0.171],[0.099,-0.148],[0.176,-0.076],[0.149,-0.046],[0.155,-0.031],[0.11,0.009],[0.123,0],[0.172,-0.028],[0.145,-0.123],[0.122,-0.147],[0.172,-0.175],[0.173,-0.125],[0,0],[0.176,-0.023],[0,0],[-0.098,0.121],[-0.124,0.148],[-0.124,0.248],[-0.073,0.365],[-0.097,0.125],[-0.121,0.145],[-0.074,0.093],[0,0],[0.129,-0.072],[0.149,-0.121],[0,0],[0.222,0],[0.272,-0.197],[0.122,-0.122],[0.123,-0.048],[0.15,-0.052],[0.492,0],[0.059,0.01],[0.07,-0.006],[0.299,0.047],[0.145,0.074],[0.196,0.225],[0,0],[0,0.173],[-0.098,0.2],[-0.049,0.119],[-0.1,0.245],[0,0.341],[0,0],[0,0],[0.169,-0.075],[0.146,0],[0.346,0.124],[0.05,0.125],[0.073,0.273],[0.023,0.125],[0.022,0.145],[0.096,0.196],[0,0],[0,0.244],[-0.122,0.149],[-0.05,0.121],[-0.046,0.144],[0,0],[0,0],[0.54,0],[0,0],[0.17,-0.096],[0.196,-0.122],[0.123,-0.052],[0.146,-0.074],[0.169,-0.076],[0.08,-0.024],[0.089,0.017],[0.146,-0.074],[0.047,-0.097],[0.023,-0.268],[0,-0.196],[0,-0.12],[0,0],[-0.397,0],[-0.173,-0.12],[-0.049,-0.343],[0,-0.124],[-0.072,-0.124],[-0.125,-0.099],[-0.149,-0.1],[-0.122,-0.1],[-0.121,-0.099],[-0.072,-0.097],[-0.072,-0.149],[-0.073,-0.193],[0,-0.419],[0.048,-0.166],[0.072,-0.144],[0.078,-0.126],[0.055,-0.038],[0.061,0.011],[0.319,-0.094],[0,0],[0.291,-0.025],[0,0],[0,-0.15],[0.024,-0.127],[0.07,-0.149],[0.048,-0.024],[0.072,0.014],[0.147,-0.05],[0.417,-0.222],[0.097,-0.147],[0.221,-0.268],[0.128,-0.046],[0.151,0],[0.659,0.172],[0.123,0.021],[0.321,0],[0.146,-0.07],[0.15,-0.1],[0.148,-0.097],[0.066,-0.039],[0.063,0.014],[0.17,-0.074],[0.15,-0.056],[0.114,0.017],[0.147,-0.028],[0.12,-0.021],[0.144,-0.098],[0.099,-0.075],[0.223,-0.297],[0.122,-0.097],[0.097,-0.121],[0.102,-0.124],[0.42,-0.467],[0.15,-0.121],[0.298,-0.247],[0.049,-0.121],[0.076,-0.175],[0.052,-0.121],[0.125,-0.298],[0.075,-0.173],[0.219,-0.368],[0.125,-0.074],[0.121,-0.079],[0.064,-0.04],[0.064,0.014],[0.341,-0.172],[0.124,-0.144],[0.098,-0.122],[0.125,-0.169],[0.146,-0.147],[0.125,-0.145],[0.05,-0.272],[0,-0.149],[0.022,-0.296],[0,0],[0.022,-0.169],[0.075,-0.173],[0.176,-0.369],[0,0],[0,-0.151],[0,0],[0,-0.148],[0.025,-0.176],[0.031,-0.122],[0.051,-0.267],[0.078,-0.192],[0.07,-0.124],[0.069,-0.148],[0.122,0.073],[0.122,0.098],[0.098,0.05],[0.149,0.098],[0.121,0.146],[0,0.149],[0,0.172],[-0.052,0.196],[0,0.393],[0.093,0.64],[0,0.513],[0,0.151],[-0.077,0.172],[-0.098,0.15],[-0.1,0.176],[0,0.223],[0.073,0.468],[0.124,0.37],[0,0.221],[-0.075,0.166],[-0.125,0.122],[-0.076,0.224],[0,0.221],[0,0.194],[0,0.147],[0,0],[0.119,-0.095],[0.05,-0.119],[0,0],[0.073,-0.173],[0.072,-0.123],[0.103,0.099],[0.072,0.272],[0.072,0.146],[0.37,0.271],[-0.022,-0.147],[-0.022,-0.148],[-0.024,-0.122],[-0.068,-0.176],[-0.124,-0.169],[-0.1,-0.122],[-0.097,-0.145],[-0.147,-0.291],[-0.078,-0.17],[-0.124,-0.269],[0,-0.394],[0.074,-0.146],[0.026,-0.196],[0.026,-0.122],[0.051,-0.147],[0.074,-0.125],[0.122,-0.096],[0.318,0],[0.345,0.171],[0.197,0],[-0.023,-0.147],[-0.023,-0.144],[-0.025,-0.124],[-0.073,-0.297],[-0.025,-0.121],[0,-0.196],[-0.051,-0.173],[-0.074,-0.445],[-0.025,-0.124],[-0.074,-0.172],[-0.074,-0.149],[-0.198,-0.323],[-0.052,-0.146],[-0.023,-0.122],[0,-0.169],[0,-0.15],[0,0],[0,-0.195],[0,-0.171],[0,-0.146],[-0.052,-0.149],[-0.038,-0.065],[-0.079,0.007],[-0.146,-0.247],[-0.024,-0.272],[-0.029,-0.346],[0,-0.295],[0,0],[0,0],[-0.268,0],[-0.174,0.028],[0,0],[0,0.146],[0,0],[0.021,0.145],[0.049,0.267],[0,0],[-0.055,-0.03],[-0.09,0.001],[-0.075,-0.145],[0,-0.147],[0,-0.148],[0.047,-0.269],[0,0],[-0.024,-0.175],[-0.098,-0.169],[-0.15,-0.073],[-0.062,-0.013],[-0.066,0.005],[-0.193,-0.051],[-0.124,-0.099],[-0.095,-0.07],[-0.517,-0.319],[0,0],[0,0],[0,0],[-0.027,-0.15],[-0.027,-0.172],[-0.17,-0.54],[0,0],[0.024,0.147],[0,0],[0,0.148],[-0.1,-0.013],[-0.073,0.007],[-0.173,-0.027],[0,0],[0,-0.147],[0.049,-0.226],[0,-0.445],[-0.145,0.147],[-0.151,0.047],[0,0],[0,0],[-0.17,0],[0.026,-0.294],[0.053,-0.173],[0.124,-0.149],[0.065,-0.026],[0.061,0.008],[0.295,-0.098],[0.175,-0.049],[0.148,-0.099],[0.15,-0.195],[0.173,-0.197],[0.125,-0.049],[0.149,-0.024],[0.272,-0.048],[0,-0.565],[0.051,-0.146],[0.122,-0.147],[0.122,-0.099],[0.121,-0.073],[0.101,-0.146],[0.122,-0.074],[0.123,-0.103],[0.149,-0.097],[0.145,-0.125],[0.125,-0.1],[0.125,-0.075],[0.058,-0.023],[0.071,0.013],[0.12,-0.072],[0.075,-0.124],[0.048,-0.125],[0.051,-0.147],[0.078,-0.172],[0.078,-0.127],[0.224,-0.219],[0.152,-0.025],[0.149,0.016],[0.322,-0.077],[0.149,-0.096],[0.147,-0.171],[0.194,-0.248],[0.393,0],[0.068,0],[0.374,0],[0,0],[0.172,0],[0,0],[0.147,0],[0.246,-0.024],[0,0],[0.172,0],[0.268,0.099],[0.224,0],[0.151,-0.027],[0,0],[0,0],[0.029,-0.345],[0.099,-0.152],[0.2,0.148],[0.196,0.122],[0.296,0],[0.249,0],[0.172,0.097],[0.12,0.048],[0.17,0.075],[-0.049,0.123],[-0.097,0.169],[0,0.273],[0.124,0.096],[0,0],[0.39,0],[0.124,-0.145],[0.122,-0.146],[0.518,0],[0.125,0.121],[0.023,-0.145],[0.023,-0.173],[0.121,0.051],[0.171,0.073],[0,0],[-0.028,-0.124],[-0.075,-0.172],[-0.027,-0.099],[-0.293,0.025],[-0.146,0],[0,0],[0,-0.344],[0.061,-0.037],[0.071,0.019],[0.148,-0.099],[0.098,-0.126],[0.069,-0.148],[0.096,-0.148],[0.124,-0.149],[0.053,-0.009],[0.076,0.01],[0,0],[0.172,-0.098],[0.27,-0.39],[0.394,-0.441],[0.293,-0.246],[0.219,0],[0.223,0.052],[0,0],[0.175,0],[0.173,-0.095],[0,0],[0.193,0],[0.122,0.101],[0.123,0.045],[0.063,0.014],[0.066,-0.005],[0.171,0.026],[-0.148,0.222],[0,0],[0.022,0.15],[0.076,0.12],[0.052,0.121],[0.052,0.267],[0,0],[0.121,-0.077],[0.145,-0.126],[0.291,-0.273],[0.122,-0.05],[0.144,-0.074],[0.148,-0.098],[0.124,-0.143],[0.122,-0.098],[0.268,-0.099],[0.051,-0.01],[0.079,0.015],[0.126,-0.072],[0.075,-0.123],[0.052,-0.146],[0.05,-0.27],[0.025,-0.296],[0.293,0],[0.319,-0.051],[0,0],[0,0],[-0.144,0.098],[0,0],[-0.15,0.074],[-0.168,0.1],[-0.073,0.148],[-0.025,0.123],[-0.025,0.121],[-0.025,0.121],[-0.072,0.345],[-0.029,0.122],[-0.023,0.122],[-0.073,0.153],[-0.097,0.074],[-0.172,0.07],[-0.126,0.05],[-0.1,0.099],[-0.05,0.122],[-0.15,0.347],[-0.467,0.27],[-0.493,0.316],[-0.469,0.268],[-0.441,0.366],[-0.101,0.122],[-0.27,0.196],[-0.077,0.096],[-0.096,0.174],[-0.063,0.013],[-0.066,-0.006],[-0.085,0.013],[-0.079,-0.006],[-0.149,0.024],[-0.126,0.026],[-0.343,0.101],[-0.148,0.049],[-0.055,0.012],[-0.075,-0.01],[-0.144,0.051],[-0.126,0.15],[0,0.248],[0,0.417],[-0.072,0.199],[-0.1,0.122],[-0.05,0.099],[-0.071,0.17],[-0.025,0.198],[0,0.295],[-0.073,0.319],[-0.097,0.319],[0,0.295],[0,1.649],[0,0.223],[-0.049,0.196],[0,0],[0,0],[0.174,0],[0.196,0],[0.125,-0.025],[0.15,-0.051],[0.123,-0.025],[0.244,-0.02],[0,-0.465],[0,-0.124],[0.075,-0.173],[0.102,-0.121],[0.145,-0.122],[0.1,-0.147],[0,0],[0.077,-0.146],[0.126,-0.199],[0,0],[0.168,0],[0,0],[0.15,0],[0.151,-0.073],[0.121,-0.101],[0,0],[0.27,-0.272],[0.123,-0.125],[0,0],[0,0],[0,-0.318],[-0.07,-0.173],[0,0],[0,0],[0.028,-0.169],[0.099,-0.197],[0.073,-0.127],[0.122,-0.172],[0.223,0],[0.1,0.075],[0.122,0.146],[0,0],[0,0],[-0.097,-0.123],[-0.248,-0.244],[-0.045,-0.118],[-0.025,-0.12],[-0.025,-0.145],[-0.047,-0.294],[0,-0.172],[0.075,-0.123],[0.123,-0.076],[-0.021,-0.123],[-0.049,-0.172],[-0.055,0.012],[-0.075,-0.01],[-0.168,0.073],[0,0],[0.021,-0.296],[0.098,-0.321],[0.046,-0.122],[0.078,-0.148],[0.245,-0.222],[0.122,-0.099],[0.074,-0.122],[0.045,-0.145],[0.025,-0.121],[0.049,-0.32],[0,-0.147],[0.022,-0.124],[0.075,-0.144],[0.097,-0.075],[0.121,-0.024],[0.344,0],[0.121,0.074],[0.168,0.172],[0.246,0],[0.144,-0.073],[0.123,-0.121],[0.122,-0.097],[0.101,0.148],[0.052,0.124],[0.073,0.176],[0.061,-0.012],[0.067,0.006],[0.176,-0.049],[0.146,-0.099],[0.269,-0.273],[0.096,-0.148],[0.195,-0.072],[0.222,0],[0.147,0],[0.152,0.025],[0,0],[0,0.294],[0,0.148],[0.099,0.323],[0.053,0.027],[0.063,-0.009],[0,-0.613],[0.098,-0.093],[0.148,-0.099],[0.151,-0.098],[0.246,-0.32],[0.146,-0.196],[0.119,-0.125],[0.245,-0.098],[0.176,-0.051],[0,0],[0.342,0],[0.147,-0.022],[0.293,-0.097],[0.17,-0.048],[0.124,-0.097],[0.124,-0.148],[0.122,-0.047],[0.467,-0.246],[0.189,-0.044],[0.115,0.01],[0.194,0],[0.171,-0.048],[0.366,-0.271],[0.151,-0.074],[0.271,-0.049],[0.467,0],[0.169,0.052],[0.171,0.099],[0.121,0.05],[0.367,0.094],[0,0],[0.193,0],[0,0],[-0.148,-0.097],[-0.123,-0.124],[-0.047,-0.122],[0,0],[-0.072,-0.175],[-0.074,-0.145],[-0.05,-0.122],[0,0],[-0.415,0],[-0.071,-0.121],[-0.048,-0.124],[-0.072,-0.124],[-0.1,-0.148],[0,0],[-0.195,0],[-0.101,-0.071],[0.148,-0.123],[0.122,-0.074],[0.171,-0.096],[0.126,-0.026],[0,0],[0.369,0.046],[0,0],[0.319,0],[0.292,0],[0.32,-0.121],[0.122,-0.145],[0.099,-0.128],[0.096,-0.194],[0,-0.221],[-0.029,-0.065],[-0.078,0.002],[-0.075,-0.095],[0,0],[0.371,-0.028],[0.488,0],[0.05,0.125],[0.05,0.145],[0.143,0.343],[0,0],[0.194,0],[0.171,0.048],[0.123,0.098],[0.1,0.447],[0,0],[0.346,0],[0.149,0.099],[0.245,0.194],[0.173,0.076],[0.218,0.095],[0,0],[0.169,-0.046],[0.048,-0.124],[0.025,-0.294],[0,-0.15],[0,0],[0.273,-0.024],[0,-0.468],[0,-0.148],[0,-0.145],[0.028,-0.122],[0.049,-0.147],[0.298,0.216],[0.175,0.078],[0,0],[0.142,0],[0.146,-0.049],[0.146,-0.097],[0.123,-0.121],[0.119,-0.101],[0.048,-0.026],[0.069,0.012],[0.169,-0.075],[0.125,-0.073],[0.074,-0.119],[0,-0.323],[-0.151,-0.074],[-0.11,-0.027],[-0.163,0.01],[-0.099,-0.072],[-0.099,-0.151],[-0.098,-0.149],[-0.267,-0.198],[0,0],[-0.271,0.028],[-0.443,0],[0,0],[-0.081,-0.009],[-0.082,0.006],[-0.198,-0.02],[-0.174,-0.099],[-0.151,-0.026],[-0.174,0],[-0.171,0.026],[0.147,0.099],[0.062,0.025],[0.07,-0.012],[0.124,0.074],[0.151,0.124],[0,0],[-0.021,0.122],[-0.098,0.224],[-0.439,0],[-0.048,-0.095],[0,0],[0,-0.174],[-0.147,-0.097],[-0.149,-0.048],[0,0],[-0.122,0],[-0.342,-0.024],[-0.196,-0.046],[-0.124,-0.052],[-0.176,-0.074],[-0.27,-0.099],[-0.194,-0.093],[-0.147,-0.121],[-0.076,-0.098],[-0.099,-0.073],[-0.168,-0.075],[-0.322,-0.047],[-0.145,0],[-0.344,-0.026],[0,-0.42],[-0.346,-0.417],[-0.223,-0.147],[-0.246,-0.096],[-0.167,-0.011],[-0.139,0.006],[-0.172,0],[-0.174,-0.047],[-0.167,-0.098],[-0.062,-0.01],[-0.066,0.006],[-0.147,-0.048],[0,0],[0,0],[-0.174,0],[-0.176,-0.049],[-0.39,-0.127],[-0.149,-0.077],[-0.467,0],[0,0],[-0.171,0],[-0.223,0.096],[-0.195,0.073],[-0.417,0],[0,0],[-0.198,0],[-0.194,-0.048],[-0.063,-0.011],[-0.067,0.007],[-0.321,-0.098],[-0.298,-0.17],[-0.122,-0.022],[-0.194,-0.027],[-0.222,0],[-0.146,0.025],[-0.146,0.097],[0,0.149],[-0.075,0.17],[-0.048,0.148],[-0.102,0.169],[0.122,0.051],[0.169,0.073],[0.12,0.073],[0.172,0.223],[0,0.145],[-0.048,0.198],[-0.099,0.122],[-0.122,0.099],[0,0],[0,0],[0,0],[0,0],[0,0],[0.464,0],[0.32,-0.1],[0,0],[-0.12,-0.029],[-0.146,-0.025],[0,0],[0,0.319],[0,0.148],[-0.049,0.149],[-0.075,0.121],[-0.22,0.096],[0,0],[-0.172,-0.026],[-0.267,-0.126],[-0.833,-0.12],[0,0],[-0.194,0],[-0.418,0.05],[-0.221,0.025],[-0.22,0],[-0.198,-0.024],[-0.194,-0.151],[-0.124,-0.075],[0,0],[-0.021,0.223],[0,0.145],[0,0],[0,0],[0,0],[0,0],[0,-0.294],[-0.099,-0.151],[-0.122,-0.073],[-0.147,-0.047],[-0.151,-0.047],[-0.175,-0.097],[-0.146,-0.246],[0,-0.394],[0,-0.124],[0,-0.171],[-0.075,-0.169],[-0.074,-0.12],[-0.097,-0.074],[-0.147,-0.126],[-0.097,-0.071],[-0.097,-0.05],[-0.058,-0.009],[-0.07,0.007],[-0.149,-0.021],[-0.166,-0.023],[-0.122,-0.029],[-0.292,-0.023],[-0.343,-0.023],[-0.148,0],[-0.148,0.024],[-0.147,0.073],[-0.143,0.077],[-0.175,0.075],[-0.148,0.051],[0,0],[-0.149,0.026],[-0.488,0.021],[-0.392,0],[-0.174,0.052],[0,0],[-0.145,0],[-0.145,-0.028],[-0.124,-0.049],[-0.193,-0.094],[-0.176,-0.121],[-0.122,-0.021],[0,0],[-0.198,0],[-0.217,-0.023],[-0.222,-0.029],[-0.194,-0.048],[0,0],[-0.297,-0.148],[-0.146,-0.097],[-0.121,-0.099],[-0.246,-0.15],[0,0],[0,0],[0.122,-0.121],[0.267,-0.176],[0,0],[-0.073,-0.01],[-0.067,0.007],[-0.195,-0.048],[0,0],[-0.024,0.298],[-0.046,0.174],[-0.197,0.295],[-0.121,0.052],[0,0],[-0.175,-0.025],[0.07,-0.148],[0.076,-0.17],[0.021,-0.125],[0.068,-0.17],[0.076,-0.094],[0.098,-0.076],[-0.296,0],[-0.197,0],[-0.172,-0.072],[-0.076,-0.011],[-0.089,0.011],[-0.322,-0.094],[-0.123,-0.022],[-0.197,0],[-0.346,0.023],[-0.291,0],[-0.219,-0.047],[-0.08,-0.012],[-0.088,0.011],[-0.294,-0.075],[-0.248,-0.038],[-0.188,0.015],[-0.293,-0.025],[-0.15,0],[-0.196,0],[-0.071,0.097],[-0.071,0.321],[0,0],[-0.343,0],[0,0.145],[0.028,0.194],[0.099,0.148],[0.146,0.075],[0.123,0.073],[0.123,0.075],[0.128,0.149],[0.053,0.12],[0.022,0.147],[0,0.147],[0,0],[-0.266,-0.051],[-0.122,-0.025],[-0.09,-0.013],[-0.078,0.006],[-0.124,-0.027],[-0.176,-0.048],[-0.149,-0.026],[-0.143,0],[-0.391,0],[0,0],[0,0],[0.151,0.075],[0.196,0.127],[0,0.267],[-0.372,-0.072],[-0.147,-0.101],[-0.147,-0.124],[-0.127,-0.098],[-0.096,-0.15],[-0.047,-0.1],[-0.098,-0.076],[-0.296,-0.073],[-0.169,0],[-0.12,0],[-0.123,0.073],[-0.1,0.146],[-0.346,0.348],[-0.444,0],[-0.343,0],[-0.12,0],[-0.172,-0.048],[-0.123,-0.051],[-0.148,0],[-0.174,0.048],[-0.439,0],[-0.245,0],[-0.124,0.294],[0.025,0.467],[-0.024,0.294],[0,0],[0,-0.464],[-0.124,-0.144],[-0.175,-0.149],[-0.122,-0.048],[-0.175,-0.07],[-0.173,-0.097],[-0.171,-0.122],[-0.32,-0.273],[0,0],[0,-0.145],[0.048,-0.149],[0,-0.194],[-0.025,-0.296],[0,-0.344],[-0.025,-0.341],[0,-0.297],[-0.049,-0.148],[-0.075,-0.172],[-0.175,-0.146],[-0.147,-0.071],[-0.248,-0.048],[-0.271,0],[-0.075,0.121],[-0.074,0.095],[-0.122,0.172],[-0.467,0],[-0.075,-0.146],[-0.096,-0.171],[-0.145,-0.121],[-0.125,-0.029],[-0.137,-0.019],[-0.198,0.008],[-0.175,-0.079],[-0.318,-0.246],[-0.272,0],[-0.169,0.046],[-0.195,0.101],[-0.177,0.072],[-0.198,0.094],[0,0],[0.076,0.169],[0.098,0.146],[0.021,0.173],[0,0.171],[0,0],[-0.221,0],[-0.397,0.15],[-0.442,0],[-0.221,-0.097],[-0.321,-0.096],[-0.194,-0.072],[-0.199,-0.101],[-0.171,0],[-0.194,0.049],[-0.243,0],[-0.149,-0.251],[0,0],[-0.146,-0.101],[-0.172,-0.073],[-0.127,-0.022],[-0.143,0],[-0.171,0],[-0.145,0.076],[-0.298,0],[0,0],[-0.147,-0.025],[0,0],[0,0],[-0.464,0],[-0.125,0],[-0.123,0.024],[-0.222,0.128],[0,0],[-0.15,0],[-0.174,0],[0,-0.293],[0,-0.149],[0,-0.15],[0,0],[-0.124,0.075],[-0.121,0.097],[-0.273,0.294],[-0.22,0],[-0.198,-0.079],[0,0],[0.297,0],[0.149,0],[0.174,-0.075],[0.122,-0.074],[0.104,-0.077],[0.147,-0.075],[0.198,-0.125],[0,0],[-0.05,-0.151],[-0.147,-0.148],[-0.39,0],[-0.171,0.05],[-0.124,0.069],[-0.153,0.125],[-0.099,0.15],[-0.126,0.125],[-0.173,0.147],[0,0],[0,0],[0.025,0.149],[0.072,0.221],[0,0],[-0.052,0.146],[-0.124,0.101],[-0.197,0.12],[0,0],[-0.15,0],[-0.296,-0.028],[-0.197,0],[-0.172,0.074],[-0.266,0.051],[0,0],[-0.393,0.025],[0,0],[-0.071,0],[0.226,-0.025],[0.147,-0.098],[0.122,-0.127],[0.127,-0.098],[0.121,-0.071],[0.143,-0.039],[0.119,0.015],[0.124,0],[0.149,-0.075],[0.121,-0.103],[0.271,-0.251],[0.192,-0.271],[0.22,-0.173],[0,0],[0.147,0],[0.124,0],[0.149,-0.05],[0.1,-0.074],[0.1,-0.151],[0.218,-0.173],[0,0],[0.15,0],[0.194,0],[0.123,-0.024],[0.17,-0.048],[0.151,-0.124],[0.027,-0.122],[0.075,-0.275],[0,0],[0.027,-0.221],[0.023,-0.145],[0.047,-0.147],[0.038,-0.05],[0.079,0.024],[0.097,-0.125],[0,-0.145],[-0.026,-0.122],[-0.04,-0.062],[-0.08,0.005],[-0.07,-0.124],[-0.07,-0.122],[-0.039,-0.05],[-0.082,0.025],[-0.051,-0.101],[-0.075,-0.173],[-0.145,-0.2],[-0.174,-0.074],[-0.087,-0.011],[-0.081,0.007],[-0.121,-0.024],[-0.05,-0.467],[0,0],[-0.32,0],[-0.319,-0.049],[-0.148,0],[-0.147,0.048],[-0.143,0.076],[-0.099,0.08],[-0.245,-0.269],[-0.098,-0.05],[-0.222,-0.051],[-0.22,0],[0,0],[0,0],[0,0],[0.097,-0.12],[0.098,-0.072],[0.195,-0.22],[0,-0.169],[0,0],[-0.319,0],[-0.397,-0.024],[-0.147,0],[0.072,-0.146],[0.194,-0.268],[0.069,-0.028],[0.06,0.009],[0.169,-0.051],[0,0],[0,0]],\"v\":[[172.657,-138.643],[172.24,-138.443],[171.456,-138.15],[171.064,-138.15],[169.88,-137.757],[169.486,-137.658],[169.095,-137.364],[168.801,-136.872],[168.801,-136.481],[168.801,-136.086],[168.508,-135.69],[167.719,-135.299],[167.915,-134.906],[168.306,-134.713],[168.212,-134.244],[164.28,-134.244],[164.081,-133.432],[163.65,-133.343],[163.196,-133.239],[163.196,-132.843],[162.899,-132.447],[162.507,-132.252],[161.425,-132.151],[160.736,-132.151],[160.344,-132.349],[159.952,-132.643],[159.658,-133.038],[159.264,-133.136],[158.868,-133.136],[157.887,-133.136],[157.493,-133.136],[156.61,-133.432],[156.117,-133.333],[155.944,-133.328],[155.626,-133.239],[155.331,-132.843],[155.428,-132.349],[155.331,-131.955],[154.939,-131.761],[154.421,-131.564],[152.308,-131.564],[151.298,-131.171],[150.808,-130.974],[150.019,-130.583],[149.628,-130.484],[149.137,-130.088],[148.746,-130.189],[148.548,-130.583],[148.103,-130.583],[147.27,-130.484],[146.874,-130.189],[146.092,-129.791],[145.696,-129.401],[145.301,-129.304],[144.813,-129.304],[143.829,-129.205],[143.043,-128.812],[142.746,-128.419],[142.647,-127.924],[142.454,-127.535],[142.235,-127.527],[142.058,-127.535],[141.568,-127.535],[141.175,-127.437],[140.783,-127.337],[140.391,-127.238],[139.993,-126.845],[140.391,-126.057],[140.783,-125.863],[141.663,-125.566],[142.058,-125.368],[142.058,-124.978],[142.058,-124.585],[141.764,-124.19],[141.371,-124.289],[140.092,-124.485],[139.306,-124.386],[138.913,-124.289],[138.618,-123.893],[138.225,-123.597],[137.834,-123.597],[137.441,-123.597],[136.947,-123.994],[135.866,-123.893],[135.079,-123.893],[134.684,-123.797],[134.271,-123.597],[132.449,-123.597],[132.033,-123.7],[131.639,-123.597],[131.538,-123.207],[131.246,-122.816],[129.204,-122.816],[128.491,-122.225],[128.691,-121.832],[129.079,-121.437],[129.472,-121.045],[129.866,-120.748],[129.866,-119.963],[129.866,-119.566],[130.066,-119.177],[130.163,-118.784],[131.149,-118.685],[131.736,-118.685],[132.227,-118.784],[132.624,-118.585],[132.918,-118.195],[133.309,-117.799],[133.309,-117.408],[133.309,-117.015],[132.423,-116.421],[131.835,-116.619],[131.441,-116.818],[131.246,-117.212],[131.05,-117.211],[130.855,-117.212],[130.361,-117.408],[129.967,-117.503],[129.571,-117.604],[129.472,-117.998],[129.376,-118.391],[128.983,-118.585],[126.647,-118.585],[125.839,-118.978],[125.743,-119.373],[124.949,-119.566],[124.559,-119.566],[124.168,-119.274],[123.772,-119.177],[122.594,-118.881],[122.691,-118.491],[123.082,-118.391],[123.871,-118.391],[124.267,-118.391],[124.559,-117.998],[124.853,-117.604],[124.658,-117.212],[123.772,-117.306],[123.381,-117.408],[123.082,-117.799],[122.447,-117.799],[122.197,-117.799],[121.806,-117.799],[121.611,-117.408],[121.514,-117.015],[121.116,-116.619],[122.103,-115.736],[122.48,-115.736],[122.889,-115.736],[123.283,-115.639],[124.46,-115.144],[124.756,-114.752],[125.149,-114.655],[125.543,-114.458],[125.743,-114.066],[125.543,-113.67],[125.149,-114.262],[124.72,-114.326],[124.361,-114.36],[123.97,-114.655],[123.775,-114.654],[123.576,-114.655],[123.383,-114.654],[123.184,-114.655],[122.79,-114.95],[122.396,-115.05],[121.813,-115.048],[121.219,-115.05],[120.431,-115.344],[120.04,-115.736],[119.746,-116.128],[119.842,-116.525],[119.842,-117.306],[119.842,-118.096],[120.137,-118.491],[120.137,-118.881],[120.137,-119.274],[120.04,-119.669],[119.644,-119.867],[119.644,-120.257],[119.249,-121.045],[118.858,-120.849],[118.66,-120.848],[118.464,-120.849],[118.464,-120.257],[118.566,-119.867],[118.566,-118.685],[118.464,-118.29],[118.464,-117.847],[117.678,-117.896],[117.186,-117.799],[116.796,-117.847],[116.796,-117.212],[116.694,-116.818],[116.301,-116.619],[115.91,-116.525],[115.415,-115.639],[115.415,-115.441],[116.301,-114.36],[116.991,-113.67],[116.991,-113.277],[117.186,-112.491],[117.087,-112.098],[116.892,-111.705],[116.4,-111.117],[116.4,-110.92],[116.595,-110.525],[116.694,-110.034],[116.796,-109.642],[116.595,-109.247],[116.694,-108.853],[117.087,-108.069],[117.504,-107.871],[119.447,-107.871],[119.746,-108.265],[120.137,-108.561],[120.527,-108.951],[120.725,-108.951],[121.116,-108.853],[121.413,-108.462],[122.197,-107.968],[122.594,-107.871],[122.988,-107.577],[123.381,-106.79],[124.066,-106.099],[124.46,-105.808],[124.756,-105.413],[124.46,-104.626],[124.168,-104.232],[123.772,-103.941],[123.97,-103.546],[124.152,-103.552],[124.361,-103.546],[124.756,-103.349],[125.051,-102.954],[125.818,-102.851],[126.23,-102.857],[126.621,-102.76],[126.331,-102.367],[125.936,-102.169],[125.149,-102.071],[124.756,-102.071],[124.361,-102.367],[123.97,-102.66],[123.576,-102.76],[123.381,-103.741],[123.381,-104.334],[123.477,-104.727],[122.889,-105.512],[122.495,-105.709],[122.495,-106.099],[122.197,-106.494],[121.806,-106.594],[121.314,-106.691],[120.527,-106.79],[119.348,-106.691],[118.954,-106.691],[118.566,-106.494],[118.17,-106.296],[117.775,-105.903],[117.876,-105.512],[117.975,-105.119],[118.267,-104.134],[118.071,-103.148],[117.975,-102.76],[117.581,-102.367],[117.186,-102.071],[116.694,-101.676],[116.301,-101.38],[116.301,-100.4],[115.517,-100.4],[114.339,-99.708],[113.546,-99.222],[113.546,-98.824],[113.254,-98.43],[112.861,-98.43],[112.072,-98.533],[111.68,-98.727],[111.287,-98.824],[110.868,-99.12],[108.536,-99.12],[108.142,-99.32],[108.436,-99.708],[108.73,-100.104],[109.319,-100.104],[109.913,-100.104],[110.305,-99.907],[111.092,-99.907],[111.878,-99.907],[112.274,-100.204],[112.665,-100.497],[113.056,-100.792],[113.449,-101.579],[113.845,-101.778],[114.529,-102.464],[114.629,-102.857],[115.025,-103.057],[115.415,-103.252],[115.415,-103.645],[115.517,-104.035],[115.808,-104.824],[115.91,-105.217],[116.009,-105.609],[116.202,-105.981],[116.103,-106.47],[115.316,-106.397],[114.827,-106.494],[114.339,-106.691],[114.042,-107.083],[113.943,-107.676],[114.137,-108.658],[114.137,-109.835],[114.137,-110.23],[114.339,-111.016],[114.529,-112.196],[114.529,-112.591],[114.137,-113.377],[114.042,-113.772],[113.746,-114.554],[113.449,-114.95],[113.254,-115.316],[113.254,-117.752],[114.042,-117.702],[114.434,-117.799],[114.529,-117.752],[114.556,-120.159],[113.546,-120.257],[113.157,-120.652],[112.762,-120.748],[111.977,-120.748],[111.188,-120.748],[110.6,-120.849],[109.616,-120.652],[109.22,-120.358],[108.832,-120.159],[108.436,-120.159],[107.648,-120.159],[107.258,-120.064],[107.258,-118.881],[107.258,-118.391],[106.766,-117.604],[106.471,-117.212],[105.78,-116.421],[105.587,-115.639],[105.391,-115.144],[104.996,-115.05],[104.543,-115.036],[104.208,-115.05],[103.816,-115.05],[103.424,-114.85],[103.227,-114.262],[103.227,-114.066],[103.323,-113.576],[103.523,-113.569],[103.717,-113.576],[104.406,-112.884],[104.504,-112.098],[104.31,-111.313],[103.915,-111.214],[103.522,-111.016],[103.424,-110.404],[103.522,-109.642],[104.31,-109.642],[104.703,-109.642],[105.098,-109.346],[105.391,-108.951],[105.391,-108.561],[105.587,-108.168],[105.979,-107.968],[106.273,-107.577],[106.668,-107.479],[107.354,-106.79],[107.75,-106.594],[107.75,-106.201],[107.75,-105.808],[107.354,-105.413],[107.258,-105.02],[106.867,-105.02],[106.471,-105.02],[105.684,-105.02],[104.897,-105.413],[104.406,-106.79],[103.62,-106.887],[102.441,-107.083],[102.143,-107.479],[101.751,-107.773],[101.29,-107.79],[100.966,-107.773],[100.572,-107.871],[99.786,-107.968],[99.393,-108.361],[99.198,-108.853],[98.805,-108.951],[98.408,-109.052],[97.918,-109.346],[97.499,-109.543],[95.585,-109.543],[95.165,-109.738],[94.971,-110.131],[94.552,-110.326],[92.536,-110.326],[91.723,-110.82],[90.938,-111.313],[90.544,-111.41],[90.346,-111.803],[89.954,-111.902],[89.561,-112.196],[89.465,-112.591],[89.236,-112.601],[89.072,-112.591],[88.478,-112.687],[88.28,-112.687],[87.891,-112.491],[87.497,-112.098],[87.596,-111.51],[87.988,-111.117],[88.382,-110.82],[88.382,-110.427],[88.382,-109.936],[89.169,-109.936],[89.561,-109.835],[89.954,-109.835],[90.346,-109.642],[90.448,-109.247],[90.643,-108.757],[91.626,-108.462],[92.021,-108.265],[92.311,-107.871],[92.217,-107.479],[92.118,-107.083],[91.427,-106.397],[91.039,-106.397],[90.643,-106.397],[90.249,-106.397],[90.053,-106.002],[89.954,-105.609],[89.757,-105.217],[89.365,-105.02],[88.921,-105.119],[88.973,-105.903],[89.072,-106.296],[89.072,-107.083],[88.921,-107.479],[88.382,-107.479],[87.988,-107.379],[87.596,-107.083],[87.397,-106.691],[87.203,-106.296],[86.415,-106.296],[86.023,-106.296],[85.236,-106.397],[85.025,-106.414],[84.743,-106.397],[84.548,-106.002],[84.251,-105.609],[83.787,-105.609],[83.37,-105.609],[82.971,-105.709],[82.579,-105.709],[81.698,-105.709],[81.303,-105.633],[81.303,-104.626],[80.125,-104.626],[79.729,-104.923],[79.536,-105.316],[79.141,-105.413],[79.337,-105.808],[79.337,-106.201],[79.729,-106.987],[79.633,-107.379],[79.237,-107.28],[79.042,-106.887],[78.65,-106.79],[78.253,-106.691],[77.914,-106.677],[77.37,-106.594],[77.074,-106.201],[76.29,-105.808],[75.703,-105.808],[74.523,-105.709],[74.126,-105.512],[74.029,-105.119],[73.632,-104.923],[73.244,-104.923],[72.849,-104.923],[72.456,-104.824],[71.572,-104.626],[71.177,-104.334],[70.393,-103.645],[69.898,-103.349],[69.21,-103.331],[68.329,-103.252],[67.932,-102.857],[68.126,-102.464],[68.526,-101.973],[68.329,-101.38],[67.539,-100.993],[67.145,-100.696],[66.753,-100.598],[66.361,-100.598],[65.868,-100.598],[65.277,-100.302],[65.083,-100.302],[64.786,-100.696],[64.298,-100.894],[63.899,-101.284],[63.805,-101.676],[63.411,-102.268],[63.508,-103.202],[65.672,-103.202],[65.672,-104.427],[65.277,-104.824],[64.885,-104.923],[64.69,-105.316],[64.395,-105.709],[63.997,-106.099],[63.215,-105.903],[63.018,-105.903],[62.626,-106.296],[62.23,-106.397],[61.369,-106.397],[60.557,-106.397],[60.165,-106.296],[59.871,-106.369],[59.871,-105.512],[60.656,-105.413],[61.001,-105.217],[61.001,-102.884],[60.755,-102.464],[60.361,-102.169],[60.462,-101.778],[60.462,-101.38],[60.855,-101.284],[61.249,-101.088],[61.543,-100.696],[61.936,-100.204],[61.936,-100.005],[61.592,-99.76],[61.639,-99.419],[61.639,-98.236],[61.592,-98.042],[60.755,-98.141],[60.361,-98.141],[59.969,-98.43],[59.969,-98.824],[59.676,-99.222],[59.233,-99.222],[58.79,-99.222],[58.397,-98.923],[58.001,-98.923],[57.12,-98.923],[56.726,-98.824],[56.726,-98.43],[56.628,-98.042],[56.234,-97.844],[55.839,-97.746],[55.053,-97.546],[54.56,-97.449],[54.169,-97.152],[53.973,-96.763],[53.581,-96.469],[52.991,-96.378],[52.992,-96.369],[52.992,-95.585],[53.186,-95.191],[53.284,-94.795],[53.68,-94.7],[54.072,-94.5],[54.268,-93.911],[54.169,-93.321],[54.169,-93.519],[53.385,-93.519],[52.596,-93.519],[51.809,-93.715],[51.419,-93.715],[51.025,-93.812],[50.135,-93.911],[49.743,-94.203],[49.354,-94.306],[49.159,-94.305],[48.958,-94.306],[48.568,-94.597],[48.27,-95.09],[48.074,-95.482],[47.685,-95.29],[47.385,-94.893],[47.216,-94.9],[46.993,-94.893],[46.599,-94.404],[46.796,-93.812],[47.188,-93.519],[47.586,-93.421],[47.586,-93.027],[47.78,-92.632],[48.173,-92.632],[49.055,-92.73],[49.844,-92.239],[50.135,-91.751],[49.844,-91.356],[47.876,-91.356],[47.685,-90.962],[47.29,-90.862],[46.895,-90.962],[46.796,-91.356],[46.406,-91.648],[45.224,-92.143],[45.03,-92.142],[44.828,-92.143],[44.141,-92.73],[43.945,-93.126],[43.945,-93.519],[43.945,-94.7],[42.691,-94.7],[42.667,-95.972],[42.863,-97.648],[42.57,-98.43],[41.9,-98.592],[41.391,-98.629],[41.19,-99.025],[40.801,-99.419],[40.505,-100.204],[39.993,-100.291],[39.621,-100.302],[39.228,-100.696],[38.438,-101.088],[38.538,-101.482],[38.931,-101.38],[39.326,-101.284],[39.522,-100.894],[40.307,-100.598],[41.094,-100.104],[41.486,-99.907],[42.199,-99.902],[42.863,-99.907],[43.255,-99.907],[43.552,-99.515],[44.363,-99.12],[47.066,-99.12],[47.484,-99.025],[47.876,-98.923],[48.074,-98.533],[48.469,-98.43],[48.859,-98.43],[49.254,-98.334],[50.04,-98.334],[50.432,-98.334],[50.826,-98.334],[51.22,-98.533],[51.415,-98.533],[51.612,-98.533],[52.005,-98.629],[52.793,-99.025],[53.186,-99.025],[53.973,-99.12],[54.365,-99.419],[54.758,-99.708],[55.154,-100.005],[55.35,-100.4],[55.449,-101.185],[55.35,-102.367],[55.35,-102.76],[54.954,-103.546],[54.56,-103.839],[54.169,-104.232],[53.775,-104.334],[53.284,-104.427],[52.496,-104.427],[51.708,-104.427],[50.928,-104.923],[50.531,-105.119],[50.333,-105.512],[49.941,-105.709],[49.646,-106.099],[49.448,-106.099],[49.254,-106.099],[48.859,-106.296],[48.568,-106.691],[48.173,-106.79],[47.78,-106.987],[47.385,-107.28],[46.993,-107.379],[46.06,-107.479],[45.128,-107.379],[44.536,-107.28],[44.339,-107.28],[43.945,-107.577],[43.456,-107.773],[42.764,-108.462],[41.586,-108.462],[41.586,-107.871],[41.391,-107.479],[40.997,-107.479],[40.603,-107.479],[40.113,-107.773],[40.307,-108.168],[40.505,-108.757],[40.505,-108.951],[40.113,-109.148],[39.716,-109.346],[39.716,-109.738],[39.621,-110.23],[38.466,-110.23],[38.046,-110.034],[37.656,-109.642],[37.061,-109.835],[36.671,-110.034],[36.572,-110.427],[35.686,-110.326],[34.805,-110.525],[34.41,-110.623],[34.41,-111.065],[34.805,-111.016],[35.195,-111.117],[35.686,-111.065],[35.786,-111.902],[35.488,-112.296],[35.195,-112.687],[34.805,-112.687],[33.917,-112.687],[33.13,-112.787],[32.837,-113.178],[32.54,-113.576],[32.148,-113.67],[31.755,-113.576],[31.755,-112.394],[30.673,-112.296],[30.673,-113.104],[30.868,-113.475],[31.26,-113.87],[31.26,-114.213],[28.559,-114.213],[28.609,-112.984],[28.411,-112.591],[28.411,-112.196],[28.559,-111.803],[28.017,-111.902],[28.115,-112.296],[28.216,-112.884],[27.922,-113.475],[27.499,-113.67],[26.736,-113.67],[26.717,-114.655],[26.249,-114.752],[25.362,-114.163],[24.973,-113.968],[24.579,-114.066],[24.185,-114.066],[23.888,-113.67],[23.495,-112.884],[22.906,-112.591],[22.71,-112.591],[22.217,-112.687],[21.928,-113.081],[22.121,-113.475],[22.516,-113.772],[21.163,-113.772],[19.957,-113.475],[19.462,-113.277],[18.971,-112.984],[18.876,-112.591],[19.074,-112.196],[19.462,-111.803],[20.249,-111.705],[20.939,-111.605],[20.939,-110.721],[20.178,-110.721],[19.76,-111.016],[18.876,-111.016],[18.087,-111.117],[17.672,-111.214],[16.91,-111.214],[16.91,-110.131],[16.91,-109.738],[16.714,-109.346],[16.319,-109.148],[16.319,-109.936],[16.221,-110.326],[15.828,-110.525],[15.632,-110.524],[15.436,-110.525],[15.043,-110.82],[14.746,-111.214],[14.56,-111.213],[14.354,-111.214],[13.543,-111.803],[12.88,-111.705],[12.88,-110.943],[13.074,-110.525],[13.174,-110.034],[12.88,-109.247],[12.98,-108.853],[12.585,-108.561],[11.993,-108.265],[11.406,-108.361],[11.406,-108.757],[11.21,-109.148],[11.21,-109.543],[10.815,-109.346],[10.715,-108.853],[10.505,-108.847],[10.32,-108.853],[9.538,-108.757],[9.438,-108.069],[9.634,-107.676],[9.816,-107.682],[10.029,-107.676],[10.421,-107.479],[10.421,-107.083],[10.421,-106.691],[10.225,-106.296],[9.833,-106.397],[9.438,-106.79],[8.941,-106.8],[8.555,-106.79],[8.06,-106.987],[8.258,-108.168],[8.06,-108.561],[7.474,-108.361],[7.474,-107.183],[7.079,-106.987],[6.484,-107.183],[5.51,-106.79],[5.605,-106.397],[6,-106.201],[5.803,-105.808],[4.816,-105.808],[4.424,-105.709],[4.031,-105.709],[3.639,-105.413],[3.54,-105.02],[3.143,-104.923],[2.753,-104.528],[2.654,-104.134],[2.445,-104.128],[2.262,-104.134],[1.866,-103.645],[2.628,-103.645],[3.046,-103.839],[3.341,-104.232],[3.734,-104.427],[4.13,-104.427],[4.523,-104.528],[4.915,-104.427],[5.307,-104.727],[5.51,-105.119],[5.721,-105.125],[5.898,-105.119],[6.09,-105.118],[6.293,-105.119],[6.686,-105.413],[7.716,-105.512],[8.751,-105.413],[9.142,-105.119],[8.945,-104.727],[8.16,-104.727],[7.764,-104.727],[7.667,-104.334],[7.276,-104.232],[7.087,-104.286],[6.882,-104.334],[6.484,-104.035],[6.391,-103.645],[6.193,-103.252],[5.803,-103.057],[5.605,-102.66],[5.704,-102.268],[5.605,-101.482],[4.523,-101.284],[4.13,-100.497],[3.734,-100.302],[3.341,-100.005],[3.143,-99.613],[2.753,-99.419],[2.359,-99.12],[2.359,-98.727],[2.359,-98.334],[1.966,-97.945],[1.573,-97.546],[1.573,-96.763],[1.378,-96.369],[1.378,-95.972],[1.283,-96.369],[0.884,-96.074],[0.1,-95.779],[-0.194,-95.384],[-0.589,-95.09],[-0.816,-95.078],[-0.986,-95.09],[-1.572,-94.893],[-1.966,-94.597],[-1.867,-94.108],[-1.473,-94.01],[-1.081,-94.108],[-0.293,-94.108],[-0.392,-93.615],[-0.392,-93.225],[-0.784,-93.027],[-1.18,-92.831],[-1.572,-92.534],[-2.163,-92.437],[-2.555,-92.045],[-2.948,-91.751],[-3.34,-91.648],[-3.736,-91.356],[-3.931,-90.962],[-4.029,-90.569],[-4.62,-90.175],[-5.626,-90.569],[-6.388,-90.569],[-6.486,-89.881],[-6.19,-89.094],[-7.37,-88.8],[-7.57,-88.799],[-7.763,-88.8],[-8.553,-88.409],[-8.944,-88.11],[-9.339,-87.817],[-9.512,-87.822],[-9.73,-87.817],[-10.125,-87.619],[-10.125,-87.227],[-10.125,-86.833],[-10.517,-86.44],[-10.914,-86.144],[-11.307,-86.144],[-11.698,-86.144],[-12.091,-85.85],[-12.487,-85.554],[-12.387,-85.161],[-12.19,-84.768],[-12.387,-84.375],[-12.605,-84.318],[-12.78,-84.277],[-12.979,-83.884],[-12.879,-83.488],[-12.585,-82.899],[-12.681,-82.21],[-12.876,-82.205],[-13.073,-82.21],[-13.271,-81.82],[-13.271,-81.03],[-12.217,-81.03],[-11.796,-81.132],[-11.402,-80.937],[-11.206,-80.542],[-11.503,-80.149],[-11.895,-79.954],[-11.895,-79.557],[-11.895,-79.165],[-12.387,-78.967],[-12.487,-78.575],[-12.387,-78.083],[-10.814,-78.035],[-10.914,-77.101],[-11.307,-76.804],[-11.503,-76.411],[-11.307,-76.017],[-11.307,-75.721],[-10.517,-75.721],[-10.322,-75.734],[-10.03,-75.721],[-9.73,-75.33],[-9.339,-74.939],[-8.553,-75.134],[-8.159,-75.037],[-7.569,-74.838],[-6.587,-75.134],[-6.292,-75.527],[-6.072,-75.533],[-5.897,-75.527],[-5.504,-75.627],[-5.115,-75.921],[-4.913,-76.313],[-4.52,-76.707],[-3.931,-77.491],[-3.638,-77.884],[-3.243,-77.986],[-2.852,-77.884],[-2.458,-78.083],[-2.458,-78.871],[-2.271,-78.876],[-2.064,-78.871],[-1.667,-78.675],[-1.473,-78.279],[-1.473,-77.884],[-1.081,-77.593],[-1.081,-76.707],[-0.986,-76.313],[-0.589,-76.017],[-0.194,-75.43],[-0.194,-75.233],[-0.589,-74.838],[-0.491,-74.442],[-0.001,-73.659],[0.393,-73.56],[0.689,-73.167],[0.986,-72.775],[0.986,-72.379],[0.986,-71.989],[1.283,-71.204],[1.671,-70.908],[2.065,-70.513],[2.458,-70.216],[2.557,-69.826],[2.458,-69.433],[2.165,-68.841],[2.165,-68.646],[2.359,-68.254],[2.359,-67.855],[5.112,-67.855],[5.211,-68.449],[5.211,-68.841],[5.51,-69.236],[5.898,-69.63],[6.293,-69.63],[6.686,-69.63],[7.079,-69.532],[7.474,-69.333],[7.867,-69.532],[8.16,-69.925],[9.044,-70.022],[9.044,-71.204],[10.616,-71.204],[10.715,-71.597],[10.616,-72.185],[9.855,-72.185],[9.438,-72.088],[9.266,-72.081],[9.044,-72.088],[9.044,-72.482],[8.65,-72.578],[9.142,-73.366],[9.438,-73.76],[9.538,-74.545],[9.634,-75.33],[9.634,-75.721],[9.833,-76.12],[10.225,-76.313],[10.616,-76.707],[11.01,-76.804],[11.406,-77.101],[11.797,-77.2],[11.987,-77.193],[12.19,-77.2],[12.388,-77.593],[12.388,-77.986],[12.684,-78.379],[13.074,-78.675],[13.469,-78.967],[13.469,-79.338],[13.469,-79.753],[13.368,-80.245],[12.585,-80.245],[11.797,-80.346],[11.406,-80.27],[11.406,-81.525],[11.01,-81.916],[10.803,-81.916],[10.616,-81.916],[10.225,-82.21],[10.275,-82.582],[10.275,-85.751],[10.715,-86.048],[10.911,-86.44],[11.307,-86.833],[11.504,-87.227],[11.702,-88.01],[11.893,-88.409],[12.289,-88.602],[12.505,-88.608],[12.684,-88.602],[13.469,-88.998],[13.764,-89.388],[14.159,-89.682],[14.354,-90.074],[14.837,-90.161],[15.138,-90.175],[15.348,-90.163],[15.633,-90.175],[15.927,-90.569],[16.319,-90.862],[16.319,-91.255],[16.609,-91.648],[17.01,-91.751],[17.402,-91.849],[17.797,-91.849],[18.186,-91.944],[18.483,-92.534],[18.186,-93.126],[17.797,-93.421],[17.797,-93.812],[18.087,-94.993],[18.383,-95.384],[18.589,-95.391],[18.777,-95.384],[19.171,-95.678],[19.462,-96.174],[19.76,-96.957],[19.858,-97.352],[20.648,-97.449],[21.434,-97.352],[21.629,-97.351],[21.824,-97.352],[22.121,-96.957],[22.71,-96.174],[23.103,-96.27],[23.398,-96.663],[23.792,-96.763],[24.185,-96.469],[24.579,-96.174],[24.773,-95.779],[24.973,-95.361],[24.973,-94.108],[23.792,-94.108],[23.792,-92.926],[23.792,-92.534],[23.398,-91.751],[23.004,-91.454],[22.413,-91.158],[21.333,-91.356],[20.939,-91.158],[20.544,-90.962],[20.353,-90.569],[20.056,-90.175],[19.957,-89.783],[19.565,-89.584],[19.171,-89.191],[18.971,-88.8],[18.579,-88.602],[17.893,-87.913],[18.186,-86.539],[17.99,-85.947],[17.598,-85.358],[17.797,-83.985],[17.797,-83.589],[17.893,-83.194],[17.893,-82.309],[18.876,-82.21],[19.661,-81.916],[19.957,-81.525],[20.249,-81.132],[21.039,-80.834],[21.434,-80.542],[22.413,-80.053],[22.612,-80.053],[23.004,-80.245],[24.384,-80.937],[25.362,-80.639],[25.953,-80.736],[26.348,-80.736],[26.741,-80.937],[26.837,-81.328],[27.232,-81.525],[30.35,-81.525],[30.771,-81.82],[31.361,-81.916],[31.557,-81.916],[31.855,-81.525],[31.952,-81.132],[32.344,-80.937],[34.31,-80.937],[34.508,-80.542],[34.113,-80.149],[33.329,-80.149],[32.344,-80.149],[31.952,-80.053],[31.557,-79.753],[31.163,-79.46],[30.771,-79.165],[30.478,-78.771],[30.281,-78.379],[29.987,-77.986],[29.589,-77.986],[28.807,-78.083],[28.411,-78.478],[27.823,-78.871],[26.837,-78.575],[26.052,-78.575],[25.267,-78.675],[24.876,-78.575],[24.484,-78.379],[24.087,-78.083],[23.691,-78.182],[23.302,-78.379],[22.906,-78.182],[22.516,-77.986],[22.516,-77.593],[22.121,-77.2],[22.023,-76.804],[21.632,-76.903],[21.236,-76.903],[20.842,-77.2],[20.842,-77.593],[20.449,-77.593],[20.056,-77.593],[19.661,-77.398],[19.565,-77.005],[19.957,-76.707],[20.154,-76.707],[20.353,-76.707],[20.747,-76.411],[19.957,-76.411],[18.681,-76.017],[18.288,-75.823],[18.383,-75.43],[19.074,-74.838],[19.462,-74.838],[19.858,-74.738],[20.449,-74.738],[21.039,-74.738],[21.632,-75.527],[22.121,-75.921],[22.71,-75.721],[23.103,-75.527],[23.495,-75.233],[23.595,-74.838],[23.595,-74.442],[23.987,-74.249],[24.384,-74.056],[24.773,-73.76],[24.579,-73.366],[23.495,-72.876],[23.103,-72.675],[23.103,-72.283],[23.004,-71.597],[22.245,-71.597],[21.725,-71.694],[21.333,-71.79],[21.137,-72.185],[21.137,-72.578],[20.842,-72.97],[20.635,-72.97],[20.449,-72.97],[20.449,-73.366],[20.449,-73.76],[19.661,-73.76],[19.074,-72.97],[18.681,-72.675],[18.288,-72.482],[18.288,-72.088],[18.288,-71.694],[18.087,-71.301],[17.797,-70.908],[17.797,-70.513],[17.499,-69.925],[17.598,-69.333],[17.698,-68.94],[17.893,-68.545],[17.598,-68.155],[17.206,-67.763],[17.105,-67.267],[17.598,-66.876],[17.402,-66.484],[17.01,-66.484],[16.023,-66.876],[15.236,-66.876],[14.453,-66.876],[13.958,-66.68],[13.665,-66.288],[13.862,-65.895],[14.549,-65.206],[14.453,-64.814],[14.057,-64.714],[12.684,-65.598],[12.289,-65.895],[11.893,-66.384],[11.504,-66.484],[11.111,-66.288],[10.225,-65.794],[9.833,-65.5],[9.438,-65.402],[9.044,-65.206],[8.751,-64.814],[8.355,-64.515],[7.177,-64.418],[6.391,-64.319],[5.898,-64.025],[5.26,-63.926],[4.13,-64.221],[3.934,-65.598],[3.143,-65.598],[2.753,-65.402],[2.557,-65.129],[2.165,-65.108],[1.671,-65.206],[0.884,-65.206],[0.049,-65.129],[0.049,-63.926],[-0.762,-63.926],[-1.378,-64.025],[-1.77,-64.319],[-1.966,-65.206],[-2.357,-65.011],[-3.145,-65.011],[-3.145,-65.698],[-3.243,-66.091],[-3.047,-66.484],[-1.499,-66.484],[-0.689,-66.288],[-0.293,-65.992],[0.32,-65.794],[1.105,-65.895],[1.283,-66.68],[1.083,-67.66],[1.283,-68.254],[1.671,-68.841],[1.573,-69.63],[0.811,-69.63],[0.393,-69.433],[0.068,-69.45],[-0.392,-69.433],[-0.784,-69.236],[-0.986,-68.841],[-1.378,-68.449],[-1.572,-68.449],[-1.966,-68.646],[-1.867,-69.433],[-1.473,-69.727],[-1.378,-70.095],[-1.378,-70.708],[-2.163,-70.611],[-2.555,-70.708],[-2.458,-71.204],[-1.966,-71.989],[-1.966,-72.379],[-1.966,-72.775],[-2.26,-73.167],[-2.458,-73.56],[-2.751,-73.953],[-3.145,-73.855],[-3.638,-73.56],[-3.835,-72.775],[-4.52,-72.088],[-4.745,-72.081],[-4.913,-72.088],[-5.409,-71.989],[-5.801,-71.597],[-5.603,-71.004],[-5.603,-70.811],[-5.701,-70.415],[-6.094,-70.315],[-6.486,-70.216],[-7.079,-69.333],[-6.781,-68.352],[-6.486,-67.959],[-6.094,-67.855],[-5.701,-67.562],[-5.801,-67.173],[-6.044,-66.778],[-5.897,-66.384],[-5.897,-65.992],[-6.044,-65.352],[-6.094,-65.108],[-5.996,-64.714],[-5.701,-64.319],[-5.409,-63.512],[-5.409,-62.746],[-5.996,-62.746],[-6.486,-62.648],[-7.471,-62.551],[-7.964,-62.551],[-8.65,-62.648],[-9.635,-62.648],[-10.422,-62.551],[-10.617,-62.159],[-11.009,-61.959],[-11.895,-61.763],[-11.991,-61.369],[-12.19,-60.977],[-13.073,-60.29],[-13.469,-60.587],[-13.887,-60.587],[-14.254,-60.587],[-14.648,-60.485],[-15.042,-60.558],[-15.042,-59.796],[-14.254,-59.406],[-14.254,-58.129],[-14.841,-58.129],[-15.236,-57.93],[-15.63,-57.832],[-16.025,-57.536],[-16.81,-56.943],[-17.206,-56.554],[-17.598,-56.262],[-17.99,-56.262],[-19.27,-56.262],[-19.27,-53.898],[-20.743,-53.801],[-21.137,-53.702],[-21.529,-53.605],[-21.529,-52.423],[-22.979,-52.423],[-23.396,-52.618],[-23.749,-52.608],[-24.182,-52.618],[-24.678,-52.72],[-24.678,-53.115],[-25.163,-53.502],[-25.754,-53.412],[-25.754,-52.227],[-24.971,-51.936],[-25.361,-51.145],[-25.163,-50.753],[-25.163,-50.263],[-26.421,-50.166],[-26.835,-50.361],[-27.232,-50.463],[-27.625,-50.361],[-28.116,-50.361],[-28.509,-50.657],[-28.706,-51.049],[-29.493,-50.753],[-29.689,-50.753],[-29.884,-50.753],[-30.671,-50.463],[-31.064,-50.166],[-31.163,-49.772],[-30.965,-49.379],[-30.754,-49.366],[-30.573,-49.379],[-30.281,-48.985],[-29.884,-48.786],[-29.493,-48.593],[-28.986,-48.58],[-28.607,-48.593],[-28.214,-48.593],[-27.823,-48.296],[-27.428,-48.002],[-27.033,-47.805],[-26.738,-47.411],[-25.956,-46.72],[-25.956,-44.66],[-25.659,-44.267],[-25.267,-44.07],[-24.482,-43.674],[-24.182,-43.087],[-24.281,-42.497],[-24.482,-41.809],[-24.182,-40.43],[-24.182,-39.843],[-24.182,-39.251],[-25.267,-38.367],[-25.361,-37.974],[-25.754,-37.778],[-26.936,-37.288],[-27.331,-37.288],[-27.823,-37.482],[-28.509,-37.679],[-28.902,-37.778],[-29.884,-37.778],[-30.281,-38.073],[-30.671,-38.469],[-31.09,-38.563],[-34.579,-38.563],[-35.587,-38.661],[-36.081,-38.661],[-36.667,-39.056],[-36.866,-39.056],[-37.259,-38.856],[-37.259,-38.469],[-37.456,-38.073],[-39.423,-38.073],[-39.618,-37.679],[-39.327,-37.288],[-38.93,-36.991],[-38.833,-36.402],[-38.93,-35.81],[-39.227,-34.827],[-39.128,-34.141],[-38.93,-33.743],[-38.635,-33.331],[-38.635,-31.018],[-38.734,-30.598],[-39.128,-30.305],[-39.327,-29.911],[-39.815,-28.731],[-39.815,-28.339],[-39.52,-27.947],[-39.327,-27.549],[-39.03,-27.061],[-39.03,-26.668],[-39.03,-26.275],[-39.327,-25.88],[-39.423,-25.266],[-39.327,-24.307],[-38.168,-24.307],[-37.259,-24.505],[-36.866,-24.307],[-36.572,-23.916],[-35.982,-23.817],[-34.999,-24.114],[-34.603,-23.817],[-34.211,-23.621],[-33.818,-23.521],[-33.423,-23.326],[-33.132,-22.933],[-32.835,-22.539],[-32.736,-22.146],[-32.342,-21.85],[-32.146,-22.345],[-32.538,-22.439],[-32.146,-22.636],[-31.749,-22.636],[-31.359,-22.636],[-30.573,-22.832],[-30.18,-23.128],[-29.396,-23.721],[-29.003,-24.114],[-28.214,-24.406],[-27.833,-24.405],[-27.428,-24.406],[-27.033,-24.601],[-26.544,-24.798],[-25.956,-25.586],[-24.773,-26.473],[-23.986,-26.668],[-23.296,-26.673],[-22.708,-26.668],[-21.923,-26.764],[-21.923,-28.068],[-22.12,-28.437],[-22.512,-28.832],[-22.905,-29.224],[-22.809,-29.814],[-22.512,-30.203],[-22.02,-31.092],[-21.824,-31.484],[-21.63,-31.877],[-21.43,-32.27],[-21.201,-32.281],[-21.038,-32.27],[-20.251,-32.37],[-19.956,-32.762],[-19.66,-33.154],[-19.27,-33.253],[-19.072,-33.253],[-18.875,-33.253],[-18.579,-33.647],[-18.361,-33.652],[-18.185,-33.647],[-17.794,-33.843],[-17.12,-33.855],[-16.615,-33.843],[-15.827,-33.944],[-15.827,-35.122],[-15.827,-35.517],[-15.926,-36.3],[-15.852,-36.72],[-15.926,-37.482],[-15.732,-37.875],[-14.943,-38.171],[-14.352,-38.266],[-13.37,-38.073],[-13.173,-38.073],[-12.979,-38.073],[-11.796,-37.482],[-10.79,-37.383],[-10.224,-37.383],[-9.831,-37.482],[-9.438,-37.406],[-9.438,-38.073],[-9.339,-38.469],[-8.944,-38.762],[-8.65,-39.151],[-8.254,-39.151],[-7.862,-39.151],[-7.079,-39.151],[-6.688,-39.447],[-6.292,-39.744],[-5.897,-40.04],[-5.504,-40.43],[-5.115,-40.333],[-4.326,-39.941],[-3.638,-39.251],[-2.948,-38.073],[-2.852,-37.679],[-2.555,-37.288],[-2.26,-36.895],[-1.867,-36.697],[-1.473,-36.5],[-1.081,-36.3],[-0.689,-35.909],[-0.589,-35.517],[-0.1,-35.221],[0.195,-34.827],[0.59,-34.63],[0.986,-34.239],[1.378,-34.039],[1.772,-33.647],[2.262,-33.451],[3.046,-33.154],[3.264,-33.161],[3.54,-33.154],[3.934,-32.958],[4.13,-32.566],[5.112,-31.484],[5.51,-31.387],[5.898,-31.191],[6.293,-30.995],[6.785,-30.203],[7.57,-29.617],[7.764,-29.224],[7.867,-28.832],[7.961,-28.019],[7.867,-27.255],[5.898,-26.863],[5.605,-26.473],[5.211,-26.371],[4.424,-26.371],[3.906,-26.473],[1.184,-26.445],[1.283,-25.979],[2.065,-25.586],[2.458,-25.291],[2.654,-24.895],[2.85,-24.505],[3.245,-24.209],[3.465,-24.203],[3.639,-24.209],[4.449,-24.012],[6.785,-24.012],[6.785,-25.489],[7.276,-25.684],[8.06,-26.175],[8.456,-26.568],[8.658,-26.562],[8.846,-26.568],[8.945,-26.962],[9.142,-27.747],[9.242,-28.143],[9.634,-28.437],[9.854,-28.442],[10.029,-28.437],[10.715,-28.731],[10.815,-29.128],[10.715,-29.522],[10.715,-29.962],[10.225,-29.911],[9.438,-29.911],[9.044,-29.962],[9.044,-30.401],[9.142,-30.995],[10.694,-30.995],[11.504,-30.701],[11.893,-30.498],[12.289,-30.109],[12.684,-30.305],[12.19,-31.484],[12.19,-32.27],[11.603,-32.37],[11.408,-32.369],[11.21,-32.37],[10.815,-32.666],[10.421,-32.958],[10.029,-33.351],[9.634,-33.451],[9.242,-33.843],[9.048,-33.837],[8.846,-33.843],[8.555,-34.239],[8.456,-34.63],[8.24,-34.636],[8.06,-34.63],[7.858,-34.63],[7.667,-34.63],[7.276,-34.827],[6.882,-34.925],[6.686,-35.322],[6.293,-35.616],[6.076,-35.621],[5.898,-35.616],[5.51,-35.81],[5.311,-35.811],[5.112,-35.81],[5.112,-36.203],[5.409,-36.596],[5.307,-36.991],[5.014,-37.482],[4.621,-37.778],[3.443,-38.171],[3.245,-38.563],[3.048,-38.557],[2.85,-38.563],[2.753,-38.956],[2.753,-39.843],[1.866,-39.941],[0.986,-39.89],[0.986,-40.923],[1.378,-41.317],[1.772,-41.609],[1.772,-41.809],[1.671,-42.203],[1.283,-42.592],[1.573,-43.185],[2.165,-43.283],[2.753,-43.185],[3.143,-42.891],[3.245,-42.397],[3.443,-42.004],[3.641,-41.998],[3.835,-42.004],[4.227,-41.906],[4.621,-41.609],[4.915,-41.218],[5.307,-41.022],[5.529,-41.016],[5.704,-41.022],[6.098,-40.725],[6.391,-40.236],[6.686,-39.352],[6.889,-39.345],[7.079,-39.352],[7.867,-38.762],[8.258,-38.563],[8.555,-38.171],[9.438,-37.778],[9.707,-37.778],[10.225,-37.679],[10.32,-37.288],[10.616,-36.895],[11.01,-36.697],[11.797,-36.3],[12.98,-35.322],[13.764,-35.122],[14.159,-34.827],[14.255,-34.435],[14.549,-34.039],[14.354,-33.647],[13.958,-33.351],[13.958,-32.958],[13.862,-32.37],[13.958,-31.779],[14.648,-31.092],[14.549,-30.305],[15.043,-29.522],[15.236,-29.128],[15.471,-29.113],[15.633,-29.128],[16.023,-29.128],[16.811,-28.925],[16.811,-27.357],[15.828,-27.357],[15.828,-27.747],[15.436,-27.849],[15.043,-27.65],[15.138,-27.255],[15.436,-26.863],[16.023,-26.079],[16.415,-25.88],[16.811,-25.489],[17.206,-25.783],[17.303,-26.175],[17.698,-26.473],[17.797,-26.079],[17.893,-25.684],[18.681,-25.195],[18.579,-24.307],[18.579,-23.916],[19.074,-23.521],[19.957,-23.521],[20.353,-23.521],[20.747,-23.621],[20.939,-24.012],[21.333,-24.307],[21.333,-24.703],[21.333,-25.093],[21.137,-25.489],[21.434,-25.88],[21.824,-26.079],[22.217,-25.979],[22.612,-25.586],[23.027,-25.586],[23.398,-25.586],[23.888,-25.684],[23.888,-26.568],[23.987,-26.962],[23.938,-27.158],[24.773,-27.158],[25.168,-27.255],[24.876,-27.747],[24.484,-28.042],[24.087,-28.437],[23.595,-28.437],[23.691,-27.65],[23.595,-27.255],[23.103,-27.255],[22.71,-27.357],[22.413,-27.849],[22.023,-28.143],[22.023,-28.535],[21.928,-28.925],[21.824,-29.32],[21.632,-29.716],[21.236,-29.814],[21.02,-29.818],[20.842,-29.814],[20.449,-30.203],[20.056,-30.498],[20.056,-30.895],[20.056,-31.289],[20.353,-31.678],[20.747,-31.484],[21.137,-31.191],[21.533,-30.895],[22.315,-30.895],[22.71,-30.895],[23.103,-30.895],[23.495,-31.191],[23.202,-31.584],[22.807,-31.678],[23.103,-32.073],[23.495,-32.47],[24.384,-32.47],[25.267,-32.47],[25.66,-32.37],[26.052,-32.173],[26.445,-31.779],[26.618,-31.785],[26.837,-31.779],[27.232,-31.678],[27.333,-31.289],[27.333,-30.895],[27.721,-30.795],[28.115,-30.498],[28.017,-30.109],[27.626,-30.009],[27.232,-29.617],[27.626,-28.635],[28.411,-28.24],[28.708,-27.136],[28.609,-26.962],[28.708,-26.568],[28.609,-26.175],[28.609,-25.844],[28.755,-25.439],[29.048,-25.046],[29.198,-24.798],[29.344,-24.601],[29.544,-24.505],[29.689,-24.307],[29.934,-24.114],[30.133,-23.964],[30.332,-23.672],[30.281,-23.326],[30.083,-23.128],[29.987,-22.933],[29.889,-22.684],[29.889,-22.316],[29.934,-21.753],[30.035,-21.553],[30.23,-21.357],[30.428,-21.211],[30.82,-21.655],[30.868,-21.85],[30.967,-22.146],[31.016,-22.345],[31.016,-22.933],[30.967,-23.128],[31.016,-23.721],[31.361,-23.721],[31.557,-23.672],[31.755,-23.521],[31.905,-23.326],[32.1,-23.176],[32.54,-22.785],[32.738,-22.587],[32.936,-22.345],[33.082,-22.146],[33.281,-22.049],[33.475,-22.049],[33.868,-22.049],[34.259,-22.001],[34.456,-21.85],[34.876,-21.8],[35.096,-21.8],[35.293,-21.903],[35.488,-22.049],[35.441,-22.232],[35.488,-22.439],[35.392,-22.992],[35.441,-23.274],[35.635,-23.469],[35.737,-23.672],[36.031,-23.865],[36.547,-23.916],[37.109,-23.817],[37.311,-23.672],[37.656,-23.274],[37.85,-23.128],[38.243,-22.785],[38.538,-22.587],[38.685,-22.394],[38.883,-22.245],[39.079,-22.197],[39.337,-22.098],[42.004,-22.098],[41.98,-22.785],[41.98,-23.028],[41.928,-23.326],[42.004,-23.806],[42.324,-23.721],[42.52,-23.768],[42.719,-23.817],[43.01,-23.817],[43.699,-23.672],[43.993,-23.274],[44.19,-23.176],[44.612,-23.128],[44.828,-23.128],[45.027,-23.227],[45.128,-23.423],[45.324,-23.569],[45.52,-23.521],[45.665,-23.128],[45.861,-23.028],[45.911,-22.832],[45.911,-22.439],[45.861,-21.8],[45.714,-21.553],[45.467,-21.012],[45.37,-20.239],[45.37,-19.884],[45.467,-19.586],[45.566,-19.39],[45.616,-19.196],[45.812,-18.901],[45.861,-18.608],[45.812,-18.263],[45.616,-18.064],[45.422,-17.916],[45.324,-17.719],[45.324,-17.277],[45.224,-17.033],[45.076,-16.836],[44.732,-16.348],[44.582,-15.953],[44.141,-15.656],[43.897,-15.51],[43.699,-15.363],[43.501,-15.165],[43.456,-14.969],[43.405,-14.575],[43.061,-13.644],[42.911,-13.1],[42.57,-12.607],[42.372,-12.462],[42.176,-12.264],[41.98,-12.119],[41.781,-12.119],[41.579,-12.121],[41.336,-12.119],[40.945,-11.97],[40.749,-11.923],[40.622,-11.922],[40.505,-11.923],[40.307,-11.873],[40.113,-11.774],[39.865,-11.58],[39.522,-11.626],[39.326,-11.774],[38.883,-12.119],[38.685,-12.119],[38.389,-12.119],[38.046,-12.166],[37.753,-12.214],[37.26,-12.264],[37.013,-12.361],[36.794,-12.361],[36.572,-12.361],[36.324,-12.214],[36.767,-12.019],[37.408,-11.774],[38.046,-11.677],[38.438,-11.626],[38.438,-11.233],[38.438,-10.985],[38.732,-10.644],[38.831,-10.447],[38.883,-10.102],[38.857,-9.896],[38.883,-9.708],[38.831,-9.462],[38.831,-8.677],[39.126,-8.285],[39.816,-7.595],[40.01,-7.204],[40.21,-6.807],[40.505,-6.415],[40.801,-6.024],[41.19,-5.626],[41.586,-5.432],[42.027,-5.432],[42.473,-5.432],[42.863,-5.726],[42.863,-6.122],[43.255,-6.513],[43.456,-6.122],[44.339,-4.939],[44.536,-4.548],[44.928,-4.256],[45.324,-4.057],[45.616,-3.66],[45.714,-2.78],[45.812,-2.386],[46.108,-1.991],[46.796,-1.109],[47.188,-0.714],[47.29,-0.027],[47.29,0.169],[47.188,0.565],[47.385,1.843],[47.978,2.138],[48.367,2.333],[48.76,2.433],[49.156,2.725],[49.354,3.117],[49.547,3.514],[50.333,4.396],[50.728,5.185],[51.122,5.97],[51.516,7.2],[51.516,7.64],[51.22,8.037],[51.22,8.429],[51.419,9.218],[51.809,9.509],[52.204,9.707],[52.596,10.101],[53.385,10.788],[53.775,11.084],[53.973,11.475],[54.365,11.869],[54.758,12.753],[55.053,13.243],[55.544,13.638],[56.333,14.817],[57.513,16],[57.71,16.392],[58.001,16.882],[58.199,17.277],[58.199,18.06],[58.199,18.456],[58.397,18.848],[58.888,19.662],[58.888,23.051],[59.871,24.06],[60.656,24.647],[61.445,24.647],[62.626,24.553],[63.018,24.158],[63.508,23.374],[64.298,22.882],[64.715,22.782],[67.118,22.782],[67.539,23.077],[67.738,23.078],[67.932,23.077],[68.329,22.29],[68.621,21.899],[69.115,21.604],[69.507,21.208],[70.682,21.013],[71.077,20.711],[71.482,20.709],[71.868,20.711],[72.257,20.421],[72.652,20.421],[73.436,20.324],[73.832,19.93],[74.225,19.538],[74.62,19.145],[75.009,19.145],[76.191,19.145],[76.191,18.456],[76.191,18.06],[76.484,17.67],[76.688,17.664],[76.879,17.67],[77.273,17.374],[77.665,17.277],[78.059,17.085],[78.453,17.085],[78.846,16.981],[81.599,17.085],[81.599,16.49],[81.698,16.097],[81.698,15.708],[82.188,14.915],[84.157,14.915],[84.251,14.523],[84.451,14.131],[84.743,13.341],[85.135,13],[85.529,13.049],[85.924,13.049],[86.316,13],[86.514,12.26],[86.71,11.869],[86.71,11.475],[87.005,11.084],[87.203,10.691],[87.793,10.392],[87.988,10.392],[88.28,10.788],[88.674,10.886],[88.674,9.707],[88.973,8.429],[89.072,7.939],[89.169,7.546],[89.561,7.444],[89.751,7.446],[89.954,7.444],[90.742,7.151],[90.544,6.268],[90.152,5.874],[89.977,5.88],[89.757,5.874],[89.365,5.674],[88.973,5.478],[88.973,5.088],[88.87,4.591],[88.674,4.2],[88.28,3.81],[87.497,3.514],[87.105,3.514],[86.71,3.318],[86.71,2.92],[87.005,2.138],[86.904,1.744],[86.514,1.549],[86.096,1.353],[85.333,1.353],[85.333,2.239],[84.743,2.92],[84.548,2.038],[84.548,1.644],[84.157,1.448],[83.861,1.055],[83.861,-0.913],[83.565,-1.305],[83.172,-1.599],[82.971,-1.203],[82.579,-1.01],[82.188,-0.812],[81.698,-0.027],[81.698,1.156],[81.599,1.939],[80.811,1.843],[79.928,1.843],[79.536,1.843],[79.042,1.644],[78.306,1.448],[78.059,1.448],[77.665,1.744],[77.273,1.939],[76.879,2.333],[76.484,2.725],[75.703,2.433],[75.302,2.038],[74.913,1.644],[74.913,1.253],[74.913,0.861],[75.302,0.758],[76.29,0.37],[76.484,0.37],[77.074,0.665],[77.714,0.665],[78.353,0.665],[78.749,0.466],[78.749,0.074],[78.353,-0.223],[77.96,-0.223],[77.197,-0.125],[76.78,-0.125],[76.387,-0.223],[75.994,-0.223],[75.009,-0.613],[74.339,-0.615],[73.733,-0.613],[73.341,-0.714],[72.849,-0.714],[72.849,-2.679],[72.553,-3.072],[72.161,-3.174],[71.766,-3.565],[71.374,-3.66],[70.98,-3.66],[70.586,-3.861],[69.999,-4.057],[69.999,-4.548],[69.999,-5.334],[69.507,-6.122],[69.115,-6.513],[69.115,-6.908],[69.115,-7.3],[68.918,-7.791],[68.918,-8.432],[68.918,-9.07],[69.115,-9.462],[69.507,-9.856],[70.096,-9.856],[71.077,-9.759],[72.161,-8.777],[72.553,-8.48],[73.244,-7.696],[73.632,-7.3],[74.225,-6.122],[74.62,-5.726],[75.801,-5.136],[76.584,-4.451],[77.37,-3.861],[78.156,-3.369],[78.664,-3.356],[79.042,-3.369],[79.432,-3.268],[80.958,-3.072],[81.203,-3.072],[81.599,-3.072],[81.992,-3.268],[82.391,-3.268],[82.777,-3.268],[83.172,-3.465],[83.565,-3.465],[84.35,-3.369],[84.743,-3.072],[85.333,-2.386],[85.333,-1.991],[85.432,-1.599],[85.629,-1.203],[86.023,-1.01],[86.538,-0.913],[88.555,-0.913],[88.973,-1.01],[89.465,-1.01],[89.855,-0.714],[90.053,-0.321],[90.448,-0.125],[90.964,0.074],[92.979,0.074],[93.814,0.37],[97.132,0.37],[99.587,-0.027],[101.826,-0.027],[102.641,0.565],[103.027,0.861],[103.424,1.156],[103.915,1.939],[104.31,2.239],[104.703,2.333],[105.098,2.629],[105.292,3.024],[105.391,3.81],[105.65,3.824],[106.077,3.909],[106.273,4.299],[106.57,4.692],[106.962,4.692],[107.354,4.692],[108.142,4.791],[108.536,4.989],[108.927,5.088],[109.816,5.478],[108.633,5.478],[107.846,5.674],[107.454,5.874],[107.454,6.268],[107.648,6.662],[108.046,6.759],[108.436,6.856],[108.73,7.25],[109.026,7.64],[109.816,8.331],[110.305,8.624],[110.699,9.018],[111.092,9.018],[111.485,9.018],[111.878,8.726],[112.176,8.331],[112.957,8.135],[113.254,7.64],[113.647,7.25],[114.629,7.64],[114.827,8.037],[115.025,9.018],[115.123,9.804],[115.517,10.691],[115.613,11.084],[115.613,11.915],[115.613,12.753],[115.517,13.243],[115.517,14.62],[115.517,15.015],[115.808,15.804],[115.91,16.196],[115.91,17.473],[116.499,18.259],[116.796,18.651],[117.186,19.043],[117.482,19.434],[117.482,19.833],[117.678,20.711],[117.775,21.109],[118.071,21.505],[118.267,21.994],[118.267,22.39],[118.464,22.782],[118.66,23.175],[119.051,23.568],[119.249,23.964],[119.644,24.354],[119.746,25.14],[119.746,25.532],[119.644,26.323],[120.04,27.699],[120.431,28.092],[120.626,28.484],[120.921,28.876],[121.806,30.644],[122.396,31.827],[122.495,32.221],[122.691,32.611],[123.082,32.907],[123.673,33.302],[124.267,33.204],[124.658,32.907],[124.756,32.514],[124.949,32.121],[125.641,30.939],[125.839,30.547],[126.022,30.548],[126.23,30.547],[126.621,30.448],[127.021,30.055],[127.413,29.759],[127.511,29.37],[127.704,28.979],[128.098,28.288],[128.001,27.303],[128.296,26.91],[128.589,26.125],[128.788,25.338],[128.788,24.553],[128.691,23.764],[128.788,23.397],[128.788,21.208],[128.691,19.515],[128.887,19.145],[129.079,18.752],[130.259,18.651],[131.441,18.456],[131.736,17.67],[131.931,17.277],[132.322,16.882],[132.72,16.783],[133.113,16.686],[133.507,16.392],[133.801,16],[134.191,15.804],[134.589,15.708],[134.879,15.309],[135.274,14.523],[135.668,14.131],[135.962,13.738],[136.259,13.341],[137.043,12.949],[137.339,12.56],[137.538,12.166],[137.733,11.77],[137.957,11.76],[138.124,11.77],[138.298,11.776],[138.52,11.77],[138.913,11.475],[138.913,11.084],[139.6,10.493],[139.993,10.493],[140.251,10.489],[140.783,10.392],[141.072,10],[141.371,8.429],[141.467,7.64],[143.311,7.64],[143.728,7.84],[144.319,7.939],[144.517,7.939],[144.91,7.64],[145.103,7.642],[145.301,7.64],[145.696,7.25],[146.092,7.151],[146.483,6.856],[146.683,6.461],[148.646,6.461],[148.646,5.281],[149.334,5.385],[149.501,5.366],[149.727,5.385],[150.019,5.772],[150.116,6.167],[150.316,6.559],[150.712,6.759],[150.905,7.151],[151.199,8.037],[151.103,8.798],[151.298,9.218],[151.498,9.61],[151.889,9.804],[151.99,10.199],[152.774,10.788],[153.168,11.084],[153.464,11.475],[153.758,11.869],[153.758,12.26],[153.66,12.655],[153.658,13.441],[153.66,13.441],[154.447,13.341],[154.838,13.538],[155.233,13.638],[155.233,14.033],[155.134,14.817],[154.939,15.211],[154.838,16.392],[155.233,17.964],[155.626,18.259],[156.021,18.556],[156.806,18.556],[157.197,18.556],[157.594,18.556],[157.788,18.16],[158.184,18.06],[158.576,17.867],[159.462,17.67],[159.462,17.277],[159.462,16.882],[159.756,16.49],[160.938,16.981],[161.132,17.374],[161.329,17.767],[161.624,18.556],[161.92,19.833],[162.016,20.225],[162.309,20.619],[162.704,20.815],[162.803,21.208],[162.113,22.583],[162.309,22.979],[162.507,23.374],[162.899,23.667],[163.493,24.453],[163.886,24.749],[164.081,25.338],[163.886,26.125],[164.176,26.91],[163.59,27.796],[163.196,27.991],[162.803,28.092],[162.607,28.484],[162.507,28.876],[162.507,30.055],[162.507,30.448],[162.309,31.235],[162.309,31.878],[162.408,32.907],[162.704,33.302],[163.098,33.5],[163.493,33.596],[164.176,34.384],[164.965,35.069],[165.36,35.167],[165.654,35.56],[165.947,35.956],[165.947,36.843],[166.145,37.626],[166.639,38.412],[166.735,38.904],[167.126,39.297],[167.421,40.208],[167.421,42.323],[167.618,42.738],[167.719,43.228],[168.012,43.622],[168.405,44.019],[168.801,44.213],[170.077,45],[170.865,45.294],[171.358,46.08],[171.553,46.472],[171.947,46.574],[172.339,46.672],[172.831,46.868],[173.517,47.064],[173.712,47.064],[174.11,46.772],[173.613,45.978],[173.42,45.588],[173.027,45.492],[172.537,44.707],[172.537,43.818],[172.436,43.426],[172.436,42.252],[172.339,41.853],[172.142,41.456],[171.749,41.064],[171.749,39.885],[171.749,39.495],[171.65,39.102],[171.65,38.708],[171.553,38.217],[171.553,37.431],[170.373,37.33],[169.98,37.038],[169.684,36.645],[169.29,36.447],[168.897,36.052],[168.111,35.756],[167.9,35.764],[167.618,35.756],[166.933,35.167],[166.639,34.775],[166.538,34.384],[166.538,33.596],[166.538,33.204],[166.441,32.809],[166.045,32.611],[165.654,32.415],[165.559,31.631],[165.559,31.235],[165.559,30.842],[165.162,30.744],[164.771,30.547],[164.473,30.448],[164.473,28.457],[165.261,27.205],[165.847,26.028],[166.045,25.436],[165.847,24.647],[165.947,24.06],[166.343,23.764],[166.639,23.273],[167.029,23.374],[167.421,23.667],[167.618,24.06],[168.012,24.354],[168.212,25.14],[168.602,25.436],[169.191,25.633],[169.392,25.633],[169.785,25.436],[170.175,25.235],[170.764,25.929],[171.358,26.713],[171.65,27.597],[172.043,28.383],[172.537,29.172],[173.223,29.858],[173.449,29.866],[173.613,29.858],[174.009,29.96],[174.405,30.055],[174.795,30.154],[175.094,30.547],[174.699,31.331],[174.6,32.121],[175.189,33.792],[175.485,33.399],[176.17,32.611],[176.567,32.318],[176.96,31.927],[177.451,31.531],[177.842,31.235],[178.04,30.842],[178.335,30.448],[178.434,30.055],[178.532,29.662],[178.925,29.269],[179.517,29.37],[180.301,29.37],[180.79,29.075],[181.678,28.185],[182.171,27.796],[182.564,27.699],[182.956,27.402],[183.055,27.009],[183.154,26.223],[183.154,24.303],[183.154,22.882],[183.154,21.994],[182.564,20.711],[182.363,19.833],[182.363,18.948],[181.386,18.948],[180.991,18.752],[180.693,18.356],[180.107,17.473],[180.107,17.085],[179.712,16.981],[179.318,16.686],[178.532,16.097],[178.04,15.804],[177.842,15.412],[177.451,15.112],[177.35,14.327],[177.35,13.934],[176.96,13.638],[176.96,13],[176.96,12.36],[177.056,11.869],[177.451,11.574],[177.842,11.281],[178.236,11.084],[178.236,10.588],[178.335,10.101],[178.532,9.509],[178.631,9.018],[178.925,8.525],[179.318,8.429],[179.592,8.417],[179.809,8.429],[180.693,8.037],[180.891,8.037],[181.087,8.037],[181.386,7.64],[181.777,7.64],[182.587,7.64],[182.956,7.741],[184.137,7.668],[184.137,8.135],[184.04,8.525],[184.04,10.691],[183.743,11.084],[183.35,11.281],[183.154,11.281],[182.956,11.281],[182.564,11.574],[182.269,11.967],[181.874,12.56],[181.975,13.148],[182.072,13.638],[182.467,13.837],[185.609,13.837],[185.809,12.46],[185.905,12.065],[186.201,11.673],[186.201,11.231],[186.201,10.788],[185.462,10.493],[185.462,8.135],[186.298,8.135],[186.693,8.135],[187.087,7.939],[187.478,7.546],[187.873,7.25],[188.655,7.051],[189.491,6.956],[189.939,6.956],[190.332,7.051],[191.113,7.151],[191.508,7.151],[191.902,6.956],[192.197,6.559],[192.395,6.268],[193.18,6.167],[193.572,5.97],[193.957,5.97],[194.361,5.97],[194.754,5.874],[194.926,5.88],[195.147,5.874],[195.443,5.478],[195.835,5.185],[196.228,5.088],[196.62,4.791],[197.012,4.591],[197.213,4.2],[197.509,3.81],[197.902,3.514],[198.29,3.221],[198.686,3.221],[198.887,3.221],[199.079,3.221],[199.866,2.725],[200.064,2.333],[200.457,2.138],[200.848,1.744],[201.145,1.353],[201.438,0.958],[201.537,0.565],[201.734,0.169],[202.519,-0.613],[203.11,-1.794],[203.209,-2.187],[203.602,-2.586],[203.895,-2.977],[204.391,-3.369],[204.879,-3.66],[205.176,-4.057],[205.274,-4.548],[205.467,-5.039],[205.467,-5.432],[205.566,-5.828],[205.668,-6.217],[206.158,-6.513],[206.844,-7.3],[207.338,-8.381],[207.139,-8.971],[206.844,-9.366],[206.615,-9.377],[206.452,-9.366],[205.615,-9.462],[205.566,-10.25],[205.668,-10.644],[205.615,-11.034],[206.354,-11.034],[206.354,-11.432],[206.061,-11.822],[206.061,-13.001],[206.061,-13.396],[205.668,-13.789],[205.274,-14.084],[205.371,-15.263],[205.077,-16.444],[204.483,-17.231],[203.701,-18.113],[203.306,-18.409],[203.069,-18.402],[202.816,-18.409],[202.421,-18.707],[202.421,-19.1],[202.421,-19.492],[202.616,-19.884],[203.011,-20.276],[203.405,-20.571],[203.405,-21.357],[203.405,-22.146],[204.483,-22.146],[204.879,-22.439],[205.176,-22.832],[205.371,-23.227],[205.598,-23.238],[205.762,-23.227],[206.158,-23.227],[206.55,-23.423],[206.944,-23.423],[208.124,-23.423],[208.223,-24.406],[208.124,-24.749],[206.158,-24.749],[205.96,-25.093],[205.371,-25.88],[203.895,-25.88],[203.798,-25.093],[203.798,-24.703],[203.602,-24.355],[203.209,-24.307],[202.816,-24.406],[202.374,-24.355],[202.374,-26.568],[199.889,-26.568],[199.176,-27.405],[199.277,-28.042],[199.569,-28.437],[199.965,-28.832],[200.358,-28.925],[201.537,-28.925],[201.931,-28.925],[202.324,-29.027],[202.324,-29.421],[202.616,-29.814],[202.91,-30.203],[203.405,-30.305],[203.798,-30.498],[204.251,-30.508],[204.587,-30.498],[204.978,-30.498],[205.274,-30.895],[205.668,-31.289],[205.96,-31.678],[206.452,-32.073],[206.944,-32.47],[207.139,-32.47],[207.536,-32.27],[207.634,-31.877],[207.338,-31.484],[206.944,-31.191],[206.844,-30.401],[206.158,-29.617],[205.861,-29.224],[205.467,-28.925],[205.371,-28.535],[205.467,-28.143],[205.861,-28.339],[206.158,-28.731],[208.098,-28.731],[208.616,-29.027],[209.303,-29.716],[209.598,-30.109],[209.99,-30.203],[210.386,-30.401],[211.566,-30.009],[211.754,-30.01],[211.958,-30.009],[212.746,-29.716],[213.137,-29.522],[213.334,-28.731],[213.334,-28.339],[213.137,-27.947],[212.746,-27.549],[212.746,-27.158],[212.352,-26.568],[212.452,-25.684],[213.238,-25.684],[213.629,-25.88],[214.121,-26.175],[214.512,-26.079],[215.204,-25.391],[215.301,-24.999],[215.499,-24.209],[215.598,-23.817],[215.792,-23.423],[216.186,-22.907],[216.186,-20.791],[215.792,-20.276],[215.4,-19.983],[215.301,-19.586],[215.204,-19.172],[215.204,-18.018],[217.342,-18.018],[218.545,-18.707],[218.939,-18.901],[219.43,-19.196],[219.92,-19.586],[220.314,-19.687],[220.709,-19.884],[221.102,-20.179],[221.34,-20.174],[221.592,-20.179],[221.988,-20.474],[221.988,-20.867],[221.988,-21.655],[222.085,-22.146],[222.184,-22.514],[222.184,-23.721],[221.197,-23.916],[220.902,-24.406],[220.902,-25.291],[220.902,-25.684],[220.512,-25.88],[220.116,-26.175],[219.819,-26.568],[219.43,-26.764],[219.037,-27.061],[218.939,-27.451],[218.642,-27.849],[218.642,-28.437],[218.741,-29.522],[219.037,-29.911],[219.23,-30.305],[219.332,-30.701],[219.546,-30.71],[219.723,-30.701],[220.61,-30.895],[221.006,-30.895],[221.787,-30.995],[221.787,-34.457],[221.889,-34.827],[221.988,-35.221],[222.283,-35.616],[222.465,-35.615],[222.676,-35.616],[223.066,-35.81],[223.855,-36.697],[224.15,-37.089],[224.832,-37.778],[225.228,-37.778],[225.626,-37.778],[227.196,-36.792],[227.587,-36.697],[228.379,-36.991],[228.767,-37.188],[229.061,-37.582],[229.456,-37.875],[229.665,-37.88],[229.853,-37.875],[230.146,-38.266],[230.585,-38.279],[230.931,-38.266],[231.326,-38.469],[231.719,-38.563],[232.111,-38.856],[232.111,-39.251],[233.095,-40.04],[233.488,-40.236],[233.681,-40.629],[234.077,-40.923],[235.157,-42.203],[235.551,-42.497],[236.144,-43.283],[236.238,-43.674],[236.533,-44.07],[236.633,-44.461],[236.928,-45.249],[237.225,-45.642],[238.009,-46.429],[238.405,-46.622],[238.6,-47.017],[238.809,-47.023],[238.995,-47.017],[239.684,-47.805],[240.074,-48.1],[240.27,-48.493],[240.663,-48.887],[241.055,-49.281],[241.451,-49.572],[241.451,-50.361],[241.551,-50.753],[241.551,-51.542],[241.551,-51.936],[241.842,-52.327],[242.139,-52.72],[242.238,-53.801],[242.238,-54.488],[242.139,-54.883],[242.139,-55.276],[242.139,-55.665],[242.431,-56.062],[242.431,-56.457],[242.629,-57.246],[243.027,-57.635],[243.223,-58.028],[243.517,-58.421],[243.908,-58.323],[244.107,-57.93],[244.496,-57.832],[244.894,-57.536],[245.184,-57.143],[245.092,-56.751],[244.894,-56.357],[244.793,-55.768],[245.092,-54.783],[245.092,-53.061],[245.092,-51.739],[245.092,-51.344],[244.793,-50.952],[244.4,-50.657],[244.4,-50.067],[244.4,-49.474],[244.793,-48.296],[245.092,-47.313],[244.993,-46.72],[244.598,-46.429],[244.204,-46.133],[244.254,-45.518],[244.204,-44.953],[244.301,-44.461],[244.254,-44.07],[244.993,-44.07],[245.383,-44.267],[245.482,-44.66],[245.678,-45.052],[245.973,-45.442],[246.168,-45.841],[246.568,-45.642],[246.568,-44.855],[246.954,-44.562],[248.134,-44.267],[248.134,-44.66],[247.936,-45.052],[247.84,-45.442],[247.548,-45.841],[247.055,-46.133],[246.858,-46.527],[246.464,-46.824],[246.271,-47.707],[245.973,-48.1],[245.678,-48.887],[246.366,-49.674],[246.66,-50.067],[246.66,-50.558],[246.66,-50.952],[247.055,-51.145],[247.251,-51.542],[247.548,-51.936],[248.332,-51.638],[249.118,-51.049],[249.512,-51.344],[249.512,-51.739],[249.316,-52.128],[249.316,-52.523],[249.02,-53.309],[249.02,-53.702],[248.923,-54.194],[248.628,-54.587],[248.628,-55.768],[248.628,-56.161],[248.332,-56.554],[248.134,-56.943],[247.447,-57.734],[247.251,-58.129],[247.35,-58.497],[247.251,-58.911],[247.35,-59.307],[247.35,-59.7],[247.447,-60.192],[247.35,-60.611],[247.447,-60.977],[247.251,-61.369],[247.051,-61.422],[246.858,-61.468],[246.761,-62.255],[246.568,-63.041],[246.568,-63.926],[246.464,-64.714],[245.678,-64.714],[245.678,-61.863],[244.993,-61.863],[244.598,-61.666],[244.598,-61.272],[244.696,-60.882],[244.696,-60.485],[244.894,-60.091],[244.894,-59.307],[244.204,-59.307],[244.012,-59.335],[243.813,-59.406],[243.615,-59.796],[243.714,-60.192],[243.813,-60.587],[243.908,-61.369],[243.908,-61.763],[243.615,-62.159],[243.223,-62.551],[242.824,-62.845],[242.623,-62.845],[242.431,-62.845],[241.941,-63.14],[241.746,-63.535],[241.353,-63.633],[240.173,-64.714],[238.995,-64.714],[238.995,-62.746],[237.324,-62.746],[237.324,-63.14],[237.126,-63.535],[236.34,-64.814],[235.848,-64.714],[235.947,-64.319],[235.947,-63.535],[235.848,-63.14],[235.598,-63.14],[235.355,-63.14],[234.96,-63.337],[234.96,-63.733],[235.061,-64.122],[235.254,-64.714],[234.569,-65.598],[234.178,-65.206],[233.783,-65.011],[233.34,-65.011],[232.897,-65.011],[232.504,-65.206],[232.6,-65.992],[232.897,-66.384],[233.194,-66.778],[233.408,-66.783],[233.585,-66.778],[234.373,-67.073],[234.865,-67.267],[235.157,-67.66],[235.551,-68.155],[236.043,-68.646],[236.436,-68.745],[236.829,-68.94],[237.616,-68.94],[237.712,-70.415],[237.912,-70.811],[238.306,-71.105],[238.699,-71.301],[238.894,-71.694],[239.092,-72.185],[239.486,-72.379],[239.876,-72.578],[240.173,-72.97],[240.663,-73.266],[240.858,-73.659],[241.257,-73.76],[241.459,-73.759],[241.65,-73.76],[241.842,-74.152],[242.043,-74.545],[242.139,-74.939],[242.332,-75.33],[242.629,-75.721],[242.824,-76.12],[243.615,-76.509],[244.035,-76.504],[244.496,-76.509],[245.283,-77.005],[245.579,-77.398],[245.973,-77.884],[246.761,-78.379],[247.772,-78.182],[247.936,-78.083],[248.9,-78.279],[249.118,-78.279],[249.512,-78.083],[249.907,-78.083],[250.3,-78.083],[250.887,-78.379],[251.085,-78.379],[251.477,-78.182],[252.462,-77.79],[253.051,-77.884],[253.47,-78.083],[258.358,-78.083],[258.358,-78.871],[258.556,-79.753],[258.949,-80.053],[259.444,-79.656],[260.033,-79.36],[260.816,-79.557],[261.408,-79.36],[261.803,-78.967],[262.196,-78.871],[262.587,-78.575],[262.488,-78.182],[262.098,-77.79],[262.293,-77.101],[262.712,-77.005],[264.629,-77.005],[265.439,-77.593],[265.733,-77.986],[266.126,-78.379],[267.11,-77.491],[267.504,-77.2],[267.504,-77.593],[267.699,-77.986],[268.095,-77.884],[268.512,-77.593],[269.668,-77.593],[269.668,-77.986],[269.374,-78.379],[269.272,-78.724],[268.483,-78.675],[268.095,-78.724],[268.095,-79.78],[268.683,-80.443],[268.889,-80.443],[269.077,-80.443],[269.374,-80.834],[269.571,-81.231],[269.863,-81.621],[270.158,-82.015],[270.551,-82.41],[270.723,-82.403],[270.941,-82.41],[271.337,-82.605],[271.633,-83.098],[272.42,-84.08],[273.503,-85.161],[274.483,-85.554],[275.072,-85.459],[275.662,-85.259],[275.858,-85.259],[276.251,-85.459],[276.646,-85.85],[276.848,-85.85],[277.136,-85.459],[277.433,-85.061],[277.826,-84.965],[278.029,-84.963],[278.22,-84.965],[278.613,-84.671],[278.22,-84.08],[278.22,-83.884],[278.415,-83.488],[278.806,-83.294],[278.806,-82.899],[278.806,-82.115],[279.402,-82.015],[279.795,-82.21],[280.09,-82.605],[280.973,-83.194],[281.366,-83.294],[281.754,-83.589],[282.051,-83.985],[282.447,-84.375],[282.743,-84.768],[283.529,-84.867],[283.691,-84.855],[283.92,-84.867],[284.118,-85.259],[284.314,-85.654],[284.511,-86.048],[284.511,-86.833],[284.71,-87.619],[285.496,-87.619],[286.305,-87.913],[288.245,-87.913],[288.245,-87.325],[287.855,-87.027],[287.068,-86.636],[286.673,-86.44],[286.28,-86.048],[286.085,-85.654],[285.986,-85.259],[285.986,-84.867],[285.887,-84.473],[285.496,-83.589],[285.396,-83.194],[285.298,-82.806],[285.003,-82.41],[284.608,-82.309],[284.118,-82.115],[283.725,-82.015],[283.624,-81.621],[283.529,-81.231],[282.743,-80.639],[281.564,-79.753],[280.285,-78.967],[279.103,-78.083],[278.123,-76.903],[277.826,-76.509],[277.04,-76.017],[276.944,-75.627],[276.548,-75.233],[276.35,-75.232],[276.154,-75.233],[275.908,-75.232],[275.662,-75.233],[275.272,-75.037],[274.876,-74.939],[273.993,-74.545],[273.598,-74.349],[273.423,-74.354],[273.202,-74.349],[272.814,-74.152],[272.517,-73.76],[272.814,-73.167],[272.613,-72.088],[272.223,-71.694],[271.827,-71.4],[271.73,-71.004],[271.434,-70.513],[271.434,-70.022],[271.434,-69.236],[270.941,-68.449],[270.941,-67.562],[270.845,-66.778],[271.142,-62.551],[271.142,-61.959],[270.748,-61.565],[271.777,-59.895],[271.777,-56.751],[272.223,-56.554],[272.613,-56.85],[273.007,-56.943],[273.402,-57.143],[273.796,-57.246],[274.483,-57.246],[274.483,-58.421],[274.483,-58.816],[274.775,-59.208],[275.173,-59.406],[275.465,-59.796],[275.762,-60.192],[275.957,-60.587],[276.154,-60.977],[276.646,-61.369],[276.848,-61.369],[277.236,-61.176],[277.626,-61.176],[278.022,-61.176],[278.318,-61.565],[278.516,-61.938],[278.516,-63.926],[279.202,-64.714],[279.595,-65.011],[282.447,-65.011],[282.447,-66.116],[282.051,-66.876],[281.754,-67.267],[281.754,-67.66],[281.754,-68.058],[282.051,-68.449],[282.447,-68.94],[282.642,-69.333],[283.035,-69.727],[283.624,-69.63],[283.725,-69.236],[284.118,-68.94],[284.905,-68.94],[285.003,-69.727],[284.71,-70.119],[284.017,-70.811],[284.017,-71.204],[284.017,-71.597],[283.821,-71.989],[283.725,-72.824],[283.725,-73.266],[284.118,-73.366],[284.511,-73.56],[284.511,-73.953],[284.217,-74.349],[284.04,-74.354],[283.821,-74.349],[283.504,-73.953],[282.743,-73.953],[282.743,-74.838],[283.136,-75.627],[283.232,-76.017],[283.529,-76.411],[284.314,-76.804],[284.608,-77.2],[284.71,-77.593],[284.905,-77.986],[285.003,-78.379],[285.003,-79.263],[285.102,-79.656],[285.197,-80.053],[285.496,-80.443],[285.887,-80.542],[286.28,-80.639],[287.068,-80.245],[287.267,-79.853],[287.855,-79.557],[288.447,-79.753],[288.74,-80.149],[289.035,-80.542],[289.425,-80.736],[289.819,-80.443],[289.819,-80.053],[290.115,-79.656],[290.313,-79.656],[290.508,-79.656],[290.9,-79.954],[291.296,-80.245],[291.884,-81.03],[292.178,-81.427],[292.769,-81.427],[293.36,-81.427],[293.749,-81.328],[294.168,-81.231],[296.996,-81.231],[296.996,-80.443],[296.996,-80.053],[297.589,-79.36],[297.796,-79.354],[297.98,-79.36],[298.373,-80.937],[298.767,-81.132],[299.157,-81.427],[299.454,-81.82],[300.046,-82.703],[300.441,-83.194],[300.73,-83.589],[301.517,-83.783],[302.008,-83.985],[302.503,-83.985],[303.387,-83.985],[303.78,-84.18],[304.569,-84.473],[305.059,-84.671],[305.254,-85.061],[305.647,-85.459],[306.04,-85.554],[307.22,-86.34],[307.73,-86.352],[308.107,-86.34],[308.595,-86.539],[309.09,-86.731],[309.874,-87.619],[310.269,-87.913],[311.053,-87.913],[312.236,-87.817],[312.629,-87.523],[313.022,-87.129],[313.415,-87.027],[314.421,-86.933],[314.991,-86.933],[315.478,-87.027],[315.478,-88.209],[315.085,-88.503],[314.691,-88.8],[314.594,-89.191],[314.397,-89.584],[314.103,-89.98],[313.809,-90.373],[313.71,-90.766],[313.61,-91.944],[312.527,-92.143],[312.332,-92.534],[312.236,-92.926],[312.038,-93.321],[311.521,-93.421],[309.603,-93.421],[309.09,-93.519],[308.99,-93.911],[309.287,-94.306],[309.68,-94.404],[310.069,-94.795],[310.467,-94.795],[310.86,-94.795],[311.67,-94.203],[314.079,-94.203],[314.892,-94.306],[315.676,-94.306],[316.363,-94.993],[316.758,-95.384],[317.152,-95.585],[317.152,-96.174],[317.152,-96.763],[316.949,-96.82],[316.758,-96.862],[316.658,-97.231],[316.658,-98.43],[317.62,-98.533],[318.623,-97.746],[318.623,-97.352],[318.824,-96.957],[319.41,-96.174],[322.533,-96.174],[323.048,-96.074],[323.54,-95.877],[323.931,-95.585],[323.931,-94.404],[325.777,-94.404],[326.587,-94.01],[326.884,-93.615],[327.671,-93.126],[328.163,-92.926],[328.749,-92.632],[328.947,-92.632],[329.342,-92.926],[329.241,-93.321],[329.241,-94.108],[329.342,-94.5],[329.733,-94.5],[330.42,-94.597],[330.42,-95.779],[330.324,-96.174],[330.324,-96.566],[330.42,-96.957],[330.814,-97.152],[331.6,-96.566],[331.996,-96.27],[332.392,-96.27],[332.782,-96.27],[333.175,-96.469],[333.47,-96.862],[333.866,-97.152],[334.063,-97.546],[334.249,-97.546],[334.454,-97.546],[334.845,-97.844],[335.238,-98.042],[335.337,-98.43],[334.749,-99.025],[334.355,-99.222],[334.021,-99.236],[333.569,-99.32],[333.47,-99.708],[333.175,-100.104],[332.782,-100.4],[331.897,-100.598],[331.504,-100.598],[330.863,-100.4],[329.733,-100.598],[329.342,-100.598],[329.118,-100.595],[328.85,-100.598],[328.457,-100.894],[328.064,-101.284],[327.62,-101.284],[327.178,-101.284],[326.785,-100.993],[327.079,-100.598],[327.285,-100.597],[327.472,-100.598],[327.865,-100.4],[327.865,-99.811],[327.865,-99.613],[327.865,-99.222],[327.225,-98.923],[326.293,-99.613],[326.197,-99.983],[326.197,-102.386],[325.9,-102.76],[325.41,-102.954],[325.014,-103.148],[324.623,-103.148],[324.228,-103.252],[323.344,-103.349],[322.951,-103.741],[322.559,-103.839],[322.066,-104.035],[321.378,-104.334],[320.887,-104.727],[320.493,-105.119],[320.395,-105.512],[319.999,-105.609],[319.512,-105.709],[318.623,-105.808],[318.233,-105.903],[317.348,-105.903],[317.152,-106.987],[315.972,-107.773],[315.478,-108.265],[314.691,-108.462],[314.262,-108.46],[313.809,-108.462],[313.415,-108.658],[312.92,-108.853],[312.527,-109.247],[312.332,-109.246],[312.137,-109.247],[311.741,-109.443],[311.35,-109.443],[310.957,-109.443],[310.566,-109.642],[310.069,-109.835],[309.09,-110.23],[308.694,-110.525],[307.415,-110.525],[306.925,-110.525],[306.533,-110.326],[306.04,-109.936],[305.451,-109.835],[304.368,-110.034],[303.978,-110.034],[303.483,-110.131],[303.094,-110.525],[302.894,-110.525],[302.699,-110.525],[301.814,-110.82],[301.027,-111.313],[300.634,-111.41],[300.046,-111.41],[299.454,-111.41],[299.061,-111.214],[298.668,-110.92],[298.767,-110.525],[298.47,-110.131],[298.277,-109.738],[297.883,-109.346],[298.277,-109.247],[298.668,-108.951],[299.061,-108.757],[299.258,-107.968],[299.258,-107.577],[298.866,-107.183],[298.668,-106.79],[298.251,-106.594],[296.6,-106.594],[296.6,-108.02],[294.59,-108.02],[294.59,-109.346],[294.933,-109.346],[296.111,-109.443],[296.897,-109.936],[296.798,-110.326],[296.405,-110.427],[295.988,-110.575],[293.36,-110.575],[293.36,-109.738],[293.36,-109.346],[293.163,-108.951],[292.769,-108.853],[292.079,-108.658],[291.884,-108.658],[291.491,-108.951],[290.704,-109.247],[288.493,-109.247],[286.772,-109.247],[286.28,-109.247],[285.298,-108.757],[284.71,-108.757],[284.118,-108.757],[283.624,-108.951],[283.232,-109.443],[282.811,-109.543],[282.051,-109.543],[281.952,-108.951],[282.051,-108.561],[282.051,-107.28],[281.465,-107.183],[281.071,-107.379],[281.071,-108.168],[280.973,-108.951],[280.579,-109.247],[280.184,-109.346],[279.795,-109.543],[279.402,-109.738],[279.004,-110.131],[278.71,-110.82],[279.004,-111.803],[279.103,-112.196],[278.908,-112.591],[278.613,-112.984],[278.415,-113.377],[278.022,-113.475],[277.626,-113.772],[277.53,-114.163],[277.136,-114.262],[276.949,-114.261],[276.745,-114.262],[276.348,-114.458],[275.858,-114.554],[275.465,-114.655],[274.68,-114.655],[273.796,-114.752],[273.402,-114.752],[273.007,-114.554],[272.613,-114.36],[272.324,-113.968],[271.827,-113.87],[271.408,-113.772],[270.551,-113.772],[270.059,-113.67],[268.78,-113.67],[267.798,-113.576],[267.404,-113.277],[267.009,-113.277],[266.62,-113.277],[266.225,-113.475],[265.831,-113.576],[265.439,-113.968],[264.947,-114.262],[264.556,-114.36],[263.671,-114.36],[263.178,-114.458],[262.587,-114.554],[261.998,-114.655],[261.507,-114.95],[261.9,-115.344],[261.113,-115.736],[260.719,-116.029],[260.522,-116.421],[259.736,-116.525],[258.853,-116.525],[258.756,-116.917],[259.051,-117.306],[259.832,-117.702],[259.639,-118.096],[259.436,-118.095],[259.246,-118.096],[258.728,-118.344],[253.837,-118.344],[253.741,-117.604],[253.447,-117.212],[252.756,-116.525],[252.361,-116.525],[251.973,-116.525],[251.579,-116.818],[251.772,-117.212],[251.973,-117.702],[251.973,-118.096],[252.264,-118.491],[252.658,-118.585],[252.658,-118.978],[251.873,-118.978],[251.381,-119.177],[250.986,-119.472],[250.77,-119.465],[250.498,-119.472],[249.71,-119.867],[249.316,-119.867],[248.827,-119.766],[247.936,-119.766],[247.154,-119.867],[246.568,-120.159],[246.342,-120.154],[246.071,-120.159],[245.283,-120.455],[244.616,-120.461],[244.007,-120.455],[243.223,-120.652],[242.824,-120.748],[242.431,-120.455],[242.431,-120.064],[242.332,-119.177],[240.197,-119.177],[239.288,-118.978],[239.288,-118.585],[239.486,-118.096],[239.779,-117.702],[240.173,-117.503],[240.566,-117.408],[240.759,-117.015],[241.155,-116.718],[241.257,-116.325],[241.353,-115.908],[241.257,-115.54],[240.858,-115.54],[240.074,-115.736],[239.684,-115.833],[239.428,-115.834],[239.189,-115.833],[238.798,-115.933],[238.405,-116.226],[237.983,-116.325],[237.616,-116.226],[236.633,-116.277],[236.633,-115.736],[237.024,-115.54],[237.421,-115.344],[237.814,-114.85],[237.616,-114.163],[236.733,-114.554],[236.34,-114.85],[235.947,-115.246],[235.551,-115.441],[235.254,-115.833],[235.254,-116.226],[234.865,-116.325],[234.027,-116.325],[233.585,-116.325],[233.194,-116.325],[233.194,-115.933],[232.801,-115.639],[231.572,-115.246],[230.537,-115.736],[229.556,-115.833],[229.16,-115.833],[228.866,-116.226],[228.475,-116.325],[228.082,-116.226],[227.783,-115.833],[226.702,-116.226],[226.115,-115.933],[226.214,-115.05],[226.214,-113.87],[226.115,-113.081],[224.051,-113.081],[223.855,-114.262],[223.464,-114.554],[222.969,-114.95],[222.579,-115.05],[222.184,-115.344],[221.689,-115.639],[221.296,-116.029],[220.61,-116.917],[220.61,-117.114],[220.709,-117.503],[221.102,-117.702],[220.902,-118.195],[220.902,-118.978],[220.902,-119.867],[220.806,-120.748],[220.806,-121.537],[220.61,-121.929],[220.217,-122.225],[219.723,-122.617],[219.23,-122.816],[218.545,-122.914],[217.858,-122.715],[217.66,-122.32],[217.561,-121.929],[216.921,-121.832],[215.792,-122.225],[215.694,-122.715],[215.301,-123.11],[215.006,-123.5],[214.61,-123.5],[214.23,-123.508],[213.629,-123.597],[213.334,-123.994],[212.352,-124.386],[211.66,-124.19],[211.17,-123.994],[210.681,-123.7],[210.188,-123.5],[209.696,-123.11],[210.089,-122.32],[210.386,-121.929],[210.681,-121.537],[210.778,-121.02],[210.681,-120.552],[208.147,-120.552],[207.634,-120.358],[206.503,-120.064],[205.371,-120.358],[204.783,-120.652],[203.895,-120.849],[203.504,-121.24],[202.91,-121.437],[202.519,-121.24],[202.126,-120.849],[201.537,-121.14],[201.438,-121.929],[201.438,-122.715],[200.947,-123.11],[200.556,-123.406],[200.158,-123.406],[199.767,-123.5],[199.373,-123.307],[199.129,-122.914],[198.389,-123.01],[197.998,-123.01],[197.581,-123.207],[195.639,-123.207],[194.85,-123.01],[193.772,-123.207],[193.376,-123.207],[193.277,-122.816],[192.616,-122.816],[192.004,-122.816],[191.61,-122.914],[191.163,-122.864],[191.217,-123.597],[191.113,-123.994],[191.163,-124.386],[190.525,-124.485],[190.132,-124.386],[189.939,-123.994],[188.951,-123.5],[188.365,-123.597],[187.97,-123.994],[188.068,-124.386],[188.857,-124.386],[189.246,-124.386],[189.642,-124.682],[189.835,-125.075],[190.233,-125.172],[190.624,-125.368],[190.92,-125.96],[190.92,-126.153],[190.72,-126.548],[190.132,-126.548],[189.149,-126.452],[188.758,-126.153],[188.365,-125.96],[188.167,-125.469],[187.873,-125.075],[187.478,-124.781],[186.962,-124.386],[184.53,-124.386],[184.137,-124.19],[184.233,-123.797],[184.53,-123.207],[184.53,-123.01],[184.137,-122.816],[183.839,-122.419],[183.204,-122.32],[182.956,-122.32],[182.564,-122.419],[181.777,-122.419],[181.287,-122.225],[180.889,-121.929],[180.107,-121.929],[179.318,-121.929],[178.313,-121.732],[178.137,-121.732],[177.941,-121.832],[178.532,-121.929],[178.827,-122.32],[179.22,-122.617],[179.517,-123.01],[179.908,-123.207],[180.327,-123.213],[180.693,-123.207],[181.087,-123.207],[181.287,-123.597],[181.678,-123.893],[182.467,-124.485],[182.956,-125.27],[183.743,-125.469],[184.137,-125.469],[184.53,-125.566],[184.921,-125.566],[185.313,-125.761],[185.413,-126.153],[185.71,-126.548],[186.493,-126.748],[186.887,-126.748],[187.285,-126.845],[187.772,-126.845],[188.167,-126.942],[188.559,-127.238],[188.951,-127.535],[188.951,-127.924],[189.149,-128.713],[191.113,-128.713],[191.217,-129.304],[191.217,-129.697],[191.408,-130.088],[191.607,-130.088],[191.806,-130.088],[192.004,-130.484],[191.902,-130.877],[191.806,-131.268],[191.605,-131.317],[191.408,-131.367],[191.408,-131.761],[191.217,-132.151],[191.006,-132.153],[190.822,-132.151],[190.822,-132.546],[190.624,-133.038],[190.132,-133.432],[189.741,-133.727],[189.496,-133.726],[189.246,-133.727],[188.857,-133.825],[188.806,-135.005],[185.929,-135.005],[185.118,-135.201],[184.233,-135.299],[183.839,-135.299],[183.447,-135.102],[183.154,-134.713],[182.758,-134.611],[182.072,-135.299],[181.678,-135.398],[181.064,-135.494],[180.499,-135.398],[180.499,-134.216],[179.318,-134.216],[178.925,-134.512],[179.123,-134.906],[179.517,-135.005],[179.908,-135.768],[179.809,-136.185],[177.668,-136.185],[176.863,-136.38],[175.876,-136.38],[175.485,-136.481],[175.683,-136.872],[176.368,-137.562],[176.587,-137.567],[176.764,-137.562],[177.158,-137.854],[177.158,-138.643]],\"c\":true},\"ix\":2},\"nm\":\"Path 30\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":30,\"ty\":\"sh\",\"ix\":31,\"ks\":{\"a\":0,\"k\":{\"i\":[[0,0.444],[0,0.146],[0,0.072],[0,0],[-0.149,0],[-0.03,-0.018],[0,0],[0,0]],\"o\":[[0,-0.145],[0,-0.078],[0,0],[0.147,0],[0.037,0],[0,0],[0,0],[0,-0.444]],\"v\":[[25.267,-112.787],[25.362,-113.178],[25.314,-113.377],[26.151,-113.377],[26.544,-113.475],[26.641,-113.439],[26.641,-111.654],[25.314,-111.654]],\"c\":true},\"ix\":2},\"nm\":\"Path 31\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":31,\"ty\":\"sh\",\"ix\":32,\"ks\":{\"a\":0,\"k\":{\"i\":[[0,0],[0,0],[0,0],[0.295,-0.396],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],\"o\":[[0,0],[0,0],[0,0],[-0.296,0.392],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],\"v\":[[-242.727,-137.658],[-244.988,-137.658],[-246.462,-137.757],[-247.84,-135.69],[-249.315,-134.216],[-251.082,-134.216],[-252.756,-133.531],[-252.068,-132.349],[-250.099,-131.658],[-249.315,-132.643],[-248.136,-131.859],[-247.053,-132.447],[-246.854,-133.239],[-245.578,-133.333],[-245.184,-134.512],[-244.104,-135.299],[-243.219,-134.02],[-242.234,-134.416],[-240.566,-135.005],[-240.076,-136.872],[-239.483,-138.15],[-241.646,-138.643]],\"c\":true},\"ix\":2},\"nm\":\"Path 32\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":32,\"ty\":\"sh\",\"ix\":33,\"ks\":{\"a\":0,\"k\":{\"i\":[[0,0],[0.151,-0.127],[0.368,-0.075],[0,0],[-0.171,0],[-0.27,-0.049],[-0.146,-0.026],[0,0],[-0.05,0],[0.1,0.247],[0.1,0.096],[0.248,0]],\"o\":[[-0.198,0.027],[-0.271,0.219],[0,0],[0.146,-0.045],[0.3,0],[0.146,0.022],[0,0],[0.05,0],[-0.028,-0.268],[-0.048,-0.118],[-0.174,-0.172],[0,0]],\"v\":[[158.576,-137.167],[158.28,-136.773],[157.396,-136.38],[157.396,-135.891],[157.788,-136.086],[158.576,-135.987],[158.969,-135.789],[159.363,-135.789],[159.462,-135.891],[159.363,-136.58],[159.363,-136.968],[158.772,-137.167]],\"c\":true},\"ix\":2},\"nm\":\"Path 33\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":33,\"ty\":\"sh\",\"ix\":34,\"ks\":{\"a\":0,\"k\":{\"i\":[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],\"o\":[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],\"v\":[[-203.503,-136.481],[-203.699,-135.201],[-201.929,-134.216],[-200.257,-133.333],[-198.39,-133.239],[-197.307,-134.317],[-197.406,-135.201],[-198.782,-136.284],[-200.651,-136.284],[-201.73,-136.773]],\"c\":true},\"ix\":2},\"nm\":\"Path 34\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":34,\"ty\":\"sh\",\"ix\":35,\"ks\":{\"a\":0,\"k\":{\"i\":[[0,0],[0,0],[0.146,0],[0.113,0.009],[0.15,-0.029],[0.197,-0.246],[0.077,-0.126],[0.096,-0.12],[0.171,-0.077],[0.159,0.026],[0.113,-0.008],[0.124,-0.021],[0.15,-0.069],[0.17,-0.074],[0.15,-0.03],[0.147,0],[0.298,0],[0.2,-0.05],[0.15,-0.051],[0.123,-0.047],[0.171,-0.021],[0.067,0.006],[0.069,-0.009],[0.544,0.028],[0.295,0],[0,0],[0.149,0],[0.126,0.008],[0.174,-0.026],[0.147,-0.027],[0.22,-0.196],[0.074,-0.128],[0.173,-0.295],[0,0],[0.121,-0.125],[0.122,-0.122],[0.146,-0.099],[0.122,-0.049],[0.196,-0.049],[0.101,-0.071],[0.077,-0.146],[0,-0.125],[0,-0.346],[0.222,0],[0.466,-0.023],[0.146,-0.026],[0,-0.221],[0.2,-0.27],[0.079,-0.172],[0,-0.123],[0,0],[0,0],[0.218,0],[0.155,0.008],[0.255,-0.03],[0.295,-0.145],[0.169,-0.122],[0,-0.343],[-0.047,-0.176],[-0.122,0.021],[-0.271,0],[-0.223,-0.024],[0,-0.245],[0,0],[-0.073,-0.145],[0.294,0.024],[0.296,0],[0.201,-0.028],[0,0],[0.368,-0.051],[0.295,-0.12],[0,-0.123],[0,-0.17],[0.025,-0.121],[0.075,-0.173],[0.028,-0.123],[0.027,-0.147],[0.271,-0.027],[0.124,-0.076],[0.096,-0.149],[0.071,-0.124],[0.047,-0.148],[0,-0.321],[0,-0.15],[0,-0.149],[0,-0.148],[0,0],[-0.07,0.1],[-0.124,0.099],[-0.05,-0.099],[-0.048,-0.097],[-0.073,-0.147],[-0.099,0.198],[-0.025,0.121],[-0.127,-0.075],[-0.172,-0.12],[-0.271,-0.267],[-0.1,-0.124],[0,0],[0,0],[-0.047,-0.148],[0,0],[-0.567,-0.05],[-0.169,-0.025],[-0.347,-0.049],[-0.266,0],[0,0],[-0.146,0],[-0.122,0],[0,0],[0.076,0.098],[0.049,0.148],[0,0.296],[0.061,-0.011],[0.055,0.041],[0.095,0.121],[0.048,0.124],[0.121,0.149],[0.143,0.146],[0.148,0.193],[0.076,0.099],[0.077,-0.004],[0.027,0.069],[0.027,0.122],[0,0.151],[0,0.241],[0,0],[-0.072,0.171],[-0.023,0.124],[-0.118,0.444],[-0.122,0.123],[-0.224,0.322],[-0.098,0.073],[-0.095,0.048],[-0.097,0.074],[-0.097,0.077],[-0.099,0.075],[-0.197,0.296],[-0.07,0.121],[-0.102,0.101],[-0.124,0.072],[-0.075,-0.017],[-0.046,0.023],[-0.148,0.294],[-0.048,0.121],[-0.076,0.123],[-0.097,0.144],[-0.095,0.146],[-0.019,0.121],[-0.32,0.024],[-0.07,-0.008],[-0.097,0.027],[-0.167,0.074],[-0.086,-0.016],[-0.082,0.023],[-0.12,0.178],[-0.102,0.074],[-0.122,0.022],[-0.068,-0.007],[-0.061,0.011],[-0.126,0.051],[-0.144,0.124],[-0.097,0.124],[-0.124,0.098],[0,0.221],[0.025,0.274],[-0.298,0],[-0.162,-0.009],[-0.385,0.153],[-0.148,0.121],[-0.224,0.074],[-0.067,-0.006],[-0.064,0.014],[-0.344,0],[0,0],[-0.12,0.071],[-0.196,0.074],[-0.296,0],[-0.271,0.046],[-0.395,0],[0,0],[-0.123,0.072],[-0.245,0.295],[-0.126,0.074],[-0.125,0.023],[-0.294,0],[0,0.246],[0.053,0.175],[0.075,0.119],[0.123,0.073],[0.188,-0.037],[0.127,0.008],[0.198,0]],\"o\":[[0,0],[-0.151,0],[-0.131,0.011],[-0.141,-0.011],[-0.322,0.05],[-0.068,0.099],[-0.07,0.121],[-0.098,0.122],[-0.169,0.078],[-0.099,-0.016],[-0.145,0],[-0.147,0.027],[-0.17,0.075],[-0.148,0.074],[-0.115,0.022],[-0.295,0.022],[-0.223,0],[-0.147,0.048],[-0.124,0.05],[-0.172,0.051],[-0.066,0.015],[-0.062,-0.006],[-0.543,0.079],[-0.292,-0.021],[0,0],[-0.146,0],[-0.157,0.013],[-0.151,-0.011],[-0.149,0.028],[-0.293,0.075],[-0.126,0.099],[-0.194,0.268],[0,0],[-0.124,0.1],[-0.124,0.122],[-0.122,0.126],[-0.097,0.048],[-0.197,0.076],[-0.124,0.026],[-0.121,0.101],[-0.071,0.123],[-0.05,0.314],[-0.219,-0.026],[-0.468,-0.023],[-0.148,0],[0.098,0.172],[0,0.346],[-0.101,0.148],[-0.048,0.123],[0,0],[0,0],[-0.22,0.026],[-0.2,0.009],[-0.211,-0.011],[-0.32,0.049],[-0.194,0.097],[-0.273,0.196],[0,0.197],[0.148,-0.029],[0.245,-0.079],[0.222,0],[-0.076,0.221],[0,0],[0,0.194],[-0.294,0],[-0.294,-0.028],[-0.196,0],[0,0],[-0.392,0],[-0.296,0.024],[0.026,0.15],[0.026,0.148],[0,0.15],[-0.048,0.171],[-0.048,0.124],[-0.023,0.121],[-0.292,0],[-0.121,0],[-0.147,0.094],[-0.072,0.099],[-0.072,0.147],[-0.128,0.271],[0,0.147],[0,0.144],[0,0.148],[0,0],[0.074,-0.119],[0.104,-0.121],[0.123,0.074],[0.049,0.096],[0.1,0.147],[0.146,-0.147],[0.048,-0.122],[0.149,0.073],[0.169,0.12],[0.293,0.224],[0.122,0.12],[0,0],[0,0],[0.051,0.149],[0,0],[0.567,0],[0.196,0],[0.32,0.027],[0.27,0.027],[0,0],[0.148,0],[0.123,0],[0,0],[-0.071,-0.126],[-0.074,-0.121],[-0.097,-0.267],[-0.053,-0.012],[-0.081,0.015],[-0.148,-0.124],[-0.075,-0.102],[-0.102,-0.173],[-0.124,-0.148],[-0.174,-0.172],[-0.072,-0.1],[-0.035,-0.046],[-0.089,0.003],[-0.049,-0.121],[-0.023,-0.126],[-0.023,-0.243],[0,0],[0.049,-0.17],[0.05,-0.125],[0.099,-0.442],[0.027,-0.143],[0.271,-0.267],[0.047,-0.096],[0.095,-0.074],[0.098,-0.046],[0.099,-0.074],[0.099,-0.071],[0.27,-0.217],[0.074,-0.123],[0.074,-0.124],[0.095,-0.095],[0.066,-0.04],[0.065,0.015],[0.271,-0.171],[0.049,-0.124],[0.072,-0.147],[0.096,-0.146],[0.098,-0.151],[0.077,-0.124],[0.348,0],[0.075,-0.01],[0.089,0.011],[0.172,-0.048],[0.092,-0.037],[0.075,0.014],[0.195,-0.071],[0.074,-0.095],[0.101,-0.075],[0.061,-0.013],[0.066,0.005],[0.124,-0.026],[0.172,-0.074],[0.128,-0.097],[0.1,-0.122],[0.145,-0.124],[0,-0.273],[0.293,-0.024],[0.193,-0.007],[0.351,0.02],[0.173,-0.049],[0.17,-0.148],[0.056,-0.011],[0.067,0.006],[0.322,-0.096],[0,0],[0.171,0],[0.17,-0.127],[0.272,-0.096],[0.296,0],[0.364,-0.051],[0,0],[0.173,0],[0.321,-0.222],[0.101,-0.124],[0.099,-0.049],[0.266,-0.076],[0.077,-0.224],[0,-0.197],[-0.05,-0.147],[-0.047,-0.099],[-0.17,-0.108],[-0.111,0.022],[-0.199,0],[0,0]],\"v\":[[105.484,-136.185],[105.098,-136.185],[104.703,-136.086],[104.342,-136.093],[103.915,-136.086],[103.126,-135.69],[103.027,-135.299],[102.833,-134.906],[102.441,-134.611],[101.965,-134.586],[101.652,-134.611],[101.258,-134.611],[100.866,-134.416],[100.474,-134.119],[100.078,-133.921],[99.689,-133.921],[98.9,-133.921],[98.309,-133.825],[97.918,-133.628],[97.523,-133.531],[97.132,-133.239],[96.934,-133.236],[96.74,-133.239],[95.359,-133.239],[94.574,-133.333],[94.082,-133.333],[93.69,-133.239],[93.275,-133.242],[92.806,-133.239],[92.411,-133.038],[91.626,-132.742],[91.427,-132.349],[90.938,-131.564],[88.185,-131.564],[87.793,-131.268],[87.497,-130.877],[87.203,-130.484],[86.807,-130.386],[86.22,-130.286],[85.823,-130.189],[85.432,-129.893],[85.432,-129.497],[85.432,-128.614],[84.844,-128.713],[83.661,-128.713],[83.272,-128.614],[83.565,-128.122],[83.072,-127.337],[82.678,-127.041],[82.678,-126.649],[82.678,-126.257],[82.678,-125.469],[82.091,-125.368],[81.572,-125.376],[80.909,-125.368],[80.025,-125.075],[79.536,-124.781],[79.042,-123.994],[79.237,-123.5],[79.633,-123.597],[80.246,-123.893],[80.811,-123.797],[80.615,-123.207],[80.615,-123.01],[80.909,-122.617],[79.831,-122.419],[79.042,-122.522],[78.548,-122.419],[78.548,-121.14],[77.569,-121.14],[76.78,-120.849],[76.78,-120.455],[76.98,-120.064],[76.879,-119.669],[76.484,-119.373],[76.484,-118.978],[76.387,-118.585],[75.599,-118.585],[75.207,-118.585],[74.913,-118.195],[74.913,-117.799],[74.523,-117.604],[74.473,-116.793],[74.421,-116.421],[74.523,-116.029],[74.473,-115.639],[75.503,-115.54],[75.599,-115.933],[75.993,-116.128],[76.387,-116.029],[76.484,-115.639],[76.78,-115.246],[77.174,-115.639],[77.174,-116.029],[77.569,-115.833],[77.96,-115.441],[78.846,-114.95],[79.042,-114.554],[78.353,-113.67],[78.353,-113.475],[78.548,-113.081],[80.689,-113.081],[82.091,-112.787],[82.579,-112.787],[83.467,-112.591],[84.126,-112.591],[84.743,-112.591],[85.135,-112.687],[85.432,-112.64],[85.432,-113.475],[85.333,-113.87],[84.941,-114.066],[84.941,-114.85],[84.764,-114.839],[84.548,-114.85],[84.156,-115.144],[84.156,-115.54],[83.763,-115.833],[83.37,-116.226],[82.876,-116.718],[82.777,-117.114],[82.587,-117.151],[82.384,-117.212],[82.384,-117.604],[82.384,-117.998],[82.188,-118.585],[82.188,-118.784],[82.579,-119.077],[82.678,-119.472],[82.678,-120.652],[83.072,-120.849],[83.763,-121.636],[83.861,-122.027],[84.251,-122.127],[84.645,-122.225],[84.645,-122.617],[85.04,-122.715],[85.725,-123.406],[85.725,-123.797],[86.125,-123.994],[86.316,-124.386],[86.536,-124.392],[86.71,-124.386],[87.299,-125.075],[87.397,-125.469],[87.596,-125.863],[87.988,-126.153],[88.28,-126.548],[88.28,-126.942],[89.169,-126.942],[89.385,-126.936],[89.66,-126.942],[89.954,-127.337],[90.216,-127.342],[90.448,-127.337],[90.938,-127.633],[90.938,-128.025],[91.332,-128.122],[91.53,-128.122],[91.723,-128.122],[92.118,-128.221],[92.508,-128.516],[92.706,-128.909],[93.103,-129.106],[93.493,-129.497],[93.397,-130.189],[94.184,-130.286],[94.711,-130.274],[95.755,-130.386],[96.052,-130.776],[96.546,-131.171],[96.734,-131.17],[96.935,-131.171],[97.743,-131.464],[100.057,-131.464],[100.474,-131.658],[100.866,-132.055],[101.652,-132.151],[102.441,-132.151],[103.253,-132.742],[105.165,-132.742],[105.587,-132.937],[106.273,-133.727],[106.471,-134.119],[106.867,-134.216],[107.648,-134.216],[107.846,-134.808],[107.549,-135.201],[107.354,-135.591],[107.258,-135.987],[106.73,-136.023],[106.375,-135.987],[105.879,-136.185]],\"c\":true},\"ix\":2},\"nm\":\"Path 35\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":35,\"ty\":\"sh\",\"ix\":36,\"ks\":{\"a\":0,\"k\":{\"i\":[[0.099,0.396],[0,0],[0,0],[0,0]],\"o\":[[0,0],[0,0],[0,0],[0,0]],\"v\":[[-237.518,-136.185],[-237.319,-135.398],[-235.157,-135.201],[-235.255,-136.185]],\"c\":true},\"ix\":2},\"nm\":\"Path 36\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":36,\"ty\":\"sh\",\"ix\":37,\"ks\":{\"a\":0,\"k\":{\"i\":[[0,0],[0,0],[-0.197,-0.391],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[-0.392,0.294],[0,0],[0.491,0],[0,0],[0,0],[0,0],[0,0],[-0.295,-0.591],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],\"o\":[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0.394,-0.297],[0,0],[-0.491,0],[0,0],[0,0],[0,0],[0,0],[0.295,0.588],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],\"v\":[[-218.642,-134.02],[-217.952,-133.038],[-215.593,-131.268],[-213.432,-130.583],[-212.254,-130.974],[-211.267,-131.171],[-210.481,-130.286],[-209.793,-128.516],[-208.807,-129.007],[-207.14,-129.106],[-205.96,-129.304],[-205.861,-130.386],[-205.861,-131.955],[-205.174,-132.742],[-205.566,-133.921],[-207.237,-134.713],[-208.318,-134.02],[-210.186,-135.201],[-211.758,-135.201],[-210.578,-134.216],[-209.203,-132.447],[-210.382,-132.349],[-212.35,-134.216],[-213.825,-134.216],[-213.728,-133.038],[-213.333,-131.761],[-215.102,-132.843],[-215.987,-134.808],[-218.544,-135.69]],\"c\":true},\"ix\":2},\"nm\":\"Path 37\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":37,\"ty\":\"sh\",\"ix\":38,\"ks\":{\"a\":0,\"k\":{\"i\":[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0.393,-0.094],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],\"o\":[[0,0],[0,0],[0,0],[0,0],[0,0.689],[0,0],[0,0],[-0.393,0.099],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[-0.492,0.592],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],\"v\":[[-227.882,-135.591],[-228.474,-134.906],[-229.553,-134.611],[-229.454,-133.825],[-228.278,-133.038],[-228.572,-131.564],[-227.096,-131.367],[-227.096,-130.583],[-228.278,-130.484],[-230.243,-130.484],[-231.522,-131.268],[-232.8,-132.843],[-234.371,-133.432],[-235.747,-133.432],[-237.125,-134.119],[-238.107,-134.317],[-239.975,-133.727],[-240.957,-132.349],[-241.943,-131.367],[-243.023,-130.286],[-242.826,-129.106],[-240.665,-129.007],[-238.795,-128.614],[-237.125,-128.812],[-235.65,-129.304],[-233.093,-128.909],[-231.422,-128.909],[-233.389,-128.317],[-235.255,-128.317],[-236.534,-127.728],[-236.338,-126.845],[-235.157,-126.349],[-232.7,-126.349],[-230.243,-127.238],[-228.669,-128.419],[-226.902,-128.614],[-224.54,-128.614],[-222.18,-128.614],[-221.296,-129.697],[-220.706,-131.761],[-221.492,-132.546],[-222.575,-132.546],[-222.771,-131.658],[-224.147,-132.151],[-225.817,-133.432],[-225.817,-134.416],[-226.406,-135.591]],\"c\":true},\"ix\":2},\"nm\":\"Path 38\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":38,\"ty\":\"sh\",\"ix\":39,\"ks\":{\"a\":0,\"k\":{\"i\":[[0,0],[0,0],[-0.198,-0.395],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[-0.494,-0.392],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[-0.49,0],[0,0.393],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],\"o\":[[0,0],[0,0],[0.197,0.392],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0.49,0.392],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0.491,0],[0,-0.395],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],\"v\":[[-194.753,-135.005],[-196.424,-134.808],[-195.735,-132.742],[-194.656,-130.877],[-195.538,-129.304],[-194.457,-128.122],[-192.588,-126.942],[-189.935,-127.14],[-188.656,-127.924],[-186.885,-126.649],[-184.037,-126.548],[-180.791,-126.548],[-179.317,-126.942],[-178.631,-127.633],[-177.644,-126.845],[-175.976,-126.942],[-173.124,-127.238],[-172.926,-128.317],[-171.845,-129.007],[-172.14,-130.583],[-174.699,-131.268],[-177.451,-131.859],[-179.513,-131.171],[-182.564,-130.484],[-184.525,-130.286],[-187.28,-130.776],[-189.541,-130.676],[-191.408,-132.151],[-191.607,-133.628],[-192.293,-135.005]],\"c\":true},\"ix\":2},\"nm\":\"Path 39\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":39,\"ty\":\"sh\",\"ix\":40,\"ks\":{\"a\":0,\"k\":{\"i\":[[0.164,0],[0,0],[0.146,0],[0.762,0],[0.075,-0.323],[0.125,-0.294],[0.05,-0.122],[0.024,-0.198],[0.024,-0.122],[0.026,-0.146],[0,0],[-0.124,-0.149],[-0.124,-0.1],[-0.121,-0.053],[-0.167,-0.075],[-0.124,-0.047],[-0.124,-0.194],[-0.073,-0.145],[-0.101,-0.121],[-0.269,0],[-0.39,0.025],[-0.026,0.196],[-0.026,0.126],[-0.071,0.174],[-0.496,0],[-0.466,0.023],[-0.093,-0.002],[-0.203,0.101],[-0.124,0.049],[-0.149,0],[-0.122,-0.049],[-0.176,-0.048],[-0.147,0],[-0.272,0.199],[-0.148,0.097],[-0.218,0],[0,0],[-0.17,-0.051],[-0.121,-0.026],[-0.172,0],[0,0],[-0.096,0.415],[-0.076,0.147],[-0.101,0.173],[-0.049,0.171],[-0.022,0.121],[0.12,0.023],[0.06,-0.009],[0.066,0.027],[0.145,0.045],[0.122,0],[0.216,-0.015],[0.192,0.009],[0.223,0],[0,0],[0.1,-0.094],[0.048,-0.096],[0.075,-0.198],[0.025,-0.118],[0,-0.319],[0.298,0],[0.147,0],[0,0],[-0.072,0.121],[0,0.346],[0.024,0.147],[0.291,0.024],[0.149,0],[0.293,0],[0.147,-0.024],[0,0],[0.291,0],[0.27,0.023],[0.121,0.023],[0.125,0.094],[0.099,0.124],[0.125,0.101],[0.1,0.072],[0.063,0]],\"o\":[[0,0],[-0.149,0],[-0.765,0.022],[0.027,0.344],[-0.072,0.315],[-0.047,0.126],[-0.075,0.197],[-0.029,0.123],[-0.029,0.121],[0,0],[0.098,0.147],[0.101,0.124],[0.101,0.073],[0.149,0.072],[0.126,0.049],[0.196,0.099],[0.072,0.128],[0.074,0.148],[0.145,0.172],[0.396,0],[0.027,-0.222],[0.024,-0.121],[0.024,-0.174],[0.393,0.249],[0.465,0],[0.106,-0.007],[0.205,0.005],[0.123,-0.048],[0.121,-0.049],[0.148,0],[0.173,0.049],[0.124,0.022],[0.347,0],[0.149,-0.097],[0.17,-0.122],[0,0],[0.173,0.026],[0.124,0.046],[0.149,0.048],[0,0],[0,-0.417],[0.027,-0.172],[0.098,-0.198],[0.07,-0.145],[0.025,-0.124],[-0.146,-0.024],[-0.056,-0.012],[-0.075,0.01],[-0.149,-0.053],[-0.123,-0.054],[-0.261,-0.044],[-0.152,0.011],[-0.222,0],[0,0],[-0.148,0.049],[-0.097,0.1],[-0.121,0.172],[-0.023,0.121],[-0.05,0.298],[-0.296,-0.023],[-0.146,0],[0,0],[0,-0.173],[0.145,-0.272],[0,-0.17],[-0.295,0],[-0.15,0],[-0.292,-0.025],[-0.15,0],[0,0],[-0.294,-0.024],[-0.296,0],[-0.122,0],[-0.174,-0.026],[-0.121,-0.103],[-0.097,-0.125],[-0.097,-0.074],[-0.056,-0.05],[-0.126,0]],\"v\":[[239.756,-132.643],[239.189,-132.643],[238.798,-132.546],[236.829,-132.546],[236.928,-131.658],[236.533,-130.877],[236.436,-130.484],[236.144,-129.992],[236.144,-129.598],[236.043,-129.205],[235.751,-129.497],[236.043,-129.106],[236.238,-128.713],[236.633,-128.614],[237.024,-128.317],[237.421,-128.221],[237.912,-127.831],[238.107,-127.437],[238.306,-127.041],[238.969,-126.942],[239.975,-127.041],[240.074,-127.633],[240.074,-128.025],[240.366,-128.419],[241.551,-127.924],[242.728,-128.025],[243.025,-128.029],[243.615,-128.122],[243.714,-128.516],[244.107,-128.516],[244.496,-128.516],[244.793,-128.122],[245.184,-128.025],[245.973,-128.516],[246.271,-128.909],[246.858,-129.007],[247.055,-129.007],[247.447,-128.713],[247.84,-128.614],[248.258,-128.516],[249.806,-128.516],[249.806,-129.598],[250.006,-129.992],[250.4,-130.386],[250.691,-130.776],[250.691,-131.171],[250.3,-131.268],[250.123,-131.261],[249.907,-131.268],[249.71,-131.658],[249.316,-131.658],[248.637,-131.67],[248.134,-131.658],[247.548,-131.761],[247.35,-131.761],[246.954,-131.564],[246.858,-131.171],[246.464,-130.776],[246.366,-130.386],[246.366,-129.549],[245.579,-129.598],[245.184,-129.549],[245.184,-130.705],[245.482,-131.071],[245.876,-131.859],[245.678,-132.252],[244.894,-132.252],[244.496,-132.349],[243.714,-132.349],[243.321,-132.252],[243.321,-131.171],[242.533,-131.268],[241.746,-131.268],[241.353,-131.268],[241.055,-131.658],[240.759,-132.055],[240.366,-132.252],[240.366,-132.643],[240.188,-132.709]],\"c\":true},\"ix\":2},\"nm\":\"Path 40\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":40,\"ty\":\"sh\",\"ix\":41,\"ks\":{\"a\":0,\"k\":{\"i\":[[0,0],[0,0],[0,0],[0,0]],\"o\":[[0,0],[0,0],[0,0],[0,0]],\"v\":[[-245.381,-131.955],[-246.365,-130.776],[-244.497,-130.484],[-243.515,-132.447]],\"c\":true},\"ix\":2},\"nm\":\"Path 41\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":41,\"ty\":\"sh\",\"ix\":42,\"ks\":{\"a\":0,\"k\":{\"i\":[[0.053,-0.197],[0,-0.145],[-0.022,-0.122],[-0.174,-0.097],[-0.197,0],[-0.194,0.148],[0,0.145],[-0.046,0.293],[0.197,0],[0.17,0]],\"o\":[[-0.022,0.122],[0,0.15],[0.029,0.173],[0.17,0.101],[0.243,0],[-0.02,-0.149],[0,-0.298],[-0.194,-0.027],[-0.174,0],[-0.223,0]],\"v\":[[232.402,-131.268],[232.402,-130.877],[232.402,-130.484],[232.801,-130.189],[233.194,-129.893],[233.681,-130.286],[233.585,-130.676],[233.681,-131.464],[233.194,-131.464],[232.801,-131.658]],\"c\":true},\"ix\":2},\"nm\":\"Path 42\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":42,\"ty\":\"sh\",\"ix\":43,\"ks\":{\"a\":0,\"k\":{\"i\":[[0,0],[0,0],[-0.171,-0.072],[-0.126,-0.048],[-0.125,-0.074],[-0.123,-0.096],[-0.268,0],[-0.22,0.05],[-0.343,0],[-0.272,-0.174],[-0.198,-0.095],[-0.12,-0.047],[-0.148,-0.025],[-0.297,0],[0,0],[-0.124,0.026],[-0.148,0.121],[-0.174,0.022],[-0.121,0],[-0.219,0],[0,0],[0,0.148],[0,0.051],[0.513,0],[0.149,-0.025],[0.323,0],[0,0],[0.147,0],[0,0],[0.151,0],[0,0],[0.489,0],[0.124,-0.07],[0.099,-0.048],[0.221,0],[0.198,0.076],[0.269,0.466]],\"o\":[[0,0],[0.145,0.073],[0.126,0.049],[0.145,0.077],[0.124,0.072],[0.196,0.149],[0.247,0],[0.322,-0.077],[0.343,0],[0.169,0.101],[0.122,0.051],[0.148,0.049],[0.27,0.048],[0,0],[0.122,0],[0.193,-0.047],[0.148,-0.122],[0.124,-0.026],[0.199,-0.026],[0,0],[0,-0.144],[0,-0.046],[-0.517,-0.025],[-0.173,0],[-0.293,0.051],[0,0],[-0.146,0],[0,0],[-0.145,0],[0,0],[-0.49,-0.021],[-0.175,0],[-0.099,0.051],[-0.171,0.123],[-0.223,0],[-0.467,-0.222],[0,0]],\"v\":[[252.858,-130.877],[252.858,-129.205],[252.952,-128.909],[253.348,-128.812],[253.741,-128.614],[253.936,-128.221],[254.574,-128.025],[255.214,-128.122],[256.1,-128.419],[256.886,-128.025],[257.28,-127.633],[257.673,-127.535],[258.064,-127.337],[258.853,-127.337],[259.246,-127.337],[259.639,-127.337],[260.033,-127.728],[260.329,-128.122],[260.719,-128.122],[261.308,-128.122],[261.308,-128.909],[261.21,-129.304],[261.287,-129.401],[259.96,-129.497],[259.538,-129.401],[258.728,-129.304],[258.358,-129.304],[257.969,-129.401],[257.475,-129.401],[257.082,-129.328],[257.082,-130.386],[255.831,-130.484],[255.412,-130.386],[255.313,-129.992],[254.723,-129.992],[254.133,-129.992],[253.249,-131.071]],\"c\":true},\"ix\":2},\"nm\":\"Path 43\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":43,\"ty\":\"sh\",\"ix\":44,\"ks\":{\"a\":0,\"k\":{\"i\":[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],\"o\":[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],\"v\":[[-200.847,-130.776],[-202.812,-129.992],[-203.207,-129.007],[-201.832,-127.728],[-200.355,-127.728],[-198.979,-127.14],[-197.801,-127.633],[-197.406,-129.106],[-198.782,-129.893],[-199.57,-130.974]],\"c\":true},\"ix\":2},\"nm\":\"Path 44\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":44,\"ty\":\"sh\",\"ix\":45,\"ks\":{\"a\":0,\"k\":{\"i\":[[-0.026,-0.102],[0,0],[0,0],[0,0],[0,0.393],[0.408,0]],\"o\":[[0.097,0.398],[0,0],[0,0],[0,0],[0,-0.29],[-0.142,0]],\"v\":[[-218.445,-130.189],[-219.132,-129.791],[-218.741,-128.713],[-217.462,-128.812],[-216.97,-129.697],[-218.242,-130.333]],\"c\":true},\"ix\":2},\"nm\":\"Path 45\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":45,\"ty\":\"sh\",\"ix\":46,\"ks\":{\"a\":0,\"k\":{\"i\":[[0,0],[0,0],[0,0]],\"o\":[[0,0],[0,0],[0,0]],\"v\":[[-206.255,-126.548],[-204.877,-126.548],[-205.464,-127.437]],\"c\":true},\"ix\":2},\"nm\":\"Path 46\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":46,\"ty\":\"sh\",\"ix\":47,\"ks\":{\"a\":0,\"k\":{\"i\":[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[-0.099,0.389],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],\"o\":[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0.096,-0.397],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],\"v\":[[-255.999,-126.548],[-255.999,-125.566],[-255.506,-123.797],[-256.099,-121.14],[-258.849,-117.702],[-255.407,-116.718],[-253.542,-114.163],[-251.872,-115.54],[-249.805,-115.54],[-248.526,-116.525],[-248.038,-118.391],[-246.168,-119.566],[-244.892,-120.849],[-241.349,-122.225],[-239.188,-122.914],[-239.386,-124.19],[-242.137,-125.761],[-243.709,-125.96],[-245.578,-125.172],[-247.741,-125.863],[-249.904,-126.649],[-252.556,-126.845]],\"c\":true},\"ix\":2},\"nm\":\"Path 47\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":47,\"ty\":\"sh\",\"ix\":48,\"ks\":{\"a\":0,\"k\":{\"i\":[[0,0],[0,-0.199],[-0.147,-0.123],[-0.12,-0.027],[-0.296,0],[-0.197,0],[-0.124,0.071],[-0.073,0.124],[0.147,0.028],[0.067,-0.006],[0.062,0.014],[0.344,0]],\"o\":[[0,0.193],[0,0.195],[0.1,0.071],[0.271,0.097],[0.196,0],[0.167,0],[0.122,-0.078],[-0.147,-0.049],[-0.062,-0.012],[-0.069,0.008],[-0.316,-0.072],[0,0]],\"v\":[[241.257,-126.153],[241.155,-125.664],[241.451,-125.27],[241.842,-125.172],[242.629,-124.978],[243.124,-125.075],[243.517,-125.27],[243.615,-125.664],[243.223,-125.863],[243.027,-125.863],[242.824,-125.863],[242.016,-126.153]],\"c\":true},\"ix\":2},\"nm\":\"Path 48\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":48,\"ty\":\"sh\",\"ix\":49,\"ks\":{\"a\":0,\"k\":{\"i\":[[0,0],[-0.049,-0.123],[-0.123,-0.296],[-0.027,-0.149],[0,-0.295],[0,0],[0.149,0.074],[0.148,0.075],[0.124,0.099],[0.172,0.292],[0,0],[0.1,0.146]],\"o\":[[0.053,0.122],[0.147,0.296],[0.049,0.143],[0.046,0.271],[0,0],[-0.096,-0.127],[-0.172,-0.074],[-0.127,-0.073],[-0.245,-0.197],[0,0],[-0.077,-0.171],[0,0]],\"v\":[[232.6,-126.057],[232.702,-125.664],[233.194,-124.876],[233.392,-124.485],[233.392,-123.746],[235.157,-123.746],[234.96,-124.19],[234.472,-124.289],[234.077,-124.485],[233.585,-125.27],[233.392,-125.664],[233.095,-126.057]],\"c\":true},\"ix\":2},\"nm\":\"Path 49\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":49,\"ty\":\"sh\",\"ix\":50,\"ks\":{\"a\":0,\"k\":{\"i\":[[0.394,0],[0,-0.591],[0,0],[0,0],[0,-0.39],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0.492,0],[0,0],[0,0]],\"o\":[[-0.393,0],[0,0.593],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],\"v\":[[-200.061,-125.469],[-200.158,-124.19],[-201.437,-123.207],[-201.437,-120.748],[-200.847,-118.195],[-198.979,-118.491],[-197.702,-119.373],[-197.503,-120.748],[-195.538,-120.358],[-194.36,-121.24],[-193.473,-122.816],[-192.194,-124.19],[-193.965,-124.978],[-195.735,-124.978],[-197.503,-125.566]],\"c\":true},\"ix\":2},\"nm\":\"Path 50\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":50,\"ty\":\"sh\",\"ix\":51,\"ks\":{\"a\":0,\"k\":{\"i\":[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0.395,0.196],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,-0.392],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0.391,0.492],[0,0],[0,0]],\"o\":[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[-0.393,-0.199],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0.397],[0.392,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[-0.392,-0.493],[0,0],[0,0]],\"v\":[[-208.514,-125.172],[-208.71,-124.089],[-209.402,-124.089],[-210.776,-124.585],[-212.254,-124.19],[-211.956,-123.11],[-210.677,-121.929],[-211.17,-120.552],[-212.153,-120.159],[-213.529,-121.24],[-214.709,-121.14],[-214.906,-120.064],[-213.432,-119.177],[-212.35,-118.491],[-210.677,-118.096],[-209.893,-116.525],[-207.629,-115.441],[-206.255,-116.619],[-203.994,-116.718],[-203.11,-118.29],[-203.895,-119.566],[-205.174,-120.748],[-206.548,-121.537],[-204.78,-122.32],[-204.877,-123.207],[-206.255,-124.485],[-206.942,-125.27]],\"c\":true},\"ix\":2},\"nm\":\"Path 51\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":51,\"ty\":\"sh\",\"ix\":52,\"ks\":{\"a\":0,\"k\":{\"i\":[[0.082,0],[0,0],[0.392,-0.196],[0.146,-0.095],[0.147,-0.079],[0.087,0.017],[0.082,-0.024],[0.439,-0.32],[0,0],[-0.291,-0.018],[-0.298,0],[0,0],[-0.197,0],[-0.166,-0.005],[-0.251,0.016],[-0.22,0],[0,0],[-0.174,-0.075],[-0.297,-0.074],[-0.197,0],[0,0],[0,0],[0.124,0.075],[0.124,0.076],[0.173,0.046],[0.072,-0.007],[0.057,0.01],[0.121,0.052],[0.147,0.121],[0.123,0.072],[0.045,0]],\"o\":[[0,0],[-0.471,0],[-0.174,0.075],[-0.126,0.073],[-0.079,0.036],[-0.079,-0.013],[-0.517,0.169],[0,0],[0.296,0.048],[0.296,0.028],[0,0],[0.196,0],[0.215,-0.008],[0.191,0.006],[0.221,0],[0,0],[0.172,0.048],[0.27,0.121],[0.174,0.05],[0,0],[0,0],[-0.1,-0.124],[-0.121,-0.073],[-0.147,-0.073],[-0.064,-0.016],[-0.064,0.005],[-0.122,-0.031],[-0.177,-0.097],[-0.1,-0.074],[-0.041,-0.025],[-0.09,0]],\"v\":[[245.383,-124.386],[244.993,-124.386],[243.813,-124.289],[243.418,-123.994],[243.223,-123.597],[242.972,-123.593],[242.728,-123.597],[241.551,-122.715],[241.155,-122.617],[241.941,-122.522],[242.728,-122.419],[243.124,-122.419],[243.615,-122.522],[244.165,-122.519],[244.793,-122.522],[245.383,-122.617],[245.579,-122.617],[245.973,-122.32],[246.761,-122.027],[247.277,-121.929],[247.936,-121.929],[248.037,-122.715],[247.84,-123.11],[247.447,-123.307],[247.055,-123.597],[246.845,-123.599],[246.66,-123.597],[246.271,-123.7],[245.876,-123.994],[245.777,-124.386],[245.647,-124.42]],\"c\":true},\"ix\":2},\"nm\":\"Path 52\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":52,\"ty\":\"sh\",\"ix\":53,\"ks\":{\"a\":0,\"k\":{\"i\":[[0,0],[-0.391,-0.099],[0,0],[0,0],[0,0],[0,0],[0,0]],\"o\":[[0,0],[0.395,0.095],[0,0],[0,0],[0,0],[0,0],[0,0]],\"v\":[[-222.867,-123.406],[-221.198,-122.32],[-219.723,-120.849],[-218.642,-121.636],[-218.249,-123.11],[-219.032,-123.797],[-222.082,-124.289]],\"c\":true},\"ix\":2},\"nm\":\"Path 53\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":53,\"ty\":\"sh\",\"ix\":54,\"ks\":{\"a\":0,\"k\":{\"iov\":[[-184.135,-124.19],[-186.885,-123.893],[-189.345,-121.929],[-190.818,-119.177],[-190.915,-115.736],[-188.656,-115.344],[-187.082,-115.246],[-186.395,-113.968],[-188.165,-114.262],[-190.032,-113.772],[-188.46,-112.196],[-186.298,-112.196],[-185.215,-112.591],[-183.739,-111.605],[-180.99,-110.721],[-182.66,-110.23],[-182.758,-108.853],[-181.58,-107.871],[-183.446,-105.217],[-184.333,-103.349],[-185.708,-101.876],[-186.985,-102.464],[-187.97,-104.727],[-186.985,-106.099],[-189.442,-108.265],[-191.408,-106.594],[-194.161,-109.642],[-195.142,-110.034],[-194.949,-111.605],[-195.341,-113.377],[-196.62,-113.576],[-196.717,-115.05],[-198.782,-116.718],[-201.242,-116.818],[-201.634,-115.833],[-202.715,-115.736],[-203.796,-114.163],[-203.207,-112.884],[-203.503,-111.902],[-201.534,-110.23],[-199.667,-109.148],[-200.257,-107.676],[-202.32,-108.069],[-201.73,-106.397],[-199.96,-106.494],[-197.996,-107.676],[-197.996,-105.903],[-201.437,-104.134],[-201.14,-101.579],[-203.305,-102.954],[-202.715,-104.727],[-204.091,-104.727],[-204.188,-106.397],[-202.909,-106.397],[-203.305,-108.853],[-206.452,-110.326],[-207.14,-108.561],[-208.807,-107.773],[-205.96,-105.903],[-207.336,-104.824],[-207.827,-103.448],[-213.134,-103.252],[-215.79,-104.334],[-217.758,-104.626],[-220.311,-106.099],[-222.082,-105.02],[-224.835,-103.839],[-224.147,-102.169],[-224.54,-99.613],[-226.21,-102.66],[-228.865,-103.839],[-231.816,-103.252],[-238.305,-103.839],[-238.402,-104.727],[-236.139,-105.512],[-239.386,-107.183],[-241.448,-107.083],[-247.249,-108.757],[-248.725,-110.034],[-251.376,-110.326],[-252.95,-110.23],[-253.641,-109.148],[-255.114,-108.853],[-256.589,-111.313],[-257.573,-109.148],[-259.344,-109.443],[-261.014,-112.296],[-262.979,-112.787],[-263.573,-110.92],[-264.846,-109.738],[-266.813,-109.443],[-269.37,-108.561],[-271.924,-107.28],[-269.863,-109.247],[-267.701,-109.835],[-266.125,-110.427],[-265.438,-111.41],[-266.319,-111.605],[-268.975,-110.721],[-271.924,-109.443],[-273.597,-109.346],[-275.171,-109.346],[-278.414,-107.577],[-281.461,-107.871],[-283.918,-109.738],[-288.345,-109.936],[-289.917,-110.92],[-292.176,-111.313],[-294.93,-110.721],[-296.698,-111.705],[-299.551,-111.705],[-302.597,-112.491],[-305.352,-112.491],[-307.516,-112.491],[-308.103,-113.87],[-312.43,-114.066],[-314.199,-113.87],[-313.71,-114.95],[-316.266,-115.05],[-318.523,-113.772],[-322.065,-113.772],[-324.72,-111.803],[-326.785,-111.803],[-328.551,-110.427],[-328.749,-108.658],[-330.913,-107.183],[-334.454,-107.083],[-335.139,-105.119],[-331.108,-103.349],[-329.732,-101.482],[-327.47,-100.598],[-325.997,-98.334],[-328.163,-98.042],[-330.224,-98.43],[-330.421,-100.104],[-332.878,-98.824],[-334.941,-98.629],[-337.4,-96.663],[-336.22,-95.972],[-334.941,-94.993],[-334.156,-92.831],[-327.768,-93.519],[-326.193,-94.5],[-324.521,-94.306],[-324.917,-92.437],[-324.917,-90.276],[-327.177,-90.175],[-329.436,-89.388],[-331.404,-89.584],[-331.992,-87.424],[-334.355,-85.259],[-333.86,-83.783],[-332.781,-83.589],[-332.387,-82.41],[-331.504,-80.542],[-328.845,-79.656],[-327.568,-81.132],[-326.094,-79.165],[-326.389,-76.411],[-325.016,-76.411],[-324.129,-76.903],[-322.065,-77.005],[-320.69,-76.216],[-319.9,-77.593],[-318.622,-76.509],[-317.049,-77.398],[-318.035,-74.939],[-319.706,-73.167],[-322.751,-70.811],[-323.833,-69.433],[-325.801,-69.333],[-327.768,-67.959],[-330.421,-67.366],[-332.682,-65.5],[-331.404,-64.911],[-329.143,-66.583],[-327.668,-66.68],[-325.212,-67.959],[-322.461,-69.137],[-316.854,-71.79],[-316.068,-73.463],[-310.266,-76.707],[-311.742,-78.871],[-308.792,-80.542],[-307.222,-83.194],[-304.667,-83.783],[-303.287,-83.001],[-306.336,-81.82],[-307.12,-80.245],[-306.728,-78.478],[-302.893,-80.346],[-300.141,-80.834],[-300.732,-82.115],[-301.124,-82.899],[-300.24,-83.194],[-297.784,-83.098],[-295.618,-81.621],[-293.358,-80.443],[-290.996,-79.853],[-289.03,-80.346],[-287.36,-79.656],[-285.789,-79.656],[-284.215,-78.379],[-281.758,-77.2],[-280.479,-75.823],[-278.609,-75.33],[-277.626,-75.721],[-276.152,-74.838],[-275.171,-73.463],[-272.907,-72.876],[-273.3,-71.597],[-271.141,-70.708],[-271.534,-69.532],[-270.155,-69.037],[-268.779,-68.841],[-268.68,-67.466],[-267.602,-65.992],[-267.305,-64.319],[-266.716,-62.746],[-264.945,-62.551],[-264.451,-60.683],[-262.586,-58.911],[-262.095,-57.635],[-260.227,-56.651],[-258.359,-55.964],[-256.784,-55.472],[-256.491,-54.488],[-254.524,-53.212],[-253.049,-52.128],[-252.265,-49.772],[-252.265,-47.901],[-253.347,-49.083],[-254.624,-50.657],[-254.919,-51.638],[-256.491,-52.618],[-257.573,-53.016],[-257.771,-54.587],[-259.047,-54.587],[-260.128,-55.375],[-261.112,-55.768],[-262.095,-56.062],[-263.273,-55.868],[-262.293,-54.587],[-261.014,-53.801],[-259.733,-52.72],[-257.081,-50.952],[-256.196,-49.083],[-255.214,-46.72],[-255.31,-44.855],[-255.506,-42.298],[-255.506,-39.447],[-256.394,-38.761],[-256.394,-36.895],[-255.31,-34.925],[-255.702,-33.057],[-255.407,-31.584],[-254.624,-30.305],[-254.723,-28.437],[-253.641,-26.863],[-252.166,-25.586],[-251.279,-22.933],[-250.004,-21.85],[-249.708,-20.474],[-248.526,-18.901],[-246.758,-18.901],[-245.48,-17.823],[-243.515,-16.936],[-242.137,-15.556],[-241.745,-13.886],[-241.055,-12.214],[-240.173,-9.462],[-238.991,-8.285],[-237.518,-6.908],[-237.125,-5.924],[-238.305,-5.039],[-237.518,-3.955],[-236.042,-2.879],[-234.172,-1.698],[-233.093,-0.42],[-233.29,0.665],[-232.897,1.549],[-231.422,2.138],[-230.047,3.318],[-229.062,4.299],[-228.965,5.478],[-228.177,5.088],[-227.981,3.81],[-228.572,2.333],[-229.852,1.744],[-230.047,0.466],[-231.522,-0.613],[-232.111,-2.284],[-232.7,-3.861],[-233.979,-5.039],[-234.371,-6.611],[-235.65,-7.103],[-236.435,-9.07],[-237.909,-10.74],[-238.107,-12.906],[-236.927,-13.001],[-235.255,-12.315],[-234.274,-11.13],[-234.172,-9.265],[-232.405,-6.807],[-230.535,-4.843],[-228.865,-3.465],[-227.686,-2.088],[-227.391,-0.52],[-225.623,0.466],[-224.345,1.939],[-223.36,3.514],[-221.296,5.674],[-220.509,7.546],[-219.429,8.429],[-220.509,9.119],[-220.803,10.296],[-218.544,12.065],[-216.675,13.538],[-214.411,14.23],[-212.055,15.608],[-209.303,16.783],[-206.255,18.259],[-203.796,18.948],[-202.226,18.848],[-201.73,18.06],[-199.96,17.867],[-197.996,18.848],[-195.834,20.517],[-194.656,21.899],[-192.884,21.899],[-192.194,21.899],[-191.212,22.29],[-190.131,23.764],[-187.97,24.453],[-187.87,23.469],[-186.687,24.06],[-185.511,25.732],[-183.347,27.991],[-183.543,29.759],[-182.858,30.547],[-181.969,30.154],[-180.791,30.744],[-179.121,32.318],[-177.35,32.809],[-174.403,34.281],[-172.829,34.973],[-172.926,33.399],[-172.14,32.415],[-169.388,32.611],[-169.09,33.596],[-168.208,33.5],[-167.716,32.221],[-168.7,31.038],[-171.551,31.038],[-173.417,30.939],[-176.17,30.744],[-177.451,29.858],[-179.218,27.991],[-179.121,26.517],[-179.121,24.553],[-178.532,22.094],[-178.532,20.421],[-179.415,19.145],[-181.185,18.259],[-183.839,18.456],[-185.708,18.06],[-187.773,18.848],[-189.148,17.964],[-187.87,16.981],[-187.87,15.211],[-187.379,14.131],[-186.687,12.36],[-186.687,10.392],[-185.511,9.61],[-185.313,8.135],[-186.197,7.546],[-189.148,7.741],[-191.016,8.037],[-191.804,9.411],[-192.588,11.475],[-193.473,13.341],[-195.048,13.538],[-197.307,14.131],[-199.667,14.426],[-200.748,13.049],[-202.715,12.065],[-203.404,10.493],[-204.78,8.429],[-205.566,4.889],[-205.861,2.333],[-204.877,0.37],[-204.386,-1.894],[-205.37,-4.256],[-203.599,-6.513],[-202.126,-6.611],[-200.651,-7.791],[-199.175,-9.17],[-197.111,-8.876],[-195.638,-8.381],[-194.457,-8.876],[-193.473,-7.595],[-191.705,-7.595],[-190.328,-7.696],[-190.624,-8.677],[-190.131,-10.25],[-187.97,-10.35],[-186.493,-10.544],[-183.739,-10.25],[-182.66,-8.876],[-181.775,-8.876],[-181.185,-9.658],[-180.401,-9.856],[-179.121,-8.677],[-177.939,-7.204],[-177.939,-5.531],[-177.255,-4.548],[-176.96,-3.465],[-176.072,-2.679],[-175.584,-1.5],[-174.5,-0.913],[-174.403,0.37],[-173.417,0.665],[-172.829,-0.224],[-172.336,-1.599],[-172.926,-3.268],[-173.516,-5.828],[-174.793,-8.086],[-174.793,-11.034],[-174.11,-13.1],[-173.027,-15.263],[-171.351,-15.953],[-169.388,-17.626],[-167.521,-18.901],[-165.75,-19.586],[-165.455,-20.867],[-164.081,-21.654],[-165.259,-23.817],[-166.144,-24.798],[-165.75,-25.979],[-166.538,-27.061],[-165.16,-27.747],[-163.982,-26.175],[-163.291,-27.747],[-162.508,-29.127],[-161.622,-30.009],[-160.736,-32.958],[-158.081,-32.958],[-156.409,-33.944],[-154.445,-34.141],[-154.936,-35.322],[-155.034,-37.778],[-153.66,-39.647],[-152.085,-39.647],[-151.592,-40.725],[-149.528,-40.629],[-147.662,-41.71],[-146.484,-43.185],[-144.219,-43.381],[-141.762,-42.891],[-142.352,-42.1],[-144.909,-42.1],[-146.286,-41.119],[-146.286,-39.447],[-145.203,-38.956],[-144.023,-39.941],[-143.139,-40.53],[-141.467,-41.022],[-139.697,-41.906],[-137.927,-42.298],[-136.553,-43.971],[-135.174,-45.15],[-134.979,-46.527],[-136.846,-46.034],[-138.125,-43.971],[-140.288,-43.874],[-142.059,-44.759],[-143.924,-46.234],[-144.909,-48.786],[-143.236,-50.067],[-143.337,-52.128],[-145.792,-52.327],[-148.448,-51.542],[-151.396,-49.871],[-154.248,-47.115],[-156.511,-45.542],[-155.624,-47.017],[-154.248,-48.593],[-153.362,-49.379],[-155.624,-49.967],[-152.772,-49.967],[-152.085,-51.344],[-150.512,-52.618],[-148.643,-52.72],[-147.858,-54.295],[-146.286,-54.883],[-143.826,-54.883],[-139.404,-54.979],[-137.141,-54.587],[-135.372,-54.69],[-133.603,-55.964],[-132.029,-57.734],[-129.177,-58.028],[-127.701,-58.614],[-126.917,-59.406],[-127.801,-60.192],[-127.214,-60.977],[-127.115,-62.648],[-129.177,-62.944],[-129.572,-63.926],[-131.833,-63.926],[-133.603,-62.944],[-134.781,-62.159],[-135.763,-62.551],[-135.372,-63.733],[-133.309,-64.418],[-130.85,-65.011],[-129.77,-65.992],[-131.342,-66.091],[-132.913,-66.876],[-134.979,-67.466],[-136.257,-68.646],[-137.732,-69.826],[-138.319,-70.908],[-137.436,-71.105],[-137.141,-71.889],[-138.52,-73.76],[-140.189,-75.823],[-142.547,-79.46],[-143.337,-81.132],[-145.103,-78.967],[-145.103,-77.101],[-146.974,-76.411],[-148.152,-75.134],[-149.921,-75.233],[-150.317,-76.411],[-151.493,-77.295],[-153.265,-76.903],[-152.772,-78.967],[-152.772,-81.718],[-152.871,-83.194],[-155.034,-83.294],[-156.707,-84.375],[-158.278,-85.947],[-161.03,-87.619],[-162.014,-86.833],[-164.374,-86.933],[-165.358,-87.523],[-168.009,-87.523],[-169.09,-86.44],[-168.11,-84.867],[-168.503,-82.806],[-168.208,-81.427],[-167.323,-79.557],[-168.7,-79.557],[-168.6,-77.79],[-169.485,-76.804],[-168.309,-76.017],[-166.538,-74.738],[-166.045,-72.482],[-166.045,-69.925],[-167.323,-68.155],[-169.09,-66.778],[-171.551,-66.484],[-170.175,-64.319],[-170.175,-61.565],[-169.485,-59.996],[-169.878,-58.717],[-170.959,-57.143],[-173.318,-56.85],[-174.699,-59.112],[-176.367,-61.076],[-176.367,-62.746],[-176.858,-65.108],[-176.563,-67.073],[-179.613,-67.466],[-181.872,-67.562],[-183.052,-68.254],[-185.906,-68.94],[-186.985,-70.119],[-189.442,-71.4],[-191.998,-72.775],[-195.341,-71.989],[-196.131,-73.266],[-197.503,-76.216],[-199.175,-77.005],[-200.257,-78.182],[-199.863,-81.82],[-198.192,-84.57],[-196.522,-87.027],[-194.36,-87.913],[-192.685,-89.191],[-193.376,-90.569],[-196.03,-91.158],[-199.08,-92.143],[-195.538,-91.648],[-192.685,-90.962],[-191.408,-91.255],[-191.113,-92.73],[-188.758,-91.944],[-187.379,-92.239],[-187.28,-93.421],[-186.395,-93.911],[-185.906,-95.482],[-187.577,-95.678],[-189.735,-95.877],[-190.525,-96.763],[-192.983,-97.746],[-191.312,-97.648],[-188.656,-96.957],[-186.885,-96.369],[-185.116,-96.957],[-183.936,-98.43],[-185.215,-99.613],[-183.446,-99.613],[-182.362,-98.533],[-183.248,-97.352],[-184.037,-95.191],[-184.037,-92.534],[-185.807,-91.944],[-185.313,-90.766],[-183.446,-90.667],[-183.446,-89.584],[-180.99,-89.783],[-180.3,-91.158],[-177.939,-91.059],[-176.664,-90.862],[-175.385,-90.276],[-173.516,-90.276],[-173.318,-91.751],[-175.187,-92.143],[-176.072,-94.01],[-178.331,-94.203],[-180.104,-95.678],[-181.775,-96.074],[-181.775,-97.152],[-180.202,-96.862],[-179.513,-97.648],[-179.71,-98.533],[-177.843,-98.533],[-177.154,-99.811],[-175.385,-101.088],[-174.793,-102.169],[-175.779,-103.349],[-176.664,-105.316],[-174.99,-105.609],[-174.5,-107.083],[-175.779,-108.561],[-177.547,-109.346],[-179.809,-110.525],[-177.255,-110.525],[-176.96,-111.313],[-175.09,-111.117],[-173.614,-110.23],[-171.551,-110.326],[-169.683,-110.721],[-171.256,-112.196],[-170.175,-112.491],[-168.503,-110.82],[-166.637,-110.623],[-165.848,-109.052],[-164.471,-108.757],[-163.686,-107.577],[-162.212,-106.987],[-161.423,-105.512],[-159.755,-104.923],[-158.377,-103.448],[-158.081,-101.676],[-160.049,-99.811],[-161.718,-97.945],[-160.836,-96.174],[-163.786,-95.779],[-165.358,-96.174],[-167.028,-96.174],[-169.09,-94.7],[-169.09,-93.126],[-166.637,-92.73],[-164.668,-92.831],[-164.176,-93.715],[-163.291,-94.203],[-162.014,-93.911],[-159.656,-93.225],[-157.393,-91.059],[-156.903,-89.881],[-155.525,-88.409],[-153.558,-88.409],[-151.493,-86.44],[-148.448,-86.34],[-146.484,-85.459],[-146.286,-86.636],[-149.528,-89.094],[-150.905,-90.175],[-151.592,-91.356],[-149.431,-90.276],[-145.792,-88.409],[-143.924,-87.325],[-143.924,-89.094],[-142.844,-90.667],[-144.615,-91.648],[-145.007,-94.108],[-147.463,-94.993],[-150.414,-98.141],[-149.431,-99.025],[-148.448,-99.811],[-144.516,-96.862],[-143.139,-94.993],[-141.467,-94.7],[-140.974,-96.862],[-138.913,-97.648],[-138.617,-98.533],[-137.238,-98.533],[-136.65,-99.515],[-136.749,-100.993],[-139.501,-100.993],[-139.501,-101.778],[-141.171,-103.057],[-142.352,-103.252],[-144.122,-104.035],[-145.497,-104.035],[-145.893,-105.119],[-146.383,-106.099],[-148.743,-106.099],[-149.727,-106.201],[-149.727,-107.871],[-148.055,-107.871],[-147.17,-108.658],[-149.431,-109.247],[-149.137,-109.936],[-148.055,-110.131],[-149.333,-111.313],[-151.101,-111.803],[-150.414,-112.884],[-152.283,-113.67],[-154.346,-113.576],[-154.641,-114.458],[-156.313,-114.554],[-156.999,-114.752],[-155.624,-115.639],[-157.491,-116.226],[-159.853,-115.639],[-161.423,-117.212],[-161.622,-118.096],[-163.095,-118.195],[-163.192,-119.274],[-165.554,-120.064],[-168.6,-120.064],[-168.995,-119.177],[-170.565,-118.978],[-172.04,-119.274],[-172.534,-118.195],[-174.009,-118.096],[-174.11,-119.472],[-173.221,-120.748],[-174.699,-122.522],[-175.385,-124.089],[-178.137,-124.089],[-179.415,-122.914],[-181.285,-122.816],[-182.564,-122.027],[-182.858,-120.455],[-181.676,-118.784],[-182.463,-117.702],[-180.888,-115.639],[-182.167,-115.441],[-183.936,-117.212],[-184.525,-119.566],[-184.724,-121.14],[-183.446,-122.816],[-181.58,-124.19]],\"c\":true},\"ix\":2},\"nm\":\"Path 54\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":54,\"ty\":\"sh\",\"ix\":55,\"ks\":{\"a\":0,\"k\":{\"i\":[[0,0],[0,0],[0,0],[0,0]],\"o\":[[0,0],[0,0],[0,0],[0,0]],\"v\":[[-225.131,-123.893],[-225.817,-123.207],[-224.44,-123.01],[-223.951,-123.994]],\"c\":true},\"ix\":2},\"nm\":\"Path 55\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":55,\"ty\":\"sh\",\"ix\":56,\"ks\":{\"a\":0,\"k\":{\"i\":[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],\"o\":[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],\"v\":[[-173.318,-123.893],[-172.926,-122.127],[-172.336,-120.748],[-168.404,-120.552],[-167.028,-121.537],[-164.668,-122.127],[-167.028,-123.7],[-170.764,-123.893]],\"c\":true},\"ix\":2},\"nm\":\"Path 56\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":56,\"ty\":\"sh\",\"ix\":57,\"ks\":{\"a\":0,\"k\":{\"i\":[[0.269,-0.167],[0.147,-0.118],[0.273,-0.269],[-0.218,0],[-0.194,0.028],[-0.123,0.028],[-0.146,0.027],[-0.125,-0.007],[-0.151,0.014],[0,0],[-0.171,0.073],[0.051,0.103],[0.126,0.098],[0.149,0.05],[0.122,0.024],[0.152,0]],\"o\":[[-0.174,0.098],[-0.298,0.249],[0.174,0.1],[0.222,0],[0.121,0],[0.149,-0.019],[0.131,-0.012],[0.128,0.006],[0,0],[0.171,-0.025],[-0.024,-0.122],[-0.095,-0.145],[-0.12,-0.096],[-0.121,-0.047],[-0.123,-0.024],[-0.34,0]],\"v\":[[110.111,-122.914],[109.715,-122.522],[108.927,-121.832],[109.418,-121.537],[110.009,-121.636],[110.404,-121.636],[110.796,-121.832],[111.171,-121.831],[111.582,-121.832],[111.977,-121.832],[112.368,-122.127],[112.368,-122.522],[112.072,-122.914],[111.68,-123.11],[111.287,-123.207],[110.892,-123.307]],\"c\":true},\"ix\":2},\"nm\":\"Path 57\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":57,\"ty\":\"sh\",\"ix\":58,\"ks\":{\"a\":0,\"k\":{\"i\":[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[-0.389,-0.096],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],\"o\":[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0.393,0.1],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],\"v\":[[-239.188,-122.522],[-240.369,-121.537],[-241.549,-121.045],[-243.122,-120.652],[-244.497,-119.766],[-244.203,-118.391],[-245.875,-117.408],[-245.774,-116.619],[-244.596,-116.619],[-243.808,-115.833],[-242.335,-116.325],[-240.467,-116.525],[-239.287,-115.639],[-241.155,-115.144],[-242.826,-114.752],[-243.612,-113.968],[-241.448,-113.081],[-239.287,-113.081],[-236.927,-113.277],[-234.862,-113.277],[-233.193,-112.591],[-233.389,-111.605],[-236.828,-111.705],[-239.975,-111.705],[-242.234,-110.721],[-240.86,-108.757],[-238.402,-108.658],[-236.338,-108.658],[-235.255,-106.79],[-233.882,-106.002],[-231.227,-106.002],[-228.768,-106.099],[-227.096,-106.987],[-225.328,-107.479],[-223.556,-108.462],[-222.575,-109.052],[-221.787,-108.361],[-220.706,-108.561],[-217.952,-107.183],[-216.083,-107.083],[-214.411,-107.28],[-213.728,-108.561],[-215.102,-109.642],[-214.019,-109.738],[-212.35,-110.034],[-211.956,-110.92],[-213.529,-111.902],[-216.774,-112.984],[-218.445,-114.655],[-218.15,-116.325],[-219.626,-117.408],[-219.92,-119.669],[-221.099,-121.14],[-223.26,-122.027],[-225.131,-122.027],[-225.131,-120.358],[-224.736,-119.177],[-223.85,-117.604],[-224.44,-116.917],[-225.228,-117.015],[-226.017,-117.702],[-226.21,-118.881],[-226.703,-119.867],[-228.177,-121.437],[-229.65,-121.537],[-229.257,-120.455],[-228.669,-119.566],[-230.339,-119.566],[-230.438,-118.784],[-231.816,-118.585],[-231.522,-119.472],[-231.126,-120.552],[-232.305,-120.652],[-233.78,-121.14],[-235.255,-121.045],[-235.452,-119.963],[-236.631,-120.159],[-236.338,-120.849],[-236.631,-122.225],[-237.419,-122.522]],\"c\":true},\"ix\":2},\"nm\":\"Path 58\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":58,\"ty\":\"sh\",\"ix\":59,\"ks\":{\"a\":0,\"k\":{\"i\":[[0.049,-0.018],[0.149,-0.098],[0.122,-0.051],[0.12,0],[0.194,0],[0.292,-0.025],[0.148,-0.07],[0,-0.49],[-0.195,-0.048],[-0.121,0],[-0.394,0],[-0.541,0.076],[-0.294,0.097],[-0.147,0.027],[-0.343,0],[0,0],[-0.146,0],[0,0],[-0.146,0],[0,0],[0.12,0.073],[0.171,0.078],[0.273,-0.014],[0.145,0.007],[0.123,0],[0.08,-0.006],[0.094,0.011],[0.148,0.048],[0.194,0.023],[0.175,0],[0.094,0]],\"o\":[[-0.169,0.07],[-0.097,0.074],[-0.124,0.052],[-0.171,0.023],[-0.294,0],[-0.172,0],[-0.442,0.224],[0.099,0.173],[0.122,0.027],[0.369,0.051],[0.564,0],[0.295,-0.023],[0.148,-0.05],[0.32,-0.074],[0,0],[0.15,0],[0,0],[0.148,0],[0,0],[-0.074,-0.122],[-0.15,-0.097],[-0.273,-0.133],[-0.123,0.007],[-0.147,0],[-0.09,-0.013],[-0.074,0.006],[-0.172,-0.027],[-0.196,-0.077],[-0.149,-0.026],[-0.113,0],[-0.046,0]],\"v\":[[317.051,-116.421],[316.658,-116.128],[316.561,-115.736],[316.168,-115.736],[315.676,-115.736],[314.892,-115.736],[314.496,-115.54],[314.103,-114.36],[314.397,-113.87],[314.792,-113.87],[315.822,-113.87],[317.249,-113.87],[318.037,-114.163],[318.428,-114.36],[319.288,-114.36],[320.098,-114.36],[320.493,-114.262],[320.986,-114.262],[321.378,-114.333],[321.378,-114.95],[321.184,-115.344],[320.79,-115.639],[320.009,-115.742],[319.61,-115.736],[319.215,-115.833],[318.969,-115.834],[318.723,-115.833],[318.329,-116.029],[317.939,-116.421],[317.493,-116.421],[317.193,-116.444]],\"c\":true},\"ix\":2},\"nm\":\"Path 59\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":59,\"ty\":\"sh\",\"ix\":60,\"ks\":{\"a\":0,\"k\":{\"i\":[[0,0],[0,-0.195],[-0.028,-0.147],[0,0],[0,0],[-0.121,0.097],[-0.198,0.096],[-0.038,-0.006],[-0.022,0.012],[-0.225,0.097],[-0.075,0.099],[-0.096,0.143],[-0.021,0.127],[0.118,0.049],[0.101,0.072],[0.071,0.124],[0.025,0.149]],\"o\":[[0,0.197],[0,0.174],[0,0],[0,0],[0.174,0],[0.177,-0.149],[0.025,-0.013],[0.036,0.005],[0.196,-0.1],[0.12,-0.052],[0.1,-0.148],[0.078,-0.098],[-0.118,-0.02],[-0.124,-0.048],[-0.124,-0.101],[-0.074,-0.121],[0,0]],\"v\":[[68.818,-109.148],[68.72,-108.658],[68.918,-108.265],[68.918,-106.397],[70.07,-106.397],[70.487,-106.494],[70.784,-107.083],[70.885,-107.083],[70.98,-107.083],[71.572,-107.28],[71.962,-107.379],[72.257,-107.773],[72.257,-108.168],[71.868,-108.265],[71.471,-108.361],[71.276,-108.757],[71.276,-109.148]],\"c\":true},\"ix\":2},\"nm\":\"Path 60\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":60,\"ty\":\"sh\",\"ix\":61,\"ks\":{\"a\":0,\"k\":{\"i\":[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],\"o\":[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],\"v\":[[-223.85,-106.594],[-226.406,-105.316],[-224.44,-104.923],[-222.867,-105.709],[-221.296,-106.002],[-221.198,-107.28]],\"c\":true},\"ix\":2},\"nm\":\"Path 61\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":61,\"ty\":\"sh\",\"ix\":62,\"ks\":{\"a\":0,\"k\":{\"i\":[[0.394,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],\"o\":[[-0.393,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],\"v\":[[-166.538,-104.824],[-168.11,-103.148],[-167.224,-101.876],[-165.554,-101.676],[-163.786,-102.071],[-162.898,-103.448],[-163.686,-104.923]],\"c\":true},\"ix\":2},\"nm\":\"Path 62\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":62,\"ty\":\"sh\",\"ix\":63,\"ks\":{\"a\":0,\"k\":{\"i\":[[0,0],[0,0],[0.49,0],[0.393,-0.049],[0.248,-0.049],[0.193,-0.196],[0,-0.394],[0,-0.392],[-0.128,-0.013],[-0.125,0.026],[-0.345,0],[-0.244,-0.048],[-0.199,-0.151],[-0.198,-0.241],[-0.099,-0.345],[0.293,0],[0.938,-0.052],[0.291,-0.051],[0,0],[-0.298,0],[0,0],[-0.048,0],[0,0],[0,0],[0,0],[-0.296,0],[-0.591,0],[0,0],[-0.243,-0.101],[-0.297,-0.196],[-0.297,-0.101],[-0.447,0],[-0.389,0.048],[-0.292,0.196],[-0.347,0.244],[-0.343,0.147],[-0.135,-0.025],[-0.121,0.048],[-0.341,0.149],[-0.587,0.096],[-1.13,0],[0,0],[0.295,0.146],[0,0],[0.145,-0.022],[0.129,0.022],[0,0.241],[0,0.346],[0,0.39],[0,0],[0.298,-0.097],[0.345,-0.145],[0.393,0],[0.2,0],[0.297,0],[0.589,0],[0.54,-0.102],[0.785,0],[0,0],[0,0],[0,0],[0.147,0.343]],\"o\":[[0,0],[-0.441,-0.145],[-0.441,0],[-0.244,0],[-0.296,0.098],[-0.247,0.248],[0,0.389],[0.143,-0.023],[0.132,0.011],[0.295,-0.047],[0.293,0],[0.248,0.048],[0.242,0.193],[0.196,0.249],[-0.295,-0.051],[-0.936,-0.052],[-0.296,0],[0,0],[0.291,-0.048],[0,0],[0.101,0],[0,0],[0,0],[0,0],[0.293,0],[0.586,-0.053],[0,0],[0.248,0],[0.344,0.145],[0.246,0.149],[0.392,0.145],[0.442,0],[0.349,-0.051],[0.344,-0.247],[0.294,-0.201],[0.122,-0.049],[0.135,0.024],[0.396,-0.149],[0.544,-0.294],[1.083,-0.147],[0,0],[-0.199,-0.243],[0,0],[-0.137,-0.055],[-0.116,0.017],[0.049,-0.294],[0.049,-0.297],[0,-0.394],[0,0],[-0.345,0],[-0.341,0.148],[-0.339,0.151],[-0.194,0],[-0.296,0],[-0.587,-0.052],[-0.587,0],[-0.738,0.146],[0,0],[0,0],[0,0],[-0.053,-0.345],[0,0]],\"v\":[[-63.41,-98.923],[-63.41,-98.141],[-64.589,-98.533],[-65.771,-98.334],[-66.556,-98.334],[-67.34,-97.945],[-67.928,-97.152],[-67.734,-96.174],[-67.331,-96.172],[-66.948,-96.174],[-66.161,-96.566],[-65.378,-96.566],[-64.783,-95.972],[-64,-95.585],[-64,-94.597],[-64.783,-94.795],[-67.147,-94.795],[-67.928,-94.597],[-67.734,-93.421],[-66.948,-93.615],[-65.378,-93.615],[-65.18,-93.421],[-65.18,-91.849],[-64.783,-91.059],[-64,-91.059],[-63.212,-91.255],[-61.638,-91.255],[-60.855,-91.255],[-60.068,-91.255],[-59.477,-90.471],[-58.689,-90.074],[-57.509,-90.074],[-56.335,-90.074],[-55.546,-90.667],[-54.956,-91.648],[-54.169,-92.239],[-53.775,-92.239],[-53.384,-92.239],[-52.598,-93.027],[-51.025,-93.615],[-48.073,-93.615],[-48.073,-95.191],[-48.469,-95.972],[-49.253,-96.369],[-49.671,-96.381],[-50.038,-96.369],[-50.038,-97.152],[-49.648,-97.892],[-49.84,-98.923],[-51.758,-98.923],[-52.598,-98.727],[-53.384,-98.141],[-54.365,-97.697],[-54.758,-97.352],[-55.546,-97.546],[-57.118,-97.746],[-58.689,-97.546],[-60.509,-96.763],[-62.031,-96.763],[-62.031,-97.546],[-62.031,-98.334],[-62.626,-99.12]],\"c\":true},\"ix\":2},\"nm\":\"Path 63\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":63,\"ty\":\"sh\",\"ix\":64,\"ks\":{\"a\":0,\"k\":{\"i\":[[0.026,-0.008],[-0.03,0.001],[0.012,0]],\"o\":[[0.031,-0.001],[-0.003,-0.01],[-0.017,0]],\"v\":[[52.898,-96.376],[52.991,-96.378],[52.967,-96.392]],\"c\":true},\"ix\":2},\"nm\":\"Path 64\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":64,\"ty\":\"sh\",\"ix\":65,\"ks\":{\"a\":0,\"k\":{\"i\":[[0.036,-0.004],[-0.043,0.014],[-0.002,0.001]],\"o\":[[0.013,0.024],[0.002,-0.001],[-0.034,0.002]],\"v\":[[52.793,-96.369],[52.893,-96.374],[52.898,-96.376]],\"c\":true},\"ix\":2},\"nm\":\"Path 65\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":65,\"ty\":\"sh\",\"ix\":66,\"ks\":{\"a\":0,\"k\":{\"i\":[[0.566,-0.123],[-0.171,-0.023],[-0.145,0.011],[-0.12,-0.009],[-0.119,-0.047],[-0.168,-0.076],[-0.345,0],[0,0],[-0.246,0],[-0.345,-0.149],[-0.273,0],[-0.218,0.028],[0,0],[0.121,0.025],[0.147,0.048],[0.125,0.025],[0.319,0.051],[0.271,0.047],[0.15,0.025],[0.151,0.025],[0.225,0]],\"o\":[[0.148,0.098],[0.154,0.028],[0.113,-0.008],[0.122,0],[0.173,0.05],[0.298,0.12],[0,0],[0.245,0],[0.394,0],[0.248,0.097],[0.221,0],[0,0],[-0.121,-0.023],[-0.147,-0.048],[-0.126,-0.027],[-0.318,-0.074],[-0.269,-0.051],[-0.145,-0.024],[-0.124,0],[-0.219,-0.024],[-0.588,0]],\"v\":[[331.699,-90.471],[331.798,-89.783],[332.241,-89.776],[332.587,-89.783],[332.978,-89.783],[333.271,-89.388],[334.158,-89.29],[334.65,-89.29],[335.238,-89.488],[336.222,-89.191],[336.837,-88.898],[337.4,-88.998],[337.4,-89.783],[337.009,-89.881],[336.616,-90.074],[336.222,-90.175],[335.337,-90.373],[334.551,-90.471],[334.158,-90.667],[333.762,-90.667],[333.175,-90.766]],\"c\":true},\"ix\":2},\"nm\":\"Path 66\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":66,\"ty\":\"sh\",\"ix\":67,\"ks\":{\"a\":0,\"k\":{\"i\":[[0.346,-0.148],[0.245,-0.097],[0.639,-0.348],[-0.44,0],[-0.639,0.445],[-0.196,0.246],[0,0]],\"o\":[[-0.246,0.096],[-0.689,0.296],[0.345,0.192],[0.839,0],[0.297,-0.196],[0,0],[-0.295,0.149]],\"v\":[[-177.057,-87.913],[-177.843,-87.72],[-179.613,-86.731],[-178.631,-86.144],[-176.664,-86.933],[-176.072,-87.72],[-176.268,-88.503]],\"c\":true},\"ix\":2},\"nm\":\"Path 67\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":67,\"ty\":\"sh\",\"ix\":68,\"ks\":{\"a\":0,\"k\":{\"i\":[[0,0],[0,0],[0,0],[0,0],[0,0],[0.046,0.542],[0,0]],\"o\":[[0,0],[0,0],[0,0],[0,0],[-0.048,-0.541],[0,0],[0,0]],\"v\":[[-173.516,-86.539],[-172.926,-84.57],[-170.959,-84.57],[-170.175,-84.965],[-170.175,-85.751],[-170.367,-87.129],[-171.944,-87.325]],\"c\":true},\"ix\":2},\"nm\":\"Path 68\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":68,\"ty\":\"sh\",\"ix\":69,\"ks\":{\"a\":0,\"k\":{\"i\":[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],\"o\":[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],\"v\":[[-335.828,-81.328],[-336.516,-80.834],[-336.22,-79.656],[-334.549,-79.557],[-333.763,-79.954],[-334.355,-81.328]],\"c\":true},\"ix\":2},\"nm\":\"Path 69\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":69,\"ty\":\"sh\",\"ix\":70,\"ks\":{\"a\":0,\"k\":{\"i\":[[0,0],[0.223,-0.025],[0.244,-0.127],[0,-0.343],[0,0],[-0.149,0],[-0.346,0],[-0.148,0.049],[-0.148,0.1],[-0.076,0.098],[-0.025,0.291],[0.168,0]],\"o\":[[-0.222,0],[-0.293,0.024],[-0.297,0.146],[0,0],[0.149,0],[0.343,0],[0.171,0],[0.171,-0.077],[0.099,-0.051],[0.173,-0.221],[-0.148,-0.051],[0,0]],\"v\":[[287.068,-77.69],[286.475,-77.593],[285.693,-77.491],[285.102,-76.831],[285.102,-76.067],[285.496,-76.017],[286.355,-76.067],[286.772,-76.313],[287.168,-76.609],[287.561,-76.707],[287.657,-77.491],[287.267,-77.69]],\"c\":true},\"ix\":2},\"nm\":\"Path 70\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":70,\"ty\":\"sh\",\"ix\":71,\"ks\":{\"a\":0,\"k\":{\"i\":[[0.164,0],[0,0],[0.146,0],[0.617,0.072],[0.027,-0.291],[0.052,-0.122],[0,-0.222],[0,-0.072],[0,-0.295],[0,-0.148],[0.347,0],[0.149,0.072],[0.244,0],[0.099,-0.197],[0,-0.146],[-0.171,-0.219],[-0.151,-0.079],[-0.267,-0.048],[0.029,-0.147],[0,0],[0,-0.15],[0,-0.175],[0.095,-0.123],[0.125,-0.049],[0.123,-0.05],[0,-0.222],[-0.022,-0.224],[0,0],[-0.169,0],[-0.098,-0.049],[-0.075,-0.121],[-0.099,-0.145],[0,0],[-0.027,0.145],[-0.046,0.146],[0,0],[0,-0.149],[0,-0.367],[0.049,-0.098],[0.122,-0.072],[0.147,-0.049],[-0.027,-0.122],[-0.071,-0.17],[0,0],[0,0],[-0.074,-0.124],[-0.073,-0.148],[0,-0.196],[0,-0.247],[-0.172,-0.175],[-0.295,-0.147],[0,0],[0,-0.32],[0.099,-0.125],[0.218,0],[0.197,0.02],[0.172,0.05],[0.22,0],[0,0],[0.099,-0.047],[0.12,-0.125],[0.098,-0.05],[0.079,0.01],[0.054,-0.011],[0.147,0],[0,0],[-0.196,0],[-0.393,0],[-0.223,-0.026],[0.046,-0.126],[0.073,-0.096],[0.085,0.021],[0.044,-0.022],[0.147,-0.097],[0.12,-0.074],[0.187,0.004],[0.088,-0.007],[0,0],[-0.027,-0.122],[-0.046,-0.146],[-0.061,-0.006],[-0.073,0.011],[-0.146,0.05],[-0.25,0],[-0.392,-0.098],[-0.148,0],[-0.112,0.009],[-0.154,-0.027],[-0.124,-0.025],[-0.101,-0.098],[0.174,-0.079],[0.123,-0.025],[0.346,-0.027],[0.124,-0.027],[0.145,-0.075],[0.146,-0.073],[0.075,0.01],[0.056,-0.01],[0.268,-0.047],[0.073,-0.269],[0.047,-0.1],[0.125,-0.072],[0.172,-0.072],[0.122,-0.049],[-0.196,0],[-0.147,0],[-0.127,0.022],[-0.125,0.051],[0,0],[-0.171,0],[-0.148,0],[-0.169,0],[0,0],[-0.076,0.418],[-0.296,0],[-0.151,0],[-0.174,0],[-0.296,0.024],[-0.126,0.048],[-0.146,0.103],[-0.198,0],[-0.196,-0.052],[-0.44,0],[0,0],[-0.149,0],[-0.12,-0.006],[-0.15,0.013],[-0.124,0.051],[-0.15,0.1],[-0.143,0.078],[-0.074,-0.011],[-0.057,0.013],[-0.144,0],[-0.148,0.048],[0,0],[0.075,0.154],[0,0.243],[0,0],[-0.098,0.073],[-0.124,0.048],[-0.067,-0.014],[-0.051,0.038],[-0.052,0.121],[-0.021,0.124],[0,0],[0,0],[0.124,0.147],[0.073,0.199],[0.073,0.096],[0.128,0.099],[0.147,0.097],[0,0],[0.052,-0.097],[0.097,-0.149],[0.1,-0.121],[0.075,0.096],[0.072,0.172],[0,0.146],[0.022,0.296],[0.025,0.221],[0,0],[0.077,0.391],[0.052,0.121],[0.294,0.197],[0.067,-0.018],[0.062,0.04],[0.118,0.098],[0.046,0.098],[0.046,0.125],[0.094,0.148],[0.073,0.172],[0.051,0.118],[0.07,0.172],[0.075,0.123],[0.201,0.097],[0.173,0],[0.121,-0.006],[0.149,0.013],[0.246,0.096],[0.147,0.122],[-0.079,0.124],[-0.124,0.145],[-0.118,0.072],[-0.08,-0.015],[-0.051,0.01],[-0.149,0.024],[0,0],[-0.05,0.125],[-0.102,0.147],[-0.123,0.097],[0,0.172],[0,0],[0,0],[-0.072,0.121],[-0.071,0.169],[-0.02,0.124],[-0.049,0.123],[-0.099,0.122],[-0.125,0.1],[-0.126,0.074],[0.195,0.072],[0.064,0]],\"o\":[[0,0],[-0.149,0],[-0.612,0.053],[0,0.297],[0,0.147],[-0.095,0.199],[0,0.075],[-0.024,0.293],[0,0.147],[-0.341,0.021],[-0.168,0],[-0.197,-0.099],[-0.248,0],[-0.048,0.12],[0,0.298],[0.099,0.12],[0.243,0.123],[-0.047,0.149],[0,0],[0,0.148],[0,0.171],[0,0.169],[-0.074,0.097],[-0.125,0.048],[-0.198,0.078],[0,0.22],[0,0],[0.146,-0.026],[0.149,0],[0.099,0.047],[0.099,0.15],[0,0],[0.02,-0.145],[0.02,-0.171],[0,0],[0,0.147],[0.022,0.368],[0,0.147],[-0.053,0.098],[-0.124,0.074],[0.02,0.124],[0.047,0.176],[0,0],[0,0],[0.123,0.099],[0.073,0.125],[0.073,0.173],[0,0.247],[0,0.244],[0.218,0.221],[0,0],[0.124,0.292],[0,0.196],[-0.122,0.147],[-0.224,0],[-0.169,-0.028],[-0.193,-0.047],[0,0],[-0.124,0],[-0.149,0.1],[-0.098,0.099],[-0.054,0.027],[-0.064,-0.009],[-0.124,0.023],[0,0],[0.178,0.048],[0.397,0],[0.222,0],[0,0.145],[-0.049,0.12],[-0.042,0.054],[-0.069,-0.017],[-0.145,0.097],[-0.125,0.077],[-0.172,0.102],[-0.082,-0.001],[0,0],[0.029,0.121],[0.047,0.148],[0.076,-0.012],[0.061,0.006],[0.171,-0.025],[0.223,-0.072],[0.415,0],[0.123,0.023],[0.13,0.011],[0.142,-0.01],[0.119,0],[0.147,0.023],[-0.147,0.12],[-0.121,0.044],[-0.32,0.099],[-0.147,0],[-0.147,0.048],[-0.151,0.072],[-0.069,0.026],[-0.06,-0.008],[-0.269,0.073],[0,0.299],[-0.027,0.124],[-0.077,0.124],[-0.147,0.099],[-0.124,0.052],[0.174,0.051],[0.147,0],[0.148,0],[0.119,-0.028],[0,0],[0.147,-0.073],[0.152,0],[0.168,0],[0,0],[0,-0.419],[0.294,0.026],[0.151,0],[0.171,0],[0.294,0],[0.147,0],[0.168,-0.075],[0.147,-0.1],[0.222,0],[0.416,0.148],[0,0],[0.147,0],[0.146,-0.011],[0.124,0.007],[0.147,0],[0.169,-0.075],[0.121,-0.073],[0.066,-0.026],[0.061,0.009],[0.125,-0.02],[0.174,0],[0,0],[-0.098,-0.144],[-0.097,-0.192],[0,0],[0,-0.148],[0.101,-0.076],[0.057,-0.024],[0.075,0.016],[0.103,-0.078],[0.045,-0.126],[0,0],[0,0],[-0.148,-0.101],[-0.117,-0.149],[-0.053,-0.119],[-0.074,-0.124],[-0.123,-0.097],[0,0],[-0.021,0.148],[-0.098,0.146],[-0.098,0.146],[-0.12,-0.048],[-0.099,-0.148],[-0.05,-0.122],[-0.029,-0.295],[0,-0.224],[0,0],[0.047,-0.419],[0,-0.121],[-0.122,-0.32],[-0.062,-0.033],[-0.068,0.019],[-0.146,-0.069],[-0.102,-0.071],[-0.049,-0.098],[-0.074,-0.17],[-0.124,-0.169],[-0.049,-0.122],[-0.074,-0.172],[-0.078,-0.149],[-0.099,-0.169],[-0.145,-0.072],[-0.146,-0.01],[-0.124,0.006],[-0.296,-0.023],[-0.174,-0.077],[0.073,-0.127],[0.095,-0.152],[0.075,-0.097],[0.073,-0.042],[0.056,0.011],[0.121,-0.024],[0,0],[0,-0.122],[0.073,-0.17],[0.095,-0.124],[0.123,-0.1],[0,0],[0,0],[0.071,-0.121],[0.097,-0.147],[0.049,-0.124],[0.026,-0.125],[0.075,-0.172],[0.099,-0.122],[0.119,-0.094],[-0.15,-0.148],[-0.075,-0.024],[-0.127,0]],\"v\":[[-29.025,-76.216],[-29.589,-76.216],[-29.984,-76.12],[-31.559,-76.192],[-31.559,-75.43],[-31.656,-75.037],[-32.001,-74.545],[-32.049,-74.349],[-31.951,-73.56],[-32.001,-73.167],[-32.91,-73.069],[-33.328,-73.167],[-33.818,-73.56],[-34.409,-73.266],[-34.409,-72.876],[-34.31,-72.088],[-33.915,-71.889],[-33.132,-71.694],[-33.328,-71.301],[-33.328,-70.908],[-33.423,-70.513],[-33.229,-70.119],[-33.423,-69.727],[-33.818,-69.63],[-34.211,-69.532],[-34.603,-69.137],[-34.508,-68.545],[-33.72,-68.545],[-33.328,-68.745],[-32.934,-68.646],[-32.934,-68.254],[-32.538,-67.959],[-31.751,-67.959],[-31.751,-68.352],[-31.559,-68.745],[-31.163,-68.449],[-31.259,-68.058],[-30.867,-67.173],[-30.965,-66.778],[-31.359,-66.68],[-31.751,-66.484],[-31.751,-66.091],[-31.46,-65.698],[-29.493,-65.698],[-29.294,-66.091],[-28.902,-65.895],[-28.706,-65.5],[-28.409,-65.108],[-28.607,-64.515],[-28.409,-63.926],[-27.625,-63.535],[-27.823,-62.746],[-27.529,-61.959],[-27.823,-61.565],[-28.409,-61.565],[-29.003,-61.565],[-29.396,-61.863],[-29.984,-61.863],[-30.18,-61.863],[-30.573,-61.863],[-30.867,-61.468],[-30.965,-61.076],[-31.176,-61.07],[-31.359,-61.076],[-31.751,-61.076],[-31.855,-60.683],[-31.46,-60.386],[-30.452,-60.587],[-29.884,-60.485],[-29.884,-60.091],[-29.984,-59.7],[-30.197,-59.688],[-30.379,-59.7],[-30.77,-59.406],[-30.965,-59.011],[-31.497,-58.915],[-31.751,-58.911],[-31.855,-58.518],[-31.751,-58.129],[-31.559,-57.734],[-31.359,-57.734],[-31.163,-57.734],[-30.77,-57.93],[-30.18,-58.129],[-29.197,-57.734],[-28.805,-57.734],[-28.448,-57.741],[-28.016,-57.734],[-27.625,-57.734],[-27.428,-57.34],[-27.724,-56.943],[-28.116,-56.85],[-29.003,-56.751],[-29.396,-56.751],[-29.783,-56.554],[-29.984,-56.161],[-30.203,-56.155],[-30.379,-56.161],[-31.163,-55.964],[-31.163,-55.179],[-31.259,-54.783],[-31.656,-54.587],[-32.049,-54.295],[-32.443,-54.194],[-32.049,-53.898],[-31.656,-53.998],[-31.259,-54.094],[-30.867,-54.194],[-30.474,-54.393],[-30.281,-54.783],[-29.884,-54.69],[-29.469,-54.488],[-28.31,-54.488],[-28.214,-55.547],[-27.428,-55.472],[-27.059,-55.572],[-26.641,-55.472],[-25.855,-55.472],[-25.46,-55.472],[-25.069,-55.768],[-24.773,-56.161],[-24.182,-56.062],[-23.202,-55.472],[-23.003,-55.472],[-22.611,-55.572],[-22.223,-55.572],[-21.824,-55.572],[-21.43,-55.572],[-21.038,-55.868],[-20.841,-56.262],[-20.628,-56.266],[-20.448,-56.262],[-20.057,-56.262],[-19.66,-56.457],[-19.562,-56.85],[-19.859,-57.246],[-20.155,-57.832],[-20.155,-58.028],[-20.057,-58.421],[-19.66,-58.518],[-19.467,-58.513],[-19.27,-58.518],[-19.167,-58.911],[-19.073,-59.307],[-18.285,-59.307],[-18.285,-60.091],[-18.68,-60.386],[-18.973,-60.882],[-18.973,-61.272],[-19.366,-61.468],[-19.76,-61.763],[-20.155,-61.666],[-20.057,-61.272],[-20.448,-60.977],[-20.743,-60.587],[-21.137,-60.683],[-21.43,-61.076],[-21.43,-61.468],[-21.43,-62.255],[-21.529,-62.845],[-22.708,-62.845],[-22.611,-63.926],[-22.611,-64.319],[-23.297,-65.011],[-23.492,-65.009],[-23.693,-65.011],[-23.884,-65.402],[-24.281,-65.5],[-24.281,-65.895],[-24.576,-66.288],[-25.069,-66.583],[-25.069,-66.974],[-25.361,-67.366],[-25.56,-67.763],[-25.956,-68.155],[-26.348,-68.352],[-26.736,-68.351],[-27.132,-68.352],[-27.921,-68.545],[-28.214,-68.94],[-28.016,-69.333],[-27.625,-69.63],[-27.529,-70.022],[-27.294,-70.034],[-27.132,-70.022],[-26.738,-70.119],[-26.738,-70.513],[-26.738,-70.908],[-26.443,-71.301],[-26.051,-71.497],[-25.855,-71.866],[-25.855,-73.463],[-29.688,-73.463],[-29.493,-73.855],[-29.1,-74.152],[-29.1,-74.545],[-29.1,-74.939],[-28.706,-75.233],[-28.409,-75.627],[-28.016,-75.823],[-28.409,-76.216],[-28.615,-76.249]],\"c\":true},\"ix\":2},\"nm\":\"Path 71\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":71,\"ty\":\"sh\",\"ix\":72,\"ks\":{\"a\":0,\"k\":{\"i\":[[0.121,-0.024],[0.319,-0.197],[0.124,-0.073],[0.096,-0.124],[0.124,-0.365],[0.025,-0.122],[0,0],[-0.126,0.099],[-0.122,0.103],[-0.169,0.046],[-0.062,-0.008],[-0.066,0.025],[-0.098,0.075],[-0.052,0.123],[-0.048,0.171],[-0.049,0.272]],\"o\":[[-0.369,0.126],[-0.126,0.074],[-0.123,0.074],[-0.248,0.268],[-0.025,0.126],[0,0],[0.12,-0.073],[0.149,-0.122],[0.124,-0.096],[0.058,-0.012],[0.074,0.01],[0.126,-0.054],[0.099,-0.071],[0.071,-0.172],[0.099,-0.269],[-0.122,0.024]],\"v\":[[-34.112,-75.921],[-34.898,-75.33],[-35.292,-75.233],[-35.487,-74.838],[-36.178,-74.056],[-36.178,-73.659],[-35.783,-73.463],[-35.391,-73.659],[-35.098,-74.056],[-34.805,-74.442],[-34.622,-74.437],[-34.409,-74.442],[-34.014,-74.545],[-34.014,-74.939],[-33.72,-75.33],[-33.525,-76.12]],\"c\":true},\"ix\":2},\"nm\":\"Path 72\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":72,\"ty\":\"sh\",\"ix\":73,\"ks\":{\"a\":0,\"k\":{\"i\":[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],\"o\":[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],\"v\":[[-310.169,-74.838],[-312.921,-73.266],[-312.037,-71.4],[-310.266,-72.379],[-308.792,-74.056],[-308.792,-75.823]],\"c\":true},\"ix\":2},\"nm\":\"Path 73\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":73,\"ty\":\"sh\",\"ix\":74,\"ks\":{\"a\":0,\"k\":{\"i\":[[-0.053,-0.371],[0,-0.169],[-0.022,-0.345],[-0.024,-0.293],[0,0],[0.05,0.15],[0.022,0.146],[0.047,0.343],[0.076,0.172],[0.124,0.15],[0.192,0.149]],\"o\":[[0.02,0.149],[0.025,0.345],[0,0.296],[0,0],[-0.05,-0.149],[-0.049,-0.146],[-0.072,-0.322],[-0.025,-0.196],[-0.1,-0.194],[-0.145,-0.174],[0,0.397]],\"v\":[[290.217,-66.974],[290.408,-66.583],[290.408,-65.698],[290.508,-64.959],[291.689,-64.959],[291.491,-65.402],[291.296,-65.794],[291.296,-66.68],[291.001,-67.073],[290.704,-67.562],[290.217,-67.959]],\"c\":true},\"ix\":2},\"nm\":\"Path 74\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":74,\"ty\":\"sh\",\"ix\":75,\"ks\":{\"a\":0,\"k\":{\"i\":[[0,0],[0.22,-0.099],[0.101,-0.075],[0.123,-0.099],[0.124,-0.096],[0.121,0.124],[0.123,0.124],[0.122,0.099],[0,0],[0,-0.15],[0,-0.146],[0,-0.248],[-0.047,-0.217],[0,-0.001],[0.006,0.001],[0.058,-0.009],[0.148,-0.025],[0.067,0.006],[0.062,-0.011],[0.317,0],[0.17,0.052],[0,0],[0,0],[-0.12,0],[-0.394,0.02],[0,0],[0.195,-0.048],[0.065,0.009],[0.053,-0.026],[0.079,-0.148],[0.027,-0.147],[0.097,-0.269],[0.048,-0.146],[0,-0.149],[-0.073,-0.124],[-0.147,-0.098],[-0.243,0],[-0.246,0.024],[-0.118,-0.024],[-0.148,0],[-0.099,0],[-0.194,0.171],[-0.099,0.17],[-0.049,0.117],[-0.099,0.145],[0,0],[0,0],[0,0.347],[-0.076,0.145],[-0.048,0.149],[0,0.146],[-0.026,0.298],[0,0.149],[0.027,0.295],[0,0],[-0.057,-0.009],[-0.067,0.029],[0,0.396],[0.099,0.196],[0.077,0.196],[0.051,0.126],[0.051,0.099],[0.146,0.075],[0.072,-0.017],[0.056,0.024],[0.174,0.027]],\"o\":[[-0.248,0],[-0.123,0.047],[-0.122,0.098],[-0.124,0.1],[-0.122,-0.096],[-0.124,-0.122],[-0.122,-0.123],[0,0],[0,0.149],[0,0.149],[0,0.25],[0,0.22],[0,0.001],[-0.006,-0.001],[-0.061,-0.005],[-0.149,0.027],[-0.062,0.015],[-0.067,-0.006],[-0.294,0.077],[-0.198,0],[0,0],[0,0],[0.126,0],[0.394,0],[0,0],[-0.22,0.023],[-0.058,0.014],[-0.077,-0.011],[-0.12,0.076],[-0.072,0.149],[-0.048,0.268],[-0.048,0.146],[-0.048,0.123],[0,0.146],[0.074,0.148],[0.194,0.126],[0.248,0],[0.148,0],[0.127,0.024],[0.096,0],[0.271,0],[0.125,-0.098],[0.048,-0.123],[0.098,-0.176],[0,0],[0,0],[0,-0.345],[0,-0.17],[0.074,-0.15],[0.027,-0.119],[0.027,-0.293],[0,-0.145],[0,-0.292],[0,0],[0.063,-0.009],[0.075,0.011],[0.347,-0.173],[0,-0.244],[-0.099,-0.17],[-0.022,-0.121],[-0.049,-0.119],[-0.095,-0.15],[-0.065,-0.04],[-0.063,0.015],[-0.171,-0.051],[0,0]],\"v\":[[-34.703,-67.173],[-35.292,-66.974],[-35.689,-66.876],[-35.882,-66.484],[-36.277,-66.288],[-36.667,-66.484],[-36.866,-66.876],[-37.259,-67.073],[-38.193,-66.974],[-38.146,-66.583],[-38.243,-66.191],[-38.193,-65.572],[-38.243,-65.011],[-38.243,-65.007],[-38.262,-65.009],[-38.439,-65.011],[-38.833,-64.814],[-39.031,-64.813],[-39.227,-64.814],[-40.01,-64.515],[-40.404,-64.814],[-40.848,-64.714],[-40.848,-61.91],[-40.503,-61.863],[-39.52,-61.91],[-39.52,-60.683],[-40.109,-60.587],[-40.299,-60.591],[-40.503,-60.587],[-40.702,-60.192],[-40.896,-59.796],[-40.896,-59.011],[-41.29,-58.816],[-41.389,-58.421],[-41.29,-58.028],[-40.896,-57.734],[-40.307,-57.536],[-39.716,-57.832],[-39.327,-57.832],[-38.93,-57.734],[-38.734,-57.589],[-38.146,-57.93],[-37.751,-58.225],[-37.751,-58.614],[-37.357,-58.911],[-34.014,-58.911],[-34.014,-59.479],[-34.31,-60.29],[-33.915,-60.485],[-33.72,-60.882],[-33.72,-61.272],[-33.72,-62.061],[-33.621,-62.454],[-33.72,-63.239],[-33.72,-64.025],[-33.542,-64.017],[-33.328,-64.025],[-32.637,-64.814],[-32.835,-65.402],[-33.229,-65.794],[-33.328,-66.191],[-33.328,-66.583],[-33.72,-66.876],[-33.93,-66.882],[-34.112,-66.876],[-34.508,-67.173]],\"c\":true},\"ix\":2},\"nm\":\"Path 75\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":75,\"ty\":\"sh\",\"ix\":76,\"ks\":{\"a\":0,\"k\":{\"i\":[[-0.001,0.001],[-0.012,-0.02],[0.032,0]],\"o\":[[0.043,-0.014],[-0.035,0.007],[0.001,0]],\"v\":[[-38.142,-65.003],[-38.044,-65.011],[-38.145,-65.002]],\"c\":true},\"ix\":2},\"nm\":\"Path 76\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":76,\"ty\":\"sh\",\"ix\":77,\"ks\":{\"a\":0,\"k\":{\"i\":[[0.028,-0.02],[0.047,-0.172],[0,-0.243],[0,0],[0.096,0.175],[0,0],[0.175,-0.022],[0.06,0.012],[0.039,0]],\"o\":[[-0.146,0.097],[-0.051,0.222],[0,0],[-0.024,-0.219],[0,0],[-0.072,-0.147],[-0.053,0.012],[-0.042,-0.008],[-0.036,0]],\"v\":[[293.064,-66.288],[292.969,-65.794],[292.969,-65.159],[294.147,-65.159],[294.147,-65.698],[293.947,-66.091],[293.457,-66.288],[293.283,-66.299],[293.16,-66.315]],\"c\":true},\"ix\":2},\"nm\":\"Path 77\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":77,\"ty\":\"sh\",\"ix\":78,\"ks\":{\"a\":0,\"k\":{\"i\":[[0.068,-0.04],[0.15,-0.246],[0.048,-0.249],[0.05,-0.342],[0.199,-0.296],[0.196,-0.297],[0.54,-0.538],[0,-1.182],[0,-0.34],[0,0],[-0.542,-0.54],[-0.737,-0.345],[-0.049,0.348],[0,0.589],[0,0.297],[-0.343,0.594],[0,0],[0.114,-0.018],[0.138,0.058],[0.542,0.394],[0.395,0.148],[0.245,0.049],[0.246,0],[0.294,0.097],[-0.342,0.49],[-0.147,0.297],[0,0.294],[0.049,0.296],[0.111,0.022],[0.074,0]],\"o\":[[-0.248,0.147],[-0.147,0.195],[-0.099,0.34],[-0.049,0.347],[-0.194,0.293],[-0.443,0.592],[-0.837,0.837],[0,0.342],[0,0],[0.785,0],[0.538,0.545],[0.197,-0.297],[0.098,-0.537],[0,-0.295],[0.049,-0.688],[0,0],[-0.129,-0.02],[-0.147,0.021],[-0.587,-0.242],[-0.34,-0.243],[-0.246,-0.048],[-0.244,-0.053],[-0.295,-0.053],[0.198,-0.589],[0.146,-0.246],[0.099,-0.245],[0,-0.347],[-0.125,0.022],[-0.078,-0.016],[-0.07,0]],\"v\":[[-127.507,-56.85],[-128.294,-56.457],[-128.294,-55.665],[-128.491,-54.69],[-129.082,-53.898],[-129.671,-53.115],[-131.046,-51.542],[-132.618,-48.935],[-132.423,-48.002],[-126.77,-48.002],[-125.147,-46.824],[-123.576,-45.642],[-122.79,-46.234],[-122.79,-47.805],[-122.986,-48.593],[-122.198,-50.166],[-122.398,-50.952],[-122.76,-50.937],[-123.182,-50.952],[-124.757,-51.936],[-125.542,-52.72],[-126.328,-52.916],[-127.115,-52.916],[-127.9,-53.309],[-127.312,-54.883],[-126.525,-55.276],[-126.328,-56.062],[-126.72,-56.85],[-127.072,-56.872],[-127.301,-56.904]],\"c\":true},\"ix\":2},\"nm\":\"Path 78\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":78,\"ty\":\"sh\",\"ix\":79,\"ks\":{\"a\":0,\"k\":{\"i\":[[0,0],[0.074,-0.172],[0.05,-0.171],[0.05,-0.125],[0.171,-0.226],[0,0],[-0.069,-0.012],[-0.05,0.027],[-0.124,0.147],[-0.123,0.12],[-0.073,0.122],[-0.045,0.121],[-0.026,0.145],[-0.026,0.147],[0,0]],\"o\":[[-0.048,0.172],[-0.073,0.175],[-0.022,0.121],[-0.1,0.266],[0,0],[0.058,-0.022],[0.073,0.013],[0.171,-0.122],[0.124,-0.147],[0.126,-0.124],[0.075,-0.101],[0.054,-0.15],[0.024,-0.122],[0,0],[0,0]],\"v\":[[270.65,-55.375],[270.452,-54.883],[270.158,-54.488],[270.158,-54.094],[269.668,-53.502],[269.472,-53.115],[269.671,-53.113],[269.863,-53.115],[270.158,-53.605],[270.452,-53.998],[270.845,-54.194],[270.941,-54.587],[271.142,-54.979],[271.142,-55.375],[270.748,-55.472]],\"c\":true},\"ix\":2},\"nm\":\"Path 79\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":79,\"ty\":\"sh\",\"ix\":80,\"ks\":{\"a\":0,\"k\":{\"i\":[[0.079,-0.011],[0.109,0.022],[0,0],[-0.245,-0.193],[-0.247,-0.197],[-0.243,-0.192],[-0.54,0],[-0.343,0.348],[-0.099,0.147],[0.295,0.049],[0.137,-0.012],[0.12,0.025],[0.295,0.148],[0.392,0.196],[0.07,0]],\"o\":[[-0.12,0.017],[0,0],[0.246,0.145],[0.247,0.194],[0.246,0.196],[0.394,0.348],[0.49,0],[0.149,-0.144],[-0.293,-0.095],[-0.125,-0.026],[-0.133,0.013],[-0.296,-0.053],[-0.394,-0.193],[-0.065,-0.026],[-0.079,0]],\"v\":[[-141.711,-54.106],[-142.059,-54.094],[-142.844,-53.702],[-142.059,-53.309],[-141.467,-52.523],[-140.682,-51.936],[-139.501,-51.145],[-138.52,-51.936],[-138.125,-52.523],[-138.913,-52.916],[-139.311,-52.917],[-139.697,-52.916],[-140.483,-53.309],[-141.27,-54.094],[-141.473,-54.129]],\"c\":true},\"ix\":2},\"nm\":\"Path 80\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":80,\"ty\":\"sh\",\"ix\":81,\"ks\":{\"a\":0,\"k\":{\"i\":[[0.031,-0.013],[0.171,-0.075],[0.127,-0.072],[0.172,-0.12],[0.147,-0.078],[-0.295,0],[-0.147,0.173],[-0.069,0.097],[-0.148,0.368],[0.06,0.008],[0.039,0]],\"o\":[[-0.169,0.074],[-0.15,0.075],[-0.17,0.097],[-0.126,0.073],[0.246,0.146],[0.246,0],[0.075,-0.097],[0.248,-0.296],[-0.054,0.01],[-0.04,-0.005],[-0.034,0]],\"v\":[[260.621,-44.855],[260.228,-44.562],[259.832,-44.364],[259.444,-43.971],[259.051,-43.771],[259.787,-43.481],[260.423,-43.577],[260.522,-43.971],[261.014,-44.855],[260.84,-44.861],[260.72,-44.872]],\"c\":true},\"ix\":2},\"nm\":\"Path 81\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":81,\"ty\":\"sh\",\"ix\":82,\"ks\":{\"a\":0,\"k\":{\"i\":[[0.031,-0.012],[0.197,-0.247],[0.071,-0.125],[0.096,-0.122],[0.128,-0.073],[0.32,-0.072],[0.148,0],[0.124,0.005],[0.146,-0.011],[0,0],[0.148,-0.029],[0,0],[0.098,0.018],[0.165,-0.078],[0.149,-0.077],[0.147,-0.071],[0.145,-0.048],[0.245,0],[0.222,0.076],[0.419,0.272],[0.145,0.122],[0.27,0.271],[0.148,0.098],[0.17,0.048],[0.466,0.126],[0.173,0.098],[0,-0.175],[-0.024,-0.344],[0,-0.147],[0,-0.296],[0.023,-0.124],[0.049,-0.122],[0.1,-0.148],[0.096,-0.1],[0.099,-0.123],[0.072,-0.172],[0,-0.467],[0.176,0],[0.122,0.176],[0.071,0.149],[0.097,-0.169],[0.12,-0.076],[0.067,0.018],[0.06,-0.038],[0.096,-0.119],[0,-0.42],[-0.144,-0.199],[-0.121,-0.074],[-0.075,-0.17],[-0.075,-0.101],[-0.171,-0.051],[0,0],[-0.218,0.1],[0,0],[0,0],[0,-0.297],[0,0],[0.025,-0.168],[0.029,-0.17],[0,-0.15],[0,-0.172],[0,0],[0.075,-0.321],[0.077,-0.095],[0.152,-0.076],[0.074,0.011],[0.056,-0.011],[0.099,-0.173],[0.176,-0.267],[0.171,-0.195],[0.223,-0.248],[0,0.149],[0,0.171],[0.027,0.292],[0.026,-0.096],[0.051,-0.172],[0.024,-0.292],[0,0],[0,0],[0,0],[0.075,0.146],[0.026,0.148],[-0.047,0.296],[0,0],[0.051,-0.172],[0.027,-0.168],[0.025,-0.295],[0.149,0],[0.295,0],[0,0],[0,0],[0.073,0.121],[0.101,0.072],[0.147,0.119],[0.121,0.052],[0.271,-0.173],[0.123,-0.02],[0.297,0.026],[0.491,-0.027],[0.122,-0.027],[0.147,-0.027],[0.124,0],[0.103,0.014],[0.162,-0.058],[0.169,-0.296],[0.026,-0.146],[0,-0.146],[0,-0.32],[0,0],[0,-0.169],[-0.023,-0.293],[0.32,-0.097],[0.121,-0.049],[0.099,-0.149],[0.076,-0.173],[0.049,-0.123],[0.051,-0.148],[0.027,-0.149],[-0.199,0],[-0.343,0],[-0.343,0.049],[-0.002,0],[0.016,-0.104],[0.049,-0.127],[0.072,-0.147],[0,0],[0.074,-0.174],[0,-0.225],[-0.542,0],[0,0],[-0.025,0.468],[-0.169,0.199],[-0.295,0.1],[0,0.442],[0.097,0.42],[0,0.146],[0,0.295],[0.149,0],[0.345,0.026],[-0.123,0.097],[-0.121,0.071],[-0.146,0.026],[-0.344,0],[-0.296,0.199],[-0.494,0.146],[-0.126,0],[-0.146,0],[-0.132,-0.007],[-0.139,0.01],[-0.123,0],[-0.15,0],[-0.197,-0.011],[-0.211,0.013],[-0.15,0.027],[0.175,-0.028],[0.121,0],[0.113,0.008],[0.151,-0.027],[0.685,0],[0,0],[0,0],[0,0],[-0.198,0.074],[-0.269,0.169],[-0.098,0.125],[-0.174,0.1],[-0.171,0.048],[-0.122,0.025],[-0.115,-0.022],[-0.129,0.085],[-0.077,0.122],[-0.05,0.123],[-0.099,0.093],[-0.074,-0.173],[-0.074,-0.097],[-0.145,-0.072],[-0.246,0],[-0.175,0.198],[-0.12,0.121],[-0.418,0],[0,0.148],[0,0.172],[0.023,0.151],[0.028,0.124],[0,0],[0,0],[-0.32,0.068],[-0.155,-0.041],[-0.155,0.012],[-0.15,0.217],[0,0.347],[0,0],[-0.052,0.149],[-0.021,0.125],[-0.051,0.37],[0,0],[0.02,0.295],[0,0],[-0.098,0.223],[-0.173,0.12],[-0.049,0.147],[-0.049,0.467],[-0.026,0.118],[-0.122,0.271],[-0.05,0.175],[0,0.345],[0.124,0.246],[0.096,0.146],[0.072,0.127],[0.099,0.316],[0.024,0.121],[0.097,0.322],[0.049,0.123],[0.119,0.099],[0.121,0.053],[0.27,0.05],[0,0],[0,0],[-0.222,0],[0,0],[-0.219,-0.073],[-0.146,-0.05],[-0.068,0.011],[-0.063,-0.025],[-0.144,-0.046],[-0.343,-0.024],[-0.341,-0.02],[0,0.148],[0.025,0.469],[0,0],[-0.176,0.049],[-0.123,0.051],[-0.072,0.094],[-0.024,0.123],[-0.024,0.269],[-0.047,0.121],[-0.124,0.101],[-0.124,0.048],[-0.148,0.027],[-0.118,-0.013],[-0.147,0.041],[-0.171,0.051],[-0.443,0.075],[0,0],[-0.118,0.026],[-0.096,0.096],[-0.074,0.121],[-0.049,0.099],[-0.099,0.098],[-0.098,0.124],[-0.074,0.147],[-0.049,0.126],[0,0.149],[0.06,0.009],[0.037,0]],\"o\":[[-0.295,0.124],[-0.076,0.1],[-0.074,0.119],[-0.098,0.123],[-0.267,0.197],[-0.125,0.024],[-0.149,0.012],[-0.121,-0.007],[0,0],[-0.145,0.024],[0,0],[-0.114,0.009],[-0.157,-0.026],[-0.172,0.07],[-0.123,0.072],[-0.148,0.075],[-0.223,0.099],[-0.246,0],[-0.489,-0.147],[-0.171,-0.096],[-0.296,-0.247],[-0.12,-0.122],[-0.148,-0.096],[-0.471,-0.126],[-0.199,-0.05],[-0.023,0.148],[-0.024,0.342],[0,0.147],[0.023,0.296],[0,0.146],[-0.026,0.124],[-0.074,0.173],[-0.098,0.123],[-0.099,0.095],[-0.126,0.145],[-0.197,0.391],[-0.177,0],[-0.218,0],[-0.074,-0.118],[-0.101,0.174],[-0.049,0.099],[-0.063,0.036],[-0.069,-0.019],[-0.149,0.095],[-0.245,0.297],[0,0.245],[0.077,0.123],[0.176,0.124],[0.05,0.126],[0.1,0.148],[0,0],[0.242,0],[0,0],[0,0],[-0.023,0.295],[0,0],[0,0.197],[-0.023,0.172],[-0.022,0.126],[0,0.172],[0,0],[0,0.344],[-0.022,0.119],[-0.097,0.122],[-0.065,0.027],[-0.061,-0.008],[-0.196,0.071],[-0.151,0.268],[-0.124,0.217],[-0.196,0.247],[0,-0.15],[0,-0.169],[0.028,-0.294],[-0.073,0.069],[-0.051,0.175],[-0.072,0.271],[0,0],[0,0],[0,0],[-0.127,-0.097],[-0.07,-0.151],[-0.073,-0.268],[0,0],[-0.076,0.17],[-0.048,0.172],[-0.048,0.273],[-0.147,0.025],[-0.293,0.024],[0,0],[0,0],[-0.124,-0.102],[-0.073,-0.098],[-0.119,-0.097],[-0.099,-0.077],[-0.171,0.297],[-0.096,0.048],[-0.27,0.049],[-0.494,-0.027],[-0.148,0],[-0.152,0.026],[-0.12,0.025],[-0.108,0.009],[-0.155,-0.02],[-0.32,0.12],[-0.078,0.149],[-0.023,0.126],[-0.023,0.323],[0,0],[-0.025,0.169],[0,0.298],[-0.343,0],[-0.125,0.026],[-0.176,0.074],[-0.097,0.15],[-0.048,0.122],[-0.049,0.146],[-0.045,0.147],[0.175,0.022],[0.343,0.027],[0.344,0],[0.002,0],[0.005,0.103],[-0.023,0.122],[-0.051,0.168],[0,0],[-0.074,0.148],[-0.076,0.197],[0,0.537],[0,0],[0,-0.468],[0.027,-0.291],[0.194,-0.219],[0.419,-0.148],[0,-0.418],[-0.025,-0.148],[-0.025,-0.297],[-0.146,0],[-0.345,0],[0.049,-0.15],[0.122,-0.101],[0.128,-0.073],[0.321,-0.072],[0.37,0],[0.441,-0.29],[0.12,-0.028],[0.124,0],[0.157,-0.016],[0.114,0.005],[0.147,0],[0.124,0],[0.255,-0.025],[0.161,0.008],[0.144,0],[-0.15,0.097],[-0.121,0.024],[-0.119,0.011],[-0.144,-0.011],[-0.662,0.146],[0,0],[0,0],[0,0],[0.221,0],[0.292,-0.123],[0.126,-0.078],[0.124,-0.146],[0.147,-0.096],[0.124,-0.024],[0.113,-0.021],[0.16,0.031],[0.12,-0.078],[0.072,-0.123],[0.049,-0.148],[0.076,0.17],[0.047,0.121],[0.096,0.147],[0.201,0.123],[0.267,0],[0.096,-0.121],[0.299,-0.3],[0.023,-0.148],[0,-0.178],[0,-0.173],[0,-0.122],[0,0],[0,0],[0.247,-0.246],[0.178,-0.044],[0.124,0.034],[0.297,-0.027],[0.195,-0.272],[0,0],[0,-0.173],[0.022,-0.121],[0.125,-0.368],[0,0],[0.021,-0.295],[0,0],[0,-0.245],[0.098,-0.198],[0.123,-0.076],[0.172,-0.418],[0,-0.151],[0.072,-0.299],[0.074,-0.17],[0.124,-0.322],[0,-0.294],[-0.077,-0.171],[-0.074,-0.125],[-0.174,-0.27],[-0.029,-0.125],[-0.099,-0.319],[-0.029,-0.121],[-0.05,-0.147],[-0.098,-0.072],[-0.267,-0.096],[0,0],[0,0],[0.222,0],[0,0],[0.243,0],[0.147,0.049],[0.061,0.024],[0.068,-0.012],[0.149,0.071],[0.296,0.121],[0.341,0.022],[0.027,-0.145],[0.049,-0.467],[0,0],[0.197,0],[0.12,-0.024],[0.124,-0.048],[0.076,-0.1],[0.074,-0.271],[0,-0.126],[0.051,-0.147],[0.097,-0.072],[0.147,-0.051],[0.124,-0.021],[0.14,0.017],[0.168,-0.046],[0.418,-0.147],[0,0],[0.122,0],[0.125,-0.024],[0.103,-0.101],[0.071,-0.126],[0.071,-0.122],[0.119,-0.123],[0.098,-0.121],[0.05,-0.125],[0.05,-0.121],[-0.067,0.014],[-0.038,-0.006],[-0.031,0]],\"v\":[[256.983,-42.989],[256.199,-42.497],[256.1,-42.1],[255.9,-41.71],[255.507,-41.514],[254.723,-41.022],[254.331,-41.022],[253.933,-41.021],[253.543,-41.022],[253.149,-41.022],[252.756,-40.823],[252.361,-40.823],[252.048,-40.848],[251.579,-40.823],[251.28,-40.429],[250.887,-40.236],[250.498,-40.04],[249.907,-39.843],[249.316,-40.04],[248.134,-40.629],[247.646,-40.923],[247.055,-41.71],[246.66,-42.004],[246.271,-42.298],[244.993,-42.497],[244.496,-42.792],[244.301,-42.397],[244.301,-41.514],[244.4,-41.119],[244.496,-40.333],[244.4,-39.941],[244.4,-39.548],[244.007,-39.251],[243.813,-38.856],[243.418,-38.661],[243.124,-38.266],[243.027,-37.089],[242.629,-36.895],[242.238,-37.288],[242.043,-37.679],[241.746,-37.188],[241.65,-36.792],[241.452,-36.792],[241.257,-36.792],[240.959,-36.402],[240.467,-35.418],[240.663,-34.827],[241.055,-34.63],[241.451,-34.239],[241.451,-33.843],[241.842,-33.548],[242.043,-33.548],[242.629,-33.843],[242.629,-32.861],[241.155,-32.861],[241.055,-32.073],[241.055,-31.584],[241.155,-31.092],[240.858,-30.701],[240.809,-30.329],[240.858,-29.911],[240.858,-28.635],[240.858,-27.747],[240.759,-27.356],[240.366,-27.158],[240.152,-27.152],[239.975,-27.158],[239.585,-26.764],[239.189,-25.979],[238.699,-25.489],[238.107,-24.798],[238.009,-25.195],[238.206,-25.586],[238.107,-26.371],[237.814,-26.275],[237.712,-25.783],[237.616,-24.999],[236.144,-24.999],[236.144,-23.423],[235.751,-23.326],[235.355,-23.521],[235.157,-23.916],[235.254,-24.702],[234.865,-24.798],[234.569,-24.406],[234.569,-23.916],[234.472,-23.128],[234.077,-23.028],[233.34,-23.028],[233.34,-20.669],[232.504,-20.669],[232.111,-20.867],[232.011,-21.26],[231.621,-21.553],[231.227,-21.654],[230.733,-20.867],[230.342,-20.771],[229.556,-20.867],[228.277,-20.867],[227.886,-20.867],[227.49,-20.669],[227.095,-20.571],[226.782,-20.589],[226.311,-20.571],[225.626,-19.883],[225.425,-19.492],[225.425,-19.1],[225.425,-18.263],[223.634,-18.263],[223.559,-17.823],[223.657,-17.033],[222.772,-16.936],[222.381,-16.835],[222.085,-16.444],[221.787,-16.048],[221.689,-15.656],[221.491,-15.263],[221.395,-14.82],[221.889,-14.674],[222.772,-14.674],[223.657,-14.674],[223.662,-14.674],[223.657,-14.378],[223.559,-13.982],[223.264,-13.593],[223.066,-13.2],[222.772,-12.804],[222.676,-12.214],[223.681,-11.233],[224.443,-11.233],[224.443,-12.414],[224.639,-13.2],[225.425,-13.496],[226.214,-14.279],[225.722,-15.263],[225.722,-15.656],[225.722,-16.394],[225.329,-16.348],[224.443,-16.394],[224.443,-16.835],[224.832,-17.033],[225.228,-17.231],[226.115,-17.231],[226.999,-17.626],[228.181,-18.409],[228.574,-18.409],[228.965,-18.504],[229.384,-18.506],[229.754,-18.504],[230.146,-18.608],[230.537,-18.707],[231.178,-18.711],[231.719,-18.707],[232.111,-18.804],[231.816,-18.409],[231.423,-18.409],[231.076,-18.414],[230.637,-18.409],[229.042,-17.626],[227.095,-17.626],[227.095,-14.969],[227.861,-14.969],[228.379,-15.165],[229.16,-15.556],[229.358,-15.953],[229.754,-16.348],[230.146,-16.641],[230.537,-16.738],[230.883,-16.715],[231.326,-16.738],[231.522,-17.131],[231.522,-17.525],[231.915,-17.719],[232.21,-17.326],[232.21,-16.936],[232.6,-16.641],[233.243,-16.544],[233.783,-16.936],[233.978,-17.326],[235.061,-17.525],[235.061,-17.916],[235.254,-18.311],[235.061,-18.707],[234.96,-19.1],[235.355,-19.246],[239.779,-19.196],[240.467,-19.782],[240.946,-19.743],[241.353,-19.687],[242.043,-20.079],[242.431,-20.894],[242.431,-22.807],[242.533,-23.227],[242.629,-23.621],[243.223,-24.406],[243.223,-24.798],[243.124,-25.586],[243.124,-26.227],[243.124,-26.863],[243.615,-27.158],[244.007,-27.356],[244.107,-28.535],[244.204,-28.925],[244.496,-29.716],[244.793,-30.109],[244.894,-30.995],[244.793,-31.779],[244.4,-32.073],[244.204,-32.47],[243.714,-33.253],[243.714,-33.647],[243.321,-34.435],[243.321,-34.827],[243.124,-35.221],[242.728,-35.322],[241.941,-35.517],[241.941,-36.105],[243.884,-36.105],[244.4,-36.402],[244.598,-36.402],[245.184,-36.105],[245.579,-35.909],[245.775,-35.909],[245.973,-35.909],[246.168,-35.517],[247.055,-35.418],[247.936,-35.322],[248.037,-35.711],[247.964,-36.895],[250.077,-36.895],[250.498,-37.188],[250.887,-37.288],[251.28,-37.382],[251.381,-37.778],[251.381,-38.563],[251.477,-38.956],[251.676,-39.352],[252.068,-39.447],[252.462,-39.647],[252.824,-39.64],[253.249,-39.647],[253.642,-39.941],[254.822,-40.236],[255.214,-40.236],[255.605,-40.333],[255.996,-40.429],[256.1,-40.823],[256.199,-41.218],[256.592,-41.415],[256.886,-41.808],[257.28,-42.1],[257.379,-42.497],[257.379,-42.989],[257.189,-42.993],[257.077,-43.005]],\"c\":true},\"ix\":2},\"nm\":\"Path 82\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":82,\"ty\":\"sh\",\"ix\":83,\"ks\":{\"a\":0,\"k\":{\"i\":[[-0.007,0],[-0.001,-0.012]],\"o\":[[0,0.013],[-0.006,-0.021]],\"v\":[[223.657,-14.82],[223.658,-14.783]],\"c\":true},\"ix\":2},\"nm\":\"Path 83\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":83,\"ty\":\"sh\",\"ix\":84,\"ks\":{\"a\":0,\"k\":{\"i\":[[0.294,0],[0.246,-0.048],[0.59,-0.099],[0.298,0],[0.306,0.021],[0.515,-0.085],[0.346,-0.148],[0.294,-0.196],[0.244,0.199],[0.292,0.195],[0.633,0],[0.887,-0.343],[0.149,0.021],[0.11,-0.022],[0.297,-0.296],[0,0],[0.147,-0.296],[0.147,-0.196],[0.346,-0.15],[0.296,0],[0.223,0.018],[0.303,-0.056],[0.344,0],[0,0],[0.442,0],[0.306,-0.022],[0.513,0.085],[0.246,0.098],[0.341,0.147],[0,0],[0.046,-0.344],[0.046,-0.249],[0,-0.292],[0,-0.486],[0.293,0],[0.295,0],[0.542,0],[0,0],[0,0],[0.048,-0.589],[0.048,-0.588],[0.05,-0.29],[0,-0.588],[0,0],[0,0],[0.783,-0.494],[0.195,-0.098],[0.343,-0.146],[0.25,-0.102],[0.139,0.025],[0.098,-0.051],[0.198,-0.245],[0.149,-0.293],[0.345,-0.641],[0.197,-0.392],[0.145,-0.246],[0.15,-0.345],[0.149,-0.246],[0.146,-0.248],[0.183,0.051],[0.097,-0.019],[0.543,-0.049],[0.104,-0.98],[0.05,-0.244],[0.147,-0.196],[0.29,-0.242],[0.246,-0.145],[0.197,-0.249],[0,0],[-0.589,-0.051],[-0.243,-0.051],[-0.135,0.013],[-0.121,-0.025],[-0.292,-0.195],[0,0],[0,-0.343],[0,-1.867],[0,0],[0.098,-0.24],[0.198,-0.246],[0.166,0.048],[0.047,-0.097],[0,-0.302],[-0.053,-0.293],[-0.052,-0.245],[0,-0.297],[0,0],[-0.243,-0.497],[-0.244,-0.295],[-0.244,-0.195],[-0.247,-0.149],[-0.344,-0.101],[-0.134,0.023],[-0.126,-0.051],[-0.195,-0.248],[-0.345,-0.393],[-0.247,-0.143],[-0.155,0.031],[-0.12,-0.018],[-0.148,-0.882],[-0.193,-0.294],[-0.344,-0.147],[-0.637,-0.244],[-0.688,-0.048],[0,-0.296],[-0.051,-0.25],[-0.15,-0.244],[-0.246,-0.193],[-0.248,-0.148],[-0.294,-0.198],[-0.638,-0.197],[-0.136,0.013],[-0.124,-0.023],[-0.298,-0.05],[-0.443,0],[-0.248,0.346],[-0.195,0.15],[-0.592,0],[-0.296,0],[-0.297,0],[0,0],[-0.738,-0.1],[-0.248,-0.1],[-0.295,-0.145],[-0.783,0],[-0.39,0.052],[-0.294,0.095],[-0.126,-0.029],[-0.131,0.079],[-0.248,0.196],[-0.291,0.197],[-0.342,0.051],[-0.59,0],[-0.589,0.045],[0,0],[-0.445,0.142],[-0.787,0],[-0.297,-0.344],[-0.1,-0.196],[-0.096,-0.346],[-0.099,-0.249],[-0.148,-0.195],[-0.248,-0.145],[-0.345,0],[0,0],[0,0],[0,-0.296],[0.05,-0.591],[0.05,-0.24],[0.145,-0.348],[0,-0.291],[0,-0.937],[0.195,-0.099],[0.148,0.025],[0.097,-0.049],[0.196,-0.199],[-0.295,-0.098],[-0.391,-0.491],[-0.196,-0.545],[-0.196,-0.195],[-0.198,-0.098],[-0.194,-0.194],[-0.148,-0.243],[-0.393,-0.638],[-0.149,-0.246],[-0.247,-0.592],[-0.046,-0.294],[-0.046,-0.688],[-0.147,-0.541],[-0.05,-0.346],[0,-0.295],[0,0],[-0.293,-0.491],[-0.15,-0.292],[0,-0.445],[0.051,-0.438],[0.046,-0.251],[0.145,-0.243],[0.197,-0.296],[0.146,-0.982],[0.097,-0.542],[0.043,-0.25],[0.196,-0.392],[0,-0.342],[0,-0.595],[-0.295,-0.835],[-0.243,-0.296],[-0.046,-0.347],[-0.046,-0.249],[-0.046,-0.25],[-0.147,-0.293],[-0.196,-0.248],[-0.59,-0.348],[-0.048,-0.299],[-0.047,-0.341],[-0.049,-0.242],[-0.049,-0.249],[0,-0.345],[0,0],[-0.054,-0.542],[-0.054,-0.244],[-0.344,-0.541],[-0.489,-1.033],[-0.049,-0.249],[-0.05,-0.246],[-0.1,-0.294],[-0.294,-0.544],[-0.244,-0.295],[-0.05,-0.343],[-0.149,-0.539],[-0.099,-0.296],[-0.051,-0.346],[0,0],[0.198,-0.296],[0.196,-0.293],[0.048,-0.241],[-0.295,0],[0,0],[-0.046,-0.248],[-0.099,-0.195],[-0.245,-0.198],[-0.344,0],[0,0],[-0.64,0.198],[-0.645,0],[0,0],[-0.151,0.34],[-0.199,0.154],[-0.248,0.05],[-0.297,0],[-0.54,0.151],[-0.196,0.148],[-0.196,0.297],[-0.147,0.2],[-0.244,0.201],[-0.294,0.198],[-0.293,0.296],[-0.197,0.392],[-0.293,0.541],[-0.297,0.245],[-0.395,0.642],[-0.146,0.244],[-0.295,0.295],[-0.148,0.391],[0,0.783],[0.146,0.392],[0.145,0.346],[0.1,0.244],[-0.346,0.053],[-0.244,0.053],[-0.133,-0.013],[-0.123,0.027],[-0.296,0.245],[-0.244,0.248],[-0.292,0.194],[-0.292,0.247],[-0.1,0.196],[0,0.295],[0.196,0.884],[0.144,0.539],[0.246,0.538],[0,0.692],[-0.244,0.294],[-0.244,0.292],[-0.346,0.247],[-0.194,0.096],[-0.196,0.246],[-0.246,0.346],[-0.25,0.152],[-0.638,0.146],[-0.246,0.053],[-0.134,-0.012],[-0.123,0.027],[-0.34,0.145],[-0.444,0.44],[-0.148,0.641],[-0.044,0.589],[0,0.296],[0,0],[0.05,0.441],[0,0.342],[0,0],[0.199,0.297],[0.443,0.938],[-0.049,0.589],[0,0.288],[0.049,0.294],[0.049,0.295],[0.049,0.293],[0,0],[-0.103,0.392],[-0.05,0.244],[-0.248,0.295],[-0.489,1.033],[-0.097,0.241],[-0.147,0.348],[-0.1,0.247],[-0.341,0.54],[-0.245,0.197],[-0.25,0.244],[-0.2,0.248],[-0.592,0.493],[-0.297,0.292],[-0.344,0.201],[-0.495,0.442],[-0.197,0.244],[-0.24,0.297],[-0.201,0.14],[-0.198,0.097],[-0.293,0.149],[-0.295,0.196],[-0.199,0.199],[-0.149,0.299],[-0.346,0.834],[-0.192,0.247],[-0.348,0.241],[-0.293,0.245],[-0.149,0.296],[-0.096,0.345],[0,0.59],[-0.052,0.592],[0,1.029],[0,0],[0.443,0],[0.448,-0.195],[0.296,-0.151],[1.132,0],[0.539,0.049],[0,0],[0.59,-0.047],[0.591,0],[0.294,0.048],[0,0],[0.149,0.347],[0.149,0.244],[0.146,0.3],[0,0],[0.15,0.194],[0.294,0.194],[0.143,-0.025],[0.122,0.047],[0.295,0.299],[0.296,0.247],[0.248,0.199],[0.295,0.148],[0.297,0.099],[0.136,-0.026],[0.122,0.049],[0.247,0.195],[0.149,0.642],[0,0.246],[0.246,0.488],[0.246,0.3],[0.34,0.692],[0,0.395],[0,0.293],[0,0],[0.198,0.538],[0.144,0.341],[0.343,0.538],[0.194,0.248],[0.143,0.249],[0.1,0.296],[0,0.296],[0.1,0.545],[0.049,0.242],[0.198,0.291],[0.297,0.689],[0.049,0.296],[0.101,0.546],[0.296,0.54],[0.243,0.292],[0.25,0.245],[0.244,0.246],[0.198,0.246],[0.048,0.347],[0.048,0.244],[0.146,0.247],[0.298,0.194],[0.293,0.103],[0.148,-0.021],[0.11,0.023],[0.345,0.049],[0,0],[0.784,-0.246],[0,0],[0,0],[0.59,0],[0.393,0.2],[0.296,0.248],[0.685,0.344],[1.133,0],[0.787,0],[0.44,0.098],[-0.05,-0.734],[0,-0.299],[0.047,-0.934],[0.444,0],[0,0],[0.295,0.05],[0.296,0.296],[0.344,0.147],[0.392,0],[0,0],[0.145,0.292],[0.142,0.196],[0.247,0.145],[0.346,0.148],[0.242,0.048],[0.592,0.047],[0.226,-0.017],[0.302,0.053],[0.59,0.296],[0.147,0.737],[0,0.29],[-0.151,0.298],[-0.149,0.345],[0,0.297],[0.148,0.246],[0.246,0.147],[0.298,0.196],[-0.345,0.147],[-0.247,0.101],[-0.249,0.048],[0.239,0.145],[0.248,0.096],[0.637,0]],\"o\":[[-0.3,0],[-0.587,0.099],[-0.245,0.049],[-0.389,0.021],[-0.429,-0.032],[-0.343,0.049],[-0.346,0.149],[-0.243,-0.196],[-0.246,-0.196],[-0.494,-0.343],[-0.986,0],[-0.137,0.056],[-0.12,-0.018],[-0.393,0.152],[0,0],[-0.1,0.293],[-0.099,0.249],[-0.248,0.295],[-0.245,0.098],[-0.259,0.022],[-0.284,-0.022],[-0.296,0.048],[0,0],[-0.442,0],[-0.389,-0.02],[-0.428,0.031],[-0.243,-0.05],[-0.347,-0.102],[0,0],[-0.147,0.345],[-0.048,0.246],[-0.048,0.246],[-0.05,0.49],[-0.293,0],[-0.294,0],[-0.545,0],[0,0],[0,0],[-0.052,0.593],[-0.049,0.593],[0,0.343],[-0.097,0.541],[0,0],[0,0],[-0.048,0.985],[-0.244,0.146],[-0.296,0.197],[-0.247,0.096],[-0.121,0.048],[-0.142,-0.025],[-0.245,0.148],[-0.196,0.246],[-0.341,0.645],[-0.146,0.345],[-0.098,0.248],[-0.198,0.345],[-0.148,0.294],[-0.146,0.244],[-0.09,0.149],[-0.117,-0.032],[-0.491,0.147],[0,0.981],[0,0.295],[-0.048,0.247],[-0.197,0.299],[-0.2,0.152],[-0.246,0.148],[0,0],[0.591,0.055],[0.293,0],[0.124,0.026],[0.135,-0.014],[0.343,0.052],[0,0],[-0.148,0.295],[0,1.869],[0,0],[0,0.249],[-0.147,0.348],[-0.073,0.099],[-0.165,-0.049],[-0.099,0.196],[0,0.344],[0.047,0.247],[0.051,0.248],[0,0],[0.05,0.591],[0.151,0.343],[0.198,0.242],[0.25,0.198],[0.293,0.145],[0.122,0.046],[0.137,-0.026],[0.293,0.144],[0.345,0.392],[0.194,0.25],[0.144,0.089],[0.108,-0.022],[0,0.937],[0.049,0.342],[0.201,0.292],[0.587,0.294],[0.639,0.242],[0.048,0.296],[0,0.295],[0.048,0.245],[0.147,0.247],[0.247,0.197],[0.295,0.192],[0.488,0.393],[0.123,0.026],[0.134,-0.012],[0.294,0.051],[0.39,0.1],[0.442,0],[0.147,-0.195],[0.442,-0.347],[0.297,0],[0.291,0],[0,0],[0.785,0],[0.244,0],[0.291,0.096],[0.689,0.344],[0.444,0],[0.3,-0.045],[0.115,-0.045],[0.144,0.033],[0.244,-0.147],[0.246,-0.201],[0.3,-0.197],[0.541,-0.095],[0.588,0],[0,0],[0.445,-0.102],[0.684,-0.247],[0.489,0],[0.146,0.197],[0.198,0.299],[0.1,0.244],[0.1,0.246],[0.196,0.248],[0.244,0.149],[0,0],[0,0],[0,0.297],[0,0.591],[0,0.295],[-0.098,0.347],[-0.101,0.241],[0,0.94],[-0.147,0.196],[-0.1,0.049],[-0.149,-0.024],[-0.246,0.145],[0.295,0.096],[0.59,0.199],[0.347,0.444],[0.102,0.293],[0.196,0.195],[0.244,0.149],[0.193,0.2],[0.395,0.639],[0.147,0.244],[0.292,0.538],[0.097,0.293],[0.148,0.639],[0.05,0.592],[0.097,0.348],[0.048,0.243],[0,0],[0,0.591],[0.148,0.296],[0.148,0.346],[0,0.445],[-0.05,0.297],[-0.051,0.244],[-0.152,0.295],[-0.589,0.789],[-0.049,0.542],[-0.049,0.242],[-0.152,0.391],[-0.149,0.295],[-0.051,0.589],[0,0.928],[0.149,0.396],[0.242,0.296],[0.05,0.245],[0.05,0.247],[0.05,0.296],[0.146,0.296],[0.445,0.491],[0,0.292],[0.048,0.39],[0.051,0.252],[0.05,0.245],[0.05,0.29],[0,0],[0,0.589],[0,0.244],[0.145,0.638],[0.637,0.933],[0.099,0.243],[0.048,0.247],[0.05,0.294],[0.196,0.589],[0.148,0.345],[0.249,0.294],[0.095,0.54],[0.046,0.297],[0.149,0.341],[0,0],[0,0.396],[-0.192,0.296],[-0.148,0.245],[0.295,0.051],[0,0],[0,0.3],[0.048,0.242],[0.147,0.248],[0.244,0.196],[0,0],[0.687,0],[0.588,-0.146],[0,0],[0.149,-0.346],[0.097,-0.247],[0.196,-0.143],[0.244,-0.048],[0.588,-0.048],[0.248,-0.046],[0.293,-0.245],[0.099,-0.196],[0.149,-0.242],[0.247,-0.195],[0.344,-0.245],[0.292,-0.295],[0.248,-0.538],[0.149,-0.343],[0.588,-0.494],[0.145,-0.244],[0.195,-0.345],[0.296,-0.299],[0.244,-0.738],[0,-0.449],[-0.099,-0.347],[-0.098,-0.244],[0.343,-0.149],[0.244,0],[0.124,-0.025],[0.136,0.013],[0.396,-0.098],[0.245,-0.197],[0.246,-0.248],[0.297,-0.195],[0.198,-0.144],[0.1,-0.198],[0,-0.934],[-0.1,-0.536],[-0.147,-0.588],[-0.296,-0.587],[0,-0.44],[0.246,-0.296],[0.248,-0.295],[0.2,-0.101],[0.245,-0.149],[0.249,-0.289],[0.196,-0.247],[0.539,-0.387],[0.246,-0.051],[0.121,-0.024],[0.137,0.013],[0.347,-0.097],[0.589,-0.3],[0.442,-0.443],[0.15,-0.538],[0,-0.295],[0,0],[0,-0.442],[-0.048,-0.349],[0,0],[-0.249,-0.244],[-0.539,-0.834],[0.097,-0.54],[0,-0.293],[0,-0.35],[-0.049,-0.294],[-0.049,-0.294],[0,0],[0,-0.444],[0.047,-0.246],[0.097,-0.348],[0.735,-0.891],[0.099,-0.248],[0.147,-0.348],[0.099,-0.245],[0.243,-0.591],[0.194,-0.296],[0.246,-0.196],[0.246,-0.246],[0.492,-0.542],[0.293,-0.248],[0.294,-0.3],[0.54,-0.339],[0.245,-0.196],[0.196,-0.294],[0.151,-0.196],[0.196,-0.153],[0.293,-0.196],[0.297,-0.145],[0.245,-0.144],[0.245,-0.242],[0.445,-0.783],[0.144,-0.344],[0.249,-0.292],[0.342,-0.251],[0.297,-0.246],[0.145,-0.291],[0.147,-0.544],[0,-0.588],[0.098,-1.031],[0,0],[-0.442,-0.045],[-0.539,0],[-0.341,0.149],[-0.931,0.537],[-0.544,0],[0,0],[-0.587,0],[-0.589,0.049],[-0.292,0],[0,0],[-0.146,-0.348],[-0.098,-0.243],[-0.145,-0.253],[0,0],[-0.101,-0.247],[-0.196,-0.297],[-0.1,-0.051],[-0.14,0.024],[-0.393,-0.151],[-0.246,-0.245],[-0.248,-0.194],[-0.292,-0.243],[-0.242,-0.145],[-0.124,-0.051],[-0.134,0.025],[-0.346,-0.149],[-0.49,-0.444],[-0.046,-0.244],[-0.047,-0.539],[-0.148,-0.296],[-0.49,-0.589],[-0.15,-0.342],[0,-0.293],[0,0],[0,-0.591],[-0.097,-0.345],[-0.297,-0.594],[-0.146,-0.246],[-0.196,-0.247],[-0.148,-0.243],[-0.049,-0.242],[-0.049,-0.586],[-0.049,-0.243],[-0.1,-0.346],[-0.389,-0.641],[-0.097,-0.296],[-0.147,-0.54],[-0.095,-0.634],[-0.146,-0.297],[-0.249,-0.295],[-0.244,-0.249],[-0.246,-0.244],[-0.146,-0.346],[0,-0.242],[-0.05,-0.248],[-0.145,-0.293],[-0.243,-0.15],[-0.135,-0.051],[-0.122,0.016],[-0.344,-0.094],[0,0],[-0.837,0],[0,0],[0,0],[-0.537,0.145],[-0.442,0],[-0.393,-0.193],[-0.587,-0.49],[-0.988,-0.544],[-0.788,0],[-0.443,0],[0,0.736],[0,0.296],[0.099,0.93],[-0.442,0.05],[0,0],[-0.348,0],[-0.393,-0.048],[-0.295,-0.29],[-0.346,-0.148],[0,0],[-0.098,-0.297],[-0.101,-0.252],[-0.198,-0.248],[-0.295,-0.193],[-0.244,-0.103],[-0.544,-0.151],[-0.261,-0.022],[-0.28,0.02],[-0.634,-0.147],[-0.687,-0.341],[-0.05,-0.248],[0,-0.347],[0.145,-0.343],[0.098,-0.246],[0,-0.347],[-0.146,-0.246],[-0.293,-0.196],[0.298,-0.247],[0.244,-0.095],[0.244,-0.101],[-0.149,-0.246],[-0.25,-0.147],[-0.539,-0.248],[-0.297,0]],\"v\":[[-4.814,-24.406],[-5.603,-24.406],[-7.177,-23.817],[-7.964,-23.817],[-8.978,-23.84],[-10.322,-23.817],[-11.107,-23.227],[-11.895,-22.636],[-12.681,-23.227],[-13.271,-24.012],[-14.841,-24.601],[-17.206,-23.621],[-17.641,-23.608],[-17.99,-23.621],[-18.779,-22.832],[-22.708,-22.832],[-23.103,-22.049],[-23.297,-21.26],[-24.085,-20.669],[-24.872,-20.669],[-25.583,-20.682],[-26.443,-20.669],[-27.232,-20.276],[-27.625,-20.276],[-28.805,-20.474],[-29.822,-20.45],[-31.163,-20.474],[-31.951,-20.669],[-32.736,-21.26],[-33.525,-21.654],[-34.112,-20.867],[-34.112,-20.079],[-34.31,-19.294],[-34.31,-18.018],[-35.098,-18.113],[-35.882,-17.916],[-37.259,-18.018],[-37.259,-14.775],[-40.208,-14.775],[-40.404,-13.2],[-40.404,-11.626],[-40.799,-10.84],[-40.997,-9.07],[-40.997,-7.696],[-43.353,-7.696],[-44.337,-5.334],[-45.124,-5.136],[-45.711,-4.352],[-46.503,-4.154],[-46.908,-4.155],[-47.285,-4.154],[-47.68,-3.369],[-48.272,-2.586],[-49.057,-0.812],[-49.648,0.169],[-49.84,0.958],[-50.63,1.744],[-51.025,2.531],[-51.22,3.318],[-51.674,3.364],[-52.007,3.318],[-53.384,3.514],[-53.384,6.068],[-53.579,6.856],[-53.775,7.64],[-54.559,8.23],[-55.349,8.429],[-55.742,9.218],[-55.742,10.588],[-54.169,10.788],[-53.384,10.788],[-52.988,10.789],[-52.598,10.788],[-52.007,11.574],[-52.4,12.36],[-52.988,13.096],[-52.792,17.867],[-52.792,18.651],[-52.792,19.434],[-53.384,20.225],[-53.796,20.226],[-54.169,20.225],[-54.365,21.013],[-53.971,21.798],[-53.775,22.583],[-53.579,23.374],[-53.579,24.158],[-53.384,25.732],[-52.598,26.323],[-52.204,27.105],[-51.414,27.503],[-50.63,28.092],[-50.241,28.091],[-49.84,28.092],[-49.057,28.484],[-48.663,30.055],[-47.876,30.448],[-47.432,30.473],[-47.09,30.448],[-47.09,32.809],[-46.503,33.596],[-45.516,33.987],[-43.944,34.973],[-42.176,35.167],[-41.977,35.956],[-41.977,36.743],[-41.977,37.526],[-41.191,37.921],[-40.404,38.315],[-39.815,39.102],[-38.243,40.082],[-37.848,40.083],[-37.456,40.082],[-36.667,40.477],[-35.487,40.675],[-34.703,39.885],[-34.508,39.102],[-32.934,38.904],[-32.146,39.102],[-31.359,38.904],[-30.867,38.904],[-28.805,38.904],[-28.016,38.904],[-27.625,39.69],[-25.659,39.885],[-24.482,39.885],[-23.693,39.495],[-23.324,39.507],[-22.905,39.495],[-22.512,38.708],[-21.729,38.118],[-20.939,37.526],[-19.366,37.526],[-17.794,37.728],[-17.402,37.728],[-16.415,36.94],[-14.352,36.548],[-13.073,36.743],[-12.879,37.526],[-12.29,38.315],[-12.091,39.102],[-11.895,39.885],[-11.107,40.278],[-10.272,40.477],[-3.443,40.477],[-3.443,42.882],[-3.638,43.622],[-3.638,45.197],[-3.638,45.978],[-4.225,46.772],[-4.422,47.503],[-4.62,49.917],[-4.814,50.701],[-5.21,50.701],[-5.603,50.701],[-5.996,51.487],[-5.21,51.878],[-3.638,52.469],[-3.443,54.046],[-3.047,54.829],[-2.26,55.024],[-1.473,55.418],[-1.279,56.205],[0.1,57.781],[0.493,58.568],[1.475,60.14],[1.866,60.924],[1.866,62.693],[2.262,64.266],[2.85,65.053],[2.654,65.843],[2.654,66.627],[3.046,68.201],[3.835,68.592],[3.835,69.773],[3.835,70.952],[3.639,71.741],[3.443,72.525],[2.654,73.116],[1.475,75.475],[1.475,77.05],[1.283,77.838],[0.493,78.621],[0.1,79.408],[0.1,80.983],[0.294,83.339],[1.083,84.128],[1.866,84.717],[1.866,85.503],[1.866,86.291],[2.262,87.074],[2.654,87.863],[4.424,89.044],[4.424,89.829],[4.816,90.808],[5.014,91.596],[5.014,92.387],[5.605,93.122],[5.605,97.152],[6,98.679],[6,99.463],[6.785,101.035],[8.945,103.198],[8.945,103.986],[9.142,104.771],[9.538,105.558],[10.126,107.132],[10.911,107.916],[11.702,108.507],[11.702,110.078],[12.092,110.868],[12.684,111.65],[12.684,112.043],[11.893,112.636],[11.307,113.422],[11.307,114.204],[12.092,114.402],[12.88,114.402],[12.88,115.194],[12.88,115.977],[13.665,116.373],[14.503,116.763],[18.336,116.763],[19.957,116.175],[21.583,115.782],[26.445,115.782],[27.036,114.998],[27.036,114.204],[27.823,114.011],[28.609,114.011],[30.181,113.812],[30.967,113.618],[31.557,112.832],[31.557,112.043],[32.344,111.65],[33.13,111.063],[33.917,110.276],[34.704,109.491],[35.293,107.916],[36.083,107.132],[37.656,105.753],[37.85,104.969],[38.635,104.18],[39.423,103.395],[39.621,101.432],[39.621,100.25],[39.029,99.463],[38.831,98.679],[39.621,98.084],[40.405,98.084],[40.796,98.085],[41.19,98.084],[41.98,97.3],[42.764,96.711],[43.353,95.925],[44.141,95.332],[44.928,95.136],[44.928,94.351],[44.536,91.99],[44.141,90.417],[43.552,88.846],[42.764,87.269],[43.552,86.487],[44.141,85.699],[44.928,84.914],[45.714,84.717],[46.108,83.928],[46.895,83.142],[47.29,82.352],[48.859,81.571],[49.646,81.373],[50.036,81.374],[50.432,81.373],[51.22,80.787],[52.793,79.799],[53.775,78.229],[53.775,76.654],[53.973,75.868],[53.973,74.687],[53.973,73.512],[53.581,72.675],[53.581,68.001],[52.793,67.413],[51.612,64.857],[52.005,63.285],[51.809,62.552],[52.005,61.711],[51.612,60.924],[51.22,60.14],[51.22,59.746],[51.419,58.568],[51.419,57.781],[52.204,57.191],[54.169,54.829],[54.365,54.046],[54.954,53.257],[55.154,52.469],[55.939,50.898],[56.725,50.309],[57.513,49.719],[58.104,48.931],[59.676,47.556],[60.462,46.772],[61.249,45.978],[62.823,45],[63.215,44.213],[63.997,43.622],[64.199,42.839],[64.984,42.641],[65.768,42.049],[66.557,41.456],[67.344,41.064],[67.932,40.278],[68.526,37.921],[69.307,37.33],[70.096,36.548],[71.077,35.956],[71.671,35.167],[72.257,34.384],[72.456,32.809],[72.456,31.235],[73.044,28.633],[73.044,27.105],[71.913,26.91],[70.487,27.105],[69.703,27.699],[66.951,28.876],[65.577,28.484],[64.786,28.484],[63.215,28.68],[61.639,28.68],[60.462,28.288],[60.066,27.503],[59.478,26.713],[59.478,25.929],[58.693,25.532],[58.299,24.749],[58.299,23.964],[57.513,23.374],[57.133,23.373],[56.725,23.374],[55.939,22.583],[55.35,21.798],[54.56,21.405],[53.973,20.619],[53.186,20.225],[52.79,20.225],[52.401,20.225],[51.612,19.638],[50.826,18.06],[50.63,17.277],[50.432,15.708],[49.646,15.112],[48.469,13.538],[47.876,12.753],[48.074,11.967],[48.074,11.179],[47.876,9.61],[47.29,8.824],[46.503,7.25],[46.108,6.461],[45.324,6.068],[44.928,5.281],[44.928,4.495],[44.928,2.92],[44.732,2.138],[44.141,1.353],[42.764,-0.223],[42.372,-1.01],[42.372,-2.586],[41.586,-4.154],[40.997,-4.939],[40.405,-5.726],[39.621,-6.318],[38.831,-8.086],[38.243,-8.876],[38.243,-9.658],[38.243,-10.447],[37.454,-11.034],[36.671,-11.432],[36.238,-11.442],[35.885,-11.432],[35.096,-12.019],[34.704,-12.019],[32.738,-11.233],[32.344,-11.233],[26.641,-12.607],[25.07,-12.214],[23.888,-12.414],[23.103,-13.2],[21.533,-14.378],[18.777,-15.363],[16.811,-14.969],[15.633,-15.263],[15.633,-13.396],[15.828,-12.607],[15.633,-10.25],[14.453,-10.054],[13.717,-10.054],[12.88,-10.054],[12.092,-10.84],[11.307,-11.626],[10.275,-11.822],[6.391,-11.822],[6,-12.607],[5.803,-13.396],[5.014,-13.789],[4.227,-14.378],[3.443,-14.575],[1.866,-14.969],[1.146,-14.957],[0.294,-14.969],[-1.279,-15.758],[-2.852,-17.131],[-3.047,-17.916],[-2.652,-18.707],[-1.867,-19.294],[-1.667,-20.079],[-2.064,-20.867],[-2.852,-21.26],[-3.638,-21.85],[-3.047,-22.636],[-2.26,-22.832],[-1.473,-23.028],[-1.667,-23.817],[-2.458,-24.012],[-4.029,-24.601]],\"c\":true},\"ix\":2},\"nm\":\"Path 84\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":84,\"ty\":\"sh\",\"ix\":85,\"ks\":{\"a\":0,\"k\":{\"i\":[[0.041,-0.016],[0.149,-0.103],[0.129,-0.101],[0.098,-0.145],[0.096,-0.121],[0.097,-0.128],[0.052,-0.094],[0.047,-0.121],[0,-0.293],[0,0],[0,0],[-0.027,0.347],[-0.025,0.123],[-0.05,0.122],[-0.072,0.15],[0,0],[-0.025,0.122],[-0.097,0.172],[-0.073,0.147],[-0.194,0.32],[-0.025,0.173],[0,0],[0,0],[0,0.149],[-0.023,0.222],[0.271,-0.025],[0.09,0]],\"o\":[[-0.171,0.074],[-0.146,0.097],[-0.123,0.097],[-0.099,0.147],[-0.1,0.122],[-0.075,0.094],[-0.049,0.1],[-0.1,0.272],[0,0],[0,0],[0,-0.346],[0,-0.145],[0.023,-0.121],[0.07,-0.146],[0,0],[0.05,-0.117],[0.077,-0.195],[0.078,-0.122],[0.195,-0.321],[0.075,-0.151],[0,0],[0,0],[0,-0.151],[0,-0.217],[-0.296,0],[-0.08,0],[-0.045,0]],\"v\":[[206.158,0.466],[205.861,0.861],[205.467,1.156],[205.077,1.448],[204.783,1.843],[204.587,2.239],[204.189,2.333],[204.094,2.725],[203.895,3.489],[203.895,6.856],[205.077,6.856],[205.077,5.97],[205.176,5.577],[205.274,5.185],[205.668,4.889],[205.861,4.495],[205.861,4.104],[206.254,3.71],[206.452,3.318],[207.139,2.531],[207.434,2.138],[207.434,1.744],[207.434,1.353],[207.236,1.03],[207.337,0.466],[206.55,0.466],[206.288,0.444]],\"c\":true},\"ix\":2},\"nm\":\"Path 85\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":85,\"ty\":\"sh\",\"ix\":86,\"ks\":{\"a\":0,\"k\":{\"i\":[[0.325,0],[0.488,-0.049],[0.345,0],[0.294,0],[0,0],[0.294,-0.047],[0.248,-0.101],[0,-0.489],[-0.394,-0.342],[-0.688,0],[-0.25,0.048],[-0.639,0.151],[-0.294,0],[-0.738,-0.588],[-0.242,-0.145],[-0.248,-0.098],[-0.294,-0.05],[-0.159,0.024],[-0.175,-0.048],[-0.294,-0.248],[-0.784,0],[0,0],[0.589,0.442],[0.785,0.048],[0,0],[0.27,-0.012],[0.343,0.024],[0.246,0.048],[0.246,0.148],[0.297,0.195],[0.291,0.151],[0.589,0.344],[0,0],[0.345,0.15],[0.135,0]],\"o\":[[-0.493,0],[-0.344,0.048],[-0.296,0],[0,0],[-0.346,0],[-0.244,0],[-0.392,0.197],[0,0.539],[0.491,0.393],[0.294,0],[0.636,-0.194],[0.248,-0.048],[0.984,0],[0.247,0.196],[0.198,0.152],[0.296,0.096],[0.169,0.048],[0.161,-0.024],[0.39,0.095],[0.591,0.491],[0,0],[-0.395,-0.641],[-0.592,-0.441],[0,0],[-0.345,-0.024],[-0.271,0.012],[-0.297,0],[-0.296,-0.098],[-0.294,-0.148],[-0.244,-0.147],[-0.592,-0.343],[0,0],[-0.295,-0.144],[-0.149,-0.065],[-0.27,0]],\"v\":[[-174.793,4.495],[-176.072,4.495],[-176.858,4.889],[-177.644,4.692],[-179.317,4.692],[-180.202,4.692],[-180.99,4.692],[-181.58,5.874],[-180.791,7.051],[-179.022,7.444],[-178.234,7.444],[-176.664,6.461],[-175.876,6.461],[-173.516,7.444],[-173.124,8.23],[-172.336,8.429],[-171.551,8.824],[-171.063,8.824],[-170.565,8.824],[-169.782,9.61],[-167.963,10.493],[-161.915,10.493],[-163.291,9.018],[-165.06,8.037],[-165.848,8.037],[-166.734,8.037],[-167.617,8.037],[-168.404,8.037],[-169.191,7.64],[-169.782,6.856],[-170.565,6.461],[-172.14,5.674],[-172.926,5.281],[-173.516,4.495],[-173.937,4.408]],\"c\":true},\"ix\":2},\"nm\":\"Path 86\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":86,\"ty\":\"sh\",\"ix\":87,\"ks\":{\"a\":0,\"k\":{\"i\":[[0.593,-0.097],[0,0],[-0.343,-0.194],[-0.343,-0.049],[0,0],[-0.247,0.046],[-0.389,0.149],[-0.247,0.052],[-0.293,0],[-0.294,0],[-0.295,0],[-0.591,0.052],[-0.59,0.05],[-0.293,0],[-0.296,0],[-0.59,0],[0,0],[-0.295,0.099],[0.146,0.295],[0.1,0.396],[0.933,0],[0,0],[0.49,0],[0,0],[0.342,-0.052],[0.293,0],[0.246,0.048],[0.345,0.146],[0.245,0.1],[0.346,0.099],[0.59,0],[0.639,0]],\"o\":[[0,0],[0.296,0.295],[0.296,0.151],[0,0],[0.292,0],[0.395,-0.097],[0.249,-0.053],[0.248,-0.051],[0.298,0],[0.296,0],[0.592,0],[0.591,-0.051],[0.295,0],[0.295,0],[0.588,0.05],[0,0],[0.343,0],[-0.196,-0.247],[-0.197,-0.397],[-0.936,0.197],[0,0],[-0.492,-0.049],[0,0],[-0.343,0.044],[-0.245,0.048],[-0.298,0],[-0.343,-0.099],[-0.244,-0.1],[-0.343,-0.146],[-0.54,-0.148],[-0.638,-0.048],[-0.589,0]],\"v\":[[-159.361,11.77],[-159.361,14.131],[-158.574,14.915],[-157.786,15.509],[-156.999,15.509],[-156.214,15.509],[-155.43,14.721],[-154.641,14.523],[-153.856,14.523],[-153.068,14.721],[-152.283,14.523],[-150.708,14.523],[-149.137,14.327],[-148.35,14.131],[-147.562,14.327],[-145.991,14.523],[-145.203,14.523],[-144.418,14.131],[-145.203,13.738],[-145.203,12.604],[-147.562,12.949],[-148.35,12.949],[-149.528,12.56],[-149.921,12.56],[-150.708,13.148],[-151.493,13.148],[-152.283,13.148],[-153.068,12.56],[-153.856,12.36],[-154.641,11.77],[-156.214,11.77],[-157.836,11.574]],\"c\":true},\"ix\":2},\"nm\":\"Path 87\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":87,\"ty\":\"sh\",\"ix\":88,\"ks\":{\"a\":0,\"k\":{\"i\":[[0,0],[0,-0.071],[0,-0.077],[0,-0.088],[0,-0.076],[-0.015,-0.095],[-0.015,-0.06],[-0.009,-0.074],[0,-0.148],[0.011,-0.062],[0.052,-0.1],[0.011,-0.078],[0,-0.158],[0,-0.355],[0.088,-0.06],[0.073,-0.033],[0.158,-0.072],[0.122,-0.099],[0.01,-0.111],[0,-0.099],[-0.009,-0.09],[-0.073,-0.108],[-0.112,-0.11],[-0.122,-0.088],[-0.099,-0.06],[-0.197,-0.113],[-0.09,-0.025],[-0.035,0.003],[-0.031,-0.007],[0,-0.309],[-0.034,-0.139],[-0.173,-0.085],[-0.086,-0.018],[-0.126,0],[0,0],[0,0],[0,0.188],[0,0],[-0.133,0.16],[-0.146,0.113],[-0.057,0.038],[-0.055,0.064],[-0.063,0.085],[-0.052,0.1],[-0.038,0.114],[-0.048,0.179],[-0.014,0.159],[0,0],[0,0.097],[0,0],[0.049,0.16],[0.025,0.075],[0.023,0.072],[0.008,0.061],[0.023,0.086],[0.023,0.088],[0.024,0.062],[0.052,0.072],[0.078,0.061],[0.097,0.048],[0.103,0],[0,0],[0.041,0],[0.086,0.044],[0.061,0.037],[0.075,0.053],[0.059,0.037],[0.175,0]],\"o\":[[0,0.076],[0,0.075],[0,0.085],[0,0.07],[0,0.097],[0,0.077],[0.01,0.078],[0.028,0.131],[0,0.075],[-0.024,0.107],[-0.035,0.071],[-0.024,0.145],[0,0.363],[0,0.111],[-0.074,0.051],[-0.148,0.089],[-0.146,0.073],[-0.073,0.06],[-0.009,0.097],[0,0.1],[0.01,0.124],[0.072,0.125],[0.111,0.111],[0.102,0.073],[0.187,0.122],[0.075,0.031],[0.029,0.006],[0.034,-0.003],[-0.136,0.285],[0,0.144],[0.063,0.182],[0.086,0.033],[0.108,0.023],[0,0],[0,0],[0,-0.18],[0,0],[0,-0.219],[0.124,-0.147],[0.061,-0.038],[0.064,-0.032],[0.059,-0.086],[0.057,-0.089],[0.047,-0.097],[0.06,-0.169],[0.036,-0.156],[0,0],[0,-0.101],[0,0],[0,-0.174],[-0.014,-0.074],[-0.027,-0.073],[-0.023,-0.061],[-0.032,-0.091],[-0.024,-0.086],[-0.023,-0.061],[-0.026,-0.085],[-0.05,-0.086],[-0.079,-0.077],[-0.074,-0.039],[0,0],[-0.046,-0.003],[-0.092,0],[-0.075,-0.037],[-0.072,-0.05],[-0.061,-0.034],[-0.135,-0.073],[0,0]],\"v\":[[204.365,13.441],[204.391,13.638],[204.339,13.837],[204.365,14.046],[204.339,14.23],[204.391,14.472],[204.391,14.668],[204.483,14.87],[204.535,15.26],[204.535,15.46],[204.339,15.708],[204.241,15.903],[204.189,16.316],[204.339,17.226],[204.141,17.422],[203.946,17.569],[203.504,17.767],[203.11,18.012],[202.962,18.259],[202.962,18.505],[202.962,18.752],[203.16,19.043],[203.405,19.389],[203.746,19.638],[203.993,19.833],[204.483,20.179],[204.684,20.324],[204.78,20.324],[204.879,20.324],[204.631,21.088],[204.73,21.457],[205.029,21.848],[205.274,21.899],[205.581,21.994],[206.452,21.994],[206.452,21.366],[206.353,20.9],[206.353,19.992],[206.647,19.488],[207.042,19.145],[207.236,19.043],[207.337,18.848],[207.535,18.605],[207.733,18.356],[207.829,18.06],[208.025,17.616],[208.124,17.178],[208.124,16.934],[208.173,16.686],[208.173,16.49],[208.124,16.048],[208.025,15.852],[207.926,15.655],[207.882,15.46],[207.78,15.211],[207.681,14.965],[207.634,14.77],[207.483,14.575],[207.283,14.377],[207.042,14.182],[206.793,14.08],[206.6,14.08],[206.47,14.077],[206.207,14.033],[206.011,13.934],[205.912,13.685],[205.715,13.59],[205.308,13.441]],\"c\":true},\"ix\":2},\"nm\":\"Path 88\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":88,\"ty\":\"sh\",\"ix\":89,\"ks\":{\"a\":0,\"k\":{\"i\":[[-0.011,-0.028],[0,0.024]],\"o\":[[0,-0.025],[-0.031,0.001]],\"v\":[[153.66,13.514],[153.658,13.441]],\"c\":true},\"ix\":2},\"nm\":\"Path 89\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":89,\"ty\":\"sh\",\"ix\":90,\"ks\":{\"a\":0,\"k\":{\"i\":[[0,-0.008],[0.005,0.014]],\"o\":[[0.007,0],[0,0.008]],\"v\":[[153.66,13.538],[153.66,13.514]],\"c\":true},\"ix\":2},\"nm\":\"Path 90\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":90,\"ty\":\"sh\",\"ix\":91,\"ks\":{\"a\":0,\"k\":{\"i\":[[0,0],[-0.439,-0.146],[-0.126,0.029],[-0.133,-0.077],[-0.244,-0.145],[-0.148,-0.248],[-0.122,-0.018],[-0.134,0.053],[-0.295,0.296],[0.244,0.148],[0.249,0.146],[0.343,0]],\"o\":[[0.298,0.396],[0.116,0.046],[0.145,-0.032],[0.293,0.145],[0.243,0.151],[0.11,-0.024],[0.148,0.021],[0.395,-0.199],[-0.149,-0.247],[-0.246,-0.146],[-0.295,-0.148],[0,0]],\"v\":[[-169.584,13.538],[-168.8,14.523],[-168.432,14.511],[-168.009,14.523],[-167.224,14.915],[-167.028,15.708],[-166.676,15.719],[-166.243,15.708],[-165.455,14.915],[-165.651,14.131],[-166.439,13.934],[-167.274,13.538]],\"c\":true},\"ix\":2},\"nm\":\"Path 91\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":91,\"ty\":\"sh\",\"ix\":92,\"ks\":{\"a\":0,\"k\":{\"i\":[[0.162,-0.09],[0.122,-0.072],[0.146,-0.048],[0.147,0],[0.294,0],[-0.342,-0.22],[-0.175,-0.073],[-0.151,-0.076],[-0.064,0.015],[-0.054,-0.041],[-0.075,-0.094],[-0.123,-0.117],[-0.076,-0.194],[-0.025,-0.122],[-0.05,-0.124],[-0.099,-0.125],[-0.124,-0.074],[-0.294,-0.221],[-0.078,-0.126],[-0.073,-0.172],[-0.022,-0.315],[0,0],[0,0.169],[0,0.293],[0,0.075],[0.346,0.345],[0.096,0.119],[0.073,0.123],[0.125,0.174],[0.172,0.126],[0.172,0.099],[0.069,-0.001],[0.026,0.068],[0,0],[0,0.17],[0,0],[0.147,0],[0.147,0],[0,0],[0.107,0]],\"o\":[[-0.146,0.068],[-0.123,0.072],[-0.124,0.025],[-0.294,0.025],[0.314,0.222],[0.149,0.077],[0.145,0.05],[0.055,0.021],[0.077,-0.016],[0.098,0.07],[0.098,0.126],[0.15,0.152],[0.023,0.125],[0.021,0.121],[0.049,0.145],[0.096,0.123],[0.297,0.218],[0.121,0.099],[0.095,0.145],[0.121,0.27],[0,0],[0,-0.17],[0,-0.297],[0,-0.079],[0,-0.514],[-0.1,-0.097],[-0.076,-0.097],[-0.098,-0.172],[-0.123,-0.168],[-0.174,-0.125],[-0.054,-0.031],[-0.088,0],[0,0],[-0.074,-0.144],[0,0],[-0.15,0],[-0.149,0],[0,0],[-0.129,0],[-0.157,0]],\"v\":[[209.499,22.39],[209.303,22.782],[208.91,22.979],[208.517,22.979],[207.535,23.175],[208.418,23.764],[208.814,24.06],[209.207,24.257],[209.392,24.249],[209.598,24.257],[209.598,24.647],[209.99,24.843],[210.386,25.235],[210.483,25.633],[210.483,26.028],[210.681,26.42],[211.072,26.617],[211.86,27.303],[212.257,27.503],[212.548,27.894],[212.646,28.729],[214.267,28.729],[214.217,28.288],[214.319,27.503],[214.267,27.327],[213.629,26.125],[213.238,25.929],[213.137,25.532],[212.844,25.041],[212.452,24.647],[211.957,24.354],[211.762,24.324],[211.566,24.257],[211.368,23.861],[211.467,23.448],[211.467,22.317],[211.072,22.39],[210.681,22.29],[210.309,22.29],[209.96,22.282]],\"c\":true},\"ix\":2},\"nm\":\"Path 92\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":92,\"ty\":\"sh\",\"ix\":93,\"ks\":{\"a\":0,\"k\":{\"i\":[[0,-0.243],[-0.196,-0.144],[-0.172,-0.046],[-0.148,0],[-0.27,0],[-0.071,-0.444],[-0.024,-0.147],[0,-0.369],[0.025,-0.243],[-0.024,-0.12],[0,-0.073],[-0.101,-0.074],[-0.17,-0.076],[-0.152,-0.025],[-0.294,0.052],[0.047,-0.166],[0.022,-0.12],[0,-0.17],[-0.074,-0.121],[-0.149,-0.073],[-0.15,-0.03],[-0.148,0],[-0.122,0.045],[-0.072,0.097],[-0.12,0.05],[-0.273,0],[0,0],[0.269,0.17],[0.097,0.046],[0.099,0.148],[0.046,0.126],[0.071,0.122],[0.145,0.102],[0.145,0.072],[0.097,0.074],[0.073,0.15],[0.02,0.148],[0.052,0.269],[0.098,0.145],[0.295,0.196],[0.272,0.196],[0.149,0.103],[0.148,0.099],[0.121,0.023]],\"o\":[[0,0.27],[0.149,0.124],[0.119,0.028],[0.271,0.028],[0,0.47],[0.025,0.145],[0.097,0.343],[0,0.246],[0,0.151],[0,0.056],[0,0.152],[0.145,0.119],[0.146,0.073],[0.266,0.046],[-0.077,0.177],[-0.026,0.124],[-0.026,0.149],[0,0.15],[0.073,0.124],[0.147,0.078],[0.122,0.021],[0.147,0],[0.125,-0.05],[0.074,-0.099],[0.247,-0.097],[0,0],[0,-0.343],[-0.099,-0.05],[-0.145,-0.103],[-0.049,-0.103],[-0.051,-0.124],[-0.076,-0.152],[-0.122,-0.074],[-0.12,-0.048],[-0.125,-0.098],[-0.076,-0.149],[-0.05,-0.272],[-0.027,-0.174],[-0.198,-0.297],[-0.269,-0.17],[-0.149,-0.099],[-0.148,-0.097],[-0.123,-0.076],[-0.023,0.248]],\"v\":[[204.587,24.084],[204.879,24.749],[205.274,25.041],[205.668,25.041],[206.353,25.041],[206.353,26.223],[206.55,26.617],[206.746,27.574],[206.647,28.185],[206.55,28.577],[206.647,28.777],[206.944,29.075],[207.337,29.37],[207.733,29.566],[208.517,29.465],[208.223,29.858],[208.223,30.253],[208.025,30.644],[208.124,31.038],[208.517,31.235],[208.91,31.435],[209.303,31.435],[209.696,31.435],[209.696,31.038],[210.089,30.939],[210.777,30.939],[210.777,29.786],[210.287,29.075],[209.892,28.979],[209.499,28.68],[209.404,28.288],[209.404,27.894],[209.009,27.597],[208.616,27.402],[208.223,27.303],[208.025,26.91],[207.829,26.517],[207.829,25.732],[207.535,25.338],[206.844,24.647],[206.061,24.257],[205.762,23.861],[205.371,23.568],[204.684,23.469]],\"c\":true},\"ix\":2},\"nm\":\"Path 93\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":93,\"ty\":\"sh\",\"ix\":94,\"ks\":{\"a\":0,\"k\":{\"i\":[[0.073,-0.123],[0.15,-0.391],[0.052,-0.127],[0.078,-0.15],[0.073,-0.121],[0.097,-0.151],[0.073,-0.121],[0.072,-0.123],[0.078,-0.171],[0.028,-0.126],[0,-0.123],[0.075,-0.151],[0.125,-0.147],[0.12,-0.073],[0.221,-0.171],[0.099,-0.073],[0.174,-0.1],[0.123,-0.022],[0.057,0.011],[0.073,-0.042],[0.099,-0.148],[0.099,-0.296],[-0.146,0],[-0.147,0],[-0.122,0.048],[-0.121,0.127],[-0.072,0.165],[-0.047,0.119],[-0.27,0.178],[-0.125,0.051],[-0.145,0.026],[-0.346,0],[-0.027,0.27],[-0.128,0.272],[-0.242,0.22],[-0.124,0.095],[-0.077,0.124],[-0.025,0.176],[-0.025,0.347],[0,0.147],[0,0.346]],\"o\":[[-0.243,0.369],[-0.024,0.124],[-0.073,0.173],[-0.072,0.146],[-0.097,0.146],[-0.074,0.121],[-0.072,0.124],[-0.077,0.149],[-0.048,0.121],[-0.021,0.122],[-0.021,0.172],[-0.072,0.146],[-0.095,0.123],[-0.225,0.173],[-0.099,0.078],[-0.144,0.125],[-0.122,0.046],[-0.052,0.011],[-0.078,-0.015],[-0.145,0.074],[-0.17,0.245],[0.147,0],[0.174,0],[0.124,0],[0.172,-0.073],[0.121,-0.124],[0.049,-0.124],[0.124,-0.296],[0.122,-0.071],[0.151,-0.049],[0.32,-0.074],[0,-0.295],[0.05,-0.296],[0.148,-0.29],[0.123,-0.101],[0.122,-0.103],[0.097,-0.15],[0.073,-0.316],[0,-0.148],[0.025,-0.346],[-0.072,0.148]],\"v\":[[203.602,25.338],[202.91,26.223],[202.91,26.617],[202.616,27.009],[202.421,27.402],[202.029,27.699],[201.832,28.092],[201.639,28.484],[201.24,28.777],[201.24,29.172],[201.24,29.566],[200.947,29.96],[200.65,30.351],[200.457,30.744],[199.668,30.939],[199.569,31.331],[199.176,31.631],[198.785,31.726],[198.621,31.715],[198.389,31.726],[198.095,32.121],[197.803,32.907],[198.168,33.003],[198.585,32.907],[198.98,32.907],[199.373,32.611],[199.668,32.221],[199.668,31.827],[200.258,31.135],[200.65,31.038],[201.046,30.842],[201.931,30.842],[201.931,30.055],[202.227,29.269],[202.715,28.484],[203.11,28.288],[203.504,28.092],[203.602,27.597],[203.602,26.713],[203.701,26.323],[203.798,24.942]],\"c\":true},\"ix\":2},\"nm\":\"Path 94\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":94,\"ty\":\"sh\",\"ix\":95,\"ks\":{\"a\":0,\"k\":{\"i\":[[0,0],[0.15,-0.019],[0.126,-0.051],[0.096,-0.124],[0.025,-0.124],[0,-0.347],[0,0],[0.292,-0.196],[0.174,-0.071],[0.173,-0.05],[0.172,-0.019],[0.32,-0.048],[0.149,0],[0.295,0],[0,0],[0.37,-0.068],[0.119,0],[0.294,0],[0.048,-0.194],[0.051,-0.146],[0.047,-0.144],[0.047,-0.124],[0.101,-0.126],[0.247,-0.274],[0.07,-0.169],[0.051,-0.126],[0.098,-0.198],[0.023,-0.124],[-0.125,-0.022],[-0.07,0.006],[-0.059,-0.01],[-0.198,-0.026],[-0.099,-0.586],[-0.027,-0.127],[-0.124,-0.296],[-0.023,-0.126],[0,-0.222],[0.075,-0.196],[0.127,-0.122],[0.046,-0.223],[0,-0.147],[0,-0.296],[0.095,-0.319],[0.146,-0.121],[0.172,-0.048],[0.068,0.006],[0.058,-0.011],[0.294,-0.027],[0,0],[-0.05,-0.175],[-0.025,-0.125],[0.416,-0.267],[0,0],[0.12,-0.027],[0.246,-0.195],[0.098,-0.149],[0,-0.609],[0,0],[0.052,-0.471],[0,-0.296],[0,-0.145],[0,-0.169],[0,-0.146],[-0.167,-0.295],[-0.148,0.048],[-0.248,0],[-0.345,-0.022],[0,0],[0.122,-0.076],[0.295,-0.052],[0.149,0],[0.201,-0.024],[0.076,-0.271],[0.095,-0.075],[0.123,-0.098],[0.147,-0.098],[0.074,-0.167],[0,-0.218],[-0.049,-0.202],[-0.074,-0.175],[-0.029,-0.175],[0,0],[-0.029,-0.346],[-0.05,-0.125],[-0.145,-0.121],[-0.144,-0.047],[-0.12,0],[-0.126,-0.026],[-0.149,-0.047],[-0.121,-0.074],[-0.125,-0.172],[-0.077,-0.146],[-0.099,-0.17],[-0.098,-0.121],[-0.073,-0.152],[-0.048,-0.151],[-0.025,-0.295],[-0.026,-0.127],[-0.077,-0.12],[-0.093,-0.122],[-0.098,-0.125],[-0.074,-0.145],[0,-0.293],[0,0],[-0.075,-0.127],[-0.075,-0.124],[-0.1,-0.146],[-0.025,-0.494],[-0.199,-0.438],[-0.075,-0.122],[-0.1,-0.098],[-0.124,-0.098],[-0.121,-0.071],[-0.145,-0.097],[-0.099,-0.122],[-0.049,-0.153],[0,-0.147],[-0.025,-0.393],[-0.026,-0.173],[-0.05,-0.125],[-0.073,-0.151],[-0.171,-0.295],[-0.1,-0.124],[-0.147,-0.12],[-0.148,-0.075],[-0.17,-0.102],[-0.174,-0.053],[-0.124,-0.025],[-0.128,0.012],[-0.136,-0.025],[-0.149,-0.075],[-0.144,-0.146],[-0.147,-0.101],[-0.125,-0.078],[-0.147,-0.095],[-0.345,-0.168],[-0.293,-0.101],[-0.148,-0.049],[-0.269,-0.317],[-0.099,-0.12],[-0.122,-0.151],[-0.296,-0.243],[-0.172,-0.023],[-0.121,0],[-0.292,0],[0,0],[0.025,-0.32],[0,-0.219],[0,-0.074],[0,0],[0,-0.368],[0,0],[0.025,-0.152],[0.025,-0.124],[0.022,-0.175],[0,-0.273],[0,-0.045],[0,0],[0,-0.147],[0,-0.221],[0,0],[0,0],[0.026,-0.22],[0,-0.344],[-0.025,-0.172],[0,0],[0,0],[0.022,-0.148],[0.022,-0.124],[0.026,-0.125],[0.049,-0.149],[0.073,-0.172],[0.145,-0.373],[0.022,-0.196],[0,-0.292],[0,-0.098],[-0.025,-0.392],[0,-0.146],[0,-0.175],[0,-0.195],[0.022,-0.124],[0.073,-0.197],[0.047,-0.124],[0.076,-0.148],[0.12,-0.174],[0,-0.494],[0,0],[0,-0.121],[-0.022,-0.121],[-0.073,-0.149],[-0.074,-0.15],[0,-0.644],[0.123,-0.586],[0,-0.15],[0.047,-0.442],[0.122,-0.296],[0.05,-0.123],[0.049,-0.195],[0.049,-0.171],[0.049,-0.148],[0.097,-0.15],[0.124,-0.172],[0,-0.149],[0,0],[0,-0.198],[0,-0.247],[0,-0.097],[0.022,-0.124],[0.076,-0.175],[0.075,-0.126],[0.078,-0.175],[0.026,-0.196],[0.148,-0.144],[0.074,-0.145],[0.023,-0.145],[0,-0.146],[-0.072,-0.193],[-0.026,-0.123],[-0.052,-0.3],[0,-0.148],[0,-0.148],[0,-0.317],[0.318,-0.517],[0.099,-0.147],[0.075,-0.145],[0,-0.298],[-0.025,-0.127],[-0.072,-0.173],[0,0],[0,-0.344],[0,-0.151],[0.244,-0.121],[0.099,-0.152],[0.049,-0.124],[0.049,-0.124],[0.05,-0.203],[0.026,-0.123],[0,-0.218],[-0.146,-0.167],[-0.124,-0.079],[-0.2,0],[0,0],[0,0],[0,0],[0,0],[0.146,-0.123],[0.123,-0.103],[0.126,-0.122],[0,0],[0.127,-0.145],[0.073,-0.149],[0.024,-0.122],[0,-0.151],[0,-0.49],[0.02,-0.469],[0.019,-0.148],[0,0],[0.121,0.1],[0.068,0],[0.041,0.068],[0,0.12],[0,0],[0.049,0.295],[0.049,0],[0.22,0],[0,0],[-0.099,-0.104],[-0.1,-0.123],[-0.072,-0.146],[-0.048,-0.147],[0,-0.12],[0,-0.147],[0,-0.292],[0,0],[0.099,0.072],[0.073,0.123],[0.049,0.125],[0.073,0.098],[0.197,0],[0.172,0],[0,0],[0.222,-0.147],[0.075,-0.122],[0,-0.198],[-0.469,-0.075],[-0.147,0],[-0.119,-0.03],[-0.064,0.007],[-0.064,-0.015],[-0.148,-0.098],[0.073,-0.121],[0,-0.216],[0,-0.169],[-0.027,-0.148],[-0.371,-0.146],[-0.296,-0.146],[0.024,-0.169],[0.024,-0.151],[0.292,-0.028],[0.125,-0.028],[0.297,-0.052],[0.112,0.008],[0.151,-0.029],[0.149,-0.075],[0,-0.223],[0,0],[-0.022,-0.149],[-0.022,-0.122],[-0.022,-0.121],[-0.073,-0.124],[0,-0.246],[0,0],[0.051,-0.172],[0,-0.169],[-0.196,-0.273],[0,-0.343],[0,-0.17],[-0.075,-0.126],[-0.119,-0.092],[-0.123,-0.099],[-0.049,-0.12],[0,0],[0,0],[-0.146,0],[0,0],[-0.144,-0.024],[0.147,-0.12],[0.296,-0.145],[-0.322,-0.127],[-0.072,0.01],[-0.056,-0.014],[-0.064,0.006],[-0.064,-0.015],[-0.097,-0.071],[0,0],[-0.098,-0.145],[-0.075,-0.169],[-0.052,-0.174],[-0.046,-0.127],[-0.144,-0.102],[-0.394,-0.266],[-0.099,-0.145],[-0.048,-0.12],[-0.048,-0.126],[-0.124,-0.077],[-0.047,-0.198],[-0.029,-0.123],[-0.027,-0.222],[-0.298,-0.031],[-0.126,-0.055],[-0.098,-0.073],[-0.05,-0.096],[-0.32,-0.127],[-0.141,0.021],[-0.123,-0.022],[-0.145,-0.025],[-0.121,-0.029],[-0.127,-0.025],[-0.169,-0.05],[-0.146,0.015],[-0.125,-0.012],[0,0],[-0.169,-0.048],[-0.198,0],[0,0],[-0.17,0],[-0.145,0.124],[-0.073,0.102],[-0.15,0.069],[-0.22,0],[-0.294,0.02],[0.223,0.149],[0.091,-0.021],[0.078,0.024],[0.321,0.074],[0.126,0],[0.15,0],[0.345,0],[0.145,0],[0,0],[0.295,0.024],[0.098,0.078],[0.096,0.143],[0.049,0.169],[0.022,0.296],[0.022,0.127],[0.049,0.121],[0.073,0.169],[0.047,0.144],[0,0.121],[0,0],[0.025,0.148],[0.025,0.265],[0.027,0.118],[0.074,0.15],[0,0.272],[0,0.243],[0,0],[0.048,0.15],[0,0],[-0.026,0.37],[0,0],[0.026,0.247],[0,0.142],[-0.122,0.246],[-0.147,0.093],[-0.124,0.026],[-0.273,0.073],[-0.099,0.168],[-0.196,0.61],[-0.047,0.127],[-0.122,0.126],[-0.146,0.074],[-0.171,0.072],[-0.067,-0.011],[-0.061,0.025],[-0.097,0.103],[0,0],[0.222,0],[0.318,0.1],[0.121,0.101],[0.05,0.099],[0.173,0.073],[0.122,0.049],[0.147,0.099],[0.097,0.171],[0.047,0.173],[0,0.295],[0,0],[-0.071,0.15],[-0.147,0.148],[-0.54,0],[0,0],[0,0],[-0.075,0.098],[-0.097,0.145],[-0.121,0.299],[-0.026,0.145],[0,0.146],[0,0.124],[-0.026,0.126],[-0.223,0],[-0.394,0],[-0.196,0.098],[-0.049,0.194],[0,0.145],[0,0],[0.052,0.148],[0.061,0.005],[0.074,-0.012],[0.148,-0.075],[0.199,-0.093],[0.077,0.01],[0.052,-0.009],[0.025,0.171],[0.025,0.295],[0.022,0.295],[0,0.152],[0,0],[0,0],[-0.293,-0.146],[-0.392,0],[0,0],[0,0.173],[0.027,0.175],[0,0],[-0.022,0.121],[-0.075,0.148],[-0.071,0.145],[0,0.143],[0.026,0.124],[0.071,0.294],[0,0.147],[0,0],[0,0],[-0.171,0],[0,0],[-0.268,0.073],[-0.344,0],[0,0],[-0.341,0],[-0.126,0.141],[-0.05,0.123],[-0.05,0.124],[-0.071,0.145],[-0.197,0.245],[-0.178,0.098],[-0.269,0.195],[-0.099,0.15],[-0.098,0.173],[0,0],[0,0.175],[0,0],[0,0],[0.149,0.032],[0,0],[0.025,0.125],[0.05,0.122],[0.123,0.097],[0.17,0.099],[0.297,0.222],[0.076,0.128],[0.098,0.149],[0.025,0.12],[0,0],[-0.32,-0.1],[-0.345,-0.176],[-0.174,-0.019],[-0.071,0.006],[-0.058,-0.009],[-0.467,0],[-0.127,0.025],[-0.196,0.051],[-0.3,0],[-0.271,0.078],[-0.168,0.074],[-0.097,0.073],[-0.098,0.148],[-0.147,0.293],[-0.073,0.124],[-0.173,0.102],[-0.124,0.052],[-0.123,0.169],[-0.049,0.17],[-0.022,0.122],[0,0.298],[-0.176,0.344],[-0.024,0.169],[-0.024,0.466],[0,0.126],[-0.024,0.125],[-0.073,0.119],[-0.295,0.122],[-0.172,0],[-0.172,-0.023],[0.047,-0.147],[0.027,-0.121],[0,-0.169],[-0.049,-0.168],[-0.223,0.224],[-0.072,0.122],[-0.148,0.298],[-0.074,0.122],[-0.099,0.169],[-0.073,0.145],[-0.074,0.172],[-0.025,0.124],[-0.027,0.149],[-0.027,0.123],[-0.073,0.126],[-0.147,0.097],[-0.126,0.044],[-0.126,0.025],[-0.149,0.097],[-0.099,0.197],[0,0.174],[0,0.296],[0.049,0.273],[0.048,0.293],[0,0.147],[0,0.195],[0,0.348],[-0.097,0.314],[-0.075,0.149],[-0.121,0.123],[-0.175,0.126],[-0.296,0.166],[-0.126,0.046],[-0.097,0.122],[-0.149,0.193],[-0.096,0.148],[-0.123,0.144],[-0.146,0.097],[-0.196,0],[0,0],[-0.27,0.194],[-0.122,0.148],[-0.1,0.126],[-0.124,0.127],[0,0],[-0.048,0.196],[-0.023,0.124],[-0.17,0.126],[-0.097,0.077],[-0.098,0.126],[-0.195,0.32],[-0.122,0.292],[-0.05,0.125],[-0.146,0.122],[-0.198,0.174],[-0.049,0.296],[-0.199,0.467],[-0.074,0.125],[-0.097,0.123],[-0.075,0.097],[-0.072,0.148],[-0.023,0.144],[0,0.125],[0,0.295],[-0.024,0.465],[0,0.121],[0,0],[-0.048,0.15],[-0.1,0.347],[-0.027,0.124],[0,0.121],[-0.023,0.151],[0,0.219],[0,0],[0,0.393],[0,0],[0,0.147],[0,0],[-0.122,0.029],[-0.065,-0.007],[-0.063,0.015],[-0.169,0.072],[-0.122,0.076],[-0.172,0.498],[-0.048,0.176],[-0.173,0.248],[-0.147,0.074],[-0.071,-0.016],[-0.059,0.026],[-0.121,0.025],[-0.343,0.246],[-0.097,0.095],[-0.143,0.296],[-0.317,0.639],[-0.047,0.121],[-0.1,0.119],[-0.076,0.171],[-0.053,0.125],[0,0],[-0.052,0.396],[0,0.22],[0.025,0.197],[0.074,0.174],[0.146,0.369],[0.027,0.293],[0,0.295],[0.127,0.296],[0.148,0.101],[0.347,0],[0,0],[0.148,0.027],[0.145,0.028],[0.08,-0.007],[0.086,0.014],[0.123,0.026],[0.269,0.169],[0.099,0.118],[0.049,0.123],[0.099,0.296],[0.024,0.121],[0.122,0.121],[0.17,0.125],[0.175,0.098],[0.123,0.024],[0.219,0],[0.393,0],[0,0],[0.172,0.078],[0.346,0.168],[0.148,0.047],[0.322,0],[0.37,-0.05],[0.047,-0.468],[0.221,0.024],[0.123,0],[0.122,0.027],[0.148,0.078],[0.123,0.075],[0.073,0.122],[-0.149,0.07],[-0.123,0.072],[-0.146,0.074],[0,0],[0.068,-0.006],[0.058,0.009],[0.148,0.024],[0.174,0.048],[0.148,0.098],[0.173,0.123],[0.15,0.1],[0.123,0.047],[0.223,0.017],[0.196,0],[0.121,0],[0,0],[0.145,0.048],[0.223,0.101],[0.345,0],[0.318,-0.048],[0,0],[0,0],[0,0],[-0.075,0.12],[-0.149,0.123],[-0.149,0.128],[-0.047,0.096],[-0.024,0.292],[0.27,0.102],[0.169,0.053],[0.271,0.074],[0.195,0],[0,0],[0,0],[0.197,-0.025],[0.025,-0.295],[0.025,-0.121],[0.417,0],[0.274,0.028],[0,0],[0,0.145],[0,0.148],[-0.392,0.195],[-0.097,0.073],[-0.048,0.148],[-0.021,0.293],[-0.026,0.294],[0,0.222],[0.026,0.42],[0.222,0],[0.147,0],[0.124,0],[0,0],[0.027,0.146],[0.048,0.171],[0.048,0.123],[0.072,0.197],[0.051,0.1],[0.148,0.098],[0.075,-0.017],[0.057,0.025],[0.297,0.145],[0.072,0.145],[0.221,0.193],[0.121,0.075],[0.148,0.077],[0.173,0.075],[0.174,-0.025],[0.138,0.013],[0.174,0.073],[0.173,0.074],[0,0],[0.244,0],[0.169,-0.075],[0.149,-0.1],[0.393,0],[0,0],[0.147,0],[0.271,0.073],[0.296,0.124],[0.122,0.052],[0.272,0.145],[0.294,0.248],[0.098,0.15],[0.025,0.194],[0,0.465],[0.174,0.023],[0.069,-0.007],[0.059,0.011],[0.173,0.07],[0.124,0.071],[0.146,0.145],[0.096,0.119],[0.096,0.074],[0.075,-0.016],[0.057,0.025],[0.147,0.125],[0.049,0.172],[0.023,0.122],[0,0.347],[0,0],[0.27,-0.075],[0.297,-0.025],[0.147,0],[0.05,0.174],[0.024,0.124],[0.027,0.393],[0,0],[-0.17,0.076],[0.22,0.094],[0.176,0.048],[0.148,0.053],[0.175,0.047],[0,0],[0,0],[0.147,0.051],[0.294,0],[0.145,-0.194],[0.051,-0.122],[0.048,-0.121],[0.071,-0.122],[0.344,0],[0.174,0.096],[0.097,0.127],[0.099,0.149],[0.171,0.075],[0.319,0.075],[0.196,0],[0,0],[0.145,0.021],[0.397,0.075],[0,0],[0.295,0.023],[0.148,0.053],[0.147,0.1],[0.171,0.077],[0.122,0.027],[0.54,0.102],[0.024,-0.293],[0.099,-0.122],[0.17,-0.024],[0.129,0.012],[0.135,-0.024],[0.172,-0.073],[0.147,-0.123],[0,-0.218],[0,-0.149],[-0.027,-0.121],[0,-0.122],[-0.025,-0.149],[0,-0.219],[0.025,-0.222],[0.048,-0.175],[0.123,0.124],[0.098,0.122],[0.148,0.391],[0,0.344],[-0.022,0.12],[-0.051,0.175],[-0.025,0.125],[0,0.146],[0,0.248],[-0.321,0.294],[-0.124,0.102],[-0.121,0.098],[-0.122,0.073],[0,0]],\"o\":[[-0.169,0],[-0.122,0.029],[-0.145,0.072],[-0.075,0.099],[-0.075,0.318],[0,0],[-0.37,0],[-0.148,0.099],[-0.171,0.075],[-0.17,0.05],[-0.32,0.074],[-0.124,0],[-0.291,0.022],[0,0],[-0.271,0.271],[-0.123,0.029],[-0.273,0.023],[0,0.222],[-0.048,0.151],[-0.047,0.148],[-0.051,0.124],[-0.051,0.173],[-0.244,0.266],[-0.097,0.124],[-0.05,0.123],[-0.077,0.17],[-0.049,0.117],[0,0],[0.064,0.014],[0.064,-0.007],[0.173,0.048],[0,0.612],[0,0.123],[0.096,0.315],[0.048,0.123],[0.05,0.195],[0,0.22],[-0.07,0.177],[-0.171,0.17],[-0.026,0.124],[-0.026,0.293],[0,0.343],[-0.052,0.196],[-0.147,0.122],[-0.062,0.014],[-0.067,-0.006],[-0.275,0.051],[0,0],[0.076,0.171],[0.025,0.12],[-0.467,0.222],[0,0],[-0.123,0.021],[-0.297,0.072],[-0.149,0.123],[-0.322,0.493],[0,0],[0.05,0.472],[-0.02,0.293],[0,0.148],[0,0.172],[0,0.173],[0.049,0.318],[0.149,-0.074],[0.219,-0.075],[0.341,0],[0,0],[-0.097,0.124],[-0.271,0.168],[-0.124,0.023],[-0.198,0.023],[0,0.295],[-0.02,0.123],[-0.121,0.095],[-0.147,0.126],[-0.148,0.098],[-0.072,0.176],[0,0.22],[0.05,0.169],[0.075,0.166],[0,0],[0.021,0.341],[0,0.147],[0.073,0.166],[0.121,0.096],[0.128,0.026],[0.122,0],[0.147,0.026],[0.148,0.052],[0.173,0.096],[0.073,0.124],[0.075,0.172],[0.072,0.124],[0.124,0.147],[0.073,0.117],[0.073,0.269],[0,0.148],[0.022,0.121],[0.071,0.145],[0.099,0.12],[0.1,0.123],[0.121,0.244],[0,0],[0.074,0.145],[0.074,0.123],[0.099,0.147],[0.291,0.368],[0.026,0.491],[0.046,0.148],[0.074,0.123],[0.098,0.098],[0.124,0.096],[0.146,0.099],[0.124,0.078],[0.099,0.12],[0.025,0.117],[0.025,0.396],[0,0.196],[0.025,0.125],[0.074,0.17],[0.174,0.271],[0.073,0.147],[0.096,0.125],[0.124,0.101],[0.174,0.098],[0.149,0.07],[0.122,0.024],[0.136,0.025],[0.129,-0.013],[0.17,0.022],[0.174,0.097],[0.124,0.125],[0.124,0.07],[0.148,0.097],[0.32,0.198],[0.269,0.126],[0.147,0.049],[0.367,0.174],[0.099,0.127],[0.122,0.172],[0.246,0.293],[0.147,0.128],[0.122,0.024],[0.271,0.024],[0,0],[0,0.318],[0,0.222],[0,0.074],[0,0],[0.025,0.371],[0,0],[0,0.173],[-0.025,0.122],[-0.025,0.149],[-0.027,0.269],[0,0.046],[0,0],[0,0.174],[0.025,0.198],[0,0],[0,0],[-0.025,0.196],[-0.049,0.345],[0.074,0.174],[0,0],[0,0],[-0.025,0.148],[-0.027,0.125],[-0.027,0.12],[-0.025,0.144],[-0.048,0.174],[-0.173,0.367],[-0.049,0.171],[-0.025,0.294],[0,0.104],[0,0.393],[0,0.146],[0,0.174],[0,0.194],[0,0.15],[-0.025,0.196],[-0.049,0.124],[-0.073,0.174],[-0.122,0.194],[-0.295,0.368],[0,0],[0,0.15],[0,0.126],[0.051,0.145],[0.07,0.171],[0.294,0.539],[0,0.611],[-0.023,0.127],[-0.051,0.465],[-0.051,0.32],[-0.049,0.122],[-0.073,0.198],[-0.05,0.17],[-0.05,0.148],[-0.05,0.171],[-0.124,0.172],[-0.049,0.097],[0,0],[0,0.198],[0,0.244],[0,0.097],[0,0.147],[-0.05,0.171],[-0.075,0.144],[-0.099,0.17],[-0.072,0.171],[-0.144,0.147],[-0.125,0.12],[-0.073,0.148],[-0.025,0.125],[0,0.222],[0.024,0.127],[0.098,0.294],[0.024,0.123],[0,0.145],[0.024,0.32],[0,0.64],[-0.074,0.147],[-0.095,0.149],[-0.122,0.247],[0,0.146],[0.048,0.173],[0,0],[0.15,0.296],[0,0.143],[-0.297,0.023],[-0.174,0.099],[-0.075,0.095],[-0.05,0.122],[-0.075,0.192],[-0.02,0.121],[-0.047,0.196],[0,0.249],[0.098,0.126],[0.146,0.096],[0,0],[0,0],[0,0],[0,0],[-0.126,0.125],[-0.126,0.097],[-0.147,0.119],[0,0],[-0.096,0.125],[-0.122,0.148],[-0.077,0.121],[-0.027,0.123],[0,0.492],[0,0.469],[0,0.169],[0,0],[-0.146,-0.098],[-0.045,-0.031],[-0.085,0.001],[-0.074,-0.123],[0,0],[0,-0.296],[-0.05,0.025],[-0.196,0.05],[0,0],[0.121,0.077],[0.121,0.12],[0.099,0.124],[0.076,0.126],[0.026,0.124],[0,0.122],[0.028,0.296],[0,0],[-0.12,-0.024],[-0.126,-0.072],[-0.076,-0.102],[-0.05,-0.122],[-0.125,-0.149],[-0.169,0],[0,0],[-0.274,0.049],[-0.124,0.076],[-0.097,0.153],[0,0.489],[0.121,0.022],[0.146,0],[0.059,0.011],[0.072,-0.006],[0.171,0.047],[-0.049,0.123],[-0.099,0.176],[0,0.177],[0,0.151],[0.415,0],[0.294,0.122],[-0.046,0.146],[-0.029,0.147],[-0.297,0],[-0.148,0],[-0.293,0.066],[-0.118,0.011],[-0.144,-0.012],[-0.173,0.023],[-0.173,0.099],[0,0],[0,0.168],[0,0.117],[0.026,0.125],[0.026,0.147],[0.123,0.171],[0,0],[-0.025,0.171],[-0.046,0.147],[0,0.347],[0.197,0.272],[0,0.171],[0,0.15],[0.072,0.121],[0.125,0.1],[0.098,0.073],[0,0],[0,0],[0.146,-0.024],[0,0],[0.147,0],[-0.072,0.173],[-0.246,0.198],[0.245,0.269],[0.066,0.025],[0.062,-0.009],[0.06,0.011],[0.071,-0.006],[0.102,0.022],[0,0],[0.099,0.125],[0.097,0.146],[0.072,0.172],[0.02,0.124],[0.072,0.169],[0.37,0.269],[0.148,0.102],[0.074,0.097],[0.052,0.125],[0.073,0.146],[0.17,0.122],[0.025,0.119],[0.023,0.196],[0.294,0.018],[0.148,0],[0.12,0.042],[0.099,0.075],[0.194,0.297],[0.148,0.052],[0.116,-0.017],[0.146,0.023],[0.127,0.024],[0.12,0.02],[0.168,0.049],[0.157,0.043],[0.108,-0.012],[0,0],[0.171,0.02],[0.174,0.049],[0,0],[0.173,0],[0.198,0],[0.097,-0.071],[0.126,-0.145],[0.171,-0.098],[0.294,0],[-0.047,-0.297],[-0.081,-0.05],[-0.075,0.016],[-0.296,-0.123],[-0.121,-0.027],[-0.122,0],[-0.342,-0.026],[-0.149,0],[0,0],[-0.295,0],[-0.149,0],[-0.148,-0.121],[-0.098,-0.151],[-0.077,-0.273],[0,-0.145],[-0.027,-0.121],[-0.075,-0.174],[-0.072,-0.149],[-0.023,-0.126],[0,0],[-0.023,-0.145],[-0.024,-0.268],[0,-0.127],[-0.02,-0.149],[-0.126,-0.22],[0,-0.244],[0,0],[0,-0.17],[0,0],[0,-0.368],[0,0],[0,-0.248],[0,-0.148],[0,-0.297],[0.099,-0.173],[0.099,-0.073],[0.27,-0.073],[0.196,-0.048],[0.343,-0.566],[0.026,-0.128],[0.074,-0.149],[0.099,-0.095],[0.146,-0.071],[0.061,-0.022],[0.068,0.012],[0.15,-0.073],[0,0],[-0.223,-0.023],[-0.345,0],[-0.146,-0.046],[-0.101,-0.076],[-0.121,-0.17],[-0.122,-0.048],[-0.172,-0.072],[-0.176,-0.097],[-0.099,-0.145],[-0.072,-0.266],[0,0],[0,-0.177],[0.099,-0.197],[0.37,-0.366],[0,0],[0,0],[0,-0.149],[0.096,-0.151],[0.173,-0.271],[0.05,-0.144],[0.025,-0.124],[0,-0.148],[0,-0.12],[0.05,-0.193],[0.392,0],[0.248,0],[0.172,-0.097],[0.025,-0.126],[0,0],[0,-0.169],[-0.073,0.012],[-0.06,-0.007],[-0.174,0.025],[-0.195,0.097],[-0.071,0.031],[-0.057,-0.009],[-0.099,-0.143],[-0.048,-0.272],[-0.022,-0.29],[0,-0.145],[0,0],[0,0],[0.348,0],[0.346,0.172],[0,0],[0,-0.173],[0,-0.197],[0,0],[0,-0.146],[0.051,-0.145],[0.072,-0.146],[0.051,-0.126],[0,-0.152],[-0.05,-0.296],[-0.028,-0.122],[0,0],[0,0],[0.173,0],[0,0],[0.292,0],[0.32,-0.078],[0,0],[0.343,0],[0.199,0],[0.073,-0.101],[0.049,-0.126],[0.072,-0.171],[0.174,-0.295],[0.12,-0.148],[0.293,-0.172],[0.151,-0.098],[0.098,-0.144],[0,0],[0.073,-0.142],[0,0],[0,0],[-0.147,0],[0,0],[0,-0.147],[-0.025,-0.123],[-0.049,-0.175],[-0.147,-0.126],[-0.324,-0.201],[-0.12,-0.099],[-0.097,-0.145],[-0.05,-0.098],[0,0],[0.342,0],[0.368,0.121],[0.173,0.073],[0.063,0.016],[0.064,-0.006],[0.44,0.099],[0.147,0],[0.194,-0.048],[0.271,-0.044],[0.293,0],[0.171,-0.044],[0.123,-0.047],[0.151,-0.125],[0.195,-0.269],[0.074,-0.148],[0.099,-0.173],[0.121,-0.067],[0.197,-0.095],[0.097,-0.151],[0.027,-0.122],[0.05,-0.272],[0.222,-0.293],[0.069,-0.17],[0.073,-0.444],[0,-0.151],[0,-0.122],[0.051,-0.147],[0.173,-0.273],[0.148,-0.047],[0.169,0],[-0.05,0.149],[-0.027,0.119],[-0.022,0.148],[0,0.197],[0.293,-0.144],[0.1,-0.095],[0.172,-0.273],[0.072,-0.144],[0.098,-0.173],[0.073,-0.128],[0.075,-0.177],[0.051,-0.122],[0.05,-0.149],[0.024,-0.124],[0.048,-0.149],[0.101,-0.147],[0.1,-0.075],[0.119,-0.052],[0.169,-0.048],[0.172,-0.101],[0.073,-0.148],[0.024,-0.294],[0,-0.294],[-0.05,-0.296],[-0.024,-0.123],[0,-0.195],[-0.023,-0.345],[0,-0.345],[0.027,-0.155],[0.073,-0.172],[0.149,-0.145],[0.269,-0.194],[0.124,-0.055],[0.147,-0.078],[0.147,-0.173],[0.098,-0.145],[0.098,-0.172],[0.123,-0.148],[0.146,-0.1],[0,0],[0.368,0],[0.147,-0.098],[0.099,-0.123],[0.121,-0.15],[0,0],[0.025,-0.224],[0.028,-0.125],[0.049,-0.197],[0.098,-0.047],[0.123,-0.096],[0.249,-0.297],[0.176,-0.267],[0.051,-0.125],[0.1,-0.17],[0.221,-0.172],[0.198,-0.169],[0.026,-0.539],[0.048,-0.15],[0.072,-0.118],[0.072,-0.097],[0.096,-0.125],[0.075,-0.149],[0.026,-0.126],[0.026,-0.269],[0,-0.466],[0,-0.147],[0,0],[0.026,-0.145],[0.097,-0.34],[0.022,-0.121],[0.024,-0.121],[0,-0.126],[0.027,-0.224],[0,0],[-0.023,-0.399],[0,0],[0,-0.149],[0,0],[0.145,-0.028],[0.059,-0.011],[0.07,0.006],[0.173,-0.047],[0.15,-0.073],[0.42,-0.295],[0.049,-0.172],[0.076,-0.291],[0.099,-0.146],[0.063,-0.037],[0.063,0.014],[0.124,-0.051],[0.394,-0.147],[0.097,-0.049],[0.223,-0.226],[0.324,-0.633],[0.052,-0.124],[0.077,-0.176],[0.098,-0.124],[0.045,-0.124],[0,0],[0.174,-0.34],[0.025,-0.22],[0,-0.223],[-0.022,-0.171],[-0.169,-0.342],[-0.052,-0.271],[-0.022,-0.295],[0,-0.346],[-0.071,-0.173],[-0.27,-0.171],[0,0],[-0.173,0],[-0.148,-0.023],[-0.087,-0.012],[-0.081,0.007],[-0.122,-0.026],[-0.322,-0.098],[-0.121,-0.078],[-0.07,-0.099],[-0.122,-0.267],[-0.025,-0.127],[-0.048,-0.174],[-0.147,-0.148],[-0.171,-0.122],[-0.121,-0.074],[-0.197,-0.075],[-0.397,0],[0,0],[-0.196,0],[-0.342,-0.147],[-0.147,-0.072],[-0.294,-0.098],[-0.367,0],[0,0.464],[-0.224,0],[-0.15,0],[-0.126,0],[-0.149,-0.024],[-0.149,-0.073],[-0.099,-0.075],[0.146,-0.123],[0.122,-0.075],[0.148,-0.073],[0,0],[-0.078,-0.013],[-0.061,0.005],[-0.149,-0.026],[-0.172,-0.051],[-0.171,-0.048],[-0.174,-0.1],[-0.145,-0.1],[-0.096,-0.048],[-0.196,-0.1],[-0.171,-0.028],[-0.147,0],[0,0],[-0.148,-0.03],[-0.221,-0.074],[-0.294,-0.118],[-0.321,0],[0,0],[0,0],[0,0],[0.05,-0.123],[0.097,-0.179],[0.122,-0.1],[0.099,-0.068],[0.15,-0.221],[-0.293,-0.025],[-0.171,-0.049],[-0.273,-0.099],[-0.169,-0.047],[0,0],[0,0],[-0.197,0],[0,0.294],[0,0.146],[-0.148,0.391],[-0.269,0],[0,0],[0,-0.145],[0,-0.148],[0.443,0],[0.123,-0.046],[0.125,-0.097],[0.1,-0.27],[0.025,-0.296],[0.026,-0.221],[0,-0.414],[-0.22,0],[-0.145,0],[-0.125,0],[0,0],[0,-0.176],[-0.022,-0.171],[-0.021,-0.122],[-0.074,-0.196],[-0.049,-0.123],[-0.097,-0.147],[-0.052,-0.037],[-0.067,0.014],[-0.297,-0.121],[-0.12,-0.098],[-0.146,-0.272],[-0.099,-0.076],[-0.124,-0.074],[-0.146,-0.072],[-0.177,-0.072],[-0.115,0.017],[-0.197,0],[-0.194,-0.097],[0,0],[-0.221,-0.099],[-0.219,0],[-0.172,0.075],[-0.316,0.218],[0,0],[-0.151,0],[-0.294,-0.027],[-0.316,-0.097],[-0.121,-0.05],[-0.294,-0.116],[-0.319,-0.198],[-0.15,-0.124],[-0.095,-0.169],[-0.075,-0.445],[-0.196,-0.021],[-0.062,-0.013],[-0.066,0.006],[-0.174,-0.052],[-0.147,-0.072],[-0.17,-0.096],[-0.124,-0.124],[-0.075,-0.104],[-0.054,-0.038],[-0.067,0.015],[-0.17,-0.072],[-0.12,-0.095],[-0.05,-0.124],[-0.074,-0.319],[0,0],[-0.266,0.054],[-0.296,0.096],[-0.119,0],[-0.194,0],[-0.048,-0.122],[-0.1,-0.366],[0,0],[0.169,-0.049],[-0.148,-0.197],[-0.176,-0.076],[-0.148,-0.048],[-0.168,-0.049],[0,0],[0,0],[-0.148,-0.051],[-0.27,-0.073],[-0.271,0],[-0.074,0.103],[-0.048,0.12],[-0.05,0.147],[-0.173,0.271],[-0.197,0],[-0.147,-0.074],[-0.097,-0.121],[-0.097,-0.147],[-0.297,-0.146],[-0.174,-0.024],[0,0],[-0.175,0],[-0.37,-0.1],[0,0],[-0.291,0],[-0.174,0],[-0.171,-0.049],[-0.146,-0.095],[-0.124,-0.047],[-0.494,-0.172],[0,0.294],[0,0.197],[-0.1,0.125],[-0.137,0.025],[-0.128,-0.013],[-0.174,0.026],[-0.169,0.077],[-0.148,0.125],[0,0.148],[0,0.147],[0.023,0.122],[0.023,0.15],[0.025,0.194],[0,0.224],[-0.025,0.195],[-0.124,-0.101],[-0.125,-0.124],[-0.27,-0.346],[-0.119,-0.323],[0,-0.15],[0.051,-0.173],[0.026,-0.121],[0.023,-0.123],[0,-0.245],[0,-0.465],[0.12,-0.097],[0.122,-0.095],[0.123,-0.098],[0,0],[0,0]],\"v\":[[-156.459,25.264],[-156.875,25.357],[-157.27,25.459],[-157.659,25.655],[-157.759,26.048],[-157.759,26.936],[-159.993,26.936],[-160.805,27.424],[-161.2,27.719],[-161.693,27.916],[-162.184,28.111],[-163.068,28.305],[-163.463,28.41],[-164.247,28.41],[-164.247,30.668],[-165.036,31.256],[-165.425,31.359],[-166.214,31.359],[-166.214,31.946],[-166.412,32.339],[-166.605,32.733],[-166.605,33.127],[-167.002,33.426],[-167.788,34.013],[-168.18,34.306],[-168.18,34.7],[-168.574,35.094],[-168.6,35.463],[-168.6,35.856],[-168.396,35.858],[-168.208,35.856],[-167.716,35.956],[-167.716,37.526],[-167.617,37.921],[-167.224,38.708],[-167.129,39.102],[-167.028,39.69],[-167.129,40.278],[-167.521,40.577],[-168.009,40.97],[-168.009,41.359],[-167.914,42.149],[-168.009,43.032],[-168.404,43.426],[-168.7,43.818],[-168.898,43.819],[-169.09,43.818],[-169.878,43.919],[-169.978,44.508],[-169.683,44.904],[-169.683,45.294],[-170.863,45.978],[-170.959,46.772],[-171.351,46.868],[-172.14,47.163],[-172.434,47.556],[-172.73,49.124],[-174.403,49.124],[-174.306,50.309],[-174.403,51.095],[-174.5,51.487],[-174.403,51.904],[-174.5,52.373],[-174.11,53.157],[-173.713,52.964],[-173.097,52.768],[-172.239,52.862],[-172.239,53.647],[-172.434,54.046],[-173.221,54.339],[-173.614,54.339],[-174.11,54.436],[-174.11,55.224],[-174.205,55.618],[-174.599,55.811],[-174.99,56.107],[-175.385,56.401],[-175.482,56.992],[-175.385,57.587],[-175.09,57.98],[-174.793,58.372],[-174.793,58.765],[-174.793,59.648],[-174.793,60.043],[-174.5,60.433],[-174.11,60.63],[-173.713,60.63],[-173.318,60.63],[-172.926,60.825],[-172.534,61.025],[-172.14,61.417],[-171.944,61.811],[-171.648,62.3],[-171.453,62.693],[-171.058,62.992],[-170.863,63.385],[-170.863,64.169],[-170.764,64.566],[-170.665,64.956],[-170.274,65.252],[-169.978,65.645],[-169.584,65.94],[-169.485,66.725],[-169.485,67.612],[-169.191,68.104],[-168.995,68.497],[-168.6,68.79],[-168.11,69.97],[-168.009,71.249],[-167.815,71.642],[-167.421,71.839],[-167.224,72.231],[-166.832,72.426],[-166.439,72.72],[-166.045,72.92],[-165.848,73.316],[-165.848,73.705],[-165.848,74.687],[-165.75,75.18],[-165.75,75.575],[-165.358,75.868],[-164.964,76.654],[-164.764,77.05],[-164.374,77.342],[-163.982,77.54],[-163.49,77.838],[-163.095,78.132],[-162.702,78.229],[-162.309,78.229],[-161.915,78.229],[-161.522,78.524],[-161.131,78.916],[-160.836,79.312],[-160.439,79.508],[-160.049,79.799],[-159.262,80.388],[-158.475,80.687],[-158.081,80.883],[-157.197,81.469],[-156.999,81.865],[-156.608,82.261],[-155.918,83.043],[-155.624,83.438],[-155.232,83.438],[-154.47,83.438],[-154.47,87.545],[-154.641,88.354],[-154.542,88.941],[-154.641,89.139],[-154.641,89.53],[-154.445,90.491],[-154.445,90.712],[-154.641,91.108],[-154.641,91.499],[-154.835,91.895],[-154.74,92.558],[-154.835,92.677],[-154.835,93.171],[-154.641,93.564],[-154.641,94.129],[-154.641,94.351],[-154.641,94.742],[-154.936,95.234],[-154.936,96.119],[-154.641,96.614],[-154.641,97.004],[-154.641,97.397],[-154.835,97.792],[-154.835,98.189],[-154.936,98.58],[-155.133,98.972],[-155.329,99.463],[-155.819,100.446],[-156.015,100.936],[-156.015,101.695],[-156.114,101.921],[-156.015,102.904],[-155.918,103.295],[-156.015,103.766],[-155.918,104.278],[-156.015,104.672],[-156.313,105.166],[-156.409,105.558],[-156.707,105.953],[-157.098,106.443],[-157.687,107.573],[-157.687,107.817],[-157.592,108.21],[-157.592,108.606],[-157.393,109],[-157.098,109.394],[-156.608,110.968],[-156.903,112.533],[-156.999,112.932],[-156.999,114.109],[-157.294,114.998],[-157.393,115.389],[-157.786,115.782],[-157.786,116.274],[-157.984,116.667],[-158.278,117.058],[-158.671,117.454],[-158.966,117.749],[-158.966,118.533],[-158.867,119.027],[-158.966,119.642],[-158.867,119.91],[-158.867,120.306],[-159.164,120.698],[-159.361,121.092],[-159.755,121.485],[-159.853,121.975],[-160.439,122.466],[-160.836,122.761],[-161.03,123.152],[-161.131,123.547],[-160.736,123.938],[-160.736,124.334],[-160.439,125.123],[-160.439,125.515],[-160.344,125.908],[-160.344,126.742],[-160.638,128.365],[-160.935,128.758],[-161.326,129.053],[-161.423,129.843],[-161.423,130.234],[-161.131,130.627],[-160.935,131.02],[-160.541,131.834],[-160.638,132.2],[-161.423,132.295],[-161.817,132.594],[-161.915,132.986],[-162.014,133.38],[-162.409,133.775],[-162.409,134.166],[-162.508,134.753],[-162.31,135.341],[-161.915,135.546],[-161.497,135.839],[-160.245,135.839],[-159.95,132.295],[-158.475,132.295],[-158.475,133.473],[-158.768,133.87],[-159.164,134.071],[-159.46,134.459],[-159.46,136.525],[-159.755,136.916],[-160.144,137.213],[-160.245,137.607],[-160.291,137.999],[-160.144,139.276],[-160.144,140.458],[-160.291,140.852],[-160.736,140.555],[-161.03,140.162],[-161.209,140.132],[-161.423,140.065],[-161.423,139.673],[-161.423,139.276],[-161.522,138.49],[-161.522,138.688],[-162.112,138.688],[-162.112,139.865],[-161.718,139.969],[-161.522,140.357],[-161.131,140.652],[-160.935,141.047],[-160.935,141.44],[-160.836,141.835],[-160.836,142.617],[-161.131,142.422],[-161.522,142.326],[-161.915,142.131],[-161.915,141.735],[-162.014,141.342],[-162.409,141.047],[-162.799,141.247],[-162.799,142.422],[-163.587,142.617],[-163.786,143.013],[-164.176,143.31],[-163.291,144.195],[-162.898,144.093],[-162.508,144.195],[-162.32,144.193],[-162.112,144.195],[-161.817,144.586],[-161.915,144.977],[-162.31,145.37],[-162.112,145.763],[-162.112,146.159],[-161.03,146.26],[-160.245,146.649],[-160.439,147.042],[-160.439,147.441],[-161.227,147.441],[-161.622,147.441],[-162.409,147.732],[-162.752,147.727],[-163.192,147.732],[-163.587,148.026],[-163.982,148.422],[-163.982,148.618],[-163.786,149.012],[-163.786,149.403],[-163.786,149.796],[-163.392,149.994],[-163.095,150.584],[-163.095,150.781],[-163.392,151.172],[-163.587,151.564],[-162.996,152.256],[-162.606,153.039],[-162.996,153.236],[-162.898,153.63],[-162.508,153.824],[-162.112,154.023],[-162.112,154.416],[-162.898,154.812],[-162.702,155.301],[-162.31,155.205],[-161.522,155.205],[-161.131,155.301],[-161.227,155.792],[-162.014,156.187],[-161.326,156.878],[-161.115,156.882],[-160.935,156.878],[-160.747,156.876],[-160.541,156.878],[-160.541,157.171],[-160.935,157.464],[-160.638,157.857],[-160.245,158.153],[-160.144,158.644],[-160.245,159.039],[-159.853,159.334],[-158.671,159.821],[-158.278,160.117],[-158.181,160.51],[-158.081,160.908],[-157.687,161.102],[-157.197,161.4],[-157.294,161.791],[-157.197,162.381],[-156.409,162.482],[-156.015,162.482],[-155.624,162.576],[-155.624,162.968],[-154.936,163.66],[-154.506,163.671],[-154.149,163.66],[-153.759,163.854],[-153.362,163.955],[-152.967,164.052],[-152.578,164.348],[-152.136,164.36],[-151.791,164.348],[-151.396,164.348],[-151.006,164.639],[-150.485,164.742],[-147.366,164.742],[-146.974,164.937],[-146.581,164.639],[-146.484,164.245],[-146.087,163.906],[-145.497,163.955],[-144.714,163.906],[-144.909,163.164],[-145.171,163.154],[-145.4,163.164],[-146.188,162.775],[-146.581,162.775],[-146.974,162.677],[-147.858,162.677],[-148.249,162.576],[-148.249,161.691],[-149.038,161.691],[-149.431,161.691],[-149.823,161.4],[-149.921,160.908],[-150.117,160.117],[-150.117,159.724],[-150.117,159.334],[-150.512,159.039],[-150.708,158.644],[-150.708,158.252],[-150.708,157.857],[-150.905,157.464],[-150.905,156.682],[-151.006,156.287],[-151.2,155.891],[-151.669,155.4],[-151.493,154.812],[-151.493,154.416],[-151.691,154.023],[-151.691,152.745],[-151.592,151.812],[-149.627,151.812],[-149.627,151.172],[-149.727,150.781],[-149.627,149.994],[-149.333,149.601],[-148.939,149.502],[-148.152,149.403],[-147.759,149.012],[-147.17,147.441],[-147.071,147.042],[-146.776,146.649],[-146.383,146.453],[-145.991,146.159],[-145.796,146.16],[-145.598,146.159],[-145.4,145.763],[-145.4,144.977],[-145.991,144.878],[-146.875,144.878],[-147.265,144.68],[-147.366,144.29],[-147.759,143.896],[-148.152,143.799],[-148.544,143.503],[-148.939,143.112],[-149.234,142.718],[-149.333,141.93],[-149.333,141.542],[-149.137,141.144],[-148.743,140.752],[-147.538,140.065],[-145.203,140.065],[-145.203,137.879],[-145.103,137.508],[-144.714,137.213],[-144.319,136.424],[-144.122,136.032],[-144.122,135.641],[-144.219,135.245],[-144.122,134.851],[-143.729,134.459],[-142.745,134.658],[-142.155,134.459],[-141.762,134.071],[-141.762,133.676],[-141.762,133.277],[-141.961,132.887],[-142.158,132.888],[-142.352,132.887],[-142.745,133.083],[-143.139,133.473],[-143.365,133.482],[-143.531,133.473],[-144.236,133.229],[-144.236,132.44],[-144.331,131.654],[-144.431,131.286],[-144.431,130.084],[-143.77,130.084],[-142.958,130.375],[-142.146,130.969],[-139.712,130.969],[-139.513,130.572],[-139.811,130.179],[-139.811,129.787],[-139.811,129.394],[-139.613,129.001],[-139.221,128.808],[-139.221,128.415],[-139.221,128.019],[-139.513,127.232],[-139.613,126.863],[-139.613,125.953],[-137.77,125.953],[-137.354,125.854],[-136.564,125.854],[-135.781,125.759],[-134.969,125.465],[-133.051,125.465],[-132.241,125.759],[-131.846,125.465],[-131.749,125.07],[-131.65,124.675],[-131.358,124.284],[-130.865,123.497],[-130.37,123.2],[-129.587,122.709],[-129.29,122.315],[-128.995,121.923],[-128.801,121.527],[-128.602,121.159],[-128.602,119.959],[-128.995,119.959],[-129.389,119.856],[-129.389,119.073],[-129.389,118.678],[-129.486,118.288],[-129.882,117.993],[-130.37,117.697],[-131.161,117.006],[-131.552,116.811],[-131.846,116.418],[-131.846,116.026],[-130.298,116.026],[-129.389,116.222],[-128.602,116.811],[-128.207,117.103],[-128.001,117.106],[-127.814,117.103],[-126.637,117.302],[-126.241,117.302],[-125.852,116.907],[-125.061,116.907],[-124.276,116.907],[-123.885,116.614],[-123.493,116.516],[-123.194,116.122],[-122.802,115.337],[-122.607,114.944],[-122.212,114.547],[-121.819,114.45],[-121.327,114.159],[-121.034,113.765],[-120.935,113.37],[-120.935,112.582],[-120.245,111.797],[-119.951,111.407],[-119.951,110.228],[-119.854,109.83],[-119.854,109.436],[-119.658,109.047],[-118.969,108.453],[-118.574,108.259],[-118.184,108.453],[-118.378,108.848],[-118.478,109.24],[-118.673,109.633],[-118.378,110.025],[-117.591,109.633],[-117.395,109.24],[-117.003,108.453],[-116.806,108.063],[-116.411,107.672],[-116.216,107.279],[-115.921,106.884],[-115.822,106.488],[-115.626,106.097],[-115.626,105.703],[-115.431,105.306],[-115.137,104.916],[-114.74,104.82],[-114.348,104.717],[-113.954,104.427],[-113.561,104.028],[-113.365,103.637],[-113.365,102.851],[-113.365,102.063],[-113.66,101.279],[-113.66,100.885],[-113.759,100.394],[-113.759,99.509],[-113.759,98.627],[-113.561,98.23],[-113.169,97.935],[-112.775,97.542],[-111.988,97.056],[-111.594,96.955],[-111.398,96.559],[-111.005,96.068],[-110.712,95.674],[-110.417,95.183],[-110.021,94.889],[-109.607,94.593],[-107.686,94.593],[-106.876,94.103],[-106.486,93.807],[-106.286,93.414],[-105.892,93.118],[-101.076,93.118],[-100.978,92.531],[-100.978,92.136],[-100.585,91.74],[-100.191,91.643],[-99.995,91.249],[-99.406,90.464],[-98.915,89.679],[-98.915,89.283],[-98.618,88.891],[-97.833,88.695],[-97.635,87.907],[-97.34,86.337],[-97.142,85.94],[-96.947,85.548],[-96.553,85.451],[-96.358,85.058],[-96.163,84.666],[-96.163,84.27],[-96.064,83.485],[-96.064,82.305],[-95.964,81.91],[-95.964,81.517],[-95.766,81.125],[-95.374,80.239],[-95.276,79.846],[-95.178,79.454],[-95.081,79.059],[-95.081,78.47],[-95.081,77.883],[-95.276,76.897],[-95.276,76.013],[-95.374,75.645],[-95.374,73.261],[-94.982,73.16],[-94.792,73.162],[-94.589,73.16],[-94.195,72.868],[-93.803,72.671],[-92.917,71.587],[-92.819,71.096],[-92.522,70.309],[-92.228,69.916],[-92.021,69.912],[-91.835,69.916],[-91.443,69.819],[-90.655,69.032],[-90.263,68.937],[-89.872,68.145],[-88.986,66.477],[-88.887,66.085],[-88.493,65.79],[-88.098,65.495],[-87.999,65.099],[-87.805,64.706],[-87.312,63.822],[-87.312,63.233],[-87.312,62.643],[-87.611,62.249],[-88.098,61.365],[-88.493,60.381],[-88.493,59.596],[-88.594,58.711],[-88.887,58.316],[-89.699,57.924],[-91.615,57.924],[-92.031,57.825],[-92.423,57.629],[-92.669,57.63],[-92.917,57.629],[-93.309,57.53],[-94.098,57.139],[-94.491,56.943],[-94.589,56.544],[-94.883,55.762],[-94.883,55.368],[-95.276,55.073],[-95.766,54.777],[-96.163,54.383],[-96.553,54.285],[-97.142,54.188],[-98.151,54.481],[-100.559,54.481],[-101.076,54.383],[-101.863,53.795],[-102.257,53.599],[-103.068,53.501],[-104.026,53.599],[-104.073,54.777],[-104.615,54.777],[-105.008,54.679],[-105.4,54.679],[-105.796,54.481],[-106.188,54.285],[-106.286,53.892],[-105.991,53.501],[-105.598,53.402],[-105.206,53.107],[-105.4,52.715],[-105.616,52.714],[-105.796,52.715],[-106.188,52.517],[-106.68,52.418],[-107.072,52.123],[-107.566,51.828],[-107.861,51.435],[-108.253,51.34],[-108.845,51.046],[-109.335,51.046],[-109.727,50.949],[-110.12,50.949],[-110.513,50.747],[-111.104,50.449],[-112.013,50.253],[-112.823,50.353],[-112.823,52.221],[-114.445,52.221],[-114.445,51.435],[-114.348,51.046],[-113.954,50.65],[-113.66,50.253],[-113.268,50.157],[-113.169,49.373],[-113.954,49.271],[-114.348,48.975],[-115.137,48.779],[-115.626,48.583],[-116.043,48.583],[-116.411,48.583],[-116.905,48.681],[-116.905,49.471],[-116.905,49.862],[-117.789,50.449],[-118.478,50.353],[-118.478,49.566],[-118.378,49.176],[-118.451,48.779],[-117.297,48.681],[-116.905,48.583],[-116.708,48.191],[-116.708,47.405],[-116.608,46.619],[-116.51,46.052],[-116.608,44.994],[-117.201,45.047],[-117.591,44.946],[-117.888,44.994],[-117.888,42.859],[-118.085,42.489],[-118.184,41.997],[-118.281,41.604],[-118.673,41.211],[-118.673,40.818],[-118.969,40.423],[-119.168,40.419],[-119.361,40.423],[-120.501,39.91],[-120.892,39.713],[-121.188,38.928],[-121.581,38.829],[-121.977,38.631],[-122.27,38.235],[-122.779,38.214],[-123.154,38.235],[-123.647,38.042],[-124.138,37.749],[-124.531,37.552],[-125.122,37.256],[-125.708,37.356],[-126.007,37.749],[-127.036,37.843],[-127.676,37.843],[-128.069,37.749],[-128.857,37.649],[-129.645,37.256],[-130.036,37.154],[-130.823,36.668],[-131.706,36.175],[-132.003,35.778],[-132.297,35.292],[-132.297,34.109],[-132.789,34.013],[-132.99,34.013],[-133.181,34.013],[-133.576,33.718],[-133.969,33.522],[-134.359,33.127],[-134.753,32.934],[-134.753,32.537],[-134.954,32.532],[-135.148,32.537],[-135.639,32.241],[-136.031,31.946],[-136.129,31.554],[-136.129,30.668],[-136.526,30.668],[-137.31,30.867],[-138.1,31.16],[-138.492,31.256],[-138.982,31.061],[-138.982,30.668],[-139.082,29.687],[-138.587,29.586],[-138.197,29.294],[-138.587,28.804],[-139.082,28.704],[-139.475,28.506],[-139.966,28.41],[-140.85,29.097],[-141.049,29.097],[-141.44,28.898],[-142.177,28.704],[-142.816,28.898],[-142.917,29.294],[-143.012,29.687],[-143.21,30.08],[-143.898,30.668],[-144.389,30.572],[-144.585,30.175],[-144.88,29.782],[-145.176,29.39],[-146.06,29.097],[-146.576,29.001],[-148.589,29.001],[-149.008,28.804],[-149.995,28.605],[-149.995,27.424],[-150.778,27.424],[-151.173,27.228],[-151.665,27.031],[-151.958,26.636],[-152.351,26.538],[-153.727,26.244],[-153.727,27.031],[-153.925,27.523],[-154.219,27.916],[-154.615,27.917],[-155.006,27.916],[-155.401,28.211],[-155.792,28.506],[-156.186,28.898],[-156.087,29.294],[-155.988,29.687],[-155.988,30.08],[-155.792,30.474],[-155.792,31.061],[-155.792,31.653],[-155.988,32.146],[-156.382,31.946],[-156.579,31.554],[-157.171,30.572],[-157.367,29.687],[-157.367,29.294],[-157.071,28.898],[-156.972,28.506],[-156.875,28.111],[-157.171,27.523],[-156.481,26.538],[-156.087,26.244],[-155.792,25.852],[-155.401,25.655],[-155.596,25.264]],\"c\":true},\"ix\":2},\"nm\":\"Path 95\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":95,\"ty\":\"sh\",\"ix\":96,\"ks\":{\"a\":0,\"k\":{\"i\":[[0.078,-0.171],[0,0],[0.075,-0.1],[0.318,-0.079],[0.147,0],[0.168,-0.073],[0.121,-0.17],[0.1,-0.069],[0.295,0],[0.12,0.023],[0.147,0.096],[0.273,-0.096],[0.101,-0.071],[0.101,-0.076],[0.146,-0.051],[0.122,0],[0.121,-0.024],[0.117,-0.074],[0.125,-0.147],[0,-0.172],[0,0],[0,0],[-0.023,0.172],[0,0],[0,0],[-0.045,0.098],[-0.123,0.072],[-0.171,0.051],[-0.342,0],[-0.468,-0.025],[0,0],[-0.096,-0.272],[-0.097,-0.097],[-0.15,-0.078],[-0.072,0.009],[-0.056,-0.013],[-0.176,-0.073],[-0.194,-0.075],[-0.079,0.02],[-0.057,-0.07],[-0.096,-0.126],[-0.096,-0.099],[-0.078,0.022],[-0.055,-0.022],[-0.168,-0.069],[0,0],[0,0],[0.077,0.12],[0.048,0.144],[0.024,0.12],[0.05,0.273],[-0.198,0],[-0.174,-0.022],[-0.126,-0.022],[-0.151,0],[0,0],[0,0],[0,0],[0.047,0.149],[0.069,0.125],[0.321,0]],\"o\":[[0,0],[-0.054,0.124],[-0.193,0.247],[-0.121,0.02],[-0.194,0.019],[-0.177,0.072],[-0.049,0.096],[-0.219,0.201],[-0.146,0],[-0.174,-0.025],[-0.296,0.026],[-0.122,0.051],[-0.095,0.073],[-0.123,0.098],[-0.124,0.048],[-0.122,0],[-0.147,0.048],[-0.152,0.098],[-0.096,0.125],[0,0],[0,0],[0.07,-0.175],[0,0],[0,0],[0,-0.124],[0.051,-0.096],[0.148,-0.077],[0.319,-0.101],[0.467,0],[0,0],[0,0.293],[0.051,0.148],[0.097,0.098],[0.065,0.025],[0.062,-0.009],[0.174,0.046],[0.195,0.102],[0.073,0.021],[0.104,-0.026],[0.1,0.121],[0.077,0.096],[0.055,0.054],[0.064,-0.017],[0.153,0.072],[0,0],[0,0],[0,-0.171],[-0.073,-0.126],[-0.05,-0.123],[-0.072,-0.276],[0.17,-0.046],[0.194,0],[0.123,0.024],[0.12,0.027],[0,0],[0,0],[0,0],[0,-0.168],[-0.05,-0.143],[-0.176,-0.243],[-0.219,0]],\"v\":[[214.121,30.842],[213.926,31.235],[213.822,31.631],[213.04,32.025],[212.646,31.927],[212.257,32.221],[211.86,32.611],[211.759,33.003],[210.975,33.204],[210.582,33.204],[210.483,32.611],[209.696,32.707],[209.303,32.809],[209.303,33.204],[208.91,33.399],[208.517,33.399],[208.124,33.399],[207.733,33.596],[207.434,33.987],[207.236,34.356],[207.236,36.348],[207.634,36.645],[207.926,36.251],[207.926,35.856],[207.926,35.463],[207.926,35.069],[208.321,34.973],[208.714,34.678],[209.574,34.577],[210.777,34.678],[210.777,35.463],[210.777,36.251],[210.975,36.645],[211.368,36.843],[211.579,36.848],[211.759,36.843],[212.157,37.134],[212.646,37.431],[212.879,37.413],[213.137,37.431],[213.43,37.825],[213.43,38.217],[213.639,38.229],[213.822,38.217],[214.217,38.507],[214.61,38.412],[214.61,37.649],[214.512,37.236],[214.121,37.038],[214.121,36.645],[213.926,35.856],[214.319,35.56],[214.811,35.756],[215.204,35.856],[215.598,35.856],[215.887,35.463],[215.499,34.678],[215.499,31.752],[215.4,31.331],[215.204,30.939],[214.512,30.448]],\"c\":true},\"ix\":2},\"nm\":\"Path 96\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":96,\"ty\":\"sh\",\"ix\":97,\"ks\":{\"a\":0,\"k\":{\"i\":[[0.049,-0.171],[0.026,-0.119],[0,-0.168],[0,-0.148],[0,-0.172],[0,-0.176],[0.024,-0.147],[0.049,-0.172],[0,-0.396],[-0.222,-0.517],[-0.343,-0.175],[-0.173,-0.052],[-0.322,0],[-0.439,0.028],[0,0.297],[0,0.169],[0,0.172],[0.024,0.295],[0,0],[0,0],[0.07,0.146],[0.097,0.148],[0.098,0.127],[0.1,0.124],[0.122,0.144],[0.028,0.169],[0.027,0.345],[0,0]],\"o\":[[-0.027,0.125],[-0.027,0.149],[0,0.148],[0,0.172],[0,0.171],[0,0.17],[-0.027,0.169],[-0.122,0.369],[0,0.566],[0.148,0.345],[0.173,0.072],[0.294,0.102],[0.442,0],[0,-0.291],[0,-0.173],[0,-0.173],[-0.023,-0.296],[0,0],[0,0],[-0.03,-0.17],[-0.076,-0.152],[-0.075,-0.123],[-0.101,-0.146],[-0.101,-0.122],[-0.12,-0.147],[-0.071,-0.318],[0,0],[-0.124,0.15]],\"v\":[[128.296,30.939],[128.197,31.331],[128.296,31.752],[128.197,32.121],[128.394,32.514],[128.296,32.934],[128.394,33.399],[128.098,33.792],[128.001,34.825],[128.197,36.251],[128.983,36.843],[129.376,37.134],[130.188,37.236],[131.293,37.134],[131.342,36.348],[131.293,35.883],[131.342,35.463],[131.149,34.678],[131.149,34.281],[131.149,33.888],[130.855,33.5],[130.558,33.104],[130.361,32.707],[129.967,32.415],[129.671,32.025],[129.376,31.631],[129.279,30.744],[128.691,30.644]],\"c\":true},\"ix\":2},\"nm\":\"Path 97\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":97,\"ty\":\"sh\",\"ix\":98,\"ks\":{\"a\":0,\"k\":{\"i\":[[0.074,-0.122],[0.147,-0.125],[0.174,-0.076],[0.272,-0.096],[0.143,-0.145],[0.097,-0.172],[0.073,-0.174],[0.051,-0.125],[0.072,-0.147],[0.121,-0.147],[0.102,-0.12],[0.169,-0.07],[0.147,-0.05],[0.442,-0.151],[0.145,-0.121],[0.124,-0.147],[0.096,-0.17],[0.097,-0.083],[0.125,-0.099],[0.147,-0.097],[0.119,-0.119],[0.15,-0.121],[0.175,-0.026],[0.126,0],[0.295,0],[0,0],[0.267,-0.022],[0.171,0],[0.221,0],[0.246,0.024],[0.219,0.295],[0,0],[0,0],[0.147,-0.024],[0.292,-0.515],[0.072,-0.175],[0.024,-0.124],[0,-0.345],[-0.074,-0.316],[-0.048,-0.099],[-0.146,-0.098],[-0.271,-0.199],[-0.099,-0.146],[-0.07,-0.149],[0,-0.22],[0,-0.071],[0,0],[0,-0.25],[-0.05,-0.196],[-0.048,-0.118],[-0.144,-0.126],[-0.146,-0.051],[-0.294,0],[-0.321,-0.073],[-0.099,-0.074],[-0.073,-0.098],[-0.32,-0.098],[-0.292,0],[-0.298,0.025],[-0.418,0],[-0.169,-0.098],[-0.176,-0.075],[-0.194,0],[-0.242,0],[-0.296,-0.296],[-0.199,-0.047],[-0.125,-0.024],[-0.248,0],[0,0],[-0.073,0],[0,0],[-0.099,0.072],[-0.123,0.073],[-0.119,0.097],[0,0.242],[0.056,0.201],[0.077,0.172],[0,0.196],[-0.072,0.148],[-0.1,0.123],[-0.072,0.126],[-0.048,0.198],[-0.097,0.446],[0,0],[0,0],[-0.493,0.022],[-0.172,0.053],[-0.121,0.172],[-0.072,0.148],[0.176,0.023],[0.079,-0.005],[0.086,0.012],[0.146,0],[0.296,0.022],[0,0.249],[0,0.17],[0,0],[0.052,0.197],[0.053,0.142],[0,0.317],[0,0],[-0.414,0.027],[-0.147,0],[-0.03,0.146],[-0.051,0.12],[-0.143,0.125],[-0.075,-0.017],[-0.058,0.024],[-0.174,0.075],[-0.296,0.099],[0.222,0.201],[0.299,0.025],[0.122,-0.007],[0.146,0.012],[0.169,0.046],[0.145,0.097],[0.074,0.12],[0.024,0.121],[0.047,0.124],[0.075,0.146],[0.245,0.196],[0.123,0.048],[0.123,0.024]],\"o\":[[-0.097,0.173],[-0.123,0.097],[-0.245,0.098],[-0.195,0.075],[-0.149,0.152],[-0.103,0.146],[-0.051,0.123],[-0.047,0.145],[-0.074,0.169],[-0.123,0.147],[-0.097,0.125],[-0.15,0.079],[-0.441,0.174],[-0.198,0.072],[-0.153,0.128],[-0.121,0.149],[-0.069,0.12],[-0.124,0.094],[-0.146,0.121],[-0.146,0.101],[-0.126,0.126],[-0.147,0.122],[-0.122,0.025],[-0.268,0.025],[0,0],[-0.273,-0.026],[-0.175,0.024],[-0.223,0.024],[-0.246,0],[-0.395,-0.052],[0,0],[0,0],[-0.149,0],[0,0.614],[-0.072,0.147],[-0.048,0.123],[-0.074,0.318],[0,0.342],[0.024,0.127],[0.099,0.151],[0.274,0.193],[0.147,0.1],[0.098,0.147],[0.099,0.17],[0,0.073],[0,0],[0,0.247],[0,0.219],[0.027,0.125],[0.074,0.154],[0.127,0.096],[0.273,0.097],[0.342,0],[0.121,0.023],[0.095,0.074],[0.2,0.248],[0.269,0.074],[0.296,0],[0.413,-0.05],[0.22,0],[0.174,0.101],[0.17,0.077],[0.244,0],[0.447,0],[0.144,0.146],[0.122,0.026],[0.219,0.048],[0,0],[0.071,0],[0,0],[0.073,-0.126],[0.119,-0.073],[0.124,-0.071],[0.177,-0.122],[0,-0.226],[-0.048,-0.166],[-0.071,-0.174],[0,-0.196],[0.075,-0.146],[0.096,-0.119],[0.101,-0.171],[0.15,-0.415],[0,0],[0,0],[0.492,0],[0.193,0],[0.197,-0.045],[0.076,-0.124],[-0.149,-0.096],[-0.085,-0.012],[-0.078,0.006],[-0.124,-0.024],[-0.295,0],[-0.076,-0.222],[0,-0.165],[0,0],[0,-0.222],[-0.025,-0.149],[-0.096,-0.296],[0,0],[0.414,0.028],[0.149,0],[0,-0.169],[0,-0.122],[0.071,-0.174],[0.053,-0.039],[0.066,0.014],[0.176,-0.074],[0.266,-0.143],[-0.097,-0.297],[-0.194,-0.167],[-0.148,-0.012],[-0.123,0.006],[-0.197,0],[-0.174,-0.05],[-0.124,-0.076],[-0.077,-0.126],[-0.025,-0.123],[-0.077,-0.174],[-0.171,-0.273],[-0.099,-0.073],[-0.121,-0.046],[-0.048,0.127]],\"v\":[[197.605,36.152],[197.212,36.548],[196.915,36.94],[196.129,37.134],[195.738,37.526],[195.345,37.921],[195.051,38.315],[194.949,38.708],[194.754,39.102],[194.361,39.495],[194.064,39.885],[193.772,40.278],[193.376,40.477],[192.1,40.675],[191.709,41.064],[191.311,41.359],[191.017,41.853],[190.92,42.252],[190.525,42.445],[190.132,42.738],[189.741,43.032],[189.444,43.426],[188.951,43.622],[188.559,43.723],[187.772,43.723],[187.772,45.784],[187.087,45.687],[186.693,45.883],[186.126,45.883],[185.512,45.883],[184.725,45.197],[184.332,45],[183.941,45],[183.545,45.097],[183.35,46.672],[182.956,46.968],[182.858,47.36],[182.858,48.245],[182.858,49.124],[182.956,49.52],[183.35,49.817],[184.137,50.209],[184.431,50.602],[184.822,50.898],[184.725,51.487],[184.822,51.682],[184.822,52.077],[184.629,52.67],[184.725,53.257],[184.822,53.647],[185.118,54.046],[185.512,54.242],[186.298,54.339],[187.184,54.339],[187.577,54.436],[187.673,54.829],[188.365,55.418],[189.149,55.418],[189.939,55.418],[190.92,54.926],[191.508,55.024],[191.902,55.32],[192.197,55.713],[192.785,55.418],[193.772,56.009],[194.165,56.401],[194.559,56.502],[195.171,56.502],[195.738,56.502],[195.934,56.401],[195.934,55.618],[196.033,55.224],[196.423,55.024],[196.816,54.829],[197.113,54.242],[197.012,53.647],[196.717,53.257],[196.524,52.768],[196.816,52.373],[197.212,52.077],[197.408,51.682],[197.702,51.192],[197.999,50.01],[199.176,50.01],[199.176,47.948],[200.457,47.948],[200.947,47.847],[201.34,47.457],[201.537,47.064],[201.24,46.672],[200.995,46.672],[200.751,46.672],[200.358,46.672],[199.569,46.574],[199.373,45.978],[199.569,45.588],[199.569,45],[199.569,44.409],[199.373,44.019],[199.079,43.257],[199.079,41.212],[200.158,41.263],[200.556,41.212],[200.556,40.773],[200.556,40.382],[200.848,39.984],[201.048,39.979],[201.24,39.984],[201.639,39.59],[202.421,39.297],[202.126,38.507],[201.34,38.315],[200.947,38.315],[200.556,38.315],[200.064,38.315],[199.668,38.021],[199.277,37.825],[199.277,37.431],[199.277,37.038],[198.881,36.743],[198.488,35.956],[198.095,35.856],[197.702,35.756]],\"c\":true},\"ix\":2},\"nm\":\"Path 98\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":98,\"ty\":\"sh\",\"ix\":99,\"ks\":{\"a\":0,\"k\":{\"i\":[[0.174,-0.023],[-0.025,-0.121],[-0.15,-0.268],[-0.125,-0.144],[-0.153,-0.174],[-0.146,-0.143],[-0.169,-0.071],[-0.272,-0.121],[-0.123,-0.146],[-0.123,-0.148],[-0.073,-0.172],[-0.099,-0.295],[-0.099,-0.15],[-0.15,-0.05],[-0.12,-0.027],[-0.067,0.007],[-0.063,-0.014],[-0.125,-0.053],[-0.148,-0.294],[-0.05,-0.296],[-0.027,-0.294],[0,0],[-0.074,-0.15],[-0.29,-0.222],[-0.273,-0.248],[-0.123,-0.124],[-0.249,-0.296],[-0.174,-0.345],[-0.097,-0.318],[-0.071,-0.321],[-0.051,-0.149],[-0.148,-0.269],[-0.126,-0.148],[-0.149,-0.172],[-0.123,-0.145],[-0.121,-0.122],[-0.315,-0.269],[-0.245,-0.298],[-0.127,-0.177],[-0.075,-0.126],[-0.297,-0.226],[-0.246,-0.272],[-0.099,-0.147],[-0.05,-0.124],[-0.149,0.026],[-0.122,0],[-0.344,0],[-0.272,0.049],[-0.101,0.176],[-0.028,0.175],[0,0],[-0.052,0.465],[0,0.121],[-0.027,0.292],[0,0],[-0.073,0.147],[-0.242,0],[-0.221,-0.025],[-0.172,0],[-0.17,0.048],[0.024,0.123],[0.126,0.168],[0.196,0.078],[0.064,-0.007],[0.066,0.016],[0.147,0.046],[-0.049,0.125],[-0.144,0.148],[0.125,0.075],[0.147,0.053],[0.119,0],[0.195,0],[0.173,-0.045],[0.098,-0.07],[0.047,-0.121],[0.022,-0.125],[0,0],[0,0.298],[-0.025,0.295],[0.118,0],[0,0],[0.121,-0.008],[0.179,0.027],[0.166,0.074],[0.175,0.072],[0.121,0.151],[0,0.172],[0,0],[0.396,0.097],[0.068,-0.007],[0.062,0.012],[0.121,0.145],[0.075,0.169],[0.052,0.124],[0.024,0.147],[0.024,0.126],[0,0.126],[0.072,0.169],[0.171,0],[0,0],[0.273,0.073],[0.168,0.121],[0.124,0.169],[0.073,0.1],[0.095,0.074],[0.128,0.122],[0.124,0.126],[0.122,0.101],[0.175,0.119],[0.147,0.149],[0.122,0.079],[0.271,0.127],[0.072,0.096],[0.048,0.127],[0.025,0.122],[0.094,-0.001],[0.043,0.032],[0.145,0.197],[0.144,0.369],[0.467,0.051],[0.122,0.024],[0.174,0.075],[0.121,0.052],[0.363,0.095],[0.172,0]],\"o\":[[0.025,0.147],[0.096,0.322],[0.099,0.175],[0.145,0.174],[0.116,0.148],[0.147,0.148],[0.273,0.149],[0.196,0.095],[0.125,0.147],[0.127,0.146],[0.151,0.271],[0.048,0.173],[0.071,0.121],[0.123,0.048],[0.062,0.013],[0.068,-0.007],[0.123,0.026],[0.291,0.147],[0.148,0.27],[0.023,0.272],[0,0],[0.023,0.175],[0.197,0.317],[0.296,0.221],[0.122,0.094],[0.271,0.273],[0.244,0.29],[0.149,0.294],[0.098,0.322],[0.027,0.144],[0.124,0.293],[0.101,0.17],[0.147,0.172],[0.123,0.145],[0.101,0.127],[0.294,0.295],[0.295,0.247],[0.122,0.15],[0.071,0.123],[0.219,0.297],[0.295,0.217],[0.098,0.128],[0.053,0.098],[0.148,-0.048],[0.118,-0.019],[0.32,-0.048],[0.294,0],[0.195,-0.048],[0.07,-0.145],[0,0],[0.048,-0.464],[0,-0.148],[0.024,-0.272],[0,0],[0,-0.17],[0.101,-0.199],[0.224,0],[0.174,0],[0.194,0],[-0.023,-0.123],[-0.05,-0.197],[-0.122,-0.169],[-0.059,-0.01],[-0.072,0.006],[-0.144,-0.045],[0.027,-0.124],[0.097,-0.192],[-0.096,-0.124],[-0.121,-0.073],[-0.122,-0.046],[-0.173,-0.021],[-0.202,0],[-0.123,0.028],[-0.096,0.08],[-0.05,0.124],[0,0],[-0.025,-0.297],[0,-0.295],[-0.126,-0.076],[0,0],[-0.153,-0.009],[-0.158,0.01],[-0.173,-0.022],[-0.172,-0.073],[-0.173,-0.076],[-0.097,-0.119],[0,0],[-0.418,0],[-0.059,-0.011],[-0.068,0.005],[-0.197,-0.053],[-0.098,-0.126],[-0.048,-0.124],[-0.048,-0.147],[-0.023,-0.121],[-0.023,-0.123],[-0.023,-0.173],[-0.147,0.044],[0,0],[-0.296,0],[-0.194,-0.052],[-0.176,-0.126],[-0.069,-0.099],[-0.073,-0.101],[-0.149,-0.122],[-0.12,-0.121],[-0.122,-0.119],[-0.15,-0.125],[-0.173,-0.125],[-0.1,-0.099],[-0.244,-0.166],[-0.121,-0.047],[-0.073,-0.097],[-0.047,-0.121],[-0.015,-0.067],[-0.074,0],[-0.171,-0.151],[-0.221,-0.295],[-0.468,0],[-0.148,0],[-0.174,-0.048],[-0.122,-0.05],[-0.344,-0.169],[-0.15,-0.023],[-0.17,0]],\"v\":[[156.904,38.412],[156.904,38.804],[157.296,39.59],[157.691,39.984],[158.087,40.477],[158.478,40.868],[158.868,41.263],[159.658,41.557],[160.05,41.95],[160.344,42.346],[160.736,42.738],[161.037,43.523],[161.23,44.019],[161.426,44.409],[161.818,44.508],[162.014,44.508],[162.214,44.508],[162.608,44.606],[163.196,45.294],[163.493,46.08],[163.493,46.868],[163.493,47.261],[163.787,47.653],[164.569,48.342],[165.36,49.03],[165.753,49.323],[166.342,50.113],[167.03,50.898],[167.421,51.682],[167.52,52.572],[167.719,52.964],[168.111,53.75],[168.508,54.142],[168.897,54.634],[169.29,55.024],[169.585,55.418],[170.469,56.107],[171.158,56.895],[171.553,57.29],[171.749,57.683],[172.537,58.372],[173.322,59.055],[173.712,59.352],[173.816,59.746],[174.209,59.548],[174.6,59.45],[175.485,59.45],[176.271,59.45],[176.668,59.055],[176.96,58.663],[176.96,58.269],[176.96,57.092],[177.056,56.699],[177.158,55.913],[177.158,55.517],[177.35,55.125],[177.842,54.731],[178.434,54.829],[178.827,55.024],[179.22,54.731],[179.22,54.339],[178.925,53.848],[178.533,53.451],[178.345,53.454],[178.137,53.451],[177.745,53.257],[177.745,52.862],[178.137,52.469],[177.941,52.077],[177.548,51.878],[177.158,51.78],[176.668,51.682],[176.171,51.78],[175.779,51.878],[175.683,52.273],[175.584,52.67],[174.503,52.67],[174.405,51.878],[174.503,51.095],[174.209,50.799],[173.816,50.799],[173.413,50.806],[172.93,50.799],[172.537,50.506],[172.142,50.209],[171.65,50.01],[171.553,49.547],[171.553,47.556],[170.469,47.556],[170.275,47.557],[170.077,47.556],[169.684,47.163],[169.29,46.868],[169.191,46.472],[168.996,46.08],[168.996,45.687],[168.996,45.294],[168.702,44.904],[168.306,45.097],[167.915,45.097],[167.126,45],[166.639,44.707],[166.241,44.312],[166.145,43.919],[165.753,43.818],[165.454,43.426],[165.162,43.032],[164.771,42.738],[164.376,42.346],[163.887,42.049],[163.688,41.652],[162.899,41.359],[162.507,41.263],[162.408,40.868],[162.408,40.477],[162.207,40.413],[162.016,40.382],[161.624,39.885],[161.132,39],[159.658,39.396],[159.264,39.396],[158.868,39.102],[158.478,39],[157.691,38.412],[157.296,38.217]],\"c\":true},\"ix\":2},\"nm\":\"Path 99\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":99,\"ty\":\"sh\",\"ix\":100,\"ks\":{\"a\":0,\"k\":{\"i\":[[0,-0.169],[-0.025,-0.15],[-0.049,-0.124],[-0.098,-0.075],[-0.193,0.008],[-0.096,-0.009],[0,0],[0,0.344],[0.052,0.124],[0,0]],\"o\":[[0,0.171],[0.023,0.121],[0.048,0.125],[0.132,0.115],[0.092,-0.005],[0,0],[-0.272,-0.196],[0,-0.144],[0,0],[0,0.172]],\"v\":[[158.378,43.647],[158.576,44.019],[158.673,44.409],[158.772,44.804],[159.275,44.903],[159.559,44.904],[159.658,44.508],[158.969,43.892],[158.868,43.523],[158.478,43.228]],\"c\":true},\"ix\":2},\"nm\":\"Path 100\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":100,\"ty\":\"sh\",\"ix\":101,\"ks\":{\"a\":0,\"k\":{\"i\":[[0.271,-0.27],[0.167,-0.1],[0.176,-0.072],[0.066,0.014],[0.052,-0.038],[0.027,-0.125],[0,0],[0,-0.392],[0,-0.149],[0.075,-0.275],[0.076,-0.175],[0,-0.289],[0,-0.174],[0,-0.293],[-0.069,0.007],[-0.082,-0.01],[-0.175,0],[-0.291,0.073],[0,0.365],[0.026,0.442],[-0.071,0],[-0.543,-0.027],[-0.15,-0.023],[0,0.275],[0.15,0.219],[0,0.172],[0,0.147],[0,0.199],[0.148,0],[0.292,-0.022],[0,0],[-0.054,0.15],[-0.071,0.169],[0,0.147],[0,0.194]],\"o\":[[-0.146,0.144],[-0.15,0.069],[-0.057,0.024],[-0.074,-0.016],[-0.099,0.072],[0,0],[0,0.392],[0,0.148],[0,0.295],[-0.05,0.171],[-0.1,0.269],[0,0.177],[0,0.296],[0.088,0.014],[0.066,-0.005],[0.174,0.026],[0.297,0],[0.026,-0.371],[0,-0.445],[0.077,0],[0.543,-0.027],[0.147,0],[0.025,-0.271],[0,-0.27],[-0.072,-0.127],[0,-0.149],[-0.024,-0.2],[-0.149,-0.022],[-0.294,0],[0,0],[0,-0.172],[0.072,-0.173],[0.049,-0.126],[0,-0.196],[-0.22,0.293]],\"v\":[[218.741,44.804],[218.35,45.197],[217.952,45.492],[217.761,45.487],[217.561,45.492],[217.462,45.883],[217.462,46.08],[217.66,47.064],[217.561,47.457],[217.561,48.245],[217.266,48.639],[217.021,49.395],[217.069,49.817],[217.021,50.602],[217.248,50.603],[217.462,50.602],[217.858,50.799],[218.642,50.602],[218.741,49.671],[218.642,48.538],[218.837,48.443],[220.217,48.443],[220.61,48.538],[220.709,47.874],[220.41,47.261],[220.017,47.064],[220.116,46.672],[220.116,46.179],[219.723,46.08],[218.939,46.179],[218.939,45.614],[219.037,45.197],[219.43,44.904],[219.527,44.508],[219.43,44.019]],\"c\":true},\"ix\":2},\"nm\":\"Path 101\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":101,\"ty\":\"sh\",\"ix\":102,\"ks\":{\"a\":0,\"k\":{\"i\":[[0.222,-0.089],[0.07,-0.125],[0,0],[0.394,-0.149],[0.297,-0.027],[0.395,-0.217],[0.099,-0.149],[0,-0.244],[-0.024,-0.222],[-0.444,0.22],[-0.124,0.073],[-0.149,0.096],[-0.153,0.074],[-0.147,0.05],[-0.077,-0.01],[-0.052,0.009],[-0.148,0.143],[0,0],[0,0],[-0.148,-0.049],[-0.145,-0.045],[-0.273,0],[-0.195,0.066],[-0.146,0.074],[-0.169,0.073],[-0.069,-0.013],[-0.063,0.024],[0,0],[-0.122,0.144],[-0.075,0.369],[0.122,0]],\"o\":[[-0.125,0.048],[0,0],[-0.419,0],[-0.269,0.099],[-0.47,0.021],[-0.145,0.075],[-0.121,0.196],[0,0.222],[0.467,-0.222],[0.124,-0.052],[0.148,-0.074],[0.121,-0.08],[0.149,-0.074],[0.068,-0.026],[0.058,0.008],[0.196,-0.074],[0,0],[0,0],[0.173,0],[0.15,0.051],[0.223,0.101],[0.218,0],[0.147,-0.052],[0.146,-0.074],[0.061,-0.026],[0.067,0.013],[0,0],[0.172,-0.074],[0.222,-0.273],[-0.157,0],[-0.184,0]],\"v\":[[212.352,46.179],[212.257,46.574],[205.693,46.574],[204.879,47.261],[204.094,47.36],[202.91,47.653],[202.616,48.049],[202.421,48.66],[202.519,49.226],[203.701,48.639],[204.094,48.538],[204.391,48.149],[204.783,47.948],[205.176,47.752],[205.399,47.746],[205.566,47.752],[205.96,47.36],[206.746,47.556],[209.18,47.556],[209.598,47.653],[209.99,47.847],[210.582,48.245],[211.17,48.149],[211.566,47.948],[211.86,47.556],[212.059,47.555],[212.257,47.556],[212.646,47.36],[212.939,46.968],[213.334,46.08],[212.925,46.072]],\"c\":true},\"ix\":2},\"nm\":\"Path 102\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":102,\"ty\":\"sh\",\"ix\":103,\"ks\":{\"a\":0,\"k\":{\"i\":[[0.026,-0.173],[-0.005,-0.058],[-0.266,-0.223],[-0.198,-0.148],[-0.096,-0.149],[-0.096,-0.223],[0,0.072],[0,0],[0.148,0.242],[0.102,0.123],[0.319,0.199],[0.124,0.048]],\"o\":[[-0.01,0.07],[0.161,0.286],[0.17,0.143],[0.145,0.095],[0.145,0.196],[0,-0.052],[0,0],[0,-0.317],[-0.101,-0.149],[-0.245,-0.273],[-0.127,-0.076],[-0.049,0.147]],\"v\":[[160.54,46.472],[160.54,46.659],[161.132,47.36],[161.624,47.752],[162.016,48.049],[162.309,48.639],[162.408,48.443],[162.408,48.069],[162.214,47.261],[161.818,46.968],[161.132,46.179],[160.736,46.08]],\"c\":true},\"ix\":2},\"nm\":\"Path 103\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":103,\"ty\":\"sh\",\"ix\":104,\"ks\":{\"a\":0,\"k\":{\"i\":[[0,0],[0.007,0.066],[0.033,0.067]],\"o\":[[0.014,-0.078],[-0.032,-0.058],[0,0]],\"v\":[[160.54,46.868],[160.54,46.659],[160.441,46.472]],\"c\":true},\"ix\":2},\"nm\":\"Path 104\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":104,\"ty\":\"sh\",\"ix\":105,\"ks\":{\"a\":0,\"k\":{\"i\":[[0.034,-0.026],[0.073,-0.128],[0.148,-0.295],[-0.294,-0.123],[-0.152,0.011],[-0.066,-0.011],[0,0.444],[0.198,0.097],[0.169,0],[0,0],[0.085,0]],\"o\":[[-0.097,0.071],[-0.171,0.292],[0.267,0.169],[0.068,0.027],[0.126,-0.008],[0.319,-0.324],[0,-0.248],[-0.146,-0.078],[0,0],[-0.1,0],[-0.042,0]],\"v\":[[223.066,48.049],[222.969,48.443],[222.579,49.226],[223.36,49.719],[223.736,49.725],[224.051,49.719],[224.639,48.735],[224.245,48.245],[223.855,48.049],[223.464,48.049],[223.181,48.014]],\"c\":true},\"ix\":2},\"nm\":\"Path 105\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":105,\"ty\":\"sh\",\"ix\":106,\"ks\":{\"a\":0,\"k\":{\"i\":[[0.292,-0.147],[0.172,-0.047],[0.297,0],[0.298,-0.025],[0.151,-0.1],[0.122,-0.146],[0.002,-0.002],[0,0],[0.071,0.009],[0.091,-0.026],[0.295,-0.145],[0,0],[-0.122,-0.045],[-0.145,-0.049],[-0.145,-0.023],[-0.119,0],[-0.067,0.01],[-0.098,-0.04],[-0.146,-0.1],[-0.05,-0.122],[-0.201,-0.047],[-0.148,0],[0,0],[-0.217,0],[-0.096,0],[-0.149,0],[-0.149,0],[-0.244,0],[-0.223,0.019],[-0.17,0.076],[0.073,0.099],[0.07,0.148],[0.021,0.466],[0.07,0.176],[0.147,0.12],[0.126,0.049],[0.344,0]],\"o\":[[-0.172,0.07],[-0.269,0.078],[-0.296,0],[-0.199,0],[-0.145,0.094],[-0.002,0.003],[0,0],[-0.091,0.014],[-0.082,-0.011],[-0.32,0.103],[0,0],[0.123,0.023],[0.15,0.054],[0.146,0.049],[0.126,0.026],[0.073,0.012],[0.093,-0.015],[0.175,0.077],[0.1,0.048],[0.072,0.172],[0.123,0.027],[0,0],[0.221,0],[0.1,0],[0.15,0],[0.146,0],[0.246,0.019],[0.246,0],[0.17,-0.027],[-0.072,-0.124],[-0.095,-0.119],[-0.198,-0.415],[0,-0.195],[-0.077,-0.173],[-0.097,-0.074],[-0.294,-0.147],[-0.347,0]],\"v\":[[227.295,49.719],[226.902,50.01],[226.115,50.113],[225.329,50.113],[224.832,50.309],[224.443,50.602],[224.436,50.61],[224.54,50.403],[224.303,50.399],[224.051,50.403],[223.264,50.799],[223.36,51.192],[223.756,51.288],[224.15,51.487],[224.54,51.682],[224.931,51.682],[225.142,51.672],[225.425,51.682],[225.819,51.978],[225.918,52.373],[226.214,52.862],[226.605,52.862],[226.999,52.862],[227.587,52.716],[227.783,52.572],[228.181,52.67],[228.574,52.768],[229.21,52.768],[229.853,52.768],[230.241,52.469],[230.146,52.077],[229.754,51.878],[229.754,50.701],[229.754,50.209],[229.456,49.817],[229.061,49.719],[228.181,49.52]],\"c\":true},\"ix\":2},\"nm\":\"Path 106\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":106,\"ty\":\"sh\",\"ix\":107,\"ks\":{\"a\":0,\"k\":{\"i\":[[0,0],[0.022,-0.037]],\"o\":[[-0.017,0.04],[0,0]],\"v\":[[224.301,50.881],[224.245,50.996]],\"c\":true},\"ix\":2},\"nm\":\"Path 107\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":107,\"ty\":\"sh\",\"ix\":108,\"ks\":{\"a\":0,\"k\":{\"i\":[[0.04,-0.008],[0.147,-0.074],[0.125,-0.121],[0.517,-0.073],[0.271,0.051],[0.118,0.027],[0.293,0.096],[0.124,0],[0,0],[0.126,-0.171],[0.122,-0.32],[0.022,-0.199],[0,-0.173],[0.025,-0.121],[0.072,-0.124],[0.15,-0.101],[0.07,0.014],[0.051,-0.037],[0.095,-0.143],[0,-0.247],[-0.222,-0.147],[-0.124,-0.024],[-0.144,-0.025],[-0.295,0],[0,-0.199],[0.101,-0.294],[0.025,-0.146],[0,-0.175],[-0.024,-0.15],[-0.05,-0.174],[-0.047,-0.177],[-0.049,-0.147],[-0.1,0.128],[-0.047,0.17],[0,0.343],[-0.024,0.293],[0,0.172],[0,0],[0,0],[0,0],[0,0],[0,0],[-0.122,0],[-0.122,-0.022],[-0.145,-0.024],[-0.118,-0.025],[-0.147,0],[0,0],[0.028,-0.147],[0,-0.126],[0,0],[-0.025,-0.15],[-0.124,-0.097],[-0.216,0],[0,0],[0,0.15],[0,0],[0.125,0.366],[0.124,0.097],[0.148,0.145],[0.072,0.149],[0,0.244],[-0.023,0.248],[0,0],[0.051,0.12],[0.122,0.145],[0.124,0.127],[0.149,0.097],[0.081,-0.004],[0.078,0.068],[0.078,0.094],[0,0],[-0.466,0.123],[-0.176,0.052],[-0.124,0.026],[-0.182,-0.018],[-0.225,0.039],[-0.066,-0.006],[-0.063,0.014],[0,0.222],[0.051,0.15],[0.122,0.103],[0.119,0.072],[0.145,0.072],[0.171,0.023],[0,0],[0.084,0]],\"o\":[[-0.149,0.051],[-0.17,0.074],[-0.368,0.371],[-0.268,0.051],[-0.125,-0.025],[-0.3,-0.072],[-0.099,-0.025],[0,0],[-0.219,0.024],[-0.196,0.271],[-0.074,0.195],[-0.027,0.15],[0,0.148],[-0.026,0.125],[-0.101,0.149],[-0.047,0.025],[-0.078,-0.017],[-0.146,0.095],[-0.122,0.174],[0,0.295],[0.098,0.048],[0.149,0.048],[0.269,0.05],[0,0.196],[0,0.317],[-0.048,0.148],[-0.024,0.148],[0,0.172],[0.025,0.174],[0.048,0.17],[0.052,0.146],[0.147,-0.098],[0.097,-0.12],[0.099,-0.322],[0,-0.292],[0,-0.174],[0,0],[0,0],[0,0],[0,0],[0,0],[0.145,0.027],[0.122,0],[0.147,0.027],[0.123,0.028],[0.124,0.026],[0,0],[0,0.174],[-0.022,0.123],[0,0],[0,0.171],[0.023,0.167],[0.146,0.123],[0,0],[0.025,-0.145],[0,0],[0,-0.395],[-0.05,-0.148],[-0.147,-0.121],[-0.123,-0.123],[-0.097,-0.196],[0,-0.25],[0,0],[0,-0.15],[-0.077,-0.174],[-0.127,-0.143],[-0.122,-0.123],[-0.07,-0.046],[-0.09,0.003],[-0.099,-0.074],[0,0],[0.49,0],[0.169,-0.022],[0.122,-0.021],[0.218,-0.035],[0.186,0.019],[0.06,-0.01],[0.068,0.006],[0.198,-0.048],[0,-0.173],[-0.072,-0.171],[-0.121,-0.094],[-0.15,-0.096],[-0.149,-0.079],[0,0],[-0.098,0],[-0.042,0]],\"v\":[[207.829,49.62],[207.434,49.817],[207.139,50.209],[205.96,50.996],[205.176,50.898],[204.783,50.799],[203.993,50.506],[203.701,50.309],[203.306,50.309],[202.91,50.701],[202.421,51.487],[202.421,52.077],[202.227,52.469],[202.227,52.862],[202.227,53.257],[201.832,53.552],[201.646,53.548],[201.438,53.552],[201.145,53.944],[200.947,54.534],[201.34,55.224],[201.733,55.32],[202.126,55.517],[202.91,55.517],[203.011,56.037],[202.715,56.796],[202.519,57.191],[202.519,57.633],[202.519,58.075],[202.816,58.469],[202.91,58.96],[203.11,59.352],[203.504,59.055],[203.895,58.765],[203.993,57.879],[203.993,57.092],[204.189,56.672],[204.189,54.046],[205.371,54.046],[205.371,54.926],[205.176,55.32],[205.274,55.713],[205.668,55.811],[206.061,55.811],[206.452,56.009],[206.844,56.107],[207.236,56.107],[207.236,56.918],[207.042,57.29],[206.944,57.683],[206.944,58.124],[206.944,58.568],[207.337,58.862],[207.85,59.055],[209.107,59.055],[209.207,58.663],[209.207,58.1],[209.107,57.092],[208.714,56.895],[208.321,56.502],[207.926,56.205],[207.733,55.618],[207.926,55.024],[207.926,54.634],[207.926,54.242],[207.535,53.944],[207.236,53.552],[206.844,53.257],[206.613,53.218],[206.353,53.157],[206.254,52.768],[206.353,52.077],[207.634,52.077],[208.025,51.78],[208.418,51.682],[209.001,51.684],[209.598,51.682],[209.79,51.683],[209.99,51.682],[210.287,51.192],[210.089,50.799],[209.795,50.403],[209.404,50.209],[209.009,49.917],[208.616,49.62],[208.223,49.62],[207.952,49.61]],\"c\":true},\"ix\":2},\"nm\":\"Path 108\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":108,\"ty\":\"sh\",\"ix\":109,\"ks\":{\"a\":0,\"k\":{\"i\":[[0,0],[0,-0.171],[-0.074,-0.27],[-0.172,-0.27],[-0.242,-0.295],[-0.273,-0.265],[-0.147,-0.097],[-0.098,-0.097],[-0.102,-0.149],[-0.076,-0.099],[-0.096,-0.126],[-0.089,0.02],[-0.05,-0.011],[0,0],[0.121,0.072],[0.195,0.05],[0.124,0.028],[0.087,-0.011],[0.078,0.012],[0.099,0.169],[0.048,0.169],[0.031,0.12],[0,0.292],[0.149,0.224],[0.294,0.124]],\"o\":[[0.046,0.147],[0.023,0.296],[0.072,0.321],[0.199,0.318],[0.248,0.294],[0.122,0.124],[0.099,0.048],[0.126,0.126],[0.05,0.097],[0.097,0.144],[0.042,0.057],[0.062,-0.014],[0,0],[-0.145,-0.076],[-0.17,-0.123],[-0.125,-0.022],[-0.093,-0.027],[-0.073,0.009],[-0.194,-0.051],[-0.098,-0.149],[-0.025,-0.124],[-0.047,-0.272],[0,-0.295],[-0.194,-0.269],[0,0]],\"v\":[[163.59,50.602],[163.59,50.799],[163.59,51.583],[164.081,52.373],[164.668,53.157],[165.36,53.944],[165.654,54.339],[166.046,54.436],[166.342,54.829],[166.441,55.224],[166.735,55.618],[166.952,55.635],[167.126,55.618],[167.126,54.046],[166.735,53.848],[166.342,53.451],[165.947,53.354],[165.68,53.348],[165.454,53.354],[165.063,52.964],[164.771,52.572],[164.668,52.176],[164.668,51.39],[164.569,50.602],[163.787,50.209]],\"c\":true},\"ix\":2},\"nm\":\"Path 109\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":109,\"ty\":\"sh\",\"ix\":110,\"ks\":{\"a\":0,\"k\":{\"i\":[[0.223,-0.022],[-0.023,-0.148],[0,-0.245],[0.023,-0.415],[0,0],[0,0],[0,0],[0,0.295],[0,0.197],[0,0.126],[0.23,0]],\"o\":[[0.023,0.174],[0.052,0.222],[0,0.422],[0,0],[0,0],[0,0],[0.022,-0.295],[0,-0.197],[0,-0.121],[-0.294,-0.016],[-0.177,0]],\"v\":[[232.801,50.259],[232.897,50.701],[233.095,51.313],[232.998,52.373],[234.96,52.373],[234.96,51.878],[234.129,51.878],[234.178,51.095],[234.077,50.602],[234.129,50.259],[233.384,50.229]],\"c\":true},\"ix\":2},\"nm\":\"Path 110\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":110,\"ty\":\"sh\",\"ix\":111,\"ks\":{\"a\":0,\"k\":{\"i\":[[0,0],[0.121,-0.021],[0.071,0.006],[0.06,-0.009],[0.098,-0.099],[-0.177,-0.021],[0,0],[0,0],[-0.319,0],[-0.291,0.052],[0.044,-0.014],[0,0.041],[0,0.324],[0.226,0]],\"o\":[[-0.148,0],[-0.065,0.016],[-0.065,-0.005],[-0.145,0.028],[0.173,0.075],[0,0],[0,0],[0.318,0.024],[0.296,0],[0,-0.022],[-0.052,0.017],[-0.073,-0.317],[-0.217,0],[0,0]],\"v\":[[212.646,51.583],[212.452,51.78],[212.243,51.782],[212.053,51.78],[211.86,52.176],[212.257,52.469],[212.646,52.469],[213.04,52.469],[213.848,52.572],[214.61,52.469],[214.524,52.476],[214.415,52.469],[214.415,51.634],[213.822,51.583]],\"c\":true},\"ix\":2},\"nm\":\"Path 111\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":111,\"ty\":\"sh\",\"ix\":112,\"ks\":{\"a\":0,\"k\":{\"i\":[[0.172,-0.099],[0.151,-0.124],[0.369,0],[0.296,-0.022],[0.148,-0.074],[0.049,-0.194],[0.097,-0.272],[0.096,-0.124],[0.147,-0.05],[0.297,0],[0.32,0.05],[0.223,0.195],[0.099,0.145],[0.075,0.096],[0.322,0],[0.124,-0.023],[0.171,-0.077],[0.17,0],[0,0],[0,0],[-0.12,-0.122],[-0.071,-0.147],[0,-0.126],[0,-0.294],[0,0],[-0.098,0.05],[-0.069,-0.012],[-0.063,0.026],[-0.194,0],[-0.172,0],[-0.295,-0.022],[-0.123,-0.022],[-0.295,-0.146],[-0.294,-0.199],[-0.122,-0.074],[-0.169,-0.077],[-0.076,0.01],[-0.055,-0.009],[-0.173,-0.028],[-0.146,0],[-0.176,0.017],[-0.262,-0.056],[-0.145,-0.05],[-0.271,-0.145],[-0.12,-0.076],[-0.148,-0.149],[-0.198,-0.32],[-0.072,-0.125],[0,-0.541],[0,-0.144],[0.049,-0.168],[0.298,-0.146],[0.075,0.011],[0.056,-0.01],[0.121,-0.027],[0.151,-0.101],[0.079,-0.195],[0,-0.169],[0,-0.148],[-0.396,0],[-0.318,0.218],[-0.124,0.103],[-0.047,0.098],[-0.244,0],[-0.365,-0.248],[-0.144,-0.128],[-0.146,-0.126],[-0.194,-0.097],[-0.12,-0.051],[-0.147,-0.052],[-0.3,-0.149],[-0.171,-0.075],[-0.172,-0.028],[-0.272,-0.026],[-0.32,0],[-0.296,0.075],[-0.148,0.098],[-0.073,0.123],[-0.023,0.124],[0,0.291],[-0.194,0.048],[-0.27,0.148],[-0.12,0.145],[-0.445,0],[0,0],[-0.147,-0.051],[-0.123,-0.048],[-0.147,-0.05],[-0.295,-0.169],[-0.121,-0.098],[-0.171,-0.269],[-0.07,-0.121],[-0.271,-0.272],[-0.099,-0.147],[-0.174,-0.297],[-0.099,-0.173],[-0.171,-0.048],[-0.25,0],[-0.565,0.043],[-0.295,0],[-0.347,-0.347],[-0.343,-0.125],[-0.246,0],[-0.222,0.021],[0,0],[0.244,0.122],[0.123,0.047],[0.101,0.076],[0.097,0.125],[0.124,0.147],[0.198,0.027],[0.125,0.027],[0.067,-0.006],[0.062,0.014],[0.172,0.047],[0.122,0.026],[0.149,0],[0.296,0],[0,0],[0.665,-0.048],[0,0],[-0.588,-0.051],[0,0],[0.128,0.096],[0.122,0.097],[0.123,0.098],[0,0],[0.126,0.147],[0.074,0.15],[0.095,0.272],[0.071,0.101],[0.124,0.098],[0.146,0.101],[0.147,0.121],[0.12,0.121],[0.395,0.169],[0.148,0.027],[0.343,0],[0.271,0.247],[0.147,0.075],[0.074,-0.009],[0.055,0.013],[0.17,0.027],[0.269,0.121],[0.297,0.118],[0.149,0.024],[0.149,0],[0.197,-0.007],[0.246,0.012],[0.194,0],[0.12,-0.004],[0.288,0.122],[0.272,0.146],[0.297,0.117],[0.122,0.02],[0.169,0.075],[0.292,0]],\"o\":[[-0.146,0.075],[-0.27,0.222],[-0.292,0],[-0.171,0],[-0.197,0.096],[-0.048,0.274],[-0.048,0.145],[-0.099,0.124],[-0.271,0.124],[-0.342,0],[-0.27,-0.025],[-0.147,-0.124],[-0.072,-0.124],[-0.196,-0.243],[-0.148,0],[-0.173,0.053],[-0.149,0.047],[0,0],[0,0],[0.152,0.073],[0.124,0.126],[0.074,0.123],[0.027,0.271],[0,0],[0.047,-0.12],[0.048,-0.023],[0.071,0.012],[0.171,-0.072],[0.169,0],[0.295,0],[0.149,0],[0.322,0.078],[0.345,0.174],[0.123,0.072],[0.149,0.1],[0.071,0.028],[0.06,-0.008],[0.172,0.028],[0.121,0],[0.215,0.021],[0.226,-0.021],[0.15,0.021],[0.298,0.12],[0.123,0.073],[0.171,0.099],[0.272,0.271],[0.073,0.147],[0.298,0.442],[0,0.146],[0,0.198],[-0.099,0.321],[-0.07,0.027],[-0.059,-0.008],[-0.121,0.023],[-0.174,0.049],[-0.171,0.093],[-0.047,0.145],[0,0.146],[0.05,0.392],[0.391,0],[0.151,-0.099],[0.099,-0.072],[0.121,-0.197],[0.44,0],[0.175,0.098],[0.146,0.12],[0.153,0.121],[0.122,0.048],[0.147,0.049],[0.318,0.1],[0.167,0.073],[0.168,0.07],[0.248,0.051],[0.319,0.027],[0.318,0],[0.172,-0.05],[0.122,-0.075],[0.048,-0.097],[0.074,-0.271],[0.221,0],[0.323,-0.103],[0.172,-0.098],[0.271,-0.324],[0,0],[0.171,0],[0.12,0.023],[0.147,0.045],[0.298,0.125],[0.147,0.073],[0.245,0.222],[0.075,0.121],[0.2,0.32],[0.123,0.121],[0.196,0.275],[0.098,0.175],[0.096,0.145],[0.223,0.077],[0.565,0],[0.294,-0.029],[0.491,0],[0.267,0.268],[0.221,0.072],[0.222,0],[0,0],[0,-0.296],[-0.124,-0.047],[-0.119,-0.055],[-0.12,-0.073],[-0.124,-0.145],[-0.127,-0.144],[-0.125,0],[-0.061,-0.012],[-0.068,0.007],[-0.173,-0.046],[-0.12,-0.029],[-0.123,-0.024],[-0.294,-0.025],[0,0],[-0.663,-0.03],[0,0],[0.587,-0.025],[0,0],[-0.121,-0.073],[-0.121,-0.099],[-0.12,-0.102],[0,0],[-0.103,-0.124],[-0.124,-0.147],[-0.145,-0.242],[-0.051,-0.123],[-0.075,-0.123],[-0.144,-0.126],[-0.169,-0.122],[-0.146,-0.124],[-0.294,-0.298],[-0.147,-0.051],[-0.319,-0.074],[-0.366,0],[-0.122,-0.096],[-0.066,-0.025],[-0.061,0.009],[-0.174,-0.047],[-0.297,-0.05],[-0.297,-0.147],[-0.145,-0.052],[-0.122,-0.025],[-0.248,-0.013],[-0.195,0.006],[-0.198,0],[-0.144,-0.008],[-0.269,0.009],[-0.296,-0.118],[-0.268,-0.145],[-0.125,-0.053],[-0.174,-0.051],[-0.248,-0.122],[-0.223,0]],\"v\":[[237.225,52.077],[236.928,52.469],[236.043,52.862],[235.254,52.862],[234.865,53.061],[234.472,53.451],[234.472,54.242],[234.277,54.634],[233.879,54.829],[233.095,54.926],[232.21,54.829],[231.423,54.634],[231.128,54.242],[231.128,53.848],[230.342,53.552],[229.947,53.552],[229.556,53.848],[229.139,53.944],[226.702,53.944],[226.702,54.731],[227.095,54.926],[227.49,55.224],[227.49,55.618],[227.49,56.401],[228.082,56.401],[228.082,56.009],[228.266,56.01],[228.475,56.009],[228.767,55.618],[229.16,55.811],[229.947,55.811],[230.342,55.811],[231.128,56.205],[231.915,56.796],[232.306,56.992],[232.6,57.385],[232.824,57.392],[232.998,57.385],[233.488,57.486],[233.879,57.587],[234.454,57.574],[235.157,57.587],[235.551,57.781],[236.34,58.269],[236.733,58.469],[237.126,58.862],[237.814,59.648],[238.009,60.043],[238.798,61.219],[238.699,61.613],[238.699,62.103],[238.107,62.793],[237.887,62.799],[237.712,62.793],[237.324,62.895],[236.928,63.192],[236.533,63.58],[236.34,63.973],[236.436,64.37],[237.225,65.053],[238.206,64.762],[238.6,64.463],[238.699,64.071],[239.189,63.678],[240.27,63.973],[240.663,64.37],[241.055,64.663],[241.451,65.053],[241.842,65.152],[242.238,65.348],[243.124,65.645],[243.517,65.94],[244.007,66.038],[244.696,66.234],[245.532,66.234],[246.366,66.234],[246.761,65.94],[247.154,65.742],[247.251,65.348],[247.251,64.566],[247.84,64.566],[248.628,64.169],[249.02,63.78],[249.907,63.091],[250.103,63.091],[250.498,63.285],[250.887,63.385],[251.28,63.58],[252.068,63.973],[252.462,64.169],[252.952,64.956],[253.149,65.348],[253.936,65.94],[254.232,66.331],[254.723,67.119],[255.02,67.612],[255.313,68.001],[255.952,68.001],[257.379,67.91],[258.116,67.807],[259.15,68.497],[259.934,69.086],[260.548,69.282],[261.113,69.185],[261.113,67.977],[260.621,67.413],[260.228,67.319],[259.832,67.218],[259.639,66.822],[259.344,66.432],[258.853,66.135],[258.457,66.135],[258.264,66.135],[258.064,66.135],[257.673,65.843],[257.28,65.742],[256.886,65.645],[256.1,65.645],[256.1,63.139],[254.379,63.139],[254.379,61.27],[255.9,61.27],[255.9,60.63],[255.507,60.433],[255.214,60.043],[254.822,59.746],[252.858,59.746],[252.559,59.352],[252.167,59.055],[251.973,58.269],[251.873,57.879],[251.477,57.683],[251.085,57.385],[250.691,56.992],[250.3,56.699],[249.512,55.913],[249.118,55.713],[248.233,55.713],[247.35,55.32],[247.154,54.926],[246.939,54.921],[246.761,54.926],[246.271,54.829],[245.482,54.534],[244.696,54.046],[244.301,53.848],[243.908,53.848],[243.267,53.848],[242.629,53.848],[242.139,53.75],[241.746,53.751],[240.959,53.647],[240.173,53.157],[239.387,52.67],[238.995,52.572],[238.504,52.373],[237.814,51.978]],\"c\":true},\"ix\":2},\"nm\":\"Path 112\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":112,\"ty\":\"sh\",\"ix\":113,\"ks\":{\"a\":0,\"k\":{\"i\":[[0,0],[0,0],[0,0],[0,0],[-0.026,-0.243],[-0.49,-0.05],[0,0]],\"o\":[[0,0],[0,0],[0,0],[0.026,0.243],[0.492,-0.025],[0,0],[0,0]],\"v\":[[222.283,51.978],[222.283,52.572],[222.085,52.176],[222.085,52.572],[222.184,53.207],[223.41,53.207],[223.41,51.978]],\"c\":true},\"ix\":2},\"nm\":\"Path 113\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":113,\"ty\":\"sh\",\"ix\":114,\"ks\":{\"a\":0,\"k\":{\"i\":[[0.088,-0.092],[0.077,-0.122],[0.05,-0.149],[0,0],[0,-0.149],[-0.025,-0.147],[0,0],[-0.321,0],[-0.152,0],[0,0],[-0.12,-0.024],[-0.126,-0.021],[-0.127,-0.025],[-0.171,-0.046],[-0.347,0],[-0.046,0.463],[0.395,0.047],[0.295,0.026],[0.146,0],[0,0],[0.273,0.049],[0.39,0],[0.083,0]],\"o\":[[-0.097,0.096],[-0.073,0.126],[0,0],[0,0.145],[0,0.172],[0,0],[0.319,0],[0.147,0],[0,0],[0.124,0],[0.126,0.027],[0.12,0.025],[0.166,0.05],[0.32,0.078],[-0.054,-0.464],[-0.392,-0.053],[-0.296,-0.024],[-0.151,0],[0,0],[-0.269,-0.025],[-0.368,-0.074],[-0.086,0],[-0.128,0]],\"v\":[[218.837,54.046],[218.741,54.436],[218.545,54.829],[218.545,54.436],[218.449,54.829],[218.642,55.224],[219.798,55.224],[220.61,55.125],[221.006,55.224],[221.395,55.224],[221.787,55.32],[222.184,55.418],[222.579,55.517],[222.969,55.811],[223.855,55.811],[223.801,54.634],[222.772,54.534],[221.988,54.436],[221.592,54.339],[221.197,54.339],[220.41,54.142],[219.43,53.944],[219.173,53.937]],\"c\":true},\"ix\":2},\"nm\":\"Path 114\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":114,\"ty\":\"sh\",\"ix\":115,\"ks\":{\"a\":0,\"k\":{\"i\":[[0,0],[-0.151,-0.074],[0,0],[-0.173,0],[0,0],[0,0],[0.145,0.073],[0.269,0.047],[0.27,0.048]],\"o\":[[0.123,0.12],[0,0],[0.147,0.076],[0,0],[0,0],[-0.097,-0.124],[-0.248,-0.123],[-0.268,-0.05],[0,0]],\"v\":[[215.301,55.125],[215.598,55.517],[215.991,55.713],[216.405,55.811],[217.165,55.811],[217.165,55.125],[216.973,54.731],[216.186,54.534],[215.4,54.339]],\"c\":true},\"ix\":2},\"nm\":\"Path 115\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":115,\"ty\":\"sh\",\"ix\":116,\"ks\":{\"a\":0,\"k\":{\"i\":[[0.118,0],[0.123,-0.022],[0.145,-0.074],[0.073,-0.123],[0.073,-0.275],[0.073,-0.15],[0.098,-0.052],[0.122,0],[0.688,0],[0,0],[0,0],[0.49,0.018],[0.15,0],[0,-0.147],[0,-0.296],[0,-0.07],[-0.663,-0.07],[-0.294,-0.021],[-0.293,0],[-0.295,0.028],[-0.147,0.075],[-0.198,0.055],[-0.058,-0.009],[-0.071,0.031],[-0.121,0.025],[-0.096,0.172],[-0.078,0.322],[-0.097,0.267],[-0.049,0.171],[0,0.148],[0.021,0.145]],\"o\":[[-0.122,0],[-0.146,0.024],[-0.148,0.076],[-0.145,0.242],[-0.048,0.166],[-0.076,0.119],[-0.1,0.048],[-0.661,0.097],[0,0],[0,0],[-0.495,0],[-0.147,0],[0,0.15],[0.025,0.296],[0,0.069],[0.664,0],[0.293,0.026],[0.299,0.028],[0.296,0],[0.172,0],[0.194,-0.097],[0.052,-0.009],[0.076,0.012],[0.125,-0.045],[0.198,-0.073],[0.178,-0.267],[0.044,-0.27],[0.048,-0.174],[0.025,-0.124],[0,-0.174],[-0.148,0.022]],\"v\":[[263.671,56.796],[263.275,56.796],[262.882,56.992],[262.488,57.191],[262.488,57.98],[262.196,58.372],[262.098,58.765],[261.702,58.765],[259.96,58.765],[259.538,58.765],[259.15,58.765],[257.868,58.765],[257.475,58.663],[257.28,59.352],[257.379,60.14],[257.329,60.334],[259.051,60.334],[259.832,60.529],[260.621,60.529],[261.408,60.529],[261.803,60.334],[262.196,59.941],[262.363,59.949],[262.587,59.941],[262.98,59.844],[263.371,59.45],[263.771,58.663],[263.868,57.879],[264.16,57.486],[264.259,57.092],[264.064,56.699]],\"c\":true},\"ix\":2},\"nm\":\"Path 116\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":116,\"ty\":\"sh\",\"ix\":117,\"ks\":{\"a\":0,\"k\":{\"i\":[[0.051,-0.176],[0.026,-0.12],[0,0],[0,0],[0,0.12],[0,0]],\"o\":[[-0.024,0.12],[0,0],[0,0],[0,-0.12],[0,0],[-0.072,0.169]],\"v\":[[170.077,58.765],[170.077,59.154],[170.469,59.45],[170.469,59.055],[170.373,58.765],[170.373,58.372]],\"c\":true},\"ix\":2},\"nm\":\"Path 117\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":117,\"ty\":\"sh\",\"ix\":118,\"ks\":{\"a\":0,\"k\":{\"i\":[[0.148,-0.099],[0.097,-0.122],[0.046,-0.172],[0.021,-0.126],[0.027,-0.12],[0,-0.146],[0,-0.175],[-0.219,0.024],[-0.121,0.024],[-0.121,0.149],[-0.049,0.125],[0,0.566],[0,0],[0.121,0.123]],\"o\":[[-0.147,0.1],[-0.098,0.124],[-0.028,0.123],[-0.028,0.124],[-0.024,0.127],[0,0.176],[0,0.219],[0.145,0],[0.171,-0.052],[0.076,-0.096],[0.248,-0.491],[0,0],[-0.027,-0.169],[-0.148,0.098]],\"v\":[[230.832,59.154],[230.439,59.45],[230.051,59.746],[230.051,60.14],[229.947,60.529],[229.853,60.924],[229.652,61.322],[230.241,61.417],[230.637,61.417],[231.029,61.121],[231.128,60.728],[231.621,59.352],[231.621,59.154],[231.227,58.862]],\"c\":true},\"ix\":2},\"nm\":\"Path 118\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":118,\"ty\":\"sh\",\"ix\":119,\"ks\":{\"a\":0,\"k\":{\"i\":[[0,0],[0.15,-0.023],[-0.026,-0.149],[-0.024,-0.168],[0,-0.144],[-0.07,-0.146],[-0.247,-0.296],[-0.097,-0.123],[-0.198,-0.072],[-0.172,0],[-0.169,0.027],[0.054,0.124],[0.047,0.173],[0.047,0.124],[0.099,0.149],[0.268,0.245],[0.074,0.122],[0.024,0.126],[0,0.148]],\"o\":[[-0.146,0],[0.048,0.148],[0.048,0.172],[0,0.148],[0,0.199],[0.175,0.321],[0.099,0.122],[0.123,0.168],[0.146,0.051],[0.172,0],[-0.045,-0.12],[-0.07,-0.175],[-0.048,-0.121],[-0.072,-0.17],[-0.195,-0.319],[-0.125,-0.097],[-0.075,-0.121],[-0.025,-0.121],[0,0]],\"v\":[[268.78,59.154],[268.387,59.254],[268.585,59.648],[268.683,60.164],[268.585,60.529],[268.876,60.924],[269.668,61.515],[269.863,61.91],[270.257,62.3],[270.65,62.496],[271.04,62.3],[270.941,61.91],[270.65,61.515],[270.65,61.121],[270.353,60.728],[269.571,60.14],[269.176,59.941],[269.176,59.548],[269.176,59.154]],\"c\":true},\"ix\":2},\"nm\":\"Path 119\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":119,\"ty\":\"sh\",\"ix\":120,\"ks\":{\"a\":0,\"k\":{\"i\":[[0,0],[0,0],[0,0],[0,0],[-0.295,-0.023],[-0.12,-0.043],[0,0],[-0.122,-0.127],[-0.194,-0.096],[-0.226,0],[-0.395,0.1],[-0.147,0],[-0.296,0],[-0.318,0],[-0.27,-0.146],[-0.126,-0.072],[-0.169,0],[-0.146,0],[-0.316,0],[-0.346,-0.074],[-0.34,-0.175],[-0.171,-0.021],[-0.082,0.007],[-0.083,-0.009],[-0.342,-0.024],[-0.024,0.141],[-0.053,0.148],[-0.067,0.006],[-0.061,-0.012],[-0.173,-0.024],[-0.148,0],[0,0],[-0.244,0],[-0.223,-0.093],[-0.124,-0.076],[-0.146,-0.099],[-0.317,-0.1],[-0.321,0],[0,0],[-0.149,0.024],[0.145,0.27],[0.198,0.073],[0.066,-0.013],[0.061,0.027],[0.195,0.32],[0,0],[-0.075,0.147],[-0.122,0.098],[-0.12,0.025],[-0.134,-0.016],[-0.131,0.027],[-0.293,0.175],[0.271,0.051],[0.146,0.024],[0.069,-0.006],[0.062,0.012],[0.344,0],[0.295,0],[0.198,0],[0.115,-0.003],[0.307,0.105],[0.315,0.098],[0.323,0.049]],\"o\":[[0,0],[0,0],[0,0],[0.293,0],[0.149,0],[0,0],[0.17,0.075],[0.151,0.145],[0.201,0.098],[0.415,0],[0.12,-0.024],[0.296,-0.024],[0.318,-0.024],[0.323,0],[0.148,0.072],[0.122,0.072],[0.151,0],[0.319,0],[0.368,0],[0.367,0.098],[0.175,0.066],[0.086,0.014],[0.077,-0.005],[0.322,0.048],[0.024,-0.146],[0.024,-0.175],[0.059,0.012],[0.068,-0.006],[0.173,0.053],[0.125,0.027],[0,0],[0.244,-0.024],[0.27,0],[0.122,0.051],[0.149,0.066],[0.272,0.196],[0.297,0.1],[0,0],[0.172,0],[-0.149,-0.295],[-0.103,-0.175],[-0.061,-0.024],[-0.067,0.013],[-0.348,-0.147],[0,0],[0.022,-0.169],[0.072,-0.152],[0.096,-0.074],[0.142,-0.037],[0.123,0.016],[0.32,-0.049],[-0.293,-0.047],[-0.15,-0.022],[-0.062,-0.012],[-0.068,0.006],[-0.316,-0.049],[-0.293,0],[-0.198,0],[-0.141,-0.006],[-0.267,0.005],[-0.321,-0.098],[-0.323,-0.096],[0,0]],\"v\":[[176.368,61.219],[176.368,61.711],[177.548,61.711],[177.548,62.595],[178.335,62.595],[178.728,62.595],[179.123,62.793],[179.415,63.192],[179.809,63.58],[180.402,63.678],[181.386,63.285],[181.777,63.285],[182.564,63.285],[183.397,63.192],[184.233,63.285],[184.431,63.678],[184.822,63.899],[185.217,63.973],[186.027,63.874],[186.986,63.973],[187.772,64.566],[188.167,64.857],[188.418,64.858],[188.655,64.857],[189.543,64.956],[189.543,64.566],[189.741,64.169],[189.936,64.169],[190.132,64.169],[190.525,64.463],[190.92,64.463],[191.311,64.463],[191.902,64.266],[192.59,64.463],[192.983,64.566],[193.277,64.956],[194.064,65.448],[194.902,65.548],[195.345,65.548],[195.738,65.348],[195.345,64.566],[194.949,64.169],[194.754,64.17],[194.559,64.169],[193.868,63.43],[190.822,63.43],[190.822,62.992],[191.017,62.595],[191.408,62.496],[191.819,62.492],[192.197,62.496],[192.983,62.103],[192.197,62.005],[191.806,61.811],[191.607,61.811],[191.408,61.811],[190.525,61.613],[189.741,61.711],[189.246,61.613],[188.868,61.611],[188.068,61.515],[187.285,61.121],[186.395,60.924]],\"c\":true},\"ix\":2},\"nm\":\"Path 120\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":120,\"ty\":\"sh\",\"ix\":121,\"ks\":{\"a\":0,\"k\":{\"i\":[[0.489,-0.376],[0,-0.293],[-0.025,-0.149],[0,0],[-0.094,0.144],[0,0.242],[0.124,0.368],[0.075,0.155]],\"o\":[[-0.048,0.292],[0,0.15],[0,0],[0.144,-0.097],[0.151,-0.201],[0,-0.395],[-0.048,-0.173],[-0.564,0.223]],\"v\":[[224.443,63.192],[224.344,64.266],[224.443,64.663],[225.626,64.663],[226.012,64.37],[226.311,63.78],[226.115,62.793],[225.819,62.397]],\"c\":true},\"ix\":2},\"nm\":\"Path 121\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":121,\"ty\":\"sh\",\"ix\":122,\"ks\":{\"a\":0,\"k\":{\"i\":[[0,0],[-0.018,-0.147],[-0.051,-0.149],[-0.066,-0.007],[-0.063,0.013],[-0.199,0],[-0.241,0],[0,0],[-0.148,0.072],[0,0]],\"o\":[[0.027,0.143],[0.027,0.17],[0.06,-0.011],[0.07,0.006],[0.171,-0.024],[0.242,0],[0,0],[0.195,0],[0,0],[0,0]],\"v\":[[214.217,63.091],[214.217,63.484],[214.415,63.874],[214.608,63.875],[214.811,63.874],[215.204,63.58],[215.792,63.78],[215.991,63.78],[216.381,63.484],[216.085,63.091]],\"c\":true},\"ix\":2},\"nm\":\"Path 122\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":122,\"ty\":\"sh\",\"ix\":123,\"ks\":{\"a\":0,\"k\":{\"i\":[[0.025,-0.005],[0.172,-0.032],[0.22,0.021],[0.223,-0.024],[0.271,-0.029],[0,0],[0.147,0],[0.146,-0.031],[0.244,0],[0.194,0.074],[0.22,0.069],[0.293,0.028],[0.22,0],[0.2,-0.044],[0.172,-0.072],[0.225,0],[0,0],[0,0],[-0.393,-0.052],[-0.836,0],[0,0],[-0.687,0.047],[-0.147,0],[-0.123,0.024],[-0.123,0.024],[-0.145,0.075],[-0.198,0.048],[-0.126,0],[-0.129,-0.005],[-0.144,0.011],[-0.198,0.022],[-0.173,0.074],[0,0],[0.07,0.006],[0.039,0]],\"o\":[[-0.171,0.048],[-0.257,0.051],[-0.181,-0.017],[-0.294,0.021],[0,0],[-0.15,0],[-0.149,0],[-0.243,0.024],[-0.221,0],[-0.219,-0.075],[-0.269,-0.076],[-0.221,-0.024],[-0.222,0],[-0.168,0.028],[-0.196,0.074],[0,0],[0,0],[0.271,0.271],[0.839,0.097],[0,0],[0.687,0],[0.148,0],[0.147,0],[0.125,-0.024],[0.15,-0.023],[0.173,-0.075],[0.122,-0.026],[0.137,-0.013],[0.123,0.006],[0.194,0],[0.199,-0.026],[0,0],[-0.063,0.014],[-0.039,-0.004],[-0.026,0]],\"v\":[[211.759,64.071],[211.368,64.37],[210.681,64.38],[210.089,64.37],[209.303,64.566],[208.91,64.566],[208.517,64.663],[208.124,64.663],[207.535,64.857],[206.944,64.762],[206.452,64.37],[205.668,64.266],[205.077,64.169],[204.483,64.266],[203.993,64.463],[203.475,64.762],[203.011,64.762],[203.306,64.956],[204.094,65.548],[206.207,65.548],[206.55,65.548],[208.321,65.548],[208.714,65.448],[209.107,65.448],[209.499,65.348],[209.892,65.152],[210.287,64.762],[210.681,64.762],[211.074,64.761],[211.467,64.762],[211.957,64.762],[212.352,64.463],[212.157,64.071],[211.956,64.072],[211.837,64.064]],\"c\":true},\"ix\":2},\"nm\":\"Path 123\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":123,\"ty\":\"sh\",\"ix\":124,\"ks\":{\"a\":0,\"k\":{\"i\":[[0.222,-0.071],[0.146,-0.053],[0.147,0],[0.297,-0.052],[0,-0.269],[-0.099,-0.147],[-0.465,0],[-0.27,0.072],[-0.146,0.076],[-0.174,0.05],[-0.343,-0.023],[-0.345,0],[-0.146,0],[0.046,-0.013],[0,0.025],[0.023,0.2],[0.272,0.051],[0.175,0.028],[0.063,-0.006],[0.061,0.014],[0.274,0]],\"o\":[[-0.147,0.053],[-0.122,0.046],[-0.294,0],[-0.27,0.02],[0,0.196],[0.272,0.37],[0.295,0],[0.149,-0.052],[0.17,-0.069],[0.316,-0.099],[0.344,0.024],[0.15,0],[-0.013,-0.025],[-0.046,0.012],[-0.047,-0.172],[-0.295,0],[-0.145,-0.024],[-0.071,-0.012],[-0.067,0.007],[-0.248,-0.044],[-0.244,0]],\"v\":[[199.176,64.169],[198.785,64.37],[198.488,64.663],[197.702,64.566],[197.113,64.956],[197.408,65.348],[198.585,65.548],[199.373,65.548],[199.767,65.348],[200.064,64.956],[200.947,65.053],[201.832,65.053],[202.227,64.956],[202.118,64.956],[202.029,64.956],[202.029,64.463],[201.24,64.463],[200.848,64.266],[200.649,64.267],[200.457,64.266],[199.814,64.071]],\"c\":true},\"ix\":2},\"nm\":\"Path 124\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":124,\"ty\":\"sh\",\"ix\":125,\"ks\":{\"a\":0,\"k\":{\"i\":[[0.041,-0.011],[0.123,-0.024],[0.198,-0.073],[0.124,-0.051],[0.123,-0.023],[0.17,-0.052],[0.169,-0.076],[0.125,-0.076],[0.119,-0.075],[0.168,0.004],[0.099,-0.017],[0.065,0.01],[0.101,-0.043],[0.147,-0.101],[0.123,-0.119],[0,-0.248],[0,0],[-0.004,-0.021],[0,0],[0,-0.15],[-0.295,-0.097],[-0.146,0],[-0.147,0],[-0.203,0.267],[-0.294,0.243],[-0.22,0.1],[-0.127,0],[-0.269,0.05],[-0.343,0.169],[-0.293,0.024],[-0.112,-0.008],[-0.149,0.027],[-0.12,0.024],[-0.099,0.099],[0.124,0.075],[0.193,0.074],[0.295,0],[0.083,0]],\"o\":[[-0.125,0.021],[-0.195,0.074],[-0.122,0.048],[-0.121,0.05],[-0.175,0.048],[-0.173,0.051],[-0.124,0.048],[-0.123,0.072],[-0.157,0.094],[-0.098,-0.002],[-0.071,0.01],[-0.094,-0.016],[-0.172,0.071],[-0.145,0.095],[-0.171,0.175],[0,0],[-0.004,0.025],[0,0],[0,0.144],[0,0.321],[0.122,0.026],[0.15,0],[0.346,0],[0.219,-0.297],[0.198,-0.17],[0.125,-0.045],[0.273,-0.051],[0.37,-0.07],[0.244,-0.125],[0.131,-0.01],[0.141,0.011],[0.124,0],[0.147,-0.024],[-0.149,-0.073],[-0.172,-0.121],[-0.271,-0.093],[-0.099,0],[-0.041,0]],\"v\":[[215.694,64.37],[215.301,64.463],[214.908,64.857],[214.512,64.956],[214.121,65.053],[213.728,65.348],[213.238,65.448],[212.844,65.548],[212.746,65.94],[212.254,66.026],[211.957,66.038],[211.756,66.027],[211.467,66.038],[211.17,66.432],[210.777,66.725],[210.386,67.218],[210.386,67.413],[210.386,67.482],[210.287,67.319],[210.188,67.71],[210.878,68.201],[211.27,68.3],[211.66,68.395],[212.257,67.71],[213.04,67.021],[213.53,66.527],[213.926,66.432],[214.709,66.331],[215.499,65.645],[216.283,65.448],[216.644,65.454],[217.069,65.448],[217.462,65.448],[217.66,65.053],[217.266,64.857],[216.876,64.463],[216.085,64.37],[215.816,64.356]],\"c\":true},\"ix\":2},\"nm\":\"Path 125\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":125,\"ty\":\"sh\",\"ix\":126,\"ks\":{\"a\":0,\"k\":{\"i\":[[0,0],[-0.016,-0.047]],\"o\":[[0.03,0.037],[0,0]],\"v\":[[210.508,67.683],[210.582,67.807]],\"c\":true},\"ix\":2},\"nm\":\"Path 126\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":126,\"ty\":\"sh\",\"ix\":127,\"ks\":{\"a\":0,\"k\":{\"i\":[[0.006,-0.001],[0.294,-0.145],[-0.097,-0.121],[-0.097,-0.151],[-0.097,-0.122],[-0.145,-0.073],[-0.173,-0.023],[-0.348,0],[-0.469,0.028],[0,0],[0.123,0.023],[0.127,0.122],[0.093,0.05],[0.127,0.078],[0.124,0.052],[0.147,0.123],[0.138,0.056],[0.069,0]],\"o\":[[-0.317,0.097],[0.073,0.124],[0.122,0.147],[0.073,0.12],[0.099,0.122],[0.15,0.074],[0.321,0.073],[0.462,0],[0,0],[-0.123,-0.029],[-0.174,-0.052],[-0.093,-0.094],[-0.104,-0.051],[-0.122,-0.071],[-0.174,-0.071],[-0.073,0.013],[-0.126,-0.05],[-0.007,0]],\"v\":[[202.616,66.234],[201.832,66.627],[202.029,67.021],[202.421,67.319],[202.616,67.71],[202.91,68.104],[203.405,68.201],[204.267,68.201],[205.467,68.15],[205.371,67.71],[204.978,67.612],[204.483,67.413],[204.391,67.021],[203.993,66.922],[203.602,66.822],[203.306,66.432],[202.954,66.333],[202.636,66.233]],\"c\":true},\"ix\":2},\"nm\":\"Path 127\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":127,\"ty\":\"sh\",\"ix\":128,\"ks\":{\"a\":0,\"k\":{\"i\":[[0.218,-0.029],[-0.048,-0.098],[-0.149,-0.126],[-0.298,0],[0,0],[-0.176,0.073],[0.072,0.124],[0.068,0.124],[0.121,0.052],[0.294,0]],\"o\":[[0.023,0.123],[0.097,0.145],[0.221,0.194],[0,0],[0.168,-0.029],[-0.054,-0.149],[-0.074,-0.121],[-0.076,-0.122],[-0.25,-0.095],[-0.223,0]],\"v\":[[278.123,66.432],[278.22,67.119],[278.516,67.516],[279.301,67.71],[279.694,67.71],[280.09,67.413],[279.889,67.021],[279.795,66.627],[279.402,66.527],[278.688,66.331]],\"c\":true},\"ix\":2},\"nm\":\"Path 128\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":128,\"ty\":\"sh\",\"ix\":129,\"ks\":{\"a\":0,\"k\":{\"i\":[[0.125,-0.05],[0.296,-0.15],[-0.05,-0.248],[0,0],[0,0],[0,0]],\"o\":[[-0.291,0.118],[0.073,0.221],[0,0],[0,0],[0,0],[-0.123,0.021]],\"v\":[[209.499,68.988],[208.714,69.382],[208.91,69.97],[210.089,69.97],[210.089,69.282],[209.892,68.889]],\"c\":true},\"ix\":2},\"nm\":\"Path 129\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":129,\"ty\":\"sh\",\"ix\":130,\"ks\":{\"a\":0,\"k\":{\"i\":[[0.115,0],[0,0],[0.146,0],[0.149,0],[0,0],[-0.123,-0.045],[-0.27,-0.076],[-0.144,-0.075],[-0.12,-0.07],[-0.05,-0.125],[0.176,0],[0.341,0],[0.297,-0.024],[0.149,-0.046],[0.172,-0.122],[0.368,-0.249],[0.169,-0.1],[0.147,-0.124],[0,-0.245],[0,0],[0,-0.145],[0.024,-0.293],[0,-0.122],[0.048,-0.173],[0.169,-0.048],[0.242,0],[0.517,0.324],[0.147,0.051],[0.123,0],[0.39,0],[0.026,0.293],[0,0],[0.323,-0.026],[0.112,0.009],[0.149,-0.028],[0.268,-0.2],[0.099,-0.123],[0.148,-0.122],[0.17,-0.021],[0.116,0.016],[0.148,-0.052],[0.121,-0.467],[0.023,-0.121],[0.221,-0.047],[0.064,0.006],[0.064,-0.013],[0.294,0],[0,0],[-0.097,-0.119],[-0.121,-0.141],[0,-0.172],[0,0],[0,0],[0,0.05],[0,0.292],[0,0.153],[0,0],[0.148,-0.072],[0.124,-0.101],[0.07,-0.171],[0,-0.294],[0.098,-0.464],[0.028,-0.118],[0.126,-0.147],[0.124,-0.199],[0.075,-0.147],[0.078,-0.121],[0.125,-0.094],[0.217,-0.295],[0.123,-0.1],[0.123,-0.073],[0.149,-0.046],[0.148,-0.025],[0.122,0],[0.199,0],[0.311,0.011],[0.294,-0.008],[0.197,-0.022],[0.347,-0.199],[0.196,-0.027],[0.174,0.021],[0.23,-0.052],[0.193,-0.126],[0.367,-0.145],[0.47,-0.194],[0.147,-0.098],[0.072,-0.318],[0.025,-0.297],[0.05,-0.144],[0.062,-0.005],[0.06,0.013],[0.148,0.025],[0.123,0.054],[0.097,0.096],[0.049,0.124],[0.074,0.171],[0.145,-0.244],[0.074,-0.145],[0,-0.147],[0,0],[0,-0.145],[0.022,-0.342],[0,0],[0.077,-0.148],[0.048,-0.194],[0,-0.147],[-0.122,-0.249],[-0.095,-0.15],[-0.099,-0.151],[-0.127,-0.268],[-0.291,-0.422],[0,0],[0.174,0.045],[0.08,-0.012],[0.084,0.023],[0.173,0.021],[0.147,0],[0.147,-0.027],[0,0],[-0.124,-0.149],[-0.248,-0.293],[-0.124,-0.123],[-0.122,-0.097],[-0.099,-0.203],[0,-0.173],[-0.026,-0.318],[-0.144,-0.293],[-0.074,-0.194],[-0.052,-0.395],[-0.022,-0.197],[-0.022,-0.194],[-0.175,-0.299],[-0.077,-0.146],[-0.171,-0.394],[-0.024,-0.153],[0,-0.125],[-0.05,-0.465],[-0.1,-0.319],[-0.024,-0.144],[0,-0.194],[0,0],[0.275,-0.071],[0.271,-0.147],[0.125,-0.075],[0.144,-0.196],[0,0],[-0.34,-0.271],[-0.246,-0.223],[-0.122,-0.074],[-0.149,-0.077],[-0.294,-0.121],[-0.124,-0.047],[-0.32,-0.098],[-0.246,0],[-0.245,0.023],[-0.27,0.049],[-0.125,0.025],[-0.197,0.149],[-0.072,0.124],[-0.098,0.146],[-0.049,0.099],[-0.124,0.127],[-0.143,0.072],[-0.295,0.022],[-0.27,0.099],[-0.196,0.071],[-0.294,0],[-0.661,-0.172],[-0.345,-0.097],[-0.197,-0.029],[-0.272,0],[-0.197,0.073],[-0.147,0.144],[-0.124,0.167],[-0.171,0.273],[-0.171,0.17],[-0.813,0.273],[-0.124,0.053],[-0.145,0.051],[-0.148,0.027],[-0.151,0],[-0.125,-0.022],[-0.143,-0.05],[-0.168,-0.047],[-0.296,0],[-0.27,0.053],[-0.152,0.071],[-0.37,0.271],[-0.145,0.126],[-0.121,0.095],[-0.171,0.05],[-0.068,-0.006],[-0.061,0.012],[-0.395,0],[-0.295,-0.025],[-0.198,0.015],[-0.275,-0.039],[-0.271,-0.12],[0,0],[-0.146,-0.077],[-0.293,0],[-0.243,0],[-0.148,0],[0,0],[-0.294,-0.026],[-0.123,-0.026],[-0.148,-0.072],[-0.1,-0.124],[-0.072,-0.22],[0,-0.144],[0,-0.466],[-0.444,-0.37],[-0.075,-0.147],[0,-0.292],[-0.12,-0.465],[-0.074,-0.12],[-0.147,-0.072],[-0.144,0],[-0.245,0.437],[-0.075,0.127],[-0.244,0.296],[-0.096,0.122],[-0.096,0.144],[-0.075,0.153],[-0.101,0.295],[-0.048,0.148],[-0.222,-0.221],[0,-0.195],[0.272,-0.273],[0,-0.518],[-0.047,-0.292],[-0.072,0.096],[-0.095,0.047],[-0.195,0],[-0.174,0],[-0.147,-0.025],[0,0],[0.025,-0.197],[0,0],[0.026,-0.466],[-0.059,-0.009],[-0.069,0.029],[-0.149,0.144],[-0.272,0],[-0.124,-0.198],[-0.072,-0.323],[-0.271,-0.271],[-0.1,-0.099],[0,-0.224],[0,0],[0,-0.149],[-0.025,-0.292],[-0.025,-0.12],[-0.247,-0.196],[-0.29,-0.176],[-0.173,-0.049],[-0.294,0],[-0.419,-0.193],[-0.149,-0.072],[-0.121,-0.076],[-0.151,-0.073],[-0.177,-0.05],[-0.393,0],[-0.445,0.441],[0,0.589],[0,0],[-0.17,-0.439],[-0.024,-0.119],[-0.247,-0.196],[-0.343,0],[-0.395,0.344],[-0.143,0.097],[-0.345,0.193],[-0.15,0.073],[-0.392,0],[-0.221,0],[-0.833,0],[-0.126,0.098],[-0.076,0.122],[-0.049,0.12],[-0.073,0.317],[-0.271,0.391],[-0.27,0.198],[0,0.272],[0,0],[0.051,0.196],[0,0.245],[-0.17,0.563],[-0.051,0.147],[-0.052,0.121],[-0.074,0.152],[-0.294,0.244],[-0.124,0.096],[-0.098,0.149],[-0.073,0.146],[-0.026,0.148],[-0.026,0.125],[-0.029,0.121],[-0.097,0.155],[-0.198,0.1],[-0.123,0.073],[-0.075,-0.004],[-0.073,0.085],[-0.048,0.173],[0,0.121],[0,0.146],[0,0.343],[-0.221,0.345],[-0.074,0.372],[-0.098,0.441],[-0.027,0.119],[0,0.144],[0,0],[0.072,0.147],[0.07,0.122],[0.1,0.174],[0.025,0.173],[0,0],[-0.022,0.118],[-0.075,0.319],[0,0.294],[0,0],[0,0],[0.024,0.122],[0.145,0.194],[0.172,0.348],[0.049,0.17],[0.023,0.124],[0.073,0.145],[0.075,0.126],[0.099,0.124],[0.274,0.219],[0.174,0.07],[0.147,0.119],[0,0.224],[0,0],[0.296,0],[0.466,0.052],[0.172,0.071],[0.122,0.069],[0.052,0.365],[0,0],[0,0.15],[0,0.342],[0.056,-0.011],[0.068,0.041],[0.073,0.121],[0.145,0.225],[0.12,0.079],[0.15,0.05],[0.269,0.196],[0.125,0.121],[0.099,0.121],[0.099,0.123],[0.198,0.076],[0.466,0.15],[0.152,0.099],[0.046,0.195],[0.073,0.269],[0.097,0.321],[0.025,0.171],[0.027,0.124],[0.021,0.145],[0,0.147],[0,0],[0.022,0.295],[0.022,0.126],[0.247,0.221],[0.097,0.195],[0,0.219],[0,0.296],[0.37,0.123],[0.124,0],[0.125,0.02],[0.15,0.025],[0.298,0.148],[0.074,0.12],[0.029,0.124],[0,0.125],[0.023,0.146],[0,0],[0.097,0.441],[0.097,0.172],[0.074,0.125],[0.051,0.196],[0.026,0.123],[0.045,0.272],[0.049,0.125],[0.294,0.197],[0.077,-0.015],[0.052,0.013],[0,0],[0.027,-0.295],[0,0],[0.072,-0.171],[0.097,-0.148],[0.17,-0.297],[0.047,-0.177],[0,-0.297],[-0.029,-0.123],[-0.025,-0.172],[0,-0.293],[0,0],[0.049,-0.197],[0.073,-0.172],[0,-0.193],[0,0],[0.123,-0.17],[0.123,-0.1],[0.198,-0.091],[0.224,0],[0.372,0.074],[0.069,-0.006],[0.061,0.01],[0.148,0.096],[0.095,0.177],[0.046,0.123],[0.127,0.148],[0.565,0.295],[0.395,0.121],[0.149,0.1],[0.247,0.314],[0.122,0.072],[0.081,-0.011],[0.054,0.01],[0.124,0],[0.072,-0.009],[0.094,0.026],[0.125,0.07],[0.077,0.174],[0,0.147],[0,0.175],[0,0.394],[0,0],[0.024,0.144],[0,0.169],[-0.074,0.149],[-0.074,0.126],[-0.07,0.122],[-0.075,0.146],[-0.12,0.148],[-0.2,0.32],[-0.048,0.121],[0,0],[0.27,0.047],[0.344,0.024],[0,0],[0.49,0.044],[0.17,0.047],[0.173,0],[0.127,0.024],[0.067,-0.005],[0.062,0.013],[0.194,0.098],[0.146,0.023],[0.068,-0.006],[0.061,0.012],[0.147,0.052],[0.12,0.053],[0.321,0.075],[0.043,0]],\"o\":[[0,0],[-0.148,0],[-0.147,0],[0,0],[0.075,0.125],[0.245,0.12],[0.152,0.049],[0.124,0.047],[0.125,0.078],[-0.146,0.049],[-0.343,0.023],[-0.295,0],[-0.17,0],[-0.219,0.098],[-0.343,0.273],[-0.174,0.1],[-0.176,0.096],[-0.174,0.149],[0,0],[0,0.146],[0.024,0.297],[0,0.15],[-0.024,0.174],[-0.051,0.17],[-0.222,0.079],[-0.615,0],[-0.147,-0.077],[-0.123,-0.047],[-0.367,-0.047],[-0.053,-0.29],[0,0],[-0.317,0],[-0.131,0.011],[-0.14,-0.01],[-0.324,0.043],[-0.124,0.07],[-0.118,0.172],[-0.146,0.127],[-0.121,0.023],[-0.143,-0.02],[-0.441,0.147],[-0.027,0.122],[-0.074,0.217],[-0.058,0.01],[-0.07,-0.006],[-0.271,0.049],[0,0],[0.073,0.126],[0.124,0.154],[0.098,0.129],[0,0],[0,0],[0,-0.046],[0,-0.295],[0,-0.149],[0,0],[-0.174,0],[-0.147,0.075],[-0.147,0.121],[-0.125,0.245],[0,0.487],[-0.027,0.124],[-0.073,0.202],[-0.146,0.173],[-0.072,0.144],[-0.071,0.125],[-0.072,0.124],[-0.266,0.242],[-0.074,0.123],[-0.123,0.096],[-0.124,0.072],[-0.147,0.05],[-0.123,0.023],[-0.173,0.023],[-0.39,0.03],[-0.233,-0.008],[-0.197,0],[-0.418,0.05],[-0.175,0.098],[-0.21,0.035],[-0.194,-0.023],[-0.223,0.046],[-0.347,0.22],[-0.491,0.198],[-0.171,0.079],[-0.273,0.17],[-0.052,0.269],[0,0.173],[-0.073,-0.01],[-0.066,0.007],[-0.152,-0.02],[-0.123,-0.022],[-0.124,-0.046],[-0.099,-0.098],[-0.075,-0.171],[-0.097,0.292],[-0.073,0.121],[-0.049,0.123],[0,0],[0,0.145],[0.022,0.348],[0,0],[-0.028,0.171],[-0.095,0.169],[-0.025,0.126],[0,0.294],[0.076,0.17],[0.097,0.145],[0.168,0.243],[0.219,0.49],[0,0],[-0.172,-0.076],[-0.087,-0.025],[-0.079,0.011],[-0.174,-0.049],[-0.12,-0.025],[-0.172,0],[0,0],[0,0.194],[0.244,0.296],[0.117,0.148],[0.124,0.124],[0.147,0.123],[0.071,0.146],[0.022,0.343],[0.022,0.317],[0.098,0.193],[0.146,0.345],[0.022,0.192],[0.026,0.196],[0.047,0.368],[0.072,0.146],[0.219,0.368],[0.05,0.149],[0.021,0.117],[0.075,0.465],[0.048,0.323],[0.047,0.147],[0.048,0.175],[0,0],[-0.294,0],[-0.319,0.098],[-0.123,0.08],[-0.195,0.149],[0,0],[0.466,0],[0.248,0.195],[0.123,0.098],[0.125,0.074],[0.296,0.145],[0.128,0.051],[0.294,0.125],[0.224,0.049],[0.248,0],[0.295,-0.029],[0.122,0],[0.225,-0.051],[0.123,-0.072],[0.102,-0.147],[0.073,-0.098],[0.097,-0.146],[0.119,-0.121],[0.248,-0.122],[0.296,-0.025],[0.201,-0.074],[0.269,-0.096],[0.689,0],[0.345,0.1],[0.172,0.048],[0.269,0.021],[0.217,0],[0.195,-0.072],[0.148,-0.151],[0.195,-0.275],[0.147,-0.221],[0.613,-0.612],[0.121,-0.026],[0.144,-0.045],[0.146,-0.05],[0.124,-0.022],[0.147,0],[0.146,0.027],[0.173,0.051],[0.272,0.076],[0.29,0],[0.171,-0.026],[0.394,-0.223],[0.17,-0.121],[0.147,-0.12],[0.123,-0.099],[0.061,-0.012],[0.068,0.006],[0.371,-0.123],[0.292,0],[0.255,0.024],[0.225,-0.016],[0.296,0.05],[0,0],[0.172,0.071],[0.249,0.149],[0.248,0],[0.149,0],[0,0],[0.299,0],[0.148,0],[0.151,0.046],[0.175,0.074],[0.148,0.171],[0.027,0.125],[0.021,0.47],[0.586,0],[0.145,0.125],[0.145,0.249],[0.028,0.493],[0.025,0.124],[0.072,0.145],[0.123,0.073],[0.517,0],[0.074,-0.122],[0.167,-0.319],[0.1,-0.122],[0.098,-0.125],[0.101,-0.15],[0.147,-0.243],[0.049,-0.145],[0.293,0.097],[0.119,0.125],[0,0.393],[-0.343,0.341],[0,0.294],[0.125,-0.073],[0.075,-0.098],[0.151,-0.099],[0.171,0],[0.147,0],[0,0],[0,0.22],[0,0],[-0.072,0.444],[0.054,-0.01],[0.075,0.011],[0.199,-0.096],[0.172,-0.17],[0.243,0],[0.17,0.274],[0.098,0.366],[0.096,0.095],[0.149,0.148],[0,0],[0,0.146],[-0.025,0.296],[0,0.15],[0.096,0.324],[0.245,0.198],[0.149,0.073],[0.271,0.096],[0.49,0],[0.172,0.079],[0.12,0.074],[0.145,0.073],[0.147,0.072],[0.342,0.123],[0.641,0],[0.416,-0.413],[0,0],[0.49,0],[0.025,0.127],[0.075,0.321],[0.244,0.197],[0.537,0],[0.147,-0.124],[0.32,-0.247],[0.147,-0.073],[0.321,-0.197],[0.223,0],[0.835,0.021],[0.177,0],[0.122,-0.094],[0.073,-0.098],[0.121,-0.293],[0.099,-0.468],[0.17,-0.275],[0.195,-0.147],[0,0],[0,-0.225],[-0.047,-0.218],[0,-0.587],[0.025,-0.15],[0.026,-0.124],[0.048,-0.147],[0.174,-0.343],[0.147,-0.125],[0.124,-0.1],[0.075,-0.121],[0.075,-0.146],[0.02,-0.125],[0.02,-0.118],[0.047,-0.171],[0.099,-0.166],[0.147,-0.073],[0.062,-0.03],[0.102,0.005],[0.121,-0.149],[0.019,-0.122],[0,-0.126],[0.025,-0.343],[0.219,-0.322],[0.217,-0.316],[0.098,-0.44],[0.026,-0.123],[0.02,-0.126],[0,0],[0,-0.174],[-0.074,-0.147],[-0.1,-0.175],[-0.072,-0.149],[0,0],[0,-0.149],[0.078,-0.323],[0.047,-0.27],[0,0],[0,0],[0,-0.149],[-0.054,-0.217],[-0.221,-0.295],[-0.075,-0.17],[-0.024,-0.126],[-0.05,-0.149],[-0.076,-0.149],[-0.098,-0.144],[-0.223,-0.243],[-0.146,-0.126],[-0.169,-0.078],[-0.175,-0.122],[0,0],[-0.294,-0.024],[-0.465,0],[-0.198,0],[-0.148,-0.049],[-0.296,-0.223],[0,0],[0,-0.124],[-0.023,-0.339],[-0.064,-0.012],[-0.073,0.015],[-0.124,-0.074],[-0.147,-0.224],[-0.074,-0.096],[-0.146,-0.074],[-0.295,-0.121],[-0.151,-0.101],[-0.121,-0.128],[-0.095,-0.127],[-0.123,-0.146],[-0.443,-0.196],[-0.171,-0.045],[-0.171,-0.097],[-0.049,-0.267],[-0.098,-0.319],[-0.05,-0.169],[-0.024,-0.124],[-0.024,-0.145],[-0.029,-0.121],[0,0],[-0.029,-0.296],[0,-0.146],[-0.1,-0.318],[-0.169,-0.147],[-0.099,-0.174],[0,-0.294],[0,-0.396],[-0.122,-0.026],[-0.12,0],[-0.146,-0.026],[-0.318,-0.073],[-0.146,-0.073],[-0.073,-0.103],[-0.024,-0.125],[-0.024,-0.149],[0,0],[-0.027,-0.467],[-0.051,-0.199],[-0.073,-0.122],[-0.1,-0.169],[-0.021,-0.122],[-0.048,-0.272],[-0.029,-0.122],[-0.147,-0.322],[-0.072,-0.04],[-0.058,0.011],[0,0],[0.048,0.296],[0,0],[-0.022,0.177],[-0.075,0.172],[-0.175,0.27],[-0.076,0.148],[-0.099,0.268],[0,0.144],[0.024,0.17],[0.051,0.272],[0,0],[0,0.225],[-0.024,0.172],[-0.075,0.174],[0,0],[0,0.218],[-0.098,0.122],[-0.145,0.123],[-0.193,0.103],[-0.392,0],[-0.061,-0.014],[-0.065,0.006],[-0.171,-0.027],[-0.15,-0.1],[-0.055,-0.12],[-0.099,-0.172],[-0.417,-0.496],[-0.346,-0.172],[-0.171,-0.049],[-0.322,-0.246],[-0.098,-0.127],[-0.057,-0.029],[-0.063,0.008],[-0.119,-0.028],[-0.079,-0.011],[-0.087,0.01],[-0.147,-0.027],[-0.146,-0.102],[-0.049,-0.122],[0,-0.175],[0,-0.392],[0,0],[-0.027,-0.151],[-0.022,-0.149],[0,-0.172],[0.077,-0.148],[0.074,-0.096],[0.074,-0.147],[0.099,-0.178],[0.242,-0.297],[0.071,-0.124],[0,0],[-0.265,-0.049],[-0.321,-0.072],[0,0],[-0.494,0],[-0.195,0],[-0.147,-0.049],[-0.149,0],[-0.061,-0.012],[-0.067,0.006],[-0.198,-0.048],[-0.151,-0.071],[-0.063,-0.013],[-0.066,0.006],[-0.146,-0.025],[-0.126,-0.021],[-0.295,-0.145],[-0.048,-0.008],[-0.085,0]],\"v\":[[226.975,69.674],[226.605,69.674],[226.214,69.773],[225.819,69.722],[225.819,70.461],[225.918,70.856],[226.702,71.052],[227.095,71.249],[227.49,71.343],[227.49,71.741],[227.095,71.937],[226.214,71.937],[225.425,71.937],[225.032,72.133],[224.54,72.525],[223.657,73.216],[223.168,73.512],[222.676,73.804],[222.283,74.294],[222.283,74.493],[222.381,74.883],[222.381,75.672],[222.283,76.062],[222.184,76.557],[221.889,76.946],[221.249,76.946],[219.723,76.654],[219.527,76.261],[219.134,76.261],[218.155,76.261],[217.952,75.379],[217.193,75.379],[216.381,75.575],[216.022,75.568],[215.598,75.575],[214.811,75.971],[214.61,76.359],[214.217,76.751],[213.926,77.145],[213.572,77.134],[213.137,77.145],[212.452,78.229],[212.352,78.621],[211.957,79.113],[211.772,79.112],[211.566,79.113],[210.777,79.113],[210.777,79.799],[210.975,80.192],[211.368,80.487],[211.566,80.908],[211.566,81.667],[209.845,81.667],[209.892,81.571],[209.795,80.787],[209.845,80.388],[208.741,80.388],[208.321,80.487],[207.926,80.687],[207.634,81.079],[207.535,81.865],[207.535,83.142],[207.434,83.533],[207.042,83.928],[206.647,84.424],[206.353,84.813],[206.254,85.206],[205.861,85.404],[205.176,86.191],[204.978,86.587],[204.587,86.781],[204.189,86.978],[203.798,87.174],[203.405,87.174],[202.91,87.269],[201.913,87.277],[201.145,87.269],[200.65,87.37],[199.668,87.765],[199.176,88.061],[198.615,88.055],[197.999,88.061],[197.509,88.455],[196.524,88.941],[195.243,89.53],[194.754,89.731],[194.262,90.516],[194.262,91.304],[194.064,91.695],[193.863,91.696],[193.676,91.695],[193.277,91.499],[192.884,91.4],[192.493,91.304],[192.493,90.91],[192.197,90.516],[191.902,91.304],[191.508,91.499],[191.508,91.895],[191.508,92.285],[191.61,92.677],[191.61,93.564],[191.61,93.958],[191.311,94.351],[190.92,94.742],[190.92,95.136],[191.017,95.925],[191.311,96.318],[191.709,96.614],[192.004,97.397],[192.785,98.58],[192.689,98.972],[192.295,98.679],[192.046,98.679],[191.806,98.679],[191.408,98.383],[191.017,98.282],[190.624,98.482],[190.624,99.243],[190.92,99.66],[191.61,100.446],[191.902,100.839],[192.295,101.132],[192.689,101.53],[192.884,101.921],[192.884,102.805],[193.18,103.688],[193.475,104.18],[193.772,105.166],[193.868,105.658],[193.868,106.147],[194.262,107.032],[194.559,107.425],[195.147,108.406],[195.345,108.806],[195.443,109.198],[195.443,110.47],[195.738,111.357],[195.934,111.747],[196.033,112.264],[196.033,113.913],[195.243,113.913],[194.457,114.402],[194.064,114.602],[193.676,115.094],[193.772,115.486],[194.949,115.682],[195.443,116.471],[195.835,116.667],[196.228,116.866],[197.012,117.255],[197.408,117.353],[198.194,117.749],[198.832,117.749],[199.473,117.749],[200.258,117.551],[200.65,117.551],[201.145,117.157],[201.537,116.961],[201.832,116.569],[201.931,116.175],[202.324,115.877],[202.616,115.486],[203.405,115.389],[204.189,115.29],[204.587,114.898],[205.371,114.802],[207.139,115.094],[208.025,115.486],[208.517,115.587],[209.207,115.682],[209.795,115.587],[210.188,115.194],[210.582,114.802],[211.072,114.011],[211.566,113.521],[213.334,112.143],[213.728,112.043],[214.121,111.851],[214.512,111.65],[214.908,111.65],[215.301,111.65],[215.694,111.851],[216.085,112.143],[216.876,112.143],[217.66,112.143],[218.056,111.851],[218.939,111.063],[219.43,110.766],[219.723,110.375],[220.017,109.981],[220.214,109.981],[220.41,109.981],[221.447,109.786],[222.184,109.883],[222.84,109.877],[223.559,109.883],[224.344,110.177],[224.74,110.375],[225.129,110.669],[225.819,111.063],[226.433,110.912],[226.803,110.968],[227.587,110.968],[228.475,110.968],[228.866,110.968],[229.261,111.161],[229.556,111.555],[229.947,112.043],[230.051,112.439],[230.051,113.618],[231.522,113.913],[231.816,114.306],[232.011,115.094],[232.111,116.373],[232.21,116.763],[232.504,117.157],[232.897,117.157],[234.077,116.471],[234.178,116.075],[234.96,115.486],[235.157,115.094],[235.551,114.802],[235.848,114.402],[236.144,113.618],[236.34,113.225],[237.126,113.521],[237.421,113.913],[236.829,114.702],[236.436,116.004],[236.533,116.763],[236.928,116.667],[237.024,116.274],[237.421,115.977],[237.814,116.175],[238.206,116.175],[238.206,117.331],[238.009,117.848],[238.009,118.237],[237.814,119.419],[237.986,119.426],[238.206,119.419],[238.6,119.027],[239.092,118.533],[239.684,118.731],[239.779,119.617],[240.566,120.306],[240.959,120.5],[241.055,121.092],[241.055,121.287],[240.959,121.679],[240.959,122.466],[240.959,122.859],[241.551,123.547],[242.332,124.041],[242.728,124.334],[243.517,124.43],[244.793,124.527],[245.092,124.925],[245.482,125.022],[245.876,125.319],[246.271,125.613],[247.251,125.711],[248.827,125.219],[249.219,123.745],[249.98,123.745],[250.986,124.527],[250.986,124.925],[251.381,125.711],[252.264,126.005],[253.447,125.219],[253.837,124.925],[254.723,124.334],[255.116,124.041],[256.123,123.745],[256.689,123.844],[258.827,123.769],[259.246,123.547],[259.639,123.351],[259.639,122.959],[260.033,122.174],[260.132,120.896],[260.918,120.5],[261.308,119.91],[261.308,119.718],[261.014,119.223],[261.014,118.584],[261.21,117.058],[261.408,116.667],[261.507,116.274],[261.702,115.877],[262.392,115.094],[262.783,114.802],[263.178,114.503],[263.371,114.109],[263.576,113.718],[263.576,113.322],[263.671,112.932],[263.965,112.533],[264.358,112.143],[264.751,111.947],[264.964,111.925],[265.243,111.851],[265.243,111.357],[265.342,110.968],[265.439,110.572],[265.439,109.688],[266.03,108.702],[266.522,107.817],[266.816,106.638],[266.917,106.248],[267.009,105.879],[267.009,103.862],[266.717,103.492],[266.522,103.101],[266.126,102.708],[265.831,102.314],[265.831,101.921],[265.831,101.53],[266.225,100.74],[266.225,99.956],[266.03,99.857],[266.03,98.679],[266.03,98.282],[265.637,97.792],[265.045,97.004],[264.751,96.614],[264.751,96.219],[264.556,95.825],[264.358,95.43],[263.965,95.136],[263.275,94.45],[262.882,94.155],[262.392,93.958],[262.098,93.49],[262.098,91.596],[261.308,91.499],[260.132,91.499],[259.639,91.304],[259.246,91.108],[258.655,90.322],[258.655,89.929],[258.556,89.53],[258.556,88.65],[258.376,88.661],[258.167,88.65],[257.772,88.455],[257.772,87.662],[257.379,87.566],[256.983,87.37],[256.199,86.978],[255.9,86.587],[255.507,86.291],[255.313,85.896],[254.822,85.6],[253.642,85.206],[253.149,85.011],[252.756,84.618],[252.756,83.832],[252.264,83.043],[252.264,82.554],[252.167,82.159],[251.973,81.766],[251.973,81.373],[251.973,80.983],[251.873,80.192],[251.873,79.799],[251.28,79.113],[250.79,78.721],[250.691,78.132],[250.887,77.342],[250.199,76.557],[249.806,76.557],[249.413,76.557],[249.02,76.359],[248.134,76.164],[247.743,75.971],[247.743,75.575],[247.743,75.18],[247.548,74.789],[247.548,74.393],[247.548,73.216],[247.154,72.82],[247.055,72.426],[246.66,72.035],[246.66,71.642],[246.568,70.856],[246.464,70.461],[245.777,69.773],[245.55,69.763],[245.383,69.773],[245.283,70.165],[245.184,70.952],[245.184,71.343],[244.894,71.741],[244.598,72.133],[244.107,72.92],[243.813,73.316],[243.714,74.101],[243.714,74.493],[244.007,74.883],[244.007,75.672],[244.007,76.455],[243.908,77.05],[243.714,77.54],[243.418,77.955],[243.418,81.251],[243.223,81.766],[242.824,81.965],[242.431,82.352],[241.842,82.455],[240.858,82.261],[240.658,82.26],[240.467,82.261],[240.074,81.965],[239.684,81.667],[239.684,81.276],[239.288,80.983],[237.912,79.997],[236.928,79.605],[236.436,79.408],[235.848,78.524],[235.652,78.132],[235.436,78.125],[235.254,78.132],[234.865,78.033],[234.641,78.039],[234.373,78.033],[233.978,77.838],[233.585,77.54],[233.681,77.175],[233.585,76.751],[233.783,75.745],[233.783,75.575],[233.585,75.18],[233.392,74.789],[233.585,74.393],[233.978,74.197],[234.077,73.804],[234.373,73.412],[234.668,72.92],[235.454,72.231],[235.551,71.839],[235.157,71.839],[234.373,71.642],[233.488,71.446],[233.095,71.446],[231.816,71.446],[231.326,71.249],[230.931,71.052],[230.537,71.052],[230.342,71.052],[230.146,71.052],[229.754,70.657],[229.358,70.461],[229.158,70.461],[228.965,70.461],[228.574,70.263],[228.181,70.165],[227.392,69.674],[227.258,69.663]],\"c\":true},\"ix\":2},\"nm\":\"Path 130\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":130,\"ty\":\"sh\",\"ix\":131,\"ks\":{\"a\":0,\"k\":{\"i\":[[0.338,-0.023],[0.34,0],[0,-0.245],[-0.197,-0.12],[-0.146,0],[-0.149,0.024],[-0.296,0.024],[0,0],[-0.297,0.022],[0,0],[0,0]],\"o\":[[-0.347,0.029],[-0.199,0.153],[0,0.251],[0.121,0.074],[0.171,0],[0.268,-0.048],[0,0],[0.295,-0.023],[0,0],[0,0],[-0.319,0.075]],\"v\":[[223.464,70.065],[222.579,70.065],[222.184,70.56],[222.381,71.148],[222.772,71.249],[223.168,71.052],[223.952,70.952],[224.344,70.952],[225.129,70.856],[225.129,70.065],[224.344,69.869]],\"c\":true},\"ix\":2},\"nm\":\"Path 131\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":131,\"ty\":\"sh\",\"ix\":132,\"ks\":{\"a\":0,\"k\":{\"i\":[[0.096,-0.07],[0,0]],\"o\":[[0,0],[-0.146,0.025]],\"v\":[[222.579,70.065],[222.969,69.97]],\"c\":true},\"ix\":2},\"nm\":\"Path 132\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":132,\"ty\":\"sh\",\"ix\":133,\"ks\":{\"a\":0,\"k\":{\"i\":[[0.046,-0.244],[0.098,-0.248],[0.244,-0.296],[0.197,-0.248],[0.147,-0.293],[0.099,-0.242],[0.099,-0.248],[0.167,0.013],[0.073,-0.121],[0.492,-0.341],[0.25,0],[0.282,0.023],[0.262,-0.021],[0.494,-0.293],[0.148,-0.246],[0.048,-0.246],[0.048,-0.247],[0,-0.687],[0,-0.289],[-0.099,-0.541],[-0.049,-0.347],[0,-0.293],[0.148,-0.248],[0.165,0.058],[0.07,-0.097],[0.147,-0.296],[0.048,-0.295],[0.147,-0.54],[0.048,-0.339],[0,0],[-0.098,-0.442],[0,-0.296],[0,0],[0,-0.3],[0,-0.588],[-0.295,0],[-0.591,0],[-0.248,-0.049],[-0.136,0.013],[-0.122,-0.024],[-0.3,0],[-0.294,0],[-0.171,-0.003],[-0.305,0.204],[-0.194,0.292],[-0.047,0.292],[0,0.298],[-0.148,0.886],[-0.048,0.241],[-0.149,0.348],[-0.051,0.341],[0,0.589],[-0.1,0.544],[-0.246,0.248],[-0.244,0.296],[0,0.392],[0,0.786],[-0.146,0.442],[0,0.344],[0,0],[0,0.295],[0,0],[-0.147,0.345],[-0.052,0.244],[0,0],[0.047,0.791],[0.047,0.538],[0.047,0.248],[0.296,0.244],[0.347,0.15],[0.249,0.099]],\"o\":[[-0.048,0.244],[-0.147,0.34],[-0.248,0.296],[-0.202,0.244],[-0.096,0.248],[-0.1,0.244],[-0.05,0.124],[-0.165,-0.013],[-0.295,0.494],[-0.196,0.101],[-0.3,0.057],[-0.224,-0.017],[-0.589,0.05],[-0.292,0.146],[-0.148,0.242],[-0.049,0.241],[-0.148,0.639],[0,0.296],[0,0.593],[0.052,0.341],[0.048,0.243],[0,0.296],[-0.076,0.126],[-0.155,-0.054],[-0.196,0.244],[-0.146,0.291],[-0.1,0.54],[-0.049,0.347],[0,0],[0,0.488],[0.047,0.245],[0,0],[0,0.296],[0.05,0.588],[0.294,0],[0.593,0],[0.297,0],[0.123,0.027],[0.133,-0.012],[0.246,0.054],[0.293,0],[0.181,-0.015],[0.384,0.008],[0.292,-0.195],[0.147,-0.249],[0.05,-0.245],[0.05,-0.931],[0.05,-0.244],[0.097,-0.348],[0.145,-0.34],[0.096,-0.541],[0,-0.589],[0.046,-0.34],[0.296,-0.29],[0.2,-0.25],[0,-0.785],[0,-0.496],[0.098,-0.293],[0,0],[0,-0.296],[0,0],[0,-0.391],[0.099,-0.245],[0,0],[0,-0.79],[0,-0.587],[0,-0.248],[-0.049,-0.345],[-0.295,-0.244],[-0.242,-0.099],[0,0.296]],\"v\":[[69.703,73.116],[69.703,73.905],[68.918,74.493],[68.329,75.279],[67.539,75.868],[67.344,76.654],[67.344,77.443],[66.966,77.542],[66.557,77.638],[65.965,79.211],[65.178,79.211],[64.326,79.224],[63.607,79.211],[62.034,79.605],[61.249,79.997],[61.249,80.787],[61.249,81.571],[60.462,83.142],[60.656,83.928],[60.656,85.503],[61.249,86.291],[61.249,87.074],[61.249,87.863],[60.84,87.874],[60.462,87.863],[60.066,88.65],[59.676,89.434],[59.676,91.007],[59.083,91.793],[59.083,92.189],[59.478,93.368],[59.676,94.155],[59.676,94.938],[59.871,95.73],[59.871,97.202],[60.656,97.3],[62.23,97.202],[62.626,97.887],[63.022,97.888],[63.411,97.887],[64.199,98.084],[64.984,97.887],[65.514,97.879],[66.557,97.692],[67.145,96.91],[67.539,96.119],[67.539,95.332],[67.539,92.973],[67.734,92.189],[68.329,91.4],[68.918,90.615],[68.918,89.044],[68.918,87.465],[69.703,86.877],[70.682,86.291],[71.471,85.699],[70.883,83.735],[71.276,82.554],[71.671,81.766],[71.671,80.983],[71.471,80.192],[71.471,79.799],[72.257,79.211],[72.456,78.425],[72.456,78.033],[72.062,76.062],[72.062,74.493],[72.062,73.705],[71.276,73.116],[70.487,72.525],[69.703,72.327]],\"c\":true},\"ix\":2},\"nm\":\"Path 133\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":133,\"ty\":\"sh\",\"ix\":134,\"ks\":{\"a\":0,\"k\":{\"i\":[[0.039,-0.004],[0.063,0.014],[0,0],[-0.095,-0.15],[-0.075,-0.124],[-0.127,-0.101],[-0.049,-0.196],[-0.049,-0.273],[-0.095,-0.145],[-0.144,-0.095],[-0.124,-0.072],[-0.466,-0.223],[-0.296,-0.119],[-0.147,-0.045],[-0.172,0],[0,0],[0.027,0.124],[0.1,0.148],[0.147,0.102],[0.122,0.05],[0.197,0.124],[0.22,0.123],[0.121,0.074],[0.073,0.201],[0.024,0.125],[0.296,0.222],[0.37,0.248],[0.196,0.05],[0.025,0]],\"o\":[[-0.069,0.006],[0,0],[0.097,0.15],[0.076,0.123],[0.073,0.12],[0.146,0.121],[0.05,0.271],[0.023,0.172],[0.101,0.145],[0.124,0.074],[0.439,0.295],[0.297,0.148],[0.146,0.052],[0.147,0.048],[0,0],[-0.02,-0.123],[-0.048,-0.171],[-0.099,-0.146],[-0.096,-0.046],[-0.221,-0.097],[-0.224,-0.122],[-0.124,-0.076],[-0.175,-0.1],[-0.024,-0.117],[-0.121,-0.367],[-0.343,-0.247],[-0.17,-0.096],[-0.025,-0.004],[-0.038,0]],\"v\":[[287.269,87.372],[287.068,87.37],[286.379,87.465],[286.673,87.863],[286.87,88.259],[287.267,88.455],[287.657,88.846],[287.657,89.633],[287.949,90.026],[288.245,90.417],[288.641,90.615],[289.92,91.206],[290.704,91.596],[291.097,91.793],[291.514,91.99],[292.374,91.99],[292.374,91.596],[292.079,91.206],[291.785,90.808],[291.392,90.712],[290.803,90.516],[290.311,90.026],[289.92,89.929],[289.525,89.53],[289.525,89.139],[288.835,88.354],[287.949,87.662],[287.46,87.37],[287.386,87.365]],\"c\":true},\"ix\":2},\"nm\":\"Path 134\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":134,\"ty\":\"sh\",\"ix\":135,\"ks\":{\"a\":0,\"k\":{\"i\":[[0,-0.244],[-0.124,-0.272],[-0.07,-0.145],[-0.219,-0.294],[-0.341,-0.268],[-0.099,-0.124],[-0.073,-0.147],[-0.051,-0.124],[-0.076,-0.149],[0,-0.295],[-0.047,-0.145],[-0.049,-0.145],[0,-0.194],[0,0],[0,0],[-0.05,-0.392],[0,-0.15],[0,0],[0,0],[0,0],[0,0],[-0.173,0.393],[-0.126,0.118],[-0.121,0.125],[-0.07,0.175],[-0.044,0.122],[-0.126,0.295],[-0.026,0.146],[0,0.291],[0,0],[-0.049,0.174],[-0.048,0.145],[-0.075,0.172],[-0.075,0.123],[-0.12,0.124],[-0.078,-0.025],[-0.036,0.047],[0,0.173],[0,0.15],[0.074,0.171],[0.271,0],[0.174,-0.121],[0.075,-0.098],[0.246,0],[0.393,0.027],[0,0],[0.144,0],[0.147,-0.024],[0,0],[0,0.323],[0.222,0.244],[0.196,0.118],[0.073,-0.017],[0.057,0.022],[0.046,-0.171],[0.023,-0.122],[0.074,-0.168],[0.126,0.1],[0.095,0.145],[0,0.242],[-0.023,0.217],[0,0.147],[0.049,0.099],[0.084,-0.023],[0.047,0.035],[0.098,0.1],[0.122,0.145],[0.098,0.125],[0.124,0.176],[0.096,0.169],[0.104,0.149],[0.169,0.075],[0.22,0]],\"o\":[[0,0.324],[0.05,0.149],[0.173,0.347],[0.273,0.346],[0.119,0.073],[0.097,0.125],[0.048,0.121],[0.075,0.172],[0,0.295],[0,0.177],[0.05,0.148],[0.072,0.177],[0,0],[0,0],[-0.02,0.392],[0,0.148],[0,0],[0,0],[0,0],[0,0],[0.024,-0.443],[0.074,-0.175],[0.122,-0.126],[0.123,-0.121],[0.054,-0.119],[0.15,-0.294],[0.046,-0.15],[0.047,-0.268],[0,0],[0.027,-0.201],[0.051,-0.151],[0.051,-0.172],[0.045,-0.124],[0.074,-0.147],[0.051,-0.05],[0.075,0.024],[0.101,-0.123],[0,-0.146],[0,-0.193],[-0.097,-0.228],[-0.246,0],[-0.099,0.076],[-0.147,0.176],[-0.391,0],[0,0],[-0.146,0],[-0.172,0],[0,0],[0.119,-0.295],[0,-0.344],[-0.147,-0.173],[-0.065,-0.041],[-0.062,0.014],[-0.075,0.172],[-0.024,0.124],[-0.049,0.171],[-0.12,-0.072],[-0.145,-0.121],[-0.151,-0.198],[0,-0.221],[0,-0.147],[0,-0.144],[-0.027,-0.051],[-0.076,0.02],[-0.126,-0.099],[-0.124,-0.118],[-0.099,-0.123],[-0.123,-0.171],[-0.124,-0.17],[-0.099,-0.147],[-0.096,-0.146],[-0.174,-0.073],[-0.242,0]],\"v\":[[303.094,117.058],[303.387,117.848],[303.582,118.237],[304.072,119.123],[304.96,119.91],[305.353,120.107],[305.548,120.5],[305.647,120.896],[305.943,121.287],[305.845,122.342],[305.943,122.761],[306.139,123.152],[306.434,123.573],[306.434,126.053],[304.465,126.053],[304.368,127.086],[304.465,127.482],[304.465,127.923],[306.999,127.923],[306.999,131.167],[308.694,131.167],[308.892,130.038],[309.287,129.745],[309.68,129.445],[310.069,129.149],[310.168,128.758],[310.566,127.973],[310.762,127.578],[310.762,126.795],[312.137,126.795],[312.137,126.3],[312.332,125.908],[312.629,125.515],[312.629,125.123],[312.92,124.729],[313.131,124.728],[313.314,124.729],[313.514,124.334],[313.415,123.938],[313.314,123.453],[312.725,123.055],[312.137,123.253],[312.137,123.645],[311.496,123.745],[310.467,123.645],[309.973,123.645],[309.581,123.547],[309.188,123.721],[309.09,122.859],[309.384,122.071],[308.793,121.386],[308.4,120.896],[308.189,120.89],[308.008,120.896],[307.714,121.287],[307.714,121.679],[307.415,122.071],[307.022,121.875],[306.73,121.485],[306.533,120.896],[306.632,120.306],[306.73,119.91],[306.632,119.518],[306.441,119.512],[306.238,119.518],[306.04,119.123],[305.647,118.829],[305.451,118.436],[305.059,118.041],[304.764,117.551],[304.465,117.157],[304.176,116.763],[303.582,116.667]],\"c\":true},\"ix\":2},\"nm\":\"Path 135\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":135,\"ty\":\"sh\",\"ix\":136,\"ks\":{\"a\":0,\"k\":{\"i\":[[0.017,-0.008],[0.124,-0.12],[0,-0.175],[-0.271,-0.413],[0,0],[0,0],[0.103,0]],\"o\":[[-0.151,0.075],[-0.119,0.124],[0,0.515],[0,0],[0,0],[-0.125,0],[-0.019,0]],\"v\":[[248.727,127.187],[248.332,127.382],[248.134,127.777],[248.727,128.954],[249.118,128.856],[249.118,127.282],[248.78,127.176]],\"c\":true},\"ix\":2},\"nm\":\"Path 136\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":136,\"ty\":\"sh\",\"ix\":137,\"ks\":{\"a\":0,\"k\":{\"i\":[[0.042,-0.006],[0.054,0.013],[0.147,0],[-0.022,-0.126],[-0.07,-0.125],[-0.149,-0.099],[-0.069,0.021],[-0.051,-0.051],[-0.049,-0.119],[-0.025,-0.12],[0,0],[0,0],[0.099,0.122],[0.075,0.125],[0.122,0.146],[0.099,0.048],[0.033,0]],\"o\":[[-0.063,0.009],[-0.128,-0.026],[0,0.147],[0.029,0.116],[0.096,0.147],[0.046,0.036],[0.076,-0.024],[0.099,0.097],[0.05,0.125],[0,0],[0,0],[0,-0.172],[-0.096,-0.125],[-0.098,-0.147],[-0.077,-0.101],[-0.025,-0.012],[-0.037,0]],\"v\":[[256.48,127.377],[256.298,127.382],[255.9,127.676],[255.9,128.073],[255.9,128.464],[256.298,128.758],[256.483,128.753],[256.689,128.758],[256.788,129.149],[256.886,129.545],[257.574,129.545],[257.574,128.784],[257.475,128.365],[257.082,128.167],[256.788,127.777],[256.689,127.382],[256.6,127.365]],\"c\":true},\"ix\":2},\"nm\":\"Path 137\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":137,\"ty\":\"sh\",\"ix\":138,\"ks\":{\"a\":0,\"k\":{\"i\":[[0.248,-0.076],[0.151,-0.126],[0.072,-0.097],[-0.019,-0.121],[-0.072,-0.32],[0,-0.121],[0,0],[-0.079,-0.146],[-0.173,-0.096],[-0.122,-0.097],[-0.173,-0.302],[-0.051,-0.123],[-0.071,-0.148],[-0.173,-0.339],[-0.198,-0.273],[-0.172,0],[0,0],[0.019,0.468],[0,0.079],[0,0],[0,0],[0,0.319],[-0.103,0.123],[-0.097,0.051],[-0.025,0.194],[0,0.143],[0,0.177],[0,0.148],[0,0.151],[0,0],[0.148,-0.024],[0.08,0.006],[0.084,-0.012],[0.168,0],[0.119,0.05],[0.126,0.099],[0.123,0.122],[0.121,0.12],[0.244,0]],\"o\":[[-0.17,0.049],[-0.096,0.07],[0.024,0.144],[0.101,0.321],[0.027,0.124],[0,0],[0,0.172],[0.097,0.195],[0.125,0.073],[0.271,0.194],[0.071,0.121],[0.068,0.171],[0.197,0.321],[0.145,0.301],[0.07,0.12],[0,0],[0.024,-0.471],[0,-0.07],[0,0],[0,0],[0,-0.32],[0,-0.171],[0.071,-0.095],[0.173,-0.124],[0.024,-0.123],[0,-0.177],[0,-0.147],[0,-0.148],[0,0],[-0.171,0],[-0.087,0.013],[-0.08,-0.006],[-0.148,0.026],[-0.151,0],[-0.173,-0.072],[-0.124,-0.097],[-0.126,-0.127],[-0.173,-0.177],[-0.269,0]],\"v\":[[250.691,129.545],[250.199,129.645],[250.103,130.038],[249.806,130.528],[250.199,131.316],[250.199,131.709],[250.199,132.101],[250.4,132.494],[250.79,132.887],[251.184,133.083],[251.873,133.775],[251.973,134.166],[252.264,134.557],[252.858,135.341],[253.249,136.135],[253.665,136.231],[254.574,136.231],[254.626,135.047],[254.574,134.851],[256.199,134.851],[256.199,133.847],[255.9,133.083],[256.1,132.689],[256.493,132.594],[256.886,132.2],[256.837,131.834],[256.886,131.411],[256.788,131.02],[256.837,130.627],[254.55,130.627],[254.133,130.823],[253.884,130.824],[253.642,130.823],[253.249,131.02],[252.858,130.921],[252.559,130.528],[252.167,130.234],[251.873,129.843],[251.381,129.445]],\"c\":true},\"ix\":2},\"nm\":\"Path 138\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":138,\"ty\":\"sh\",\"ix\":139,\"ks\":{\"a\":0,\"k\":{\"i\":[[0.369,-0.026],[0,0],[0,0],[0.123,-0.099],[0.074,-0.146],[0,-0.146],[0.023,-0.464],[0.269,-0.268],[0.345,-0.173],[0.296,-0.176],[0.347,-0.169],[0,0],[0.101,-0.05],[0.118,-0.096],[0.123,-0.101],[0.147,-0.075],[0.123,-0.052],[0.244,-0.199],[0.077,-0.12],[0.219,-0.242],[0.147,-0.099],[0.144,-0.072],[0.175,-0.048],[0.068,0.006],[0.061,-0.011],[0.146,-0.027],[0.022,-0.121],[0.027,-0.123],[0,-0.193],[-0.268,-0.177],[-0.146,-0.025],[-0.489,0],[-0.246,-0.121],[-0.149,-0.1],[-0.149,-0.099],[-0.318,0],[-0.151,0.021],[-0.075,0.022],[-0.122,0.096],[-0.117,0.077],[-0.148,0.047],[-0.465,0],[-0.102,0.366],[-0.099,0.144],[-0.296,0.248],[-0.075,0.2],[-0.052,0.275],[-0.077,0.269],[-0.047,0.146],[-0.051,0.118],[-0.146,0.098],[-0.319,0.048],[-0.146,0],[-0.464,0.025],[-0.145,0.029],[0.074,0.124],[0,0.242],[-0.221,0.318],[-0.346,0.171],[-0.126,0.046],[-0.122,0.099],[-0.05,0.196],[-0.026,0.121],[0,0.151],[0,0.165],[0,0],[0.421,0.023],[0.224,0.173],[0.049,0.097],[0.074,0.144],[0.147,0.098],[0.248,0]],\"o\":[[0,0],[0,0],[-0.147,0.074],[-0.146,0.099],[-0.075,0.126],[-0.05,0.465],[-0.026,0.394],[-0.269,0.274],[-0.319,0.17],[-0.321,0.193],[0,0],[-0.122,0.052],[-0.147,0.095],[-0.123,0.098],[-0.124,0.097],[-0.12,0.074],[-0.318,0.127],[-0.122,0.097],[-0.171,0.273],[-0.098,0.128],[-0.125,0.072],[-0.176,0.077],[-0.059,0.012],[-0.067,-0.005],[-0.124,0.024],[0,0.148],[-0.025,0.126],[-0.052,0.172],[0,0.32],[0.122,0.071],[0.469,0.126],[0.296,0],[0.175,0.072],[0.146,0.096],[0.248,0.15],[0.171,0],[0.072,0],[0.126,-0.072],[0.126,-0.103],[0.127,-0.068],[0.417,-0.17],[0,-0.39],[0.023,-0.178],[0.197,-0.321],[0.145,-0.123],[0.097,-0.268],[0.05,-0.27],[0.047,-0.153],[0.051,-0.124],[0.069,-0.174],[0.247,-0.199],[0.122,-0.03],[0.468,0],[0.152,0],[-0.07,-0.147],[-0.124,-0.199],[0,-0.42],[0.222,-0.294],[0.124,-0.049],[0.172,-0.079],[0.148,-0.125],[0.025,-0.118],[0.025,-0.125],[0,-0.168],[0,0],[-0.416,0],[-0.288,0],[-0.1,-0.075],[-0.07,-0.122],[-0.074,-0.148],[-0.196,-0.126],[-0.37,0]],\"v\":[[301.42,129.645],[301.42,131.512],[300.634,131.903],[300.24,132.101],[299.848,132.394],[299.848,132.791],[299.947,133.968],[299.357,134.753],[298.569,135.443],[297.684,135.839],[296.897,136.424],[296.504,136.62],[296.111,136.723],[295.819,137.115],[295.423,137.412],[295.126,137.805],[294.736,137.9],[293.85,138.198],[293.65,138.587],[293.261,139.373],[292.868,139.673],[292.478,139.865],[292.079,140.162],[291.887,140.162],[291.689,140.162],[291.296,140.262],[291.296,140.652],[291.197,141.047],[290.9,141.44],[291.392,142.131],[291.785,142.326],[293.064,142.326],[293.85,142.422],[294.243,142.718],[294.538,143.112],[295.374,143.31],[295.819,143.31],[296.012,143.112],[296.405,142.917],[296.6,142.52],[296.996,142.326],[298.175,142.225],[298.277,141.247],[298.569,140.852],[299.357,140.162],[299.751,139.769],[299.947,138.98],[300.145,138.198],[300.339,137.805],[300.441,137.412],[300.829,137.115],[301.618,136.723],[302.008,136.723],[303.188,136.723],[303.582,136.62],[303.387,136.231],[302.993,135.742],[303.483,134.753],[304.272,134.166],[304.665,134.071],[304.96,133.676],[305.353,133.277],[305.353,132.887],[305.353,132.494],[305.548,132.13],[305.548,130.921],[304.465,130.921],[303.681,130.823],[303.582,130.43],[303.387,130.038],[302.993,129.745],[302.378,129.545]],\"c\":true},\"ix\":2},\"nm\":\"Path 139\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":139,\"ty\":\"sh\",\"ix\":140,\"ks\":{\"a\":0,\"k\":{\"i\":[[0.176,0.003],[0.056,-0.045],[0.125,-0.095],[0.081,0.017],[0.045,-0.02],[0.048,-0.073],[0,0],[0,0],[0,0.146]],\"o\":[[-0.157,-0.003],[-0.124,0.099],[-0.055,0.044],[-0.066,-0.014],[-0.097,0.052],[0,0],[0,0],[0,-0.145],[-0.065,0.064]],\"v\":[[293.723,144.252],[293.36,144.29],[293.163,144.68],[292.944,144.69],[292.769,144.68],[292.671,145.028],[294.243,145.028],[294.243,144.586],[294.147,144.195]],\"c\":true},\"ix\":2},\"nm\":\"Path 140\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ty\":\"fl\",\"c\":{\"a\":0,\"k\":[0,0.641469717026,0.868382334709,1],\"ix\":4},\"o\":{\"a\":0,\"k\":50,\"ix\":5},\"r\":1,\"bm\":0,\"nm\":\"Fill 1\",\"mn\":\"ADBE Vector Graphic - Fill\",\"hd\":false},{\"ty\":\"tr\",\"p\":{\"a\":0,\"k\":[337.65,165.187],\"ix\":2},\"a\":{\"a\":0,\"k\":[0,0],\"ix\":1},\"s\":{\"a\":0,\"k\":[100,100],\"ix\":3},\"r\":{\"a\":0,\"k\":0,\"ix\":6},\"o\":{\"a\":0,\"k\":100,\"ix\":7},\"sk\":{\"a\":0,\"k\":0,\"ix\":4},\"sa\":{\"a\":0,\"k\":0,\"ix\":5},\"nm\":\"Transform\"}],\"nm\":\"Group 1\",\"np\":142,\"cix\":2,\"bm\":0,\"ix\":3,\"mn\":\"ADBE Vector Group\",\"hd\":false},{\"ty\":\"tr\",\"p\":{\"a\":0,\"k\":[696,0],\"ix\":2},\"a\":{\"a\":0,\"k\":[0,0],\"ix\":1},\"s\":{\"a\":0,\"k\":[100,100],\"ix\":3},\"r\":{\"a\":0,\"k\":0,\"ix\":6},\"o\":{\"a\":0,\"k\":100,\"ix\":7},\"sk\":{\"a\":0,\"k\":0,\"ix\":4},\"sa\":{\"a\":0,\"k\":0,\"ix\":5},\"nm\":\"Transform\"}],\"nm\":\"Group 4\",\"np\":3,\"cix\":2,\"bm\":0,\"ix\":1,\"mn\":\"ADBE Vector Group\",\"hd\":false},{\"ty\":\"gr\",\"it\":[{\"ty\":\"gr\",\"it\":[{\"ty\":\"gr\",\"it\":[{\"d\":1,\"ty\":\"el\",\"s\":{\"a\":1,\"k\":[{\"i\":{\"x\":[0,0],\"y\":[1,1]},\"o\":{\"x\":[0.333,0.333],\"y\":[0,0]},\"t\":400,\"s\":[0,0]},{\"i\":{\"x\":[0.833,0.833],\"y\":[1,1]},\"o\":{\"x\":[0.167,0.167],\"y\":[0,0]},\"t\":430,\"s\":[7,7]},{\"i\":{\"x\":[0.678,0.678],\"y\":[1,1]},\"o\":{\"x\":[1,1],\"y\":[0,0]},\"t\":762,\"s\":[7,7]},{\"t\":792,\"s\":[0,0]}],\"ix\":2},\"p\":{\"a\":0,\"k\":[0,0],\"ix\":3},\"nm\":\"Ellipse Path 1\",\"mn\":\"ADBE Vector Shape - Ellipse\",\"hd\":false},{\"ty\":\"tr\",\"p\":{\"a\":0,\"k\":[592,280],\"ix\":2},\"a\":{\"a\":0,\"k\":[0,0],\"ix\":1},\"s\":{\"a\":0,\"k\":[100,100],\"ix\":3},\"r\":{\"a\":0,\"k\":0,\"ix\":6},\"o\":{\"a\":0,\"k\":100,\"ix\":7},\"sk\":{\"a\":0,\"k\":0,\"ix\":4},\"sa\":{\"a\":0,\"k\":0,\"ix\":5},\"nm\":\"Transform\"}],\"nm\":\"sydney\",\"np\":1,\"cix\":2,\"bm\":0,\"ix\":1,\"mn\":\"ADBE Vector Group\",\"hd\":false},{\"ty\":\"gr\",\"it\":[{\"d\":1,\"ty\":\"el\",\"s\":{\"a\":0,\"k\":[7,7],\"ix\":2},\"p\":{\"a\":0,\"k\":[0,0],\"ix\":3},\"nm\":\"Ellipse Path 1\",\"mn\":\"ADBE Vector Shape - Ellipse\",\"hd\":false},{\"ty\":\"tr\",\"p\":{\"a\":0,\"k\":[230,51],\"ix\":2},\"a\":{\"a\":0,\"k\":[0,0],\"ix\":1},\"s\":{\"a\":0,\"k\":[100,100],\"ix\":3},\"r\":{\"a\":0,\"k\":0,\"ix\":6},\"o\":{\"a\":0,\"k\":100,\"ix\":7},\"sk\":{\"a\":0,\"k\":0,\"ix\":4},\"sa\":{\"a\":0,\"k\":0,\"ix\":5},\"nm\":\"Transform\"}],\"nm\":\"fin 2\",\"np\":1,\"cix\":2,\"bm\":0,\"ix\":2,\"mn\":\"ADBE Vector Group\",\"hd\":false},{\"ty\":\"gr\",\"it\":[{\"d\":1,\"ty\":\"el\",\"s\":{\"a\":1,\"k\":[{\"i\":{\"x\":[0.678,0.678],\"y\":[1,1]},\"o\":{\"x\":[1,1],\"y\":[0,0]},\"t\":309,\"s\":[7,7]},{\"i\":{\"x\":[0.667,0.667],\"y\":[1,1]},\"o\":{\"x\":[0.167,0.167],\"y\":[0,0]},\"t\":339,\"s\":[0,0]},{\"i\":{\"x\":[0,0],\"y\":[1,1]},\"o\":{\"x\":[0.333,0.333],\"y\":[0,0]},\"t\":1533,\"s\":[0,0]},{\"t\":1563,\"s\":[7,7]}],\"ix\":2},\"p\":{\"a\":0,\"k\":[0,0],\"ix\":3},\"nm\":\"Ellipse Path 1\",\"mn\":\"ADBE Vector Shape - Ellipse\",\"hd\":false},{\"ty\":\"tr\",\"p\":{\"a\":0,\"k\":[342,93],\"ix\":2},\"a\":{\"a\":0,\"k\":[0,0],\"ix\":1},\"s\":{\"a\":0,\"k\":[100,100],\"ix\":3},\"r\":{\"a\":0,\"k\":0,\"ix\":6},\"o\":{\"a\":0,\"k\":100,\"ix\":7},\"sk\":{\"a\":0,\"k\":0,\"ix\":4},\"sa\":{\"a\":0,\"k\":0,\"ix\":5},\"nm\":\"Transform\"}],\"nm\":\"fin\",\"np\":1,\"cix\":2,\"bm\":0,\"ix\":3,\"mn\":\"ADBE Vector Group\",\"hd\":false},{\"ty\":\"gr\",\"it\":[{\"d\":1,\"ty\":\"el\",\"s\":{\"a\":1,\"k\":[{\"i\":{\"x\":[0.678,0.678],\"y\":[1,1]},\"o\":{\"x\":[1,1],\"y\":[0,0]},\"t\":318,\"s\":[7,7]},{\"i\":{\"x\":[0.667,0.667],\"y\":[1,1]},\"o\":{\"x\":[0.167,0.167],\"y\":[0,0]},\"t\":348,\"s\":[0,0]},{\"i\":{\"x\":[0,0],\"y\":[1,1]},\"o\":{\"x\":[0.333,0.333],\"y\":[0,0]},\"t\":1509,\"s\":[0,0]},{\"t\":1539,\"s\":[7,7]}],\"ix\":2},\"p\":{\"a\":0,\"k\":[0,0],\"ix\":3},\"nm\":\"Ellipse Path 1\",\"mn\":\"ADBE Vector Shape - Ellipse\",\"hd\":false},{\"ty\":\"tr\",\"p\":{\"a\":0,\"k\":[336,118],\"ix\":2},\"a\":{\"a\":0,\"k\":[0,0],\"ix\":1},\"s\":{\"a\":0,\"k\":[100,100],\"ix\":3},\"r\":{\"a\":0,\"k\":0,\"ix\":6},\"o\":{\"a\":0,\"k\":100,\"ix\":7},\"sk\":{\"a\":0,\"k\":0,\"ix\":4},\"sa\":{\"a\":0,\"k\":0,\"ix\":5},\"nm\":\"Transform\"}],\"nm\":\"eu\",\"np\":1,\"cix\":2,\"bm\":0,\"ix\":4,\"mn\":\"ADBE Vector Group\",\"hd\":false},{\"ty\":\"gr\",\"it\":[{\"d\":1,\"ty\":\"el\",\"s\":{\"a\":1,\"k\":[{\"i\":{\"x\":[0,0],\"y\":[1,1]},\"o\":{\"x\":[0.333,0.333],\"y\":[0,0]},\"t\":0,\"s\":[0,0]},{\"i\":{\"x\":[0.833,0.833],\"y\":[1,1]},\"o\":{\"x\":[0.167,0.167],\"y\":[0,0]},\"t\":30,\"s\":[7,7]},{\"i\":{\"x\":[0.678,0.678],\"y\":[1,1]},\"o\":{\"x\":[1,1],\"y\":[0,0]},\"t\":566,\"s\":[7,7]},{\"t\":596,\"s\":[0,0]}],\"ix\":2},\"p\":{\"a\":0,\"k\":[0,0],\"ix\":3},\"nm\":\"Ellipse Path 1\",\"mn\":\"ADBE Vector Shape - Ellipse\",\"hd\":false},{\"ty\":\"tr\",\"p\":{\"a\":0,\"k\":[439,150],\"ix\":2},\"a\":{\"a\":0,\"k\":[0,0],\"ix\":1},\"s\":{\"a\":0,\"k\":[100,100],\"ix\":3},\"r\":{\"a\":0,\"k\":0,\"ix\":6},\"o\":{\"a\":0,\"k\":100,\"ix\":7},\"sk\":{\"a\":0,\"k\":0,\"ix\":4},\"sa\":{\"a\":0,\"k\":0,\"ix\":5},\"nm\":\"Transform\"}],\"nm\":\"jakart 2\",\"np\":1,\"cix\":2,\"bm\":0,\"ix\":5,\"mn\":\"ADBE Vector Group\",\"hd\":false},{\"ty\":\"gr\",\"it\":[{\"d\":1,\"ty\":\"el\",\"s\":{\"a\":1,\"k\":[{\"i\":{\"x\":[0,0],\"y\":[1,1]},\"o\":{\"x\":[0.333,0.333],\"y\":[0,0]},\"t\":53,\"s\":[0,0]},{\"i\":{\"x\":[0.833,0.833],\"y\":[1,1]},\"o\":{\"x\":[0.167,0.167],\"y\":[0,0]},\"t\":83,\"s\":[7,7]},{\"i\":{\"x\":[0.678,0.678],\"y\":[1,1]},\"o\":{\"x\":[1,1],\"y\":[0,0]},\"t\":756,\"s\":[7,7]},{\"t\":786,\"s\":[0,0]}],\"ix\":2},\"p\":{\"a\":0,\"k\":[0,0],\"ix\":3},\"nm\":\"Ellipse Path 1\",\"mn\":\"ADBE Vector Shape - Ellipse\",\"hd\":false},{\"ty\":\"tr\",\"p\":{\"a\":0,\"k\":[513,221],\"ix\":2},\"a\":{\"a\":0,\"k\":[0,0],\"ix\":1},\"s\":{\"a\":0,\"k\":[100,100],\"ix\":3},\"r\":{\"a\":0,\"k\":0,\"ix\":6},\"o\":{\"a\":0,\"k\":100,\"ix\":7},\"sk\":{\"a\":0,\"k\":0,\"ix\":4},\"sa\":{\"a\":0,\"k\":0,\"ix\":5},\"nm\":\"Transform\"}],\"nm\":\"jakart\",\"np\":1,\"cix\":2,\"bm\":0,\"ix\":6,\"mn\":\"ADBE Vector Group\",\"hd\":false},{\"ty\":\"gr\",\"it\":[{\"d\":1,\"ty\":\"el\",\"s\":{\"a\":1,\"k\":[{\"i\":{\"x\":[0,0],\"y\":[1,1]},\"o\":{\"x\":[0.333,0.333],\"y\":[0,0]},\"t\":83,\"s\":[0,0]},{\"i\":{\"x\":[0.833,0.833],\"y\":[1,1]},\"o\":{\"x\":[0.167,0.167],\"y\":[0,0]},\"t\":113,\"s\":[7,7]},{\"i\":{\"x\":[0.678,0.678],\"y\":[1,1]},\"o\":{\"x\":[1,1],\"y\":[0,0]},\"t\":791,\"s\":[7,7]},{\"t\":821,\"s\":[0,0]}],\"ix\":2},\"p\":{\"a\":0,\"k\":[0,0],\"ix\":3},\"nm\":\"Ellipse Path 1\",\"mn\":\"ADBE Vector Shape - Ellipse\",\"hd\":false},{\"ty\":\"tr\",\"p\":{\"a\":0,\"k\":[520,175],\"ix\":2},\"a\":{\"a\":0,\"k\":[0,0],\"ix\":1},\"s\":{\"a\":0,\"k\":[100,100],\"ix\":3},\"r\":{\"a\":0,\"k\":0,\"ix\":6},\"o\":{\"a\":0,\"k\":100,\"ix\":7},\"sk\":{\"a\":0,\"k\":0,\"ix\":4},\"sa\":{\"a\":0,\"k\":0,\"ix\":5},\"nm\":\"Transform\"}],\"nm\":\"singa\",\"np\":1,\"cix\":2,\"bm\":0,\"ix\":7,\"mn\":\"ADBE Vector Group\",\"hd\":false},{\"ty\":\"gr\",\"it\":[{\"d\":1,\"ty\":\"el\",\"s\":{\"a\":1,\"k\":[{\"i\":{\"x\":[0.678,0.678],\"y\":[1,1]},\"o\":{\"x\":[1,1],\"y\":[0,0]},\"t\":630,\"s\":[7,7]},{\"i\":{\"x\":[0.833,0.833],\"y\":[1,1]},\"o\":{\"x\":[0.167,0.167],\"y\":[0,0]},\"t\":660,\"s\":[0,0]},{\"i\":{\"x\":[0,0],\"y\":[1,1]},\"o\":{\"x\":[0.333,0.333],\"y\":[0,0]},\"t\":1765,\"s\":[0,0]},{\"t\":1795,\"s\":[7,7]}],\"ix\":2},\"p\":{\"a\":0,\"k\":[0,0],\"ix\":3},\"nm\":\"Ellipse Path 1\",\"mn\":\"ADBE Vector Shape - Ellipse\",\"hd\":false},{\"ty\":\"tr\",\"p\":{\"a\":0,\"k\":[461,182],\"ix\":2},\"a\":{\"a\":0,\"k\":[0,0],\"ix\":1},\"s\":{\"a\":0,\"k\":[100,100],\"ix\":3},\"r\":{\"a\":0,\"k\":0,\"ix\":6},\"o\":{\"a\":0,\"k\":100,\"ix\":7},\"sk\":{\"a\":0,\"k\":0,\"ix\":4},\"sa\":{\"a\":0,\"k\":0,\"ix\":5},\"nm\":\"Transform\"}],\"nm\":\"india\",\"np\":1,\"cix\":2,\"bm\":0,\"ix\":8,\"mn\":\"ADBE Vector Group\",\"hd\":false},{\"ty\":\"gr\",\"it\":[{\"d\":1,\"ty\":\"el\",\"s\":{\"a\":1,\"k\":[{\"i\":{\"x\":[0.678,0.678],\"y\":[1,1]},\"o\":{\"x\":[1,1],\"y\":[0,0]},\"t\":492,\"s\":[7,7]},{\"i\":{\"x\":[0.833,0.833],\"y\":[1,1]},\"o\":{\"x\":[0.333,0.333],\"y\":[0,0]},\"t\":522,\"s\":[0,0]},{\"i\":{\"x\":[0,0],\"y\":[1,1]},\"o\":{\"x\":[0.333,0.333],\"y\":[0,0]},\"t\":1619,\"s\":[0,0]},{\"t\":1649,\"s\":[7,7]}],\"ix\":2},\"p\":{\"a\":0,\"k\":[0,0],\"ix\":3},\"nm\":\"Ellipse Path 1\",\"mn\":\"ADBE Vector Shape - Ellipse\",\"hd\":false},{\"ty\":\"tr\",\"p\":{\"a\":0,\"k\":[408,166],\"ix\":2},\"a\":{\"a\":0,\"k\":[0,0],\"ix\":1},\"s\":{\"a\":0,\"k\":[100,100],\"ix\":3},\"r\":{\"a\":0,\"k\":0,\"ix\":6},\"o\":{\"a\":0,\"k\":100,\"ix\":7},\"sk\":{\"a\":0,\"k\":0,\"ix\":4},\"sa\":{\"a\":0,\"k\":0,\"ix\":5},\"nm\":\"Transform\"}],\"nm\":\"uae\",\"np\":1,\"cix\":2,\"bm\":0,\"ix\":9,\"mn\":\"ADBE Vector Group\",\"hd\":false},{\"ty\":\"gr\",\"it\":[{\"d\":1,\"ty\":\"el\",\"s\":{\"a\":1,\"k\":[{\"i\":{\"x\":[0.678,0.678],\"y\":[1,1]},\"o\":{\"x\":[1,1],\"y\":[0,0]},\"t\":249,\"s\":[7,7]},{\"i\":{\"x\":[0.833,0.833],\"y\":[1,1]},\"o\":{\"x\":[0.167,0.167],\"y\":[0,0]},\"t\":279,\"s\":[0,0]},{\"i\":{\"x\":[0,0],\"y\":[1,1]},\"o\":{\"x\":[0.333,0.333],\"y\":[0,0]},\"t\":1375,\"s\":[0,0]},{\"t\":1405,\"s\":[7,7]}],\"ix\":2},\"p\":{\"a\":0,\"k\":[0,0],\"ix\":3},\"nm\":\"Ellipse Path 1\",\"mn\":\"ADBE Vector Shape - Ellipse\",\"hd\":false},{\"ty\":\"tr\",\"p\":{\"a\":0,\"k\":[315,135],\"ix\":2},\"a\":{\"a\":0,\"k\":[0,0],\"ix\":1},\"s\":{\"a\":0,\"k\":[100,100],\"ix\":3},\"r\":{\"a\":0,\"k\":0,\"ix\":6},\"o\":{\"a\":0,\"k\":100,\"ix\":7},\"sk\":{\"a\":0,\"k\":0,\"ix\":4},\"sa\":{\"a\":0,\"k\":0,\"ix\":5},\"nm\":\"Transform\"}],\"nm\":\"barca\",\"np\":1,\"cix\":2,\"bm\":0,\"ix\":10,\"mn\":\"ADBE Vector Group\",\"hd\":false},{\"ty\":\"gr\",\"it\":[{\"d\":1,\"ty\":\"el\",\"s\":{\"a\":1,\"k\":[{\"i\":{\"x\":[0.678,0.678],\"y\":[1,1]},\"o\":{\"x\":[1,1],\"y\":[0,0]},\"t\":284,\"s\":[7,7]},{\"i\":{\"x\":[0.833,0.833],\"y\":[1,1]},\"o\":{\"x\":[0.333,0.333],\"y\":[0,0]},\"t\":314,\"s\":[0,0]},{\"i\":{\"x\":[0,0],\"y\":[1,1]},\"o\":{\"x\":[0.333,0.333],\"y\":[0,0]},\"t\":1427,\"s\":[0,0]},{\"t\":1457,\"s\":[7,7]}],\"ix\":2},\"p\":{\"a\":0,\"k\":[0,0],\"ix\":3},\"nm\":\"Ellipse Path 1\",\"mn\":\"ADBE Vector Shape - Ellipse\",\"hd\":false},{\"ty\":\"tr\",\"p\":{\"a\":0,\"k\":[328,193],\"ix\":2},\"a\":{\"a\":0,\"k\":[0,0],\"ix\":1},\"s\":{\"a\":0,\"k\":[100,100],\"ix\":3},\"r\":{\"a\":0,\"k\":0,\"ix\":6},\"o\":{\"a\":0,\"k\":100,\"ix\":7},\"sk\":{\"a\":0,\"k\":0,\"ix\":4},\"sa\":{\"a\":0,\"k\":0,\"ix\":5},\"nm\":\"Transform\"}],\"nm\":\"nigeria\",\"np\":1,\"cix\":2,\"bm\":0,\"ix\":11,\"mn\":\"ADBE Vector Group\",\"hd\":false},{\"ty\":\"gr\",\"it\":[{\"d\":1,\"ty\":\"el\",\"s\":{\"a\":1,\"k\":[{\"i\":{\"x\":[0,0],\"y\":[1,1]},\"o\":{\"x\":[0.333,0.333],\"y\":[0,0]},\"t\":830,\"s\":[0,0]},{\"i\":{\"x\":[0.833,0.833],\"y\":[1,1]},\"o\":{\"x\":[0.167,0.167],\"y\":[0,0]},\"t\":860,\"s\":[7,7]},{\"i\":{\"x\":[0.678,0.678],\"y\":[1,1]},\"o\":{\"x\":[1,1],\"y\":[0,0]},\"t\":1489,\"s\":[7,7]},{\"t\":1519,\"s\":[0,0]}],\"ix\":2},\"p\":{\"a\":0,\"k\":[0,0],\"ix\":3},\"nm\":\"Ellipse Path 1\",\"mn\":\"ADBE Vector Shape - Ellipse\",\"hd\":false},{\"ty\":\"tr\",\"p\":{\"a\":0,\"k\":[99,139],\"ix\":2},\"a\":{\"a\":0,\"k\":[0,0],\"ix\":1},\"s\":{\"a\":0,\"k\":[100,100],\"ix\":3},\"r\":{\"a\":0,\"k\":0,\"ix\":6},\"o\":{\"a\":0,\"k\":100,\"ix\":7},\"sk\":{\"a\":0,\"k\":0,\"ix\":4},\"sa\":{\"a\":0,\"k\":0,\"ix\":5},\"nm\":\"Transform\"}],\"nm\":\"la\",\"np\":1,\"cix\":2,\"bm\":0,\"ix\":12,\"mn\":\"ADBE Vector Group\",\"hd\":false},{\"ty\":\"gr\",\"it\":[{\"d\":1,\"ty\":\"el\",\"s\":{\"a\":1,\"k\":[{\"i\":{\"x\":[0.678,0.678],\"y\":[1,1]},\"o\":{\"x\":[1,1],\"y\":[0,0]},\"t\":34,\"s\":[7,7]},{\"i\":{\"x\":[0.833,0.833],\"y\":[1,1]},\"o\":{\"x\":[0.333,0.333],\"y\":[0,0]},\"t\":64,\"s\":[0,0]},{\"i\":{\"x\":[0,0],\"y\":[1,1]},\"o\":{\"x\":[0.333,0.333],\"y\":[0,0]},\"t\":1143,\"s\":[0,0]},{\"t\":1173,\"s\":[7,7]}],\"ix\":2},\"p\":{\"a\":0,\"k\":[0,0],\"ix\":3},\"nm\":\"Ellipse Path 1\",\"mn\":\"ADBE Vector Shape - Ellipse\",\"hd\":false},{\"ty\":\"tr\",\"p\":{\"a\":0,\"k\":[225,234],\"ix\":2},\"a\":{\"a\":0,\"k\":[0,0],\"ix\":1},\"s\":{\"a\":0,\"k\":[100,100],\"ix\":3},\"r\":{\"a\":0,\"k\":0,\"ix\":6},\"o\":{\"a\":0,\"k\":100,\"ix\":7},\"sk\":{\"a\":0,\"k\":0,\"ix\":4},\"sa\":{\"a\":0,\"k\":0,\"ix\":5},\"nm\":\"Transform\"}],\"nm\":\"brazil\",\"np\":1,\"cix\":2,\"bm\":0,\"ix\":13,\"mn\":\"ADBE Vector Group\",\"hd\":false},{\"ty\":\"gr\",\"it\":[{\"d\":1,\"ty\":\"el\",\"s\":{\"a\":1,\"k\":[{\"i\":{\"x\":[0,0],\"y\":[1,1]},\"o\":{\"x\":[0.333,0.333],\"y\":[0,0]},\"t\":218,\"s\":[0,0]},{\"i\":{\"x\":[0.833,0.833],\"y\":[1,1]},\"o\":{\"x\":[0.167,0.167],\"y\":[0,0]},\"t\":248,\"s\":[7,7]},{\"i\":{\"x\":[0.678,0.678],\"y\":[1,1]},\"o\":{\"x\":[1,1],\"y\":[0,0]},\"t\":941,\"s\":[7,7]},{\"t\":971,\"s\":[0,0]}],\"ix\":2},\"p\":{\"a\":0,\"k\":[0,0],\"ix\":3},\"nm\":\"Ellipse Path 1\",\"mn\":\"ADBE Vector Shape - Ellipse\",\"hd\":false},{\"ty\":\"tr\",\"p\":{\"a\":0,\"k\":[578,143],\"ix\":2},\"a\":{\"a\":0,\"k\":[0,0],\"ix\":1},\"s\":{\"a\":0,\"k\":[100,100],\"ix\":3},\"r\":{\"a\":0,\"k\":0,\"ix\":6},\"o\":{\"a\":0,\"k\":100,\"ix\":7},\"sk\":{\"a\":0,\"k\":0,\"ix\":4},\"sa\":{\"a\":0,\"k\":0,\"ix\":5},\"nm\":\"Transform\"}],\"nm\":\"japan\",\"np\":1,\"cix\":2,\"bm\":0,\"ix\":14,\"mn\":\"ADBE Vector Group\",\"hd\":false},{\"ty\":\"gr\",\"it\":[{\"d\":1,\"ty\":\"el\",\"s\":{\"a\":1,\"k\":[{\"i\":{\"x\":[0.678,0.678],\"y\":[1,1]},\"o\":{\"x\":[1,1],\"y\":[0,0]},\"t\":430,\"s\":[7,7]},{\"i\":{\"x\":[0.833,0.833],\"y\":[1,1]},\"o\":{\"x\":[0.333,0.333],\"y\":[0,0]},\"t\":460,\"s\":[0,0]},{\"i\":{\"x\":[0,0],\"y\":[1,1]},\"o\":{\"x\":[0.333,0.333],\"y\":[0,0]},\"t\":1564,\"s\":[0,0]},{\"t\":1594,\"s\":[7,7]}],\"ix\":2},\"p\":{\"a\":0,\"k\":[0,0],\"ix\":3},\"nm\":\"Ellipse Path 1\",\"mn\":\"ADBE Vector Shape - Ellipse\",\"hd\":false},{\"ty\":\"tr\",\"p\":{\"a\":0,\"k\":[387,104],\"ix\":2},\"a\":{\"a\":0,\"k\":[0,0],\"ix\":1},\"s\":{\"a\":0,\"k\":[100,100],\"ix\":3},\"r\":{\"a\":0,\"k\":0,\"ix\":6},\"o\":{\"a\":0,\"k\":100,\"ix\":7},\"sk\":{\"a\":0,\"k\":0,\"ix\":4},\"sa\":{\"a\":0,\"k\":0,\"ix\":5},\"nm\":\"Transform\"}],\"nm\":\"russia\",\"np\":1,\"cix\":2,\"bm\":0,\"ix\":15,\"mn\":\"ADBE Vector Group\",\"hd\":false},{\"ty\":\"gr\",\"it\":[{\"d\":1,\"ty\":\"el\",\"s\":{\"a\":1,\"k\":[{\"i\":{\"x\":[0,0],\"y\":[1,1]},\"o\":{\"x\":[0.333,0.333],\"y\":[0,0]},\"t\":177,\"s\":[0,0]},{\"i\":{\"x\":[0.833,0.833],\"y\":[1,1]},\"o\":{\"x\":[0.167,0.167],\"y\":[0,0]},\"t\":207,\"s\":[7,7]},{\"i\":{\"x\":[0.678,0.678],\"y\":[1,1]},\"o\":{\"x\":[1,1],\"y\":[0,0]},\"t\":876,\"s\":[7,7]},{\"t\":906,\"s\":[0,0]}],\"ix\":2},\"p\":{\"a\":0,\"k\":[0,0],\"ix\":3},\"nm\":\"Ellipse Path 1\",\"mn\":\"ADBE Vector Shape - Ellipse\",\"hd\":false},{\"ty\":\"tr\",\"p\":{\"a\":0,\"k\":[561,119],\"ix\":2},\"a\":{\"a\":0,\"k\":[0,0],\"ix\":1},\"s\":{\"a\":0,\"k\":[100,100],\"ix\":3},\"r\":{\"a\":0,\"k\":0,\"ix\":6},\"o\":{\"a\":0,\"k\":100,\"ix\":7},\"sk\":{\"a\":0,\"k\":0,\"ix\":4},\"sa\":{\"a\":0,\"k\":0,\"ix\":5},\"nm\":\"Transform\"}],\"nm\":\"china\",\"np\":1,\"cix\":2,\"bm\":0,\"ix\":16,\"mn\":\"ADBE Vector Group\",\"hd\":false},{\"ty\":\"gr\",\"it\":[{\"d\":1,\"ty\":\"el\",\"s\":{\"a\":1,\"k\":[{\"i\":{\"x\":[0.678,0.678],\"y\":[1,1]},\"o\":{\"x\":[1,1],\"y\":[0,0]},\"t\":366,\"s\":[7,7]},{\"i\":{\"x\":[0.833,0.833],\"y\":[1,1]},\"o\":{\"x\":[0.167,0.167],\"y\":[0,0]},\"t\":396,\"s\":[0,0]},{\"i\":{\"x\":[0,0],\"y\":[1,1]},\"o\":{\"x\":[0.333,0.333],\"y\":[0,0]},\"t\":1569,\"s\":[0,0]},{\"t\":1599,\"s\":[7,7]}],\"ix\":2},\"p\":{\"a\":0,\"k\":[0,0],\"ix\":3},\"nm\":\"Ellipse Path 1\",\"mn\":\"ADBE Vector Shape - Ellipse\",\"hd\":false},{\"ty\":\"tr\",\"p\":{\"a\":0,\"k\":[357,274],\"ix\":2},\"a\":{\"a\":0,\"k\":[0,0],\"ix\":1},\"s\":{\"a\":0,\"k\":[100,100],\"ix\":3},\"r\":{\"a\":0,\"k\":0,\"ix\":6},\"o\":{\"a\":0,\"k\":100,\"ix\":7},\"sk\":{\"a\":0,\"k\":0,\"ix\":4},\"sa\":{\"a\":0,\"k\":0,\"ix\":5},\"nm\":\"Transform\"}],\"nm\":\"south africa\",\"np\":1,\"cix\":2,\"bm\":0,\"ix\":17,\"mn\":\"ADBE Vector Group\",\"hd\":false},{\"ty\":\"gr\",\"it\":[{\"d\":1,\"ty\":\"el\",\"s\":{\"a\":1,\"k\":[{\"i\":{\"x\":[0,0],\"y\":[1,1]},\"o\":{\"x\":[0.333,0.333],\"y\":[0,0]},\"t\":1010,\"s\":[0,0]},{\"i\":{\"x\":[0.833,0.833],\"y\":[1,1]},\"o\":{\"x\":[0.167,0.167],\"y\":[0,0]},\"t\":1040,\"s\":[7,7]},{\"i\":{\"x\":[0.678,0.678],\"y\":[1,1]},\"o\":{\"x\":[1,1],\"y\":[0,0]},\"t\":1709,\"s\":[7,7]},{\"t\":1739,\"s\":[0,0]}],\"ix\":2},\"p\":{\"a\":0,\"k\":[0,0],\"ix\":3},\"nm\":\"Ellipse Path 1\",\"mn\":\"ADBE Vector Shape - Ellipse\",\"hd\":false},{\"ty\":\"tr\",\"p\":{\"a\":0,\"k\":[178,217],\"ix\":2},\"a\":{\"a\":0,\"k\":[0,0],\"ix\":1},\"s\":{\"a\":0,\"k\":[100,100],\"ix\":3},\"r\":{\"a\":0,\"k\":0,\"ix\":6},\"o\":{\"a\":0,\"k\":100,\"ix\":7},\"sk\":{\"a\":0,\"k\":0,\"ix\":4},\"sa\":{\"a\":0,\"k\":0,\"ix\":5},\"nm\":\"Transform\"}],\"nm\":\"colombia\",\"np\":1,\"cix\":2,\"bm\":0,\"ix\":18,\"mn\":\"ADBE Vector Group\",\"hd\":false},{\"ty\":\"gr\",\"it\":[{\"d\":1,\"ty\":\"el\",\"s\":{\"a\":1,\"k\":[{\"i\":{\"x\":[0.678,0.678],\"y\":[1,1]},\"o\":{\"x\":[1,1],\"y\":[0,0]},\"t\":239,\"s\":[7,7]},{\"i\":{\"x\":[0.833,0.833],\"y\":[1,1]},\"o\":{\"x\":[0.167,0.167],\"y\":[0,0]},\"t\":269,\"s\":[0,0]},{\"i\":{\"x\":[0,0],\"y\":[1,1]},\"o\":{\"x\":[0.333,0.333],\"y\":[0,0]},\"t\":1392,\"s\":[0,0]},{\"t\":1422,\"s\":[7,7]}],\"ix\":2},\"p\":{\"a\":0,\"k\":[0,0],\"ix\":3},\"nm\":\"Ellipse Path 1\",\"mn\":\"ADBE Vector Shape - Ellipse\",\"hd\":false},{\"ty\":\"tr\",\"p\":{\"a\":0,\"k\":[315,107],\"ix\":2},\"a\":{\"a\":0,\"k\":[0,0],\"ix\":1},\"s\":{\"a\":0,\"k\":[100,100],\"ix\":3},\"r\":{\"a\":0,\"k\":0,\"ix\":6},\"o\":{\"a\":0,\"k\":100,\"ix\":7},\"sk\":{\"a\":0,\"k\":0,\"ix\":4},\"sa\":{\"a\":0,\"k\":0,\"ix\":5},\"nm\":\"Transform\"}],\"nm\":\"london\",\"np\":1,\"cix\":2,\"bm\":0,\"ix\":19,\"mn\":\"ADBE Vector Group\",\"hd\":false},{\"ty\":\"gr\",\"it\":[{\"d\":1,\"ty\":\"el\",\"s\":{\"a\":1,\"k\":[{\"i\":{\"x\":[0,0],\"y\":[1,1]},\"o\":{\"x\":[0.333,0.333],\"y\":[0,0]},\"t\":1012,\"s\":[0,0]},{\"i\":{\"x\":[0.833,0.833],\"y\":[1,1]},\"o\":{\"x\":[0.167,0.167],\"y\":[0,0]},\"t\":1042,\"s\":[7,7]},{\"i\":{\"x\":[0.678,0.678],\"y\":[1,1]},\"o\":{\"x\":[1,1],\"y\":[0,0]},\"t\":1678,\"s\":[7,7]},{\"t\":1708,\"s\":[0,0]}],\"ix\":2},\"p\":{\"a\":0,\"k\":[0,0],\"ix\":3},\"nm\":\"Ellipse Path 1\",\"mn\":\"ADBE Vector Shape - Ellipse\",\"hd\":false},{\"ty\":\"tr\",\"p\":{\"a\":0,\"k\":[172.85,127.5],\"ix\":2},\"a\":{\"a\":0,\"k\":[0,0],\"ix\":1},\"s\":{\"a\":0,\"k\":[100,100],\"ix\":3},\"r\":{\"a\":0,\"k\":0,\"ix\":6},\"o\":{\"a\":0,\"k\":100,\"ix\":7},\"sk\":{\"a\":0,\"k\":0,\"ix\":4},\"sa\":{\"a\":0,\"k\":0,\"ix\":5},\"nm\":\"Transform\"}],\"nm\":\"new york\",\"np\":1,\"cix\":2,\"bm\":0,\"ix\":20,\"mn\":\"ADBE Vector Group\",\"hd\":false},{\"ty\":\"fl\",\"c\":{\"a\":0,\"k\":[0.454901963472,0.717647075653,0.815686285496,1],\"ix\":4},\"o\":{\"a\":0,\"k\":100,\"ix\":5},\"r\":1,\"bm\":0,\"nm\":\"Fill 1\",\"mn\":\"ADBE Vector Graphic - Fill\",\"hd\":false},{\"ty\":\"tr\",\"p\":{\"a\":0,\"k\":[0,0],\"ix\":2},\"a\":{\"a\":0,\"k\":[0,0],\"ix\":1},\"s\":{\"a\":0,\"k\":[100,100],\"ix\":3},\"r\":{\"a\":0,\"k\":0,\"ix\":6},\"o\":{\"a\":0,\"k\":100,\"ix\":7},\"sk\":{\"a\":0,\"k\":0,\"ix\":4},\"sa\":{\"a\":0,\"k\":0,\"ix\":5},\"nm\":\"Transform\"}],\"nm\":\"cities\",\"np\":21,\"cix\":2,\"bm\":0,\"ix\":1,\"mn\":\"ADBE Vector Group\",\"hd\":false},{\"ty\":\"gr\",\"it\":[{\"ind\":0,\"ty\":\"sh\",\"ix\":1,\"ks\":{\"a\":0,\"k\":{\"i\":[[0.295,-0.054],[0.068,0.006],[0.061,-0.012],[0.171,-0.124],[0.198,-0.026],[0.173,0],[0,0],[0.195,0],[0,0],[0.147,0],[0.246,0],[0.219,-0.021],[0.441,-0.347],[-0.099,-0.197],[0,-0.196],[0.296,-0.095],[0.297,0],[0.295,0.122],[0.171,0],[0,0],[0.517,0.273],[0.149,0.027],[0.415,0],[0.173,-0.026],[0.122,-0.023],[0.15,-0.102],[0.197,0],[0.319,0],[0,0],[0.194,0.022],[0.245,0],[0.418,-0.15],[0.488,0],[0.095,-0.017],[0.072,-0.014],[0.032,0.002],[0.033,-0.007],[0.109,-0.024],[0.136,-0.039],[0.219,-0.086],[-0.12,-0.149],[-0.109,-0.048],[-0.086,-0.016],[-0.036,0.002],[-0.048,-0.008],[-0.173,-0.113],[-0.084,-0.073],[-0.051,-0.087],[-0.025,-0.087],[-0.024,-0.145],[0,-0.208],[0,0],[0.059,0.048],[0.085,0.026],[0.031,-0.003],[0.033,0.008],[0.097,0.01],[0.083,0.025],[0.101,0.024],[0.033,-0.002],[0.03,0.006],[0.089,0.024],[0.097,0.014],[0.075,0],[0.108,0],[0.16,0],[0.123,-0.061],[0.041,-0.085],[0,-0.089],[-0.012,-0.065],[-0.086,-0.135],[-0.072,-0.062],[-0.098,-0.049],[-0.185,-0.085],[-0.149,-0.062],[-0.062,-0.012],[-0.074,-0.017],[-0.086,-0.012],[-0.172,0],[0,0],[-0.085,-0.01],[-0.076,-0.049],[-0.075,-0.039],[-0.149,-0.15],[-0.061,-0.076],[-0.099,-0.162],[-0.039,-0.098],[-0.009,-0.085],[-0.009,-0.072],[0,-0.11],[0.146,0],[0.074,0],[0.16,0.036],[0.097,0.014],[0.036,-0.002],[0.052,0.008],[0.109,0.037],[0.149,0.059],[0.074,0.028],[0.084,0.025],[0.085,0.038],[0.109,0.037],[0.062,0.012],[0.28,0.036],[0.121,0.021],[0.206,0.073],[0.061,0.02],[0.097,0.061],[0.059,0.036],[0.101,0.063],[0.099,0.063],[0.076,0.072],[0.126,0.036],[0.039,-0.005],[0.044,0.012],[0.072,0.013],[0.061,0.015],[0.109,0],[0,0],[0.096,0.011],[0.159,0.047],[0.126,0.048],[0.243,0],[0.786,0],[-0.024,-0.097],[-0.046,-0.075],[-0.16,-0.165],[-0.199,-0.035],[-0.034,0.005],[-0.049,-0.02],[0,0],[-0.062,-0.061],[-0.147,-0.109],[-0.065,-0.072],[-0.064,-0.071],[-0.061,-0.097],[-0.06,-0.149],[-0.022,-0.063],[-0.037,-0.096],[0,-0.169],[0,0],[0,0],[0.097,0.016],[0.084,0.039],[0.087,0.048],[0.086,0.074],[0.058,0.059],[0.063,0.035],[0.099,0.061],[0.102,0.062],[0.11,0.073],[0.186,0.108],[0.075,0.036],[0.074,0.047],[0.073,0.06],[0.18,0.034],[0.059,0.01],[0.073,0],[0.174,0.09],[0.051,0.075],[0.051,0.074],[0.085,0.048],[0.062,0.023],[0.11,0.026],[0.073,0],[0.162,0],[0,0],[0,0],[-0.062,-0.146],[-0.11,-0.223],[0,-0.128],[0.015,-0.11],[0,-0.098],[0,-0.061],[0,0],[0.025,-0.074],[0.11,-0.314],[0.059,-0.074],[0.075,-0.038],[0.111,0],[0.121,0.05],[0.1,0.071],[0.061,0.159],[0,0.08],[-0.038,0.162],[-0.05,0.069],[-0.133,0.156],[-0.035,0.099],[0,0.086],[0.013,0.061],[0.05,0.089],[0.06,0.099],[0.017,0.103],[0,0],[0,0.063],[0.136,0.097],[0.087,0.048],[0.096,0.065],[0.073,0.061],[0.085,0.022],[0.133,0],[0.118,-0.025],[0.076,-0.01],[0.133,-0.038],[0.071,-0.026],[0.17,-0.112],[0.098,-0.049],[0.073,-0.021],[0.076,-0.015],[0.032,0.003],[0.033,-0.008],[0.084,-0.026],[0.085,-0.039],[0.099,-0.023],[0.171,0],[0.088,0],[0,0],[0.086,-0.027],[0.083,-0.036],[0.073,-0.014],[0.159,0],[0,0],[0.135,0],[0.433,0],[0.089,-0.024],[0.062,-0.028],[0.048,-0.1],[0.012,-0.058],[-0.072,-0.035],[-0.06,-0.014],[-0.077,0],[-0.068,0.003],[-0.087,-0.005],[-0.113,-0.049],[-0.085,-0.059],[-0.051,-0.086],[-0.038,-0.076],[-0.035,-0.071],[-0.101,-0.047],[-0.085,-0.024],[-0.158,-0.039],[-0.072,0],[-0.059,0.004],[-0.079,-0.007],[-0.074,-0.036],[-0.087,-0.051],[-0.147,-0.062],[-0.075,-0.022],[-0.061,-0.037],[-0.126,-0.133],[0,0],[0,0],[0.075,0.02],[0.06,0.013],[0.075,0.025],[0.173,0.087],[0.097,0.061],[0.085,0.049],[0.07,0.062],[0.097,0.017],[0.117,-0.011],[0.101,0.008],[0.099,0],[0,0],[0.088,0.025],[0.124,0.05],[0.16,0.036],[0.075,0.022],[0.187,0.135],[0.072,0.075],[0.061,0.088],[0.06,0.038],[0.09,0.035],[0.073,0],[0.32,-0.085],[0.074,-0.02],[0.086,-0.034],[0.083,-0.038],[0.086,-0.035],[0.085,-0.042],[0.198,-0.065],[0.059,-0.024],[0,-0.131],[-0.111,-0.172],[-0.051,-0.086],[-0.027,-0.073],[0,-0.085],[0,0],[0,0],[0.149,0.059],[0.087,0.063],[0.081,0.051],[0.085,0],[0.858,0.01],[0.052,-0.076],[0.073,-0.136],[0.097,-0.039],[0.135,-0.048],[0.237,-0.049],[0.135,-0.022],[0.135,-0.134],[0,0],[0.194,-0.126],[0.087,-0.024],[0.063,-0.012],[0.146,0],[0.137,-0.012],[0.1,0],[0.086,-0.011],[0.084,-0.05],[0.086,-0.048],[0.086,-0.038],[0.056,-0.021],[0.051,-0.038],[0.086,-0.036],[0.036,0.006],[0.03,-0.009],[0.063,-0.027],[0.051,-0.06],[0.133,-0.194],[0.051,-0.038],[0.049,-0.038],[0,-0.108],[-0.013,-0.145],[0,0],[-0.17,-0.025],[-0.149,-0.111],[-0.073,-0.05],[-0.086,-0.036],[-0.061,0],[-0.199,0],[-0.271,0.031],[-0.136,0.062],[-0.06,0.028],[-0.087,0.049],[-0.125,0],[-0.04,-0.184],[0,-0.146],[-0.026,-0.135],[-0.013,-0.076],[-0.013,-0.059],[0,-0.084],[0,0],[0.295,-0.294],[0.085,-0.06],[0.099,-0.011],[0.248,0],[0,0],[0.1,0],[0.175,-0.013],[0.135,-0.046],[0.11,-0.053],[0.084,-0.026],[0.134,0],[0,0],[0.269,0.037],[0.097,0.024],[0.085,0],[0.173,0],[0.234,-0.053],[0.171,-0.085],[0,-0.076],[0.01,-0.084],[0.156,-0.087],[0.088,0],[0,0],[0.174,-0.086],[0.088,-0.023],[0.206,0],[0.112,0.014],[0.148,0.013],[0.172,0],[0.171,-0.011],[0.11,-0.038],[0.087,-0.012],[0.087,-0.032],[0.036,-0.073],[0.025,-0.073],[0.012,-0.062],[0.022,-0.058],[0.034,-0.059],[0.085,0],[0,0],[0.036,-0.073],[0.048,-0.148],[-0.075,-0.121],[-0.097,-0.149],[-0.122,-0.097],[-0.145,-0.074],[-0.075,0.01],[-0.054,-0.009],[-0.146,0],[-0.122,-0.026],[-0.273,-0.175],[-0.099,-0.121],[0,0],[0,0],[-0.063,-0.025],[-0.075,-0.035],[-0.16,-0.036],[-0.171,0],[-0.112,0],[0,0],[-0.122,0.01],[-0.062,0.009],[-0.161,0.058],[-0.109,0],[0,0],[-0.174,0.027],[-0.174,0],[0,0],[-0.151,0],[-0.062,0],[0,0],[0.098,-0.137],[0.061,-0.038],[0.085,-0.037],[0.133,-0.086],[0.113,-0.024],[0.07,0],[0,0],[0.088,0.01],[0.038,-0.004],[0.045,0.012],[0.086,0.021],[0.097,0],[0,0],[0.232,-0.062],[0.096,-0.04],[0.221,0],[0,0],[0.1,0],[0.11,0.012],[0.208,0.021],[0.137,0],[0,0],[0.077,-0.011],[0.025,-0.193],[0,0],[0.063,-0.049],[0,-0.124],[-0.232,-0.176],[-0.099,-0.065],[-0.098,-0.008],[-0.098,0.008],[-0.107,-0.011],[-0.234,-0.111],[-0.194,-0.062],[-0.149,-0.059],[-0.221,-0.126],[0,0],[0.161,-0.122],[0.048,-0.076],[0.027,-0.063],[-0.088,-0.037],[-0.061,-0.026],[-0.135,-0.072],[-0.062,-0.064],[-0.065,-0.082],[-0.02,-0.049],[-0.064,-0.04],[-0.086,-0.039],[-0.073,-0.037],[-0.074,-0.027],[-0.184,-0.073],[-0.074,-0.039],[-0.098,-0.061],[-0.11,-0.036],[-0.232,0],[0,0],[-0.087,0.012],[-0.086,0.034],[0.037,0.061],[0.064,0.084],[0,0.124],[-0.097,0.059],[-0.063,0],[-0.196,0],[-0.284,-0.023],[-0.159,-0.061],[-0.075,-0.022],[-0.059,-0.013],[-0.086,0],[-0.074,0],[0,0],[0,0],[-0.075,-0.04],[-0.1,-0.037],[-0.193,0],[-0.171,0.087],[-0.073,0.051],[-0.074,0.036],[-0.075,0.028],[-0.059,0.018],[-0.048,0],[-0.079,0.041],[-0.074,0.051],[-0.064,0.036],[-0.135,0],[-0.175,-0.083],[-0.16,-0.085],[-0.084,0],[0,0],[-0.232,-0.01],[-0.06,-0.01],[-0.074,-0.014],[-0.196,-0.165],[-0.084,-0.05],[-0.086,-0.024],[-0.085,0],[0,0],[-0.073,-0.016],[-0.056,-0.022],[-0.222,-0.125],[-0.086,-0.023],[-0.233,0],[0,0],[-0.061,-0.012],[-0.075,-0.054],[-0.162,-0.1],[-0.086,-0.024],[-0.149,-0.015],[0,0],[-0.135,-0.048],[-0.074,-0.053],[0,-0.171],[0,0],[-0.099,-0.148],[-0.061,-0.073],[-0.097,-0.026],[-0.061,-0.013],[-0.047,0.005],[-0.052,-0.014],[-0.095,-0.048],[-0.086,-0.037],[-0.063,-0.083],[-0.038,-0.059],[-0.073,-0.148],[-0.037,-0.047],[-0.065,-0.062],[-0.124,-0.148],[-0.061,-0.09],[-0.073,-0.096],[-0.049,-0.062],[-0.05,-0.074],[-0.063,-0.15],[-0.073,-0.149],[-0.027,-0.072],[-0.173,-0.225],[-0.071,-0.052],[-0.061,-0.046],[0,-0.134],[0,0],[0.025,-0.096],[0,-0.123],[-0.06,-0.095],[0,-0.284],[0,0],[0.061,-0.095],[0,-0.161],[-0.012,-0.136],[0,0],[0,0],[0.184,-0.051],[0.122,-0.114],[0.024,-0.06],[-0.026,-0.297],[0.048,-0.218],[0,0],[0,0],[-0.148,-0.072],[-0.295,-0.025],[0,0],[-0.12,0],[-0.169,0],[0,0],[-0.024,0.196],[-0.022,0.123],[-0.296,0],[-0.146,0],[-0.146,0],[-0.024,-0.196],[-0.024,-0.12],[-0.074,-0.147],[-0.174,-0.097],[-0.172,-0.022],[-0.123,-0.022],[-0.068,0.007],[-0.059,-0.01],[-0.147,-0.072],[-0.119,-0.071],[-0.097,-0.12],[-0.126,-0.148],[-0.049,-0.124],[0,0],[0,0],[0.195,0],[0,0],[0.416,0.196],[0.124,0.072],[0.122,0.072],[0.079,-0.016],[0.048,0.009],[0.298,0.025],[0.343,0],[0.416,-0.174],[-0.147,-0.266],[-0.12,-0.121],[0,-0.222],[0,-0.169],[0.27,-0.075],[0.147,-0.096],[0,-0.271],[-0.199,-0.15],[-0.246,0.03],[-0.167,-0.026],[-0.267,-0.171],[-0.539,0],[-0.148,0.147],[-0.394,0.051],[-0.493,0],[0,0],[0.414,0.148],[0.06,-0.008],[0.069,0.027],[0.147,0.049],[0.075,-0.009],[0.054,0.012],[0.149,0.024],[0,0],[0,0],[-0.148,-0.077],[-0.172,-0.072],[-0.147,-0.022],[-0.12,0],[-0.194,0],[0,0],[-0.245,-0.12],[0,-0.271],[0,0],[0.072,-0.148],[0.048,-0.126],[0,-0.218],[0,0],[-0.101,-0.148],[-0.124,-0.171],[0,-0.176],[0,0],[0,0],[0.147,-0.072],[0.171,-0.101],[0.171,-0.078],[0.173,0],[0,0],[0.17,0.024],[0.172,0],[0,0],[0.198,0.048],[0.198,0],[0.169,-0.069],[0.147,-0.052],[0.122,-0.049],[0.095,-0.049],[0,-0.24],[0,0],[-0.072,-0.171],[-0.172,-0.075],[-0.123,-0.05],[-0.125,-0.046],[-0.147,-0.099],[-0.097,-0.118],[-0.049,-0.293],[0.25,-0.148],[0,-0.242],[-0.2,-0.347],[-0.193,-0.269],[-0.097,-0.124],[-0.223,0],[-0.198,0.101],[-0.173,0.05],[-0.149,0],[0,0],[-0.148,-0.048],[0.048,-0.121],[0.099,-0.1],[0.082,0.02],[0.045,-0.021],[0.098,-0.123],[0.048,-0.125],[0.049,-0.148],[0,-0.243],[-0.048,-0.198],[-0.173,-0.245],[-0.149,-0.07],[-0.151,0],[-0.123,0.051],[-0.124,0.1],[-0.1,0.121],[-0.12,0.073],[-0.148,0],[-0.222,-0.024],[0,0],[0.145,-0.075],[0.122,-0.075],[0.148,-0.074],[0.074,-0.167],[0,-0.224],[-0.097,-0.195],[-0.12,-0.122],[-0.124,-0.145],[-0.345,-0.391],[-0.099,-0.148],[-0.047,-0.15],[-0.023,-0.118],[-0.122,-0.294],[-0.101,-0.271],[-0.295,-0.195],[-0.094,-0.123],[-0.072,-0.175],[-0.119,-0.271],[-0.122,-0.096],[-0.442,-0.148],[-0.298,-0.22],[-0.172,-0.077],[-0.146,0],[0,0],[-0.15,0.024],[-0.221,0],[0,0],[-0.122,-0.023],[-0.059,0.01],[-0.058,-0.043],[-0.047,-0.124],[-0.049,-0.126],[-0.194,-0.099],[-0.201,0],[-0.115,0.009],[-0.149,-0.025],[-0.099,-0.174],[-0.074,-0.123],[-0.194,-0.047],[-0.297,0],[-0.27,0.077],[-0.172,0.074],[-0.125,0.097],[-0.076,0.148],[0,0.124],[0,0],[-0.319,0.516],[-0.25,0.266],[-0.072,0.149],[0,0.247],[0.028,0.22],[0,0.147],[0,0.148],[0.126,0.247],[0.075,0.148],[0.049,0.145],[0,0.142],[-0.42,0.021],[0,0],[-0.148,0],[-0.293,0],[-0.024,0.271],[-0.074,0.122],[-0.121,0.121],[-0.17,0.077],[-0.074,-0.012],[-0.055,0.012],[-0.174,0.073],[0,0],[0,0.248],[0.048,0.196],[0.074,0.15],[0.072,0.12],[0,0.176],[-0.197,0.125],[-0.079,-0.011],[-0.056,0.012],[-0.273,0.074],[-0.126,0.073],[-0.07,0.147],[-0.021,0.124],[0,0.145],[-0.026,0.147],[0,0],[-0.024,0.421],[0,0.15],[0,0],[-0.025,-0.466],[0,-0.172],[-0.318,0],[-0.146,0],[-0.339,0.369],[-0.145,0.15],[-0.198,0.096],[-0.169,0],[0,0],[-0.114,-0.008],[-0.152,0.028],[-0.145,0.071],[-0.073,0.099],[-0.073,0.127],[0,0],[-0.146,0.098],[-0.147,0.098],[-0.098,0.097],[-0.097,0.126],[-0.122,0.099],[-0.098,0.07],[-0.171,0.273],[-0.123,0.096],[-0.097,0.072],[-0.098,0.124],[-0.046,0.104],[-0.123,0.122],[-0.121,0.072],[-0.05,0.193],[0,0.468],[-0.045,0.019],[-0.059,0],[-0.122,-0.046],[-0.038,-0.016],[-0.035,-0.014],[-0.034,-0.014],[-0.08,-0.051],[-0.03,-0.017],[-0.084,-0.071],[-0.043,-0.021],[-0.148,0],[-0.27,-0.077],[-0.296,-0.148],[-0.392,0],[-0.244,0.025],[-0.149,0.048],[-0.294,0.221],[-0.149,0.173],[-0.171,0.123],[-0.321,0.048],[-0.146,-0.009],[-0.118,0.009],[-0.123,0.024],[-0.17,0.019],[-0.073,-0.009],[-0.094,0.026],[-0.146,0.024],[-0.143,0.048],[-0.061,-0.009],[-0.066,0.027],[-0.148,0.075],[-0.123,0.075],[-0.099,0.122],[-0.123,0.198],[-0.15,0.196],[-0.369,0],[0,0],[-0.27,0.176],[-0.149,0.127],[-0.124,0.195],[-0.048,0.124],[0,0],[0.268,-0.249],[0.098,-0.075],[0.246,0],[0,0],[0.246,0.195],[0.298,0.173],[0.121,0],[0,0],[0.615,0.197],[0.125,0.025],[0.149,0.125],[0.076,0.149],[0,0.172],[0,0],[-0.269,0],[-0.162,-0.009],[-0.256,0.028],[-0.12,0],[-0.318,0.123],[-0.219,0.294],[-0.096,-0.05],[-0.099,-0.146],[-0.075,-0.369],[-0.074,-0.146],[-0.074,-0.123],[-0.37,0],[-0.123,0.171],[-0.048,0.1],[-0.318,0.075],[-0.294,0],[-0.344,0.027],[-0.145,0.027],[0.026,0.274],[0.17,0.322],[0.172,0.121],[0.271,0.172],[0.122,0.318],[0.097,0.272],[0.073,0.149],[0.052,0.122],[0.052,0.102],[0.121,0.076],[0.295,0.127],[0.145,0.072],[-0.147,0.1],[-0.124,0.047],[-0.268,-0.199],[-0.145,-0.071],[-0.169,0],[0,0],[-0.148,0],[-0.147,0],[-0.025,0.589],[0,0],[-0.024,0.121],[0,0.171],[0.075,0.124],[0.152,0.076],[0.317,0],[0.271,-0.121],[0.123,-0.101],[0.174,0],[0,0],[-0.221,0.124],[-0.099,0.075],[-0.124,0.073],[-0.052,0.12],[0.296,0.098],[0.148,0.05],[0,0],[0,0],[0,0],[0,0],[-0.124,0.098],[-0.144,0.077],[-0.32,0],[0,0],[-0.442,0],[-0.197,0.103],[-0.124,0.124],[0,0.226],[0.121,0.193],[0.169,0.146],[0.273,0],[0.194,-0.051],[0.146,-0.023],[0.148,0],[0.123,0.049],[0.074,0.147],[0,0.17],[-0.244,0],[-0.147,0],[-0.15,0],[-0.32,0],[-0.296,0.049],[-0.149,0.073],[0,0],[-0.194,0],[-0.173,0],[0,0],[-0.222,0.049],[-0.126,0.048],[-0.075,0.122],[0.367,0.099],[0.067,-0.006],[0.06,0.013],[0.169,0.124],[0.079,0.249],[0,0.149],[0,0.22],[0,0.245],[0,0.148],[0,0.097],[-0.639,0.048],[0,0],[0.22,0.467],[0.026,0.118],[0.024,0.23],[0.466,0.079],[0.172,0.027],[0.123,0.029],[0.147,0.073],[0.122,0.074],[0.1,0.148],[0,0.224],[-0.023,0.051],[-0.122,0.072],[-0.173,0.07],[-0.076,-0.01],[-0.052,0.008],[-0.343,0.022],[-0.147,0],[0,0],[-0.272,-0.05],[-0.148,-0.098],[0,-0.245],[0,0],[0.047,-0.146],[0,-0.243],[-0.273,-0.541],[0,0],[0,0],[-0.125,0.15],[0,0.224],[0,0],[0.121,0.172],[0.27,0],[0.196,-0.051],[0.144,-0.023],[0.269,0],[0,0],[0.194,0],[0.121,0],[0,0],[-0.121,0],[-0.173,0],[0,0],[-0.296,0.075],[-0.149,0.074],[0.122,0.148],[0.224,0.022],[0.117,-0.032],[0.143,0.027],[0.175,0.049],[0.123,0.026],[0.149,0],[0.248,0],[0.368,-0.027],[0.05,-0.269],[0.074,-0.145],[0.059,-0.011],[0.059,0.043],[0.095,0.148],[0,0.148],[-0.095,0.245],[-0.099,0.124],[-0.072,0.099],[-0.075,0.174],[0,0.15],[0,0.294],[-0.05,0.395],[0,0],[-0.246,0.269],[-0.147,0.1],[-0.191,-0.004],[-0.085,0.009],[0,0],[-0.172,0.075],[0.022,0.145],[0,0.221],[-0.121,0.195],[-0.098,0.15],[-0.073,0.125],[-0.148,0.099],[-0.318,0.05],[-0.178,-0.045],[-0.228,0.05],[-0.101,0.075],[-0.072,0.144],[-0.049,0.121],[-0.097,0.124],[-0.148,0.076],[-0.149,0.025],[-0.123,0],[-0.122,0.021],[-0.069,-0.006],[-0.061,0.011],[-0.147,0.099],[0,0],[0,0],[0,0],[-0.317,0.124],[-0.494,0],[-0.222,-0.098],[-0.217,-0.024],[-0.174,0],[0,0],[-0.151,0],[-0.12,0.022],[-0.17,0.048],[-0.125,0.096],[-0.125,0.148],[-0.195,0.169],[-0.173,0.048],[-0.298,0],[0,0],[-0.592,0.073],[-0.123,0.022],[-0.123,0.051],[-0.099,0.175],[-0.05,0.17],[0,0.294],[0.201,0.199],[0.148,0.049],[0.345,0],[0.318,-0.076],[0.198,-0.049],[0.293,0],[0.321,0.124],[0.174,0.049],[0,0],[0.195,0],[0.316,-0.024],[0.082,0.006],[0.084,-0.011],[0.321,-0.099],[0.149,-0.099],[0.078,-0.149],[0.147,-0.27],[0.122,-0.079],[0.125,-0.026],[0.162,0.016],[0.145,-0.011],[0.32,0],[0.271,0.124],[0.148,0.101],[0.391,0],[0.222,-0.1],[0.221,-0.27],[0.121,-0.099],[0.15,-0.047],[0.148,0],[0.131,0.007],[0.176,-0.012],[0.273,-0.097],[0.17,-0.05],[0.318,-0.102],[0.149,-0.097],[0.151,-0.171],[0.392,-0.193],[0.172,0],[0.172,0.024],[-0.126,0.119],[-0.099,0.121],[-0.075,0.121],[-0.075,0.15],[-0.273,0.172],[-0.07,-0.013],[-0.061,0.026],[-0.248,0.098],[0,0.145],[0,0],[-0.173,0.072],[-0.099,0.08],[-0.075,0.147],[0,0.146],[0.025,0.119],[0.074,0.124],[0.148,0.073],[0.145,0],[0,0],[0.148,0],[0.147,0.006],[0.196,-0.013],[0.146,0],[0.491,0.023],[0.174,0.026],[0.027,-0.488],[0,-0.149],[0,-0.127],[0.203,0],[0.196,0.025],[0.273,0],[0.246,-0.052],[0.291,-0.122],[0.121,-0.048],[0.168,-0.07],[0.079,0.011],[0.053,-0.008],[-0.02,0.123],[-0.049,0.147],[-0.147,0.097],[-0.172,0.025],[0,0],[-0.339,0],[-0.269,0.072],[-0.147,0.07],[0,0],[0.174,0.023],[0.074,-0.006],[0.098,0.011],[0.246,0],[0.614,-0.072],[0.294,0],[0.173,0],[0,0],[0.414,0],[0.369,-0.096],[0.172,-0.048],[0.148,-0.05],[0.126,-0.024],[0.226,-0.05],[0.075,0.007],[0.1,-0.013],[0.248,-0.027],[0.072,0.006],[0.099,-0.014],[0.172,-0.05],[0.127,-0.025],[0.196,0],[0.169,0.024],[-0.054,0.124],[-0.222,0.299],[-0.147,0.125],[-0.372,0.072],[-0.195,0],[0,0],[-0.124,0.073],[-0.148,0.098],[-0.169,0],[0,0],[-0.178,0],[-0.267,0.097],[-0.147,0.072],[-0.149,0.071],[-0.081,-0.016],[-0.052,0.009],[-0.145,0.028],[-0.12,0.028],[-0.065,-0.005],[-0.065,0.016],[-0.174,0.023],[-0.245,-0.021],[-0.197,0.01],[-0.196,0.024],[0,0],[0,0],[0.244,0],[0,0],[0.15,0.022],[0.489,0],[0.298,0],[0.367,0.1],[0.145,0.075],[0,0.196],[0,0.17],[0.147,0.026],[0.295,0],[0.072,-0.028],[0.195,0],[0,0],[0.319,0.121],[0.124,0.027],[0.345,0],[0,0],[0,0],[0,0],[0,0],[0.27,-0.072],[0.147,-0.097],[0,0],[0,0],[0,0],[-0.295,0.051],[-0.096,0.12],[-0.05,0.148],[0,0],[0.05,0.148],[0.174,0.123],[0.15,0.051],[0.345,0.027],[0,0],[0.345,0.029],[0.268,0.076],[0.145,0.029],[0.124,0],[0.343,0],[0.341,-0.024],[0.147,0],[0.343,0],[0,0],[0.32,0],[3.27,0]],\"o\":[[-0.063,0.012],[-0.068,-0.005],[-0.194,0.023],[-0.173,0.126],[-0.145,0.026],[0,0],[-0.198,0],[0,0],[-0.15,0],[-0.248,-0.021],[-0.247,0],[-0.541,0.076],[0.15,0.193],[0.073,0.148],[0,0.318],[-0.273,0.074],[-0.343,0],[-0.15,-0.05],[0,0],[-0.586,0],[-0.124,-0.048],[-0.417,-0.074],[-0.198,0],[-0.124,0.024],[-0.173,0.049],[-0.147,0.098],[-0.318,0.022],[0,0],[-0.193,0],[-0.246,-0.025],[-0.441,0],[-0.491,-0.037],[-0.11,0],[-0.071,0.013],[-0.031,0.005],[-0.035,-0.004],[-0.11,0.022],[-0.139,0.039],[-0.222,0.075],[0.088,0.185],[0.075,0.087],[0.073,0.027],[0.045,0.005],[0.043,-0.004],[0.195,0.034],[0.097,0.056],[0.075,0.06],[0.05,0.073],[0.048,0.136],[0.027,0.209],[0,0],[-0.05,-0.071],[-0.063,-0.05],[-0.03,-0.005],[-0.035,0.004],[-0.085,-0.024],[-0.099,-0.011],[-0.099,-0.034],[-0.029,-0.005],[-0.034,0.003],[-0.088,-0.025],[-0.086,-0.025],[-0.074,0],[-0.109,-0.013],[-0.162,0],[-0.146,0],[-0.083,0.038],[-0.022,0.072],[0,0.072],[0.025,0.156],[0.047,0.085],[0.088,0.075],[0.172,0.098],[0.147,0.06],[0.061,0.026],[0.075,0.024],[0.088,0.01],[0.161,0.011],[0,0],[0.097,0],[0.09,0.013],[0.071,0.05],[0.167,0.094],[0.061,0.059],[0.122,0.147],[0.051,0.083],[0.024,0.073],[0.013,0.077],[0.013,0.111],[0,0.148],[-0.075,0],[-0.174,0],[-0.087,-0.015],[-0.047,-0.004],[-0.039,0.004],[-0.125,-0.01],[-0.16,-0.062],[-0.072,-0.027],[-0.084,-0.02],[-0.088,-0.027],[-0.11,-0.049],[-0.06,-0.024],[-0.256,-0.1],[-0.136,-0.01],[-0.222,-0.052],[-0.062,-0.027],[-0.1,-0.052],[-0.059,-0.037],[-0.099,-0.064],[-0.097,-0.059],[-0.088,-0.048],[-0.085,-0.089],[-0.042,-0.011],[-0.041,0.006],[-0.071,-0.012],[-0.064,-0.014],[-0.099,-0.024],[0,0],[-0.099,0],[-0.174,-0.021],[-0.123,-0.037],[-0.219,-0.083],[-0.787,0],[0,0.111],[0.028,0.087],[0.135,0.186],[0.149,0.147],[0.036,0.005],[0.046,-0.007],[0,0],[0.086,0.039],[0.134,0.137],[0.072,0.052],[0.063,0.073],[0.073,0.087],[0.086,0.135],[0.026,0.062],[0.039,0.096],[0.062,0.147],[0,0],[0,0],[-0.097,0],[-0.099,-0.011],[-0.088,-0.036],[-0.097,-0.065],[-0.058,-0.047],[-0.063,-0.061],[-0.099,-0.077],[-0.098,-0.063],[-0.094,-0.061],[-0.183,-0.123],[-0.059,-0.037],[-0.072,-0.037],[-0.073,-0.052],[-0.148,-0.127],[-0.066,-0.016],[-0.063,-0.014],[-0.197,-0.014],[-0.089,-0.034],[-0.048,-0.071],[-0.048,-0.086],[-0.061,-0.038],[-0.109,-0.049],[-0.063,-0.011],[-0.159,-0.011],[0,0],[0,0],[0,0.173],[0.099,0.221],[0.046,0.11],[0,0.111],[-0.012,0.097],[0,0.071],[0,0],[-0.015,0.075],[-0.099,0.32],[-0.025,0.091],[-0.053,0.058],[-0.087,0.051],[-0.133,0],[-0.112,-0.05],[-0.147,-0.111],[-0.025,-0.061],[0,-0.169],[0.014,-0.084],[0.121,-0.173],[0.061,-0.075],[0.025,-0.069],[0,-0.072],[-0.024,-0.102],[-0.062,-0.094],[-0.053,-0.086],[0,0],[0,-0.075],[-0.027,-0.162],[-0.083,-0.062],[-0.097,-0.062],[-0.087,-0.047],[-0.071,-0.063],[-0.125,-0.051],[-0.137,0],[-0.077,0.01],[-0.138,0.038],[-0.072,0.011],[-0.187,0.071],[-0.099,0.06],[-0.074,0.036],[-0.073,0.028],[-0.028,0.005],[-0.035,-0.003],[-0.085,0.01],[-0.085,0.024],[-0.101,0.047],[-0.159,0.039],[-0.084,0],[0,0],[-0.101,0],[-0.085,0.026],[-0.075,0.021],[-0.148,0.037],[0,0],[-0.137,-0.012],[-0.429,0],[-0.099,0],[-0.059,0.024],[-0.099,0.037],[-0.027,0.062],[0.048,0.066],[0.061,0.025],[0.063,0.011],[0.084,0.006],[0.067,-0.002],[0.122,0.011],[0.096,0.038],[0.089,0.063],[0.038,0.062],[0.038,0.072],[0.049,0.088],[0.086,0.037],[0.159,0.064],[0.063,0.011],[0.07,0.005],[0.064,-0.003],[0.085,0],[0.1,0.05],[0.135,0.073],[0.073,0.024],[0.06,0.027],[0.146,0.085],[0,0],[0,0],[-0.09,0],[-0.059,-0.015],[-0.074,-0.028],[-0.185,-0.061],[-0.098,-0.05],[-0.087,-0.052],[-0.075,-0.051],[-0.076,-0.061],[-0.137,-0.027],[-0.084,0.007],[-0.1,0],[0,0],[-0.097,0],[-0.122,-0.039],[-0.149,-0.063],[-0.073,-0.013],[-0.208,-0.074],[-0.084,-0.062],[-0.072,-0.073],[-0.05,-0.059],[-0.072,-0.048],[-0.063,-0.023],[-0.332,0],[-0.073,0.013],[-0.087,0.027],[-0.086,0.038],[-0.088,0.038],[-0.087,0.038],[-0.174,0.083],[-0.062,0.009],[-0.111,0.063],[0,0.209],[0.049,0.086],[0.035,0.075],[0.024,0.074],[0,0],[0,0],[-0.172,0],[-0.099,-0.039],[-0.084,-0.061],[-0.074,-0.037],[-0.864,0],[-0.063,0.057],[-0.083,0.135],[-0.048,0.085],[-0.135,0.048],[-0.222,0.073],[-0.133,0.026],[-0.184,0.04],[0,0],[-0.157,0.157],[-0.073,0.036],[-0.06,0.013],[-0.132,0.026],[-0.137,0],[-0.098,0],[-0.098,0],[-0.101,0.013],[-0.085,0.048],[-0.074,0.038],[-0.063,0.028],[-0.027,0.059],[-0.073,0.051],[-0.032,0.015],[-0.033,-0.005],[-0.059,0.027],[-0.072,0.023],[-0.145,0.184],[-0.028,0.05],[-0.049,0.037],[-0.087,0.061],[0,0.151],[0,0],[0.16,0.037],[0.2,0.027],[0.072,0.048],[0.073,0.05],[0.062,0.022],[0.185,0.022],[0.281,0],[0.144,-0.016],[0.063,-0.022],[0.099,-0.05],[0.098,-0.062],[0.196,0],[0.022,0.134],[0,0.148],[0.01,0.074],[0.012,0.059],[0.023,0.072],[0,0],[0,0.416],[-0.072,0.075],[-0.086,0.064],[-0.231,0.038],[0,0],[-0.098,0],[-0.169,-0.013],[-0.145,0.013],[-0.107,0.042],[-0.09,0.033],[-0.123,0.04],[0,0],[-0.271,0],[-0.111,-0.011],[-0.073,-0.012],[-0.172,-0.011],[-0.244,0],[-0.173,0.033],[0,0.073],[0,0.1],[-0.038,0.182],[-0.075,0.037],[0,0],[-0.196,0],[-0.085,0.036],[-0.181,0.073],[-0.112,0],[-0.143,-0.013],[-0.172,-0.011],[-0.174,0],[-0.126,0.013],[-0.088,0.024],[-0.097,0.023],[-0.073,0.04],[-0.037,0.072],[-0.027,0.061],[-0.013,0.06],[-0.025,0.079],[-0.041,0.064],[0,0],[-0.062,0.065],[-0.076,0.137],[0.022,0.119],[0.099,0.145],[0.099,0.148],[0.125,0.096],[0.069,0.028],[0.06,-0.009],[0.126,0.026],[0.147,0],[0.293,0.072],[0.12,0.072],[0,0],[0,0],[0.063,0.027],[0.087,0.038],[0.134,0.075],[0.162,0.037],[0.113,0],[0,0],[0.131,0],[0.061,0],[0.171,-0.036],[0.097,-0.039],[0,0],[0.184,0],[0.16,-0.023],[0,0],[0.149,0.011],[0.056,0],[0,0],[0,0.173],[-0.037,0.059],[-0.073,0.039],[-0.149,0.061],[-0.097,0.059],[-0.062,0.014],[0,0],[-0.099,0],[-0.04,-0.006],[-0.042,0.004],[-0.087,-0.024],[-0.085,-0.027],[0,0],[-0.243,0],[-0.097,0.021],[-0.198,0.085],[0,0],[-0.098,0],[-0.111,0],[-0.212,-0.038],[-0.136,-0.013],[0,0],[-0.074,0],[-0.009,0.196],[0,0],[-0.087,0],[-0.085,0.063],[0,0.294],[0.097,0.072],[0.084,0.045],[0.118,0.019],[0.084,-0.007],[0.258,0.024],[0.185,0.085],[0.162,0.051],[0.235,0.085],[0,0],[-0.209,0],[-0.072,0.052],[-0.022,0.049],[0.074,0.061],[0.063,0.024],[0.137,0.048],[0.07,0.035],[0.075,0.077],[0.027,0.049],[0.036,0.06],[0.074,0.05],[0.076,0.025],[0.073,0.036],[0.186,0.084],[0.085,0.02],[0.098,0.051],[0.099,0.063],[0.221,0.074],[0,0],[0.097,0],[0.086,-0.012],[-0.038,-0.077],[-0.06,-0.098],[-0.061,-0.085],[0,-0.12],[0.063,-0.037],[0.185,-0.023],[0.285,0],[0.181,0.012],[0.077,0.019],[0.06,0.027],[0.074,0.012],[0.075,0],[0,0],[0,0],[0.102,0],[0.086,0.05],[0.17,0.073],[0.199,0],[0.088,-0.037],[0.063,-0.039],[0.071,-0.037],[0.061,-0.01],[0.049,-0.006],[0.085,0.001],[0.086,-0.036],[0.061,-0.034],[0.11,-0.073],[0.198,0],[0.169,0.087],[0.075,0.038],[0,0],[0.234,0],[0.074,0],[0.076,0.014],[0.257,0.071],[0.073,0.063],[0.073,0.046],[0.074,0.014],[0,0],[0.086,0],[0.063,0.008],[0.237,0.085],[0.076,0.037],[0.208,0.086],[0,0],[0.063,0],[0.086,0.013],[0.111,0.145],[0.069,0.049],[0.136,0.035],[0,0],[0.145,0.011],[0.084,0.024],[0.137,0.097],[0,0],[0,0.188],[0.05,0.073],[0.059,0.075],[0.063,0.009],[0.048,0.012],[0.05,-0.007],[0.098,0.023],[0.09,0.037],[0.099,0.05],[0.039,0.062],[0.09,0.137],[0.025,0.062],[0.038,0.062],[0.147,0.145],[0.074,0.085],[0.063,0.082],[0.051,0.073],[0.05,0.066],[0.087,0.12],[0.058,0.147],[0.038,0.072],[0.111,0.248],[0.049,0.071],[0.076,0.049],[0.097,0.087],[0,0],[0.011,0.111],[-0.039,0.112],[0,0.127],[0.148,0.22],[0,0],[0,0.124],[-0.072,0.134],[0,0.132],[0,0],[0,0],[-0.196,0],[-0.161,0.037],[-0.049,0.033],[0.049,0.27],[0,0.22],[0,0],[0,0],[0.097,0.119],[0.246,0.122],[0,0],[0.148,0],[0.149,0.029],[0,0],[0.025,-0.196],[0.025,-0.149],[0.294,0],[0.146,0],[0.149,0],[0.025,0.219],[0.025,0.12],[0.025,0.17],[0.097,0.172],[0.146,0.072],[0.123,0],[0.063,0.014],[0.066,-0.005],[0.149,0.027],[0.147,0.074],[0.148,0.098],[0.1,0.125],[0.073,0.099],[0,0],[0,0],[-0.198,0],[0,0],[-0.469,0],[-0.148,-0.052],[-0.097,-0.048],[-0.074,-0.044],[-0.055,0.011],[-0.27,-0.075],[-0.342,-0.021],[-0.469,0],[0.099,0.294],[0.074,0.148],[0.15,0.148],[0,0.174],[-0.295,0.024],[-0.172,0.049],[-0.198,0.149],[0,0.241],[0.228,0.166],[0.15,-0.019],[0.319,0.052],[0.445,0.296],[0.222,0],[0.269,-0.271],[0.491,-0.047],[0,0],[-0.441,0],[-0.056,-0.01],[-0.076,0.011],[-0.146,-0.048],[-0.069,-0.026],[-0.06,0.01],[-0.124,-0.024],[0,0],[0,0],[0.172,0],[0.169,0.074],[0.148,0.051],[0.124,0.029],[0.173,0.029],[0,0],[0.294,0],[0.219,0.1],[0,0],[-0.024,0.169],[-0.076,0.123],[-0.076,0.173],[0,0],[0,0.195],[0.12,0.173],[0.074,0.125],[0,0],[0,0],[-0.172,0],[-0.146,0.079],[-0.173,0.095],[-0.149,0.049],[0,0],[-0.174,0],[-0.175,-0.03],[0,0],[-0.221,-0.028],[-0.173,-0.05],[-0.197,0],[-0.152,0.051],[-0.123,0.047],[-0.124,0.05],[-0.198,0.124],[0,0],[0,0.196],[0.099,0.196],[0.122,0.047],[0.124,0.051],[0.169,0.073],[0.124,0.074],[0.175,0.225],[-0.271,0.051],[-0.192,0.098],[0,0.421],[0.17,0.289],[0.076,0.123],[0.124,0.149],[0.219,0],[0.17,-0.074],[0.123,-0.049],[0,0],[0.167,0],[0,0.145],[-0.048,0.122],[-0.054,0.054],[-0.066,-0.017],[-0.122,0.071],[-0.073,0.1],[-0.051,0.147],[-0.099,0.215],[0,0.223],[0.075,0.291],[0.096,0.147],[0.124,0.076],[0.146,0],[0.174,-0.07],[0.122,-0.097],[0.097,-0.124],[0.101,-0.05],[0.222,0],[0,0],[-0.147,0.121],[-0.126,0.074],[-0.146,0.073],[-0.147,0.075],[-0.073,0.176],[0,0.243],[0.075,0.146],[0.15,0.145],[0.345,0.42],[0.1,0.125],[0.072,0.122],[0.052,0.12],[0.101,0.323],[0.097,0.247],[0.146,0.344],[0.125,0.077],[0.102,0.121],[0.124,0.273],[0.075,0.169],[0.345,0.319],[0.37,0.121],[0.145,0.098],[0.123,0.048],[0,0],[0.172,0],[0.195,-0.05],[0,0],[0.147,0],[0.05,0.01],[0.084,-0.017],[0.097,0.074],[0.05,0.124],[0.099,0.219],[0.148,0.077],[0.132,0.013],[0.138,-0.01],[0.197,0.045],[0.075,0.121],[0.102,0.175],[0.273,0.049],[0.295,0],[0.172,-0.047],[0.147,-0.074],[0.145,-0.123],[0.072,-0.124],[0,0],[0,-0.615],[0.173,-0.294],[0.097,-0.128],[0.098,-0.195],[0,-0.217],[0,-0.148],[0,-0.149],[0,-0.296],[-0.072,-0.168],[-0.072,-0.121],[-0.024,-0.125],[0,-0.422],[0,0],[0.144,0],[0.295,-0.025],[0,-0.269],[0,-0.149],[0.1,-0.148],[0.123,-0.127],[0.069,-0.028],[0.06,0.008],[0.172,-0.051],[0,0],[0.146,-0.199],[0,-0.219],[-0.025,-0.148],[-0.051,-0.124],[-0.079,-0.123],[0,-0.242],[0.053,-0.025],[0.064,0.008],[0.266,-0.071],[0.142,-0.05],[0.147,-0.093],[0.074,-0.125],[0.027,-0.125],[0,-0.145],[0,0],[-0.025,-0.418],[0,-0.145],[0,0],[-0.024,0.467],[0,0.173],[0.319,-0.025],[0.146,0],[0.515,0],[0.126,-0.148],[0.149,-0.146],[0.149,-0.079],[0,0],[0.132,-0.011],[0.14,0.011],[0.149,-0.026],[0.125,-0.054],[0.074,-0.102],[0,0],[0.073,-0.175],[0.149,-0.099],[0.124,-0.072],[0.099,-0.101],[0.101,-0.12],[0.101,-0.077],[0.247,-0.225],[0.076,-0.122],[0.094,-0.075],[0.12,-0.073],[0.076,-0.097],[0.099,-0.143],[0.099,-0.096],[0.174,-0.098],[0.098,-0.442],[0.025,-0.036],[0.046,-0.017],[0.134,0],[0.038,0.013],[0.038,0.01],[0.031,0.009],[0.084,0.037],[0.035,0.018],[0.092,0.06],[0.038,0.035],[0.148,0.024],[0.297,0],[0.317,0.072],[0.343,0.172],[0.249,0],[0.17,0],[0.365,-0.126],[0.198,-0.146],[0.122,-0.148],[0.271,-0.199],[0.152,-0.026],[0.113,0.009],[0.121,0],[0.172,-0.03],[0.079,-0.011],[0.086,0.01],[0.15,-0.05],[0.148,-0.021],[0.056,-0.01],[0.075,0.01],[0.174,-0.049],[0.148,-0.074],[0.148,-0.097],[0.145,-0.172],[0.122,-0.196],[0.197,-0.271],[0,0],[0.343,0],[0.173,-0.099],[0.169,-0.149],[0.07,-0.126],[0,0],[-0.292,0.223],[-0.098,0.07],[-0.175,0.146],[0,0],[-0.341,-0.028],[-0.246,-0.195],[-0.12,-0.07],[0,0],[-0.663,0],[-0.123,-0.022],[-0.171,-0.048],[-0.143,-0.121],[-0.074,-0.147],[0,0],[0.27,-0.023],[0.211,-0.012],[0.197,0.011],[0.147,0],[0.32,-0.049],[0.346,-0.126],[0.124,0.049],[0.147,0.097],[0.196,0.321],[0.022,0.147],[0.074,0.148],[0.193,0.295],[0.221,0],[0.05,-0.098],[0.198,-0.268],[0.269,-0.05],[0.343,0],[0.173,0],[-0.052,-0.293],[-0.046,-0.342],[-0.073,-0.175],[-0.269,-0.2],[-0.294,-0.196],[-0.101,-0.272],[-0.048,-0.146],[-0.049,-0.121],[-0.048,-0.126],[-0.07,-0.121],[-0.245,-0.149],[-0.17,-0.071],[0.145,-0.122],[0.1,-0.05],[0.293,0.173],[0.125,0.075],[0.149,0.076],[0,0],[0.146,0],[0.145,0],[0.074,-0.592],[0,0],[0,-0.122],[0.025,-0.147],[0,-0.145],[-0.072,-0.12],[-0.269,-0.148],[-0.32,0],[-0.147,0.075],[-0.123,0.1],[0,0],[0.148,-0.224],[0.124,-0.073],[0.122,-0.072],[0.097,-0.074],[-0.295,-0.121],[-0.144,-0.047],[0,0],[0,0],[0,0],[0,0],[0.171,0],[0.123,-0.095],[0.273,-0.122],[0,0],[0.442,0.027],[0.246,0],[0.146,-0.072],[0.149,-0.146],[0,-0.244],[-0.124,-0.196],[-0.197,-0.171],[-0.218,0],[-0.151,0.025],[-0.121,0.024],[-0.147,0],[-0.174,-0.072],[-0.073,-0.145],[0,-0.249],[0.144,0],[0.147,0],[0.317,0.02],[0.319,0],[0.146,-0.025],[0,0],[0.174,-0.074],[0.175,0],[0,0],[0.244,0],[0.121,-0.024],[0.118,-0.05],[-0.273,-0.269],[-0.061,-0.011],[-0.068,0.007],[-0.198,-0.052],[-0.197,-0.149],[-0.021,-0.12],[0,-0.22],[0,-0.246],[0,-0.148],[0,-0.102],[0.643,0.022],[0,0],[0,-0.517],[-0.05,-0.122],[-0.024,-0.201],[-0.467,0],[-0.196,-0.021],[-0.125,-0.023],[-0.146,-0.048],[-0.147,-0.073],[-0.145,-0.096],[-0.098,-0.176],[0,-0.072],[0.074,-0.148],[0.145,-0.097],[0.071,-0.028],[0.058,0.008],[0.325,-0.077],[0.147,0],[0,0],[0.291,0],[0.172,0.022],[0.199,0.122],[0,0],[0.021,0.176],[-0.077,0.223],[0,0.615],[0,0],[0,0],[0.096,-0.149],[0.119,-0.145],[0,0],[0,-0.224],[-0.153,-0.197],[-0.221,0],[-0.147,0.027],[-0.246,0.048],[0,0],[-0.198,0],[-0.124,0],[0,0],[0.146,0],[0.146,0.025],[0,0],[0.322,0],[0.173,-0.047],[-0.097,-0.147],[-0.124,-0.148],[-0.137,-0.01],[-0.135,0.036],[-0.173,-0.029],[-0.119,-0.026],[-0.123,-0.022],[-0.246,-0.022],[-0.37,0],[0,0.267],[-0.029,0.176],[-0.051,-0.009],[-0.084,0.015],[-0.145,-0.12],[-0.073,-0.121],[0,-0.296],[0.053,-0.151],[0.075,-0.099],[0.123,-0.147],[0.05,-0.124],[0.021,-0.294],[0.021,-0.392],[0,0],[0,-0.393],[0.1,-0.126],[0.15,-0.099],[0.087,0.002],[0,0],[0.171,-0.026],[-0.024,-0.145],[-0.027,-0.222],[0,-0.247],[0.075,-0.148],[0.074,-0.126],[0.098,-0.144],[0.267,-0.196],[0.212,-0.035],[0.191,0.047],[0.123,-0.024],[0.122,-0.1],[0.05,-0.128],[0.072,-0.15],[0.097,-0.122],[0.145,-0.074],[0.122,-0.025],[0.124,0],[0.064,-0.011],[0.066,0.006],[0.173,-0.047],[0,0],[0,0],[0,0],[0.346,-0.073],[0.443,-0.171],[0.244,0],[0.198,0.07],[0.173,0.022],[0,0],[0.144,0],[0.145,0],[0.175,-0.028],[0.173,-0.051],[0.119,-0.098],[0.169,-0.198],[0.123,-0.102],[0.271,-0.1],[0,0],[0.615,0],[0.124,0],[0.12,-0.026],[0.196,-0.072],[0.098,-0.151],[0.074,-0.273],[0,-0.293],[-0.095,-0.096],[-0.292,-0.124],[-0.346,0],[-0.198,0.049],[-0.269,0.073],[-0.343,0],[-0.171,-0.046],[0,0],[-0.176,-0.048],[-0.344,0],[-0.089,0.013],[-0.079,-0.007],[-0.321,0.025],[-0.172,0.049],[-0.147,0.1],[-0.147,0.273],[-0.074,0.148],[-0.1,0.07],[-0.184,0.043],[-0.117,-0.011],[-0.319,0.025],[-0.318,0],[-0.172,-0.076],[-0.322,-0.22],[-0.245,0],[-0.318,0.148],[-0.097,0.127],[-0.124,0.101],[-0.121,0.022],[-0.166,0.011],[-0.14,-0.005],[-0.297,0.022],[-0.172,0.05],[-0.323,0.124],[-0.174,0.048],[-0.195,0.15],[-0.269,0.32],[-0.15,0.076],[-0.173,0],[0.097,-0.12],[0.124,-0.127],[0.099,-0.125],[0.096,-0.147],[0.147,-0.269],[0.049,-0.024],[0.07,0.012],[0.248,-0.097],[0,-0.149],[0,0],[0.15,-0.073],[0.126,-0.052],[0.148,-0.094],[0.075,-0.124],[0,-0.146],[-0.024,-0.148],[-0.099,-0.149],[-0.121,-0.072],[0,0],[-0.145,0],[-0.197,0.013],[-0.147,-0.007],[-0.149,0],[-0.495,0.023],[-0.199,0],[0,0.494],[0,0.147],[0,0.124],[-0.195,0],[-0.194,0],[-0.27,-0.022],[-0.273,0],[-0.318,0.072],[-0.124,0.052],[-0.172,0.048],[-0.071,0.031],[-0.057,-0.008],[0.023,-0.123],[0.049,-0.146],[0.049,-0.171],[0.15,-0.1],[0,0],[0.345,-0.027],[0.297,0],[0.175,-0.047],[0,0],[-0.151,-0.024],[-0.1,-0.012],[-0.074,0.006],[-0.24,-0.025],[-0.613,0],[-0.293,0.023],[-0.173,0],[0,0],[-0.415,0],[-0.396,0],[-0.173,0.028],[-0.15,0.027],[-0.123,0.021],[-0.219,0.075],[-0.084,0.013],[-0.078,-0.006],[-0.244,0.025],[-0.098,0.012],[-0.074,-0.007],[-0.195,0.025],[-0.12,0.024],[-0.168,0.048],[-0.176,0],[0.046,-0.123],[0.169,-0.343],[0.097,-0.145],[0.271,-0.22],[0.193,-0.024],[0,0],[0.174,0],[0.146,-0.1],[0.125,-0.074],[0,0],[0.174,0],[0.291,0],[0.15,-0.052],[0.146,-0.073],[0.071,-0.044],[0.055,0.01],[0.146,-0.05],[0.124,0],[0.06,-0.009],[0.071,0.007],[0.17,-0.021],[0.28,-0.059],[0.162,0.013],[0.193,0],[0,0],[0,0],[-0.221,0.075],[0,0],[-0.175,0],[-0.467,-0.122],[-0.297,0],[-0.391,0],[-0.152,-0.02],[0.073,-0.147],[0,-0.173],[-0.147,0],[-0.298,-0.051],[-0.1,0],[-0.172,0.076],[0,0],[-0.365,0],[-0.121,-0.051],[-0.32,-0.048],[0,0],[0,0],[0,0],[0,0],[-0.296,0],[-0.17,0.051],[0,0],[0,0],[0,0],[0.317,0],[0.171,-0.024],[0.097,-0.123],[0,0],[-0.021,-0.147],[-0.073,-0.199],[-0.124,-0.073],[-0.293,-0.122],[0,0],[-0.346,-0.021],[-0.294,0],[-0.149,-0.021],[-0.121,-0.021],[-0.321,-0.054],[-0.346,0],[-0.147,0],[-0.343,0.029],[0,0],[-0.322,-0.021],[-3.265,0],[-0.322,0]],\"v\":[[-88.283,-164.791],[-88.482,-164.791],[-88.677,-164.791],[-89.167,-164.498],[-89.561,-164.104],[-90.003,-164.104],[-90.447,-164.104],[-90.938,-164.202],[-91.426,-164.202],[-91.82,-164.302],[-92.461,-164.302],[-93.099,-164.302],[-94.378,-163.61],[-94.082,-162.924],[-93.884,-162.432],[-94.573,-161.943],[-95.361,-161.843],[-96.245,-162.038],[-96.664,-162.235],[-98.681,-162.235],[-99.98,-163.024],[-100.374,-163.122],[-101.454,-163.219],[-101.948,-163.219],[-102.339,-163.122],[-102.638,-162.726],[-103.126,-162.531],[-103.964,-162.531],[-104.307,-162.531],[-104.796,-162.531],[-105.388,-162.828],[-106.47,-162.531],[-107.969,-162.628],[-108.238,-162.628],[-108.435,-162.531],[-108.53,-162.531],[-108.633,-162.531],[-108.926,-162.432],[-109.319,-162.334],[-109.861,-162.088],[-109.616,-161.646],[-109.37,-161.45],[-109.174,-161.349],[-109.056,-161.349],[-108.926,-161.349],[-108.435,-161.104],[-108.191,-160.907],[-107.993,-160.711],[-107.844,-160.515],[-107.749,-160.123],[-107.749,-159.583],[-107.943,-159.731],[-108.09,-159.924],[-108.238,-160.123],[-108.332,-160.122],[-108.435,-160.123],[-108.68,-160.171],[-108.926,-160.221],[-109.174,-160.369],[-109.27,-160.369],[-109.37,-160.369],[-109.568,-160.515],[-109.811,-160.564],[-110.01,-160.614],[-110.301,-160.614],[-110.721,-160.666],[-111.091,-160.614],[-111.289,-160.465],[-111.384,-160.268],[-111.336,-160.07],[-111.138,-159.679],[-110.943,-159.484],[-110.697,-159.286],[-110.204,-159.091],[-109.811,-158.893],[-109.616,-158.844],[-109.418,-158.745],[-109.174,-158.697],[-108.73,-158.697],[-108.288,-158.697],[-108.044,-158.649],[-107.844,-158.5],[-107.647,-158.351],[-107.206,-158.055],[-107.059,-157.86],[-106.716,-157.468],[-106.566,-157.221],[-106.47,-157.028],[-106.47,-156.831],[-106.421,-156.534],[-106.566,-156.19],[-106.763,-156.24],[-107.206,-156.336],[-107.451,-156.435],[-107.57,-156.434],[-107.699,-156.435],[-107.993,-156.534],[-108.387,-156.729],[-108.583,-156.831],[-108.827,-156.877],[-109.073,-156.979],[-109.37,-157.123],[-109.568,-157.172],[-110.253,-157.42],[-110.598,-157.468],[-111.138,-157.713],[-111.336,-157.76],[-111.582,-157.959],[-111.776,-158.055],[-112.025,-158.257],[-112.318,-158.403],[-112.517,-158.597],[-112.762,-158.844],[-112.883,-158.844],[-113.008,-158.844],[-113.202,-158.942],[-113.4,-158.992],[-113.658,-159.091],[-114.568,-159.091],[-114.824,-159.042],[-115.268,-159.188],[-115.615,-159.286],[-116.214,-159.534],[-118.219,-159.508],[-118.219,-159.239],[-118.072,-159.042],[-117.676,-158.597],[-117.234,-158.304],[-117.132,-158.309],[-116.99,-158.304],[-116.792,-158.205],[-116.645,-158.01],[-116.25,-157.666],[-116.055,-157.519],[-115.906,-157.273],[-115.663,-157.075],[-115.466,-156.682],[-115.418,-156.482],[-115.268,-156.24],[-115.122,-155.834],[-115.122,-155.55],[-115.602,-155.55],[-115.858,-155.602],[-116.102,-155.653],[-116.301,-155.846],[-116.596,-155.994],[-116.693,-156.19],[-116.891,-156.286],[-117.186,-156.482],[-117.434,-156.682],[-117.727,-156.877],[-118.171,-157.221],[-118.367,-157.318],[-118.561,-157.468],[-118.758,-157.614],[-119.15,-157.906],[-119.346,-157.959],[-119.544,-157.959],[-120.035,-158.109],[-120.233,-158.257],[-120.332,-158.5],[-120.529,-158.697],[-120.724,-158.745],[-121.018,-158.893],[-121.215,-158.893],[-121.622,-158.942],[-122.345,-158.942],[-122.345,-158.612],[-122.198,-158.205],[-121.853,-157.614],[-121.757,-157.318],[-121.807,-157.028],[-121.807,-156.778],[-121.853,-156.583],[-121.853,-156.386],[-121.953,-156.19],[-122.247,-155.356],[-122.345,-155.107],[-122.444,-154.911],[-122.742,-154.86],[-123.082,-154.961],[-123.378,-155.107],[-123.721,-155.453],[-123.721,-155.653],[-123.674,-156.093],[-123.525,-156.286],[-123.182,-156.729],[-122.986,-156.93],[-122.888,-157.123],[-122.938,-157.318],[-123.132,-157.519],[-123.279,-157.812],[-123.479,-158.01],[-123.479,-158.205],[-123.426,-158.403],[-123.674,-158.794],[-123.919,-158.942],[-124.163,-159.141],[-124.41,-159.286],[-124.557,-159.484],[-124.901,-159.484],[-125.245,-159.484],[-125.443,-159.387],[-125.835,-159.286],[-126.033,-159.188],[-126.525,-158.942],[-126.77,-158.745],[-126.967,-158.649],[-127.167,-158.549],[-127.257,-158.55],[-127.361,-158.549],[-127.605,-158.45],[-127.85,-158.351],[-128.096,-158.205],[-128.54,-158.156],[-128.749,-158.205],[-129.904,-158.205],[-130.163,-158.156],[-130.406,-158.055],[-130.603,-157.959],[-131.009,-157.86],[-131.145,-157.86],[-131.49,-157.906],[-132.609,-157.872],[-132.866,-157.812],[-133.062,-157.76],[-133.259,-157.565],[-133.259,-157.372],[-133.161,-157.172],[-132.965,-157.123],[-132.764,-157.075],[-132.546,-157.075],[-132.324,-157.075],[-132.029,-156.979],[-131.784,-156.831],[-131.589,-156.635],[-131.49,-156.435],[-131.342,-156.24],[-131.193,-155.994],[-130.947,-155.945],[-130.555,-155.747],[-130.361,-155.747],[-130.173,-155.747],[-129.965,-155.747],[-129.77,-155.653],[-129.572,-155.453],[-129.177,-155.256],[-128.98,-155.159],[-128.786,-155.107],[-128.441,-154.768],[-128.589,-154.568],[-129.411,-154.568],[-129.621,-154.664],[-129.818,-154.715],[-130.014,-154.813],[-130.505,-154.961],[-130.751,-155.159],[-130.996,-155.305],[-131.193,-155.453],[-131.391,-155.653],[-131.757,-155.659],[-132.029,-155.653],[-132.275,-155.7],[-132.471,-155.7],[-132.719,-155.747],[-132.965,-155.994],[-133.408,-156.093],[-133.603,-156.19],[-134.145,-156.435],[-134.339,-156.635],[-134.538,-156.831],[-134.635,-157.028],[-134.833,-157.172],[-135.027,-157.172],[-135.865,-157.028],[-136.06,-156.93],[-136.306,-156.831],[-136.5,-156.682],[-136.749,-156.635],[-136.943,-156.482],[-137.436,-156.286],[-137.633,-156.24],[-137.831,-155.945],[-137.633,-155.453],[-137.436,-155.256],[-137.337,-155.059],[-137.266,-154.852],[-137.266,-153.24],[-138.507,-153.24],[-138.913,-153.386],[-139.158,-153.536],[-139.352,-153.734],[-139.562,-153.781],[-141.762,-153.827],[-141.961,-153.682],[-142.155,-153.289],[-142.352,-153.09],[-142.745,-152.994],[-143.337,-152.75],[-143.729,-152.702],[-144.122,-152.356],[-144.319,-152.157],[-144.76,-151.765],[-144.958,-151.617],[-145.156,-151.57],[-145.546,-151.57],[-145.893,-151.57],[-146.139,-151.523],[-146.383,-151.523],[-146.629,-151.373],[-146.875,-151.226],[-147.071,-151.08],[-147.265,-151.031],[-147.316,-150.784],[-147.513,-150.638],[-147.617,-150.636],[-147.712,-150.638],[-147.908,-150.584],[-148.007,-150.39],[-148.397,-149.9],[-148.448,-149.7],[-148.643,-149.653],[-148.842,-149.458],[-148.791,-149.063],[-148.397,-149.063],[-148.007,-148.966],[-147.513,-148.864],[-147.316,-148.719],[-147.17,-148.519],[-146.974,-148.519],[-146.456,-148.519],[-145.742,-148.519],[-145.352,-148.669],[-145.156,-148.719],[-144.958,-148.912],[-144.661,-149.063],[-144.366,-148.669],[-144.366,-148.278],[-144.366,-147.882],[-144.27,-147.684],[-144.219,-147.489],[-144.122,-147.281],[-144.122,-146.369],[-144.615,-145.425],[-144.81,-145.231],[-145.057,-145.081],[-145.697,-145.081],[-145.893,-145.081],[-146.139,-145.131],[-146.581,-145.131],[-146.974,-145.036],[-147.218,-144.833],[-147.463,-144.787],[-147.771,-144.637],[-148.68,-144.637],[-149.382,-144.736],[-149.676,-144.787],[-149.872,-144.885],[-150.317,-144.885],[-150.953,-144.833],[-151.396,-144.637],[-151.493,-144.344],[-151.493,-144.098],[-151.838,-143.703],[-152.049,-143.61],[-153.156,-143.61],[-153.611,-143.359],[-153.856,-143.262],[-154.393,-143.166],[-154.692,-143.166],[-155.084,-143.262],[-155.525,-143.262],[-155.967,-143.262],[-156.261,-143.166],[-156.511,-143.065],[-156.804,-143.02],[-156.999,-142.917],[-157.098,-142.721],[-157.098,-142.524],[-157.147,-142.333],[-157.244,-142.135],[-157.455,-142.036],[-158.523,-142.036],[-158.72,-141.887],[-158.867,-141.492],[-158.867,-141.099],[-158.574,-140.708],[-158.181,-140.411],[-157.984,-140.018],[-157.763,-140.01],[-157.592,-140.018],[-157.197,-140.018],[-156.804,-139.92],[-156.015,-139.624],[-155.819,-139.234],[-153.856,-139.234],[-153.068,-138.84],[-152.772,-138.788],[-152.578,-138.643],[-152.184,-138.394],[-151.742,-138.394],[-151.444,-138.346],[-151.101,-138.346],[-150.758,-138.346],[-150.561,-138.394],[-150.117,-138.591],[-149.86,-138.69],[-148.755,-138.69],[-148.3,-138.84],[-147.845,-138.887],[-147.662,-138.887],[-147.265,-138.84],[-147.118,-138.864],[-147.118,-138.065],[-147.316,-137.658],[-147.513,-137.562],[-147.759,-137.463],[-148.152,-137.265],[-148.35,-137.021],[-148.544,-137.021],[-148.743,-137.021],[-148.989,-137.117],[-149.104,-137.114],[-149.234,-137.117],[-149.431,-137.265],[-149.676,-137.317],[-150.095,-137.317],[-150.708,-137.265],[-150.953,-137.117],[-151.52,-137.021],[-151.791,-137.021],[-152.037,-137.068],[-152.33,-137.068],[-152.822,-137.265],[-153.156,-137.265],[-153.461,-137.265],[-153.66,-137.218],[-153.707,-136.727],[-154.874,-136.727],[-155.084,-136.627],[-155.28,-136.38],[-154.789,-135.789],[-154.542,-135.591],[-154.295,-135.448],[-153.986,-135.445],[-153.707,-135.448],[-153.068,-135.201],[-152.578,-135.005],[-152.134,-134.857],[-151.543,-134.562],[-151.347,-134.464],[-151.889,-134.416],[-152.085,-134.265],[-152.134,-134.068],[-151.987,-133.875],[-151.791,-133.825],[-151.396,-133.679],[-151.25,-133.481],[-151.053,-133.287],[-151.006,-133.088],[-150.805,-132.987],[-150.561,-132.89],[-150.366,-132.792],[-150.167,-132.692],[-149.676,-132.497],[-149.431,-132.4],[-149.187,-132.202],[-148.89,-132.055],[-148.3,-132.006],[-148.201,-132.006],[-147.956,-132.006],[-147.759,-132.151],[-147.858,-132.349],[-148.055,-132.596],[-148.249,-132.843],[-148.152,-133.136],[-147.956,-133.136],[-147.441,-133.136],[-146.726,-133.136],[-146.286,-132.937],[-146.087,-132.843],[-145.893,-132.792],[-145.684,-132.692],[-145.497,-132.742],[-145.497,-133.136],[-144.677,-133.136],[-144.465,-132.987],[-144.219,-132.843],[-143.706,-132.792],[-143.189,-132.843],[-143.042,-133.038],[-142.844,-133.136],[-142.646,-133.239],[-142.452,-133.287],[-142.305,-133.294],[-142.059,-133.333],[-141.909,-133.531],[-141.714,-133.628],[-141.419,-133.825],[-140.926,-133.679],[-140.535,-133.383],[-140.326,-133.287],[-139.747,-133.287],[-139.109,-133.239],[-138.913,-133.239],[-138.714,-133.136],[-138.074,-132.843],[-137.879,-132.643],[-137.633,-132.546],[-137.426,-132.497],[-136.072,-132.497],[-135.865,-132.447],[-135.671,-132.4],[-135.079,-132.055],[-134.88,-131.908],[-134.289,-131.859],[-134.095,-131.859],[-133.897,-131.859],[-133.749,-131.658],[-133.355,-131.268],[-133.161,-131.122],[-132.764,-131.071],[-132.568,-131.071],[-132.176,-130.974],[-131.982,-130.825],[-131.685,-130.471],[-131.685,-129.122],[-131.44,-128.713],[-131.293,-128.516],[-131.095,-128.317],[-130.898,-128.268],[-130.755,-128.268],[-130.603,-128.268],[-130.361,-128.122],[-130.113,-128.025],[-129.866,-127.876],[-129.77,-127.682],[-129.572,-127.289],[-129.522,-127.093],[-129.324,-126.99],[-129.03,-126.548],[-128.786,-126.349],[-128.641,-126.057],[-128.491,-125.863],[-128.294,-125.713],[-128.145,-125.319],[-127.951,-124.926],[-127.85,-124.733],[-127.507,-124.089],[-127.312,-123.942],[-126.917,-123.7],[-126.77,-123.38],[-126.77,-123.256],[-126.819,-122.964],[-126.967,-122.667],[-126.819,-122.371],[-126.426,-121.77],[-126.426,-120.762],[-126.624,-120.506],[-126.819,-120.132],[-126.77,-119.79],[-125.824,-119.79],[-125.824,-118.978],[-126.328,-118.978],[-126.72,-118.732],[-126.77,-118.536],[-126.525,-117.799],[-126.671,-117.212],[-127.409,-117.212],[-127.409,-116.421],[-127.115,-115.933],[-126.328,-115.736],[-125.936,-115.736],[-125.542,-115.639],[-125.126,-115.54],[-123.182,-115.54],[-123.182,-116.029],[-122.986,-116.375],[-122.198,-116.421],[-121.807,-116.325],[-121.413,-116.375],[-121.314,-115.833],[-121.314,-115.441],[-121.018,-115.05],[-120.625,-114.655],[-120.233,-114.36],[-119.839,-114.36],[-119.638,-114.359],[-119.448,-114.36],[-119.053,-114.163],[-118.661,-113.968],[-118.367,-113.576],[-117.97,-113.277],[-117.872,-112.884],[-117.97,-112.491],[-118.733,-112.491],[-119.249,-112.591],[-120.035,-112.591],[-121.215,-112.687],[-121.609,-112.884],[-121.706,-113.277],[-121.943,-113.29],[-122.099,-113.277],[-122.888,-113.377],[-123.77,-113.475],[-124.952,-113.178],[-124.658,-112.394],[-124.266,-112.098],[-123.868,-111.705],[-124.068,-111.313],[-124.853,-111.214],[-125.245,-110.92],[-125.641,-110.326],[-125.443,-109.738],[-124.74,-109.631],[-124.266,-109.642],[-123.479,-109.247],[-122.398,-108.361],[-122,-108.757],[-121.215,-109.346],[-119.986,-109.346],[-119.986,-110.721],[-121.116,-110.82],[-121.292,-110.814],[-121.512,-110.82],[-121.706,-111.214],[-121.926,-111.22],[-122.099,-111.214],[-122.495,-111.313],[-122.297,-111.705],[-121.535,-111.705],[-121.116,-111.605],[-120.724,-111.313],[-120.332,-111.117],[-119.939,-111.117],[-119.448,-111.016],[-118.661,-111.016],[-117.872,-110.92],[-117.482,-110.326],[-117.482,-110.131],[-117.872,-109.835],[-117.872,-109.443],[-118.267,-109.052],[-118.267,-108.853],[-117.97,-108.462],[-117.579,-108.069],[-117.379,-107.647],[-117.379,-106.494],[-118.439,-106.494],[-118.857,-106.594],[-119.249,-106.296],[-119.544,-105.903],[-119.986,-105.903],[-120.427,-105.903],[-120.82,-106.099],[-121.264,-105.954],[-121.264,-104.035],[-121.807,-104.134],[-122.297,-104.334],[-122.59,-103.941],[-122.986,-103.741],[-123.378,-103.645],[-123.77,-103.546],[-123.868,-102.908],[-123.868,-102.66],[-123.674,-102.169],[-123.378,-101.676],[-122.986,-101.579],[-122.59,-101.482],[-122.198,-101.185],[-121.807,-100.993],[-121.609,-100.204],[-122.398,-100.005],[-122.693,-99.419],[-122.198,-98.43],[-121.807,-97.648],[-121.609,-97.253],[-121.018,-97.152],[-120.427,-97.253],[-120.134,-97.648],[-119.741,-97.648],[-119.346,-97.648],[-118.954,-97.449],[-118.954,-97.058],[-119.053,-96.663],[-119.273,-96.65],[-119.448,-96.663],[-119.839,-96.469],[-119.839,-96.074],[-120.035,-95.678],[-120.427,-95.191],[-120.332,-94.597],[-120.035,-93.812],[-119.741,-93.421],[-119.346,-93.421],[-118.954,-93.421],[-118.561,-93.715],[-118.267,-94.108],[-118.072,-94.5],[-117.676,-94.597],[-117.087,-94.5],[-117.087,-92.926],[-117.379,-92.534],[-117.775,-92.437],[-118.171,-92.143],[-118.561,-91.849],[-118.661,-91.255],[-118.464,-90.667],[-118.072,-90.373],[-117.676,-89.98],[-116.792,-88.8],[-116.397,-88.503],[-116.203,-88.11],[-116.203,-87.72],[-115.711,-86.933],[-115.513,-86.144],[-114.728,-85.459],[-114.337,-85.259],[-114.04,-84.867],[-114.04,-84.08],[-113.745,-83.687],[-112.566,-83.294],[-111.776,-82.703],[-111.486,-82.309],[-111.091,-82.309],[-110.697,-82.309],[-110.301,-82.508],[-109.714,-82.605],[-109.516,-82.605],[-109.125,-82.508],[-108.956,-82.519],[-108.73,-82.508],[-108.633,-82.115],[-108.534,-81.718],[-108.044,-81.328],[-107.548,-81.132],[-107.184,-81.136],[-106.763,-81.132],[-106.371,-80.736],[-106.275,-80.346],[-105.882,-79.954],[-105.091,-79.954],[-104.307,-79.954],[-103.913,-80.245],[-103.52,-80.443],[-103.126,-80.736],[-103.126,-81.132],[-103.126,-81.525],[-102.832,-83.098],[-102.142,-83.783],[-101.948,-84.18],[-101.751,-84.768],[-101.85,-85.358],[-101.948,-85.751],[-101.85,-86.144],[-101.948,-86.933],[-102.339,-87.227],[-102.538,-87.619],[-102.638,-88.01],[-101.652,-88.503],[-101.257,-88.503],[-100.866,-88.602],[-100.081,-88.602],[-100.081,-89.29],[-100.081,-89.682],[-99.784,-90.074],[-99.392,-90.373],[-99.173,-90.378],[-98.997,-90.373],[-98.602,-90.667],[-98.602,-92.632],[-98.21,-93.126],[-98.309,-93.715],[-98.505,-94.108],[-98.602,-94.5],[-98.997,-94.7],[-98.801,-95.29],[-98.592,-95.294],[-98.406,-95.29],[-97.618,-95.384],[-97.227,-95.585],[-96.837,-95.877],[-96.837,-96.27],[-96.837,-96.663],[-96.737,-97.058],[-94.328,-97.058],[-94.378,-98.141],[-94.328,-98.533],[-92.953,-98.533],[-93,-97.352],[-92.953,-96.886],[-92.117,-96.957],[-91.749,-96.862],[-90.645,-97.648],[-90.249,-98.042],[-89.855,-98.43],[-89.464,-98.629],[-89.072,-98.629],[-88.71,-98.623],[-88.283,-98.629],[-87.889,-98.824],[-87.496,-98.923],[-87.496,-99.32],[-87.301,-99.708],[-86.906,-100.005],[-86.513,-100.302],[-86.12,-100.497],[-85.924,-100.894],[-85.628,-101.284],[-85.236,-101.38],[-84.745,-102.169],[-84.546,-102.56],[-84.151,-102.66],[-83.76,-102.857],[-83.76,-103.252],[-83.465,-103.645],[-83.072,-103.741],[-82.677,-104.134],[-82.677,-105.316],[-82.652,-105.389],[-82.503,-105.389],[-82.163,-105.339],[-82.064,-105.289],[-81.969,-105.24],[-81.865,-105.217],[-81.671,-105.068],[-81.572,-105.02],[-81.378,-104.802],[-81.251,-104.727],[-80.811,-104.626],[-80.023,-104.626],[-79.236,-104.134],[-78.206,-104.035],[-77.566,-104.035],[-77.172,-104.232],[-76.289,-104.727],[-75.796,-105.119],[-75.503,-105.609],[-74.714,-106.002],[-74.271,-106.009],[-73.927,-106.002],[-73.536,-106.099],[-73.046,-106.296],[-72.819,-106.29],[-72.552,-106.296],[-72.161,-106.494],[-71.768,-106.691],[-71.59,-106.684],[-71.374,-106.691],[-70.98,-106.987],[-70.586,-107.183],[-70.292,-107.577],[-69.896,-108.069],[-69.505,-108.658],[-68.693,-109.148],[-66.677,-109.148],[-65.868,-109.543],[-65.473,-109.936],[-64.982,-110.326],[-64.982,-110.721],[-65.378,-110.92],[-66.161,-110.326],[-66.259,-109.936],[-66.9,-109.835],[-67.147,-109.835],[-68.03,-110.131],[-68.523,-110.92],[-68.915,-110.92],[-69.309,-110.92],[-70.98,-111.117],[-71.374,-111.214],[-71.768,-111.51],[-72.161,-111.803],[-72.257,-112.27],[-72.257,-113.081],[-71.572,-113.178],[-71.033,-113.172],[-70.391,-113.178],[-69.997,-113.277],[-69.113,-113.475],[-68.424,-114.262],[-68.03,-114.163],[-67.734,-113.772],[-67.734,-112.787],[-67.538,-112.394],[-67.34,-112],[-66.456,-111.605],[-65.966,-111.902],[-65.868,-112.296],[-65.081,-112.787],[-64.296,-112.787],[-63.41,-112.787],[-63.016,-112.984],[-63.115,-113.772],[-63.508,-114.655],[-63.805,-115.144],[-64.589,-115.54],[-65.277,-116.226],[-65.277,-117.015],[-65.671,-117.212],[-65.771,-117.604],[-65.771,-117.998],[-66.161,-118.195],[-66.948,-118.491],[-67.34,-118.784],[-67.048,-119.177],[-66.654,-119.274],[-65.966,-118.585],[-65.771,-118.195],[-65.305,-118.195],[-64.883,-118.195],[-64.49,-118.29],[-64.099,-118.241],[-64,-119.766],[-64,-120.159],[-63.901,-120.552],[-63.707,-120.948],[-63.805,-121.341],[-64.198,-121.537],[-65.03,-121.732],[-65.868,-121.636],[-66.064,-121.24],[-66.482,-121.14],[-67.833,-121.14],[-67.443,-121.732],[-67.048,-121.832],[-66.654,-122.027],[-66.654,-122.419],[-67.443,-122.715],[-67.833,-122.914],[-67.538,-123.207],[-65.868,-123.207],[-65.868,-122.127],[-64.318,-122.127],[-63.901,-122.225],[-63.707,-122.617],[-62.868,-122.715],[-62.423,-122.715],[-61.348,-122.32],[-60.753,-122.522],[-60.46,-122.914],[-60.068,-123.307],[-60.361,-123.893],[-60.753,-124.386],[-61.348,-124.781],[-61.934,-124.682],[-62.329,-124.485],[-62.721,-124.386],[-63.115,-124.485],[-63.508,-124.781],[-63.707,-125.172],[-63.212,-125.566],[-62.82,-125.469],[-62.423,-125.368],[-61.591,-125.368],[-60.753,-125.368],[-60.361,-125.566],[-59.97,-125.761],[-59.677,-126.153],[-59.28,-125.96],[-58.641,-125.96],[-58.003,-125.96],[-57.607,-126.057],[-57.509,-126.452],[-58.297,-127.041],[-58.492,-127.041],[-58.689,-127.041],[-59.18,-127.337],[-59.677,-127.831],[-59.773,-128.221],[-59.724,-128.786],[-59.773,-129.401],[-59.677,-129.791],[-59.724,-130.039],[-58.1,-130.039],[-58.1,-131.195],[-58.887,-132.252],[-58.887,-132.643],[-58.986,-133.239],[-60.164,-133.239],[-60.656,-133.333],[-61.049,-133.432],[-61.444,-133.628],[-61.836,-133.825],[-62.132,-134.216],[-62.229,-134.808],[-62.229,-135.005],[-61.836,-135.201],[-61.542,-135.591],[-61.318,-135.599],[-61.151,-135.591],[-60.264,-135.69],[-59.871,-135.789],[-59.081,-135.789],[-58.297,-135.789],[-57.904,-135.494],[-57.509,-135.005],[-57.509,-134.808],[-57.706,-134.416],[-58.003,-133.825],[-57.509,-132.349],[-57.017,-132.546],[-57.017,-135.69],[-56.723,-136.086],[-56.335,-136.481],[-56.335,-136.675],[-56.624,-137.167],[-57.118,-137.658],[-57.706,-137.562],[-58.1,-137.364],[-58.764,-137.364],[-59.378,-137.364],[-59.871,-137.463],[-60.164,-137.412],[-60.164,-138.643],[-59.773,-138.739],[-59.378,-138.542],[-59.012,-138.542],[-58.199,-138.643],[-57.807,-138.937],[-58.1,-139.33],[-58.495,-139.722],[-58.872,-139.669],[-59.28,-139.624],[-59.677,-139.92],[-60.068,-140.018],[-60.46,-140.018],[-61.074,-140.214],[-62.031,-140.115],[-62.031,-139.432],[-62.229,-139.036],[-62.4,-139.023],[-62.626,-139.036],[-63.016,-139.33],[-63.016,-139.722],[-62.921,-140.507],[-62.721,-140.903],[-62.329,-141.002],[-62.031,-141.394],[-62.031,-141.789],[-62.031,-142.575],[-61.836,-143.657],[-60.656,-143.657],[-60.46,-144.637],[-60.164,-145.036],[-59.637,-145.127],[-59.378,-145.131],[-58.986,-145.131],[-58.592,-145.425],[-58.689,-145.818],[-58.79,-146.407],[-58.495,-146.997],[-58.199,-147.39],[-58.003,-147.786],[-57.607,-148.081],[-56.823,-148.473],[-56.253,-148.419],[-55.643,-148.374],[-55.249,-148.473],[-55.055,-148.864],[-54.956,-149.257],[-54.758,-149.653],[-54.365,-149.851],[-53.971,-150.045],[-53.579,-150.045],[-53.186,-150.144],[-52.983,-150.144],[-52.792,-150.144],[-52.499,-150.536],[-52.598,-151.002],[-56.23,-151.002],[-57.216,-151.226],[-56.335,-151.424],[-55.249,-152.111],[-54.661,-151.913],[-54.169,-151.617],[-53.723,-151.617],[-53.28,-151.617],[-52.888,-151.715],[-52.499,-151.715],[-52.007,-151.812],[-51.71,-152.208],[-51.414,-152.601],[-50.926,-153.09],[-50.63,-153.485],[-49.84,-153.585],[-49.451,-153.585],[-47.876,-153.682],[-47.482,-153.781],[-47.09,-153.878],[-46.697,-154.271],[-46.401,-154.664],[-46.302,-155.453],[-46.503,-156.24],[-46.895,-156.435],[-47.777,-156.534],[-48.663,-156.435],[-49.155,-156.141],[-49.941,-156.041],[-50.826,-156.24],[-51.318,-156.435],[-51.906,-156.635],[-52.4,-156.831],[-53.28,-156.635],[-53.533,-156.633],[-53.775,-156.635],[-54.661,-156.435],[-55.055,-156.141],[-55.448,-155.846],[-55.742,-155.059],[-55.939,-154.664],[-56.335,-154.568],[-56.831,-154.557],[-57.216,-154.568],[-58.052,-154.468],[-58.887,-154.568],[-59.18,-154.961],[-60.215,-155.059],[-60.855,-155.059],[-61.542,-154.374],[-61.74,-153.979],[-62.132,-153.781],[-62.525,-153.781],[-62.956,-153.781],[-63.41,-153.781],[-64.198,-153.585],[-64.589,-153.289],[-65.473,-153.09],[-65.868,-152.799],[-66.361,-152.406],[-66.948,-151.424],[-67.34,-151.226],[-67.734,-151.424],[-67.538,-151.812],[-67.147,-152.011],[-66.948,-152.406],[-66.654,-152.799],[-66.161,-153.585],[-65.977,-153.584],[-65.771,-153.585],[-65.13,-153.878],[-65.18,-154.271],[-65.18,-155.159],[-64.689,-155.55],[-64.296,-155.653],[-63.901,-155.945],[-63.901,-156.336],[-63.901,-156.729],[-64.099,-157.123],[-64.395,-157.519],[-64.783,-157.519],[-65.18,-157.519],[-65.574,-157.42],[-66.066,-157.419],[-66.556,-157.42],[-66.948,-157.318],[-68.225,-157.318],[-68.72,-157.494],[-68.72,-156.24],[-68.815,-155.846],[-68.72,-155.525],[-69.214,-155.356],[-69.701,-155.55],[-70.391,-155.55],[-71.078,-155.55],[-71.863,-155.159],[-72.257,-155.059],[-72.65,-154.768],[-72.878,-154.76],[-73.046,-154.768],[-72.947,-155.159],[-72.749,-155.55],[-72.552,-156.041],[-72.161,-156.336],[-71.768,-156.336],[-70.883,-156.336],[-70.096,-156.435],[-69.701,-156.729],[-69.799,-157.123],[-70.193,-157.318],[-70.441,-157.318],[-70.688,-157.318],[-71.324,-157.42],[-72.849,-157.123],[-73.633,-157.123],[-74.051,-157.028],[-76.757,-157.028],[-77.81,-157.221],[-78.844,-157.028],[-79.335,-156.93],[-79.728,-156.729],[-80.124,-156.635],[-80.714,-156.336],[-80.944,-156.336],[-81.204,-156.336],[-81.796,-156.141],[-82.038,-156.141],[-82.285,-156.141],[-82.779,-155.945],[-83.172,-155.846],[-83.661,-155.653],[-84.055,-155.846],[-83.954,-156.24],[-83.366,-157.028],[-83.072,-157.42],[-82.185,-157.812],[-81.671,-157.906],[-75.035,-157.906],[-74.617,-158.01],[-74.323,-158.403],[-73.908,-158.5],[-68.352,-158.5],[-67.928,-158.597],[-67.147,-158.597],[-66.753,-158.794],[-66.556,-159.188],[-66.323,-159.2],[-66.161,-159.188],[-65.771,-159.387],[-65.378,-159.387],[-65.189,-159.385],[-64.982,-159.387],[-64.589,-159.679],[-63.836,-159.695],[-63.309,-159.679],[-62.82,-159.776],[-62.82,-160.666],[-64,-160.762],[-64.589,-160.564],[-64.783,-160.564],[-65.18,-160.762],[-66.456,-160.96],[-67.246,-160.86],[-68.225,-160.96],[-68.62,-161.154],[-68.225,-161.45],[-68.424,-161.843],[-68.815,-161.843],[-69.555,-162.038],[-69.799,-162.038],[-70.214,-161.745],[-72.137,-161.745],[-72.947,-162.235],[-73.339,-162.334],[-74.223,-162.334],[-76.583,-162.334],[-77.172,-162.334],[-78.647,-162.334],[-79.432,-162.334],[-80.223,-162.235],[-80.613,-161.894],[-84.055,-161.894],[-83.954,-162.334],[-83.193,-162.334],[-82.382,-162.235],[-82.089,-162.628],[-81.892,-163.072],[-70.096,-163.072],[-70.096,-163.513],[-70.49,-163.906],[-70.883,-164.104],[-71.768,-164.302],[-72.257,-164.302],[-73.142,-164.401],[-73.927,-164.498],[-74.323,-164.697],[-74.714,-164.791],[-75.599,-164.791],[-76.484,-164.791],[-76.878,-164.697],[-77.763,-164.697],[-78.253,-164.697],[-79.068,-164.89],[-87.47,-164.937]],\"c\":true},\"ix\":2},\"nm\":\"Path 1\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":1,\"ty\":\"sh\",\"ix\":2,\"ks\":{\"a\":0,\"k\":{\"i\":[[0.392,0.1],[0.13,-0.046],[0.245,0.309],[0.688,0],[0.395,0],[0,0],[0,0],[0,0],[0,0],[0.157,-0.468],[0,0],[0,0],[0,0],[0.589,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[-0.199,-0.496],[0,0],[0.395,0.396],[0.488,0],[0,0],[0.292,0.398],[0.492,-0.096],[0,0],[0,0],[0.491,-0.098],[0,0],[0,0],[0.395,0],[0,0],[0,0],[0,0],[0,0],[0.393,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[-0.395,0],[0,0],[-0.689,-0.198],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[-0.195,0.593],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[-0.492,0.096],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0.496,0.196],[0.392,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0.394,0],[0,-0.493],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[-0.492,0.195],[0,0],[0,0],[0,0],[0,0],[0,0],[0.788,0],[0,0],[0,0],[0.395,0],[0,0],[0,0],[0,0],[0,0],[0,0],[-0.787,-0.295],[-0.492,0],[-0.099,0.39],[0,0],[-0.391,0],[-0.393,0.195],[-0.593,0],[0,0],[-0.384,-0.084],[0,0],[0,0],[0,0],[-0.688,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[-0.296,0.394],[0,0],[-0.986,0],[0,0],[0,0.489],[0,0],[0.494,0.393],[0,0],[0,0],[0,0],[0,0],[0,0],[-0.395,0.097],[0,0],[0,0],[0,0],[0,0],[-0.392,0.392],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[-0.493,0.101],[0,0],[0,0],[0,0],[0,0],[0.39,0],[0.394,0.29],[0.79,0],[0,0],[0,0],[0,0],[0,0],[0,0],[-0.784,0],[0,0],[0,0],[-0.196,0.342],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0.198,0.395],[0,0],[0,0],[0,0]],\"o\":[[-0.149,-0.037],[-0.218,0.077],[-0.395,-0.489],[-0.687,0],[-0.394,0],[-0.589,0.489],[-1.084,-1.081],[0,0],[0,0],[-0.294,0.883],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[-0.886,-0.294],[-0.59,0.686],[0,0],[0,0],[0.591,0.591],[0,0],[0.195,0.486],[0,0],[-0.393,-0.388],[0,0],[0,0],[-0.297,-0.393],[-0.491,0.101],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0.393,0],[0,0],[0.688,0.198],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0.196,-0.588],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0.494,-0.097],[0,0],[0,0],[0,0],[-0.883,0.588],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[-0.785,0.396],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[-0.491,-0.196],[-0.395,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[-0.392,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0.49,-0.197],[0,0],[0,0],[0,0],[0,0],[0,0],[-0.785,0],[0,0],[0,0],[-0.394,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0.786,0.296],[0.494,0],[0.096,-0.395],[0,0],[0.397,0],[0.393,-0.196],[0,0],[0.193,0.491],[1.376,0.293],[0,0],[0,0],[0,0],[0.688,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0.293,-0.393],[0,0],[0,0],[0.59,0],[0,-0.492],[0,0],[-0.49,-0.398],[0,0],[0,0],[0,0],[0,0],[0,0],[0.393,-0.099],[0,0],[0,0],[0,0],[0,0],[0.391,-0.392],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0.491,-0.097],[0,0],[0,0],[0,0],[0,0],[-0.394,0],[-0.392,-0.297],[-0.787,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0.79,0],[0,0],[0,0],[0.392,-0.688],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[-0.196,-0.394],[0,0],[-0.979,-0.494],[0,0]],\"v\":[[-156.114,-161.45],[-156.528,-161.394],[-157.197,-161.549],[-158.081,-162.334],[-159.361,-162.235],[-159.656,-161.154],[-161.522,-161.253],[-163.291,-162.334],[-165.16,-162.432],[-166.734,-162.432],[-166.538,-160.564],[-167.421,-160.564],[-168.6,-161.253],[-169.485,-161.646],[-171.256,-161.646],[-171.351,-160.86],[-172.926,-160.86],[-175.482,-161.054],[-177.35,-160.268],[-178.234,-159.091],[-175.976,-159.091],[-173.124,-158.01],[-172.434,-157.906],[-171.845,-156.729],[-173.812,-156.93],[-175.187,-157.812],[-177.35,-157.812],[-178.824,-158.304],[-179.809,-159.387],[-181.382,-159.188],[-182.564,-159.877],[-183.446,-159.877],[-184.431,-159.679],[-184.627,-158.794],[-184.627,-157.713],[-186,-157.713],[-187.674,-158.205],[-188.556,-158.205],[-189.442,-157.42],[-190.328,-157.028],[-191.312,-157.028],[-192.39,-157.028],[-192.588,-156.24],[-194.556,-156.336],[-194.656,-155.453],[-193.376,-155.256],[-192.685,-155.059],[-192.784,-153.878],[-191.212,-153.585],[-190.328,-152.503],[-188.656,-152.406],[-187.181,-151.913],[-185.511,-151.715],[-184.525,-152.896],[-183.936,-153.585],[-181.969,-153.781],[-183.248,-152.896],[-184.135,-151.715],[-183.936,-150.536],[-181.086,-150.638],[-178.728,-150.638],[-177.843,-151.812],[-175.976,-151.617],[-173.516,-151.617],[-172.04,-152.601],[-171.058,-153.485],[-170.863,-154.174],[-169.584,-154.174],[-167.815,-154.86],[-166.144,-154.664],[-167.323,-154.568],[-168.8,-153.781],[-170.468,-152.702],[-168.309,-152.799],[-167.323,-152.601],[-166.439,-152.503],[-167.028,-151.715],[-169.191,-151.715],[-170.959,-151.617],[-172.04,-151.226],[-173.027,-151.13],[-175.286,-150.536],[-176.464,-150.536],[-177.644,-150.341],[-177.644,-149.356],[-176.367,-149.161],[-175.482,-148.573],[-174.99,-147.589],[-172.336,-147.193],[-173.516,-146.997],[-175.09,-147.096],[-176.96,-148.278],[-179.513,-149.653],[-181.481,-149.752],[-184.431,-150.045],[-184.627,-148.966],[-183.543,-148.081],[-182.07,-146.903],[-179.513,-145.327],[-177.843,-144.637],[-175.187,-144.44],[-175.876,-143.755],[-176.858,-143.359],[-176.858,-142.183],[-179.317,-143.852],[-180.99,-144.148],[-183.052,-143.951],[-184.525,-143.657],[-186,-142.966],[-186,-141.887],[-185.906,-141.099],[-184.431,-140.804],[-182.266,-140.804],[-180.496,-141.002],[-182.167,-140.115],[-181.676,-139.036],[-180.202,-138.84],[-179.121,-139.132],[-177.057,-140.507],[-177.644,-139.234],[-179.218,-138.15],[-180.99,-138.051],[-183.739,-138.937],[-185.807,-139.92],[-188.068,-139.821],[-187.577,-138.739],[-187.28,-137.167],[-189.148,-136.872],[-189.935,-135.789],[-188.556,-134.317],[-186.788,-133.628],[-184.922,-134.216],[-184.232,-134.317],[-182.463,-133.921],[-181.086,-133.921],[-179.809,-134.611],[-178.631,-134.02],[-177.154,-134.02],[-176.464,-134.317],[-174.892,-134.317],[-174.99,-133.136],[-172.926,-133.239],[-171.747,-133.239],[-170.175,-133.825],[-169.388,-134.317],[-168.208,-135.398],[-168.6,-136.481],[-170.175,-135.789],[-170.665,-137.265],[-168.995,-137.562],[-168.503,-138.937],[-169.09,-140.214],[-167.914,-140.214],[-165.75,-140.115],[-164.864,-140.314],[-164.764,-141.593],[-165.651,-142.771],[-163.982,-142.771],[-162.898,-142.966],[-163.786,-144.244],[-165.358,-144.637],[-166.931,-144.935],[-168.208,-144.244],[-169.191,-143.657],[-169.584,-144.637],[-168.009,-145.036],[-167.914,-145.719],[-166.734,-146.308],[-165.259,-146.308],[-164.571,-145.523],[-162.606,-145.231],[-161.326,-145.523],[-159.853,-146.508],[-161.622,-147.786],[-159.656,-147.882],[-158.867,-146.997],[-157.294,-147.096],[-155.43,-147.684],[-156.214,-149.063],[-157.491,-149.554],[-155.232,-149.554],[-153.856,-149.554],[-153.068,-150.437],[-151.396,-150.934],[-149.727,-152.011],[-147.562,-152.702],[-145.792,-153.979],[-144.023,-154.078],[-143.042,-154.664],[-143.826,-155.653],[-145.103,-155.159],[-147.17,-154.664],[-148.055,-155.059],[-150.512,-154.961],[-150.117,-155.846],[-148.249,-156.24],[-146.087,-156.24],[-143.924,-156.24],[-141.862,-156.729],[-139.893,-157.318],[-137.732,-157.42],[-137.141,-158.5],[-137.536,-159.877],[-139.206,-159.484],[-140.682,-159.679],[-141.072,-160.666],[-143.042,-161.646],[-144.516,-161.253],[-146.581,-161.253],[-148.842,-160.666],[-148.743,-161.549],[-150.414,-161.646],[-151.889,-161.549],[-152.38,-162.235],[-153.856,-162.334],[-155.819,-162.828]],\"c\":true},\"ix\":2},\"nm\":\"Path 2\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":2,\"ty\":\"sh\",\"ix\":3,\"ks\":{\"a\":0,\"k\":{\"i\":[[0.049,-0.009],[0.172,-0.022],[0.119,0],[0,0],[0.127,0],[0.146,-0.077],[0.02,-0.175],[0,-0.146],[0,-0.151],[0,-0.196],[0.344,0.024],[0.145,0],[0,0],[0,0],[0.07,0.011],[0.085,-0.043],[0,-0.198],[0.025,-0.123],[0,-0.171],[0,-0.173],[0,0],[0.61,-0.048],[0.173,-0.022],[0.124,-0.021],[0.152,-0.024],[0.069,0.007],[0.06,-0.012],[0.149,-0.072],[0.148,-0.147],[0,0],[0,0],[-0.049,0.148],[-0.074,0.124],[-0.122,0.072],[-0.16,-0.032],[-0.112,0.02],[-0.125,0.027],[-0.174,0.055],[-0.134,-0.016],[-0.129,0.027],[-0.17,0.029],[-0.118,0],[-0.27,0.099],[-0.124,0.05],[-0.172,0],[-0.301,-0.072],[-0.122,-0.024],[-0.195,0],[0,0],[0.023,0.121],[0,0.319],[-0.343,0],[-0.2,-0.097],[-0.099,-0.07],[-0.123,-0.125],[-0.416,0],[-0.414,0.024],[0,0.198],[0,0.146],[0,0],[0.343,-0.027],[0.148,0],[0.293,0],[0.147,0.024],[-0.171,0.199],[-0.176,0.175],[-0.148,0.196],[0,0],[0.083,0]],\"o\":[[-0.197,0.024],[-0.122,0],[0,0],[-0.122,0],[-0.17,0.024],[-0.15,0.072],[-0.027,0.124],[0,0.147],[0,0.195],[-0.345,0],[-0.147,0],[0,0],[0,0],[-0.072,0.011],[-0.098,-0.015],[-0.147,0.07],[0,0.146],[-0.05,0.148],[0,0.173],[0,0],[-0.614,0.078],[-0.198,0],[-0.125,0.027],[-0.145,0.028],[-0.061,0.014],[-0.066,-0.006],[-0.147,0.028],[-0.194,0.102],[0,0],[0,0],[0.099,-0.099],[0.05,-0.122],[0.075,-0.125],[0.131,-0.087],[0.114,0.022],[0.12,-0.025],[0.172,-0.047],[0.138,-0.035],[0.124,0.015],[0.175,-0.02],[0.123,-0.021],[0.275,-0.021],[0.12,-0.022],[0.148,-0.071],[0.323,0],[0.12,0.028],[0.178,0.05],[0,0],[-0.022,-0.148],[-0.075,-0.296],[0,-0.345],[0.244,0],[0.12,0.049],[0.122,0.078],[0.293,0.294],[0.419,0],[0,-0.196],[0,-0.146],[0,0],[-0.344,0],[-0.149,0],[-0.291,0.024],[-0.148,0],[0.147,-0.223],[0.148,-0.172],[0.169,-0.169],[0,0],[-0.098,0],[-0.042,0]],\"v\":[[87.005,-155.256],[86.514,-155.159],[86.125,-155.059],[85.725,-155.059],[85.333,-154.961],[84.844,-154.86],[84.451,-154.568],[84.451,-154.174],[84.548,-153.781],[84.451,-153.289],[83.565,-153.289],[83.172,-153.386],[82.678,-153.386],[82.286,-153.386],[82.074,-153.398],[81.796,-153.386],[81.504,-152.994],[81.599,-152.601],[81.203,-152.406],[81.402,-152.011],[81.402,-151.325],[79.831,-151.226],[79.337,-151.13],[78.941,-151.031],[78.548,-150.833],[78.349,-150.833],[78.156,-150.833],[77.763,-150.638],[77.37,-150.244],[76.98,-149.851],[77.37,-149.554],[77.763,-149.752],[77.763,-150.144],[77.96,-150.536],[78.406,-150.56],[78.749,-150.536],[79.141,-150.638],[79.536,-150.934],[79.943,-150.937],[80.32,-150.934],[80.712,-151.226],[81.103,-151.226],[81.893,-151.325],[82.286,-151.424],[82.48,-151.812],[83.272,-151.523],[83.661,-151.424],[84.178,-151.325],[84.941,-151.325],[84.941,-151.715],[84.645,-152.503],[85.432,-152.994],[86.023,-152.799],[86.415,-152.702],[86.611,-152.305],[87.618,-151.913],[88.674,-152.011],[88.773,-152.503],[88.674,-152.896],[88.674,-153.386],[87.793,-153.386],[87.397,-153.289],[86.611,-153.289],[86.22,-153.386],[86.611,-153.979],[87.105,-154.374],[87.497,-154.86],[87.397,-155.256],[87.139,-155.268]],\"c\":true},\"ix\":2},\"nm\":\"Path 3\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":3,\"ty\":\"sh\",\"ix\":4,\"ks\":{\"a\":0,\"k\":{\"i\":[[-0.098,-0.586],[0,0],[-0.099,-0.492],[0,0],[0,0],[0,0],[-0.492,-0.196],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0.394,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0.39],[-0.488,-0.195],[0,0],[0,0],[0,0],[0.884,0.394],[0,0],[0,0],[0,0],[0.395,0.102],[0,0.392],[0.394,0.196],[0.883,0.29],[0,0],[0,0],[0.394,0.093],[0,0]],\"o\":[[0,0],[0.589,0],[0.095,0.49],[0,0],[0,0],[0,0],[0.491,0.199],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0.491,0],[0,0],[0,0],[0,0],[0,-0.392],[0.494,0.197],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[-0.39,-0.095],[0,-0.396],[-0.392,-0.197],[-0.886,-0.299],[0,0],[0,0],[-0.392,-0.101],[0,0]],\"v\":[[-199.274,-154.078],[-197.801,-154.078],[-197.307,-153.386],[-198.484,-153.09],[-200.355,-153.09],[-201.14,-152.799],[-199.863,-152.011],[-199.766,-151.13],[-201.338,-151.226],[-202.42,-151.031],[-202.126,-149.752],[-203.11,-149.161],[-203.11,-147.982],[-201.832,-147.882],[-201.832,-146.607],[-200.257,-145.818],[-198.879,-146.011],[-197.503,-146.407],[-195.638,-146.508],[-194.753,-145.523],[-196.424,-145.036],[-198.094,-145.036],[-199.274,-144.44],[-197.604,-143.557],[-196.717,-142.183],[-193.866,-141.593],[-191.705,-141.887],[-189.735,-141.394],[-189.05,-142.183],[-188.165,-142.183],[-187.97,-143.166],[-187.773,-144.244],[-186.298,-143.657],[-185.807,-144.44],[-184.037,-144.344],[-182.758,-145.231],[-182.758,-146.703],[-184.724,-147.291],[-186,-147.684],[-186.592,-148.669],[-186.592,-149.458],[-187.773,-150.144],[-188.758,-149.458],[-189.442,-150.437],[-190.426,-151.325],[-192.49,-151.812],[-193.573,-152.799],[-194.556,-153.682],[-196.228,-154.86],[-197.307,-154.961]],\"c\":true},\"ix\":2},\"nm\":\"Path 4\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":4,\"ty\":\"sh\",\"ix\":5,\"ks\":{\"a\":0,\"k\":{\"i\":[[0.244,0],[0.17,0.048],[0.123,0.024],[0,0],[0,0],[-0.172,-0.074],[-0.145,-0.07],[-0.2,0],[0,0],[-0.194,0.122],[-0.023,0.15],[0,0.15],[0.027,0.148],[0.075,0.122],[0.248,0]],\"o\":[[-0.196,0],[-0.128,-0.025],[0,0],[0,0],[0.197,0.022],[0.172,0.073],[0.149,0.078],[0,0],[0.246,0],[0.124,-0.073],[0.028,-0.122],[0,-0.17],[-0.023,-0.124],[-0.123,-0.195],[-0.243,0]],\"v\":[[148.352,-153.979],[147.863,-154.174],[147.464,-154.271],[147.17,-153.878],[147.17,-153.09],[147.662,-152.994],[148.055,-152.702],[148.451,-152.406],[148.646,-152.406],[149.235,-152.601],[149.628,-152.799],[149.727,-153.192],[149.53,-153.585],[149.53,-153.979],[148.941,-154.271]],\"c\":true},\"ix\":2},\"nm\":\"Path 5\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":5,\"ty\":\"sh\",\"ix\":6,\"ks\":{\"a\":0,\"k\":{\"i\":[[0.274,-0.124],[0.121,-0.049],[0.171,-0.073],[0.165,0],[0.14,-0.033],[0.149,-0.05],[0.297,-0.023],[0.348,0],[0.152,0],[0.028,-0.296],[0.075,-0.148],[0.195,-0.047],[0.133,0.012],[0.131,-0.022],[0.149,-0.051],[0.171,-0.072],[0.07,-0.098],[-0.123,-0.074],[-0.241,0],[-0.295,0],[0,0],[-0.148,-0.121],[-0.169,-0.097],[-0.149,0],[-0.098,-0.046],[-0.146,-0.05],[-0.225,0],[-0.196,0.026],[-0.151,0.072],[-0.197,0.049],[-0.125,0],[-0.116,-0.009],[-0.149,0.027],[-0.125,0.049],[-0.171,0.051],[-0.294,0],[-0.611,0.049],[0,0.197],[-0.146,0.25],[-0.15,0.123],[-0.069,-0.018],[-0.063,0.038],[-0.148,0.101],[-0.123,0.076],[0.123,0.073],[0.024,0.025],[0,0],[0.248,0.296],[0.124,0.071],[0.083,-0.016],[0.048,0.009],[0.174,0]],\"o\":[[-0.121,0.048],[-0.147,0.075],[-0.166,0.07],[-0.127,-0.001],[-0.147,0.022],[-0.292,0.097],[-0.315,0.049],[-0.146,0],[0,0.296],[0,0.172],[-0.098,0.196],[-0.14,0.029],[-0.125,-0.013],[-0.147,0.028],[-0.171,0.075],[-0.125,0.054],[0.07,0.149],[0.2,0.15],[0.302,0],[0,0],[0.221,0.029],[0.127,0.102],[0.121,0.052],[0.12,0],[0.147,0.078],[0.195,0.054],[0.22,0],[0.175,-0.022],[0.173,-0.103],[0.126,-0.026],[0.12,-0.012],[0.142,0.01],[0.123,-0.026],[0.171,-0.075],[0.269,-0.099],[0.614,0],[0.026,-0.195],[0.029,-0.297],[0.075,-0.145],[0.05,-0.035],[0.071,0.018],[0.146,-0.094],[0.123,-0.074],[-0.151,-0.073],[-0.025,0],[0,0],[0,-0.394],[-0.098,-0.124],[-0.058,-0.045],[-0.058,0.011],[-0.148,-0.026],[-0.319,0]],\"v\":[[156.999,-153.682],[156.61,-153.585],[156.314,-153.192],[155.826,-153.122],[155.428,-153.09],[155.035,-152.896],[154.246,-152.601],[153.365,-152.601],[152.97,-152.503],[152.97,-151.715],[152.774,-151.325],[152.383,-150.934],[151.978,-150.932],[151.595,-150.934],[151.199,-150.734],[150.712,-150.638],[150.615,-150.244],[150.808,-149.851],[151.394,-149.653],[152.184,-149.851],[152.383,-149.851],[152.774,-149.458],[153.069,-149.063],[153.465,-148.966],[153.758,-148.769],[154.152,-148.573],[154.743,-148.573],[155.331,-148.573],[155.723,-148.864],[156.116,-149.257],[156.512,-149.257],[156.863,-149.252],[157.296,-149.257],[157.691,-149.356],[157.986,-149.752],[158.772,-149.752],[160.344,-149.851],[160.441,-150.341],[160.54,-151.13],[160.837,-151.523],[161.022,-151.521],[161.23,-151.523],[161.525,-151.913],[161.92,-152.111],[161.525,-152.305],[161.525,-152.406],[158.969,-152.406],[158.772,-153.386],[158.576,-153.781],[158.35,-153.792],[158.184,-153.781],[157.788,-153.979]],\"c\":true},\"ix\":2},\"nm\":\"Path 6\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":6,\"ty\":\"sh\",\"ix\":7,\"ks\":{\"a\":0,\"k\":{\"i\":[[0.067,-0.017],[0.123,-0.049],[0.124,-0.048],[0.124,0],[0.184,0.018],[0.221,-0.036],[0.122,-0.027],[0.174,-0.073],[0.2,0],[0.173,0.053],[0,0],[-0.321,-0.196],[-0.148,-0.074],[-0.394,0],[-0.194,0.05],[-0.147,0.078],[-0.121,0.099],[-0.099,0.12],[-0.145,0.098],[-0.121,0.049],[-0.147,0.049],[-0.149,0.049],[-0.264,0.048],[0,0],[0.144,0.022],[0,0],[0.147,0],[0.217,0],[0.126,0]],\"o\":[[-0.121,0.025],[-0.121,0.05],[-0.124,0.05],[-0.222,0.038],[-0.184,-0.019],[-0.124,0.027],[-0.175,0.048],[-0.171,0.075],[-0.195,0],[0,0],[0.273,0.27],[0.148,0.094],[0.319,0.196],[0.219,0],[0.148,-0.048],[0.147,-0.074],[0.123,-0.094],[0.097,-0.122],[0.101,-0.075],[0.148,-0.074],[0.145,-0.048],[0.269,-0.097],[0,0],[-0.147,-0.051],[0,0],[-0.121,0],[-0.221,-0.027],[-0.149,0],[-0.062,0]],\"v\":[[99.096,-153.682],[98.702,-153.585],[98.605,-153.192],[98.214,-153.192],[97.622,-153.192],[97.034,-153.192],[96.642,-153.09],[96.243,-152.799],[95.852,-152.503],[95.359,-152.702],[95.557,-152.305],[96.346,-151.617],[96.74,-151.325],[97.721,-151.031],[98.309,-151.13],[98.702,-151.325],[99.096,-151.523],[99.297,-151.913],[99.587,-152.305],[99.98,-152.406],[100.375,-152.601],[100.77,-152.799],[101.553,-152.994],[101.454,-153.386],[101.065,-153.585],[100.669,-153.585],[100.277,-153.682],[99.689,-153.682],[99.289,-153.705]],\"c\":true},\"ix\":2},\"nm\":\"Path 7\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":7,\"ty\":\"sh\",\"ix\":8,\"ks\":{\"a\":0,\"k\":{\"i\":[[0.101,-0.05],[0.121,-0.102],[0.198,-0.097],[0.125,-0.048],[0.145,-0.048],[0,0],[0.024,-0.125],[0.075,-0.098],[0.122,-0.078],[0.245,-0.197],[0.071,-0.117],[0,0],[-0.167,-0.076],[-0.221,0],[0,0],[-0.169,0.054],[-0.222,0],[0,0],[-0.197,0],[-0.561,0.023],[-0.147,0.027],[0.102,0.175],[0.051,0.175],[0.051,0.12],[0.074,0.322],[0,0.293],[0,0]],\"o\":[[-0.144,0.099],[-0.147,0.12],[-0.123,0.053],[-0.148,0.073],[0,0],[0,0.15],[-0.022,0.121],[-0.071,0.101],[-0.268,0.172],[-0.125,0.099],[0,0],[0.145,0.075],[0.198,0.096],[0,0],[0.196,-0.024],[0.199,-0.072],[0,0],[0.196,0],[0.566,0.048],[0.173,0],[-0.122,-0.148],[-0.074,-0.145],[-0.024,-0.118],[-0.124,-0.294],[-0.072,-0.268],[0,0],[-0.122,0.05]],\"v\":[[92.508,-153.485],[92.217,-153.09],[91.823,-152.702],[91.427,-152.601],[91.039,-152.406],[90.544,-152.702],[90.544,-152.305],[90.544,-151.913],[90.152,-151.812],[89.365,-151.325],[89.169,-150.934],[89.561,-150.734],[89.954,-150.437],[90.544,-150.341],[90.742,-150.341],[91.133,-150.638],[91.723,-150.638],[92.311,-150.638],[92.806,-150.536],[94.279,-150.536],[94.674,-150.685],[94.279,-151.13],[93.984,-151.523],[93.984,-151.913],[93.493,-152.702],[93.493,-153.485],[92.902,-153.585]],\"c\":true},\"ix\":2},\"nm\":\"Path 8\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":8,\"ty\":\"sh\",\"ix\":9,\"ks\":{\"a\":0,\"k\":{\"i\":[[0.147,0],[0.217,-0.17],[0.073,-0.122],[0.123,-0.146],[0.194,-0.073],[0.465,0],[0.269,-0.053],[0.145,-0.049],[0.15,-0.031],[0,0],[0.199,0.05],[0.123,0.024],[0.176,0.05],[0.101,-0.175],[0.124,-0.022],[0.169,0],[0.171,0.05],[0.124,0.028],[0.322,0],[0,0],[-0.147,-0.296],[-0.419,0],[-0.296,0.099],[-0.122,0.027],[-0.172,0.049],[-0.148,0.028],[-0.314,0],[-0.291,-0.021],[-0.146,0],[-0.148,0],[0,0],[0.197,-0.025],[0.342,0],[0,0],[-0.096,-0.128],[-0.199,-0.1],[0,0],[-0.467,0],[-0.271,0.099],[-0.097,0.147],[-0.027,0.247],[0.023,0.293],[0,0],[-0.445,0],[-0.167,0],[0,0],[-0.223,0.099],[-0.149,0.099],[-0.125,0.095],[0,0.17],[0,0],[0.416,0],[0,0],[0.172,0]],\"o\":[[-0.295,0],[-0.099,0.075],[-0.099,0.15],[-0.121,0.147],[-0.418,0.15],[-0.297,0],[-0.148,0.023],[-0.149,0.05],[0,0],[-0.219,0],[-0.121,-0.026],[-0.17,-0.049],[-0.099,0.172],[-0.072,0.121],[-0.146,0.051],[-0.199,0],[-0.123,-0.024],[-0.295,-0.072],[0,0],[0.024,0.342],[0.171,0.369],[0.32,0],[0.124,-0.025],[0.172,-0.047],[0.149,-0.046],[0.294,-0.049],[0.295,0],[0.149,0],[0.151,0],[0,0],[-0.147,0.147],[-0.32,0.052],[0,0],[0,0.17],[0.147,0.172],[0,0],[0.415,0.196],[0.295,0],[0.172,-0.072],[0.151,-0.199],[0.024,-0.291],[0,0],[0.441,-0.024],[0.169,0],[0,0],[0.273,0],[0.174,-0.073],[0.12,-0.102],[0.12,-0.1],[0,0],[-0.416,-0.098],[0,0],[-0.149,-0.024],[-0.151,0]],\"v\":[[72.456,-153.289],[71.671,-153.192],[71.671,-152.799],[71.276,-152.503],[70.883,-152.111],[69.507,-152.208],[68.72,-152.208],[68.329,-152.011],[67.932,-151.812],[67.734,-151.812],[67.145,-151.913],[66.753,-152.011],[66.262,-152.208],[65.965,-151.715],[65.868,-151.325],[65.475,-151.13],[65.083,-151.424],[64.69,-151.523],[63.876,-151.715],[63.116,-151.715],[63.215,-150.833],[64.1,-150.244],[64.885,-150.536],[65.277,-150.638],[65.768,-150.833],[66.163,-151.031],[66.971,-151.13],[67.734,-151.031],[68.126,-150.934],[68.526,-151.031],[68.621,-150.437],[68.23,-150.045],[67.344,-150.045],[67.344,-149.234],[67.539,-148.864],[68.03,-148.473],[68.427,-148.278],[69.556,-147.882],[70.293,-148.081],[70.682,-148.374],[70.98,-148.966],[70.883,-149.752],[70.883,-150.144],[72.039,-150.244],[72.456,-150.144],[72.676,-150.144],[73.341,-150.244],[73.733,-150.536],[74.126,-150.734],[74.323,-151.151],[74.323,-151.913],[73.243,-152.011],[73.243,-153.192],[72.849,-153.386]],\"c\":true},\"ix\":2},\"nm\":\"Path 9\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":9,\"ty\":\"sh\",\"ix\":10,\"ks\":{\"a\":0,\"k\":{\"i\":[[0.121,-0.072],[0.22,0],[0,0],[0.171,0],[0,0],[0.025,-0.394],[0.074,-0.269],[0.078,-0.145],[0,0],[0.268,0.345],[0.149,0.097],[0.151,0.05],[0.172,0],[1.255,0],[0.174,-0.026],[0.122,-0.047],[0,-0.297],[-0.1,-0.224],[-0.169,-0.05],[-0.148,-0.024],[0,0],[-0.122,-0.024],[-0.245,0],[-0.195,0.05],[-0.242,0],[-0.195,-0.049],[-0.124,-0.073],[-0.146,-0.122],[-0.047,-0.125],[0,0],[0,0],[-0.268,-0.101],[-0.342,0],[0,0],[-0.171,0],[-0.27,-0.102],[-0.151,-0.097],[-0.172,-0.024],[-0.121,-0.023],[-0.22,0],[-0.368,0.123],[-0.148,0.073],[-0.146,0.097],[-0.247,0],[-0.513,0],[-0.32,0.2],[-0.071,0.121],[-0.1,0.27],[-0.297,0.102],[-0.121,0],[-0.169,0.048],[-0.15,0.075],[0,0],[0.318,0.151],[0.316,0],[0.147,-0.027],[0.339,0],[0,0],[0.022,0.196],[0.072,0.148],[0.172,0.171],[0.095,0.146],[0.098,-0.051],[0.123,-0.099],[0.145,-0.122],[0.391,0],[0.145,0],[0.174,0.049],[0,0],[0,0],[0.027,0.148]],\"o\":[[-0.171,0.095],[0,0],[-0.174,0.025],[0,0],[-0.047,0.392],[0,0.296],[-0.047,0.174],[0,0],[0,-0.466],[-0.097,-0.149],[-0.119,-0.073],[-0.146,-0.047],[-1.253,0],[-0.172,0],[-0.147,0.027],[-0.244,0.124],[0,0.27],[0.073,0.172],[0.146,0.046],[0,0],[0.122,0],[0.222,0.049],[0.223,0],[0.222,-0.048],[0.225,0],[0.12,0.024],[0.146,0.076],[0.097,0.076],[0,0],[0,0],[0.298,0.124],[0.295,0.121],[0,0],[0.171,0],[0.296,0],[0.172,0.048],[0.146,0.099],[0.124,0.024],[0.198,0.025],[0.394,0],[0.148,-0.048],[0.172,-0.075],[0.197,-0.125],[0.515,0],[0.397,0],[0.122,-0.075],[0.144,-0.247],[0.096,-0.296],[0.118,-0.022],[0.173,-0.022],[0.172,-0.048],[0,0],[-0.246,-0.268],[-0.266,-0.124],[-0.177,0],[-0.319,0.049],[0,0],[-0.024,-0.2],[-0.024,-0.172],[-0.099,-0.196],[-0.122,-0.125],[-0.129,0.048],[-0.149,0.096],[-0.148,0.121],[-0.296,0.245],[-0.15,0],[-0.193,0],[0,0],[0,0],[-0.027,-0.147],[-0.119,0.049]],\"v\":[[22.023,-150.734],[21.632,-150.341],[21.434,-150.341],[21.016,-150.536],[19.858,-150.536],[19.76,-149.554],[19.661,-148.769],[19.366,-148.374],[18.971,-148.473],[18.777,-149.653],[18.383,-149.947],[17.99,-150.144],[17.572,-150.244],[14.378,-150.341],[13.958,-150.244],[13.568,-150.144],[13.074,-149.554],[13.174,-148.864],[13.665,-148.669],[14.057,-148.473],[14.453,-148.473],[14.845,-148.374],[15.436,-148.179],[16.023,-148.278],[16.609,-148.473],[17.206,-148.374],[17.598,-148.278],[17.99,-147.982],[18.087,-147.589],[15.138,-147.589],[15.138,-146.703],[15.927,-146.407],[16.737,-146.011],[18.852,-146.011],[19.268,-146.114],[20.056,-146.011],[20.353,-145.622],[20.842,-145.425],[21.236,-145.327],[21.824,-145.327],[22.807,-145.425],[23.202,-145.622],[23.595,-145.916],[24.087,-146.308],[25.362,-145.916],[26.348,-146.211],[26.741,-146.407],[26.741,-147.193],[27.333,-147.786],[27.721,-147.786],[28.216,-147.882],[28.609,-148.179],[29.001,-148.374],[28.312,-149.063],[27.48,-149.161],[27.036,-149.161],[26.227,-148.864],[25.464,-148.864],[25.464,-149.356],[25.267,-149.752],[24.773,-150.144],[24.484,-150.536],[24.087,-150.437],[23.792,-150.045],[23.398,-149.653],[22.516,-149.161],[22.121,-149.063],[21.725,-149.356],[22.516,-150.244],[22.516,-150.437],[22.413,-150.833]],\"c\":true},\"ix\":2},\"nm\":\"Path 10\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":10,\"ty\":\"sh\",\"ix\":11,\"ks\":{\"a\":0,\"k\":{\"i\":[[0,0],[0.319,-0.122],[0.171,-0.078],[0.171,-0.07],[0.399,-0.07],[0,0],[0,0],[0,0],[-0.096,0.197],[-0.047,0.123],[-0.071,0.095],[-0.296,-0.242],[-0.201,0],[-0.174,0],[-0.167,0.026],[0.05,0.468],[0,0],[0,0],[0.024,0.146]],\"o\":[[-0.346,0],[-0.174,0.052],[-0.172,0.072],[-0.342,0.172],[0,0],[0,0],[0,0],[0.148,-0.146],[0.051,-0.121],[0.051,-0.102],[0,0.393],[0.149,0.124],[0.164,0],[0.172,0],[0.026,-0.465],[0,0],[0,0],[0,-0.146],[0,0]],\"v\":[[85.656,-150.536],[84.844,-150.244],[84.35,-150.045],[83.956,-149.752],[82.971,-149.458],[82.971,-149.752],[82.971,-148.573],[84.743,-148.573],[85.135,-148.966],[85.135,-149.356],[85.432,-149.554],[85.629,-148.573],[86.125,-148.374],[86.514,-148.573],[86.954,-148.573],[86.954,-149.752],[88.674,-149.752],[88.674,-150.144],[88.578,-150.536]],\"c\":true},\"ix\":2},\"nm\":\"Path 11\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":11,\"ty\":\"sh\",\"ix\":12,\"ks\":{\"a\":0,\"k\":{\"i\":[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],\"o\":[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],\"v\":[[-210.578,-149.554],[-210.578,-148.374],[-209.105,-148.374],[-208.71,-147.291],[-207.533,-147.786],[-208.024,-149.161],[-209.303,-149.554]],\"c\":true},\"ix\":2},\"nm\":\"Path 12\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":12,\"ty\":\"sh\",\"ix\":13,\"ks\":{\"a\":0,\"k\":{\"i\":[[0.127,-0.027],[0.17,-0.025],[0,0],[0.126,0],[0,0],[-0.048,-0.1],[-0.121,-0.072],[-0.17,0],[-0.147,0.027],[-0.147,0.027],[-0.27,0.05],[0.024,0.118],[0.074,0.17]],\"o\":[[-0.17,0.049],[0,0],[-0.103,0],[0,0],[0.029,0.144],[0.077,0.123],[0.124,0.076],[0.171,0],[0.146,-0.023],[0.272,-0.073],[-0.022,-0.122],[-0.047,-0.175],[-0.122,0.024]],\"v\":[[89.855,-149.161],[89.365,-148.966],[88.973,-148.966],[88.674,-148.864],[88.28,-148.864],[88.28,-148.473],[88.478,-148.081],[88.921,-148.081],[89.365,-148.081],[89.757,-148.278],[90.544,-148.473],[90.544,-148.864],[90.249,-149.257]],\"c\":true},\"ix\":2},\"nm\":\"Path 13\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":13,\"ty\":\"sh\",\"ix\":14,\"ks\":{\"a\":0,\"k\":{\"i\":[[0.106,-0.016],[0.149,-0.072],[0.126,-0.073],[0.171,-0.075],[0.121,-0.023],[0.223,0.021],[0.187,-0.009],[0.121,-0.022],[0.06,0.008],[0.067,-0.026],[0.143,-0.075],[0.174,-0.076],[0.067,0.013],[0.06,-0.024],[0.12,-0.027],[0.101,-0.172],[0.072,-0.168],[0.024,-0.099],[-0.243,-0.153],[-0.074,-0.126],[-0.024,-0.124],[0,-0.145],[-0.024,-0.227],[0,0],[-0.147,-0.024],[-0.067,0.006],[-0.063,-0.012],[-0.124,-0.121],[-0.097,-0.171],[-1.007,-0.025],[-0.148,0],[0,0],[-0.271,0.025],[-0.12,0.027],[-0.273,0.149],[0,0.172],[0,0],[0.221,0.029],[0.147,0.074],[-0.099,0.268],[-0.075,0.148],[-0.095,0.148],[0,0.242],[0.119,0.246],[0.095,0.124],[0.15,0.078],[0.393,0],[0.194,-0.076],[0.124,-0.076],[0.123,-0.097],[0.175,-0.072],[0.15,0],[0.295,0],[-0.099,0.124],[-0.123,0.122],[0,0],[0.492,0],[0.193,0]],\"o\":[[-0.148,0.024],[-0.147,0.073],[-0.147,0.1],[-0.122,0.049],[-0.269,0.059],[-0.146,-0.014],[-0.144,0],[-0.057,0.012],[-0.075,-0.011],[-0.172,0.075],[-0.147,0.074],[-0.061,0.025],[-0.068,-0.011],[-0.12,0.049],[-0.201,0.072],[-0.101,0.149],[-0.027,0.099],[0.293,0.097],[0.126,0.067],[0.073,0.121],[0.022,0.123],[0,0.222],[0,0],[0.174,0],[0.06,0.012],[0.068,-0.005],[0.17,0.05],[0.144,0.148],[1.01,-0.022],[0.146,0],[0,0],[0.271,0],[0.147,0],[0.296,-0.053],[0.123,-0.072],[0,0],[-0.218,0],[-0.174,-0.021],[0.027,-0.292],[0.048,-0.153],[0.074,-0.172],[0.128,-0.195],[0,-0.299],[-0.077,-0.147],[-0.099,-0.123],[-0.317,-0.197],[-0.222,0],[-0.15,0.048],[-0.122,0.074],[-0.144,0.098],[-0.125,0.052],[-0.295,0.025],[0.074,-0.122],[0.123,-0.145],[0,0],[-0.489,0],[-0.23,0],[-0.096,0]],\"v\":[[159.658,-149.161],[159.264,-148.966],[158.868,-148.769],[158.576,-148.374],[158.184,-148.278],[157.488,-148.26],[156.999,-148.278],[156.61,-148.179],[156.433,-148.183],[156.215,-148.179],[155.822,-147.882],[155.527,-147.489],[155.331,-147.489],[155.134,-147.489],[154.743,-147.39],[154.347,-146.997],[154.053,-146.607],[154.053,-146.308],[154.837,-146.011],[155.233,-145.818],[155.233,-145.425],[155.233,-145.036],[155.331,-144.44],[158.845,-144.44],[159.264,-144.344],[159.457,-144.344],[159.658,-144.344],[159.952,-143.951],[160.246,-143.458],[162.803,-143.557],[163.196,-143.458],[163.809,-143.458],[164.473,-143.458],[164.866,-143.557],[165.654,-143.852],[165.848,-144.222],[165.848,-145.036],[165.261,-145.036],[164.866,-145.231],[164.965,-146.011],[165.162,-146.407],[165.454,-146.802],[165.848,-147.291],[165.559,-147.982],[165.36,-148.374],[165.063,-148.769],[164.081,-148.864],[163.493,-148.864],[163.098,-148.669],[162.899,-148.278],[162.507,-147.982],[162.113,-147.982],[161.329,-147.982],[161.525,-148.374],[161.92,-148.669],[161.818,-149.136],[160.566,-149.161],[159.957,-149.182]],\"c\":true},\"ix\":2},\"nm\":\"Path 14\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":14,\"ty\":\"sh\",\"ix\":15,\"ks\":{\"a\":0,\"k\":{\"i\":[[0.128,0],[0,0],[0,0],[0.049,-0.468],[-0.641,-0.074],[0,0],[-0.148,-0.101],[-0.173,-0.052],[-0.148,0],[-0.121,0.022],[-0.148,0.099],[-0.078,0.125],[0,0.145],[0,0],[0.048,0.148],[0.124,0],[0.125,0.025],[0.148,0.05],[0.17,0.05],[0.176,0.024],[0,0],[0.15,0]],\"o\":[[0,0],[0,0],[0.023,0.468],[0.636,0.071],[0,0],[0.176,0.026],[0.148,0.099],[0.122,0.022],[0.145,0],[0.172,-0.052],[0.122,-0.07],[0.068,-0.121],[0,0],[0,-0.171],[-0.146,0],[-0.121,0],[-0.148,-0.023],[-0.173,-0.048],[-0.174,-0.048],[0,0],[-0.144,0],[-0.124,0]],\"v\":[[150.116,-148.374],[149.727,-148.374],[149.384,-148.374],[149.384,-147.193],[151.008,-147.096],[151.394,-147.096],[151.793,-146.802],[151.99,-146.308],[152.383,-146.308],[152.774,-146.308],[153.168,-146.607],[153.566,-146.802],[153.566,-147.193],[153.566,-147.589],[153.365,-147.982],[152.97,-147.882],[152.577,-147.982],[152.184,-148.179],[151.696,-148.278],[151.199,-148.473],[150.808,-148.473],[150.415,-148.573]],\"c\":true},\"ix\":2},\"nm\":\"Path 15\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":15,\"ty\":\"sh\",\"ix\":16,\"ks\":{\"a\":0,\"k\":{\"i\":[[0.031,-0.012],[0.098,-0.199],[0,-0.295],[0,0],[-0.025,-0.127],[0,-0.271],[0.171,-0.196],[0.246,0],[0.149,0.172],[0.049,0.32],[0,0],[0,0.152],[0,0],[0.028,0.267],[0,0],[0.245,-0.199],[0.097,-0.125],[0.125,-0.099],[0.198,0],[0,0],[0,0],[-0.146,0.072],[-0.067,-0.011],[-0.062,0.025],[-0.172,0.072],[0,0],[0.062,0.008],[0.068,-0.026],[0.146,-0.075],[0.124,-0.076],[0.097,-0.127],[0,0],[0.171,-0.025],[0.315,-0.05],[0.148,-0.047],[-0.098,-0.269],[-0.15,-0.123],[-0.173,-0.023],[-0.221,0.02],[-0.185,-0.009],[-0.145,-0.022],[0.05,-0.124],[0.052,-0.124],[0,-0.197],[-0.068,-0.198],[-0.069,-0.144],[0,-0.219],[0.099,-0.246],[0.12,0.078],[0.097,0.124],[0.052,0.123],[0.123,0.097],[0.173,0.077],[0.147,0.052],[0.071,-0.011],[0.067,0.013],[-0.081,-0.319],[-0.03,-0.122],[-0.023,-0.121],[-0.147,-0.147],[-0.201,-0.097],[-0.367,0],[-0.177,0],[0,0.297],[0,0.146],[-0.094,0.007],[-0.168,-0.134],[-0.195,-0.247],[-0.149,-0.096],[-0.149,-0.025],[-0.295,0],[0,0],[-0.124,0.072],[-0.072,0.147],[-0.072,0.124],[-0.148,0.1],[-0.075,-0.016],[-0.058,0.022],[-0.148,0.045],[0,0.15],[0,0],[0,0],[-0.044,-0.17],[-0.02,-0.121],[-0.025,-0.295],[0,0],[0,0],[0,0],[-0.05,-0.344],[-0.024,-0.047],[0.146,-0.027],[0.345,0.022],[0,0],[0.145,0],[0.269,-0.049],[0.148,-0.052],[0.144,-0.023],[0.224,0.022],[0.217,-0.021],[0.392,-0.268],[0,-0.172],[0,0],[-0.468,-0.022],[0,0],[-0.148,0],[-0.271,0],[-0.344,0.149],[-0.29,0.148],[-0.248,0],[0,0],[-0.123,-0.048],[-0.098,-0.128],[0.178,-0.049],[0.06,0.009],[0.067,-0.027],[0.126,-0.048],[0.15,-0.096],[0.245,-0.029],[0.22,0],[0.539,-0.028],[0.124,-0.028],[0.148,-0.052],[0.074,-0.097],[0,-0.151],[-0.048,-0.122],[-0.32,-0.125],[-0.147,0],[-0.125,0.006],[-0.144,-0.01],[-0.123,-0.021],[-0.272,-0.195],[-0.101,-0.145],[-0.069,-0.128],[-0.094,-0.148],[-0.224,-0.295],[0,0],[-0.049,0.096],[-0.123,0.123],[-0.121,0.075],[-0.17,0.27],[-0.023,0.125],[-0.023,0.347],[-0.048,0.149],[-0.2,0.099],[-0.175,0],[-0.298,0],[0,0],[-0.274,0.075],[-0.269,0.172],[0.027,0.198],[0,0.152],[0,0.176],[0,0.148],[0,0.171],[0,0],[0.049,-0.197],[0,-0.342],[0,-0.149],[-0.3,-0.027],[-0.124,-0.096],[-0.027,-0.172],[0,-0.147],[0.099,-0.27],[0.122,-0.096],[0,-0.416],[0,-0.172],[0,0],[-0.442,0.268],[-0.345,0],[-0.099,-0.148],[0,-0.123],[0,-0.296],[0,0],[-0.079,0.146],[-0.048,0.12],[-0.047,0.145],[0,0],[0,0],[0,0],[0.517,0.05],[0.149,0],[0.367,0.022],[0,0.365],[0,0.146],[0,0],[0.441,0.392],[0.127,0.076],[0.102,0.099],[0.074,0.122],[0.097,0.07],[0.317,0.047],[0.122,0.047],[0.12,0.125],[0.252,0.197],[0.123,0.019],[0.147,0],[0.122,-0.028],[0.295,0],[0.272,0.073],[0.071,-0.006],[0.058,0.01],[0.152,0.075],[0,0],[0.209,0],[0.223,0.022],[0.146,0.073],[-0.047,0.126],[-0.124,0.367],[-0.027,0.119],[0,0],[0.061,0.008],[0.039,0]],\"o\":[[-0.194,0.098],[-0.123,0.243],[0,0],[0,0.145],[0.049,0.248],[0,0.272],[-0.146,0.175],[-0.246,0],[-0.196,-0.245],[0,0],[0,-0.149],[0,0],[-0.025,-0.274],[0,0],[-0.295,0.147],[-0.119,0.1],[-0.098,0.124],[-0.121,0.096],[0,0],[0,0],[0.099,-0.098],[0.061,-0.023],[0.069,0.013],[0.172,-0.076],[0,0],[-0.056,0.012],[-0.074,-0.011],[-0.171,0.075],[-0.125,0.074],[-0.124,0.072],[0,0],[-0.169,0],[-0.347,0.048],[-0.151,0.026],[0.024,0.296],[0.072,0.198],[0.144,0.121],[0.266,0.058],[0.147,-0.013],[0.149,0],[0,0.15],[-0.047,0.12],[-0.073,0.168],[0,0.223],[0.076,0.169],[0.099,0.172],[0,0.272],[-0.146,-0.07],[-0.126,-0.07],[-0.078,-0.1],[-0.072,-0.172],[-0.121,-0.097],[-0.148,-0.053],[-0.069,-0.026],[-0.059,0.009],[0.148,0.297],[0.023,0.121],[0.023,0.124],[0.072,0.198],[0.147,0.15],[0.316,0.147],[0.172,0],[-0.029,-0.292],[0,-0.15],[0.102,0.009],[0.195,-0.015],[0.244,0.197],[0.101,0.149],[0.122,0.073],[0.273,0.072],[0,0],[0.123,0],[0.149,-0.098],[0.075,-0.124],[0.075,-0.147],[0.052,-0.037],[0.067,0.014],[0.146,-0.048],[-0.025,-0.147],[0,0],[0,0],[0.095,0.145],[0.028,0.123],[0.056,0.273],[0,0],[0,0],[0,0],[0,0.344],[0,0.071],[-0.073,0.147],[-0.319,0.074],[0,0],[-0.151,0],[-0.297,0],[-0.145,0.026],[-0.148,0.046],[-0.262,0.056],[-0.177,-0.016],[-0.491,0.049],[-0.125,0.073],[0,0],[0.467,-0.096],[0,0],[0.149,0],[0.271,0.023],[0.391,0],[0.295,-0.121],[0.197,-0.099],[0,0],[0.146,0],[0.147,0.072],[-0.149,0.094],[-0.053,0.011],[-0.076,-0.01],[-0.125,0.048],[-0.169,0.052],[-0.193,0.148],[-0.222,0.027],[-0.544,-0.028],[-0.147,0],[-0.145,0.02],[-0.126,0.047],[-0.075,0.099],[0,0.145],[0.149,0.319],[0.124,0.049],[0.151,0.013],[0.121,-0.006],[0.144,0],[0.32,0.075],[0.147,0.099],[0.072,0.124],[0.097,0.145],[0.199,0.318],[0,0],[0.024,-0.122],[0.099,-0.146],[0.096,-0.097],[0.269,-0.174],[0.049,-0.096],[0.078,-0.316],[0,-0.172],[0.076,-0.196],[0.146,-0.077],[0.293,-0.024],[0,0],[0.296,0],[0.316,-0.099],[-0.075,-0.171],[0,-0.147],[0,-0.17],[0,-0.147],[0,-0.167],[0,0],[-0.025,0.22],[-0.074,0.322],[0,0.145],[0.291,0],[0.196,0],[0.122,0.1],[0.026,0.121],[0,0.296],[-0.052,0.149],[-0.293,0.273],[0,0.173],[0,0],[0.541,0],[0.27,-0.149],[0.196,0],[0.05,0.097],[0.026,0.27],[0,0],[0.123,-0.099],[0.051,-0.123],[0.07,-0.15],[0,0],[0,0],[0,0],[-0.298,-0.393],[-0.148,0],[-0.368,0],[-0.025,-0.372],[0,-0.151],[0,0],[0,-0.589],[-0.099,-0.073],[-0.121,-0.074],[-0.095,-0.098],[-0.048,-0.1],[-0.246,-0.222],[-0.125,0],[-0.172,-0.07],[-0.222,-0.22],[-0.097,-0.077],[-0.125,-0.028],[-0.148,0],[-0.271,0.045],[-0.292,0],[-0.064,-0.016],[-0.064,0.006],[-0.149,-0.03],[0,0],[-0.184,0.039],[-0.222,0],[-0.171,-0.029],[0.05,-0.123],[0.172,-0.34],[0.023,-0.127],[0,0],[-0.056,0.013],[-0.04,-0.006],[-0.034,0]],\"v\":[[8.65,-148.278],[8.258,-147.882],[8.06,-147.096],[8.06,-146.703],[8.16,-146.308],[8.456,-145.674],[8.16,-145.036],[7.57,-144.736],[6.98,-144.935],[6.686,-145.818],[6.686,-146.211],[6.587,-146.607],[6.587,-146.997],[6.484,-147.684],[5.704,-147.786],[4.915,-147.39],[4.719,-146.997],[4.324,-146.703],[3.906,-146.407],[2.654,-146.407],[2.654,-147.096],[2.85,-147.489],[3.046,-147.489],[3.245,-147.489],[3.639,-147.786],[3.54,-148.179],[3.362,-148.183],[3.143,-148.179],[2.753,-147.882],[2.359,-147.684],[2.165,-147.291],[-0.371,-147.291],[-0.784,-147.193],[-1.667,-147.096],[-2.064,-146.903],[-1.966,-146.114],[-1.572,-145.719],[-1.279,-145.327],[-0.587,-145.309],[-0.1,-145.327],[0.294,-145.231],[0.294,-144.833],[0.195,-144.44],[-0.194,-144.148],[-0.1,-143.557],[0.294,-143.262],[0.393,-142.674],[0.195,-141.985],[-0.194,-142.183],[-0.589,-142.377],[-0.689,-142.771],[-0.884,-143.262],[-1.279,-143.557],[-1.667,-143.755],[-1.875,-143.76],[-2.064,-143.755],[-1.667,-142.966],[-1.667,-142.575],[-1.572,-142.183],[-1.18,-141.789],[-0.784,-141.394],[0.122,-141.099],[0.544,-141.2],[0.493,-141.985],[0.544,-142.377],[0.837,-142.383],[1.378,-142.281],[1.671,-141.492],[2.065,-141.2],[2.458,-141.002],[3.245,-141.002],[3.639,-141.002],[4.031,-141.002],[4.324,-141.394],[4.324,-141.789],[4.621,-142.183],[4.82,-142.188],[5.014,-142.183],[5.409,-142.377],[5.307,-142.771],[5.307,-143.359],[6.098,-143.458],[6.484,-143.166],[6.484,-142.771],[6.587,-141.985],[8.06,-141.985],[8.846,-142.575],[9.242,-142.281],[9.242,-141.394],[9.438,-141.295],[9.242,-140.903],[8.355,-141.002],[7.867,-141.002],[7.474,-141.099],[6.686,-141.099],[6.293,-140.903],[5.898,-140.708],[5.198,-140.695],[4.621,-140.708],[3.443,-140.314],[3.341,-139.894],[3.341,-139.036],[4.523,-139.234],[4.915,-139.234],[5.307,-139.132],[6,-139.036],[6.98,-139.234],[7.764,-139.722],[8.355,-140.018],[8.555,-140.018],[8.945,-139.92],[9.142,-139.525],[8.846,-139.132],[8.674,-139.138],[8.456,-139.132],[8.06,-139.036],[7.764,-138.643],[7.177,-138.346],[6.587,-138.443],[5.211,-138.443],[4.816,-138.443],[4.424,-138.247],[4.031,-138.15],[3.934,-137.757],[4.031,-137.364],[4.719,-136.675],[5.112,-136.675],[5.513,-136.674],[5.898,-136.675],[6.293,-136.58],[7.079,-136.185],[7.474,-135.891],[7.667,-135.494],[7.961,-135.102],[8.555,-134.317],[8.945,-134.416],[8.945,-134.808],[9.242,-135.201],[9.634,-135.398],[10.421,-135.891],[10.518,-136.284],[10.518,-137.167],[10.715,-137.562],[11.111,-137.953],[11.504,-138.15],[12.241,-138.15],[12.241,-140.115],[12.98,-140.115],[13.764,-140.607],[13.469,-141.002],[13.516,-141.372],[13.469,-141.789],[13.568,-142.183],[13.516,-142.622],[16.319,-142.622],[16.319,-142.083],[16.023,-141.271],[16.124,-140.903],[16.91,-140.903],[17.402,-140.708],[17.797,-140.411],[17.797,-140.018],[17.698,-139.234],[17.303,-139.036],[16.714,-138.127],[16.811,-137.658],[17.672,-137.658],[18.876,-138.346],[19.661,-138.739],[20.056,-138.443],[20.056,-138.051],[20.056,-137.265],[21.137,-137.265],[21.533,-137.463],[21.632,-137.854],[21.824,-138.247],[24.087,-138.247],[24.876,-138.443],[24.973,-138.84],[23.888,-139.624],[23.495,-139.525],[22.561,-139.575],[22.516,-140.507],[22.561,-140.903],[20.056,-140.903],[19.76,-142.377],[19.366,-142.477],[18.971,-142.674],[18.777,-143.065],[18.681,-143.458],[17.797,-143.657],[17.402,-143.657],[17.01,-143.951],[16.609,-144.736],[16.221,-144.833],[15.828,-144.935],[15.436,-144.833],[14.794,-144.44],[14.057,-144.637],[13.85,-144.64],[13.665,-144.637],[13.344,-144.935],[13.344,-145.909],[12.781,-145.916],[12.19,-145.916],[11.797,-146.114],[11.893,-146.508],[12.487,-147.291],[12.487,-147.684],[9.044,-148.278],[8.867,-148.281],[8.747,-148.294]],\"c\":true},\"ix\":2},\"nm\":\"Path 16\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":16,\"ty\":\"sh\",\"ix\":17,\"ks\":{\"a\":0,\"k\":{\"i\":[[0,0],[0.171,-0.049],[0.174,-0.076],[0.123,-0.075],[0.125,-0.098],[0.095,-0.146],[0.075,-0.149],[0.074,-0.123],[0.124,-0.099],[0.073,0.018],[0.048,-0.036],[0.097,-0.146],[0,-0.126],[0.097,-0.269],[0.072,-0.148],[0.12,-0.073],[0.149,-0.073],[0.073,-0.122],[0.051,-0.172],[0.022,-0.196],[0,-0.199],[-0.245,0],[-0.321,0.273],[-0.146,0.148],[-0.199,0.073],[-0.122,0.027],[-0.196,0],[-0.148,-0.025],[0,0],[-0.173,0.073],[-0.148,0.024],[-0.147,0],[-0.292,0],[-0.146,0.024],[-0.248,0.026],[-0.395,0],[-0.194,0.17],[-0.045,0.147],[0,0.146],[0,0.174],[0,0],[0,0],[0.046,0.32],[0.046,0.098],[0.148,0.069],[0.127,0.026],[0.491,0],[0.146,-0.026],[0.124,-0.096],[0.221,0],[0,0],[0.15,0.073],[-0.122,0.15],[-0.098,0.17],[-0.026,0.121],[0.122,0.049],[0.124,0.049],[0.22,0]],\"o\":[[-0.195,0],[-0.176,0.048],[-0.123,0.049],[-0.149,0.075],[-0.124,0.098],[-0.075,0.125],[-0.05,0.12],[-0.072,0.148],[-0.051,0.038],[-0.073,-0.019],[-0.146,0.099],[-0.077,0.127],[-0.025,0.272],[-0.05,0.145],[-0.075,0.147],[-0.152,0.098],[-0.118,0.075],[-0.095,0.149],[-0.051,0.17],[-0.025,0.197],[0.219,0.097],[0.445,0],[0.147,-0.124],[0.147,-0.149],[0.124,-0.053],[0.174,-0.027],[0.172,0],[0,0],[0.194,0],[0.144,-0.049],[0.121,-0.028],[0.294,-0.028],[0.148,0],[0.249,-0.028],[0.393,-0.046],[0.293,0],[0.122,-0.101],[0.053,-0.119],[0,-0.171],[0,0],[0,0],[0,-0.344],[0,-0.124],[-0.079,-0.126],[-0.124,-0.053],[-0.461,-0.121],[-0.174,0],[-0.148,0.026],[-0.147,0.12],[0,0],[-0.197,0],[0.15,-0.15],[0.122,-0.145],[0.049,-0.122],[-0.127,-0.024],[-0.122,-0.048],[-0.196,-0.076],[0,0]],\"v\":[[170.175,-146.308],[169.785,-146.011],[169.29,-145.916],[168.897,-145.818],[168.602,-145.425],[168.212,-145.131],[168.012,-144.736],[167.915,-144.344],[167.719,-143.951],[167.52,-143.95],[167.324,-143.951],[166.933,-143.657],[166.933,-143.262],[166.933,-142.477],[166.735,-142.083],[166.342,-141.887],[165.848,-141.688],[165.454,-141.492],[165.162,-141.099],[165.162,-140.607],[165.162,-140.115],[165.947,-139.432],[166.933,-140.018],[167.324,-140.411],[167.719,-140.804],[168.111,-140.903],[168.602,-141.002],[168.996,-140.804],[171.136,-140.804],[171.553,-141.099],[171.947,-141.295],[172.339,-141.295],[173.124,-141.295],[173.517,-141.295],[174.11,-141.593],[175.094,-141.492],[175.876,-141.688],[176.072,-142.083],[176.171,-142.45],[176.072,-142.87],[176.072,-143.359],[174.405,-143.359],[174.405,-144.244],[174.405,-144.637],[174.009,-144.833],[173.613,-144.935],[172.389,-145.131],[171.947,-145.131],[171.749,-144.736],[171.358,-144.344],[171.158,-144.344],[170.764,-144.637],[171.158,-145.036],[171.553,-145.327],[171.553,-145.719],[171.158,-145.818],[170.764,-145.916],[170.373,-146.308]],\"c\":true},\"ix\":2},\"nm\":\"Path 17\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":17,\"ty\":\"sh\",\"ix\":18,\"ks\":{\"a\":0,\"k\":{\"i\":[[-0.012,-0.034],[0,0]],\"o\":[[0,0],[-0.018,0.008]],\"v\":[[13.344,-146.041],[13.344,-146.114]],\"c\":true},\"ix\":2},\"nm\":\"Path 18\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":18,\"ty\":\"sh\",\"ix\":19,\"ks\":{\"a\":0,\"k\":{\"i\":[[0,0],[-0.008,0.002],[0.02,0.057]],\"o\":[[0.009,-0.002],[0.032,0],[0,0]],\"v\":[[13.344,-145.909],[13.368,-145.916],[13.344,-146.041]],\"c\":true},\"ix\":2},\"nm\":\"Path 19\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":19,\"ty\":\"sh\",\"ix\":20,\"ks\":{\"a\":0,\"k\":{\"i\":[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],\"o\":[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],\"v\":[[-217.758,-145.818],[-220.706,-145.231],[-220.02,-144.244],[-218.935,-144.344],[-217.855,-143.852],[-217.559,-142.674],[-219.231,-142.674],[-218.642,-141.593],[-217.559,-141.688],[-216.774,-141.002],[-215.693,-141.492],[-214.709,-141.394],[-212.35,-141.2],[-210.578,-139.722],[-208.807,-139.33],[-208.318,-140.214],[-208.613,-141.394],[-209.698,-142.183],[-210.186,-143.359],[-211.659,-143.951],[-212.843,-144.637],[-214.019,-144.44],[-215.102,-145.231],[-216.58,-146.011]],\"c\":true},\"ix\":2},\"nm\":\"Path 20\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":20,\"ty\":\"sh\",\"ix\":21,\"ks\":{\"a\":0,\"k\":{\"i\":[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],\"o\":[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],\"v\":[[-206.844,-143.359],[-206.056,-142.281],[-205.464,-140.507],[-203.699,-140.214],[-202.027,-140.411],[-200.454,-140.708],[-200.061,-141.492],[-201.73,-142.674],[-204.091,-142.87],[-205.96,-144.05]],\"c\":true},\"ix\":2},\"nm\":\"Path 21\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":21,\"ty\":\"sh\",\"ix\":22,\"ks\":{\"a\":0,\"k\":{\"i\":[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0.494,0.099],[0,0]],\"o\":[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[-0.492,-0.096],[0,0]],\"v\":[[-231.717,-143.359],[-233.29,-142.966],[-234.666,-141.789],[-232.897,-141.789],[-230.535,-141.789],[-227.686,-141.789],[-228.08,-142.87],[-229.851,-143.458]],\"c\":true},\"ix\":2},\"nm\":\"Path 22\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":22,\"ty\":\"sh\",\"ix\":23,\"ks\":{\"a\":0,\"k\":{\"i\":[[0.13,0],[0,0],[0.17,-0.077],[0,0],[-0.12,-0.025],[-0.06,0.009],[-0.065,-0.03],[-0.147,-0.1],[-0.174,-0.075],[-0.344,0],[0,0],[-0.147,0],[0.05,0.12],[0.074,0.145],[0.101,0.073],[0.121,0.024],[0.176,0.022],[0,0],[0.151,0],[0.051,0]],\"o\":[[0,0],[-0.169,0.026],[0,0],[0.147,0.027],[0.053,0.011],[0.075,-0.011],[0.173,0.073],[0.151,0.097],[0.295,0.147],[0,0],[0.149,0],[-0.022,-0.126],[-0.097,-0.175],[-0.075,-0.126],[-0.1,-0.072],[-0.169,-0.047],[0,0],[-0.146,-0.026],[-0.057,-0.007],[-0.102,0]],\"v\":[[177.745,-141.593],[177.35,-141.593],[176.96,-141.295],[177.056,-140.903],[177.451,-140.804],[177.624,-140.81],[177.842,-140.804],[178.236,-140.507],[178.533,-140.115],[179.441,-140.018],[179.908,-140.018],[180.301,-140.115],[180.301,-140.507],[179.908,-140.804],[179.908,-141.2],[179.517,-141.295],[179.022,-141.394],[178.631,-141.394],[178.236,-141.593],[178.077,-141.602]],\"c\":true},\"ix\":2},\"nm\":\"Path 23\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":23,\"ty\":\"sh\",\"ix\":24,\"ks\":{\"a\":0,\"k\":{\"i\":[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],\"o\":[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],\"v\":[[-238.795,-141.002],[-238.402,-140.018],[-237.615,-139.33],[-236.139,-139.234],[-236.338,-140.507],[-237.812,-141.099]],\"c\":true},\"ix\":2},\"nm\":\"Path 24\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":24,\"ty\":\"sh\",\"ix\":25,\"ks\":{\"a\":0,\"k\":{\"i\":[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],\"o\":[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],\"v\":[[-229.454,-140.607],[-231.914,-140.607],[-233.389,-140.214],[-234.762,-139.432],[-233.681,-137.658],[-232.7,-137.463],[-231.62,-137.854],[-229.454,-137.953],[-228.965,-138.739],[-229.948,-139.624],[-228.965,-139.722],[-228.278,-140.607]],\"c\":true},\"ix\":2},\"nm\":\"Path 25\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":25,\"ty\":\"sh\",\"ix\":26,\"ks\":{\"a\":0,\"k\":{\"i\":[[0,0],[0,0],[0,0],[0,0],[0,0]],\"o\":[[0,0],[0,0],[0,0],[0,0],[0,0]],\"v\":[[-215.693,-139.92],[-215.398,-138.84],[-213.825,-138.739],[-212.546,-139.132],[-213.825,-140.018]],\"c\":true},\"ix\":2},\"nm\":\"Path 26\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":26,\"ty\":\"sh\",\"ix\":27,\"ks\":{\"a\":0,\"k\":{\"i\":[[-0.294,-0.593],[0,0],[0,0],[0,0],[0,0]],\"o\":[[0.296,0.589],[0,0],[0,0],[0,0],[0,0]],\"v\":[[-221.198,-138.443],[-219.527,-136.675],[-218.445,-137.167],[-219.723,-138.84],[-221.296,-139.722]],\"c\":true},\"ix\":2},\"nm\":\"Path 27\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":27,\"ty\":\"sh\",\"ix\":28,\"ks\":{\"a\":0,\"k\":{\"i\":[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],\"o\":[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],\"v\":[[-199.372,-139.624],[-201.338,-139.624],[-202.42,-138.739],[-202.42,-137.953],[-200.061,-138.051],[-198.782,-138.346],[-197.212,-138.643],[-197.212,-139.624]],\"c\":true},\"ix\":2},\"nm\":\"Path 28\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":28,\"ty\":\"sh\",\"ix\":29,\"ks\":{\"a\":0,\"k\":{\"i\":[[0,0],[0,0],[0,0],[0,0],[0.393,0.296]],\"o\":[[0,0],[0,0],[0,0],[0,0],[0,0]],\"v\":[[-194.161,-138.84],[-195.048,-137.463],[-192.194,-137.068],[-190.624,-137.757],[-191.903,-139.234]],\"c\":true},\"ix\":2},\"nm\":\"Path 29\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":29,\"ty\":\"sh\",\"ix\":30,\"ks\":{\"a\":0,\"k\":{\"i\":[[0,0],[0.149,-0.052],[0.294,-0.05],[0.121,0],[0.442,-0.169],[0.122,-0.048],[0.148,-0.098],[0.022,-0.196],[0.022,-0.12],[0.048,-0.121],[0.12,-0.125],[0.294,-0.15],[-0.123,-0.12],[-0.121,-0.096],[0,0],[0,0],[0.219,-0.171],[0.155,0.002],[0.127,-0.109],[0.048,-0.094],[0.123,-0.099],[0.148,-0.074],[0.419,0],[0.249,0.046],[0.149,0.073],[0.144,0.096],[0.145,0.075],[0.122,0.024],[0.151,0],[0.392,0.024],[0,0],[0.344,0],[0.172,-0.023],[0.058,0.002],[0.066,-0.099],[0.075,-0.165],[0.05,-0.175],[0.025,-0.126],[0.121,-0.072],[0.221,0],[0,0],[0.371,-0.172],[0.173,-0.076],[0.296,-0.122],[0.124,-0.048],[0.247,0],[0.121,0.026],[0.149,0.051],[0.172,0],[0.296,-0.099],[0.174,-0.071],[0.268,-0.151],[0.198,-0.048],[0.124,-0.024],[0.194,0],[0.372,-0.1],[0.268,-0.195],[0.073,-0.17],[0.1,-0.148],[0.124,-0.072],[0.081,0.01],[0.054,-0.008],[0.196,0],[0.125,-0.018],[0.122,-0.025],[0.117,-0.051],[0,-0.22],[-0.203,-0.273],[-0.127,-0.072],[-0.292,-0.147],[-0.074,-0.125],[0,-0.145],[0,0],[0.075,-0.172],[0.123,0.025],[0.493,0],[0.271,-0.075],[0.122,-0.073],[0.147,-0.101],[0.171,-0.079],[0.146,0],[0.12,0.021],[0.244,0],[0.417,0],[0.271,-0.028],[0.125,-0.024],[0.167,0],[0,0],[0.146,-0.046],[0.096,-0.079],[0.05,-0.1],[0.073,-0.148],[0,0],[0.249,-0.222],[-0.077,-0.122],[-0.147,-0.147],[-0.119,-0.146],[-0.022,-0.173],[-0.022,-0.294],[-0.022,-0.125],[-0.049,-0.145],[-0.096,-0.073],[-0.392,0],[0,0],[-0.169,-0.023],[-0.153,-0.048],[-0.126,-0.122],[-0.05,-0.199],[0,-0.147],[0,0],[0.421,0],[0.198,0.094],[0.122,0.075],[0.145,0.075],[0.066,-0.011],[0.061,0.026],[0.168,0.052],[0.121,0.05],[0.1,0.101],[0.079,0.123],[0.047,0.125],[0.126,0.094],[0,0],[0.246,0.218],[0.096,0.072],[0.3,0],[0.121,-0.029],[0.169,-0.048],[0.122,-0.025],[0.443,-0.097],[0,0],[-0.141,0],[-0.267,-0.022],[-0.125,-0.022],[-0.099,-0.146],[0,-0.195],[0,-0.17],[0.321,0.094],[0.126,0.052],[0.176,0.069],[0.243,0],[0,0],[0.096,-0.076],[0.074,-0.123],[0.047,-0.122],[0,-0.223],[-0.492,-0.075],[-0.123,0.006],[-0.151,-0.012],[-0.124,-0.02],[-0.394,-0.249],[-0.147,-0.078],[-0.122,-0.073],[-0.097,-0.125],[0,-0.169],[0.023,-0.173],[0.221,0.099],[0.148,-0.001],[0.121,0.035],[0.172,0.024],[0.067,-0.006],[0.062,0.013],[0.066,-0.006],[0.061,0.013],[0.171,0.048],[0.126,0.027],[0.182,-0.018],[0.223,0.039],[0.269,0.147],[0.071,0.175],[0,0.195],[0,0.15],[0,0],[-0.049,0.269],[-0.026,0.174],[0,0.149],[0.026,0.12],[0.048,0.123],[0.072,0.15],[0.05,0.125],[0.147,0.297],[0.174,-0.023],[0.063,0.006],[0.073,-0.01],[-0.026,-0.223],[0,-0.147],[0.02,-0.469],[0,-0.149],[0,0],[0.296,0],[0.197,0],[0.146,0],[0.069,-0.218],[0.102,-0.048],[0.15,-0.076],[0.124,-0.046],[0,-0.39],[0,0],[-0.391,-0.343],[-0.145,-0.321],[-0.025,-0.121],[0,-0.296],[0,-0.121],[0.073,-0.145],[0,-0.293],[0,0],[-0.024,-0.147],[-0.024,-0.174],[0,-0.148],[0,-0.171],[-0.024,-0.125],[-0.194,-0.27],[-0.169,0],[0,0],[-0.127,0.124],[-0.125,0.099],[-0.221,0],[0,0],[-0.122,-0.076],[-0.147,-0.099],[-0.295,-0.149],[-0.124,-0.073],[-0.098,-0.12],[-0.176,-0.271],[-0.269,-0.247],[-0.074,-0.146],[0,-0.196],[0.148,-0.247],[0.072,-0.148],[0,-0.193],[0,-0.171],[-0.057,0.009],[-0.068,-0.027],[0,0],[-0.17,-0.078],[-0.267,0.014],[-0.15,-0.008],[-0.143,-0.024],[0,0],[0.148,-0.023],[0.298,0],[0,0],[0.176,0.076],[0.148,0.072],[0.125,0.074],[0,0.392],[0,0],[0,0.151],[0.269,0.272],[0.073,0.149],[0.05,0.097],[0.15,0.097],[0.125,0.025],[0.172,0.025],[0.296,0],[0.47,-0.049],[0.126,-0.025],[0.146,-0.052],[0.124,-0.073],[0,-0.226],[0,-0.149],[-0.027,-0.121],[0,-0.394],[0.121,-0.375],[0.048,-0.124],[0.145,-0.121],[0.15,-0.098],[0.151,-0.174],[0.024,-0.174],[0,-0.392],[0.27,-0.073],[0.438,-0.249],[0.199,-0.269],[0.052,-0.099],[0.145,-0.103],[0.147,0],[0.273,0.075],[0.149,0.048],[0.122,0.047],[0.195,0],[0,0],[0,0],[-0.098,0.142],[-0.172,0.072],[-0.218,0],[-0.197,-0.025],[-0.149,-0.026],[-0.296,0],[-0.269,0.048],[-0.175,0.075],[-0.125,0.097],[-0.098,0.147],[-0.218,0.247],[-0.122,0.102],[-0.219,0.295],[-0.074,0.097],[-0.124,0.103],[-0.071,0.124],[-0.023,0.122],[-0.026,0.122],[-0.072,0.296],[-0.028,0.124],[-0.025,0.123],[0,0.173],[0,0.193],[0.297,0],[0.198,0.024],[0.095,0.048],[0.096,0.145],[0,0.221],[-0.05,0.393],[0,0.468],[0,0],[-0.053,0.269],[0,0.465],[0.027,0.124],[0.098,0.321],[0.024,0.123],[0.147,0.271],[0.074,0.148],[0,0.172],[0,0],[-0.296,0],[-0.148,0],[-0.047,0],[0,0],[0.37,0.098],[0.193,0.074],[0.123,0.022],[0.297,0],[0,0],[0.221,0],[0.344,-0.143],[0.176,-0.073],[0.146,-0.026],[0.145,0],[0.298,0],[0.147,-0.021],[0.025,-0.467],[0.025,-0.171],[0.171,-0.271],[0.124,-0.144],[0.128,-0.372],[0.073,-0.269],[0.171,-0.073],[0.122,-0.022],[0.151,0.015],[0.121,-0.009],[0,0],[0.121,-0.076],[0,-0.245],[0,0],[-0.096,-0.12],[-0.081,0.024],[-0.046,-0.034],[-0.151,-0.321],[0,-0.296],[0.194,-0.197],[0.096,-0.075],[0.125,-0.101],[0,-0.244],[-0.024,-0.294],[-0.298,-0.021],[-0.124,-0.07],[-0.126,-0.124],[-0.075,-0.174],[-0.052,-0.123],[-0.074,-0.121],[-0.119,-0.101],[-0.147,-0.099],[-0.097,-0.048],[-0.221,-0.245],[-0.075,-0.146],[0,-0.145],[0.024,-0.121],[0.125,-0.147],[0.123,-0.073],[0.121,0],[0,0],[0.273,0.048],[0.269,0.146],[0,0.566],[0.296,0],[0.364,0.242],[0.151,0.1],[0.171,0.076],[0.153,-0.02],[0.116,0.01],[0.147,0],[0.27,0.097],[0.097,0.173],[0.169,0.096],[0.122,0.049],[0.124,0.024],[0.172,0.076],[0.175,0],[0,0],[0.122,0.096],[0.117,0.097],[0.169,0],[0,0],[0.298,0.172],[0.272,0.174],[0.099,0.048],[0.126,0.072],[0.099,0.072],[0.145,0.122],[0.121,0.076],[0.077,-0.014],[0.051,0.012],[0.221,0],[0,0],[0.147,-0.073],[0,-0.221],[-0.076,-0.195],[-0.121,-0.145],[-0.025,-0.17],[-0.025,-0.122],[0,-0.195],[-0.299,-0.026],[-0.124,0],[-0.122,-0.053],[-0.098,-0.121],[-0.05,-0.12],[-0.046,-0.172],[-0.27,-0.148],[-0.1,-0.122],[0,-0.198],[0,-0.122],[0.049,-0.124],[0.324,-0.118],[0.145,0],[0,0],[0.098,-0.049],[0.074,-0.15],[0.049,-0.125],[0.075,-0.122],[0.121,-0.099],[0,0],[-0.024,0.294],[0,0.144],[0.02,0.293],[0.028,0.147],[0,0],[0.098,-0.076],[0.096,-0.124],[0.1,-0.121],[0.12,-0.123],[0.294,0],[0,0],[0.293,-0.022],[0.064,0.014],[0.103,-0.057],[0.122,-0.097],[0.172,-0.075],[0.169,0],[0,0],[0.149,0],[0,0],[0,0],[0.147,0],[0,0],[0,0],[0.123,0.121],[0.121,0.124],[0.123,0.074],[-0.025,0.147],[-0.025,0.126],[-0.147,0.296],[0,0],[0.101,-0.078],[0.148,-0.075],[0.122,-0.022],[0.126,0],[0.109,0.002],[0.185,-0.091],[0.147,-0.076],[0.294,-0.146],[0,0],[0.416,-0.194],[0.12,-0.097],[0.098,-0.073],[0.149,-0.049],[0.147,0],[0,0],[0.122,-0.024],[0.316,-0.101],[0.147,-0.124],[0.319,-0.194],[0.199,-0.025],[0.213,0.012],[0.32,-0.111],[0.15,-0.145],[-0.072,-0.124],[0,-0.247],[0.17,-0.174],[0.292,-0.145],[0.174,-0.049],[0.123,-0.02],[0.145,0],[0.198,-0.02],[0.247,0],[0,0],[0.145,0.098],[0.17,0.052],[0.099,0.146],[0.048,0.122],[0,0.272],[-0.025,0.366],[0,0],[0,0],[0.172,0.121],[0.099,0.075],[0.096,0.124],[0.097,0.149],[0.223,0],[0.293,0],[0,0],[0.197,0.072],[0.124,0.028],[0.345,0],[0,0],[0.15,0],[0.126,0],[0,0],[-0.269,-0.048],[-0.124,-0.023],[0,0],[0.074,-0.124],[0,-0.198],[0,-0.145],[-0.075,-0.102],[-0.1,-0.048],[-0.148,-0.075],[-0.097,-0.121],[0,-0.243],[0,0],[0,-0.173],[0,-0.123],[0,-0.469],[0,-0.073],[0.297,0.051],[0.101,0.075],[0.122,0.144],[0.075,0.097],[0.147,0.076],[0.175,0],[0.144,-0.021],[0.174,-0.029],[0.152,0],[0.341,0],[0.147,0],[0.05,-0.127],[0.073,-0.099],[0.146,-0.073],[0.127,-0.024],[0.271,-0.052],[0.176,-0.076],[0.125,-0.152],[0.122,-0.099],[0.171,-0.071],[0.211,-0.002],[0,-0.004],[-0.052,-0.269],[-0.073,-0.119],[-0.098,-0.098],[-0.126,-0.072],[-0.126,-0.076],[0,-0.245],[0.024,-0.222],[0.073,0],[0.294,0],[0.293,0.028],[0.271,0.026],[0,0],[0.144,0],[0.323,0.099],[0.174,0.047],[0.121,0.026],[0.066,-0.006],[0.062,0.014],[0.146,0.097],[0.075,0.172],[0,0],[0.119,-0.071],[0.15,-0.1],[0.064,0.015],[0.066,-0.04],[0,-0.244],[-0.147,-0.175],[-0.148,-0.123],[-0.078,-0.098],[-0.051,-0.121],[-0.048,-0.152],[0,0],[-0.315,-0.075],[-0.248,-0.198],[0,-0.217],[0.025,-0.171],[0,0],[0.144,-0.05],[0.144,0],[0.121,0.073],[0.074,0.101],[0.146,0.094],[0.466,0.075],[0.066,-0.006],[0.063,0.013],[0.173,0.27],[0.024,0.149],[0,0.149],[0,0.468],[0,0],[0,0],[0.098,0.59],[0.22,0.194],[0.248,-0.009],[0.175,0.048],[0.128,0.126],[0.097,0.197],[0.244,0.172],[0.179,-0.014],[0.128,0.032],[0.169,0.098],[0.294,0.15],[0,0],[-0.122,-0.053],[-0.125,-0.077],[-0.125,-0.073],[-0.268,-0.12],[-0.293,-0.121],[-0.15,-0.026],[-0.223,0.022],[-0.249,-0.036],[-0.122,-0.05],[-0.147,-0.098],[-0.345,0],[0,0],[-0.149,-0.048],[-0.124,-0.051],[-0.148,-0.072],[-0.124,-0.028],[-0.146,0],[-0.148,0],[-0.296,0],[0,0],[0,0],[-0.146,0.024],[-0.067,-0.006],[-0.061,0.013],[-0.124,0.024],[-0.32,0.073],[-0.146,0],[-0.271,0.074],[-0.145,0.08],[-0.117,0.095],[-0.075,0.146],[-0.05,0.147],[0,0.291],[0.047,0.471],[0.024,0.125],[0.171,0.27],[0.127,0.122],[0.196,0.073],[0.121,0.025],[0.199,0],[0.297,0],[0.274,0.069],[0.269,0.196],[0.123,0.099],[0.125,0.099],[0.127,0.1],[0.172,0.071],[0.067,-0.014],[0.061,0.025],[0,0],[0.146,0.076],[0.122,0.05],[0,0],[0.175,0.073],[0.124,0.021],[0.366,0],[0.364,-0.049],[0.223,0],[0,0],[0.171,0.075],[0.146,0.097],[0.246,0.274],[0,0],[0.098,-0.17],[0.146,-0.023],[0.145,0],[0,0],[0.168,0.097],[-0.05,0.148],[0,0.246],[0.026,0.049],[0.121,0.096],[0.078,0.124],[0.025,0.122],[0.025,0.196],[0,0],[0.125,-0.073],[0.217,0],[0.2,0.123],[0.123,0.072],[0.075,0.12],[0.296,0.019],[0.318,0.052],[0.123,0.026],[0,0],[-0.15,0],[-0.148,0],[-0.198,0],[0,0],[0.126,0.1],[0.169,0.027],[0.119,0],[0.342,0],[0.267,0.1],[0.123,0.097],[0.145,0.101],[0.121,0.047],[0,0],[0,0],[0.417,0],[0,0],[-0.074,0.123],[-0.069,0.174],[-0.024,0.099],[0,0],[0.099,-0.467],[0,-0.169],[0,0],[-0.024,-0.147],[0,0],[-0.019,0.149],[0,0.224],[0.125,0.17],[0.177,0],[0,0],[0,0],[0,0],[0.397,-0.12],[0.172,0],[0.122,0],[0.123,-0.048],[0,-0.2],[0.197,-0.244],[0.244,0],[0,0],[0.175,0.047],[0.144,0.097],[-0.098,0.123],[-0.123,0.123],[0,0],[0.468,-0.126],[0.172,-0.075],[0.051,-0.194],[0,-0.148],[-0.051,-0.147],[-0.194,-0.075],[-0.292,-0.026],[-0.269,-0.026],[0,0],[0,0],[0.196,0.026],[0.342,0],[0.273,0.052],[0.172,0],[0,0],[0.048,-0.418],[0.024,-0.125],[0.075,-0.151],[0.122,-0.099],[0.076,0.273],[0.072,0.096],[0.147,0.073],[0.067,-0.012],[0.061,0.026],[0.148,0.073],[0.151,0.097],[0.07,-0.013],[0.061,0.025],[0.393,0],[0.271,-0.026],[0,0],[0,-0.172],[0,-0.196],[0,-0.322],[0.02,-0.125],[0.121,-0.123],[0.248,0],[0.121,0.145],[0.02,0.124],[0.023,0.149],[0.023,0.15],[0.096,-0.124],[0.148,-0.098],[0.078,0.01],[0.056,-0.011],[0.295,-0.024],[0,0],[-0.147,-0.047],[-0.062,0.014],[-0.069,-0.039],[-0.072,-0.122],[0,-0.149],[0,0],[0.05,-0.15],[0.122,0.074],[0.196,0.027],[0.161,-0.016],[0.143,0.012],[0.171,0.049],[0.026,0.471],[0.048,0.149],[0.223,-0.051],[0,0],[0.175,0],[0.25,0],[0.365,-0.172],[-0.052,-0.118],[0,-0.168],[0,-0.173],[0.395,-0.024],[0.122,0],[0.122,-0.047],[0.146,-0.124],[0.098,-0.073],[0.101,-0.073],[0.124,-0.147],[0.099,-0.074],[0.078,0.016],[0.045,-0.023],[0.148,-0.194],[0,0],[-0.121,0.098],[-0.147,0.073],[-0.147,0.047],[-0.147,0],[-0.147,0],[-0.119,0.047],[-0.148,0.073],[-0.153,0.075],[-0.075,-0.01],[-0.056,0.011],[-0.065,-0.006],[-0.064,0.013],[-0.173,0.074],[-0.391,0],[-0.37,-0.099],[-0.149,-0.073],[0,0],[0.267,-0.049],[0.127,-0.049],[0.127,-0.046],[0.123,-0.031],[0.064,0.033],[0.064,-0.024],[0.102,-0.124],[0.074,-0.122],[0.075,-0.122],[0.072,-0.121],[0.02,-0.147],[0,-0.145],[0.02,-0.296],[0.245,-0.345],[0.219,-0.248],[0.121,-0.098],[0.126,-0.099],[0.125,-0.095],[0.098,-0.096],[0.075,-0.148],[0.023,-0.123],[0.023,-0.124],[0.149,-0.145],[0.049,-0.2],[0.025,-0.272],[0.022,-0.149],[0.022,-0.151],[0,0],[0.173,-0.072],[0.244,-0.171],[0.147,-0.098],[0.145,-0.101],[0.078,0.015],[0.053,-0.01],[0.119,-0.025],[0.173,-0.074],[0,0],[-0.149,0],[-0.15,0],[0,0],[0.052,-0.176],[0.052,-0.096],[0.118,-0.075],[0.147,-0.073],[0.144,-0.098],[0.123,-0.075],[0.172,-0.098],[0.168,-0.069],[0.097,-0.054],[0.123,-0.148],[0.074,-0.148],[0.073,-0.122],[0.27,0],[0.417,0],[0,0],[0,0],[-0.101,-0.294],[0.44,-0.071],[0.069,0.007],[0.06,-0.011],[0.299,-0.148],[0.146,-0.075],[0.17,-0.051],[0.06,0.008],[0.068,-0.028],[0.075,-0.125],[0.024,-0.121],[0.024,-0.121],[0.171,-0.099],[0.177,-0.024],[0.126,-0.024],[0.124,0],[0.148,-0.122],[0,-0.197],[0,-0.148],[0,-0.171],[0.074,-0.123],[0.086,0.004],[0.022,-0.046],[0,-0.171],[-0.022,-0.15],[0,-0.247],[0.147,-0.2],[0.079,0.022],[0.045,-0.038],[0.098,-0.096],[0,0],[0,0],[-0.147,-0.046],[-0.147,-0.046],[-0.101,-0.122],[0.101,-0.121],[0.071,-0.146],[0.048,-0.124],[0.025,-0.123],[0.074,-0.172],[0,-0.149],[0,-0.196],[-0.614,-0.048],[0.153,-0.317],[0.076,-0.173],[0,-0.175],[0,-0.175],[-0.02,-0.127],[-0.273,-0.054],[-0.063,0.011],[-0.102,-0.044],[-0.153,-0.1],[-0.148,-0.147],[0,0],[-0.123,-0.024],[-0.243,0],[-0.318,0.172],[-0.172,0.074],[-0.075,-0.011],[-0.055,0.011],[-0.122,0.049],[-0.145,0.098],[-0.101,0.121],[-0.127,0.145],[-0.269,0.269],[-0.17,0.046],[-0.125,0.027],[-0.146,0],[-0.147,0.024],[0,0],[-0.058,0.009],[-0.067,-0.026],[-0.103,-0.096],[-0.075,-0.151],[-0.047,-0.129],[-0.051,-0.173],[-0.072,-0.318],[-0.02,-0.124],[-0.101,-0.148],[0,-0.273],[0,0],[0,-0.223],[0,-0.128],[-0.268,-0.173],[-0.118,-0.076],[-0.099,-0.148],[-0.026,-0.173],[0,0],[0,0],[-0.152,-0.268],[-0.12,-0.12],[-0.123,-0.15],[-0.05,-0.178],[0,-0.148],[0.025,-0.122],[0,-0.249],[0,0],[-0.025,-0.146],[-0.025,-0.152],[0,0],[-0.023,0.195],[-0.023,0.121],[-0.081,0.146],[-0.195,0.048],[-0.148,0],[0,0],[-0.124,0],[-0.176,0],[-0.151,0.078],[-0.172,0.075],[-0.343,0],[0,0],[0,0],[0,0.149],[0.03,0.217],[0,0],[0.148,0.027],[0.059,-0.008],[0.068,0.027],[0.075,0.103],[0.101,0.075],[-0.173,0.297],[-0.05,0.176],[-0.025,0.296],[-0.024,0.293],[-0.024,0.122],[-0.072,0.149],[-0.124,0.097],[-0.168,0.074],[-0.123,0.047],[-0.174,0.048],[-0.123,0.05],[-0.066,-0.015],[-0.053,0.041],[-0.073,0.149],[-0.05,0.121],[-0.099,0.145],[-0.095,0.126],[-0.023,0.171],[0,0.149],[0,0],[0.029,0.192],[0.295,0.022],[0.295,0],[0.146,0],[0.097,0.469],[0.2,0.072],[0.071,-0.013],[0.049,0.025],[0.148,0.118],[0,0.148],[0,0],[-0.099,0.122],[-0.096,0.122],[-0.075,0.169],[-0.028,0.148],[-0.124,0.245],[-0.122,0.103],[-0.147,0.045],[-0.074,-0.011],[-0.057,0.011],[-0.249,0.198],[-0.1,0.12],[-0.125,0.122],[-0.125,0.068],[-0.166,-0.005],[-0.101,0.019],[-0.068,-0.011],[-0.1,0.043],[-0.123,0.098],[-0.074,0.147],[-0.046,0.097],[-0.145,0.121],[-0.128,0.03],[-0.124,0],[-0.125,0.029],[-0.119,0.046],[0,0.243],[0.124,0.2],[0.072,0.174],[0,0.147],[-0.264,0.37],[-0.144,0.094],[-0.077,-0.018],[-0.057,0.023],[-0.148,0.093],[-0.072,0.202],[-0.126,0.269],[-0.097,0.073],[-0.295,0],[-0.271,-0.048],[-0.069,0.005],[-0.061,-0.012],[-0.126,-0.101],[-0.221,-0.295],[-0.099,0.049],[-0.175,0.049],[-0.148,0],[-0.148,-0.097],[-0.077,-0.145],[-0.072,-0.123],[0,-0.168],[0,0],[0,0],[0.026,-0.468],[0.026,-0.124],[0.196,-0.265],[0.147,-0.1],[0.247,0],[0.419,0],[0.147,-0.048],[0.125,-0.097],[0.072,-0.122],[0.072,-0.147],[0.073,-0.122],[0.123,-0.098],[0.125,-0.149],[0.126,-0.122],[0.124,-0.073],[0,-0.368],[0,-0.54],[0.097,-0.221],[0,-0.272],[-0.027,-0.536],[0,0],[0,-0.151],[0,-0.344],[-0.372,-0.051],[-0.271,-0.149],[-0.124,-0.12],[-0.143,-0.072],[-0.292,-0.126],[-0.15,-0.073],[-0.418,0],[0,0],[-0.145,0.048],[-0.592,0],[-0.389,0],[-0.194,0.024],[-0.121,0.046],[-0.121,0.077],[-0.069,0.097],[-0.121,0.098],[0,0],[-0.173,0.051],[-0.221,0],[-0.047,-0.026],[-0.1,-0.148],[-0.076,-0.119],[-0.123,-0.093],[0,0],[0,0],[0.196,-0.048],[0.294,0],[0.369,-0.048],[0.12,-0.018],[0.149,-0.073],[0.149,-0.124],[0.098,-0.147],[0.098,-0.148],[0.098,-0.12],[0.146,-0.073],[0.148,0],[0.267,0.097],[0.171,0.126],[0.273,0],[0.372,-0.05],[0.296,0.026],[0.293,-0.024],[0.122,-0.025],[0.144,-0.051],[0.194,0],[0.148,0],[0.169,0],[0.147,-0.07],[0.096,-0.121],[0.046,-0.124],[0.124,-0.145],[0.147,0],[0.145,0],[0.123,0.047],[0.144,0.126],[0.097,0.051],[0.147,0],[0.122,-0.025],[0.124,-0.068],[0.07,-0.119],[-0.171,-0.05],[-0.068,0.006],[-0.063,-0.012],[-0.174,-0.073],[0.271,-0.026],[0.466,-0.148],[0.147,-0.048],[-0.073,-0.097],[-0.322,-0.124],[-0.117,0],[-0.144,0],[-0.222,0],[-0.197,0.048],[-0.251,0.294],[-0.248,0],[-0.194,-0.102],[-0.121,-0.072],[-0.096,-0.149],[-0.051,-0.124],[-0.051,-0.103],[-0.12,-0.075],[-0.151,-0.069],[-0.145,-0.095],[0.122,-0.122],[0.372,-0.24],[0.048,-0.149],[0.024,-0.124],[0.023,-0.269],[0,0],[0.174,0.074],[0.101,0.072],[0.073,0.146],[0.073,0.123],[0.124,0.146],[0.084,-0.025],[0.024,0.047],[0.022,0.123],[0,0.151],[0,0],[0.292,-0.225],[0.12,-0.1],[0.072,-0.121],[0.022,-0.122],[0.022,-0.123],[0.054,-0.147],[0.072,-0.17],[0.026,-0.122],[0,-0.245],[-0.048,-0.199],[0,-0.127],[0,-0.175],[0.074,-0.172],[0.072,-0.169],[0.025,-0.199],[0,0],[0,0],[0.145,0.027],[0.418,0.051],[0.297,0],[0.293,-0.025],[0.076,-0.145],[0,-0.196],[-0.051,-0.148],[-0.27,-0.245],[0,0],[0,0],[0.513,0.346],[0.124,0.125],[0.223,0.047],[0.148,0],[0.146,-0.022],[0.322,-0.198],[0.168,-0.072],[0.121,-0.049],[0.123,-0.072],[0.145,-0.097],[0.171,-0.076],[0.466,0],[0.269,-0.078],[0.199,-0.05],[0.25,0],[0.295,0.295],[0,0.54],[0,0],[0.124,-0.071],[0.12,0],[0.144,0],[0.195,0],[0,0],[0.318,0],[0.051,-0.471],[0,0],[0.175,0.127],[0.048,0.172],[0.072,0.322],[0,0],[0,0],[0,0],[0,0.15],[-0.023,0.147],[0,0],[-0.296,-0.096],[-0.175,-0.073],[-0.249,0],[-0.293,0.027],[0,0.296],[0,0.393],[-0.099,0.223],[0,0.27],[0.025,0.297],[0,0],[0.175,0],[0.101,0.013],[0.162,-0.059],[0.147,-0.073],[0.101,-0.127],[0.225,0],[0,0],[0.149,0.047],[-0.122,0.247],[-0.075,0.172],[0,0.145],[0,0],[0.296,0],[0.148,0.021],[-0.072,0.176],[-0.074,0.32],[0,0.148],[0.023,0.125],[0.075,0.171],[0.101,0.118],[0.196,0],[0.147,0],[0.075,-0.174],[0.125,-0.247],[0.32,-0.122],[0.076,0.011],[0.052,-0.009],[0.174,-0.05],[0,-0.22],[0,-0.248],[0,0],[0.098,-0.071],[0.123,-0.048],[0.123,-0.031],[0,-0.417],[-0.222,-0.321],[-0.149,-0.121],[-0.126,-0.077],[-0.148,-0.078],[0.025,-0.125],[0,-0.173],[0,-0.17],[0,0],[0,-0.246],[0,-0.098],[-0.048,-0.125],[-0.074,-0.174],[0,-0.339],[0,0],[0,0],[0.194,-0.024],[0.392,0],[0,0],[0.271,0],[0.397,0],[0.246,-0.145],[0.122,-0.071],[0.146,-0.051],[0.243,-0.196],[0.071,-0.128],[0.053,-0.149],[0.392,0],[0.174,0.029],[0,0],[0,0],[0.148,0],[0.151,0],[0,0],[0,0],[0,0],[0.193,-0.047],[0.148,-0.051],[0.122,-0.048],[0.147,-0.072],[0.296,-0.249],[0.176,-0.097],[0.172,-0.02],[0,0],[0.491,0],[0,0],[0.542,-0.097],[0.122,-0.026],[0.122,-0.025],[0,0],[0,0],[0.171,0],[0.109,-0.011],[0.152,0.041],[0.149,0.102],[0.077,0.099],[0.241,0],[0.216,-0.018],[0,0],[-0.296,-0.094],[0,0],[0,0],[0,0],[0.492,0],[0.144,0.022],[0.146,0],[0.147,0],[0.171,0.048],[0.146,0.099],[0.073,0.121],[0.296,-0.049],[0.067,0.006],[0.06,-0.013],[0.242,-0.168],[0.071,-0.147],[0,-0.147],[-0.098,-0.123],[-0.085,0.021],[-0.044,-0.02],[-0.148,-0.073],[-0.148,-0.073],[-0.144,-0.023],[-0.165,0.016],[-0.143,-0.009],[0,0],[-0.146,-0.073],[-0.147,-0.098],[-0.124,-0.072],[-0.124,-0.121],[-0.293,-0.223],[0,0],[-0.147,-0.097],[-0.144,-0.073],[-0.266,-0.2],[0,-0.244],[0.021,-0.197],[0,-0.272],[-0.078,-0.545],[0,-0.222],[0.097,-0.196],[0.372,-0.371],[0.094,-0.099],[0.12,-0.072],[0.494,0],[0,0],[0.176,0.05],[0.246,0.047],[0.149,0],[0.391,0.05],[0.152,0.075],[0.172,0.102],[0.174,0],[0,0],[0.393,0],[0.174,0.026],[0.268,0],[0,0],[0.073,-0.126],[0.052,-0.118],[0.049,-0.146],[0,0],[0,0],[-0.118,-0.118],[-0.101,-0.148],[0,-0.221],[0.048,-0.197],[0,-0.394],[-0.073,-0.245],[-0.052,-0.149],[0,-0.195],[0,0],[0.074,-0.125],[0.097,-0.149],[0.078,-0.125],[0,-0.493],[-0.025,-0.121],[-0.076,-0.169],[0,0],[-0.023,-0.194],[0,0],[0,0],[0.053,-0.173],[0,-0.246],[-0.021,-0.37],[0,0],[-0.343,0],[-0.147,-0.048],[-0.146,-0.096],[-0.222,0],[-0.393,0],[-0.176,-0.048],[-0.149,-0.051],[-0.125,-0.048],[0,0],[-0.097,-0.145],[-0.076,-0.145],[-0.075,-0.12],[-0.123,-0.151],[0,0],[0,0],[-0.174,0],[-0.126,-0.006],[-0.146,0.012],[-0.272,0.101],[-0.148,0.073],[-0.291,0.252],[-0.169,0.078],[-0.295,0.051],[-0.125,-0.006],[-0.149,0.013],[-0.147,0.048],[-0.146,0.096],[-0.244,0.295],[-0.518,0.197],[-0.295,0.028],[-0.214,-0.01],[-0.225,0.012],[-0.294,0.023],[0,0],[0.074,0.125],[0.147,0.146],[0,0.22],[-0.072,0.197],[-0.076,0.167],[-0.172,0.345],[0,0],[-0.07,0.121],[-0.124,0.072],[-0.08,-0.016],[-0.051,0.01],[-0.268,0.1],[-0.119,0.096],[-0.174,0.047],[-0.122,0.047],[-0.067,-0.012],[-0.062,0.024],[-0.172,0.075],[-0.076,-0.011],[-0.054,0.011],[-0.147,0.024],[-0.216,-0.016],[-0.193,0.011],[-0.293,0.025],[0,0],[0,0],[0,0.293],[0,0.172],[-0.074,0.27],[-0.096,0.123],[-0.293,0.074],[-0.223,0],[-0.368,-0.072],[-0.068,0.006],[-0.06,-0.012],[-0.494,-0.15],[-0.391,0],[0,0],[-0.146,0],[-0.148,0],[-0.072,0.249],[-0.074,0.102],[-0.125,0.1],[-0.174,0.074],[-0.124,0],[0,0],[-0.27,0.048],[-0.17,0.072],[-0.148,0.097],[-0.147,0.126],[-0.221,0],[-0.145,0],[-0.269,-0.196],[-0.196,-0.273],[-0.196,-0.464],[-0.05,-0.119],[-0.097,-0.144],[-0.147,-0.096],[-0.149,-0.074],[0,0],[-0.122,-0.075],[-0.122,-0.173],[-0.049,-0.099],[-0.145,-0.121],[-0.146,-0.127],[-0.121,-0.099],[-0.174,-0.121],[-0.125,-0.074],[-0.174,-0.096],[-0.173,-0.049],[-0.293,-0.052],[-0.071,0.009],[-0.098,-0.028],[-0.126,-0.099],[-0.074,-0.121],[-0.465,-0.272],[-0.127,-0.049],[-0.149,-0.069],[-0.123,-0.097],[-0.198,-0.276],[-0.172,-0.317],[-0.048,-0.149],[-0.027,-0.121],[0,-0.32],[0.047,-0.294],[0.663,-0.419],[0.169,-0.071],[0.123,-0.025],[0.294,0],[0.198,0],[1.051,0],[0,0],[-0.269,-0.197],[-0.099,-0.124],[-0.076,-0.123],[-0.098,-0.096],[-0.175,-0.077],[-0.076,0.011],[-0.054,-0.011],[-0.319,0],[0,0],[0,0],[-0.125,0.05],[-0.266,0.196],[-0.172,0.096],[-0.07,-0.02],[-0.038,0.05],[-0.049,0.125],[-0.098,0.267],[-0.075,0.101],[-0.171,0.098],[-0.075,-0.011],[-0.056,0.011],[-0.267,0.096],[0,0.148],[0,0.149],[0,0],[0.196,0],[0,0],[0.148,0],[0,0],[-0.023,0.226],[0,0],[-0.322,-0.121],[-0.122,-0.077],[-0.223,0],[-0.174,0],[0.074,0.466],[0,0.293],[0.194,0.027],[0.066,-0.005],[0.061,0.015],[0.17,0.077],[0.147,0.124],[0.171,0.098],[0.127,0.072],[0.172,0.072],[0.067,-0.014],[0.052,0.039],[0.122,0.126],[0.099,0.047],[0.08,-0.011],[0.055,0.01],[0.07,-0.007],[0.06,0.011],[0.146,0.05],[0.099,0.075],[0.121,0.076],[0.172,0.075],[0.075,-0.011],[0.055,0.013],[0.143,0.021],[0.068,-0.006],[0.071,0.011],[-0.023,0.121],[0,0.194],[0,0.147],[0.174,0.125],[0.175,0.05],[0.392,0.247],[0.123,0.094],[0.073,-0.021],[0.038,0.049],[0.026,0.121],[0,0.345],[0.349,0],[0.34,-0.024],[0,0],[0,0],[0,0.194],[0,0],[0.049,0.123],[0,0.221],[-0.173,0.148],[-0.223,0],[-0.175,-0.098],[-0.098,-0.146],[-0.101,-0.15],[-0.125,-0.096],[-0.074,0.017],[-0.059,-0.023],[-0.122,-0.047],[-0.148,-0.101],[-0.146,-0.099],[-0.148,-0.05],[-0.077,0.011],[-0.056,-0.01],[-0.152,-0.098],[-0.051,-0.193],[-0.245,-0.22],[-0.076,0.017],[-0.057,-0.021],[-0.296,-0.195],[-0.123,-0.072],[-0.146,-0.123],[-0.367,-0.02],[-0.086,0.005],[-0.154,-0.117],[-0.07,-0.094],[-0.12,-0.096],[-0.147,-0.074],[-0.293,-0.15],[-0.542,-0.195],[-0.249,-0.147],[-0.125,-0.147],[-0.05,-0.121],[0,-0.2],[0.05,-0.148],[0.076,-0.175],[0.028,-0.124],[0,-0.219],[-0.096,-0.171],[0,-0.369],[-0.046,-0.27],[-0.198,-0.24],[-0.12,-0.073],[-0.08,0.017],[-0.051,-0.009],[-0.145,0],[-0.267,-0.054],[0,0],[0,0],[0.124,0.025],[0.147,0],[0.148,-0.024],[-0.048,-0.126],[-0.074,-0.15],[-0.291,-0.243],[-0.121,-0.099],[-0.148,-0.145],[-0.1,0.149],[-0.05,0.096],[-0.126,0.15],[-0.053,-0.122],[-0.07,-0.099],[-0.149,-0.294],[-0.023,-0.345],[-0.023,-0.12],[-0.197,-0.151],[0,0],[-0.125,0.025],[-0.126,0.077],[-0.097,0.12],[-0.073,0.171],[0,0.149],[0,0],[0,0.171],[-0.125,0.097],[-0.171,0],[-0.121,-0.026],[-0.199,-0.025],[-0.168,0],[0,0],[-0.196,0.025],[-0.021,0.341],[0,0.146],[0,0.071],[-0.316,0.022],[-0.147,0.021],[0.122,0.147],[0.144,0.124],[0.194,0.071],[0.197,0],[0,-0.297],[0.025,-0.15],[0.169,0.07],[0.121,0.053],[0.124,0.175],[0.049,0.173],[0.024,0.123],[0.022,0.118],[0.049,0.12],[0.12,0.099],[0.123,0.052],[0.074,-0.011],[0.056,0.013],[0.123,0.148],[0.026,0.169],[0,0.148],[0,0],[-0.078,0.17],[0,0],[-0.151,-0.069],[-0.174,-0.025],[-0.292,0],[0,0],[0,0],[-0.171,0.077],[0.146,0.1],[0.121,0.048],[-0.121,0.146],[-0.193,0.025],[-0.347,0],[-0.322,-0.048],[-0.124,-0.023],[-0.146,-0.074],[-0.196,-0.047],[-0.06,0.008],[-0.067,-0.025],[-0.099,-0.101],[-0.052,-0.119],[-0.076,-0.1],[-0.095,-0.076],[-0.146,-0.077],[0,0],[0.12,-0.074],[0,-0.221],[-0.294,-0.27],[-0.269,-0.197],[0,-0.441],[0,-0.076],[0,-0.149],[0,-0.147],[0,0],[-0.062,-0.147],[-0.096,-0.158],[-0.058,-0.076],[-0.072,-0.062],[-0.065,-0.048],[-0.061,-0.048],[-0.096,-0.07],[-0.062,-0.072],[0,-0.134],[0.035,-0.124],[0.06,-0.089],[0.024,-0.071],[0.007,-0.101],[0,-0.15],[-0.044,-0.205],[-0.037,-0.077],[-0.088,-0.038],[-0.097,0],[-0.074,0.211],[-0.011,0.06],[-0.024,0.111],[0,0.079],[0.016,0.234],[0,0.073],[-0.011,0.237],[0,0],[-0.047,-0.021],[-0.076,-0.048],[-0.066,-0.057],[-0.076,-0.064],[-0.163,-0.16],[-0.064,-0.075],[-0.075,-0.082],[-0.086,-0.035],[-0.078,-0.02],[-0.077,0],[-0.149,0],[-0.135,-0.048],[-0.082,-0.023],[-0.16,0],[-0.075,0.01],[-0.062,0.041],[-0.036,0.091],[0,0.076],[0,0.084],[0,0.223],[-0.036,0.098],[-0.06,0.086],[-0.038,0.077],[-0.086,0.037],[-0.195,0],[-0.17,-0.122],[-0.065,-0.058],[-0.149,-0.128],[-0.077,-0.059],[-0.162,-0.11],[-0.1,-0.086],[-0.072,-0.045],[-0.074,-0.035],[-0.06,-0.021],[-0.109,0],[0,0],[0,0.271],[0,0],[0,0.109],[-0.024,0.185],[-0.122,0],[-0.075,0],[-0.079,0.011],[-0.109,0],[-0.232,-0.134],[-0.161,-0.088],[-0.073,-0.024],[-0.163,0],[-0.069,0.025],[-0.064,0.04],[-0.052,0.061],[-0.065,0.059],[-0.028,-0.048],[-0.076,-0.123],[-0.034,-0.075],[-0.016,-0.063],[0,-0.148],[0.064,-0.235],[0.037,-0.09],[0.087,-0.221],[0,-0.308],[-0.011,-0.137],[-0.033,-0.113],[-0.023,-0.075],[-0.027,-0.061],[-0.051,-0.122],[0,-0.11],[0.036,-0.122],[0.074,-0.075],[0.034,-0.089],[0.01,-0.073],[0,-0.171],[0.035,-0.073],[0.052,-0.075],[0.086,-0.208],[0.075,-0.134],[0.187,-0.087],[0.083,-0.046],[0.076,-0.06],[0.035,-0.098],[0.011,-0.063],[0.013,-0.151],[0.136,-0.354],[0.075,-0.199],[0.158,-0.162],[0.073,-0.06],[0.085,-0.051],[0.084,-0.011],[0,0],[0.062,0.004],[0.091,-0.012],[0.148,-0.025],[0.065,0],[0.042,0.004],[0.041,-0.005],[0.06,-0.011],[0.072,-0.038],[0.124,0],[0.124,0.036],[0.071,0.062],[0.219,0.026],[0,0],[0.113,0],[0.137,0.012],[0.108,0],[0.183,0.038],[0.097,0],[0,0],[0.084,-0.011],[0.087,-0.05],[-0.16,-0.062],[-0.246,-0.061],[-0.245,-0.024],[-0.147,-0.012],[0,0],[0,0],[-0.097,-0.123],[-0.033,-0.076],[0,-0.137],[0,-0.083],[0,-0.076],[0,-0.101],[0,-0.306],[-0.124,-0.122],[-0.196,-0.297],[-0.073,-0.147],[0,0],[-0.1,-0.147],[-0.126,-0.146],[-0.192,-0.075],[-0.172,0],[0,0],[-0.149,0.048],[-0.099,0.122],[-0.05,0.126],[-0.147,0.148],[0,0],[-0.32,-0.445],[-0.1,-0.122],[-0.147,-0.122],[-0.124,-0.073],[-0.072,-0.174],[-0.073,-0.316],[-0.024,-0.123],[-0.074,-0.148],[-0.272,-0.316],[-0.071,-0.199],[0,-0.269],[0,0],[0,-0.148],[-0.246,-0.395],[-0.225,-0.1],[-0.145,-0.048],[-0.118,-0.076],[-0.101,-0.121],[-0.078,-0.12],[-0.072,-0.124],[-0.217,-0.394],[-0.144,-0.296],[0,0],[0,-0.491],[0.027,-0.148],[0.025,-0.173],[0,-0.145],[-0.174,-0.224],[-0.148,-0.122],[-0.125,-0.072],[-0.148,-0.126],[-0.273,-0.272],[-0.122,-0.146],[-0.097,-0.122],[-0.123,-0.17],[-0.147,-0.318],[-0.122,-0.147],[-0.122,-0.17],[-0.297,-0.418],[-0.368,-0.491],[-0.073,-0.148],[-0.073,-0.196],[0,-0.175],[-0.022,-0.293],[-0.022,-0.125],[-0.049,-0.146],[0,-0.369],[0,0],[-0.393,-0.343],[-0.39,-0.042],[-0.297,0],[-0.42,0.145],[-0.096,0.169],[-0.22,0.219],[-0.3,0.122],[-0.173,0],[0,0],[-0.17,-0.05],[-0.069,0.006],[-0.061,-0.012],[0,0],[-0.122,0.146],[-0.174,0.117],[-0.2,0.072],[-0.438,0.149],[-0.171,0.056],[-0.133,-0.016],[-0.133,0.028],[-0.17,0.023],[-0.124,0],[-0.267,0.097],[-0.146,0.146],[0,0],[-0.199,0.049],[-0.123,0],[-0.469,0],[-0.025,0.267],[-0.074,0.1],[-0.147,0.125],[-0.076,-0.017],[-0.057,0.023],[-0.174,0.048],[-0.124,0.024],[-0.147,0.017],[-0.122,0],[-0.146,0.023],[0,0],[-0.027,0.217],[0,0.124],[-0.027,0.117],[-0.174,0.275],[0,0],[-0.023,0.124],[-0.051,0.148],[-0.196,0.226],[-0.172,0.073],[-0.147,0],[0,0],[-0.145,0],[0,0],[-0.046,0.145],[-0.046,0.123],[-0.075,0.169],[-0.097,0.121],[-0.248,0],[0,0],[-0.144,-0.097],[-0.12,-0.046],[-0.047,0.465],[-0.103,0.49],[-0.049,0.169],[-0.097,0.094],[-0.124,0.029],[-0.065,-0.007],[-0.064,0.015],[-0.294,0.124],[0.122,0.317],[0.195,0.072],[0.061,-0.008],[0.07,0.027],[0.146,0.074],[0.071,0.126],[0.023,0.121],[0.027,0.178],[0.076,0.148],[0.177,0.072],[0.296,0.074],[0.122,0],[0.146,0.05],[-0.023,0.127],[0,0.319],[0.051,0.099],[0.12,0.073],[0.175,0],[0,0],[0.099,-0.324],[0.246,-0.243],[0.07,0.319],[0.05,0.124],[0.095,0.127],[0.122,0.124],[0,0],[0.121,0.126],[0.121,0.099],[0.126,-0.075],[0.125,-0.074],[0.121,-0.076],[0.071,-0.317],[0.022,-0.468],[0.025,-0.295],[0.291,0],[0.339,0.023],[0,0],[0.171,0.048],[0.298,0],[0.074,-0.023],[0.172,-0.074],[0.12,-0.073],[0.149,-0.146],[0.223,0],[0.267,0.147],[0.153,0.149],[0.051,0.199],[0,0.146],[-0.049,0.097],[-0.095,0.078],[-0.42,0],[0,0],[-0.221,-0.051],[-0.245,0],[-0.246,0.023],[-0.145,0.023],[0.097,0.073],[0.195,0],[0,0],[0.296,0],[0,0],[0.146,0],[0.123,0.026],[0.419,0.022],[0.208,-0.007],[0.232,0.011],[0.147,0],[0,0],[0,0],[0.144,0.095],[0.128,0.078],[0.197,0.072],[0.121,0.02],[0.122,0],[0.147,0.052],[0.072,0.223],[0.023,0.17],[0.072,0.268],[0.196,0.273],[0.047,0.195],[0.025,0.125],[0,0.147],[0.023,0.196],[0,0.247],[-0.028,0.245],[-0.076,0.148],[-0.2,0.072],[-0.221,0],[-0.365,-0.075],[-0.395,-0.393],[-0.124,-0.099],[-0.249,-0.293],[-0.097,-0.171],[-0.249,-0.419],[-0.177,-0.102],[-0.447,-0.248],[-0.294,-0.245],[-0.32,-0.196],[-0.318,-0.072],[-0.164,0.016],[-0.141,-0.009],[-0.12,0],[-0.591,0],[0,0],[0,0],[-0.148,0.022],[-0.131,-0.006],[-0.133,0.012],[-0.148,0.024],[0,0],[-0.268,-0.072],[-0.146,-0.102],[-0.12,-0.319],[-0.023,-0.124],[-0.05,-0.12],[-0.12,-0.102],[-0.149,-0.074],[-0.197,0],[0,0],[-0.172,0],[-0.174,-0.047],[-0.148,-0.098],[-0.099,-0.124],[-0.125,-0.072],[-0.222,0],[0,0],[-0.345,0],[0,0],[0,0],[0,0],[-0.298,-0.248],[-0.119,-0.103],[-0.101,-0.147],[-0.247,-0.217],[-0.151,-0.076],[-0.102,-0.048],[-0.126,-0.148],[-0.048,-0.151],[-0.027,-0.296],[-0.101,0.002],[-0.076,-0.092],[-0.123,-0.099],[-0.149,-0.072],[-0.125,0],[0,0],[-0.271,-0.074],[-0.151,-0.053],[-0.122,-0.049],[-0.372,-0.071],[0.468,-0.047],[0.268,-0.07],[0.149,-0.049],[-0.073,-0.126],[-0.121,-0.103],[-0.124,-0.05],[-0.121,-0.049],[-0.12,-0.123],[-0.122,-0.148],[-0.32,-0.196],[-0.174,-0.122],[-0.198,-0.049],[-0.146,0],[-0.122,0.048],[-0.148,0.098],[-0.154,0.073],[-0.241,0.12],[-0.12,0.173],[-0.221,0],[-0.32,-0.244],[-0.073,-0.124],[0,-0.394],[-0.048,-0.27],[-0.078,-0.347],[0,-0.124],[0,-0.317],[0,0],[0,-0.194],[-0.026,-0.54],[-0.026,-0.121],[-0.072,-0.295],[0,-0.148],[-0.049,-0.492],[-0.249,-0.295],[-0.126,-0.146],[-0.099,-0.167],[-0.025,-0.164],[-0.025,-0.122],[-0.098,-0.315],[-0.023,-0.12],[-0.074,-0.175],[-0.025,-0.17],[-0.025,-0.124],[-0.046,-0.147],[-0.074,-0.124],[-0.118,-0.171],[-0.072,-0.123],[-0.075,-0.196],[0,-0.297],[0,0],[0,-0.295],[-0.324,-0.471],[-0.098,-0.174],[-0.074,-0.148],[-0.073,-0.147],[-0.32,-0.662],[-0.171,-0.468],[-0.047,-0.124],[0,0],[-0.141,-0.12],[-0.269,0],[-0.173,0.098],[-0.121,0.148],[-0.049,0.123],[-0.045,0.146],[-0.295,0.392],[-0.126,0.075],[-0.069,-0.012],[-0.061,0.026],[-0.118,0.026],[-0.125,0.149],[-0.076,0.174],[-0.049,0.123],[-0.048,0.146],[0,0.289],[-0.098,0.369],[-0.073,0.172],[-0.074,0.295],[-0.026,0.295],[0.024,0.29],[0,0.296],[0,0.147],[0,0],[0,0.609],[-0.075,0.125],[-0.118,0.076],[-0.467,0],[-0.323,0.296],[-0.096,0.294],[-0.073,0.145],[-0.195,0.075],[-0.122,0.05],[-0.124,0.052],[-0.147,0.098],[-0.145,0.097],[-0.117,0.068],[-0.098,0.071],[-0.096,0.151],[-0.147,0.273],[-0.122,0.148],[-0.096,0.124],[-0.149,0.1],[-0.244,0.222],[-0.098,0.146],[-0.074,0.122],[-0.122,0.078],[-0.077,-0.015],[-0.052,0.013],[-0.06,-0.008],[-0.068,0.027],[-0.124,0.147],[-0.077,0.122],[-0.318,0.095],[-0.147,0],[-0.083,-0.001],[-0.158,0.105],[-0.094,0.148],[-0.049,0.614],[-0.022,0.299],[0,0],[-0.145,-0.027],[-0.22,0],[0,0],[-0.172,0.076],[-0.065,-0.013],[-0.062,0.027],[-0.171,0.077],[-0.1,0.049],[-0.149,0.1],[-0.079,0.124],[0,0],[0,0],[-0.244,-0.052],[-0.06,0.014],[-0.043,-0.063],[-0.096,-0.146],[-0.046,-0.121],[-0.072,-0.121],[-0.125,-0.124],[-0.072,-0.124],[-0.096,-0.321],[0,-0.296],[-0.074,-0.124],[-0.075,-0.122],[-0.097,-0.122],[-0.075,-0.098],[-0.296,-0.248],[-0.121,-0.124],[-0.1,-0.146],[0,-0.196],[0,0],[0,-0.147],[-0.004,-0.285],[-0.001,0],[-0.296,0],[-0.121,-0.07],[-0.074,-0.1],[0,-0.149],[0.075,-0.268],[0.046,-0.145],[0,-0.465],[-0.419,-0.416],[-0.149,-0.099],[-0.173,-0.026],[-0.295,0],[0,0],[-0.125,0.049],[-0.145,0.076],[-0.13,0.052],[-0.145,0.024],[-0.321,0.074],[0,0],[0,0],[-0.073,0.172],[-0.323,-0.344],[-0.074,-0.148],[-0.053,-0.151],[-0.075,-0.297],[-0.151,-0.492],[-0.049,-0.119],[-0.096,-0.145],[-0.075,-0.147],[0,-0.146],[0,-0.589],[-0.047,-0.148],[-0.073,-0.123],[-0.095,-0.123],[-0.272,-0.272],[-0.1,-0.144],[0,-0.248],[0,-0.293],[0,-0.317],[0.344,-0.222],[0.148,-0.073],[0.095,-0.076],[0.047,-0.148],[0,-0.124],[0,-0.466],[0,0],[0.027,-0.296],[0,-0.247],[-0.171,-0.346],[-0.15,-0.123],[-0.148,-0.074],[-0.126,-0.053],[-0.241,-0.296],[-0.32,-0.173],[-0.124,-0.069],[-0.095,-0.146],[-0.026,-0.2],[-0.026,-0.35],[-0.099,-0.245],[-0.126,-0.294],[-0.075,-0.169],[-0.097,-0.195],[0,-0.368],[0,0],[-0.021,-0.148],[-0.051,-0.169],[-0.123,-0.144],[-0.171,-0.1],[-0.146,-0.073],[-0.539,-0.196],[-0.249,-0.197],[-0.173,-0.267],[-0.127,-0.094],[-0.127,-0.051],[-0.124,-0.024],[-0.175,-0.049],[-0.269,0],[0,0],[-0.146,0.069],[0.202,0.276],[0.097,0.099],[0.097,0.096],[0.072,0.317],[0.019,0.343],[0,0.148],[0.074,0.434],[0.026,0.12],[0.073,0.152],[0.049,0.199],[0,0.472],[0,0],[0,0.15],[0,0],[0,0.195],[0,0],[0.371,0.247],[0.123,0.096],[0.121,0.098],[0.121,0.101],[0.173,0.077],[0.295,0.054],[0.068,-0.008],[0.099,0.031],[0.194,0.272],[0.046,0.167],[0.027,0.12],[0,0.292],[0.027,0.123],[0.072,0.098],[0.126,0.096],[0.076,0.124],[0,0.296],[0,0],[0.071,0.097],[0.124,0.072],[0.145,0.051],[0,0],[0,0],[-0.27,0.494],[-0.194,0.462],[0,0.24],[0,0.295],[-0.072,0.197],[-0.102,0.149],[-0.101,0.175],[-0.097,-0.079],[-0.124,-0.099],[-0.099,-0.126],[-0.074,-0.15],[-0.101,-0.244],[-0.146,-0.098],[-0.244,0],[0,0],[-0.148,0.023],[-0.169,0],[-0.196,-0.274],[-0.15,-0.345],[-0.123,-0.316],[-0.148,-0.291],[-0.198,-0.274],[-0.318,-0.147],[-0.077,0.011],[-0.051,-0.008],[-0.124,-0.027],[-0.127,-0.021],[-0.096,-0.073],[0,-0.196],[0.096,-0.314],[0,-0.294],[-0.342,-0.588],[-0.098,0.144],[-0.294,0.246],[-0.149,0.123],[-0.15,0.118],[-0.174,0.146],[-0.097,0.15],[-0.073,0.122],[-0.074,0.174],[-0.047,0.123],[-0.048,0.124],[-0.196,0.048],[-0.224,0],[-0.27,0.02],[-0.167,0.119],[-0.371,0.322],[-0.196,0.098],[-0.098,0.074],[-0.097,0.146],[-0.027,0.122],[0,0.294],[0,0.738],[0,0],[0.074,0.323],[0.121,0.521],[0.026,0.346],[0,0.345],[0.364,0.095],[0.147,0.076],[0.124,0.125],[0.149,0.367],[0.07,0.093],[0.097,0.071],[0.152,0.072],[0.318,0.197],[0.126,0.144],[0.099,0.12],[0.073,0.173],[0.052,0.27],[0.026,0.124],[0.073,0.17],[0,0.243],[-0.052,0.223],[-0.048,0.175],[-0.12,0.099],[-0.115,0.124],[-0.07,0.147],[-0.05,0.179],[-0.023,0.171],[-0.048,0.22],[-0.049,0.174],[-0.196,0.075],[-0.12,0.051],[-0.091,-0.016],[-0.082,0.012],[-0.343,0.12],[-0.068,-0.012],[-0.061,0.024],[-0.175,0.052],[-0.123,0],[-0.318,0],[-0.15,0],[-0.467,0],[0,0],[0,-0.143],[0,0],[0.174,-0.074],[0.146,-0.05],[0.067,0.012],[0.062,-0.025],[0.146,-0.099],[0.094,-0.149],[0,-0.272],[-0.051,-0.199],[-0.077,-0.17],[-0.124,-0.124],[0,0],[-0.151,0.513],[-0.025,0.124],[-0.024,0.175],[0,0.174],[0.073,0.123],[0.272,0.095],[0,0],[-0.318,0.022],[0,0],[-0.148,0.07],[-0.173,0.094],[-0.174,0.046],[-0.268,0.052],[-0.318,0],[0,0],[-0.126,0],[-0.29,0],[-0.119,0.025],[-0.146,0.071],[-0.125,0.123],[-0.123,0.049],[-0.273,0.047],[-0.146,0.025],[-0.126,-0.005],[-0.148,0.013],[-0.125,0.024],[-0.059,-0.008],[-0.069,0.027],[-0.147,0.099],[-0.149,0.074],[-0.124,0.049],[-0.145,0.098],[-0.096,0.101],[-0.1,0.126],[-0.101,0.145],[-0.151,0.097],[-0.17,0.022],[-0.121,0.022],[-0.07,-0.006],[-0.061,0.012],[-0.244,0.223],[-0.099,0.124],[-0.127,0.101],[-0.121,0.148],[-0.075,0.143],[-0.072,0.171],[-0.05,0.123],[-0.076,0.148],[-0.22,0.365],[-0.223,0.443],[-0.049,0.123],[-0.126,0.15],[-0.12,0.125],[-0.201,0.123],[-0.15,0.118],[-0.074,0.175],[-0.05,0.17],[-0.02,0.172],[-0.02,0.124],[-0.021,0.127],[-0.053,0.119],[-0.171,0.098],[-0.197,0.319],[0,0.465],[0.125,0.172],[0.149,0.076],[0.079,-0.016],[0.05,0.01],[0.324,0.023],[0,0.294],[0,0.147],[0,0.146],[0,0],[0.025,0.126],[0.023,0.171],[0.072,0.442],[0.023,0.124],[0.122,0.145],[0.024,0.172],[0,0.465],[0.196,0.419],[0.2,0.321],[0.393,0.197],[0.17,0.047],[0.077,-0.015],[0.078,0.04],[0.097,0.151],[0,0.151],[0,0],[-0.072,0.149],[-0.124,0.149],[-0.027,0.171],[0,0.293],[0,0],[0,0],[-0.096,0.149],[-0.098,0.122],[-0.123,0.075],[-0.078,-0.015],[-0.052,0.011],[-0.122,0],[-0.146,0.021],[0,0],[-0.467,0],[0,0.394],[0.023,0.121],[0,0],[0.075,0.124],[0.224,0.294],[0,0],[0.027,-0.298],[0.027,-0.12],[0.022,-0.127],[0.15,0],[0.147,0],[0.169,0],[0,0],[0,0],[0,0.417],[-0.077,0.22],[-0.097,0.146],[-0.197,0.073],[-0.126,0.02],[-0.467,0],[-0.124,0.02],[-0.098,0.074],[-0.05,0.124],[-0.097,0.148],[-0.171,0.072],[-0.173,0.05],[-0.145,0.019],[-0.15,-0.01],[-0.115,0.009],[-0.123,0.019],[-0.147,0.126],[-0.122,0.149],[-0.124,0.122],[-0.169,0.123],[-0.248,0],[0,0],[-0.148,-0.052],[0,0],[0.124,-0.146],[0.075,-0.145],[0.052,-0.27],[0.246,-0.269],[0.125,-0.149],[0.129,-0.154],[0.047,-0.125],[0,0],[-0.121,0.099],[-0.122,0.123],[0,0],[-0.175,0.122],[-0.246,0.248],[-0.173,0.073],[-0.123,0.02],[-0.173,0],[-0.467,-0.074],[-0.064,0.006],[-0.064,-0.013],[-0.27,-0.146],[-0.098,-0.12],[0,-0.296],[0,0],[0.073,-0.147],[0.098,-0.198],[0.047,-0.124],[0,-0.269],[-0.027,-0.342],[0,0],[0,0],[-0.223,0],[-0.121,-0.021],[-0.176,-0.319],[-0.027,-0.119],[-0.075,-0.273],[-0.029,-0.122],[-0.075,-0.146],[0,-0.245],[0,0],[0.126,-0.175],[0.073,-0.174],[0.049,-0.128],[0,-0.17],[0,0],[0,0],[-0.468,0.27],[0,0],[-0.173,0.096],[-0.222,0.094],[-0.125,0.049],[-0.148,0.05],[-0.173,0.052],[-0.078,-0.014],[-0.078,0.039],[-0.099,0.146],[0,0.121],[-0.025,0.297],[-0.027,0.171],[0,0.149],[0,0],[0.294,0.223],[0.026,0.222],[0.052,0.322],[0.074,0.122],[0.122,0.097],[0.147,0.096],[0.148,0.096],[0.123,0.096],[0.124,0.148],[0.073,0.119],[0.05,0.175],[0,0.222],[-0.124,0.373],[-0.072,0.172],[-0.07,0.122],[-0.101,0.076],[-0.081,-0.014],[-0.053,0.014],[-0.321,0.049],[0,0],[-0.295,0.027],[0,0],[-0.026,0.123],[-0.075,0.122],[-0.15,0.099],[-0.069,-0.013],[-0.064,0.027],[-0.146,0.072],[-0.273,0.37],[-0.125,0.148],[-0.315,0.123],[-0.146,0],[-0.127,-0.02],[-0.66,-0.222],[-0.147,0],[-0.274,0.147],[-0.122,0.076],[-0.144,0.1],[-0.146,0.077],[-0.072,-0.017],[-0.06,0.024],[-0.171,0.047],[-0.145,-0.022],[-0.119,0.021],[-0.147,0.054],[-0.097,0.047],[-0.12,0.095],[-0.024,0.123],[-0.293,0.245],[-0.096,0.126],[-0.097,0.123],[-0.099,0.122],[-0.489,0.42],[-0.145,0.126],[-0.148,0.343],[-0.046,0.121],[-0.071,0.172],[-0.047,0.122],[-0.124,0.295],[-0.076,0.149],[-0.342,0.271],[-0.123,0.068],[-0.124,0.074],[-0.072,-0.017],[-0.058,0.022],[-0.25,0.294],[-0.122,0.151],[-0.097,0.124],[-0.144,0.149],[-0.121,0.151],[-0.025,0.173],[-0.025,0.294],[0,0.145],[-0.026,0.299],[0,0],[-0.072,0.175],[-0.072,0.172],[0,0.419],[0,0],[0,0.146],[0,0],[-0.025,0.118],[-0.047,0.17],[-0.02,0.124],[-0.095,0.272],[-0.099,0.173],[-0.078,0.148],[-0.099,0.146],[-0.096,-0.074],[-0.125,-0.072],[-0.096,-0.072],[-0.125,-0.151],[0,-0.197],[0,-0.148],[0.049,-0.148],[0,-0.218],[-0.054,-0.369],[0,-0.667],[0.046,-0.513],[0.046,-0.123],[0.1,-0.147],[0.096,-0.145],[0,-0.221],[-0.026,-0.2],[-0.148,-0.442],[0,-0.394],[0.072,-0.199],[0.118,-0.125],[0.05,-0.174],[0,-0.246],[0,-0.221],[0,-0.199],[0,-0.148],[0,0],[-0.073,0.15],[-0.049,0.125],[0,0],[-0.074,0.145],[-0.074,0.15],[-0.029,-0.15],[-0.15,-0.249],[-0.146,-0.098],[-0.465,-0.024],[0.028,0.125],[0.052,0.147],[0.052,0.118],[0.097,0.15],[0.123,0.146],[0.097,0.122],[0.075,0.175],[0.121,0.296],[0.072,0.174],[0,0.32],[-0.174,0.321],[-0.021,0.196],[-0.048,0.173],[-0.048,0.126],[-0.074,0.119],[-0.122,0.101],[-0.199,0],[-0.267,-0.151],[-0.392,0],[-0.171,0.053],[0.026,0.124],[0.025,0.145],[0.025,0.122],[0.052,0.293],[0,0.145],[0.048,0.17],[0.024,0.17],[0,0.465],[0.049,0.124],[0.074,0.175],[0.078,0.118],[0.124,0.368],[0.027,0.148],[0,0.149],[0,0.172],[0,0.145],[0,0],[0,0.196],[0,0.172],[0.024,0.121],[0.074,0.12],[0.08,-0.006],[0.037,0.058],[0.023,0.27],[0.019,0.295],[0.019,0.342],[0.025,0.296],[0,0],[0,0],[0.27,-0.047],[0.145,-0.073],[0,0],[0,-0.119],[0,0],[-0.026,-0.148],[0,-0.296],[0,0],[0.067,-0.001],[0.027,0.072],[0,0.169],[0,0.149],[-0.026,0.127],[0,0.293],[0,0],[0.07,0.149],[0.17,0.097],[0.175,0.049],[0.07,-0.007],[0.06,0.01],[0.149,0.124],[0.126,0.077],[0.121,0.073],[0.441,0.443],[0,0],[0,0],[0,0],[0.022,0.148],[0.049,0.148],[0.344,0.466],[0,0],[0,-0.148],[0,0],[0.024,-0.151],[0.075,-0.006],[0.096,0.013],[0.149,0.025],[0,0],[-0.023,0.12],[0,0.247],[0.323,0.271],[0.195,-0.072],[0.169,0],[0,0],[0,0],[0.149,0.027],[-0.07,0.269],[-0.122,0.146],[-0.174,0.045],[-0.074,-0.011],[-0.055,0.012],[-0.296,0.099],[-0.148,0.094],[-0.096,0.145],[-0.145,0.174],[-0.222,0.101],[-0.122,0.025],[-0.146,0.023],[-0.293,0],[-0.217,0.516],[-0.097,0.124],[-0.126,0.101],[-0.124,0.076],[-0.073,0.122],[-0.148,0.097],[-0.121,0.096],[-0.121,0.075],[-0.147,0.12],[-0.144,0.12],[-0.145,0.075],[-0.125,0.051],[-0.071,-0.011],[-0.051,0.026],[-0.072,0.124],[-0.053,0.149],[-0.048,0.123],[-0.07,0.147],[-0.095,0.143],[-0.096,0.103],[-0.323,0.05],[-0.133,-0.015],[-0.168,0.038],[-0.269,0.201],[-0.12,0.15],[-0.144,0.167],[-0.343,0],[-0.399,0],[-0.07,0],[-0.37,0],[0,0],[-0.147,-0.024],[0,0],[-0.148,0.024],[-0.245,0],[0,0],[-0.144,-0.052],[-0.295,0],[-0.193,0.046],[-0.17,0],[0,0],[0,0],[-0.197,0.269],[-0.147,0.099],[-0.198,-0.124],[-0.246,0],[-0.294,0],[-0.197,-0.1],[-0.176,-0.077],[-0.124,-0.048],[-0.147,-0.073],[0.073,-0.121],[0,-0.223],[-0.196,-0.172],[-0.174,0],[0,0],[-0.243,0.298],[-0.122,0.148],[-0.217,0],[-0.367,-0.374],[-0.122,-0.095],[-0.027,0.149],[-0.047,0.148],[-0.124,-0.051],[-0.196,0],[0,0],[0.048,0.121],[0.072,0.175],[0.025,0.099],[0.296,0],[0.146,0],[0,0],[-0.268,0.173],[-0.071,-0.018],[-0.049,0.037],[-0.124,0.144],[-0.08,0.126],[-0.097,0.148],[-0.124,0.149],[-0.198,0.074],[-0.059,-0.008],[-0.066,0.027],[0,0],[-0.098,0.175],[-0.322,0.365],[-0.444,0.368],[-0.418,0],[-0.195,-0.047],[-0.245,0],[0,0],[-0.145,0.077],[-0.222,0],[0,0],[-0.12,-0.095],[-0.175,-0.052],[-0.125,-0.02],[-0.07,0.006],[-0.062,-0.01],[-0.174,-0.075],[0,-0.271],[0,0],[-0.074,-0.127],[-0.069,-0.148],[0,-0.127],[0,-0.295],[0,0],[-0.125,0.095],[-0.129,0.097],[-0.367,0.147],[-0.124,0.075],[-0.146,0.101],[-0.099,0.125],[-0.147,0.122],[-0.175,0.047],[-0.27,0.047],[-0.056,-0.011],[-0.071,0.044],[-0.072,0.121],[-0.049,0.148],[-0.021,0.148],[-0.021,0.294],[-0.053,0.271],[-0.271,0.047],[-0.343,0],[0,0],[0,0],[0.171,-0.074],[0,0],[0.122,-0.074],[0.075,-0.17],[0.023,-0.146],[0.022,-0.123],[0.022,-0.118],[0.025,-0.121],[0.097,-0.343],[0.025,-0.125],[0.074,-0.117],[0.148,-0.098],[0.121,-0.052],[0.17,-0.095],[0.096,-0.1],[0.05,-0.126],[0.046,-0.122],[0.316,-0.195],[0.467,-0.3],[0.49,-0.296],[0.419,-0.347],[0.368,-0.419],[0.147,-0.1],[0.217,-0.247],[0.072,-0.122],[0.197,-0.023],[0.068,0.005],[0.062,-0.011],[0.081,0.005],[0.086,-0.011],[0.145,-0.024],[0.123,-0.023],[0.343,-0.125],[0.149,-0.047],[0.06,0.008],[0.07,-0.025],[0.096,-0.124],[0,-0.193],[0,-0.246],[0.149,-0.367],[0.121,-0.146],[0.103,-0.145],[0.047,-0.127],[0.028,-0.22],[0,-0.194],[0.076,-0.269],[0.099,-0.32],[0.025,-0.349],[0,-0.295],[0,-1.647],[0.049,-0.2],[0.149,-0.15],[0,0],[0,0],[-0.172,0],[-0.171,0.052],[-0.12,0.044],[-0.148,0.025],[-0.122,0],[-0.271,0],[-0.072,0.44],[-0.049,0.123],[-0.121,0.147],[-0.126,0.099],[-0.096,0.147],[-0.073,0.174],[0,0],[-0.073,0.121],[-0.246,0],[0,0],[-0.149,-0.022],[0,0],[-0.12,0.05],[-0.122,0.097],[0,0.175],[0,0],[-0.268,0.268],[-0.121,0.1],[0,0],[0,0],[0.149,0.27],[0.028,0.169],[0,0],[0,0],[-0.07,0.147],[-0.124,0.195],[-0.074,0.124],[-0.224,0],[-0.167,-0.12],[-0.072,-0.097],[-0.126,-0.15],[0,0],[0,0],[0.119,0.12],[0.125,0.325],[0.029,0.126],[0.029,0.125],[0.026,0.149],[0,0.321],[-0.072,0.12],[-0.101,0.051],[-0.144,0.048],[0.025,0.121],[0.071,0.172],[0.062,0.008],[0.068,-0.025],[0.197,0],[0,0],[-0.078,0.268],[-0.124,0.297],[-0.073,0.122],[-0.124,0.098],[-0.245,0.218],[-0.073,0.147],[-0.053,0.127],[-0.026,0.148],[0,0.127],[-0.024,0.344],[-0.024,0.122],[-0.073,0.128],[-0.149,0.097],[-0.125,0.024],[-0.148,0],[-0.273,-0.198],[-0.099,-0.101],[-0.247,0],[-0.203,0.097],[-0.125,0.126],[-0.148,0.124],[-0.121,0.072],[-0.075,-0.172],[-0.048,-0.118],[-0.074,-0.17],[-0.068,-0.006],[-0.06,0.011],[-0.151,0.101],[-0.124,0.121],[-0.22,0.294],[-0.17,0.074],[-0.22,0],[-0.224,-0.024],[-0.116,0],[-0.172,0],[0,0],[-0.025,-0.293],[-0.025,-0.118],[-0.273,-0.174],[-0.078,0.01],[-0.056,-0.011],[-0.418,0.419],[-0.123,0.102],[-0.141,0.099],[-0.097,0.147],[-0.248,0.317],[-0.177,0.168],[-0.171,0.072],[-0.269,0.068],[-0.193,0],[0,0],[-0.318,0.074],[-0.149,0.052],[-0.297,0.098],[-0.151,0.127],[-0.097,0.122],[-0.172,0.077],[-0.124,0.048],[-0.515,0.122],[-0.166,-0.016],[-0.141,0.009],[-0.169,0.051],[-0.149,0.095],[-0.39,0.243],[-0.17,0.026],[-0.292,0],[-0.445,-0.121],[-0.149,-0.096],[-0.197,-0.074],[-0.126,-0.026],[-0.392,0],[0,0],[-0.195,0.025],[0,0],[0.124,0.122],[0.074,0.173],[0.051,0.123],[0,0],[0.074,0.15],[0.07,0.172],[0.048,0.124],[0,0],[0.225,0.345],[0.073,0.146],[0.075,0.121],[0.072,0.124],[0.196,0],[0,0],[0.145,0.098],[0.074,0.099],[-0.149,0.103],[-0.121,0.074],[-0.196,0.046],[-0.149,0],[0,0],[-0.392,0],[0,0],[-0.323,0],[-0.273,0.103],[-0.222,0.244],[-0.126,0.146],[-0.077,0.151],[0,0.224],[0.096,0.171],[0.088,-0.004],[0.035,0.048],[0,0.145],[0,0],[-0.371,0],[-0.169,-0.442],[-0.019,-0.124],[-0.053,-0.147],[-0.22,-0.295],[0,0],[-0.172,-0.049],[-0.121,-0.095],[-0.024,-0.17],[0,-0.464],[0,0],[-0.243,-0.193],[-0.147,-0.124],[-0.297,-0.15],[-0.174,-0.075],[-0.245,0],[0,0],[-0.075,0.17],[0,0.147],[0,0.296],[-0.027,0.146],[0,0],[-0.267,0.021],[0.049,0.469],[0,0.148],[-0.024,0.125],[-0.048,0.121],[-0.122,0.094],[-0.342,-0.172],[-0.171,-0.024],[0,0],[-0.12,0.024],[-0.123,0.074],[-0.122,0.124],[-0.128,0.094],[-0.126,0.07],[-0.071,-0.013],[-0.062,0.024],[-0.151,0.098],[-0.073,0.125],[0,0.144],[0.272,0.147],[0.145,0.029],[0.111,-0.007],[0.132,0.105],[0.074,0.095],[0.096,0.147],[0.146,0.098],[0.345,0],[0,0],[0.271,0],[0.445,0.049],[0,0],[0.072,-0.006],[0.103,0.016],[0.146,0.077],[0.198,0.026],[0.173,0],[0.146,-0.026],[0.171,-0.066],[-0.174,-0.047],[-0.07,0.012],[-0.049,-0.023],[-0.122,-0.097],[0,-0.221],[0,0],[0.048,-0.117],[0.274,0],[0.249,0.345],[0,0.15],[0,0],[0.121,0.074],[0.17,0.046],[0.147,0.02],[0,0],[0.146,0],[0.319,0.097],[0.197,0.072],[0.121,0.046],[0.174,0.046],[0.244,0.126],[0.171,0.151],[0.122,0.173],[0.099,0.075],[0.126,0.049],[0.171,0.025],[0.344,0.026],[0.145,0],[0.339,0],[0.266,0.321],[0.441,0.294],[0.221,0.097],[0.299,0.027],[0.131,-0.006],[0.176,0.015],[0.147,0.048],[0.151,0.096],[0.198,0.073],[0.067,-0.006],[0.061,0.013],[0.148,0.025],[0,0],[0,0],[0.146,0.052],[0.174,0.045],[0.341,0.196],[0.148,0.098],[0.47,-0.024],[0,0],[0.148,-0.051],[0.223,-0.098],[0.22,0],[0.396,0.051],[0,0],[0.173,0.046],[0.196,0.052],[0.068,-0.005],[0.061,0.012],[0.294,0.172],[0.32,0.099],[0.122,0.025],[0.218,0],[0.195,-0.051],[0.123,-0.075],[0,-0.197],[0.047,-0.123],[0.076,-0.176],[0.07,-0.125],[0.146,-0.151],[-0.125,-0.048],[-0.149,-0.101],[-0.1,-0.121],[0,-0.297],[0.025,-0.12],[0.126,-0.149],[0.12,-0.097],[0.172,0],[0,0],[0,0],[0,0],[0,0],[0,0],[-0.415,0.148],[-0.267,0.173],[0,0],[0.126,0.023],[0.174,0],[0,0],[0.023,-0.32],[0.023,-0.124],[0.073,-0.126],[0.124,-0.049],[0.275,0],[0,0],[0.173,0.073],[0.296,0.05],[0.86,0],[0,0],[0.196,-0.023],[0.415,-0.073],[0.221,0],[0.222,0.025],[0.149,0.098],[0.199,0.123],[0.174,0],[0,0],[0,-0.223],[0,-0.144],[0,0],[0,0],[0,0],[0,0],[0.147,0.219],[0.148,0.099],[0.121,0.051],[0.145,0.046],[0.121,0.075],[0.1,0.169],[0,0.295],[-0.048,0.366],[0,0.147],[0.048,0.147],[0.097,0.147],[0.124,0.1],[0.101,0.077],[0.15,0.123],[0.097,0.049],[0.122,0.027],[0.065,-0.005],[0.062,0.014],[0.15,0.024],[0.175,0.023],[0.149,0],[0.296,0],[0.345,0],[0.123,-0.027],[0.15,-0.077],[0.125,-0.074],[0.17,-0.071],[0.175,-0.048],[0.174,0],[0,0],[0.15,0],[0.492,0],[0.368,-0.094],[0.176,-0.028],[0,0],[0.123,0.021],[0.143,0.05],[0.124,0.052],[0.173,0.125],[0.198,0.049],[0.146,0],[0,0],[0.194,0.024],[0.223,0.023],[0.198,0.049],[0.173,0.1],[0,0],[0.272,0.196],[0.147,0.121],[0.126,0.07],[0.296,0],[0,0],[0,0],[-0.148,0.094],[-0.294,0.147],[0,0],[0.063,-0.006],[0.062,0.014],[0.222,0],[0,0],[0.073,-0.271],[0.096,-0.144],[0.323,-0.121],[0.15,0],[0,0],[0.166,0.075],[-0.047,0.149],[-0.051,0.171],[-0.051,0.124],[-0.098,0.147],[-0.098,0.075],[-0.048,0.121],[0.294,0.024],[0.171,0.076],[0.171,0.026],[0.071,-0.009],[0.095,0.028],[0.319,0.052],[0.146,0],[0.193,0],[0.346,0],[0.271,0.077],[0.216,0.048],[0.073,-0.008],[0.094,0.026],[0.295,0.024],[0.213,-0.016],[0.229,0.023],[0.294,0.024],[0.153,0],[0.103,-0.146],[0.031,-0.121],[0,-0.344],[0,0],[0.321,-0.051],[-0.026,-0.147],[-0.099,-0.145],[-0.15,-0.073],[-0.124,-0.076],[-0.1,-0.074],[-0.097,-0.122],[-0.074,-0.148],[-0.026,-0.122],[0,-0.172],[0,-0.144],[0,0],[0.272,0.052],[0.124,0],[0.083,-0.006],[0.084,0.011],[0.119,0.025],[0.171,0.048],[0.175,0],[0.147,0],[0.391,0.025],[0,0],[0,0],[-0.124,-0.072],[0,-0.248],[0.096,-0.243],[0.291,0.194],[0.147,0.122],[0.167,0.126],[0.073,0.125],[0.101,0.149],[0.101,0.07],[0.124,0.023],[0.318,0],[0.149,-0.026],[0.12,-0.073],[0.049,-0.096],[0.122,-0.122],[0.49,0],[0.371,0.244],[0.32,0.046],[0.126,0.022],[0.175,0.048],[0.148,0],[0.122,-0.026],[0.201,0],[0.445,0],[0.099,-0.223],[-0.024,-0.343],[0.025,-0.463],[0.026,-0.296],[0,0],[0.294,0.344],[0.119,0.096],[0.199,0.1],[0.117,0.052],[0.144,0.073],[0.173,0.125],[0.15,0.121],[0,0.444],[0,0],[-0.05,0.121],[0,0.171],[0,0.197],[0,0.293],[0.026,0.346],[0,0.341],[0.072,0.273],[0.074,0.146],[0.121,0.098],[0.196,0.095],[0.174,0.026],[0.273,0],[0.148,-0.217],[0.098,-0.127],[0.075,-0.098],[0.244,0],[0.244,0.393],[0.074,0.146],[0.146,0.126],[0.17,0.023],[0.122,0],[0.118,-0.006],[0.216,0.106],[0.148,0.101],[0.417,0],[0.248,-0.099],[0.175,-0.074],[0.196,-0.097],[0.148,-0.076],[0.197,-0.146],[0,0],[-0.099,-0.15],[-0.027,-0.171],[0,-0.197],[0,-0.174],[0,0],[0.196,-0.073],[0.442,0],[0.391,0.173],[0.214,0.051],[0.323,0.123],[0.17,0.1],[0.249,0],[0.148,-0.05],[0.222,0],[0.121,0.192],[0,0.293],[0,0],[0.17,0.075],[0.171,0.026],[0.149,0],[0.147,0],[0.149,-0.073],[0.171,0],[0.273,0.026],[0,0],[0.17,0],[0,0],[0,0],[0.439,-0.075],[0.123,-0.024],[0.124,-0.07],[0.269,0],[0,0],[0.147,0],[0.175,0],[0,0.29],[0,0.147],[0,0.146],[0,0],[0.101,-0.075],[0.097,-0.122],[0.421,0],[0.194,0.068],[0.147,0.147],[0,0],[-0.298,0.024],[-0.121,0.049],[-0.15,0.097],[-0.121,0.073],[-0.126,0.049],[-0.123,0.069],[0,0.247],[0,0],[0.124,0.124],[0.221,0],[0.343,-0.124],[0.147,-0.104],[0.122,-0.097],[0.097,-0.147],[0.123,-0.124],[0.148,-0.122],[0.245,0],[0,0],[0,0],[-0.048,-0.124],[0,-0.245],[0,0],[0.121,-0.098],[0.149,-0.103],[0.243,0],[0,0],[0.146,0],[0.296,-0.028],[0.17,-0.074],[0.174,-0.025],[0.296,0],[0,0],[0.391,0],[0,0],[0.074,0],[-0.174,0.124],[-0.124,0.121],[-0.123,0.095],[-0.15,0.096],[-0.147,0.05],[-0.138,-0.016],[-0.125,0.024],[-0.122,0.05],[-0.128,0.097],[-0.125,0.096],[-0.198,0.295],[-0.245,0.195],[-0.297,0.026],[0,0],[-0.125,0],[-0.123,0.049],[-0.116,0.097],[-0.07,0.096],[-0.151,0.124],[-0.293,0.027],[0,0],[-0.149,0],[-0.173,0.024],[-0.122,0.024],[-0.147,0.124],[-0.046,0.173],[-0.024,0.121],[-0.046,0.271],[0,0],[-0.026,0.225],[-0.053,0.125],[-0.097,0.12],[-0.08,-0.025],[-0.039,0.049],[0,0.173],[0.023,0.126],[0.071,0.122],[0.08,-0.007],[0.038,0.061],[0.05,0.103],[0.072,0.122],[0.084,-0.024],[0.023,0.048],[0.047,0.124],[0.096,0.148],[0.201,0.099],[0.172,0.026],[0.079,-0.006],[0.088,0.014],[0.149,0],[-0.049,0.467],[0,0],[0.295,0.048],[0.347,0],[0.125,-0.024],[0.147,-0.075],[0.15,-0.096],[0.125,-0.051],[0.29,0.196],[0.121,0.026],[0.244,0],[0.222,-0.027],[0,0],[0,0],[0,0],[-0.123,0.073],[-0.075,0.099],[0,0.319],[0,0.173],[0,0],[0.318,0.022],[0.394,0],[0.148,0],[-0.099,0.121],[-0.321,0.174],[-0.075,-0.012],[-0.055,0.013],[-0.173,0.073],[0,0]],\"o\":[[-0.171,0],[-0.293,0.124],[-0.126,0.024],[-0.471,0.072],[-0.125,0.051],[-0.172,0.073],[-0.174,0.12],[0,0.121],[-0.027,0.122],[-0.074,0.172],[-0.223,0.218],[0.098,0.121],[0.121,0.122],[0,0],[0,0],[-0.054,0.322],[-0.122,0.095],[-0.163,-0.003],[-0.098,0.079],[-0.098,0.151],[-0.121,0.098],[-0.346,0.197],[-0.271,0],[-0.144,-0.029],[-0.144,-0.073],[-0.149,-0.099],[-0.125,-0.049],[-0.122,-0.023],[-0.391,0],[0,0],[-0.346,-0.023],[-0.196,0],[-0.054,0.01],[-0.126,-0.005],[-0.1,0.151],[-0.075,0.17],[-0.022,0.121],[-0.05,0.145],[-0.172,0.103],[0,0],[-0.418,0],[-0.171,0.074],[-0.294,0.124],[-0.121,0.051],[-0.221,0.097],[-0.146,0],[-0.15,-0.024],[-0.149,-0.046],[-0.32,0],[-0.172,0.048],[-0.294,0.15],[-0.175,0.094],[-0.123,0.024],[-0.17,0.05],[-0.393,0],[-0.32,0.073],[-0.146,0.1],[-0.073,0.174],[-0.068,0.121],[-0.059,0.028],[-0.061,-0.008],[-0.17,0.026],[-0.147,0],[-0.123,0.029],[-0.127,0.026],[-0.203,0.076],[0,0.345],[0.069,0.122],[0.269,0.15],[0.151,0.073],[0.051,0.098],[0,0],[-0.021,0.175],[-0.125,-0.024],[-0.466,-0.097],[-0.296,0],[-0.123,0.024],[-0.147,0.075],[-0.149,0.096],[-0.122,0.046],[-0.149,0],[-0.223,-0.051],[-0.419,0],[-0.296,0],[-0.12,0],[-0.147,0.024],[0,0],[-0.175,0],[-0.124,0.024],[-0.101,0.068],[-0.097,0.147],[0,0],[-0.344,0],[0.053,0.124],[0.097,0.177],[0.15,0.147],[0.126,0.15],[0.05,0.268],[0,0.148],[0.028,0.145],[0.05,0.123],[0.296,0.222],[0,0],[0.196,0],[0.147,0.024],[0.169,0.075],[0.147,0.149],[0.025,0.121],[0,0],[-0.075,0.396],[-0.244,0],[-0.147,-0.076],[-0.122,-0.071],[-0.064,-0.023],[-0.067,0.013],[-0.175,-0.047],[-0.125,-0.022],[-0.123,-0.052],[-0.099,-0.098],[-0.067,-0.121],[-0.071,-0.145],[0,0],[-0.344,0],[-0.096,-0.076],[-0.226,-0.173],[-0.145,0],[-0.173,0.045],[-0.124,0.025],[-0.442,0.148],[0,0],[0.148,0.027],[0.298,0],[0.124,0],[0.169,0.027],[0.099,0.151],[0,0.174],[-0.343,-0.021],[-0.122,-0.027],[-0.176,-0.074],[-0.193,-0.097],[0,0],[-0.119,0],[-0.122,0.069],[-0.05,0.102],[-0.101,0.197],[0,0.513],[0.133,0.012],[0.129,-0.006],[0.147,0],[0.465,0.099],[0.148,0.094],[0.125,0.074],[0.124,0.072],[0.097,0.125],[0,0.173],[-0.147,-0.223],[-0.136,-0.066],[-0.118,0],[-0.171,-0.046],[-0.062,-0.011],[-0.068,0.006],[-0.059,-0.011],[-0.069,0.006],[-0.175,-0.048],[-0.124,-0.024],[-0.218,-0.034],[-0.186,0.018],[-0.298,-0.048],[-0.171,-0.072],[-0.075,-0.172],[0,-0.149],[0,0],[0,-0.298],[0.025,-0.17],[0.026,-0.121],[0,-0.148],[-0.026,-0.125],[-0.075,-0.146],[-0.048,-0.119],[-0.122,-0.295],[-0.148,0.052],[-0.073,0.013],[-0.061,-0.006],[0,0.221],[0,0.146],[0.02,0.468],[0,0.149],[0,0],[-0.294,0],[-0.197,0],[-0.146,0],[0,0.243],[-0.03,0.128],[-0.123,0.075],[-0.123,0.069],[-0.346,0.15],[0,0],[0.123,0.515],[0.271,0.246],[0.049,0.125],[0.049,0.269],[0,0.148],[-0.022,0.148],[-0.126,0.244],[0,0],[0,0.173],[0.049,0.17],[0,0.123],[0,0.172],[0,0.145],[0.049,0.319],[0.099,0.125],[0,0],[0.096,-0.122],[0.121,-0.122],[0.147,-0.123],[0,0],[0.149,0],[0.149,0.072],[0.272,0.197],[0.124,0.048],[0.148,0.074],[0.217,0.245],[0.195,0.296],[0.124,0.097],[0.077,0.147],[0,0.32],[-0.074,0.147],[-0.074,0.146],[0,0.174],[0.064,0.011],[0.073,-0.01],[0,0],[0.148,0.073],[0.269,0.132],[0.127,-0.008],[0.149,0],[0,0],[-0.147,0.047],[-0.271,0.05],[0,0],[-0.171,-0.023],[-0.171,-0.075],[-0.123,-0.073],[-0.317,-0.194],[0,0],[0,-0.145],[0,-0.392],[-0.124,-0.121],[-0.047,-0.123],[-0.099,-0.151],[-0.095,-0.075],[-0.171,-0.049],[-0.269,-0.049],[-0.466,0],[-0.147,0],[-0.146,0.025],[-0.148,0.048],[-0.173,0.095],[0,0.147],[0,0.148],[0.096,0.371],[0,0.393],[-0.027,0.116],[-0.078,0.2],[-0.148,0.126],[-0.195,0.148],[-0.099,0.122],[-0.098,0.366],[-0.292,0],[-0.493,0.175],[-0.297,0.166],[-0.07,0.102],[-0.097,0.145],[-0.12,0.07],[-0.291,0],[-0.149,-0.024],[-0.121,-0.05],[-0.17,-0.075],[0,0],[0,0],[0.1,-0.146],[0.1,-0.151],[0.196,-0.073],[0.224,0],[0.144,0.025],[0.269,0.024],[0.296,0],[0.172,-0.026],[0.168,-0.072],[0.122,-0.101],[0.176,-0.267],[0.097,-0.123],[0.27,-0.218],[0.075,-0.096],[0.098,-0.124],[0.118,-0.091],[0.051,-0.097],[0.024,-0.122],[0.069,-0.299],[0.027,-0.122],[0.024,-0.122],[0.025,-0.147],[0,-0.195],[-0.296,0.024],[-0.194,0],[-0.122,-0.052],[-0.15,-0.099],[-0.125,-0.172],[0,-0.393],[0.051,-0.467],[0,0],[0.025,-0.295],[0.095,-0.445],[0,-0.147],[-0.07,-0.32],[-0.023,-0.121],[-0.099,-0.294],[-0.074,-0.174],[-0.073,-0.122],[0,0],[0.293,0],[0.147,0],[0.048,0],[0,0],[-0.393,0],[-0.197,-0.05],[-0.124,-0.023],[-0.271,-0.047],[0,0],[-0.22,0],[-0.393,0],[-0.173,0.074],[-0.144,0.051],[-0.125,0.027],[-0.294,0.027],[-0.148,0],[0,0.469],[0,0.196],[-0.075,0.322],[-0.098,0.151],[-0.249,0.295],[-0.096,0.265],[-0.047,0.174],[-0.129,0.046],[-0.159,0.045],[-0.104,-0.012],[0,0],[-0.169,0],[-0.197,0.122],[0,0],[0.026,0.173],[0.038,0.053],[0.073,-0.02],[0.295,0.224],[0.122,0.244],[0,0.295],[-0.102,0.099],[-0.121,0.097],[-0.171,0.148],[0,0.297],[0.294,0],[0.143,0],[0.146,0.099],[0.117,0.124],[0.049,0.121],[0.073,0.149],[0.073,0.127],[0.148,0.121],[0.101,0.05],[0.294,0.199],[0.1,0.124],[0.049,0.124],[0,0.151],[-0.051,0.199],[-0.071,0.097],[-0.125,0.074],[0,0],[-0.296,0],[-0.32,-0.073],[-0.467,-0.271],[-0.297,-0.022],[-0.466,0],[-0.147,-0.1],[-0.147,-0.098],[-0.163,-0.058],[-0.102,0.014],[-0.149,0],[-0.294,-0.024],[-0.199,-0.073],[-0.097,-0.15],[-0.126,-0.049],[-0.128,-0.048],[-0.194,-0.05],[-0.146,-0.072],[0,0],[-0.174,0],[-0.124,-0.097],[-0.126,-0.099],[0,0],[-0.37,0],[-0.27,-0.152],[-0.12,-0.072],[-0.123,-0.072],[-0.098,-0.047],[-0.147,-0.124],[-0.097,-0.074],[-0.072,-0.04],[-0.057,0.011],[-0.202,-0.049],[0,0],[-0.167,0],[-0.173,0.097],[0,0.22],[0.073,0.197],[0.125,0.145],[0.028,0.123],[0.028,0.171],[0.293,0],[0.148,0],[0.123,0],[0.147,0.045],[0.074,0.099],[0.074,0.17],[0.295,0.099],[0.148,0.075],[0.097,0.124],[0,0.148],[0,0.121],[-0.172,0.32],[-0.12,0.051],[0,0],[-0.121,0],[-0.122,0.074],[-0.071,0.122],[-0.07,0.148],[-0.072,0.124],[0,0],[0,-0.294],[0,-0.147],[0,-0.298],[0,-0.172],[0,0],[-0.121,0.051],[-0.148,0.099],[-0.099,0.121],[-0.097,0.122],[-0.198,0.197],[0,0],[-0.297,-0.027],[-0.08,0.011],[-0.093,-0.02],[-0.146,0.074],[-0.148,0.099],[-0.146,0.072],[0,0],[-0.15,0],[0,0],[0,0],[-0.149,0],[0,0],[0,0],[-0.124,-0.122],[-0.12,-0.121],[-0.104,-0.097],[0.049,-0.147],[0.025,-0.121],[0.095,-0.314],[0,0],[-0.122,0.073],[-0.121,0.097],[-0.122,0.075],[-0.124,0.027],[-0.118,0.018],[-0.184,-0.005],[-0.173,0.079],[-0.269,0.173],[0,0],[-0.469,0],[-0.147,0.048],[-0.098,0.075],[-0.122,0.075],[-0.117,0.026],[0,0],[-0.151,0],[-0.317,0.048],[-0.173,0.05],[-0.294,0.248],[-0.174,0.099],[-0.253,0.042],[-0.286,-0.016],[-0.202,0.074],[0.074,0.145],[0.124,0.196],[0,0.247],[-0.224,0.217],[-0.17,0.078],[-0.121,0.051],[-0.122,0.028],[-0.198,0],[-0.243,0.028],[0,0],[-0.198,0],[-0.146,-0.096],[-0.128,-0.147],[-0.046,-0.096],[-0.123,-0.22],[0,-0.367],[0,0],[0,0],[-0.148,-0.149],[-0.099,-0.049],[-0.12,-0.097],[-0.122,-0.145],[-0.124,-0.171],[-0.293,0],[0,0],[-0.224,-0.026],[-0.125,-0.027],[-0.317,-0.073],[0,0],[-0.144,0],[-0.121,0],[0,0],[0.294,0.051],[0.125,0],[0,0],[0,0.172],[-0.1,0.144],[0,0.147],[0,0.149],[0.072,0.096],[0.123,0.073],[0.148,0.074],[0.147,0.172],[0,0],[-0.022,0.172],[0,0.124],[-0.048,0.467],[0,0.075],[-0.322,-0.024],[-0.122,0],[-0.147,-0.121],[-0.073,-0.103],[-0.098,-0.15],[-0.151,-0.07],[-0.173,0],[-0.174,0.029],[-0.123,0.024],[-0.344,0.024],[-0.148,0],[0,0.145],[-0.05,0.121],[-0.1,0.125],[-0.123,0.048],[-0.267,0.073],[-0.171,0.021],[-0.169,0.072],[-0.097,0.117],[-0.124,0.1],[-0.191,0.096],[0.001,0.003],[0.072,0.295],[0.024,0.151],[0.076,0.126],[0.102,0.095],[0.119,0.077],[0.17,0.12],[0,0.222],[-0.049,-0.024],[-0.293,-0.071],[-0.296,0],[-0.293,-0.024],[0,0],[-0.15,0],[-0.346,-0.026],[-0.169,-0.047],[-0.122,-0.029],[-0.061,-0.011],[-0.069,0.006],[-0.172,-0.024],[-0.177,-0.126],[0,0],[-0.126,0.072],[-0.15,0.099],[-0.044,0.021],[-0.076,-0.017],[-0.197,0.098],[0,0.248],[0.099,0.123],[0.102,0.074],[0.07,0.1],[0.047,0.149],[0,0],[0.344,-0.026],[0.322,0.072],[0.146,0.12],[0,0.197],[0,0],[-0.097,0.122],[-0.125,0.021],[-0.151,0],[-0.121,-0.073],[-0.122,-0.148],[-0.372,-0.296],[-0.061,-0.01],[-0.069,0.006],[-0.318,-0.121],[-0.071,-0.123],[-0.024,-0.121],[-0.024,-0.468],[0,0],[0,0],[0,-0.62],[-0.05,-0.297],[-0.194,-0.179],[-0.163,0.006],[-0.15,-0.026],[-0.144,-0.145],[-0.126,-0.272],[-0.162,-0.116],[-0.12,0.011],[-0.198,-0.047],[-0.272,-0.146],[0,0],[0.126,0.025],[0.122,0.048],[0.121,0.073],[0.245,0.176],[0.295,0.151],[0.147,0.051],[0.269,0.05],[0.206,-0.021],[0.123,0],[0.174,0.074],[0.273,0.176],[0,0],[0.174,0],[0.126,0.051],[0.151,0.073],[0.123,0.053],[0.123,0.019],[0.149,0],[0.293,0.025],[0,0],[0,0],[0.149,-0.026],[0.059,-0.012],[0.068,0.006],[0.125,-0.024],[0.318,-0.098],[0.122,-0.021],[0.297,-0.021],[0.174,-0.05],[0.147,-0.072],[0.125,-0.103],[0.075,-0.148],[0.099,-0.269],[0,-0.467],[0,-0.146],[-0.075,-0.318],[-0.097,-0.148],[-0.144,-0.15],[-0.123,-0.05],[-0.17,-0.046],[-0.292,-0.031],[-0.291,0],[-0.315,-0.079],[-0.128,-0.073],[-0.124,-0.098],[-0.12,-0.097],[-0.146,-0.099],[-0.062,-0.027],[-0.067,0.012],[0,0],[-0.146,-0.073],[-0.126,-0.072],[0,0],[-0.17,-0.074],[-0.122,-0.052],[-0.344,-0.076],[-0.37,0],[-0.223,0.021],[0,0],[-0.198,-0.026],[-0.171,-0.07],[-0.296,-0.22],[0,0],[0,0.222],[-0.074,0.148],[-0.124,0.024],[0,0],[-0.198,-0.023],[0.072,-0.147],[0.075,-0.219],[0,-0.073],[-0.073,-0.126],[-0.124,-0.099],[-0.049,-0.097],[-0.049,-0.173],[0,0],[-0.175,0],[-0.173,0.123],[-0.248,0],[-0.121,-0.076],[-0.099,-0.073],[-0.293,0],[-0.341,-0.029],[-0.128,-0.024],[0,0],[0.145,0],[0.148,0],[0.196,0],[0,0],[-0.1,-0.147],[-0.123,-0.098],[-0.123,-0.025],[-0.323,-0.052],[-0.293,0],[-0.171,-0.05],[-0.124,-0.099],[-0.098,-0.047],[0,0],[0,0],[-0.418,0.051],[0,0],[0,-0.173],[0.127,-0.174],[0.052,-0.098],[0,0],[0.024,0.492],[-0.027,0.147],[0,0],[0,0.17],[0,0],[0.03,-0.147],[0.028,-0.219],[0,-0.244],[-0.099,-0.126],[0,0],[0,0],[0,0],[-0.319,0.221],[-0.148,0.049],[-0.148,0],[-0.122,0],[-0.148,0.075],[0,0.344],[-0.147,0.172],[0,0],[-0.194,-0.021],[-0.171,-0.052],[0.067,-0.124],[0.124,-0.148],[0,0],[-0.493,0],[-0.171,0.05],[-0.194,0.099],[-0.023,0.12],[0,0.172],[0.073,0.196],[0.273,0.098],[0.274,0.023],[0,0],[0,0],[-0.2,0],[-0.345,-0.049],[-0.297,0],[-0.144,-0.022],[0,0],[0,0.418],[0,0.148],[-0.048,0.148],[-0.075,0.149],[0,-0.295],[-0.025,-0.122],[-0.098,-0.126],[-0.062,-0.024],[-0.067,0.013],[-0.174,-0.072],[-0.146,-0.074],[-0.049,-0.024],[-0.07,0.012],[-0.344,-0.171],[-0.269,0],[0,0],[0,0.172],[0,0.199],[0,0.322],[0,0.145],[-0.03,0.169],[-0.172,0.174],[-0.221,0],[-0.078,-0.101],[-0.051,-0.145],[-0.028,-0.122],[-0.126,0.125],[-0.121,0.149],[-0.055,0.027],[-0.063,-0.008],[-0.268,0.072],[0,0],[0.1,0.101],[0.058,0.021],[0.072,-0.017],[0.125,0.075],[0.075,0.1],[0,0],[0,0.176],[-0.124,-0.05],[-0.175,-0.097],[-0.184,-0.041],[-0.119,0.011],[-0.199,0],[0.1,-0.441],[0,-0.171],[-0.22,0.077],[0,0],[-0.176,0.024],[-0.244,0],[-0.412,0],[0.068,0.124],[0.072,0.147],[0,0.173],[-0.395,0],[-0.145,0],[-0.126,0],[-0.175,0.076],[-0.098,0.074],[-0.098,0.074],[-0.171,0.121],[-0.076,0.101],[-0.051,0.038],[-0.07,-0.015],[-0.197,0.124],[0,0],[0.173,0],[0.148,-0.123],[0.126,-0.077],[0.121,-0.031],[0.149,0],[0.147,0],[0.174,-0.052],[0.122,-0.075],[0.063,-0.027],[0.061,0.009],[0.06,-0.01],[0.07,0.006],[0.172,-0.05],[0.344,-0.147],[0.392,0],[0.172,0.049],[0,0],[-0.295,0],[-0.124,0],[-0.121,0.052],[-0.121,0.052],[-0.06,0.012],[-0.071,-0.036],[-0.173,0.071],[-0.067,0.094],[-0.074,0.122],[-0.072,0.124],[-0.075,0.126],[-0.027,0.123],[-0.026,0.295],[-0.418,0],[-0.175,0.27],[-0.099,0.123],[-0.12,0.098],[-0.12,0.098],[-0.12,0.098],[-0.125,0.127],[-0.068,0.122],[-0.025,0.122],[-0.05,0.193],[-0.146,0.149],[-0.049,0.267],[-0.022,0.149],[-0.027,0.123],[0,0],[-0.152,0.075],[-0.294,0.124],[-0.147,0.101],[-0.146,0.094],[-0.071,0.043],[-0.058,-0.012],[-0.121,0.025],[-0.176,0.046],[0,0],[0.146,0],[0.146,0],[0,0],[-0.027,0.197],[-0.025,0.124],[-0.076,0.123],[-0.122,0.071],[-0.172,0.075],[-0.125,0.049],[-0.172,0.1],[-0.149,0.101],[-0.122,0.049],[-0.148,0.094],[-0.098,0.122],[-0.072,0.124],[-0.121,0.222],[-0.417,0],[0,0],[0,0],[0.123,0.297],[-0.444,0.096],[-0.063,0.014],[-0.067,-0.006],[-0.324,0.077],[-0.172,0.075],[-0.147,0.07],[-0.054,0.012],[-0.075,-0.012],[-0.153,0.073],[-0.075,0.096],[-0.025,0.126],[-0.051,0.197],[-0.147,0.073],[-0.12,0],[-0.12,0.024],[-0.171,0.024],[-0.148,0.123],[0,0.147],[0,0.176],[0,0.174],[-0.039,0.065],[-0.079,-0.002],[-0.073,0.124],[0,0.15],[0.026,0.244],[0,0.267],[-0.038,0.05],[-0.076,-0.021],[-0.123,0.095],[0,0],[0,0],[0.175,0],[0.145,0.045],[0.144,0.053],[-0.121,0.124],[-0.097,0.126],[-0.049,0.128],[-0.049,0.12],[-0.049,0.173],[-0.051,0.122],[0,0.196],[0.616,0],[-0.026,0.369],[-0.072,0.173],[-0.071,0.144],[0,0.17],[0,0.122],[0.298,0],[0.067,0.007],[0.095,-0.016],[0.178,0.07],[0.169,0.121],[0,0],[0.147,0.023],[0.221,0.053],[0.392,0],[0.148,-0.075],[0.069,-0.028],[0.06,0.008],[0.122,-0.025],[0.171,-0.076],[0.126,-0.074],[0.12,-0.171],[0.245,-0.298],[0.123,-0.127],[0.124,-0.027],[0.126,-0.027],[0.174,0],[0,0],[0.067,0.012],[0.072,-0.01],[0.148,0.075],[0.095,0.1],[0.045,0.121],[0.072,0.167],[0.095,0.32],[0.023,0.121],[0.052,0.169],[0.145,0.194],[0,0],[0,0.222],[0,0.148],[0.048,0.317],[0.123,0.075],[0.151,0.097],[0.096,0.145],[0,0],[0,0],[0.048,0.295],[0.068,0.151],[0.149,0.148],[0.1,0.119],[0.025,0.121],[0,0.147],[-0.05,0.224],[0,0],[0,0.173],[0.023,0.124],[0,0],[0.022,-0.225],[0.025,-0.122],[0.025,-0.173],[0.095,-0.172],[0.126,-0.024],[0,0],[0.121,0],[0.147,0.027],[0.169,0],[0.169,-0.071],[0.296,-0.146],[0,0],[0,0],[0,-0.146],[0,-0.22],[0,0],[-0.17,0],[-0.055,-0.009],[-0.076,0.011],[-0.121,-0.049],[-0.075,-0.096],[0.172,-0.272],[0.076,-0.146],[0.1,-0.268],[0.021,-0.293],[0,-0.148],[0.051,-0.15],[0.07,-0.144],[0.148,-0.124],[0.125,-0.05],[0.172,-0.076],[0.121,-0.023],[0.057,-0.022],[0.076,0.017],[0.125,-0.095],[0.05,-0.124],[0.072,-0.172],[0.097,-0.148],[0.1,-0.121],[0.027,-0.124],[0,0],[0,-0.201],[-0.294,0],[-0.296,-0.025],[-0.145,0],[0,-0.49],[-0.051,-0.193],[-0.062,-0.026],[-0.071,0.012],[-0.146,-0.099],[-0.098,-0.078],[0,0],[0.146,-0.099],[0.1,-0.12],[0.126,-0.147],[0.072,-0.148],[0.074,-0.267],[0.07,-0.149],[0.125,-0.094],[0.068,-0.027],[0.062,0.008],[0.316,-0.073],[0.144,-0.096],[0.097,-0.124],[0.097,-0.101],[0.155,-0.096],[0.099,0.002],[0.073,-0.011],[0.093,0.016],[0.171,-0.074],[0.122,-0.098],[0.076,-0.125],[0.096,-0.149],[0.104,-0.073],[0.12,-0.02],[0.122,0],[0.119,-0.02],[0.197,-0.101],[0,-0.25],[-0.099,-0.15],[-0.053,-0.122],[0,-0.468],[0.099,-0.145],[0.054,-0.042],[0.065,0.014],[0.171,-0.079],[0.175,-0.13],[0.126,-0.267],[0.05,-0.129],[0.198,-0.173],[0.291,0],[0.059,0.012],[0.066,-0.007],[0.171,0.048],[0.272,0.245],[0.121,-0.047],[0.149,-0.099],[0.124,-0.025],[0.195,0],[0.147,0.1],[0.072,0.124],[0.076,0.121],[0,0],[0,0],[0,0.466],[0,0.142],[-0.052,0.317],[-0.097,0.151],[-0.196,0.146],[-0.418,0],[-0.17,0],[-0.146,0.048],[-0.12,0.1],[-0.104,0.145],[-0.078,0.12],[-0.075,0.123],[-0.149,0.12],[-0.097,0.123],[-0.12,0.125],[-0.292,0.193],[0,0.537],[0,0.247],[-0.097,0.22],[0,0.538],[0,0],[0,0.147],[0.023,0.341],[0.395,0.048],[0.294,0.046],[0.149,0.072],[0.125,0.124],[0.274,0.149],[0.171,0.074],[0.343,0.196],[0,0],[0.173,0],[0.519,-0.224],[0.389,0],[0.225,0],[0.124,0],[0.144,-0.05],[0.096,-0.071],[0.1,-0.123],[0,0],[0.2,0],[0.196,-0.073],[0.075,0],[0.149,0.072],[0.069,0.098],[0.072,0.124],[0,0],[0,0],[-0.148,0.148],[-0.268,0.049],[-0.393,0],[-0.123,0],[-0.172,0.052],[-0.147,0.072],[-0.147,0.122],[-0.098,0.147],[-0.078,0.123],[-0.123,0.145],[-0.126,0.075],[-0.293,0],[-0.197,-0.075],[-0.196,-0.147],[-0.396,0],[-0.271,0.026],[-0.293,-0.025],[-0.149,0],[-0.15,0.048],[-0.176,0.047],[-0.149,0],[-0.169,0],[-0.175,0],[-0.15,0.075],[-0.076,0.102],[-0.103,0.175],[-0.074,0.099],[-0.15,0],[-0.146,0],[-0.171,-0.074],[-0.095,-0.073],[-0.095,-0.048],[-0.145,0],[-0.145,0.051],[-0.122,0.076],[0.171,0.077],[0.062,0.012],[0.067,-0.006],[0.17,0.047],[-0.297,0],[-0.494,0.072],[-0.149,0.046],[0.048,0.12],[0.197,0.271],[0.121,0.022],[0.126,0],[0.224,0.02],[0.22,0],[0.367,-0.1],[0.145,-0.176],[0.245,0],[0.149,0.07],[0.149,0.097],[0.049,0.099],[0.049,0.12],[0.077,0.118],[0.125,0.072],[0.17,0.073],[-0.098,0.124],[-0.319,0.32],[-0.121,0.075],[-0.025,0.121],[-0.049,0.244],[0,0],[-0.198,0],[-0.121,-0.048],[-0.123,-0.099],[-0.051,-0.122],[-0.072,-0.146],[-0.037,-0.049],[-0.082,0.023],[-0.051,-0.099],[-0.025,-0.122],[0,0],[-0.218,0.297],[-0.15,0.094],[-0.124,0.097],[-0.075,0.125],[-0.024,0.12],[-0.024,0.149],[-0.047,0.17],[-0.053,0.125],[-0.077,0.219],[0,0.223],[0.025,0.124],[0.022,0.145],[0,0.193],[-0.099,0.196],[-0.075,0.174],[0,0],[0,0],[-0.148,0],[-0.421,-0.07],[-0.291,-0.025],[-0.293,0],[-0.197,0],[-0.069,0.147],[0,0.172],[0.148,0.323],[0,0],[0,0],[-0.541,-0.317],[-0.147,-0.1],[-0.172,-0.17],[-0.122,-0.027],[-0.175,0],[-0.37,0.097],[-0.148,0.071],[-0.127,0.049],[-0.148,0.075],[-0.148,0.098],[-0.147,0.1],[-0.395,0.196],[-0.295,0],[-0.198,0.048],[-0.221,0.073],[-0.445,0],[-0.368,-0.37],[0,0],[-0.12,0.075],[-0.099,0.05],[-0.149,0],[-0.199,0],[0,0],[-0.316,0],[0.023,0.464],[0,0],[-0.244,0],[-0.142,-0.097],[-0.125,-0.32],[0,0],[0,0],[0,0],[0,-0.149],[0,-0.17],[0,0],[0.32,0],[0.173,0.05],[0.219,0.097],[0.296,0],[0.051,-0.296],[0.023,-0.393],[0,-0.251],[0.095,-0.219],[0,-0.296],[0,0],[-0.173,0],[-0.118,0.01],[-0.154,-0.021],[-0.148,0.052],[-0.149,0.074],[-0.121,0.146],[0,0],[-0.176,0.025],[0.023,-0.294],[0.074,-0.17],[0.045,-0.123],[0,0],[-0.289,0.021],[-0.146,0],[0.025,-0.2],[0.149,-0.293],[0.023,-0.122],[0,-0.151],[-0.05,-0.173],[-0.075,-0.148],[-0.121,-0.149],[-0.15,0],[-0.224,0],[-0.122,0.245],[-0.169,0.32],[-0.072,0.027],[-0.058,-0.008],[-0.174,0.027],[-0.194,0.052],[0,0.247],[0,0],[-0.023,0.124],[-0.099,0.073],[-0.126,0.048],[-0.397,0.145],[0,0.393],[0.094,0.145],[0.097,0.075],[0.147,0.069],[-0.024,0.119],[-0.025,0.147],[0,0.172],[0,0],[0,0.246],[0,0.1],[0,0.149],[0.05,0.172],[0.125,0.294],[0,0],[0,0],[-0.194,0],[-0.397,0.049],[0,0],[-0.267,0],[-0.393,-0.024],[-0.296,0],[-0.147,0.072],[-0.12,0.073],[-0.298,0.124],[-0.097,0.073],[-0.076,0.12],[-0.221,0.294],[-0.198,0],[0,0],[0,0],[-0.147,0],[-0.147,0],[0,0],[0,0],[0,0],[-0.221,0],[-0.148,0.026],[-0.123,0.05],[-0.172,0.073],[-0.321,0.196],[-0.147,0.118],[-0.147,0.072],[0,0],[-0.491,0.052],[0,0],[-0.565,0],[-0.12,0],[-0.124,0.021],[0,0],[0,0],[-0.171,0],[-0.128,-0.012],[-0.144,0.015],[-0.173,-0.03],[-0.095,-0.048],[-0.145,-0.194],[-0.223,0],[0,0],[0.295,0.122],[0,0],[0,0],[0,0],[-0.496,0.027],[-0.171,0],[-0.127,0],[-0.15,0],[-0.198,0],[-0.174,-0.047],[-0.124,-0.072],[-0.296,0.121],[-0.061,0.013],[-0.068,-0.006],[-0.295,0.048],[-0.149,0.102],[-0.077,0.125],[0,0.172],[0.038,0.055],[0.068,-0.017],[0.144,0.098],[0.125,0.077],[0.146,0.072],[0.189,0.045],[0.115,-0.011],[0,0],[0.168,0.026],[0.149,0.074],[0.126,0.076],[0.146,0.098],[0.268,0.272],[0,0],[0.129,0.125],[0.121,0.076],[0.296,0.172],[0.174,0.121],[0,0.222],[-0.049,0.247],[0,0.542],[0.023,0.22],[0,0.223],[-0.223,0.467],[-0.094,0.101],[-0.098,0.099],[-0.397,0.296],[0,0],[-0.198,0],[-0.244,-0.074],[-0.124,-0.026],[-0.392,0],[-0.198,-0.02],[-0.171,-0.098],[-0.149,-0.068],[0,0],[-0.394,0],[-0.196,0],[-0.243,-0.028],[0,0],[-0.147,0.025],[-0.074,0.095],[-0.051,0.15],[0,0],[0,0],[0.098,0.123],[0.127,0.127],[0.122,0.172],[0,0.224],[-0.101,0.368],[0,0.271],[0.05,0.15],[0.075,0.171],[0,0],[0,0.172],[-0.099,0.144],[-0.073,0.122],[-0.269,0.389],[0,0.148],[0.049,0.173],[0,0],[0.101,0.168],[0,0],[0,0],[-0.023,0.175],[-0.068,0.221],[0,0.371],[0,0],[0.347,0],[0.172,0],[0.171,0.073],[0.172,0.099],[0.394,0],[0.194,0],[0.146,0.049],[0.123,0.052],[0,0],[0.146,0.075],[0.101,0.148],[0.071,0.123],[0.07,0.145],[0,0],[0,0],[0.143,-0.05],[0.147,-0.013],[0.121,0.006],[0.296,-0.026],[0.174,-0.05],[0.317,-0.198],[0.149,-0.12],[0.272,-0.146],[0.133,-0.011],[0.126,0.006],[0.175,0],[0.171,-0.051],[0.296,-0.22],[0.346,-0.419],[0.271,-0.096],[0.268,-0.026],[0.179,0.009],[0.295,0],[0,0],[0,-0.172],[-0.123,-0.171],[-0.149,-0.147],[0,-0.221],[0.075,-0.174],[0.171,-0.35],[0,0],[0.075,-0.146],[0.077,-0.124],[0.069,-0.042],[0.055,0.01],[0.27,-0.052],[0.176,-0.051],[0.122,-0.099],[0.122,-0.052],[0.062,-0.025],[0.068,0.012],[0.172,-0.049],[0.067,-0.026],[0.06,0.008],[0.147,-0.048],[0.258,-0.044],[0.152,0.011],[0.296,-0.025],[0,0],[0,0],[-0.025,-0.293],[0,-0.175],[0,-0.294],[0.048,-0.15],[0.2,-0.222],[0.195,-0.048],[0.393,0],[0.062,0.013],[0.067,-0.005],[0.492,0.124],[0.369,0.1],[0,0],[0.147,0],[0.147,0],[0,-0.273],[0.025,-0.12],[0.122,-0.148],[0.121,-0.095],[0.122,-0.052],[0,0],[0.293,0],[0.174,-0.029],[0.175,-0.077],[0.147,-0.099],[0.147,-0.121],[0.147,0],[0.348,0.026],[0.297,0.197],[0.298,0.395],[0.047,0.124],[0.071,0.174],[0.097,0.149],[0.122,0.076],[0,0],[0.146,0.073],[0.174,0.097],[0.052,0.099],[0.12,0.175],[0.149,0.122],[0.126,0.098],[0.174,0.124],[0.119,0.078],[0.173,0.12],[0.144,0.099],[0.295,0.099],[0.077,0.01],[0.09,-0.01],[0.144,0.047],[0.122,0.097],[0.343,0.444],[0.124,0.076],[0.143,0.051],[0.144,0.077],[0.248,0.226],[0.196,0.292],[0.072,0.149],[0.053,0.124],[0.047,0.297],[0,0.297],[-0.788,0],[-0.149,0.073],[-0.127,0.051],[-0.271,0.049],[-0.198,0],[-1.056,0],[0,0],[0.29,0.148],[0.15,0.097],[0.099,0.124],[0.077,0.121],[0.122,0.125],[0.068,0.027],[0.06,-0.008],[0.295,0.048],[0,0],[0,0],[0.146,-0.023],[0.295,-0.124],[0.171,-0.127],[0.057,-0.034],[0.077,0.023],[0.077,-0.1],[0.099,-0.272],[0.025,-0.123],[0.123,-0.148],[0.071,-0.027],[0.059,0.008],[0.27,-0.074],[0,-0.147],[0,-0.147],[0,0],[-0.196,0],[0,0],[-0.148,0],[0,0],[0.027,-0.224],[0,0],[0.343,0],[0.148,0.051],[0.172,0.097],[0.171,0],[-0.224,-0.442],[-0.024,-0.272],[-0.219,-0.025],[-0.062,-0.01],[-0.069,0.007],[-0.173,-0.023],[-0.169,-0.074],[-0.146,-0.124],[-0.126,-0.075],[-0.171,-0.098],[-0.058,-0.022],[-0.076,0.017],[-0.145,-0.123],[-0.099,-0.094],[-0.057,-0.027],[-0.062,0.008],[-0.063,-0.014],[-0.065,0.006],[-0.147,-0.027],[-0.125,-0.049],[-0.124,-0.076],[-0.145,-0.096],[-0.068,-0.027],[-0.06,0.009],[-0.149,-0.019],[-0.067,-0.015],[-0.063,0.005],[0.022,-0.124],[0.048,-0.172],[0,-0.15],[-0.023,-0.221],[-0.147,-0.1],[-0.441,-0.146],[-0.125,-0.072],[-0.048,-0.035],[-0.081,0.022],[-0.072,-0.098],[-0.076,-0.32],[-0.345,-0.022],[-0.342,0],[0,0],[0,0],[0.123,-0.122],[0,0],[0,-0.145],[-0.073,-0.194],[0,-0.248],[0.147,-0.121],[0.217,0],[0.146,0.098],[0.101,0.147],[0.073,0.12],[0.051,0.04],[0.067,-0.015],[0.121,0.051],[0.172,0.074],[0.148,0.095],[0.122,0.074],[0.068,0.028],[0.059,-0.008],[0.172,0.048],[0.17,0.122],[0.094,0.322],[0.053,0.042],[0.065,-0.014],[0.343,0.172],[0.121,0.072],[0.151,0.094],[0.267,0.222],[0.093,0.008],[0.189,-0.009],[0.096,0.073],[0.127,0.149],[0.125,0.103],[0.298,0.176],[0.518,0.268],[0.268,0.101],[0.144,0.073],[0.07,0.098],[0.073,0.173],[0,0.171],[-0.049,0.171],[-0.049,0.122],[-0.049,0.196],[0,0.225],[0.174,0.295],[0,0.297],[0.075,0.317],[0.095,0.127],[0.074,0.047],[0.056,-0.011],[0.121,0.027],[0.296,0.027],[0,0],[0,0],[-0.048,-0.124],[-0.124,-0.027],[-0.174,0],[0.047,0.125],[0.076,0.168],[0.197,0.32],[0.124,0.1],[0.175,0.118],[0.123,-0.145],[0.048,-0.097],[0.098,-0.147],[0.022,0.123],[0.047,0.124],[0.194,0.269],[0.146,0.3],[0,0.146],[0.052,0.223],[0,0],[0.149,0],[0.119,-0.023],[0.119,-0.072],[0.126,-0.149],[0.048,-0.123],[0,0],[0,-0.173],[0,-0.195],[0.119,-0.099],[0.149,0],[0.195,0.049],[0.145,0.024],[0,0],[0.196,0],[0,-0.342],[0,-0.149],[0,-0.076],[0.322,0],[0.151,0],[-0.098,-0.175],[-0.126,-0.15],[-0.152,-0.124],[-0.172,-0.074],[0.049,0.294],[0,0.146],[-0.196,0],[-0.121,-0.048],[-0.194,-0.074],[-0.098,-0.146],[-0.028,-0.118],[-0.028,-0.125],[-0.029,-0.124],[-0.072,-0.148],[-0.099,-0.071],[-0.067,-0.026],[-0.061,0.008],[-0.194,-0.048],[-0.126,-0.148],[-0.026,-0.127],[0,0],[0.026,-0.172],[0,0],[0.145,0.076],[0.147,0.077],[0.268,0.049],[0,0],[0,0],[0.169,-0.025],[-0.147,-0.124],[-0.099,-0.046],[0.099,-0.148],[0.121,-0.147],[0.323,-0.069],[0.342,0],[0.123,0],[0.148,0.027],[0.175,0.073],[0.053,0.011],[0.076,-0.009],[0.126,0.047],[0.101,0.094],[0.049,0.123],[0.068,0.1],[0.15,0.094],[0,0],[-0.122,0.054],[-0.176,0.098],[0,0.417],[0.245,0.223],[0.344,0.245],[0,0.075],[0,0.146],[0,0.147],[0,0],[0,0.174],[0.075,0.173],[0.053,0.086],[0.061,0.072],[0.063,0.048],[0.073,0.062],[0.086,0.073],[0.077,0.051],[0.085,0.099],[0,0.138],[-0.039,0.099],[-0.037,0.063],[-0.041,0.091],[-0.012,0.145],[0,0.219],[0.012,0.075],[0.036,0.083],[0.085,0.035],[0.23,0],[0.012,-0.058],[0.027,-0.108],[0.015,-0.062],[0.016,-0.23],[0,-0.071],[0,-0.234],[0,0],[0.061,0.028],[0.077,0.051],[0.072,0.052],[0.059,0.06],[0.17,0.148],[0.076,0.075],[0.07,0.082],[0.048,0.065],[0.072,0.038],[0.059,0.014],[0.149,0.014],[0.147,0],[0.09,0.026],[0.147,0.05],[0.085,0],[0.073,-0.013],[0.072,-0.046],[0.029,-0.059],[0,-0.084],[0,-0.223],[0,-0.111],[0.036,-0.101],[0.038,-0.065],[0.073,-0.037],[0.17,-0.088],[0.22,0],[0.078,0.049],[0.132,0.138],[0.07,0.057],[0.146,0.124],[0.11,0.075],[0.063,0.048],[0.077,0.049],[0.062,0.027],[0.095,0.041],[0,0],[-0.014,-0.268],[0,0],[0,-0.112],[0,-0.184],[0.124,0.028],[0.072,0],[0.075,0],[0.107,-0.011],[0.272,0],[0.161,0.09],[0.076,0.034],[0.138,0.048],[0.081,0],[0.077,-0.024],[0.062,-0.039],[0.048,-0.061],[0.062,0.035],[0.069,0.119],[0.038,0.063],[0.026,0.058],[0.034,0.133],[0,0.242],[-0.024,0.096],[-0.098,0.196],[-0.011,0.304],[0,0.133],[0.016,0.122],[0.025,0.072],[0.014,0.06],[0.049,0.123],[0.036,0.097],[0,0.141],[-0.034,0.097],[-0.062,0.059],[-0.036,0.072],[-0.05,0.157],[-0.041,0.072],[-0.037,0.071],[-0.123,0.181],[-0.046,0.147],[-0.084,0.174],[-0.098,0.049],[-0.072,0.048],[-0.075,0.065],[-0.025,0.06],[-0.038,0.133],[-0.037,0.382],[-0.075,0.21],[-0.071,0.207],[-0.063,0.058],[-0.075,0.061],[-0.073,0.038],[0,0],[-0.076,0.006],[-0.077,-0.005],[-0.146,0.026],[-0.062,0.011],[-0.043,0.009],[-0.038,-0.002],[-0.062,0],[-0.074,0.014],[-0.102,0.049],[-0.135,0],[-0.088,-0.025],[-0.161,-0.134],[0,0],[-0.112,-0.011],[-0.134,0],[-0.111,-0.012],[-0.201,-0.012],[-0.086,-0.015],[0,0],[-0.088,0],[-0.11,0.009],[0.173,0.084],[0.236,0.096],[0.233,0.062],[0.147,0.013],[0,0],[0,0],[0,0.171],[0.053,0.063],[0.052,0.11],[0,0.088],[0,0.076],[0,0.097],[-0.007,0.31],[0.026,0],[0.248,0.249],[0.073,0.124],[0,0],[0.071,0.17],[0.098,0.145],[0.122,0.144],[0.146,0.048],[0,0],[0.174,0],[0.167,-0.073],[0.077,-0.102],[0.077,-0.168],[0,0],[0.267,0.467],[0.072,0.12],[0.096,0.125],[0.123,0.102],[0.143,0.102],[0.146,0.291],[0.026,0.123],[0.048,0.174],[0.219,0.368],[0.122,0.147],[0.102,0.247],[0,0],[0,0.148],[-0.022,0.49],[0.123,0.195],[0.15,0.049],[0.126,0.047],[0.149,0.074],[0.098,0.126],[0.072,0.126],[0.248,0.395],[0.177,0.296],[0,0],[0.194,0.421],[0,0.171],[-0.026,0.173],[-0.022,0.12],[0,0.297],[0.097,0.144],[0.127,0.101],[0.172,0.097],[0.293,0.243],[0.12,0.123],[0.101,0.122],[0.122,0.172],[0.224,0.297],[0.1,0.196],[0.149,0.174],[0.32,0.42],[0.368,0.492],[0.071,0.121],[0.072,0.171],[0.05,0.148],[0.026,0.292],[0,0.149],[0.026,0.149],[0.148,0.32],[0,0],[0,0.542],[0.294,0.243],[0.298,0.031],[0.468,0],[0.197,-0.076],[0.172,-0.269],[0.223,-0.225],[0.142,-0.051],[0,0],[0.201,0],[0.062,0.013],[0.067,-0.007],[0,0],[0.068,-0.173],[0.122,-0.15],[0.17,-0.124],[0.418,-0.146],[0.176,-0.052],[0.139,-0.034],[0.126,0.015],[0.171,-0.018],[0.126,-0.025],[0.27,-0.025],[0.195,-0.073],[0,0],[0.15,-0.149],[0.122,-0.022],[0.446,-0.076],[0,-0.269],[0,-0.147],[0.123,-0.147],[0.053,-0.04],[0.067,0.015],[0.171,-0.075],[0.12,-0.05],[0.147,-0.051],[0.126,-0.033],[0.122,0],[0,0],[0,-0.227],[0,-0.149],[0,-0.123],[0.098,-0.322],[0,0],[0.021,-0.119],[0.052,-0.146],[0.097,-0.294],[0.1,-0.12],[0.123,-0.051],[0,0],[0.152,0],[0,0],[0.023,-0.142],[0.026,-0.123],[0.049,-0.174],[0.075,-0.146],[0.146,-0.175],[0,0],[0.171,0.051],[0.102,0.072],[0,-0.465],[0.053,-0.515],[0.023,-0.174],[0.02,-0.126],[0.098,-0.102],[0.059,-0.011],[0.07,0.006],[0.295,-0.048],[-0.051,-0.32],[-0.071,-0.2],[-0.055,-0.011],[-0.074,0.01],[-0.147,-0.049],[-0.147,-0.07],[-0.052,-0.093],[-0.052,-0.173],[-0.021,-0.145],[-0.097,-0.198],[-0.266,-0.149],[-0.122,-0.025],[-0.151,-0.025],[0.026,-0.148],[0.078,-0.291],[0,-0.147],[-0.07,-0.122],[-0.122,-0.075],[0,0],[0,0.339],[-0.097,0.316],[-0.074,-0.316],[-0.027,-0.123],[-0.077,-0.148],[-0.102,-0.122],[0,0],[-0.098,-0.123],[-0.124,-0.12],[-0.1,0.124],[-0.118,0.071],[-0.122,0.077],[-0.273,0.148],[-0.099,0.444],[-0.027,0.292],[-0.296,-0.024],[-0.344,0],[0,0],[-0.199,0],[-0.27,-0.069],[-0.103,0],[-0.171,0.077],[-0.148,0.072],[-0.174,0.099],[-0.147,0.148],[-0.318,0],[-0.174,-0.076],[-0.144,-0.146],[-0.027,-0.119],[0,-0.15],[0.051,-0.103],[0.324,-0.218],[0,0],[0.248,0.021],[0.221,0.047],[0.246,0],[0.173,0],[-0.029,-0.122],[-0.145,-0.122],[0,0],[-0.294,0],[0,0],[-0.146,0],[-0.145,0],[-0.395,-0.073],[-0.258,-0.015],[-0.185,0.006],[-0.149,0],[0,0],[0,0],[-0.151,-0.124],[-0.124,-0.075],[-0.175,-0.094],[-0.123,-0.027],[-0.124,-0.027],[-0.147,-0.027],[-0.22,-0.077],[-0.047,-0.17],[-0.047,-0.271],[-0.074,-0.321],[-0.121,-0.168],[-0.026,-0.124],[-0.026,-0.121],[0,-0.196],[-0.028,-0.245],[0,-0.245],[0,-0.171],[0.095,-0.196],[0.196,-0.075],[0.39,0],[0.542,0.123],[0.128,0.124],[0.27,0.25],[0.121,0.146],[0.248,0.418],[0.097,0.176],[0.418,0.245],[0.343,0.17],[0.295,0.248],[0.273,0.174],[0.19,0.045],[0.116,-0.011],[0.148,0],[0.568,0.094],[0,0],[0,0],[0.147,-0.024],[0.137,-0.013],[0.126,0.005],[0.147,-0.025],[0,0],[0.296,0],[0.171,0.049],[0.273,0.193],[0.028,0.127],[0.028,0.121],[0.047,0.146],[0.124,0.094],[0.149,0.077],[0,0],[0.173,0],[0.196,0],[0.168,0.048],[0.127,0.07],[0.099,0.124],[0.171,0.098],[0,0],[0.344,0],[0,0],[0,0],[0,0],[0.393,0],[0.144,0.123],[0.126,0.097],[0.196,0.269],[0.121,0.099],[0.12,0.072],[0.146,0.1],[0.095,0.123],[0.099,0.265],[0.063,0.018],[0.168,-0.004],[0.099,0.124],[0.125,0.097],[0.121,0.077],[0,0],[0.294,0],[0.147,0.026],[0.123,0.024],[0.322,0.121],[-0.468,0],[-0.295,0.026],[-0.147,0.026],[0.025,0.144],[0.073,0.123],[0.102,0.069],[0.121,0.048],[0.175,0.074],[0.124,0.121],[0.248,0.299],[0.168,0.098],[0.172,0.128],[0.122,0.025],[0.147,0],[0.171,-0.072],[0.144,-0.102],[0.244,-0.146],[0.176,-0.075],[0.123,-0.167],[0.419,0],[0.124,0.076],[0.198,0.316],[0,0.295],[0.074,0.344],[0.021,0.121],[0.023,0.295],[0,0],[0,0.196],[-0.026,0.543],[0,0.15],[0.046,0.294],[0.027,0.123],[0.047,0.49],[0.024,0.394],[0.121,0.147],[0.121,0.151],[0.073,0.151],[0.023,0.128],[0.075,0.321],[0.022,0.128],[0.047,0.171],[0.076,0.169],[0.026,0.123],[0.026,0.148],[0.05,0.149],[0.1,0.17],[0.08,0.126],[0.126,0.168],[0.102,0.268],[0,0],[-0.03,0.3],[0,0.565],[0.097,0.169],[0.074,0.124],[0.073,0.149],[0.394,0.641],[0.222,0.445],[0.052,0.119],[0,0],[0.075,0.147],[0.2,0.171],[0.221,0],[0.147,-0.076],[0.073,-0.098],[0.073,-0.148],[0.2,-0.468],[0.102,-0.123],[0.048,-0.024],[0.071,0.012],[0.126,-0.048],[0.198,-0.073],[0.096,-0.122],[0.049,-0.117],[0.07,-0.149],[0.099,-0.25],[0,-0.394],[0.049,-0.172],[0.121,-0.271],[0.073,-0.273],[0.024,-0.297],[-0.026,-0.296],[0,-0.146],[0,0],[0,-0.616],[0,-0.174],[0.075,-0.123],[0.37,-0.271],[0.47,0],[0.219,-0.197],[0.051,-0.147],[0.075,-0.175],[0.127,-0.049],[0.123,-0.045],[0.171,-0.073],[0.15,-0.098],[0.124,-0.073],[0.126,-0.077],[0.145,-0.1],[0.199,-0.27],[0.099,-0.169],[0.124,-0.146],[0.1,-0.125],[0.27,-0.17],[0.127,-0.094],[0.073,-0.125],[0.073,-0.122],[0.069,-0.04],[0.058,0.011],[0.055,-0.011],[0.076,0.01],[0.171,-0.071],[0.071,-0.096],[0.172,-0.272],[0.125,-0.023],[0.089,-0.006],[0.196,0.004],[0.143,-0.096],[0.348,-0.491],[0.027,-0.294],[0,0],[0.175,0],[0.197,0.045],[0,0],[0.173,-0.026],[0.06,-0.024],[0.069,0.012],[0.196,-0.071],[0.123,-0.05],[0.145,-0.1],[0.12,-0.075],[0,0],[0,0],[0.272,0.026],[0.048,0.009],[0.091,-0.022],[0.1,0.119],[0.05,0.102],[0.081,0.15],[0.072,0.123],[0.121,0.12],[0.173,0.269],[0,0.294],[0,0.171],[0.077,0.121],[0.072,0.119],[0.073,0.097],[0.222,0.294],[0.147,0.123],[0.122,0.122],[0.101,0.147],[0,0],[0,0.15],[-0.024,0.312],[0,0],[0.295,-0.072],[0.17,0],[0.126,0.075],[0.073,0.1],[0,0.294],[-0.024,0.148],[-0.147,0.416],[0,0.612],[0.122,0.128],[0.146,0.097],[0.268,0.049],[0,0],[0.124,0],[0.145,-0.051],[0.124,-0.068],[0.147,-0.048],[0.32,-0.1],[0,0],[0,0],[0.02,-0.175],[0.465,0.099],[0.099,0.121],[0.074,0.149],[0.122,0.272],[0.126,0.487],[0.024,0.122],[0.073,0.147],[0.099,0.124],[0.073,0.122],[0,0.59],[0,0.173],[0.052,0.148],[0.101,0.143],[0.246,0.267],[0.12,0.121],[0.12,0.172],[0,0.295],[0,0.32],[0,0.417],[-0.124,0.072],[-0.121,0.046],[-0.122,0.093],[-0.053,0.122],[-0.073,0.441],[0,0],[-0.024,0.296],[-0.026,0.245],[0,0.389],[0.074,0.171],[0.126,0.097],[0.124,0.068],[0.339,0.173],[0.25,0.294],[0.122,0.074],[0.147,0.076],[0.099,0.15],[0.049,0.341],[0.028,0.291],[0.124,0.295],[0.072,0.171],[0.072,0.198],[0.147,0.322],[0,0],[0,0.169],[0.049,0.175],[0.051,0.172],[0.124,0.148],[0.123,0.072],[0.49,0.295],[0.296,0.097],[0.245,0.198],[0.069,0.123],[0.097,0.075],[0.121,0.047],[0.171,0.048],[0.244,0.072],[0,0],[0.198,0],[-0.175,-0.3],[-0.072,-0.116],[-0.098,-0.096],[-0.221,-0.226],[-0.075,-0.323],[0,-0.145],[-0.023,-0.466],[0,-0.125],[-0.022,-0.145],[-0.074,-0.166],[-0.099,-0.439],[0,0],[0,-0.147],[0,0],[0,-0.201],[0,0],[-0.472,0],[-0.149,-0.094],[-0.127,-0.098],[-0.122,-0.097],[-0.17,-0.122],[-0.27,-0.148],[-0.074,-0.009],[-0.092,0.012],[-0.321,-0.096],[-0.097,-0.146],[-0.027,-0.122],[-0.047,-0.272],[0,-0.149],[-0.025,-0.126],[-0.076,-0.124],[-0.124,-0.097],[-0.172,-0.222],[0,0],[0,-0.12],[-0.077,-0.098],[-0.122,-0.073],[0,0],[0,0],[0,-0.563],[0.246,-0.444],[0.1,-0.224],[0,-0.296],[0,-0.22],[0.076,-0.171],[0.12,-0.171],[0.12,0.05],[0.149,0.095],[0.125,0.097],[0.1,0.144],[0.124,0.251],[0.073,0.174],[0.172,0.122],[0,0],[0.146,-0.025],[0.147,-0.023],[0.345,0],[0.222,0.294],[0.122,0.296],[0.121,0.321],[0.149,0.297],[0.197,0.271],[0.072,0.03],[0.057,-0.008],[0.127,0.027],[0.121,0.022],[0.121,0.026],[0.125,0.099],[0,0.344],[-0.075,0.273],[0,0.688],[0.098,-0.146],[0.22,-0.295],[0.15,-0.124],[0.149,-0.125],[0.17,-0.147],[0.123,-0.096],[0.078,-0.12],[0.076,-0.146],[0.052,-0.123],[0.05,-0.122],[0.076,-0.197],[0.198,-0.048],[0.292,0.02],[0.198,-0.028],[0.393,-0.298],[0.172,-0.148],[0.122,-0.054],[0.146,-0.125],[0.072,-0.099],[0.072,-0.269],[0.022,-0.74],[0,0],[0,-0.344],[-0.126,-0.514],[-0.075,-0.315],[-0.02,-0.345],[-0.388,0],[-0.15,-0.027],[-0.173,-0.074],[-0.291,-0.296],[-0.049,-0.121],[-0.076,-0.104],[-0.146,-0.099],[-0.318,-0.196],[-0.174,-0.097],[-0.1,-0.126],[-0.115,-0.152],[-0.12,-0.242],[-0.019,-0.127],[-0.019,-0.174],[-0.098,-0.221],[0,-0.247],[0.024,-0.171],[0.05,-0.17],[0.123,-0.099],[0.126,-0.125],[0.076,-0.146],[0.048,-0.167],[0.023,-0.223],[0.022,-0.17],[0.073,-0.194],[0.126,-0.045],[0.1,-0.044],[0.065,0.012],[0.368,-0.047],[0.061,-0.024],[0.067,0.012],[0.175,-0.077],[0.12,-0.024],[0.296,-0.048],[0.147,0],[0.468,0],[0,0],[0,0.149],[0,0],[-0.122,0.121],[-0.15,0.072],[-0.061,0.025],[-0.068,-0.012],[-0.171,0.072],[-0.148,0.099],[-0.147,0.199],[0,0.219],[0.048,0.172],[0.049,0.148],[0,0],[0.075,-0.541],[0.023,-0.124],[0.049,-0.171],[0.027,-0.148],[0,-0.173],[-0.149,-0.248],[0,0],[0.324,0],[0,0],[0.171,0],[0.198,-0.099],[0.148,-0.102],[0.269,-0.099],[0.295,-0.047],[0,0],[0.145,0],[0.268,0.027],[0.151,0],[0.151,-0.048],[0.17,-0.077],[0.074,-0.121],[0.245,-0.101],[0.149,-0.025],[0.137,-0.011],[0.126,0.007],[0.15,0],[0.054,-0.011],[0.075,0.01],[0.175,-0.074],[0.147,-0.093],[0.125,-0.074],[0.173,-0.075],[0.123,-0.074],[0.101,-0.096],[0.123,-0.146],[0.097,-0.149],[0.145,-0.098],[0.128,0],[0.063,-0.013],[0.065,0.005],[0.319,-0.073],[0.122,-0.096],[0.095,-0.125],[0.147,-0.122],[0.123,-0.149],[0.074,-0.151],[0.049,-0.122],[0.049,-0.148],[0.198,-0.366],[0.247,-0.423],[0.05,-0.124],[0.097,-0.199],[0.124,-0.145],[0.172,-0.17],[0.168,-0.096],[0.149,-0.126],[0.073,-0.17],[0.048,-0.172],[0,-0.125],[0.025,-0.124],[0.029,-0.118],[0.073,-0.174],[0.32,-0.198],[0.246,-0.372],[0,-0.247],[-0.097,-0.147],[-0.069,-0.043],[-0.057,0.01],[-0.294,-0.073],[0,-0.297],[0,-0.149],[0,-0.148],[0,0],[-0.021,-0.126],[-0.047,-0.168],[-0.1,-0.442],[0,-0.127],[-0.05,-0.197],[-0.122,-0.145],[-0.075,-0.443],[0,-0.468],[-0.176,-0.345],[-0.242,-0.367],[-0.174,-0.073],[-0.08,-0.022],[-0.089,0.017],[-0.149,-0.075],[-0.047,-0.097],[0,0],[0,-0.17],[0.099,-0.196],[0.123,-0.15],[0.048,-0.27],[0,0],[0,0],[0.127,-0.099],[0.099,-0.148],[0.098,-0.123],[0.069,-0.042],[0.057,0.012],[0.126,-0.024],[0.149,-0.024],[0,0],[0.464,-0.027],[0.049,-0.394],[0,-0.124],[0,0],[-0.074,-0.125],[-0.198,-0.322],[0,0],[-0.023,0.294],[0,0.145],[-0.023,0.124],[-0.149,0],[-0.148,0],[-0.171,0],[0,0],[0,0],[-0.417,0],[0,-0.245],[0.047,-0.173],[0.099,-0.171],[0.123,-0.024],[0.443,-0.102],[0.147,0],[0.12,-0.028],[0.097,-0.073],[0.07,-0.171],[0.099,-0.148],[0.176,-0.076],[0.149,-0.046],[0.155,-0.031],[0.11,0.009],[0.123,0],[0.172,-0.028],[0.145,-0.123],[0.122,-0.147],[0.172,-0.175],[0.173,-0.125],[0,0],[0.176,-0.023],[0,0],[-0.098,0.121],[-0.124,0.148],[-0.124,0.248],[-0.073,0.365],[-0.097,0.125],[-0.121,0.145],[-0.074,0.093],[0,0],[0.129,-0.072],[0.149,-0.121],[0,0],[0.222,0],[0.272,-0.197],[0.122,-0.122],[0.123,-0.048],[0.15,-0.052],[0.492,0],[0.059,0.01],[0.07,-0.006],[0.299,0.047],[0.145,0.074],[0.196,0.225],[0,0],[0,0.173],[-0.098,0.2],[-0.049,0.119],[-0.1,0.245],[0,0.341],[0,0],[0,0],[0.169,-0.075],[0.146,0],[0.346,0.124],[0.05,0.125],[0.073,0.273],[0.023,0.125],[0.022,0.145],[0.096,0.196],[0,0],[0,0.244],[-0.122,0.149],[-0.05,0.121],[-0.046,0.144],[0,0],[0,0],[0.54,0],[0,0],[0.17,-0.096],[0.196,-0.122],[0.123,-0.052],[0.146,-0.074],[0.169,-0.076],[0.08,-0.024],[0.089,0.017],[0.146,-0.074],[0.047,-0.097],[0.023,-0.268],[0,-0.196],[0,-0.12],[0,0],[-0.397,0],[-0.173,-0.12],[-0.049,-0.343],[0,-0.124],[-0.072,-0.124],[-0.125,-0.099],[-0.149,-0.1],[-0.122,-0.1],[-0.121,-0.099],[-0.072,-0.097],[-0.072,-0.149],[-0.073,-0.193],[0,-0.419],[0.048,-0.166],[0.072,-0.144],[0.078,-0.126],[0.055,-0.038],[0.061,0.011],[0.319,-0.094],[0,0],[0.291,-0.025],[0,0],[0,-0.15],[0.024,-0.127],[0.07,-0.149],[0.048,-0.024],[0.072,0.014],[0.147,-0.05],[0.417,-0.222],[0.097,-0.147],[0.221,-0.268],[0.128,-0.046],[0.151,0],[0.659,0.172],[0.123,0.021],[0.321,0],[0.146,-0.07],[0.15,-0.1],[0.148,-0.097],[0.066,-0.039],[0.063,0.014],[0.17,-0.074],[0.15,-0.056],[0.114,0.017],[0.147,-0.028],[0.12,-0.021],[0.144,-0.098],[0.099,-0.075],[0.223,-0.297],[0.122,-0.097],[0.097,-0.121],[0.102,-0.124],[0.42,-0.467],[0.15,-0.121],[0.298,-0.247],[0.049,-0.121],[0.076,-0.175],[0.052,-0.121],[0.125,-0.298],[0.075,-0.173],[0.219,-0.368],[0.125,-0.074],[0.121,-0.079],[0.064,-0.04],[0.064,0.014],[0.341,-0.172],[0.124,-0.144],[0.098,-0.122],[0.125,-0.169],[0.146,-0.147],[0.125,-0.145],[0.05,-0.272],[0,-0.149],[0.022,-0.296],[0,0],[0.022,-0.169],[0.075,-0.173],[0.176,-0.369],[0,0],[0,-0.151],[0,0],[0,-0.148],[0.025,-0.176],[0.031,-0.122],[0.051,-0.267],[0.078,-0.192],[0.07,-0.124],[0.069,-0.148],[0.122,0.073],[0.122,0.098],[0.098,0.05],[0.149,0.098],[0.121,0.146],[0,0.149],[0,0.172],[-0.052,0.196],[0,0.393],[0.093,0.64],[0,0.513],[0,0.151],[-0.077,0.172],[-0.098,0.15],[-0.1,0.176],[0,0.223],[0.073,0.468],[0.124,0.37],[0,0.221],[-0.075,0.166],[-0.125,0.122],[-0.076,0.224],[0,0.221],[0,0.194],[0,0.147],[0,0],[0.119,-0.095],[0.05,-0.119],[0,0],[0.073,-0.173],[0.072,-0.123],[0.103,0.099],[0.072,0.272],[0.072,0.146],[0.37,0.271],[-0.022,-0.147],[-0.022,-0.148],[-0.024,-0.122],[-0.068,-0.176],[-0.124,-0.169],[-0.1,-0.122],[-0.097,-0.145],[-0.147,-0.291],[-0.078,-0.17],[-0.124,-0.269],[0,-0.394],[0.074,-0.146],[0.026,-0.196],[0.026,-0.122],[0.051,-0.147],[0.074,-0.125],[0.122,-0.096],[0.318,0],[0.345,0.171],[0.197,0],[-0.023,-0.147],[-0.023,-0.144],[-0.025,-0.124],[-0.073,-0.297],[-0.025,-0.121],[0,-0.196],[-0.051,-0.173],[-0.074,-0.445],[-0.025,-0.124],[-0.074,-0.172],[-0.074,-0.149],[-0.198,-0.323],[-0.052,-0.146],[-0.023,-0.122],[0,-0.169],[0,-0.15],[0,0],[0,-0.195],[0,-0.171],[0,-0.146],[-0.052,-0.149],[-0.038,-0.065],[-0.079,0.007],[-0.146,-0.247],[-0.024,-0.272],[-0.029,-0.346],[0,-0.295],[0,0],[0,0],[-0.268,0],[-0.174,0.028],[0,0],[0,0.146],[0,0],[0.021,0.145],[0.049,0.267],[0,0],[-0.055,-0.03],[-0.09,0.001],[-0.075,-0.145],[0,-0.147],[0,-0.148],[0.047,-0.269],[0,0],[-0.024,-0.175],[-0.098,-0.169],[-0.15,-0.073],[-0.062,-0.013],[-0.066,0.005],[-0.193,-0.051],[-0.124,-0.099],[-0.095,-0.07],[-0.517,-0.319],[0,0],[0,0],[0,0],[-0.027,-0.15],[-0.027,-0.172],[-0.17,-0.54],[0,0],[0.024,0.147],[0,0],[0,0.148],[-0.1,-0.013],[-0.073,0.007],[-0.173,-0.027],[0,0],[0,-0.147],[0.049,-0.226],[0,-0.445],[-0.145,0.147],[-0.151,0.047],[0,0],[0,0],[-0.17,0],[0.026,-0.294],[0.053,-0.173],[0.124,-0.149],[0.065,-0.026],[0.061,0.008],[0.295,-0.098],[0.175,-0.049],[0.148,-0.099],[0.15,-0.195],[0.173,-0.197],[0.125,-0.049],[0.149,-0.024],[0.272,-0.048],[0,-0.565],[0.051,-0.146],[0.122,-0.147],[0.122,-0.099],[0.121,-0.073],[0.101,-0.146],[0.122,-0.074],[0.123,-0.103],[0.149,-0.097],[0.145,-0.125],[0.125,-0.1],[0.125,-0.075],[0.058,-0.023],[0.071,0.013],[0.12,-0.072],[0.075,-0.124],[0.048,-0.125],[0.051,-0.147],[0.078,-0.172],[0.078,-0.127],[0.224,-0.219],[0.152,-0.025],[0.149,0.016],[0.322,-0.077],[0.149,-0.096],[0.147,-0.171],[0.194,-0.248],[0.393,0],[0.068,0],[0.374,0],[0,0],[0.172,0],[0,0],[0.147,0],[0.246,-0.024],[0,0],[0.172,0],[0.268,0.099],[0.224,0],[0.151,-0.027],[0,0],[0,0],[0.029,-0.345],[0.099,-0.152],[0.2,0.148],[0.196,0.122],[0.296,0],[0.249,0],[0.172,0.097],[0.12,0.048],[0.17,0.075],[-0.049,0.123],[-0.097,0.169],[0,0.273],[0.124,0.096],[0,0],[0.39,0],[0.124,-0.145],[0.122,-0.146],[0.518,0],[0.125,0.121],[0.023,-0.145],[0.023,-0.173],[0.121,0.051],[0.171,0.073],[0,0],[-0.028,-0.124],[-0.075,-0.172],[-0.027,-0.099],[-0.293,0.025],[-0.146,0],[0,0],[0,-0.344],[0.061,-0.037],[0.071,0.019],[0.148,-0.099],[0.098,-0.126],[0.069,-0.148],[0.096,-0.148],[0.124,-0.149],[0.053,-0.009],[0.076,0.01],[0,0],[0.172,-0.098],[0.27,-0.39],[0.394,-0.441],[0.293,-0.246],[0.219,0],[0.223,0.052],[0,0],[0.175,0],[0.173,-0.095],[0,0],[0.193,0],[0.122,0.101],[0.123,0.045],[0.063,0.014],[0.066,-0.005],[0.171,0.026],[-0.148,0.222],[0,0],[0.022,0.15],[0.076,0.12],[0.052,0.121],[0.052,0.267],[0,0],[0.121,-0.077],[0.145,-0.126],[0.291,-0.273],[0.122,-0.05],[0.144,-0.074],[0.148,-0.098],[0.124,-0.143],[0.122,-0.098],[0.268,-0.099],[0.051,-0.01],[0.079,0.015],[0.126,-0.072],[0.075,-0.123],[0.052,-0.146],[0.05,-0.27],[0.025,-0.296],[0.293,0],[0.319,-0.051],[0,0],[0,0],[-0.144,0.098],[0,0],[-0.15,0.074],[-0.168,0.1],[-0.073,0.148],[-0.025,0.123],[-0.025,0.121],[-0.025,0.121],[-0.072,0.345],[-0.029,0.122],[-0.023,0.122],[-0.073,0.153],[-0.097,0.074],[-0.172,0.07],[-0.126,0.05],[-0.1,0.099],[-0.05,0.122],[-0.15,0.347],[-0.467,0.27],[-0.493,0.316],[-0.469,0.268],[-0.441,0.366],[-0.101,0.122],[-0.27,0.196],[-0.077,0.096],[-0.096,0.174],[-0.063,0.013],[-0.066,-0.006],[-0.085,0.013],[-0.079,-0.006],[-0.149,0.024],[-0.126,0.026],[-0.343,0.101],[-0.148,0.049],[-0.055,0.012],[-0.075,-0.01],[-0.144,0.051],[-0.126,0.15],[0,0.248],[0,0.417],[-0.072,0.199],[-0.1,0.122],[-0.05,0.099],[-0.071,0.17],[-0.025,0.198],[0,0.295],[-0.073,0.319],[-0.097,0.319],[0,0.295],[0,1.649],[0,0.223],[-0.049,0.196],[0,0],[0,0],[0.174,0],[0.196,0],[0.125,-0.025],[0.15,-0.051],[0.123,-0.025],[0.244,-0.02],[0,-0.465],[0,-0.124],[0.075,-0.173],[0.102,-0.121],[0.145,-0.122],[0.1,-0.147],[0,0],[0.077,-0.146],[0.126,-0.199],[0,0],[0.168,0],[0,0],[0.15,0],[0.151,-0.073],[0.121,-0.101],[0,0],[0.27,-0.272],[0.123,-0.125],[0,0],[0,0],[0,-0.318],[-0.07,-0.173],[0,0],[0,0],[0.028,-0.169],[0.099,-0.197],[0.073,-0.127],[0.122,-0.172],[0.223,0],[0.1,0.075],[0.122,0.146],[0,0],[0,0],[-0.097,-0.123],[-0.248,-0.244],[-0.045,-0.118],[-0.025,-0.12],[-0.025,-0.145],[-0.047,-0.294],[0,-0.172],[0.075,-0.123],[0.123,-0.076],[-0.021,-0.123],[-0.049,-0.172],[-0.055,0.012],[-0.075,-0.01],[-0.168,0.073],[0,0],[0.021,-0.296],[0.098,-0.321],[0.046,-0.122],[0.078,-0.148],[0.245,-0.222],[0.122,-0.099],[0.074,-0.122],[0.045,-0.145],[0.025,-0.121],[0.049,-0.32],[0,-0.147],[0.022,-0.124],[0.075,-0.144],[0.097,-0.075],[0.121,-0.024],[0.344,0],[0.121,0.074],[0.168,0.172],[0.246,0],[0.144,-0.073],[0.123,-0.121],[0.122,-0.097],[0.101,0.148],[0.052,0.124],[0.073,0.176],[0.061,-0.012],[0.067,0.006],[0.176,-0.049],[0.146,-0.099],[0.269,-0.273],[0.096,-0.148],[0.195,-0.072],[0.222,0],[0.147,0],[0.152,0.025],[0,0],[0,0.294],[0,0.148],[0.099,0.323],[0.053,0.027],[0.063,-0.009],[0,-0.613],[0.098,-0.093],[0.148,-0.099],[0.151,-0.098],[0.246,-0.32],[0.146,-0.196],[0.119,-0.125],[0.245,-0.098],[0.176,-0.051],[0,0],[0.342,0],[0.147,-0.022],[0.293,-0.097],[0.17,-0.048],[0.124,-0.097],[0.124,-0.148],[0.122,-0.047],[0.467,-0.246],[0.189,-0.044],[0.115,0.01],[0.194,0],[0.171,-0.048],[0.366,-0.271],[0.151,-0.074],[0.271,-0.049],[0.467,0],[0.169,0.052],[0.171,0.099],[0.121,0.05],[0.367,0.094],[0,0],[0.193,0],[0,0],[-0.148,-0.097],[-0.123,-0.124],[-0.047,-0.122],[0,0],[-0.072,-0.175],[-0.074,-0.145],[-0.05,-0.122],[0,0],[-0.415,0],[-0.071,-0.121],[-0.048,-0.124],[-0.072,-0.124],[-0.1,-0.148],[0,0],[-0.195,0],[-0.101,-0.071],[0.148,-0.123],[0.122,-0.074],[0.171,-0.096],[0.126,-0.026],[0,0],[0.369,0.046],[0,0],[0.319,0],[0.292,0],[0.32,-0.121],[0.122,-0.145],[0.099,-0.128],[0.096,-0.194],[0,-0.221],[-0.029,-0.065],[-0.078,0.002],[-0.075,-0.095],[0,0],[0.371,-0.028],[0.488,0],[0.05,0.125],[0.05,0.145],[0.143,0.343],[0,0],[0.194,0],[0.171,0.048],[0.123,0.098],[0.1,0.447],[0,0],[0.346,0],[0.149,0.099],[0.245,0.194],[0.173,0.076],[0.218,0.095],[0,0],[0.169,-0.046],[0.048,-0.124],[0.025,-0.294],[0,-0.15],[0,0],[0.273,-0.024],[0,-0.468],[0,-0.148],[0,-0.145],[0.028,-0.122],[0.049,-0.147],[0.298,0.216],[0.175,0.078],[0,0],[0.142,0],[0.146,-0.049],[0.146,-0.097],[0.123,-0.121],[0.119,-0.101],[0.048,-0.026],[0.069,0.012],[0.169,-0.075],[0.125,-0.073],[0.074,-0.119],[0,-0.323],[-0.151,-0.074],[-0.11,-0.027],[-0.163,0.01],[-0.099,-0.072],[-0.099,-0.151],[-0.098,-0.149],[-0.267,-0.198],[0,0],[-0.271,0.028],[-0.443,0],[0,0],[-0.081,-0.009],[-0.082,0.006],[-0.198,-0.02],[-0.174,-0.099],[-0.151,-0.026],[-0.174,0],[-0.171,0.026],[0.147,0.099],[0.062,0.025],[0.07,-0.012],[0.124,0.074],[0.151,0.124],[0,0],[-0.021,0.122],[-0.098,0.224],[-0.439,0],[-0.048,-0.095],[0,0],[0,-0.174],[-0.147,-0.097],[-0.149,-0.048],[0,0],[-0.122,0],[-0.342,-0.024],[-0.196,-0.046],[-0.124,-0.052],[-0.176,-0.074],[-0.27,-0.099],[-0.194,-0.093],[-0.147,-0.121],[-0.076,-0.098],[-0.099,-0.073],[-0.168,-0.075],[-0.322,-0.047],[-0.145,0],[-0.344,-0.026],[0,-0.42],[-0.346,-0.417],[-0.223,-0.147],[-0.246,-0.096],[-0.167,-0.011],[-0.139,0.006],[-0.172,0],[-0.174,-0.047],[-0.167,-0.098],[-0.062,-0.01],[-0.066,0.006],[-0.147,-0.048],[0,0],[0,0],[-0.174,0],[-0.176,-0.049],[-0.39,-0.127],[-0.149,-0.077],[-0.467,0],[0,0],[-0.171,0],[-0.223,0.096],[-0.195,0.073],[-0.417,0],[0,0],[-0.198,0],[-0.194,-0.048],[-0.063,-0.011],[-0.067,0.007],[-0.321,-0.098],[-0.298,-0.17],[-0.122,-0.022],[-0.194,-0.027],[-0.222,0],[-0.146,0.025],[-0.146,0.097],[0,0.149],[-0.075,0.17],[-0.048,0.148],[-0.102,0.169],[0.122,0.051],[0.169,0.073],[0.12,0.073],[0.172,0.223],[0,0.145],[-0.048,0.198],[-0.099,0.122],[-0.122,0.099],[0,0],[0,0],[0,0],[0,0],[0,0],[0.464,0],[0.32,-0.1],[0,0],[-0.12,-0.029],[-0.146,-0.025],[0,0],[0,0.319],[0,0.148],[-0.049,0.149],[-0.075,0.121],[-0.22,0.096],[0,0],[-0.172,-0.026],[-0.267,-0.126],[-0.833,-0.12],[0,0],[-0.194,0],[-0.418,0.05],[-0.221,0.025],[-0.22,0],[-0.198,-0.024],[-0.194,-0.151],[-0.124,-0.075],[0,0],[-0.021,0.223],[0,0.145],[0,0],[0,0],[0,0],[0,0],[0,-0.294],[-0.099,-0.151],[-0.122,-0.073],[-0.147,-0.047],[-0.151,-0.047],[-0.175,-0.097],[-0.146,-0.246],[0,-0.394],[0,-0.124],[0,-0.171],[-0.075,-0.169],[-0.074,-0.12],[-0.097,-0.074],[-0.147,-0.126],[-0.097,-0.071],[-0.097,-0.05],[-0.058,-0.009],[-0.07,0.007],[-0.149,-0.021],[-0.166,-0.023],[-0.122,-0.029],[-0.292,-0.023],[-0.343,-0.023],[-0.148,0],[-0.148,0.024],[-0.147,0.073],[-0.143,0.077],[-0.175,0.075],[-0.148,0.051],[0,0],[-0.149,0.026],[-0.488,0.021],[-0.392,0],[-0.174,0.052],[0,0],[-0.145,0],[-0.145,-0.028],[-0.124,-0.049],[-0.193,-0.094],[-0.176,-0.121],[-0.122,-0.021],[0,0],[-0.198,0],[-0.217,-0.023],[-0.222,-0.029],[-0.194,-0.048],[0,0],[-0.297,-0.148],[-0.146,-0.097],[-0.121,-0.099],[-0.246,-0.15],[0,0],[0,0],[0.122,-0.121],[0.267,-0.176],[0,0],[-0.073,-0.01],[-0.067,0.007],[-0.195,-0.048],[0,0],[-0.024,0.298],[-0.046,0.174],[-0.197,0.295],[-0.121,0.052],[0,0],[-0.175,-0.025],[0.07,-0.148],[0.076,-0.17],[0.021,-0.125],[0.068,-0.17],[0.076,-0.094],[0.098,-0.076],[-0.296,0],[-0.197,0],[-0.172,-0.072],[-0.076,-0.011],[-0.089,0.011],[-0.322,-0.094],[-0.123,-0.022],[-0.197,0],[-0.346,0.023],[-0.291,0],[-0.219,-0.047],[-0.08,-0.012],[-0.088,0.011],[-0.294,-0.075],[-0.248,-0.038],[-0.188,0.015],[-0.293,-0.025],[-0.15,0],[-0.196,0],[-0.071,0.097],[-0.071,0.321],[0,0],[-0.343,0],[0,0.145],[0.028,0.194],[0.099,0.148],[0.146,0.075],[0.123,0.073],[0.123,0.075],[0.128,0.149],[0.053,0.12],[0.022,0.147],[0,0.147],[0,0],[-0.266,-0.051],[-0.122,-0.025],[-0.09,-0.013],[-0.078,0.006],[-0.124,-0.027],[-0.176,-0.048],[-0.149,-0.026],[-0.143,0],[-0.391,0],[0,0],[0,0],[0.151,0.075],[0.196,0.127],[0,0.267],[-0.372,-0.072],[-0.147,-0.101],[-0.147,-0.124],[-0.127,-0.098],[-0.096,-0.15],[-0.047,-0.1],[-0.098,-0.076],[-0.296,-0.073],[-0.169,0],[-0.12,0],[-0.123,0.073],[-0.1,0.146],[-0.346,0.348],[-0.444,0],[-0.343,0],[-0.12,0],[-0.172,-0.048],[-0.123,-0.051],[-0.148,0],[-0.174,0.048],[-0.439,0],[-0.245,0],[-0.124,0.294],[0.025,0.467],[-0.024,0.294],[0,0],[0,-0.464],[-0.124,-0.144],[-0.175,-0.149],[-0.122,-0.048],[-0.175,-0.07],[-0.173,-0.097],[-0.171,-0.122],[-0.32,-0.273],[0,0],[0,-0.145],[0.048,-0.149],[0,-0.194],[-0.025,-0.296],[0,-0.344],[-0.025,-0.341],[0,-0.297],[-0.049,-0.148],[-0.075,-0.172],[-0.175,-0.146],[-0.147,-0.071],[-0.248,-0.048],[-0.271,0],[-0.075,0.121],[-0.074,0.095],[-0.122,0.172],[-0.467,0],[-0.075,-0.146],[-0.096,-0.171],[-0.145,-0.121],[-0.125,-0.029],[-0.137,-0.019],[-0.198,0.008],[-0.175,-0.079],[-0.318,-0.246],[-0.272,0],[-0.169,0.046],[-0.195,0.101],[-0.177,0.072],[-0.198,0.094],[0,0],[0.076,0.169],[0.098,0.146],[0.021,0.173],[0,0.171],[0,0],[-0.221,0],[-0.397,0.15],[-0.442,0],[-0.221,-0.097],[-0.321,-0.096],[-0.194,-0.072],[-0.199,-0.101],[-0.171,0],[-0.194,0.049],[-0.243,0],[-0.149,-0.251],[0,0],[-0.146,-0.101],[-0.172,-0.073],[-0.127,-0.022],[-0.143,0],[-0.171,0],[-0.145,0.076],[-0.298,0],[0,0],[-0.147,-0.025],[0,0],[0,0],[-0.464,0],[-0.125,0],[-0.123,0.024],[-0.222,0.128],[0,0],[-0.15,0],[-0.174,0],[0,-0.293],[0,-0.149],[0,-0.15],[0,0],[-0.124,0.075],[-0.121,0.097],[-0.273,0.294],[-0.22,0],[-0.198,-0.079],[0,0],[0.297,0],[0.149,0],[0.174,-0.075],[0.122,-0.074],[0.104,-0.077],[0.147,-0.075],[0.198,-0.125],[0,0],[-0.05,-0.151],[-0.147,-0.148],[-0.39,0],[-0.171,0.05],[-0.124,0.069],[-0.153,0.125],[-0.099,0.15],[-0.126,0.125],[-0.173,0.147],[0,0],[0,0],[0.025,0.149],[0.072,0.221],[0,0],[-0.052,0.146],[-0.124,0.101],[-0.197,0.12],[0,0],[-0.15,0],[-0.296,-0.028],[-0.197,0],[-0.172,0.074],[-0.266,0.051],[0,0],[-0.393,0.025],[0,0],[-0.071,0],[0.226,-0.025],[0.147,-0.098],[0.122,-0.127],[0.127,-0.098],[0.121,-0.071],[0.143,-0.039],[0.119,0.015],[0.124,0],[0.149,-0.075],[0.121,-0.103],[0.271,-0.251],[0.192,-0.271],[0.22,-0.173],[0,0],[0.147,0],[0.124,0],[0.149,-0.05],[0.1,-0.074],[0.1,-0.151],[0.218,-0.173],[0,0],[0.15,0],[0.194,0],[0.123,-0.024],[0.17,-0.048],[0.151,-0.124],[0.027,-0.122],[0.075,-0.275],[0,0],[0.027,-0.221],[0.023,-0.145],[0.047,-0.147],[0.038,-0.05],[0.079,0.024],[0.097,-0.125],[0,-0.145],[-0.026,-0.122],[-0.04,-0.062],[-0.08,0.005],[-0.07,-0.124],[-0.07,-0.122],[-0.039,-0.05],[-0.082,0.025],[-0.051,-0.101],[-0.075,-0.173],[-0.145,-0.2],[-0.174,-0.074],[-0.087,-0.011],[-0.081,0.007],[-0.121,-0.024],[-0.05,-0.467],[0,0],[-0.32,0],[-0.319,-0.049],[-0.148,0],[-0.147,0.048],[-0.143,0.076],[-0.099,0.08],[-0.245,-0.269],[-0.098,-0.05],[-0.222,-0.051],[-0.22,0],[0,0],[0,0],[0,0],[0.097,-0.12],[0.098,-0.072],[0.195,-0.22],[0,-0.169],[0,0],[-0.319,0],[-0.397,-0.024],[-0.147,0],[0.072,-0.146],[0.194,-0.268],[0.069,-0.028],[0.06,0.009],[0.169,-0.051],[0,0],[0,0]],\"v\":[[172.657,-138.643],[172.24,-138.443],[171.456,-138.15],[171.064,-138.15],[169.88,-137.757],[169.486,-137.658],[169.095,-137.364],[168.801,-136.872],[168.801,-136.481],[168.801,-136.086],[168.508,-135.69],[167.719,-135.299],[167.915,-134.906],[168.306,-134.713],[168.212,-134.244],[164.28,-134.244],[164.081,-133.432],[163.65,-133.343],[163.196,-133.239],[163.196,-132.843],[162.899,-132.447],[162.507,-132.252],[161.425,-132.151],[160.736,-132.151],[160.344,-132.349],[159.952,-132.643],[159.658,-133.038],[159.264,-133.136],[158.868,-133.136],[157.887,-133.136],[157.493,-133.136],[156.61,-133.432],[156.117,-133.333],[155.944,-133.328],[155.626,-133.239],[155.331,-132.843],[155.428,-132.349],[155.331,-131.955],[154.939,-131.761],[154.421,-131.564],[152.308,-131.564],[151.298,-131.171],[150.808,-130.974],[150.019,-130.583],[149.628,-130.484],[149.137,-130.088],[148.746,-130.189],[148.548,-130.583],[148.103,-130.583],[147.27,-130.484],[146.874,-130.189],[146.092,-129.791],[145.696,-129.401],[145.301,-129.304],[144.813,-129.304],[143.829,-129.205],[143.043,-128.812],[142.746,-128.419],[142.647,-127.924],[142.454,-127.535],[142.235,-127.527],[142.058,-127.535],[141.568,-127.535],[141.175,-127.437],[140.783,-127.337],[140.391,-127.238],[139.993,-126.845],[140.391,-126.057],[140.783,-125.863],[141.663,-125.566],[142.058,-125.368],[142.058,-124.978],[142.058,-124.585],[141.764,-124.19],[141.371,-124.289],[140.092,-124.485],[139.306,-124.386],[138.913,-124.289],[138.618,-123.893],[138.225,-123.597],[137.834,-123.597],[137.441,-123.597],[136.947,-123.994],[135.866,-123.893],[135.079,-123.893],[134.684,-123.797],[134.271,-123.597],[132.449,-123.597],[132.033,-123.7],[131.639,-123.597],[131.538,-123.207],[131.246,-122.816],[129.204,-122.816],[128.491,-122.225],[128.691,-121.832],[129.079,-121.437],[129.472,-121.045],[129.866,-120.748],[129.866,-119.963],[129.866,-119.566],[130.066,-119.177],[130.163,-118.784],[131.149,-118.685],[131.736,-118.685],[132.227,-118.784],[132.624,-118.585],[132.918,-118.195],[133.309,-117.799],[133.309,-117.408],[133.309,-117.015],[132.423,-116.421],[131.835,-116.619],[131.441,-116.818],[131.246,-117.212],[131.05,-117.211],[130.855,-117.212],[130.361,-117.408],[129.967,-117.503],[129.571,-117.604],[129.472,-117.998],[129.376,-118.391],[128.983,-118.585],[126.647,-118.585],[125.839,-118.978],[125.743,-119.373],[124.949,-119.566],[124.559,-119.566],[124.168,-119.274],[123.772,-119.177],[122.594,-118.881],[122.691,-118.491],[123.082,-118.391],[123.871,-118.391],[124.267,-118.391],[124.559,-117.998],[124.853,-117.604],[124.658,-117.212],[123.772,-117.306],[123.381,-117.408],[123.082,-117.799],[122.447,-117.799],[122.197,-117.799],[121.806,-117.799],[121.611,-117.408],[121.514,-117.015],[121.116,-116.619],[122.103,-115.736],[122.48,-115.736],[122.889,-115.736],[123.283,-115.639],[124.46,-115.144],[124.756,-114.752],[125.149,-114.655],[125.543,-114.458],[125.743,-114.066],[125.543,-113.67],[125.149,-114.262],[124.72,-114.326],[124.361,-114.36],[123.97,-114.655],[123.775,-114.654],[123.576,-114.655],[123.383,-114.654],[123.184,-114.655],[122.79,-114.95],[122.396,-115.05],[121.813,-115.048],[121.219,-115.05],[120.431,-115.344],[120.04,-115.736],[119.746,-116.128],[119.842,-116.525],[119.842,-117.306],[119.842,-118.096],[120.137,-118.491],[120.137,-118.881],[120.137,-119.274],[120.04,-119.669],[119.644,-119.867],[119.644,-120.257],[119.249,-121.045],[118.858,-120.849],[118.66,-120.848],[118.464,-120.849],[118.464,-120.257],[118.566,-119.867],[118.566,-118.685],[118.464,-118.29],[118.464,-117.847],[117.678,-117.896],[117.186,-117.799],[116.796,-117.847],[116.796,-117.212],[116.694,-116.818],[116.301,-116.619],[115.91,-116.525],[115.415,-115.639],[115.415,-115.441],[116.301,-114.36],[116.991,-113.67],[116.991,-113.277],[117.186,-112.491],[117.087,-112.098],[116.892,-111.705],[116.4,-111.117],[116.4,-110.92],[116.595,-110.525],[116.694,-110.034],[116.796,-109.642],[116.595,-109.247],[116.694,-108.853],[117.087,-108.069],[117.504,-107.871],[119.447,-107.871],[119.746,-108.265],[120.137,-108.561],[120.527,-108.951],[120.725,-108.951],[121.116,-108.853],[121.413,-108.462],[122.197,-107.968],[122.594,-107.871],[122.988,-107.577],[123.381,-106.79],[124.066,-106.099],[124.46,-105.808],[124.756,-105.413],[124.46,-104.626],[124.168,-104.232],[123.772,-103.941],[123.97,-103.546],[124.152,-103.552],[124.361,-103.546],[124.756,-103.349],[125.051,-102.954],[125.818,-102.851],[126.23,-102.857],[126.621,-102.76],[126.331,-102.367],[125.936,-102.169],[125.149,-102.071],[124.756,-102.071],[124.361,-102.367],[123.97,-102.66],[123.576,-102.76],[123.381,-103.741],[123.381,-104.334],[123.477,-104.727],[122.889,-105.512],[122.495,-105.709],[122.495,-106.099],[122.197,-106.494],[121.806,-106.594],[121.314,-106.691],[120.527,-106.79],[119.348,-106.691],[118.954,-106.691],[118.566,-106.494],[118.17,-106.296],[117.775,-105.903],[117.876,-105.512],[117.975,-105.119],[118.267,-104.134],[118.071,-103.148],[117.975,-102.76],[117.581,-102.367],[117.186,-102.071],[116.694,-101.676],[116.301,-101.38],[116.301,-100.4],[115.517,-100.4],[114.339,-99.708],[113.546,-99.222],[113.546,-98.824],[113.254,-98.43],[112.861,-98.43],[112.072,-98.533],[111.68,-98.727],[111.287,-98.824],[110.868,-99.12],[108.536,-99.12],[108.142,-99.32],[108.436,-99.708],[108.73,-100.104],[109.319,-100.104],[109.913,-100.104],[110.305,-99.907],[111.092,-99.907],[111.878,-99.907],[112.274,-100.204],[112.665,-100.497],[113.056,-100.792],[113.449,-101.579],[113.845,-101.778],[114.529,-102.464],[114.629,-102.857],[115.025,-103.057],[115.415,-103.252],[115.415,-103.645],[115.517,-104.035],[115.808,-104.824],[115.91,-105.217],[116.009,-105.609],[116.202,-105.981],[116.103,-106.47],[115.316,-106.397],[114.827,-106.494],[114.339,-106.691],[114.042,-107.083],[113.943,-107.676],[114.137,-108.658],[114.137,-109.835],[114.137,-110.23],[114.339,-111.016],[114.529,-112.196],[114.529,-112.591],[114.137,-113.377],[114.042,-113.772],[113.746,-114.554],[113.449,-114.95],[113.254,-115.316],[113.254,-117.752],[114.042,-117.702],[114.434,-117.799],[114.529,-117.752],[114.556,-120.159],[113.546,-120.257],[113.157,-120.652],[112.762,-120.748],[111.977,-120.748],[111.188,-120.748],[110.6,-120.849],[109.616,-120.652],[109.22,-120.358],[108.832,-120.159],[108.436,-120.159],[107.648,-120.159],[107.258,-120.064],[107.258,-118.881],[107.258,-118.391],[106.766,-117.604],[106.471,-117.212],[105.78,-116.421],[105.587,-115.639],[105.391,-115.144],[104.996,-115.05],[104.543,-115.036],[104.208,-115.05],[103.816,-115.05],[103.424,-114.85],[103.227,-114.262],[103.227,-114.066],[103.323,-113.576],[103.523,-113.569],[103.717,-113.576],[104.406,-112.884],[104.504,-112.098],[104.31,-111.313],[103.915,-111.214],[103.522,-111.016],[103.424,-110.404],[103.522,-109.642],[104.31,-109.642],[104.703,-109.642],[105.098,-109.346],[105.391,-108.951],[105.391,-108.561],[105.587,-108.168],[105.979,-107.968],[106.273,-107.577],[106.668,-107.479],[107.354,-106.79],[107.75,-106.594],[107.75,-106.201],[107.75,-105.808],[107.354,-105.413],[107.258,-105.02],[106.867,-105.02],[106.471,-105.02],[105.684,-105.02],[104.897,-105.413],[104.406,-106.79],[103.62,-106.887],[102.441,-107.083],[102.143,-107.479],[101.751,-107.773],[101.29,-107.79],[100.966,-107.773],[100.572,-107.871],[99.786,-107.968],[99.393,-108.361],[99.198,-108.853],[98.805,-108.951],[98.408,-109.052],[97.918,-109.346],[97.499,-109.543],[95.585,-109.543],[95.165,-109.738],[94.971,-110.131],[94.552,-110.326],[92.536,-110.326],[91.723,-110.82],[90.938,-111.313],[90.544,-111.41],[90.346,-111.803],[89.954,-111.902],[89.561,-112.196],[89.465,-112.591],[89.236,-112.601],[89.072,-112.591],[88.478,-112.687],[88.28,-112.687],[87.891,-112.491],[87.497,-112.098],[87.596,-111.51],[87.988,-111.117],[88.382,-110.82],[88.382,-110.427],[88.382,-109.936],[89.169,-109.936],[89.561,-109.835],[89.954,-109.835],[90.346,-109.642],[90.448,-109.247],[90.643,-108.757],[91.626,-108.462],[92.021,-108.265],[92.311,-107.871],[92.217,-107.479],[92.118,-107.083],[91.427,-106.397],[91.039,-106.397],[90.643,-106.397],[90.249,-106.397],[90.053,-106.002],[89.954,-105.609],[89.757,-105.217],[89.365,-105.02],[88.921,-105.119],[88.973,-105.903],[89.072,-106.296],[89.072,-107.083],[88.921,-107.479],[88.382,-107.479],[87.988,-107.379],[87.596,-107.083],[87.397,-106.691],[87.203,-106.296],[86.415,-106.296],[86.023,-106.296],[85.236,-106.397],[85.025,-106.414],[84.743,-106.397],[84.548,-106.002],[84.251,-105.609],[83.787,-105.609],[83.37,-105.609],[82.971,-105.709],[82.579,-105.709],[81.698,-105.709],[81.303,-105.633],[81.303,-104.626],[80.125,-104.626],[79.729,-104.923],[79.536,-105.316],[79.141,-105.413],[79.337,-105.808],[79.337,-106.201],[79.729,-106.987],[79.633,-107.379],[79.237,-107.28],[79.042,-106.887],[78.65,-106.79],[78.253,-106.691],[77.914,-106.677],[77.37,-106.594],[77.074,-106.201],[76.29,-105.808],[75.703,-105.808],[74.523,-105.709],[74.126,-105.512],[74.029,-105.119],[73.632,-104.923],[73.244,-104.923],[72.849,-104.923],[72.456,-104.824],[71.572,-104.626],[71.177,-104.334],[70.393,-103.645],[69.898,-103.349],[69.21,-103.331],[68.329,-103.252],[67.932,-102.857],[68.126,-102.464],[68.526,-101.973],[68.329,-101.38],[67.539,-100.993],[67.145,-100.696],[66.753,-100.598],[66.361,-100.598],[65.868,-100.598],[65.277,-100.302],[65.083,-100.302],[64.786,-100.696],[64.298,-100.894],[63.899,-101.284],[63.805,-101.676],[63.411,-102.268],[63.508,-103.202],[65.672,-103.202],[65.672,-104.427],[65.277,-104.824],[64.885,-104.923],[64.69,-105.316],[64.395,-105.709],[63.997,-106.099],[63.215,-105.903],[63.018,-105.903],[62.626,-106.296],[62.23,-106.397],[61.369,-106.397],[60.557,-106.397],[60.165,-106.296],[59.871,-106.369],[59.871,-105.512],[60.656,-105.413],[61.001,-105.217],[61.001,-102.884],[60.755,-102.464],[60.361,-102.169],[60.462,-101.778],[60.462,-101.38],[60.855,-101.284],[61.249,-101.088],[61.543,-100.696],[61.936,-100.204],[61.936,-100.005],[61.592,-99.76],[61.639,-99.419],[61.639,-98.236],[61.592,-98.042],[60.755,-98.141],[60.361,-98.141],[59.969,-98.43],[59.969,-98.824],[59.676,-99.222],[59.233,-99.222],[58.79,-99.222],[58.397,-98.923],[58.001,-98.923],[57.12,-98.923],[56.726,-98.824],[56.726,-98.43],[56.628,-98.042],[56.234,-97.844],[55.839,-97.746],[55.053,-97.546],[54.56,-97.449],[54.169,-97.152],[53.973,-96.763],[53.581,-96.469],[52.991,-96.378],[52.992,-96.369],[52.992,-95.585],[53.186,-95.191],[53.284,-94.795],[53.68,-94.7],[54.072,-94.5],[54.268,-93.911],[54.169,-93.321],[54.169,-93.519],[53.385,-93.519],[52.596,-93.519],[51.809,-93.715],[51.419,-93.715],[51.025,-93.812],[50.135,-93.911],[49.743,-94.203],[49.354,-94.306],[49.159,-94.305],[48.958,-94.306],[48.568,-94.597],[48.27,-95.09],[48.074,-95.482],[47.685,-95.29],[47.385,-94.893],[47.216,-94.9],[46.993,-94.893],[46.599,-94.404],[46.796,-93.812],[47.188,-93.519],[47.586,-93.421],[47.586,-93.027],[47.78,-92.632],[48.173,-92.632],[49.055,-92.73],[49.844,-92.239],[50.135,-91.751],[49.844,-91.356],[47.876,-91.356],[47.685,-90.962],[47.29,-90.862],[46.895,-90.962],[46.796,-91.356],[46.406,-91.648],[45.224,-92.143],[45.03,-92.142],[44.828,-92.143],[44.141,-92.73],[43.945,-93.126],[43.945,-93.519],[43.945,-94.7],[42.691,-94.7],[42.667,-95.972],[42.863,-97.648],[42.57,-98.43],[41.9,-98.592],[41.391,-98.629],[41.19,-99.025],[40.801,-99.419],[40.505,-100.204],[39.993,-100.291],[39.621,-100.302],[39.228,-100.696],[38.438,-101.088],[38.538,-101.482],[38.931,-101.38],[39.326,-101.284],[39.522,-100.894],[40.307,-100.598],[41.094,-100.104],[41.486,-99.907],[42.199,-99.902],[42.863,-99.907],[43.255,-99.907],[43.552,-99.515],[44.363,-99.12],[47.066,-99.12],[47.484,-99.025],[47.876,-98.923],[48.074,-98.533],[48.469,-98.43],[48.859,-98.43],[49.254,-98.334],[50.04,-98.334],[50.432,-98.334],[50.826,-98.334],[51.22,-98.533],[51.415,-98.533],[51.612,-98.533],[52.005,-98.629],[52.793,-99.025],[53.186,-99.025],[53.973,-99.12],[54.365,-99.419],[54.758,-99.708],[55.154,-100.005],[55.35,-100.4],[55.449,-101.185],[55.35,-102.367],[55.35,-102.76],[54.954,-103.546],[54.56,-103.839],[54.169,-104.232],[53.775,-104.334],[53.284,-104.427],[52.496,-104.427],[51.708,-104.427],[50.928,-104.923],[50.531,-105.119],[50.333,-105.512],[49.941,-105.709],[49.646,-106.099],[49.448,-106.099],[49.254,-106.099],[48.859,-106.296],[48.568,-106.691],[48.173,-106.79],[47.78,-106.987],[47.385,-107.28],[46.993,-107.379],[46.06,-107.479],[45.128,-107.379],[44.536,-107.28],[44.339,-107.28],[43.945,-107.577],[43.456,-107.773],[42.764,-108.462],[41.586,-108.462],[41.586,-107.871],[41.391,-107.479],[40.997,-107.479],[40.603,-107.479],[40.113,-107.773],[40.307,-108.168],[40.505,-108.757],[40.505,-108.951],[40.113,-109.148],[39.716,-109.346],[39.716,-109.738],[39.621,-110.23],[38.466,-110.23],[38.046,-110.034],[37.656,-109.642],[37.061,-109.835],[36.671,-110.034],[36.572,-110.427],[35.686,-110.326],[34.805,-110.525],[34.41,-110.623],[34.41,-111.065],[34.805,-111.016],[35.195,-111.117],[35.686,-111.065],[35.786,-111.902],[35.488,-112.296],[35.195,-112.687],[34.805,-112.687],[33.917,-112.687],[33.13,-112.787],[32.837,-113.178],[32.54,-113.576],[32.148,-113.67],[31.755,-113.576],[31.755,-112.394],[30.673,-112.296],[30.673,-113.104],[30.868,-113.475],[31.26,-113.87],[31.26,-114.213],[28.559,-114.213],[28.609,-112.984],[28.411,-112.591],[28.411,-112.196],[28.559,-111.803],[28.017,-111.902],[28.115,-112.296],[28.216,-112.884],[27.922,-113.475],[27.499,-113.67],[26.736,-113.67],[26.717,-114.655],[26.249,-114.752],[25.362,-114.163],[24.973,-113.968],[24.579,-114.066],[24.185,-114.066],[23.888,-113.67],[23.495,-112.884],[22.906,-112.591],[22.71,-112.591],[22.217,-112.687],[21.928,-113.081],[22.121,-113.475],[22.516,-113.772],[21.163,-113.772],[19.957,-113.475],[19.462,-113.277],[18.971,-112.984],[18.876,-112.591],[19.074,-112.196],[19.462,-111.803],[20.249,-111.705],[20.939,-111.605],[20.939,-110.721],[20.178,-110.721],[19.76,-111.016],[18.876,-111.016],[18.087,-111.117],[17.672,-111.214],[16.91,-111.214],[16.91,-110.131],[16.91,-109.738],[16.714,-109.346],[16.319,-109.148],[16.319,-109.936],[16.221,-110.326],[15.828,-110.525],[15.632,-110.524],[15.436,-110.525],[15.043,-110.82],[14.746,-111.214],[14.56,-111.213],[14.354,-111.214],[13.543,-111.803],[12.88,-111.705],[12.88,-110.943],[13.074,-110.525],[13.174,-110.034],[12.88,-109.247],[12.98,-108.853],[12.585,-108.561],[11.993,-108.265],[11.406,-108.361],[11.406,-108.757],[11.21,-109.148],[11.21,-109.543],[10.815,-109.346],[10.715,-108.853],[10.505,-108.847],[10.32,-108.853],[9.538,-108.757],[9.438,-108.069],[9.634,-107.676],[9.816,-107.682],[10.029,-107.676],[10.421,-107.479],[10.421,-107.083],[10.421,-106.691],[10.225,-106.296],[9.833,-106.397],[9.438,-106.79],[8.941,-106.8],[8.555,-106.79],[8.06,-106.987],[8.258,-108.168],[8.06,-108.561],[7.474,-108.361],[7.474,-107.183],[7.079,-106.987],[6.484,-107.183],[5.51,-106.79],[5.605,-106.397],[6,-106.201],[5.803,-105.808],[4.816,-105.808],[4.424,-105.709],[4.031,-105.709],[3.639,-105.413],[3.54,-105.02],[3.143,-104.923],[2.753,-104.528],[2.654,-104.134],[2.445,-104.128],[2.262,-104.134],[1.866,-103.645],[2.628,-103.645],[3.046,-103.839],[3.341,-104.232],[3.734,-104.427],[4.13,-104.427],[4.523,-104.528],[4.915,-104.427],[5.307,-104.727],[5.51,-105.119],[5.721,-105.125],[5.898,-105.119],[6.09,-105.118],[6.293,-105.119],[6.686,-105.413],[7.716,-105.512],[8.751,-105.413],[9.142,-105.119],[8.945,-104.727],[8.16,-104.727],[7.764,-104.727],[7.667,-104.334],[7.276,-104.232],[7.087,-104.286],[6.882,-104.334],[6.484,-104.035],[6.391,-103.645],[6.193,-103.252],[5.803,-103.057],[5.605,-102.66],[5.704,-102.268],[5.605,-101.482],[4.523,-101.284],[4.13,-100.497],[3.734,-100.302],[3.341,-100.005],[3.143,-99.613],[2.753,-99.419],[2.359,-99.12],[2.359,-98.727],[2.359,-98.334],[1.966,-97.945],[1.573,-97.546],[1.573,-96.763],[1.378,-96.369],[1.378,-95.972],[1.283,-96.369],[0.884,-96.074],[0.1,-95.779],[-0.194,-95.384],[-0.589,-95.09],[-0.816,-95.078],[-0.986,-95.09],[-1.572,-94.893],[-1.966,-94.597],[-1.867,-94.108],[-1.473,-94.01],[-1.081,-94.108],[-0.293,-94.108],[-0.392,-93.615],[-0.392,-93.225],[-0.784,-93.027],[-1.18,-92.831],[-1.572,-92.534],[-2.163,-92.437],[-2.555,-92.045],[-2.948,-91.751],[-3.34,-91.648],[-3.736,-91.356],[-3.931,-90.962],[-4.029,-90.569],[-4.62,-90.175],[-5.626,-90.569],[-6.388,-90.569],[-6.486,-89.881],[-6.19,-89.094],[-7.37,-88.8],[-7.57,-88.799],[-7.763,-88.8],[-8.553,-88.409],[-8.944,-88.11],[-9.339,-87.817],[-9.512,-87.822],[-9.73,-87.817],[-10.125,-87.619],[-10.125,-87.227],[-10.125,-86.833],[-10.517,-86.44],[-10.914,-86.144],[-11.307,-86.144],[-11.698,-86.144],[-12.091,-85.85],[-12.487,-85.554],[-12.387,-85.161],[-12.19,-84.768],[-12.387,-84.375],[-12.605,-84.318],[-12.78,-84.277],[-12.979,-83.884],[-12.879,-83.488],[-12.585,-82.899],[-12.681,-82.21],[-12.876,-82.205],[-13.073,-82.21],[-13.271,-81.82],[-13.271,-81.03],[-12.217,-81.03],[-11.796,-81.132],[-11.402,-80.937],[-11.206,-80.542],[-11.503,-80.149],[-11.895,-79.954],[-11.895,-79.557],[-11.895,-79.165],[-12.387,-78.967],[-12.487,-78.575],[-12.387,-78.083],[-10.814,-78.035],[-10.914,-77.101],[-11.307,-76.804],[-11.503,-76.411],[-11.307,-76.017],[-11.307,-75.721],[-10.517,-75.721],[-10.322,-75.734],[-10.03,-75.721],[-9.73,-75.33],[-9.339,-74.939],[-8.553,-75.134],[-8.159,-75.037],[-7.569,-74.838],[-6.587,-75.134],[-6.292,-75.527],[-6.072,-75.533],[-5.897,-75.527],[-5.504,-75.627],[-5.115,-75.921],[-4.913,-76.313],[-4.52,-76.707],[-3.931,-77.491],[-3.638,-77.884],[-3.243,-77.986],[-2.852,-77.884],[-2.458,-78.083],[-2.458,-78.871],[-2.271,-78.876],[-2.064,-78.871],[-1.667,-78.675],[-1.473,-78.279],[-1.473,-77.884],[-1.081,-77.593],[-1.081,-76.707],[-0.986,-76.313],[-0.589,-76.017],[-0.194,-75.43],[-0.194,-75.233],[-0.589,-74.838],[-0.491,-74.442],[-0.001,-73.659],[0.393,-73.56],[0.689,-73.167],[0.986,-72.775],[0.986,-72.379],[0.986,-71.989],[1.283,-71.204],[1.671,-70.908],[2.065,-70.513],[2.458,-70.216],[2.557,-69.826],[2.458,-69.433],[2.165,-68.841],[2.165,-68.646],[2.359,-68.254],[2.359,-67.855],[5.112,-67.855],[5.211,-68.449],[5.211,-68.841],[5.51,-69.236],[5.898,-69.63],[6.293,-69.63],[6.686,-69.63],[7.079,-69.532],[7.474,-69.333],[7.867,-69.532],[8.16,-69.925],[9.044,-70.022],[9.044,-71.204],[10.616,-71.204],[10.715,-71.597],[10.616,-72.185],[9.855,-72.185],[9.438,-72.088],[9.266,-72.081],[9.044,-72.088],[9.044,-72.482],[8.65,-72.578],[9.142,-73.366],[9.438,-73.76],[9.538,-74.545],[9.634,-75.33],[9.634,-75.721],[9.833,-76.12],[10.225,-76.313],[10.616,-76.707],[11.01,-76.804],[11.406,-77.101],[11.797,-77.2],[11.987,-77.193],[12.19,-77.2],[12.388,-77.593],[12.388,-77.986],[12.684,-78.379],[13.074,-78.675],[13.469,-78.967],[13.469,-79.338],[13.469,-79.753],[13.368,-80.245],[12.585,-80.245],[11.797,-80.346],[11.406,-80.27],[11.406,-81.525],[11.01,-81.916],[10.803,-81.916],[10.616,-81.916],[10.225,-82.21],[10.275,-82.582],[10.275,-85.751],[10.715,-86.048],[10.911,-86.44],[11.307,-86.833],[11.504,-87.227],[11.702,-88.01],[11.893,-88.409],[12.289,-88.602],[12.505,-88.608],[12.684,-88.602],[13.469,-88.998],[13.764,-89.388],[14.159,-89.682],[14.354,-90.074],[14.837,-90.161],[15.138,-90.175],[15.348,-90.163],[15.633,-90.175],[15.927,-90.569],[16.319,-90.862],[16.319,-91.255],[16.609,-91.648],[17.01,-91.751],[17.402,-91.849],[17.797,-91.849],[18.186,-91.944],[18.483,-92.534],[18.186,-93.126],[17.797,-93.421],[17.797,-93.812],[18.087,-94.993],[18.383,-95.384],[18.589,-95.391],[18.777,-95.384],[19.171,-95.678],[19.462,-96.174],[19.76,-96.957],[19.858,-97.352],[20.648,-97.449],[21.434,-97.352],[21.629,-97.351],[21.824,-97.352],[22.121,-96.957],[22.71,-96.174],[23.103,-96.27],[23.398,-96.663],[23.792,-96.763],[24.185,-96.469],[24.579,-96.174],[24.773,-95.779],[24.973,-95.361],[24.973,-94.108],[23.792,-94.108],[23.792,-92.926],[23.792,-92.534],[23.398,-91.751],[23.004,-91.454],[22.413,-91.158],[21.333,-91.356],[20.939,-91.158],[20.544,-90.962],[20.353,-90.569],[20.056,-90.175],[19.957,-89.783],[19.565,-89.584],[19.171,-89.191],[18.971,-88.8],[18.579,-88.602],[17.893,-87.913],[18.186,-86.539],[17.99,-85.947],[17.598,-85.358],[17.797,-83.985],[17.797,-83.589],[17.893,-83.194],[17.893,-82.309],[18.876,-82.21],[19.661,-81.916],[19.957,-81.525],[20.249,-81.132],[21.039,-80.834],[21.434,-80.542],[22.413,-80.053],[22.612,-80.053],[23.004,-80.245],[24.384,-80.937],[25.362,-80.639],[25.953,-80.736],[26.348,-80.736],[26.741,-80.937],[26.837,-81.328],[27.232,-81.525],[30.35,-81.525],[30.771,-81.82],[31.361,-81.916],[31.557,-81.916],[31.855,-81.525],[31.952,-81.132],[32.344,-80.937],[34.31,-80.937],[34.508,-80.542],[34.113,-80.149],[33.329,-80.149],[32.344,-80.149],[31.952,-80.053],[31.557,-79.753],[31.163,-79.46],[30.771,-79.165],[30.478,-78.771],[30.281,-78.379],[29.987,-77.986],[29.589,-77.986],[28.807,-78.083],[28.411,-78.478],[27.823,-78.871],[26.837,-78.575],[26.052,-78.575],[25.267,-78.675],[24.876,-78.575],[24.484,-78.379],[24.087,-78.083],[23.691,-78.182],[23.302,-78.379],[22.906,-78.182],[22.516,-77.986],[22.516,-77.593],[22.121,-77.2],[22.023,-76.804],[21.632,-76.903],[21.236,-76.903],[20.842,-77.2],[20.842,-77.593],[20.449,-77.593],[20.056,-77.593],[19.661,-77.398],[19.565,-77.005],[19.957,-76.707],[20.154,-76.707],[20.353,-76.707],[20.747,-76.411],[19.957,-76.411],[18.681,-76.017],[18.288,-75.823],[18.383,-75.43],[19.074,-74.838],[19.462,-74.838],[19.858,-74.738],[20.449,-74.738],[21.039,-74.738],[21.632,-75.527],[22.121,-75.921],[22.71,-75.721],[23.103,-75.527],[23.495,-75.233],[23.595,-74.838],[23.595,-74.442],[23.987,-74.249],[24.384,-74.056],[24.773,-73.76],[24.579,-73.366],[23.495,-72.876],[23.103,-72.675],[23.103,-72.283],[23.004,-71.597],[22.245,-71.597],[21.725,-71.694],[21.333,-71.79],[21.137,-72.185],[21.137,-72.578],[20.842,-72.97],[20.635,-72.97],[20.449,-72.97],[20.449,-73.366],[20.449,-73.76],[19.661,-73.76],[19.074,-72.97],[18.681,-72.675],[18.288,-72.482],[18.288,-72.088],[18.288,-71.694],[18.087,-71.301],[17.797,-70.908],[17.797,-70.513],[17.499,-69.925],[17.598,-69.333],[17.698,-68.94],[17.893,-68.545],[17.598,-68.155],[17.206,-67.763],[17.105,-67.267],[17.598,-66.876],[17.402,-66.484],[17.01,-66.484],[16.023,-66.876],[15.236,-66.876],[14.453,-66.876],[13.958,-66.68],[13.665,-66.288],[13.862,-65.895],[14.549,-65.206],[14.453,-64.814],[14.057,-64.714],[12.684,-65.598],[12.289,-65.895],[11.893,-66.384],[11.504,-66.484],[11.111,-66.288],[10.225,-65.794],[9.833,-65.5],[9.438,-65.402],[9.044,-65.206],[8.751,-64.814],[8.355,-64.515],[7.177,-64.418],[6.391,-64.319],[5.898,-64.025],[5.26,-63.926],[4.13,-64.221],[3.934,-65.598],[3.143,-65.598],[2.753,-65.402],[2.557,-65.129],[2.165,-65.108],[1.671,-65.206],[0.884,-65.206],[0.049,-65.129],[0.049,-63.926],[-0.762,-63.926],[-1.378,-64.025],[-1.77,-64.319],[-1.966,-65.206],[-2.357,-65.011],[-3.145,-65.011],[-3.145,-65.698],[-3.243,-66.091],[-3.047,-66.484],[-1.499,-66.484],[-0.689,-66.288],[-0.293,-65.992],[0.32,-65.794],[1.105,-65.895],[1.283,-66.68],[1.083,-67.66],[1.283,-68.254],[1.671,-68.841],[1.573,-69.63],[0.811,-69.63],[0.393,-69.433],[0.068,-69.45],[-0.392,-69.433],[-0.784,-69.236],[-0.986,-68.841],[-1.378,-68.449],[-1.572,-68.449],[-1.966,-68.646],[-1.867,-69.433],[-1.473,-69.727],[-1.378,-70.095],[-1.378,-70.708],[-2.163,-70.611],[-2.555,-70.708],[-2.458,-71.204],[-1.966,-71.989],[-1.966,-72.379],[-1.966,-72.775],[-2.26,-73.167],[-2.458,-73.56],[-2.751,-73.953],[-3.145,-73.855],[-3.638,-73.56],[-3.835,-72.775],[-4.52,-72.088],[-4.745,-72.081],[-4.913,-72.088],[-5.409,-71.989],[-5.801,-71.597],[-5.603,-71.004],[-5.603,-70.811],[-5.701,-70.415],[-6.094,-70.315],[-6.486,-70.216],[-7.079,-69.333],[-6.781,-68.352],[-6.486,-67.959],[-6.094,-67.855],[-5.701,-67.562],[-5.801,-67.173],[-6.044,-66.778],[-5.897,-66.384],[-5.897,-65.992],[-6.044,-65.352],[-6.094,-65.108],[-5.996,-64.714],[-5.701,-64.319],[-5.409,-63.512],[-5.409,-62.746],[-5.996,-62.746],[-6.486,-62.648],[-7.471,-62.551],[-7.964,-62.551],[-8.65,-62.648],[-9.635,-62.648],[-10.422,-62.551],[-10.617,-62.159],[-11.009,-61.959],[-11.895,-61.763],[-11.991,-61.369],[-12.19,-60.977],[-13.073,-60.29],[-13.469,-60.587],[-13.887,-60.587],[-14.254,-60.587],[-14.648,-60.485],[-15.042,-60.558],[-15.042,-59.796],[-14.254,-59.406],[-14.254,-58.129],[-14.841,-58.129],[-15.236,-57.93],[-15.63,-57.832],[-16.025,-57.536],[-16.81,-56.943],[-17.206,-56.554],[-17.598,-56.262],[-17.99,-56.262],[-19.27,-56.262],[-19.27,-53.898],[-20.743,-53.801],[-21.137,-53.702],[-21.529,-53.605],[-21.529,-52.423],[-22.979,-52.423],[-23.396,-52.618],[-23.749,-52.608],[-24.182,-52.618],[-24.678,-52.72],[-24.678,-53.115],[-25.163,-53.502],[-25.754,-53.412],[-25.754,-52.227],[-24.971,-51.936],[-25.361,-51.145],[-25.163,-50.753],[-25.163,-50.263],[-26.421,-50.166],[-26.835,-50.361],[-27.232,-50.463],[-27.625,-50.361],[-28.116,-50.361],[-28.509,-50.657],[-28.706,-51.049],[-29.493,-50.753],[-29.689,-50.753],[-29.884,-50.753],[-30.671,-50.463],[-31.064,-50.166],[-31.163,-49.772],[-30.965,-49.379],[-30.754,-49.366],[-30.573,-49.379],[-30.281,-48.985],[-29.884,-48.786],[-29.493,-48.593],[-28.986,-48.58],[-28.607,-48.593],[-28.214,-48.593],[-27.823,-48.296],[-27.428,-48.002],[-27.033,-47.805],[-26.738,-47.411],[-25.956,-46.72],[-25.956,-44.66],[-25.659,-44.267],[-25.267,-44.07],[-24.482,-43.674],[-24.182,-43.087],[-24.281,-42.497],[-24.482,-41.809],[-24.182,-40.43],[-24.182,-39.843],[-24.182,-39.251],[-25.267,-38.367],[-25.361,-37.974],[-25.754,-37.778],[-26.936,-37.288],[-27.331,-37.288],[-27.823,-37.482],[-28.509,-37.679],[-28.902,-37.778],[-29.884,-37.778],[-30.281,-38.073],[-30.671,-38.469],[-31.09,-38.563],[-34.579,-38.563],[-35.587,-38.661],[-36.081,-38.661],[-36.667,-39.056],[-36.866,-39.056],[-37.259,-38.856],[-37.259,-38.469],[-37.456,-38.073],[-39.423,-38.073],[-39.618,-37.679],[-39.327,-37.288],[-38.93,-36.991],[-38.833,-36.402],[-38.93,-35.81],[-39.227,-34.827],[-39.128,-34.141],[-38.93,-33.743],[-38.635,-33.331],[-38.635,-31.018],[-38.734,-30.598],[-39.128,-30.305],[-39.327,-29.911],[-39.815,-28.731],[-39.815,-28.339],[-39.52,-27.947],[-39.327,-27.549],[-39.03,-27.061],[-39.03,-26.668],[-39.03,-26.275],[-39.327,-25.88],[-39.423,-25.266],[-39.327,-24.307],[-38.168,-24.307],[-37.259,-24.505],[-36.866,-24.307],[-36.572,-23.916],[-35.982,-23.817],[-34.999,-24.114],[-34.603,-23.817],[-34.211,-23.621],[-33.818,-23.521],[-33.423,-23.326],[-33.132,-22.933],[-32.835,-22.539],[-32.736,-22.146],[-32.342,-21.85],[-32.146,-22.345],[-32.538,-22.439],[-32.146,-22.636],[-31.749,-22.636],[-31.359,-22.636],[-30.573,-22.832],[-30.18,-23.128],[-29.396,-23.721],[-29.003,-24.114],[-28.214,-24.406],[-27.833,-24.405],[-27.428,-24.406],[-27.033,-24.601],[-26.544,-24.798],[-25.956,-25.586],[-24.773,-26.473],[-23.986,-26.668],[-23.296,-26.673],[-22.708,-26.668],[-21.923,-26.764],[-21.923,-28.068],[-22.12,-28.437],[-22.512,-28.832],[-22.905,-29.224],[-22.809,-29.814],[-22.512,-30.203],[-22.02,-31.092],[-21.824,-31.484],[-21.63,-31.877],[-21.43,-32.27],[-21.201,-32.281],[-21.038,-32.27],[-20.251,-32.37],[-19.956,-32.762],[-19.66,-33.154],[-19.27,-33.253],[-19.072,-33.253],[-18.875,-33.253],[-18.579,-33.647],[-18.361,-33.652],[-18.185,-33.647],[-17.794,-33.843],[-17.12,-33.855],[-16.615,-33.843],[-15.827,-33.944],[-15.827,-35.122],[-15.827,-35.517],[-15.926,-36.3],[-15.852,-36.72],[-15.926,-37.482],[-15.732,-37.875],[-14.943,-38.171],[-14.352,-38.266],[-13.37,-38.073],[-13.173,-38.073],[-12.979,-38.073],[-11.796,-37.482],[-10.79,-37.383],[-10.224,-37.383],[-9.831,-37.482],[-9.438,-37.406],[-9.438,-38.073],[-9.339,-38.469],[-8.944,-38.762],[-8.65,-39.151],[-8.254,-39.151],[-7.862,-39.151],[-7.079,-39.151],[-6.688,-39.447],[-6.292,-39.744],[-5.897,-40.04],[-5.504,-40.43],[-5.115,-40.333],[-4.326,-39.941],[-3.638,-39.251],[-2.948,-38.073],[-2.852,-37.679],[-2.555,-37.288],[-2.26,-36.895],[-1.867,-36.697],[-1.473,-36.5],[-1.081,-36.3],[-0.689,-35.909],[-0.589,-35.517],[-0.1,-35.221],[0.195,-34.827],[0.59,-34.63],[0.986,-34.239],[1.378,-34.039],[1.772,-33.647],[2.262,-33.451],[3.046,-33.154],[3.264,-33.161],[3.54,-33.154],[3.934,-32.958],[4.13,-32.566],[5.112,-31.484],[5.51,-31.387],[5.898,-31.191],[6.293,-30.995],[6.785,-30.203],[7.57,-29.617],[7.764,-29.224],[7.867,-28.832],[7.961,-28.019],[7.867,-27.255],[5.898,-26.863],[5.605,-26.473],[5.211,-26.371],[4.424,-26.371],[3.906,-26.473],[1.184,-26.445],[1.283,-25.979],[2.065,-25.586],[2.458,-25.291],[2.654,-24.895],[2.85,-24.505],[3.245,-24.209],[3.465,-24.203],[3.639,-24.209],[4.449,-24.012],[6.785,-24.012],[6.785,-25.489],[7.276,-25.684],[8.06,-26.175],[8.456,-26.568],[8.658,-26.562],[8.846,-26.568],[8.945,-26.962],[9.142,-27.747],[9.242,-28.143],[9.634,-28.437],[9.854,-28.442],[10.029,-28.437],[10.715,-28.731],[10.815,-29.128],[10.715,-29.522],[10.715,-29.962],[10.225,-29.911],[9.438,-29.911],[9.044,-29.962],[9.044,-30.401],[9.142,-30.995],[10.694,-30.995],[11.504,-30.701],[11.893,-30.498],[12.289,-30.109],[12.684,-30.305],[12.19,-31.484],[12.19,-32.27],[11.603,-32.37],[11.408,-32.369],[11.21,-32.37],[10.815,-32.666],[10.421,-32.958],[10.029,-33.351],[9.634,-33.451],[9.242,-33.843],[9.048,-33.837],[8.846,-33.843],[8.555,-34.239],[8.456,-34.63],[8.24,-34.636],[8.06,-34.63],[7.858,-34.63],[7.667,-34.63],[7.276,-34.827],[6.882,-34.925],[6.686,-35.322],[6.293,-35.616],[6.076,-35.621],[5.898,-35.616],[5.51,-35.81],[5.311,-35.811],[5.112,-35.81],[5.112,-36.203],[5.409,-36.596],[5.307,-36.991],[5.014,-37.482],[4.621,-37.778],[3.443,-38.171],[3.245,-38.563],[3.048,-38.557],[2.85,-38.563],[2.753,-38.956],[2.753,-39.843],[1.866,-39.941],[0.986,-39.89],[0.986,-40.923],[1.378,-41.317],[1.772,-41.609],[1.772,-41.809],[1.671,-42.203],[1.283,-42.592],[1.573,-43.185],[2.165,-43.283],[2.753,-43.185],[3.143,-42.891],[3.245,-42.397],[3.443,-42.004],[3.641,-41.998],[3.835,-42.004],[4.227,-41.906],[4.621,-41.609],[4.915,-41.218],[5.307,-41.022],[5.529,-41.016],[5.704,-41.022],[6.098,-40.725],[6.391,-40.236],[6.686,-39.352],[6.889,-39.345],[7.079,-39.352],[7.867,-38.762],[8.258,-38.563],[8.555,-38.171],[9.438,-37.778],[9.707,-37.778],[10.225,-37.679],[10.32,-37.288],[10.616,-36.895],[11.01,-36.697],[11.797,-36.3],[12.98,-35.322],[13.764,-35.122],[14.159,-34.827],[14.255,-34.435],[14.549,-34.039],[14.354,-33.647],[13.958,-33.351],[13.958,-32.958],[13.862,-32.37],[13.958,-31.779],[14.648,-31.092],[14.549,-30.305],[15.043,-29.522],[15.236,-29.128],[15.471,-29.113],[15.633,-29.128],[16.023,-29.128],[16.811,-28.925],[16.811,-27.357],[15.828,-27.357],[15.828,-27.747],[15.436,-27.849],[15.043,-27.65],[15.138,-27.255],[15.436,-26.863],[16.023,-26.079],[16.415,-25.88],[16.811,-25.489],[17.206,-25.783],[17.303,-26.175],[17.698,-26.473],[17.797,-26.079],[17.893,-25.684],[18.681,-25.195],[18.579,-24.307],[18.579,-23.916],[19.074,-23.521],[19.957,-23.521],[20.353,-23.521],[20.747,-23.621],[20.939,-24.012],[21.333,-24.307],[21.333,-24.703],[21.333,-25.093],[21.137,-25.489],[21.434,-25.88],[21.824,-26.079],[22.217,-25.979],[22.612,-25.586],[23.027,-25.586],[23.398,-25.586],[23.888,-25.684],[23.888,-26.568],[23.987,-26.962],[23.938,-27.158],[24.773,-27.158],[25.168,-27.255],[24.876,-27.747],[24.484,-28.042],[24.087,-28.437],[23.595,-28.437],[23.691,-27.65],[23.595,-27.255],[23.103,-27.255],[22.71,-27.357],[22.413,-27.849],[22.023,-28.143],[22.023,-28.535],[21.928,-28.925],[21.824,-29.32],[21.632,-29.716],[21.236,-29.814],[21.02,-29.818],[20.842,-29.814],[20.449,-30.203],[20.056,-30.498],[20.056,-30.895],[20.056,-31.289],[20.353,-31.678],[20.747,-31.484],[21.137,-31.191],[21.533,-30.895],[22.315,-30.895],[22.71,-30.895],[23.103,-30.895],[23.495,-31.191],[23.202,-31.584],[22.807,-31.678],[23.103,-32.073],[23.495,-32.47],[24.384,-32.47],[25.267,-32.47],[25.66,-32.37],[26.052,-32.173],[26.445,-31.779],[26.618,-31.785],[26.837,-31.779],[27.232,-31.678],[27.333,-31.289],[27.333,-30.895],[27.721,-30.795],[28.115,-30.498],[28.017,-30.109],[27.626,-30.009],[27.232,-29.617],[27.626,-28.635],[28.411,-28.24],[28.708,-27.136],[28.609,-26.962],[28.708,-26.568],[28.609,-26.175],[28.609,-25.844],[28.755,-25.439],[29.048,-25.046],[29.198,-24.798],[29.344,-24.601],[29.544,-24.505],[29.689,-24.307],[29.934,-24.114],[30.133,-23.964],[30.332,-23.672],[30.281,-23.326],[30.083,-23.128],[29.987,-22.933],[29.889,-22.684],[29.889,-22.316],[29.934,-21.753],[30.035,-21.553],[30.23,-21.357],[30.428,-21.211],[30.82,-21.655],[30.868,-21.85],[30.967,-22.146],[31.016,-22.345],[31.016,-22.933],[30.967,-23.128],[31.016,-23.721],[31.361,-23.721],[31.557,-23.672],[31.755,-23.521],[31.905,-23.326],[32.1,-23.176],[32.54,-22.785],[32.738,-22.587],[32.936,-22.345],[33.082,-22.146],[33.281,-22.049],[33.475,-22.049],[33.868,-22.049],[34.259,-22.001],[34.456,-21.85],[34.876,-21.8],[35.096,-21.8],[35.293,-21.903],[35.488,-22.049],[35.441,-22.232],[35.488,-22.439],[35.392,-22.992],[35.441,-23.274],[35.635,-23.469],[35.737,-23.672],[36.031,-23.865],[36.547,-23.916],[37.109,-23.817],[37.311,-23.672],[37.656,-23.274],[37.85,-23.128],[38.243,-22.785],[38.538,-22.587],[38.685,-22.394],[38.883,-22.245],[39.079,-22.197],[39.337,-22.098],[42.004,-22.098],[41.98,-22.785],[41.98,-23.028],[41.928,-23.326],[42.004,-23.806],[42.324,-23.721],[42.52,-23.768],[42.719,-23.817],[43.01,-23.817],[43.699,-23.672],[43.993,-23.274],[44.19,-23.176],[44.612,-23.128],[44.828,-23.128],[45.027,-23.227],[45.128,-23.423],[45.324,-23.569],[45.52,-23.521],[45.665,-23.128],[45.861,-23.028],[45.911,-22.832],[45.911,-22.439],[45.861,-21.8],[45.714,-21.553],[45.467,-21.012],[45.37,-20.239],[45.37,-19.884],[45.467,-19.586],[45.566,-19.39],[45.616,-19.196],[45.812,-18.901],[45.861,-18.608],[45.812,-18.263],[45.616,-18.064],[45.422,-17.916],[45.324,-17.719],[45.324,-17.277],[45.224,-17.033],[45.076,-16.836],[44.732,-16.348],[44.582,-15.953],[44.141,-15.656],[43.897,-15.51],[43.699,-15.363],[43.501,-15.165],[43.456,-14.969],[43.405,-14.575],[43.061,-13.644],[42.911,-13.1],[42.57,-12.607],[42.372,-12.462],[42.176,-12.264],[41.98,-12.119],[41.781,-12.119],[41.579,-12.121],[41.336,-12.119],[40.945,-11.97],[40.749,-11.923],[40.622,-11.922],[40.505,-11.923],[40.307,-11.873],[40.113,-11.774],[39.865,-11.58],[39.522,-11.626],[39.326,-11.774],[38.883,-12.119],[38.685,-12.119],[38.389,-12.119],[38.046,-12.166],[37.753,-12.214],[37.26,-12.264],[37.013,-12.361],[36.794,-12.361],[36.572,-12.361],[36.324,-12.214],[36.767,-12.019],[37.408,-11.774],[38.046,-11.677],[38.438,-11.626],[38.438,-11.233],[38.438,-10.985],[38.732,-10.644],[38.831,-10.447],[38.883,-10.102],[38.857,-9.896],[38.883,-9.708],[38.831,-9.462],[38.831,-8.677],[39.126,-8.285],[39.816,-7.595],[40.01,-7.204],[40.21,-6.807],[40.505,-6.415],[40.801,-6.024],[41.19,-5.626],[41.586,-5.432],[42.027,-5.432],[42.473,-5.432],[42.863,-5.726],[42.863,-6.122],[43.255,-6.513],[43.456,-6.122],[44.339,-4.939],[44.536,-4.548],[44.928,-4.256],[45.324,-4.057],[45.616,-3.66],[45.714,-2.78],[45.812,-2.386],[46.108,-1.991],[46.796,-1.109],[47.188,-0.714],[47.29,-0.027],[47.29,0.169],[47.188,0.565],[47.385,1.843],[47.978,2.138],[48.367,2.333],[48.76,2.433],[49.156,2.725],[49.354,3.117],[49.547,3.514],[50.333,4.396],[50.728,5.185],[51.122,5.97],[51.516,7.2],[51.516,7.64],[51.22,8.037],[51.22,8.429],[51.419,9.218],[51.809,9.509],[52.204,9.707],[52.596,10.101],[53.385,10.788],[53.775,11.084],[53.973,11.475],[54.365,11.869],[54.758,12.753],[55.053,13.243],[55.544,13.638],[56.333,14.817],[57.513,16],[57.71,16.392],[58.001,16.882],[58.199,17.277],[58.199,18.06],[58.199,18.456],[58.397,18.848],[58.888,19.662],[58.888,23.051],[59.871,24.06],[60.656,24.647],[61.445,24.647],[62.626,24.553],[63.018,24.158],[63.508,23.374],[64.298,22.882],[64.715,22.782],[67.118,22.782],[67.539,23.077],[67.738,23.078],[67.932,23.077],[68.329,22.29],[68.621,21.899],[69.115,21.604],[69.507,21.208],[70.682,21.013],[71.077,20.711],[71.482,20.709],[71.868,20.711],[72.257,20.421],[72.652,20.421],[73.436,20.324],[73.832,19.93],[74.225,19.538],[74.62,19.145],[75.009,19.145],[76.191,19.145],[76.191,18.456],[76.191,18.06],[76.484,17.67],[76.688,17.664],[76.879,17.67],[77.273,17.374],[77.665,17.277],[78.059,17.085],[78.453,17.085],[78.846,16.981],[81.599,17.085],[81.599,16.49],[81.698,16.097],[81.698,15.708],[82.188,14.915],[84.157,14.915],[84.251,14.523],[84.451,14.131],[84.743,13.341],[85.135,13],[85.529,13.049],[85.924,13.049],[86.316,13],[86.514,12.26],[86.71,11.869],[86.71,11.475],[87.005,11.084],[87.203,10.691],[87.793,10.392],[87.988,10.392],[88.28,10.788],[88.674,10.886],[88.674,9.707],[88.973,8.429],[89.072,7.939],[89.169,7.546],[89.561,7.444],[89.751,7.446],[89.954,7.444],[90.742,7.151],[90.544,6.268],[90.152,5.874],[89.977,5.88],[89.757,5.874],[89.365,5.674],[88.973,5.478],[88.973,5.088],[88.87,4.591],[88.674,4.2],[88.28,3.81],[87.497,3.514],[87.105,3.514],[86.71,3.318],[86.71,2.92],[87.005,2.138],[86.904,1.744],[86.514,1.549],[86.096,1.353],[85.333,1.353],[85.333,2.239],[84.743,2.92],[84.548,2.038],[84.548,1.644],[84.157,1.448],[83.861,1.055],[83.861,-0.913],[83.565,-1.305],[83.172,-1.599],[82.971,-1.203],[82.579,-1.01],[82.188,-0.812],[81.698,-0.027],[81.698,1.156],[81.599,1.939],[80.811,1.843],[79.928,1.843],[79.536,1.843],[79.042,1.644],[78.306,1.448],[78.059,1.448],[77.665,1.744],[77.273,1.939],[76.879,2.333],[76.484,2.725],[75.703,2.433],[75.302,2.038],[74.913,1.644],[74.913,1.253],[74.913,0.861],[75.302,0.758],[76.29,0.37],[76.484,0.37],[77.074,0.665],[77.714,0.665],[78.353,0.665],[78.749,0.466],[78.749,0.074],[78.353,-0.223],[77.96,-0.223],[77.197,-0.125],[76.78,-0.125],[76.387,-0.223],[75.994,-0.223],[75.009,-0.613],[74.339,-0.615],[73.733,-0.613],[73.341,-0.714],[72.849,-0.714],[72.849,-2.679],[72.553,-3.072],[72.161,-3.174],[71.766,-3.565],[71.374,-3.66],[70.98,-3.66],[70.586,-3.861],[69.999,-4.057],[69.999,-4.548],[69.999,-5.334],[69.507,-6.122],[69.115,-6.513],[69.115,-6.908],[69.115,-7.3],[68.918,-7.791],[68.918,-8.432],[68.918,-9.07],[69.115,-9.462],[69.507,-9.856],[70.096,-9.856],[71.077,-9.759],[72.161,-8.777],[72.553,-8.48],[73.244,-7.696],[73.632,-7.3],[74.225,-6.122],[74.62,-5.726],[75.801,-5.136],[76.584,-4.451],[77.37,-3.861],[78.156,-3.369],[78.664,-3.356],[79.042,-3.369],[79.432,-3.268],[80.958,-3.072],[81.203,-3.072],[81.599,-3.072],[81.992,-3.268],[82.391,-3.268],[82.777,-3.268],[83.172,-3.465],[83.565,-3.465],[84.35,-3.369],[84.743,-3.072],[85.333,-2.386],[85.333,-1.991],[85.432,-1.599],[85.629,-1.203],[86.023,-1.01],[86.538,-0.913],[88.555,-0.913],[88.973,-1.01],[89.465,-1.01],[89.855,-0.714],[90.053,-0.321],[90.448,-0.125],[90.964,0.074],[92.979,0.074],[93.814,0.37],[97.132,0.37],[99.587,-0.027],[101.826,-0.027],[102.641,0.565],[103.027,0.861],[103.424,1.156],[103.915,1.939],[104.31,2.239],[104.703,2.333],[105.098,2.629],[105.292,3.024],[105.391,3.81],[105.65,3.824],[106.077,3.909],[106.273,4.299],[106.57,4.692],[106.962,4.692],[107.354,4.692],[108.142,4.791],[108.536,4.989],[108.927,5.088],[109.816,5.478],[108.633,5.478],[107.846,5.674],[107.454,5.874],[107.454,6.268],[107.648,6.662],[108.046,6.759],[108.436,6.856],[108.73,7.25],[109.026,7.64],[109.816,8.331],[110.305,8.624],[110.699,9.018],[111.092,9.018],[111.485,9.018],[111.878,8.726],[112.176,8.331],[112.957,8.135],[113.254,7.64],[113.647,7.25],[114.629,7.64],[114.827,8.037],[115.025,9.018],[115.123,9.804],[115.517,10.691],[115.613,11.084],[115.613,11.915],[115.613,12.753],[115.517,13.243],[115.517,14.62],[115.517,15.015],[115.808,15.804],[115.91,16.196],[115.91,17.473],[116.499,18.259],[116.796,18.651],[117.186,19.043],[117.482,19.434],[117.482,19.833],[117.678,20.711],[117.775,21.109],[118.071,21.505],[118.267,21.994],[118.267,22.39],[118.464,22.782],[118.66,23.175],[119.051,23.568],[119.249,23.964],[119.644,24.354],[119.746,25.14],[119.746,25.532],[119.644,26.323],[120.04,27.699],[120.431,28.092],[120.626,28.484],[120.921,28.876],[121.806,30.644],[122.396,31.827],[122.495,32.221],[122.691,32.611],[123.082,32.907],[123.673,33.302],[124.267,33.204],[124.658,32.907],[124.756,32.514],[124.949,32.121],[125.641,30.939],[125.839,30.547],[126.022,30.548],[126.23,30.547],[126.621,30.448],[127.021,30.055],[127.413,29.759],[127.511,29.37],[127.704,28.979],[128.098,28.288],[128.001,27.303],[128.296,26.91],[128.589,26.125],[128.788,25.338],[128.788,24.553],[128.691,23.764],[128.788,23.397],[128.788,21.208],[128.691,19.515],[128.887,19.145],[129.079,18.752],[130.259,18.651],[131.441,18.456],[131.736,17.67],[131.931,17.277],[132.322,16.882],[132.72,16.783],[133.113,16.686],[133.507,16.392],[133.801,16],[134.191,15.804],[134.589,15.708],[134.879,15.309],[135.274,14.523],[135.668,14.131],[135.962,13.738],[136.259,13.341],[137.043,12.949],[137.339,12.56],[137.538,12.166],[137.733,11.77],[137.957,11.76],[138.124,11.77],[138.298,11.776],[138.52,11.77],[138.913,11.475],[138.913,11.084],[139.6,10.493],[139.993,10.493],[140.251,10.489],[140.783,10.392],[141.072,10],[141.371,8.429],[141.467,7.64],[143.311,7.64],[143.728,7.84],[144.319,7.939],[144.517,7.939],[144.91,7.64],[145.103,7.642],[145.301,7.64],[145.696,7.25],[146.092,7.151],[146.483,6.856],[146.683,6.461],[148.646,6.461],[148.646,5.281],[149.334,5.385],[149.501,5.366],[149.727,5.385],[150.019,5.772],[150.116,6.167],[150.316,6.559],[150.712,6.759],[150.905,7.151],[151.199,8.037],[151.103,8.798],[151.298,9.218],[151.498,9.61],[151.889,9.804],[151.99,10.199],[152.774,10.788],[153.168,11.084],[153.464,11.475],[153.758,11.869],[153.758,12.26],[153.66,12.655],[153.658,13.441],[153.66,13.441],[154.447,13.341],[154.838,13.538],[155.233,13.638],[155.233,14.033],[155.134,14.817],[154.939,15.211],[154.838,16.392],[155.233,17.964],[155.626,18.259],[156.021,18.556],[156.806,18.556],[157.197,18.556],[157.594,18.556],[157.788,18.16],[158.184,18.06],[158.576,17.867],[159.462,17.67],[159.462,17.277],[159.462,16.882],[159.756,16.49],[160.938,16.981],[161.132,17.374],[161.329,17.767],[161.624,18.556],[161.92,19.833],[162.016,20.225],[162.309,20.619],[162.704,20.815],[162.803,21.208],[162.113,22.583],[162.309,22.979],[162.507,23.374],[162.899,23.667],[163.493,24.453],[163.886,24.749],[164.081,25.338],[163.886,26.125],[164.176,26.91],[163.59,27.796],[163.196,27.991],[162.803,28.092],[162.607,28.484],[162.507,28.876],[162.507,30.055],[162.507,30.448],[162.309,31.235],[162.309,31.878],[162.408,32.907],[162.704,33.302],[163.098,33.5],[163.493,33.596],[164.176,34.384],[164.965,35.069],[165.36,35.167],[165.654,35.56],[165.947,35.956],[165.947,36.843],[166.145,37.626],[166.639,38.412],[166.735,38.904],[167.126,39.297],[167.421,40.208],[167.421,42.323],[167.618,42.738],[167.719,43.228],[168.012,43.622],[168.405,44.019],[168.801,44.213],[170.077,45],[170.865,45.294],[171.358,46.08],[171.553,46.472],[171.947,46.574],[172.339,46.672],[172.831,46.868],[173.517,47.064],[173.712,47.064],[174.11,46.772],[173.613,45.978],[173.42,45.588],[173.027,45.492],[172.537,44.707],[172.537,43.818],[172.436,43.426],[172.436,42.252],[172.339,41.853],[172.142,41.456],[171.749,41.064],[171.749,39.885],[171.749,39.495],[171.65,39.102],[171.65,38.708],[171.553,38.217],[171.553,37.431],[170.373,37.33],[169.98,37.038],[169.684,36.645],[169.29,36.447],[168.897,36.052],[168.111,35.756],[167.9,35.764],[167.618,35.756],[166.933,35.167],[166.639,34.775],[166.538,34.384],[166.538,33.596],[166.538,33.204],[166.441,32.809],[166.045,32.611],[165.654,32.415],[165.559,31.631],[165.559,31.235],[165.559,30.842],[165.162,30.744],[164.771,30.547],[164.473,30.448],[164.473,28.457],[165.261,27.205],[165.847,26.028],[166.045,25.436],[165.847,24.647],[165.947,24.06],[166.343,23.764],[166.639,23.273],[167.029,23.374],[167.421,23.667],[167.618,24.06],[168.012,24.354],[168.212,25.14],[168.602,25.436],[169.191,25.633],[169.392,25.633],[169.785,25.436],[170.175,25.235],[170.764,25.929],[171.358,26.713],[171.65,27.597],[172.043,28.383],[172.537,29.172],[173.223,29.858],[173.449,29.866],[173.613,29.858],[174.009,29.96],[174.405,30.055],[174.795,30.154],[175.094,30.547],[174.699,31.331],[174.6,32.121],[175.189,33.792],[175.485,33.399],[176.17,32.611],[176.567,32.318],[176.96,31.927],[177.451,31.531],[177.842,31.235],[178.04,30.842],[178.335,30.448],[178.434,30.055],[178.532,29.662],[178.925,29.269],[179.517,29.37],[180.301,29.37],[180.79,29.075],[181.678,28.185],[182.171,27.796],[182.564,27.699],[182.956,27.402],[183.055,27.009],[183.154,26.223],[183.154,24.303],[183.154,22.882],[183.154,21.994],[182.564,20.711],[182.363,19.833],[182.363,18.948],[181.386,18.948],[180.991,18.752],[180.693,18.356],[180.107,17.473],[180.107,17.085],[179.712,16.981],[179.318,16.686],[178.532,16.097],[178.04,15.804],[177.842,15.412],[177.451,15.112],[177.35,14.327],[177.35,13.934],[176.96,13.638],[176.96,13],[176.96,12.36],[177.056,11.869],[177.451,11.574],[177.842,11.281],[178.236,11.084],[178.236,10.588],[178.335,10.101],[178.532,9.509],[178.631,9.018],[178.925,8.525],[179.318,8.429],[179.592,8.417],[179.809,8.429],[180.693,8.037],[180.891,8.037],[181.087,8.037],[181.386,7.64],[181.777,7.64],[182.587,7.64],[182.956,7.741],[184.137,7.668],[184.137,8.135],[184.04,8.525],[184.04,10.691],[183.743,11.084],[183.35,11.281],[183.154,11.281],[182.956,11.281],[182.564,11.574],[182.269,11.967],[181.874,12.56],[181.975,13.148],[182.072,13.638],[182.467,13.837],[185.609,13.837],[185.809,12.46],[185.905,12.065],[186.201,11.673],[186.201,11.231],[186.201,10.788],[185.462,10.493],[185.462,8.135],[186.298,8.135],[186.693,8.135],[187.087,7.939],[187.478,7.546],[187.873,7.25],[188.655,7.051],[189.491,6.956],[189.939,6.956],[190.332,7.051],[191.113,7.151],[191.508,7.151],[191.902,6.956],[192.197,6.559],[192.395,6.268],[193.18,6.167],[193.572,5.97],[193.957,5.97],[194.361,5.97],[194.754,5.874],[194.926,5.88],[195.147,5.874],[195.443,5.478],[195.835,5.185],[196.228,5.088],[196.62,4.791],[197.012,4.591],[197.213,4.2],[197.509,3.81],[197.902,3.514],[198.29,3.221],[198.686,3.221],[198.887,3.221],[199.079,3.221],[199.866,2.725],[200.064,2.333],[200.457,2.138],[200.848,1.744],[201.145,1.353],[201.438,0.958],[201.537,0.565],[201.734,0.169],[202.519,-0.613],[203.11,-1.794],[203.209,-2.187],[203.602,-2.586],[203.895,-2.977],[204.391,-3.369],[204.879,-3.66],[205.176,-4.057],[205.274,-4.548],[205.467,-5.039],[205.467,-5.432],[205.566,-5.828],[205.668,-6.217],[206.158,-6.513],[206.844,-7.3],[207.338,-8.381],[207.139,-8.971],[206.844,-9.366],[206.615,-9.377],[206.452,-9.366],[205.615,-9.462],[205.566,-10.25],[205.668,-10.644],[205.615,-11.034],[206.354,-11.034],[206.354,-11.432],[206.061,-11.822],[206.061,-13.001],[206.061,-13.396],[205.668,-13.789],[205.274,-14.084],[205.371,-15.263],[205.077,-16.444],[204.483,-17.231],[203.701,-18.113],[203.306,-18.409],[203.069,-18.402],[202.816,-18.409],[202.421,-18.707],[202.421,-19.1],[202.421,-19.492],[202.616,-19.884],[203.011,-20.276],[203.405,-20.571],[203.405,-21.357],[203.405,-22.146],[204.483,-22.146],[204.879,-22.439],[205.176,-22.832],[205.371,-23.227],[205.598,-23.238],[205.762,-23.227],[206.158,-23.227],[206.55,-23.423],[206.944,-23.423],[208.124,-23.423],[208.223,-24.406],[208.124,-24.749],[206.158,-24.749],[205.96,-25.093],[205.371,-25.88],[203.895,-25.88],[203.798,-25.093],[203.798,-24.703],[203.602,-24.355],[203.209,-24.307],[202.816,-24.406],[202.374,-24.355],[202.374,-26.568],[199.889,-26.568],[199.176,-27.405],[199.277,-28.042],[199.569,-28.437],[199.965,-28.832],[200.358,-28.925],[201.537,-28.925],[201.931,-28.925],[202.324,-29.027],[202.324,-29.421],[202.616,-29.814],[202.91,-30.203],[203.405,-30.305],[203.798,-30.498],[204.251,-30.508],[204.587,-30.498],[204.978,-30.498],[205.274,-30.895],[205.668,-31.289],[205.96,-31.678],[206.452,-32.073],[206.944,-32.47],[207.139,-32.47],[207.536,-32.27],[207.634,-31.877],[207.338,-31.484],[206.944,-31.191],[206.844,-30.401],[206.158,-29.617],[205.861,-29.224],[205.467,-28.925],[205.371,-28.535],[205.467,-28.143],[205.861,-28.339],[206.158,-28.731],[208.098,-28.731],[208.616,-29.027],[209.303,-29.716],[209.598,-30.109],[209.99,-30.203],[210.386,-30.401],[211.566,-30.009],[211.754,-30.01],[211.958,-30.009],[212.746,-29.716],[213.137,-29.522],[213.334,-28.731],[213.334,-28.339],[213.137,-27.947],[212.746,-27.549],[212.746,-27.158],[212.352,-26.568],[212.452,-25.684],[213.238,-25.684],[213.629,-25.88],[214.121,-26.175],[214.512,-26.079],[215.204,-25.391],[215.301,-24.999],[215.499,-24.209],[215.598,-23.817],[215.792,-23.423],[216.186,-22.907],[216.186,-20.791],[215.792,-20.276],[215.4,-19.983],[215.301,-19.586],[215.204,-19.172],[215.204,-18.018],[217.342,-18.018],[218.545,-18.707],[218.939,-18.901],[219.43,-19.196],[219.92,-19.586],[220.314,-19.687],[220.709,-19.884],[221.102,-20.179],[221.34,-20.174],[221.592,-20.179],[221.988,-20.474],[221.988,-20.867],[221.988,-21.655],[222.085,-22.146],[222.184,-22.514],[222.184,-23.721],[221.197,-23.916],[220.902,-24.406],[220.902,-25.291],[220.902,-25.684],[220.512,-25.88],[220.116,-26.175],[219.819,-26.568],[219.43,-26.764],[219.037,-27.061],[218.939,-27.451],[218.642,-27.849],[218.642,-28.437],[218.741,-29.522],[219.037,-29.911],[219.23,-30.305],[219.332,-30.701],[219.546,-30.71],[219.723,-30.701],[220.61,-30.895],[221.006,-30.895],[221.787,-30.995],[221.787,-34.457],[221.889,-34.827],[221.988,-35.221],[222.283,-35.616],[222.465,-35.615],[222.676,-35.616],[223.066,-35.81],[223.855,-36.697],[224.15,-37.089],[224.832,-37.778],[225.228,-37.778],[225.626,-37.778],[227.196,-36.792],[227.587,-36.697],[228.379,-36.991],[228.767,-37.188],[229.061,-37.582],[229.456,-37.875],[229.665,-37.88],[229.853,-37.875],[230.146,-38.266],[230.585,-38.279],[230.931,-38.266],[231.326,-38.469],[231.719,-38.563],[232.111,-38.856],[232.111,-39.251],[233.095,-40.04],[233.488,-40.236],[233.681,-40.629],[234.077,-40.923],[235.157,-42.203],[235.551,-42.497],[236.144,-43.283],[236.238,-43.674],[236.533,-44.07],[236.633,-44.461],[236.928,-45.249],[237.225,-45.642],[238.009,-46.429],[238.405,-46.622],[238.6,-47.017],[238.809,-47.023],[238.995,-47.017],[239.684,-47.805],[240.074,-48.1],[240.27,-48.493],[240.663,-48.887],[241.055,-49.281],[241.451,-49.572],[241.451,-50.361],[241.551,-50.753],[241.551,-51.542],[241.551,-51.936],[241.842,-52.327],[242.139,-52.72],[242.238,-53.801],[242.238,-54.488],[242.139,-54.883],[242.139,-55.276],[242.139,-55.665],[242.431,-56.062],[242.431,-56.457],[242.629,-57.246],[243.027,-57.635],[243.223,-58.028],[243.517,-58.421],[243.908,-58.323],[244.107,-57.93],[244.496,-57.832],[244.894,-57.536],[245.184,-57.143],[245.092,-56.751],[244.894,-56.357],[244.793,-55.768],[245.092,-54.783],[245.092,-53.061],[245.092,-51.739],[245.092,-51.344],[244.793,-50.952],[244.4,-50.657],[244.4,-50.067],[244.4,-49.474],[244.793,-48.296],[245.092,-47.313],[244.993,-46.72],[244.598,-46.429],[244.204,-46.133],[244.254,-45.518],[244.204,-44.953],[244.301,-44.461],[244.254,-44.07],[244.993,-44.07],[245.383,-44.267],[245.482,-44.66],[245.678,-45.052],[245.973,-45.442],[246.168,-45.841],[246.568,-45.642],[246.568,-44.855],[246.954,-44.562],[248.134,-44.267],[248.134,-44.66],[247.936,-45.052],[247.84,-45.442],[247.548,-45.841],[247.055,-46.133],[246.858,-46.527],[246.464,-46.824],[246.271,-47.707],[245.973,-48.1],[245.678,-48.887],[246.366,-49.674],[246.66,-50.067],[246.66,-50.558],[246.66,-50.952],[247.055,-51.145],[247.251,-51.542],[247.548,-51.936],[248.332,-51.638],[249.118,-51.049],[249.512,-51.344],[249.512,-51.739],[249.316,-52.128],[249.316,-52.523],[249.02,-53.309],[249.02,-53.702],[248.923,-54.194],[248.628,-54.587],[248.628,-55.768],[248.628,-56.161],[248.332,-56.554],[248.134,-56.943],[247.447,-57.734],[247.251,-58.129],[247.35,-58.497],[247.251,-58.911],[247.35,-59.307],[247.35,-59.7],[247.447,-60.192],[247.35,-60.611],[247.447,-60.977],[247.251,-61.369],[247.051,-61.422],[246.858,-61.468],[246.761,-62.255],[246.568,-63.041],[246.568,-63.926],[246.464,-64.714],[245.678,-64.714],[245.678,-61.863],[244.993,-61.863],[244.598,-61.666],[244.598,-61.272],[244.696,-60.882],[244.696,-60.485],[244.894,-60.091],[244.894,-59.307],[244.204,-59.307],[244.012,-59.335],[243.813,-59.406],[243.615,-59.796],[243.714,-60.192],[243.813,-60.587],[243.908,-61.369],[243.908,-61.763],[243.615,-62.159],[243.223,-62.551],[242.824,-62.845],[242.623,-62.845],[242.431,-62.845],[241.941,-63.14],[241.746,-63.535],[241.353,-63.633],[240.173,-64.714],[238.995,-64.714],[238.995,-62.746],[237.324,-62.746],[237.324,-63.14],[237.126,-63.535],[236.34,-64.814],[235.848,-64.714],[235.947,-64.319],[235.947,-63.535],[235.848,-63.14],[235.598,-63.14],[235.355,-63.14],[234.96,-63.337],[234.96,-63.733],[235.061,-64.122],[235.254,-64.714],[234.569,-65.598],[234.178,-65.206],[233.783,-65.011],[233.34,-65.011],[232.897,-65.011],[232.504,-65.206],[232.6,-65.992],[232.897,-66.384],[233.194,-66.778],[233.408,-66.783],[233.585,-66.778],[234.373,-67.073],[234.865,-67.267],[235.157,-67.66],[235.551,-68.155],[236.043,-68.646],[236.436,-68.745],[236.829,-68.94],[237.616,-68.94],[237.712,-70.415],[237.912,-70.811],[238.306,-71.105],[238.699,-71.301],[238.894,-71.694],[239.092,-72.185],[239.486,-72.379],[239.876,-72.578],[240.173,-72.97],[240.663,-73.266],[240.858,-73.659],[241.257,-73.76],[241.459,-73.759],[241.65,-73.76],[241.842,-74.152],[242.043,-74.545],[242.139,-74.939],[242.332,-75.33],[242.629,-75.721],[242.824,-76.12],[243.615,-76.509],[244.035,-76.504],[244.496,-76.509],[245.283,-77.005],[245.579,-77.398],[245.973,-77.884],[246.761,-78.379],[247.772,-78.182],[247.936,-78.083],[248.9,-78.279],[249.118,-78.279],[249.512,-78.083],[249.907,-78.083],[250.3,-78.083],[250.887,-78.379],[251.085,-78.379],[251.477,-78.182],[252.462,-77.79],[253.051,-77.884],[253.47,-78.083],[258.358,-78.083],[258.358,-78.871],[258.556,-79.753],[258.949,-80.053],[259.444,-79.656],[260.033,-79.36],[260.816,-79.557],[261.408,-79.36],[261.803,-78.967],[262.196,-78.871],[262.587,-78.575],[262.488,-78.182],[262.098,-77.79],[262.293,-77.101],[262.712,-77.005],[264.629,-77.005],[265.439,-77.593],[265.733,-77.986],[266.126,-78.379],[267.11,-77.491],[267.504,-77.2],[267.504,-77.593],[267.699,-77.986],[268.095,-77.884],[268.512,-77.593],[269.668,-77.593],[269.668,-77.986],[269.374,-78.379],[269.272,-78.724],[268.483,-78.675],[268.095,-78.724],[268.095,-79.78],[268.683,-80.443],[268.889,-80.443],[269.077,-80.443],[269.374,-80.834],[269.571,-81.231],[269.863,-81.621],[270.158,-82.015],[270.551,-82.41],[270.723,-82.403],[270.941,-82.41],[271.337,-82.605],[271.633,-83.098],[272.42,-84.08],[273.503,-85.161],[274.483,-85.554],[275.072,-85.459],[275.662,-85.259],[275.858,-85.259],[276.251,-85.459],[276.646,-85.85],[276.848,-85.85],[277.136,-85.459],[277.433,-85.061],[277.826,-84.965],[278.029,-84.963],[278.22,-84.965],[278.613,-84.671],[278.22,-84.08],[278.22,-83.884],[278.415,-83.488],[278.806,-83.294],[278.806,-82.899],[278.806,-82.115],[279.402,-82.015],[279.795,-82.21],[280.09,-82.605],[280.973,-83.194],[281.366,-83.294],[281.754,-83.589],[282.051,-83.985],[282.447,-84.375],[282.743,-84.768],[283.529,-84.867],[283.691,-84.855],[283.92,-84.867],[284.118,-85.259],[284.314,-85.654],[284.511,-86.048],[284.511,-86.833],[284.71,-87.619],[285.496,-87.619],[286.305,-87.913],[288.245,-87.913],[288.245,-87.325],[287.855,-87.027],[287.068,-86.636],[286.673,-86.44],[286.28,-86.048],[286.085,-85.654],[285.986,-85.259],[285.986,-84.867],[285.887,-84.473],[285.496,-83.589],[285.396,-83.194],[285.298,-82.806],[285.003,-82.41],[284.608,-82.309],[284.118,-82.115],[283.725,-82.015],[283.624,-81.621],[283.529,-81.231],[282.743,-80.639],[281.564,-79.753],[280.285,-78.967],[279.103,-78.083],[278.123,-76.903],[277.826,-76.509],[277.04,-76.017],[276.944,-75.627],[276.548,-75.233],[276.35,-75.232],[276.154,-75.233],[275.908,-75.232],[275.662,-75.233],[275.272,-75.037],[274.876,-74.939],[273.993,-74.545],[273.598,-74.349],[273.423,-74.354],[273.202,-74.349],[272.814,-74.152],[272.517,-73.76],[272.814,-73.167],[272.613,-72.088],[272.223,-71.694],[271.827,-71.4],[271.73,-71.004],[271.434,-70.513],[271.434,-70.022],[271.434,-69.236],[270.941,-68.449],[270.941,-67.562],[270.845,-66.778],[271.142,-62.551],[271.142,-61.959],[270.748,-61.565],[271.777,-59.895],[271.777,-56.751],[272.223,-56.554],[272.613,-56.85],[273.007,-56.943],[273.402,-57.143],[273.796,-57.246],[274.483,-57.246],[274.483,-58.421],[274.483,-58.816],[274.775,-59.208],[275.173,-59.406],[275.465,-59.796],[275.762,-60.192],[275.957,-60.587],[276.154,-60.977],[276.646,-61.369],[276.848,-61.369],[277.236,-61.176],[277.626,-61.176],[278.022,-61.176],[278.318,-61.565],[278.516,-61.938],[278.516,-63.926],[279.202,-64.714],[279.595,-65.011],[282.447,-65.011],[282.447,-66.116],[282.051,-66.876],[281.754,-67.267],[281.754,-67.66],[281.754,-68.058],[282.051,-68.449],[282.447,-68.94],[282.642,-69.333],[283.035,-69.727],[283.624,-69.63],[283.725,-69.236],[284.118,-68.94],[284.905,-68.94],[285.003,-69.727],[284.71,-70.119],[284.017,-70.811],[284.017,-71.204],[284.017,-71.597],[283.821,-71.989],[283.725,-72.824],[283.725,-73.266],[284.118,-73.366],[284.511,-73.56],[284.511,-73.953],[284.217,-74.349],[284.04,-74.354],[283.821,-74.349],[283.504,-73.953],[282.743,-73.953],[282.743,-74.838],[283.136,-75.627],[283.232,-76.017],[283.529,-76.411],[284.314,-76.804],[284.608,-77.2],[284.71,-77.593],[284.905,-77.986],[285.003,-78.379],[285.003,-79.263],[285.102,-79.656],[285.197,-80.053],[285.496,-80.443],[285.887,-80.542],[286.28,-80.639],[287.068,-80.245],[287.267,-79.853],[287.855,-79.557],[288.447,-79.753],[288.74,-80.149],[289.035,-80.542],[289.425,-80.736],[289.819,-80.443],[289.819,-80.053],[290.115,-79.656],[290.313,-79.656],[290.508,-79.656],[290.9,-79.954],[291.296,-80.245],[291.884,-81.03],[292.178,-81.427],[292.769,-81.427],[293.36,-81.427],[293.749,-81.328],[294.168,-81.231],[296.996,-81.231],[296.996,-80.443],[296.996,-80.053],[297.589,-79.36],[297.796,-79.354],[297.98,-79.36],[298.373,-80.937],[298.767,-81.132],[299.157,-81.427],[299.454,-81.82],[300.046,-82.703],[300.441,-83.194],[300.73,-83.589],[301.517,-83.783],[302.008,-83.985],[302.503,-83.985],[303.387,-83.985],[303.78,-84.18],[304.569,-84.473],[305.059,-84.671],[305.254,-85.061],[305.647,-85.459],[306.04,-85.554],[307.22,-86.34],[307.73,-86.352],[308.107,-86.34],[308.595,-86.539],[309.09,-86.731],[309.874,-87.619],[310.269,-87.913],[311.053,-87.913],[312.236,-87.817],[312.629,-87.523],[313.022,-87.129],[313.415,-87.027],[314.421,-86.933],[314.991,-86.933],[315.478,-87.027],[315.478,-88.209],[315.085,-88.503],[314.691,-88.8],[314.594,-89.191],[314.397,-89.584],[314.103,-89.98],[313.809,-90.373],[313.71,-90.766],[313.61,-91.944],[312.527,-92.143],[312.332,-92.534],[312.236,-92.926],[312.038,-93.321],[311.521,-93.421],[309.603,-93.421],[309.09,-93.519],[308.99,-93.911],[309.287,-94.306],[309.68,-94.404],[310.069,-94.795],[310.467,-94.795],[310.86,-94.795],[311.67,-94.203],[314.079,-94.203],[314.892,-94.306],[315.676,-94.306],[316.363,-94.993],[316.758,-95.384],[317.152,-95.585],[317.152,-96.174],[317.152,-96.763],[316.949,-96.82],[316.758,-96.862],[316.658,-97.231],[316.658,-98.43],[317.62,-98.533],[318.623,-97.746],[318.623,-97.352],[318.824,-96.957],[319.41,-96.174],[322.533,-96.174],[323.048,-96.074],[323.54,-95.877],[323.931,-95.585],[323.931,-94.404],[325.777,-94.404],[326.587,-94.01],[326.884,-93.615],[327.671,-93.126],[328.163,-92.926],[328.749,-92.632],[328.947,-92.632],[329.342,-92.926],[329.241,-93.321],[329.241,-94.108],[329.342,-94.5],[329.733,-94.5],[330.42,-94.597],[330.42,-95.779],[330.324,-96.174],[330.324,-96.566],[330.42,-96.957],[330.814,-97.152],[331.6,-96.566],[331.996,-96.27],[332.392,-96.27],[332.782,-96.27],[333.175,-96.469],[333.47,-96.862],[333.866,-97.152],[334.063,-97.546],[334.249,-97.546],[334.454,-97.546],[334.845,-97.844],[335.238,-98.042],[335.337,-98.43],[334.749,-99.025],[334.355,-99.222],[334.021,-99.236],[333.569,-99.32],[333.47,-99.708],[333.175,-100.104],[332.782,-100.4],[331.897,-100.598],[331.504,-100.598],[330.863,-100.4],[329.733,-100.598],[329.342,-100.598],[329.118,-100.595],[328.85,-100.598],[328.457,-100.894],[328.064,-101.284],[327.62,-101.284],[327.178,-101.284],[326.785,-100.993],[327.079,-100.598],[327.285,-100.597],[327.472,-100.598],[327.865,-100.4],[327.865,-99.811],[327.865,-99.613],[327.865,-99.222],[327.225,-98.923],[326.293,-99.613],[326.197,-99.983],[326.197,-102.386],[325.9,-102.76],[325.41,-102.954],[325.014,-103.148],[324.623,-103.148],[324.228,-103.252],[323.344,-103.349],[322.951,-103.741],[322.559,-103.839],[322.066,-104.035],[321.378,-104.334],[320.887,-104.727],[320.493,-105.119],[320.395,-105.512],[319.999,-105.609],[319.512,-105.709],[318.623,-105.808],[318.233,-105.903],[317.348,-105.903],[317.152,-106.987],[315.972,-107.773],[315.478,-108.265],[314.691,-108.462],[314.262,-108.46],[313.809,-108.462],[313.415,-108.658],[312.92,-108.853],[312.527,-109.247],[312.332,-109.246],[312.137,-109.247],[311.741,-109.443],[311.35,-109.443],[310.957,-109.443],[310.566,-109.642],[310.069,-109.835],[309.09,-110.23],[308.694,-110.525],[307.415,-110.525],[306.925,-110.525],[306.533,-110.326],[306.04,-109.936],[305.451,-109.835],[304.368,-110.034],[303.978,-110.034],[303.483,-110.131],[303.094,-110.525],[302.894,-110.525],[302.699,-110.525],[301.814,-110.82],[301.027,-111.313],[300.634,-111.41],[300.046,-111.41],[299.454,-111.41],[299.061,-111.214],[298.668,-110.92],[298.767,-110.525],[298.47,-110.131],[298.277,-109.738],[297.883,-109.346],[298.277,-109.247],[298.668,-108.951],[299.061,-108.757],[299.258,-107.968],[299.258,-107.577],[298.866,-107.183],[298.668,-106.79],[298.251,-106.594],[296.6,-106.594],[296.6,-108.02],[294.59,-108.02],[294.59,-109.346],[294.933,-109.346],[296.111,-109.443],[296.897,-109.936],[296.798,-110.326],[296.405,-110.427],[295.988,-110.575],[293.36,-110.575],[293.36,-109.738],[293.36,-109.346],[293.163,-108.951],[292.769,-108.853],[292.079,-108.658],[291.884,-108.658],[291.491,-108.951],[290.704,-109.247],[288.493,-109.247],[286.772,-109.247],[286.28,-109.247],[285.298,-108.757],[284.71,-108.757],[284.118,-108.757],[283.624,-108.951],[283.232,-109.443],[282.811,-109.543],[282.051,-109.543],[281.952,-108.951],[282.051,-108.561],[282.051,-107.28],[281.465,-107.183],[281.071,-107.379],[281.071,-108.168],[280.973,-108.951],[280.579,-109.247],[280.184,-109.346],[279.795,-109.543],[279.402,-109.738],[279.004,-110.131],[278.71,-110.82],[279.004,-111.803],[279.103,-112.196],[278.908,-112.591],[278.613,-112.984],[278.415,-113.377],[278.022,-113.475],[277.626,-113.772],[277.53,-114.163],[277.136,-114.262],[276.949,-114.261],[276.745,-114.262],[276.348,-114.458],[275.858,-114.554],[275.465,-114.655],[274.68,-114.655],[273.796,-114.752],[273.402,-114.752],[273.007,-114.554],[272.613,-114.36],[272.324,-113.968],[271.827,-113.87],[271.408,-113.772],[270.551,-113.772],[270.059,-113.67],[268.78,-113.67],[267.798,-113.576],[267.404,-113.277],[267.009,-113.277],[266.62,-113.277],[266.225,-113.475],[265.831,-113.576],[265.439,-113.968],[264.947,-114.262],[264.556,-114.36],[263.671,-114.36],[263.178,-114.458],[262.587,-114.554],[261.998,-114.655],[261.507,-114.95],[261.9,-115.344],[261.113,-115.736],[260.719,-116.029],[260.522,-116.421],[259.736,-116.525],[258.853,-116.525],[258.756,-116.917],[259.051,-117.306],[259.832,-117.702],[259.639,-118.096],[259.436,-118.095],[259.246,-118.096],[258.728,-118.344],[253.837,-118.344],[253.741,-117.604],[253.447,-117.212],[252.756,-116.525],[252.361,-116.525],[251.973,-116.525],[251.579,-116.818],[251.772,-117.212],[251.973,-117.702],[251.973,-118.096],[252.264,-118.491],[252.658,-118.585],[252.658,-118.978],[251.873,-118.978],[251.381,-119.177],[250.986,-119.472],[250.77,-119.465],[250.498,-119.472],[249.71,-119.867],[249.316,-119.867],[248.827,-119.766],[247.936,-119.766],[247.154,-119.867],[246.568,-120.159],[246.342,-120.154],[246.071,-120.159],[245.283,-120.455],[244.616,-120.461],[244.007,-120.455],[243.223,-120.652],[242.824,-120.748],[242.431,-120.455],[242.431,-120.064],[242.332,-119.177],[240.197,-119.177],[239.288,-118.978],[239.288,-118.585],[239.486,-118.096],[239.779,-117.702],[240.173,-117.503],[240.566,-117.408],[240.759,-117.015],[241.155,-116.718],[241.257,-116.325],[241.353,-115.908],[241.257,-115.54],[240.858,-115.54],[240.074,-115.736],[239.684,-115.833],[239.428,-115.834],[239.189,-115.833],[238.798,-115.933],[238.405,-116.226],[237.983,-116.325],[237.616,-116.226],[236.633,-116.277],[236.633,-115.736],[237.024,-115.54],[237.421,-115.344],[237.814,-114.85],[237.616,-114.163],[236.733,-114.554],[236.34,-114.85],[235.947,-115.246],[235.551,-115.441],[235.254,-115.833],[235.254,-116.226],[234.865,-116.325],[234.027,-116.325],[233.585,-116.325],[233.194,-116.325],[233.194,-115.933],[232.801,-115.639],[231.572,-115.246],[230.537,-115.736],[229.556,-115.833],[229.16,-115.833],[228.866,-116.226],[228.475,-116.325],[228.082,-116.226],[227.783,-115.833],[226.702,-116.226],[226.115,-115.933],[226.214,-115.05],[226.214,-113.87],[226.115,-113.081],[224.051,-113.081],[223.855,-114.262],[223.464,-114.554],[222.969,-114.95],[222.579,-115.05],[222.184,-115.344],[221.689,-115.639],[221.296,-116.029],[220.61,-116.917],[220.61,-117.114],[220.709,-117.503],[221.102,-117.702],[220.902,-118.195],[220.902,-118.978],[220.902,-119.867],[220.806,-120.748],[220.806,-121.537],[220.61,-121.929],[220.217,-122.225],[219.723,-122.617],[219.23,-122.816],[218.545,-122.914],[217.858,-122.715],[217.66,-122.32],[217.561,-121.929],[216.921,-121.832],[215.792,-122.225],[215.694,-122.715],[215.301,-123.11],[215.006,-123.5],[214.61,-123.5],[214.23,-123.508],[213.629,-123.597],[213.334,-123.994],[212.352,-124.386],[211.66,-124.19],[211.17,-123.994],[210.681,-123.7],[210.188,-123.5],[209.696,-123.11],[210.089,-122.32],[210.386,-121.929],[210.681,-121.537],[210.778,-121.02],[210.681,-120.552],[208.147,-120.552],[207.634,-120.358],[206.503,-120.064],[205.371,-120.358],[204.783,-120.652],[203.895,-120.849],[203.504,-121.24],[202.91,-121.437],[202.519,-121.24],[202.126,-120.849],[201.537,-121.14],[201.438,-121.929],[201.438,-122.715],[200.947,-123.11],[200.556,-123.406],[200.158,-123.406],[199.767,-123.5],[199.373,-123.307],[199.129,-122.914],[198.389,-123.01],[197.998,-123.01],[197.581,-123.207],[195.639,-123.207],[194.85,-123.01],[193.772,-123.207],[193.376,-123.207],[193.277,-122.816],[192.616,-122.816],[192.004,-122.816],[191.61,-122.914],[191.163,-122.864],[191.217,-123.597],[191.113,-123.994],[191.163,-124.386],[190.525,-124.485],[190.132,-124.386],[189.939,-123.994],[188.951,-123.5],[188.365,-123.597],[187.97,-123.994],[188.068,-124.386],[188.857,-124.386],[189.246,-124.386],[189.642,-124.682],[189.835,-125.075],[190.233,-125.172],[190.624,-125.368],[190.92,-125.96],[190.92,-126.153],[190.72,-126.548],[190.132,-126.548],[189.149,-126.452],[188.758,-126.153],[188.365,-125.96],[188.167,-125.469],[187.873,-125.075],[187.478,-124.781],[186.962,-124.386],[184.53,-124.386],[184.137,-124.19],[184.233,-123.797],[184.53,-123.207],[184.53,-123.01],[184.137,-122.816],[183.839,-122.419],[183.204,-122.32],[182.956,-122.32],[182.564,-122.419],[181.777,-122.419],[181.287,-122.225],[180.889,-121.929],[180.107,-121.929],[179.318,-121.929],[178.313,-121.732],[178.137,-121.732],[177.941,-121.832],[178.532,-121.929],[178.827,-122.32],[179.22,-122.617],[179.517,-123.01],[179.908,-123.207],[180.327,-123.213],[180.693,-123.207],[181.087,-123.207],[181.287,-123.597],[181.678,-123.893],[182.467,-124.485],[182.956,-125.27],[183.743,-125.469],[184.137,-125.469],[184.53,-125.566],[184.921,-125.566],[185.313,-125.761],[185.413,-126.153],[185.71,-126.548],[186.493,-126.748],[186.887,-126.748],[187.285,-126.845],[187.772,-126.845],[188.167,-126.942],[188.559,-127.238],[188.951,-127.535],[188.951,-127.924],[189.149,-128.713],[191.113,-128.713],[191.217,-129.304],[191.217,-129.697],[191.408,-130.088],[191.607,-130.088],[191.806,-130.088],[192.004,-130.484],[191.902,-130.877],[191.806,-131.268],[191.605,-131.317],[191.408,-131.367],[191.408,-131.761],[191.217,-132.151],[191.006,-132.153],[190.822,-132.151],[190.822,-132.546],[190.624,-133.038],[190.132,-133.432],[189.741,-133.727],[189.496,-133.726],[189.246,-133.727],[188.857,-133.825],[188.806,-135.005],[185.929,-135.005],[185.118,-135.201],[184.233,-135.299],[183.839,-135.299],[183.447,-135.102],[183.154,-134.713],[182.758,-134.611],[182.072,-135.299],[181.678,-135.398],[181.064,-135.494],[180.499,-135.398],[180.499,-134.216],[179.318,-134.216],[178.925,-134.512],[179.123,-134.906],[179.517,-135.005],[179.908,-135.768],[179.809,-136.185],[177.668,-136.185],[176.863,-136.38],[175.876,-136.38],[175.485,-136.481],[175.683,-136.872],[176.368,-137.562],[176.587,-137.567],[176.764,-137.562],[177.158,-137.854],[177.158,-138.643]],\"c\":true},\"ix\":2},\"nm\":\"Path 30\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":30,\"ty\":\"sh\",\"ix\":31,\"ks\":{\"a\":0,\"k\":{\"i\":[[0,0.444],[0,0.146],[0,0.072],[0,0],[-0.149,0],[-0.03,-0.018],[0,0],[0,0]],\"o\":[[0,-0.145],[0,-0.078],[0,0],[0.147,0],[0.037,0],[0,0],[0,0],[0,-0.444]],\"v\":[[25.267,-112.787],[25.362,-113.178],[25.314,-113.377],[26.151,-113.377],[26.544,-113.475],[26.641,-113.439],[26.641,-111.654],[25.314,-111.654]],\"c\":true},\"ix\":2},\"nm\":\"Path 31\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":31,\"ty\":\"sh\",\"ix\":32,\"ks\":{\"a\":0,\"k\":{\"i\":[[0,0],[0,0],[0,0],[0.295,-0.396],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],\"o\":[[0,0],[0,0],[0,0],[-0.296,0.392],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],\"v\":[[-242.727,-137.658],[-244.988,-137.658],[-246.462,-137.757],[-247.84,-135.69],[-249.315,-134.216],[-251.082,-134.216],[-252.756,-133.531],[-252.068,-132.349],[-250.099,-131.658],[-249.315,-132.643],[-248.136,-131.859],[-247.053,-132.447],[-246.854,-133.239],[-245.578,-133.333],[-245.184,-134.512],[-244.104,-135.299],[-243.219,-134.02],[-242.234,-134.416],[-240.566,-135.005],[-240.076,-136.872],[-239.483,-138.15],[-241.646,-138.643]],\"c\":true},\"ix\":2},\"nm\":\"Path 32\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":32,\"ty\":\"sh\",\"ix\":33,\"ks\":{\"a\":0,\"k\":{\"i\":[[0,0],[0.151,-0.127],[0.368,-0.075],[0,0],[-0.171,0],[-0.27,-0.049],[-0.146,-0.026],[0,0],[-0.05,0],[0.1,0.247],[0.1,0.096],[0.248,0]],\"o\":[[-0.198,0.027],[-0.271,0.219],[0,0],[0.146,-0.045],[0.3,0],[0.146,0.022],[0,0],[0.05,0],[-0.028,-0.268],[-0.048,-0.118],[-0.174,-0.172],[0,0]],\"v\":[[158.576,-137.167],[158.28,-136.773],[157.396,-136.38],[157.396,-135.891],[157.788,-136.086],[158.576,-135.987],[158.969,-135.789],[159.363,-135.789],[159.462,-135.891],[159.363,-136.58],[159.363,-136.968],[158.772,-137.167]],\"c\":true},\"ix\":2},\"nm\":\"Path 33\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":33,\"ty\":\"sh\",\"ix\":34,\"ks\":{\"a\":0,\"k\":{\"i\":[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],\"o\":[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],\"v\":[[-203.503,-136.481],[-203.699,-135.201],[-201.929,-134.216],[-200.257,-133.333],[-198.39,-133.239],[-197.307,-134.317],[-197.406,-135.201],[-198.782,-136.284],[-200.651,-136.284],[-201.73,-136.773]],\"c\":true},\"ix\":2},\"nm\":\"Path 34\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":34,\"ty\":\"sh\",\"ix\":35,\"ks\":{\"a\":0,\"k\":{\"i\":[[0,0],[0,0],[0.146,0],[0.113,0.009],[0.15,-0.029],[0.197,-0.246],[0.077,-0.126],[0.096,-0.12],[0.171,-0.077],[0.159,0.026],[0.113,-0.008],[0.124,-0.021],[0.15,-0.069],[0.17,-0.074],[0.15,-0.03],[0.147,0],[0.298,0],[0.2,-0.05],[0.15,-0.051],[0.123,-0.047],[0.171,-0.021],[0.067,0.006],[0.069,-0.009],[0.544,0.028],[0.295,0],[0,0],[0.149,0],[0.126,0.008],[0.174,-0.026],[0.147,-0.027],[0.22,-0.196],[0.074,-0.128],[0.173,-0.295],[0,0],[0.121,-0.125],[0.122,-0.122],[0.146,-0.099],[0.122,-0.049],[0.196,-0.049],[0.101,-0.071],[0.077,-0.146],[0,-0.125],[0,-0.346],[0.222,0],[0.466,-0.023],[0.146,-0.026],[0,-0.221],[0.2,-0.27],[0.079,-0.172],[0,-0.123],[0,0],[0,0],[0.218,0],[0.155,0.008],[0.255,-0.03],[0.295,-0.145],[0.169,-0.122],[0,-0.343],[-0.047,-0.176],[-0.122,0.021],[-0.271,0],[-0.223,-0.024],[0,-0.245],[0,0],[-0.073,-0.145],[0.294,0.024],[0.296,0],[0.201,-0.028],[0,0],[0.368,-0.051],[0.295,-0.12],[0,-0.123],[0,-0.17],[0.025,-0.121],[0.075,-0.173],[0.028,-0.123],[0.027,-0.147],[0.271,-0.027],[0.124,-0.076],[0.096,-0.149],[0.071,-0.124],[0.047,-0.148],[0,-0.321],[0,-0.15],[0,-0.149],[0,-0.148],[0,0],[-0.07,0.1],[-0.124,0.099],[-0.05,-0.099],[-0.048,-0.097],[-0.073,-0.147],[-0.099,0.198],[-0.025,0.121],[-0.127,-0.075],[-0.172,-0.12],[-0.271,-0.267],[-0.1,-0.124],[0,0],[0,0],[-0.047,-0.148],[0,0],[-0.567,-0.05],[-0.169,-0.025],[-0.347,-0.049],[-0.266,0],[0,0],[-0.146,0],[-0.122,0],[0,0],[0.076,0.098],[0.049,0.148],[0,0.296],[0.061,-0.011],[0.055,0.041],[0.095,0.121],[0.048,0.124],[0.121,0.149],[0.143,0.146],[0.148,0.193],[0.076,0.099],[0.077,-0.004],[0.027,0.069],[0.027,0.122],[0,0.151],[0,0.241],[0,0],[-0.072,0.171],[-0.023,0.124],[-0.118,0.444],[-0.122,0.123],[-0.224,0.322],[-0.098,0.073],[-0.095,0.048],[-0.097,0.074],[-0.097,0.077],[-0.099,0.075],[-0.197,0.296],[-0.07,0.121],[-0.102,0.101],[-0.124,0.072],[-0.075,-0.017],[-0.046,0.023],[-0.148,0.294],[-0.048,0.121],[-0.076,0.123],[-0.097,0.144],[-0.095,0.146],[-0.019,0.121],[-0.32,0.024],[-0.07,-0.008],[-0.097,0.027],[-0.167,0.074],[-0.086,-0.016],[-0.082,0.023],[-0.12,0.178],[-0.102,0.074],[-0.122,0.022],[-0.068,-0.007],[-0.061,0.011],[-0.126,0.051],[-0.144,0.124],[-0.097,0.124],[-0.124,0.098],[0,0.221],[0.025,0.274],[-0.298,0],[-0.162,-0.009],[-0.385,0.153],[-0.148,0.121],[-0.224,0.074],[-0.067,-0.006],[-0.064,0.014],[-0.344,0],[0,0],[-0.12,0.071],[-0.196,0.074],[-0.296,0],[-0.271,0.046],[-0.395,0],[0,0],[-0.123,0.072],[-0.245,0.295],[-0.126,0.074],[-0.125,0.023],[-0.294,0],[0,0.246],[0.053,0.175],[0.075,0.119],[0.123,0.073],[0.188,-0.037],[0.127,0.008],[0.198,0]],\"o\":[[0,0],[-0.151,0],[-0.131,0.011],[-0.141,-0.011],[-0.322,0.05],[-0.068,0.099],[-0.07,0.121],[-0.098,0.122],[-0.169,0.078],[-0.099,-0.016],[-0.145,0],[-0.147,0.027],[-0.17,0.075],[-0.148,0.074],[-0.115,0.022],[-0.295,0.022],[-0.223,0],[-0.147,0.048],[-0.124,0.05],[-0.172,0.051],[-0.066,0.015],[-0.062,-0.006],[-0.543,0.079],[-0.292,-0.021],[0,0],[-0.146,0],[-0.157,0.013],[-0.151,-0.011],[-0.149,0.028],[-0.293,0.075],[-0.126,0.099],[-0.194,0.268],[0,0],[-0.124,0.1],[-0.124,0.122],[-0.122,0.126],[-0.097,0.048],[-0.197,0.076],[-0.124,0.026],[-0.121,0.101],[-0.071,0.123],[-0.05,0.314],[-0.219,-0.026],[-0.468,-0.023],[-0.148,0],[0.098,0.172],[0,0.346],[-0.101,0.148],[-0.048,0.123],[0,0],[0,0],[-0.22,0.026],[-0.2,0.009],[-0.211,-0.011],[-0.32,0.049],[-0.194,0.097],[-0.273,0.196],[0,0.197],[0.148,-0.029],[0.245,-0.079],[0.222,0],[-0.076,0.221],[0,0],[0,0.194],[-0.294,0],[-0.294,-0.028],[-0.196,0],[0,0],[-0.392,0],[-0.296,0.024],[0.026,0.15],[0.026,0.148],[0,0.15],[-0.048,0.171],[-0.048,0.124],[-0.023,0.121],[-0.292,0],[-0.121,0],[-0.147,0.094],[-0.072,0.099],[-0.072,0.147],[-0.128,0.271],[0,0.147],[0,0.144],[0,0.148],[0,0],[0.074,-0.119],[0.104,-0.121],[0.123,0.074],[0.049,0.096],[0.1,0.147],[0.146,-0.147],[0.048,-0.122],[0.149,0.073],[0.169,0.12],[0.293,0.224],[0.122,0.12],[0,0],[0,0],[0.051,0.149],[0,0],[0.567,0],[0.196,0],[0.32,0.027],[0.27,0.027],[0,0],[0.148,0],[0.123,0],[0,0],[-0.071,-0.126],[-0.074,-0.121],[-0.097,-0.267],[-0.053,-0.012],[-0.081,0.015],[-0.148,-0.124],[-0.075,-0.102],[-0.102,-0.173],[-0.124,-0.148],[-0.174,-0.172],[-0.072,-0.1],[-0.035,-0.046],[-0.089,0.003],[-0.049,-0.121],[-0.023,-0.126],[-0.023,-0.243],[0,0],[0.049,-0.17],[0.05,-0.125],[0.099,-0.442],[0.027,-0.143],[0.271,-0.267],[0.047,-0.096],[0.095,-0.074],[0.098,-0.046],[0.099,-0.074],[0.099,-0.071],[0.27,-0.217],[0.074,-0.123],[0.074,-0.124],[0.095,-0.095],[0.066,-0.04],[0.065,0.015],[0.271,-0.171],[0.049,-0.124],[0.072,-0.147],[0.096,-0.146],[0.098,-0.151],[0.077,-0.124],[0.348,0],[0.075,-0.01],[0.089,0.011],[0.172,-0.048],[0.092,-0.037],[0.075,0.014],[0.195,-0.071],[0.074,-0.095],[0.101,-0.075],[0.061,-0.013],[0.066,0.005],[0.124,-0.026],[0.172,-0.074],[0.128,-0.097],[0.1,-0.122],[0.145,-0.124],[0,-0.273],[0.293,-0.024],[0.193,-0.007],[0.351,0.02],[0.173,-0.049],[0.17,-0.148],[0.056,-0.011],[0.067,0.006],[0.322,-0.096],[0,0],[0.171,0],[0.17,-0.127],[0.272,-0.096],[0.296,0],[0.364,-0.051],[0,0],[0.173,0],[0.321,-0.222],[0.101,-0.124],[0.099,-0.049],[0.266,-0.076],[0.077,-0.224],[0,-0.197],[-0.05,-0.147],[-0.047,-0.099],[-0.17,-0.108],[-0.111,0.022],[-0.199,0],[0,0]],\"v\":[[105.484,-136.185],[105.098,-136.185],[104.703,-136.086],[104.342,-136.093],[103.915,-136.086],[103.126,-135.69],[103.027,-135.299],[102.833,-134.906],[102.441,-134.611],[101.965,-134.586],[101.652,-134.611],[101.258,-134.611],[100.866,-134.416],[100.474,-134.119],[100.078,-133.921],[99.689,-133.921],[98.9,-133.921],[98.309,-133.825],[97.918,-133.628],[97.523,-133.531],[97.132,-133.239],[96.934,-133.236],[96.74,-133.239],[95.359,-133.239],[94.574,-133.333],[94.082,-133.333],[93.69,-133.239],[93.275,-133.242],[92.806,-133.239],[92.411,-133.038],[91.626,-132.742],[91.427,-132.349],[90.938,-131.564],[88.185,-131.564],[87.793,-131.268],[87.497,-130.877],[87.203,-130.484],[86.807,-130.386],[86.22,-130.286],[85.823,-130.189],[85.432,-129.893],[85.432,-129.497],[85.432,-128.614],[84.844,-128.713],[83.661,-128.713],[83.272,-128.614],[83.565,-128.122],[83.072,-127.337],[82.678,-127.041],[82.678,-126.649],[82.678,-126.257],[82.678,-125.469],[82.091,-125.368],[81.572,-125.376],[80.909,-125.368],[80.025,-125.075],[79.536,-124.781],[79.042,-123.994],[79.237,-123.5],[79.633,-123.597],[80.246,-123.893],[80.811,-123.797],[80.615,-123.207],[80.615,-123.01],[80.909,-122.617],[79.831,-122.419],[79.042,-122.522],[78.548,-122.419],[78.548,-121.14],[77.569,-121.14],[76.78,-120.849],[76.78,-120.455],[76.98,-120.064],[76.879,-119.669],[76.484,-119.373],[76.484,-118.978],[76.387,-118.585],[75.599,-118.585],[75.207,-118.585],[74.913,-118.195],[74.913,-117.799],[74.523,-117.604],[74.473,-116.793],[74.421,-116.421],[74.523,-116.029],[74.473,-115.639],[75.503,-115.54],[75.599,-115.933],[75.993,-116.128],[76.387,-116.029],[76.484,-115.639],[76.78,-115.246],[77.174,-115.639],[77.174,-116.029],[77.569,-115.833],[77.96,-115.441],[78.846,-114.95],[79.042,-114.554],[78.353,-113.67],[78.353,-113.475],[78.548,-113.081],[80.689,-113.081],[82.091,-112.787],[82.579,-112.787],[83.467,-112.591],[84.126,-112.591],[84.743,-112.591],[85.135,-112.687],[85.432,-112.64],[85.432,-113.475],[85.333,-113.87],[84.941,-114.066],[84.941,-114.85],[84.764,-114.839],[84.548,-114.85],[84.156,-115.144],[84.156,-115.54],[83.763,-115.833],[83.37,-116.226],[82.876,-116.718],[82.777,-117.114],[82.587,-117.151],[82.384,-117.212],[82.384,-117.604],[82.384,-117.998],[82.188,-118.585],[82.188,-118.784],[82.579,-119.077],[82.678,-119.472],[82.678,-120.652],[83.072,-120.849],[83.763,-121.636],[83.861,-122.027],[84.251,-122.127],[84.645,-122.225],[84.645,-122.617],[85.04,-122.715],[85.725,-123.406],[85.725,-123.797],[86.125,-123.994],[86.316,-124.386],[86.536,-124.392],[86.71,-124.386],[87.299,-125.075],[87.397,-125.469],[87.596,-125.863],[87.988,-126.153],[88.28,-126.548],[88.28,-126.942],[89.169,-126.942],[89.385,-126.936],[89.66,-126.942],[89.954,-127.337],[90.216,-127.342],[90.448,-127.337],[90.938,-127.633],[90.938,-128.025],[91.332,-128.122],[91.53,-128.122],[91.723,-128.122],[92.118,-128.221],[92.508,-128.516],[92.706,-128.909],[93.103,-129.106],[93.493,-129.497],[93.397,-130.189],[94.184,-130.286],[94.711,-130.274],[95.755,-130.386],[96.052,-130.776],[96.546,-131.171],[96.734,-131.17],[96.935,-131.171],[97.743,-131.464],[100.057,-131.464],[100.474,-131.658],[100.866,-132.055],[101.652,-132.151],[102.441,-132.151],[103.253,-132.742],[105.165,-132.742],[105.587,-132.937],[106.273,-133.727],[106.471,-134.119],[106.867,-134.216],[107.648,-134.216],[107.846,-134.808],[107.549,-135.201],[107.354,-135.591],[107.258,-135.987],[106.73,-136.023],[106.375,-135.987],[105.879,-136.185]],\"c\":true},\"ix\":2},\"nm\":\"Path 35\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":35,\"ty\":\"sh\",\"ix\":36,\"ks\":{\"a\":0,\"k\":{\"i\":[[0.099,0.396],[0,0],[0,0],[0,0]],\"o\":[[0,0],[0,0],[0,0],[0,0]],\"v\":[[-237.518,-136.185],[-237.319,-135.398],[-235.157,-135.201],[-235.255,-136.185]],\"c\":true},\"ix\":2},\"nm\":\"Path 36\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":36,\"ty\":\"sh\",\"ix\":37,\"ks\":{\"a\":0,\"k\":{\"i\":[[0,0],[0,0],[-0.197,-0.391],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[-0.392,0.294],[0,0],[0.491,0],[0,0],[0,0],[0,0],[0,0],[-0.295,-0.591],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],\"o\":[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0.394,-0.297],[0,0],[-0.491,0],[0,0],[0,0],[0,0],[0,0],[0.295,0.588],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],\"v\":[[-218.642,-134.02],[-217.952,-133.038],[-215.593,-131.268],[-213.432,-130.583],[-212.254,-130.974],[-211.267,-131.171],[-210.481,-130.286],[-209.793,-128.516],[-208.807,-129.007],[-207.14,-129.106],[-205.96,-129.304],[-205.861,-130.386],[-205.861,-131.955],[-205.174,-132.742],[-205.566,-133.921],[-207.237,-134.713],[-208.318,-134.02],[-210.186,-135.201],[-211.758,-135.201],[-210.578,-134.216],[-209.203,-132.447],[-210.382,-132.349],[-212.35,-134.216],[-213.825,-134.216],[-213.728,-133.038],[-213.333,-131.761],[-215.102,-132.843],[-215.987,-134.808],[-218.544,-135.69]],\"c\":true},\"ix\":2},\"nm\":\"Path 37\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":37,\"ty\":\"sh\",\"ix\":38,\"ks\":{\"a\":0,\"k\":{\"i\":[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0.393,-0.094],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],\"o\":[[0,0],[0,0],[0,0],[0,0],[0,0.689],[0,0],[0,0],[-0.393,0.099],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[-0.492,0.592],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],\"v\":[[-227.882,-135.591],[-228.474,-134.906],[-229.553,-134.611],[-229.454,-133.825],[-228.278,-133.038],[-228.572,-131.564],[-227.096,-131.367],[-227.096,-130.583],[-228.278,-130.484],[-230.243,-130.484],[-231.522,-131.268],[-232.8,-132.843],[-234.371,-133.432],[-235.747,-133.432],[-237.125,-134.119],[-238.107,-134.317],[-239.975,-133.727],[-240.957,-132.349],[-241.943,-131.367],[-243.023,-130.286],[-242.826,-129.106],[-240.665,-129.007],[-238.795,-128.614],[-237.125,-128.812],[-235.65,-129.304],[-233.093,-128.909],[-231.422,-128.909],[-233.389,-128.317],[-235.255,-128.317],[-236.534,-127.728],[-236.338,-126.845],[-235.157,-126.349],[-232.7,-126.349],[-230.243,-127.238],[-228.669,-128.419],[-226.902,-128.614],[-224.54,-128.614],[-222.18,-128.614],[-221.296,-129.697],[-220.706,-131.761],[-221.492,-132.546],[-222.575,-132.546],[-222.771,-131.658],[-224.147,-132.151],[-225.817,-133.432],[-225.817,-134.416],[-226.406,-135.591]],\"c\":true},\"ix\":2},\"nm\":\"Path 38\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":38,\"ty\":\"sh\",\"ix\":39,\"ks\":{\"a\":0,\"k\":{\"i\":[[0,0],[0,0],[-0.198,-0.395],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[-0.494,-0.392],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[-0.49,0],[0,0.393],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],\"o\":[[0,0],[0,0],[0.197,0.392],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0.49,0.392],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0.491,0],[0,-0.395],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],\"v\":[[-194.753,-135.005],[-196.424,-134.808],[-195.735,-132.742],[-194.656,-130.877],[-195.538,-129.304],[-194.457,-128.122],[-192.588,-126.942],[-189.935,-127.14],[-188.656,-127.924],[-186.885,-126.649],[-184.037,-126.548],[-180.791,-126.548],[-179.317,-126.942],[-178.631,-127.633],[-177.644,-126.845],[-175.976,-126.942],[-173.124,-127.238],[-172.926,-128.317],[-171.845,-129.007],[-172.14,-130.583],[-174.699,-131.268],[-177.451,-131.859],[-179.513,-131.171],[-182.564,-130.484],[-184.525,-130.286],[-187.28,-130.776],[-189.541,-130.676],[-191.408,-132.151],[-191.607,-133.628],[-192.293,-135.005]],\"c\":true},\"ix\":2},\"nm\":\"Path 39\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":39,\"ty\":\"sh\",\"ix\":40,\"ks\":{\"a\":0,\"k\":{\"i\":[[0.164,0],[0,0],[0.146,0],[0.762,0],[0.075,-0.323],[0.125,-0.294],[0.05,-0.122],[0.024,-0.198],[0.024,-0.122],[0.026,-0.146],[0,0],[-0.124,-0.149],[-0.124,-0.1],[-0.121,-0.053],[-0.167,-0.075],[-0.124,-0.047],[-0.124,-0.194],[-0.073,-0.145],[-0.101,-0.121],[-0.269,0],[-0.39,0.025],[-0.026,0.196],[-0.026,0.126],[-0.071,0.174],[-0.496,0],[-0.466,0.023],[-0.093,-0.002],[-0.203,0.101],[-0.124,0.049],[-0.149,0],[-0.122,-0.049],[-0.176,-0.048],[-0.147,0],[-0.272,0.199],[-0.148,0.097],[-0.218,0],[0,0],[-0.17,-0.051],[-0.121,-0.026],[-0.172,0],[0,0],[-0.096,0.415],[-0.076,0.147],[-0.101,0.173],[-0.049,0.171],[-0.022,0.121],[0.12,0.023],[0.06,-0.009],[0.066,0.027],[0.145,0.045],[0.122,0],[0.216,-0.015],[0.192,0.009],[0.223,0],[0,0],[0.1,-0.094],[0.048,-0.096],[0.075,-0.198],[0.025,-0.118],[0,-0.319],[0.298,0],[0.147,0],[0,0],[-0.072,0.121],[0,0.346],[0.024,0.147],[0.291,0.024],[0.149,0],[0.293,0],[0.147,-0.024],[0,0],[0.291,0],[0.27,0.023],[0.121,0.023],[0.125,0.094],[0.099,0.124],[0.125,0.101],[0.1,0.072],[0.063,0]],\"o\":[[0,0],[-0.149,0],[-0.765,0.022],[0.027,0.344],[-0.072,0.315],[-0.047,0.126],[-0.075,0.197],[-0.029,0.123],[-0.029,0.121],[0,0],[0.098,0.147],[0.101,0.124],[0.101,0.073],[0.149,0.072],[0.126,0.049],[0.196,0.099],[0.072,0.128],[0.074,0.148],[0.145,0.172],[0.396,0],[0.027,-0.222],[0.024,-0.121],[0.024,-0.174],[0.393,0.249],[0.465,0],[0.106,-0.007],[0.205,0.005],[0.123,-0.048],[0.121,-0.049],[0.148,0],[0.173,0.049],[0.124,0.022],[0.347,0],[0.149,-0.097],[0.17,-0.122],[0,0],[0.173,0.026],[0.124,0.046],[0.149,0.048],[0,0],[0,-0.417],[0.027,-0.172],[0.098,-0.198],[0.07,-0.145],[0.025,-0.124],[-0.146,-0.024],[-0.056,-0.012],[-0.075,0.01],[-0.149,-0.053],[-0.123,-0.054],[-0.261,-0.044],[-0.152,0.011],[-0.222,0],[0,0],[-0.148,0.049],[-0.097,0.1],[-0.121,0.172],[-0.023,0.121],[-0.05,0.298],[-0.296,-0.023],[-0.146,0],[0,0],[0,-0.173],[0.145,-0.272],[0,-0.17],[-0.295,0],[-0.15,0],[-0.292,-0.025],[-0.15,0],[0,0],[-0.294,-0.024],[-0.296,0],[-0.122,0],[-0.174,-0.026],[-0.121,-0.103],[-0.097,-0.125],[-0.097,-0.074],[-0.056,-0.05],[-0.126,0]],\"v\":[[239.756,-132.643],[239.189,-132.643],[238.798,-132.546],[236.829,-132.546],[236.928,-131.658],[236.533,-130.877],[236.436,-130.484],[236.144,-129.992],[236.144,-129.598],[236.043,-129.205],[235.751,-129.497],[236.043,-129.106],[236.238,-128.713],[236.633,-128.614],[237.024,-128.317],[237.421,-128.221],[237.912,-127.831],[238.107,-127.437],[238.306,-127.041],[238.969,-126.942],[239.975,-127.041],[240.074,-127.633],[240.074,-128.025],[240.366,-128.419],[241.551,-127.924],[242.728,-128.025],[243.025,-128.029],[243.615,-128.122],[243.714,-128.516],[244.107,-128.516],[244.496,-128.516],[244.793,-128.122],[245.184,-128.025],[245.973,-128.516],[246.271,-128.909],[246.858,-129.007],[247.055,-129.007],[247.447,-128.713],[247.84,-128.614],[248.258,-128.516],[249.806,-128.516],[249.806,-129.598],[250.006,-129.992],[250.4,-130.386],[250.691,-130.776],[250.691,-131.171],[250.3,-131.268],[250.123,-131.261],[249.907,-131.268],[249.71,-131.658],[249.316,-131.658],[248.637,-131.67],[248.134,-131.658],[247.548,-131.761],[247.35,-131.761],[246.954,-131.564],[246.858,-131.171],[246.464,-130.776],[246.366,-130.386],[246.366,-129.549],[245.579,-129.598],[245.184,-129.549],[245.184,-130.705],[245.482,-131.071],[245.876,-131.859],[245.678,-132.252],[244.894,-132.252],[244.496,-132.349],[243.714,-132.349],[243.321,-132.252],[243.321,-131.171],[242.533,-131.268],[241.746,-131.268],[241.353,-131.268],[241.055,-131.658],[240.759,-132.055],[240.366,-132.252],[240.366,-132.643],[240.188,-132.709]],\"c\":true},\"ix\":2},\"nm\":\"Path 40\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":40,\"ty\":\"sh\",\"ix\":41,\"ks\":{\"a\":0,\"k\":{\"i\":[[0,0],[0,0],[0,0],[0,0]],\"o\":[[0,0],[0,0],[0,0],[0,0]],\"v\":[[-245.381,-131.955],[-246.365,-130.776],[-244.497,-130.484],[-243.515,-132.447]],\"c\":true},\"ix\":2},\"nm\":\"Path 41\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":41,\"ty\":\"sh\",\"ix\":42,\"ks\":{\"a\":0,\"k\":{\"i\":[[0.053,-0.197],[0,-0.145],[-0.022,-0.122],[-0.174,-0.097],[-0.197,0],[-0.194,0.148],[0,0.145],[-0.046,0.293],[0.197,0],[0.17,0]],\"o\":[[-0.022,0.122],[0,0.15],[0.029,0.173],[0.17,0.101],[0.243,0],[-0.02,-0.149],[0,-0.298],[-0.194,-0.027],[-0.174,0],[-0.223,0]],\"v\":[[232.402,-131.268],[232.402,-130.877],[232.402,-130.484],[232.801,-130.189],[233.194,-129.893],[233.681,-130.286],[233.585,-130.676],[233.681,-131.464],[233.194,-131.464],[232.801,-131.658]],\"c\":true},\"ix\":2},\"nm\":\"Path 42\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":42,\"ty\":\"sh\",\"ix\":43,\"ks\":{\"a\":0,\"k\":{\"i\":[[0,0],[0,0],[-0.171,-0.072],[-0.126,-0.048],[-0.125,-0.074],[-0.123,-0.096],[-0.268,0],[-0.22,0.05],[-0.343,0],[-0.272,-0.174],[-0.198,-0.095],[-0.12,-0.047],[-0.148,-0.025],[-0.297,0],[0,0],[-0.124,0.026],[-0.148,0.121],[-0.174,0.022],[-0.121,0],[-0.219,0],[0,0],[0,0.148],[0,0.051],[0.513,0],[0.149,-0.025],[0.323,0],[0,0],[0.147,0],[0,0],[0.151,0],[0,0],[0.489,0],[0.124,-0.07],[0.099,-0.048],[0.221,0],[0.198,0.076],[0.269,0.466]],\"o\":[[0,0],[0.145,0.073],[0.126,0.049],[0.145,0.077],[0.124,0.072],[0.196,0.149],[0.247,0],[0.322,-0.077],[0.343,0],[0.169,0.101],[0.122,0.051],[0.148,0.049],[0.27,0.048],[0,0],[0.122,0],[0.193,-0.047],[0.148,-0.122],[0.124,-0.026],[0.199,-0.026],[0,0],[0,-0.144],[0,-0.046],[-0.517,-0.025],[-0.173,0],[-0.293,0.051],[0,0],[-0.146,0],[0,0],[-0.145,0],[0,0],[-0.49,-0.021],[-0.175,0],[-0.099,0.051],[-0.171,0.123],[-0.223,0],[-0.467,-0.222],[0,0]],\"v\":[[252.858,-130.877],[252.858,-129.205],[252.952,-128.909],[253.348,-128.812],[253.741,-128.614],[253.936,-128.221],[254.574,-128.025],[255.214,-128.122],[256.1,-128.419],[256.886,-128.025],[257.28,-127.633],[257.673,-127.535],[258.064,-127.337],[258.853,-127.337],[259.246,-127.337],[259.639,-127.337],[260.033,-127.728],[260.329,-128.122],[260.719,-128.122],[261.308,-128.122],[261.308,-128.909],[261.21,-129.304],[261.287,-129.401],[259.96,-129.497],[259.538,-129.401],[258.728,-129.304],[258.358,-129.304],[257.969,-129.401],[257.475,-129.401],[257.082,-129.328],[257.082,-130.386],[255.831,-130.484],[255.412,-130.386],[255.313,-129.992],[254.723,-129.992],[254.133,-129.992],[253.249,-131.071]],\"c\":true},\"ix\":2},\"nm\":\"Path 43\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":43,\"ty\":\"sh\",\"ix\":44,\"ks\":{\"a\":0,\"k\":{\"i\":[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],\"o\":[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],\"v\":[[-200.847,-130.776],[-202.812,-129.992],[-203.207,-129.007],[-201.832,-127.728],[-200.355,-127.728],[-198.979,-127.14],[-197.801,-127.633],[-197.406,-129.106],[-198.782,-129.893],[-199.57,-130.974]],\"c\":true},\"ix\":2},\"nm\":\"Path 44\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":44,\"ty\":\"sh\",\"ix\":45,\"ks\":{\"a\":0,\"k\":{\"i\":[[-0.026,-0.102],[0,0],[0,0],[0,0],[0,0.393],[0.408,0]],\"o\":[[0.097,0.398],[0,0],[0,0],[0,0],[0,-0.29],[-0.142,0]],\"v\":[[-218.445,-130.189],[-219.132,-129.791],[-218.741,-128.713],[-217.462,-128.812],[-216.97,-129.697],[-218.242,-130.333]],\"c\":true},\"ix\":2},\"nm\":\"Path 45\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":45,\"ty\":\"sh\",\"ix\":46,\"ks\":{\"a\":0,\"k\":{\"i\":[[0,0],[0,0],[0,0]],\"o\":[[0,0],[0,0],[0,0]],\"v\":[[-206.255,-126.548],[-204.877,-126.548],[-205.464,-127.437]],\"c\":true},\"ix\":2},\"nm\":\"Path 46\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":46,\"ty\":\"sh\",\"ix\":47,\"ks\":{\"a\":0,\"k\":{\"i\":[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[-0.099,0.389],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],\"o\":[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0.096,-0.397],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],\"v\":[[-255.999,-126.548],[-255.999,-125.566],[-255.506,-123.797],[-256.099,-121.14],[-258.849,-117.702],[-255.407,-116.718],[-253.542,-114.163],[-251.872,-115.54],[-249.805,-115.54],[-248.526,-116.525],[-248.038,-118.391],[-246.168,-119.566],[-244.892,-120.849],[-241.349,-122.225],[-239.188,-122.914],[-239.386,-124.19],[-242.137,-125.761],[-243.709,-125.96],[-245.578,-125.172],[-247.741,-125.863],[-249.904,-126.649],[-252.556,-126.845]],\"c\":true},\"ix\":2},\"nm\":\"Path 47\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":47,\"ty\":\"sh\",\"ix\":48,\"ks\":{\"a\":0,\"k\":{\"i\":[[0,0],[0,-0.199],[-0.147,-0.123],[-0.12,-0.027],[-0.296,0],[-0.197,0],[-0.124,0.071],[-0.073,0.124],[0.147,0.028],[0.067,-0.006],[0.062,0.014],[0.344,0]],\"o\":[[0,0.193],[0,0.195],[0.1,0.071],[0.271,0.097],[0.196,0],[0.167,0],[0.122,-0.078],[-0.147,-0.049],[-0.062,-0.012],[-0.069,0.008],[-0.316,-0.072],[0,0]],\"v\":[[241.257,-126.153],[241.155,-125.664],[241.451,-125.27],[241.842,-125.172],[242.629,-124.978],[243.124,-125.075],[243.517,-125.27],[243.615,-125.664],[243.223,-125.863],[243.027,-125.863],[242.824,-125.863],[242.016,-126.153]],\"c\":true},\"ix\":2},\"nm\":\"Path 48\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":48,\"ty\":\"sh\",\"ix\":49,\"ks\":{\"a\":0,\"k\":{\"i\":[[0,0],[-0.049,-0.123],[-0.123,-0.296],[-0.027,-0.149],[0,-0.295],[0,0],[0.149,0.074],[0.148,0.075],[0.124,0.099],[0.172,0.292],[0,0],[0.1,0.146]],\"o\":[[0.053,0.122],[0.147,0.296],[0.049,0.143],[0.046,0.271],[0,0],[-0.096,-0.127],[-0.172,-0.074],[-0.127,-0.073],[-0.245,-0.197],[0,0],[-0.077,-0.171],[0,0]],\"v\":[[232.6,-126.057],[232.702,-125.664],[233.194,-124.876],[233.392,-124.485],[233.392,-123.746],[235.157,-123.746],[234.96,-124.19],[234.472,-124.289],[234.077,-124.485],[233.585,-125.27],[233.392,-125.664],[233.095,-126.057]],\"c\":true},\"ix\":2},\"nm\":\"Path 49\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":49,\"ty\":\"sh\",\"ix\":50,\"ks\":{\"a\":0,\"k\":{\"i\":[[0.394,0],[0,-0.591],[0,0],[0,0],[0,-0.39],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0.492,0],[0,0],[0,0]],\"o\":[[-0.393,0],[0,0.593],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],\"v\":[[-200.061,-125.469],[-200.158,-124.19],[-201.437,-123.207],[-201.437,-120.748],[-200.847,-118.195],[-198.979,-118.491],[-197.702,-119.373],[-197.503,-120.748],[-195.538,-120.358],[-194.36,-121.24],[-193.473,-122.816],[-192.194,-124.19],[-193.965,-124.978],[-195.735,-124.978],[-197.503,-125.566]],\"c\":true},\"ix\":2},\"nm\":\"Path 50\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":50,\"ty\":\"sh\",\"ix\":51,\"ks\":{\"a\":0,\"k\":{\"i\":[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0.395,0.196],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,-0.392],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0.391,0.492],[0,0],[0,0]],\"o\":[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[-0.393,-0.199],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0.397],[0.392,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[-0.392,-0.493],[0,0],[0,0]],\"v\":[[-208.514,-125.172],[-208.71,-124.089],[-209.402,-124.089],[-210.776,-124.585],[-212.254,-124.19],[-211.956,-123.11],[-210.677,-121.929],[-211.17,-120.552],[-212.153,-120.159],[-213.529,-121.24],[-214.709,-121.14],[-214.906,-120.064],[-213.432,-119.177],[-212.35,-118.491],[-210.677,-118.096],[-209.893,-116.525],[-207.629,-115.441],[-206.255,-116.619],[-203.994,-116.718],[-203.11,-118.29],[-203.895,-119.566],[-205.174,-120.748],[-206.548,-121.537],[-204.78,-122.32],[-204.877,-123.207],[-206.255,-124.485],[-206.942,-125.27]],\"c\":true},\"ix\":2},\"nm\":\"Path 51\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":51,\"ty\":\"sh\",\"ix\":52,\"ks\":{\"a\":0,\"k\":{\"i\":[[0.082,0],[0,0],[0.392,-0.196],[0.146,-0.095],[0.147,-0.079],[0.087,0.017],[0.082,-0.024],[0.439,-0.32],[0,0],[-0.291,-0.018],[-0.298,0],[0,0],[-0.197,0],[-0.166,-0.005],[-0.251,0.016],[-0.22,0],[0,0],[-0.174,-0.075],[-0.297,-0.074],[-0.197,0],[0,0],[0,0],[0.124,0.075],[0.124,0.076],[0.173,0.046],[0.072,-0.007],[0.057,0.01],[0.121,0.052],[0.147,0.121],[0.123,0.072],[0.045,0]],\"o\":[[0,0],[-0.471,0],[-0.174,0.075],[-0.126,0.073],[-0.079,0.036],[-0.079,-0.013],[-0.517,0.169],[0,0],[0.296,0.048],[0.296,0.028],[0,0],[0.196,0],[0.215,-0.008],[0.191,0.006],[0.221,0],[0,0],[0.172,0.048],[0.27,0.121],[0.174,0.05],[0,0],[0,0],[-0.1,-0.124],[-0.121,-0.073],[-0.147,-0.073],[-0.064,-0.016],[-0.064,0.005],[-0.122,-0.031],[-0.177,-0.097],[-0.1,-0.074],[-0.041,-0.025],[-0.09,0]],\"v\":[[245.383,-124.386],[244.993,-124.386],[243.813,-124.289],[243.418,-123.994],[243.223,-123.597],[242.972,-123.593],[242.728,-123.597],[241.551,-122.715],[241.155,-122.617],[241.941,-122.522],[242.728,-122.419],[243.124,-122.419],[243.615,-122.522],[244.165,-122.519],[244.793,-122.522],[245.383,-122.617],[245.579,-122.617],[245.973,-122.32],[246.761,-122.027],[247.277,-121.929],[247.936,-121.929],[248.037,-122.715],[247.84,-123.11],[247.447,-123.307],[247.055,-123.597],[246.845,-123.599],[246.66,-123.597],[246.271,-123.7],[245.876,-123.994],[245.777,-124.386],[245.647,-124.42]],\"c\":true},\"ix\":2},\"nm\":\"Path 52\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":52,\"ty\":\"sh\",\"ix\":53,\"ks\":{\"a\":0,\"k\":{\"i\":[[0,0],[-0.391,-0.099],[0,0],[0,0],[0,0],[0,0],[0,0]],\"o\":[[0,0],[0.395,0.095],[0,0],[0,0],[0,0],[0,0],[0,0]],\"v\":[[-222.867,-123.406],[-221.198,-122.32],[-219.723,-120.849],[-218.642,-121.636],[-218.249,-123.11],[-219.032,-123.797],[-222.082,-124.289]],\"c\":true},\"ix\":2},\"nm\":\"Path 53\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":53,\"ty\":\"sh\",\"ix\":54,\"ks\":{\"a\":0,\"k\":{\"iov\":[[-184.135,-124.19],[-186.885,-123.893],[-189.345,-121.929],[-190.818,-119.177],[-190.915,-115.736],[-188.656,-115.344],[-187.082,-115.246],[-186.395,-113.968],[-188.165,-114.262],[-190.032,-113.772],[-188.46,-112.196],[-186.298,-112.196],[-185.215,-112.591],[-183.739,-111.605],[-180.99,-110.721],[-182.66,-110.23],[-182.758,-108.853],[-181.58,-107.871],[-183.446,-105.217],[-184.333,-103.349],[-185.708,-101.876],[-186.985,-102.464],[-187.97,-104.727],[-186.985,-106.099],[-189.442,-108.265],[-191.408,-106.594],[-194.161,-109.642],[-195.142,-110.034],[-194.949,-111.605],[-195.341,-113.377],[-196.62,-113.576],[-196.717,-115.05],[-198.782,-116.718],[-201.242,-116.818],[-201.634,-115.833],[-202.715,-115.736],[-203.796,-114.163],[-203.207,-112.884],[-203.503,-111.902],[-201.534,-110.23],[-199.667,-109.148],[-200.257,-107.676],[-202.32,-108.069],[-201.73,-106.397],[-199.96,-106.494],[-197.996,-107.676],[-197.996,-105.903],[-201.437,-104.134],[-201.14,-101.579],[-203.305,-102.954],[-202.715,-104.727],[-204.091,-104.727],[-204.188,-106.397],[-202.909,-106.397],[-203.305,-108.853],[-206.452,-110.326],[-207.14,-108.561],[-208.807,-107.773],[-205.96,-105.903],[-207.336,-104.824],[-207.827,-103.448],[-213.134,-103.252],[-215.79,-104.334],[-217.758,-104.626],[-220.311,-106.099],[-222.082,-105.02],[-224.835,-103.839],[-224.147,-102.169],[-224.54,-99.613],[-226.21,-102.66],[-228.865,-103.839],[-231.816,-103.252],[-238.305,-103.839],[-238.402,-104.727],[-236.139,-105.512],[-239.386,-107.183],[-241.448,-107.083],[-247.249,-108.757],[-248.725,-110.034],[-251.376,-110.326],[-252.95,-110.23],[-253.641,-109.148],[-255.114,-108.853],[-256.589,-111.313],[-257.573,-109.148],[-259.344,-109.443],[-261.014,-112.296],[-262.979,-112.787],[-263.573,-110.92],[-264.846,-109.738],[-266.813,-109.443],[-269.37,-108.561],[-271.924,-107.28],[-269.863,-109.247],[-267.701,-109.835],[-266.125,-110.427],[-265.438,-111.41],[-266.319,-111.605],[-268.975,-110.721],[-271.924,-109.443],[-273.597,-109.346],[-275.171,-109.346],[-278.414,-107.577],[-281.461,-107.871],[-283.918,-109.738],[-288.345,-109.936],[-289.917,-110.92],[-292.176,-111.313],[-294.93,-110.721],[-296.698,-111.705],[-299.551,-111.705],[-302.597,-112.491],[-305.352,-112.491],[-307.516,-112.491],[-308.103,-113.87],[-312.43,-114.066],[-314.199,-113.87],[-313.71,-114.95],[-316.266,-115.05],[-318.523,-113.772],[-322.065,-113.772],[-324.72,-111.803],[-326.785,-111.803],[-328.551,-110.427],[-328.749,-108.658],[-330.913,-107.183],[-334.454,-107.083],[-335.139,-105.119],[-331.108,-103.349],[-329.732,-101.482],[-327.47,-100.598],[-325.997,-98.334],[-328.163,-98.042],[-330.224,-98.43],[-330.421,-100.104],[-332.878,-98.824],[-334.941,-98.629],[-337.4,-96.663],[-336.22,-95.972],[-334.941,-94.993],[-334.156,-92.831],[-327.768,-93.519],[-326.193,-94.5],[-324.521,-94.306],[-324.917,-92.437],[-324.917,-90.276],[-327.177,-90.175],[-329.436,-89.388],[-331.404,-89.584],[-331.992,-87.424],[-334.355,-85.259],[-333.86,-83.783],[-332.781,-83.589],[-332.387,-82.41],[-331.504,-80.542],[-328.845,-79.656],[-327.568,-81.132],[-326.094,-79.165],[-326.389,-76.411],[-325.016,-76.411],[-324.129,-76.903],[-322.065,-77.005],[-320.69,-76.216],[-319.9,-77.593],[-318.622,-76.509],[-317.049,-77.398],[-318.035,-74.939],[-319.706,-73.167],[-322.751,-70.811],[-323.833,-69.433],[-325.801,-69.333],[-327.768,-67.959],[-330.421,-67.366],[-332.682,-65.5],[-331.404,-64.911],[-329.143,-66.583],[-327.668,-66.68],[-325.212,-67.959],[-322.461,-69.137],[-316.854,-71.79],[-316.068,-73.463],[-310.266,-76.707],[-311.742,-78.871],[-308.792,-80.542],[-307.222,-83.194],[-304.667,-83.783],[-303.287,-83.001],[-306.336,-81.82],[-307.12,-80.245],[-306.728,-78.478],[-302.893,-80.346],[-300.141,-80.834],[-300.732,-82.115],[-301.124,-82.899],[-300.24,-83.194],[-297.784,-83.098],[-295.618,-81.621],[-293.358,-80.443],[-290.996,-79.853],[-289.03,-80.346],[-287.36,-79.656],[-285.789,-79.656],[-284.215,-78.379],[-281.758,-77.2],[-280.479,-75.823],[-278.609,-75.33],[-277.626,-75.721],[-276.152,-74.838],[-275.171,-73.463],[-272.907,-72.876],[-273.3,-71.597],[-271.141,-70.708],[-271.534,-69.532],[-270.155,-69.037],[-268.779,-68.841],[-268.68,-67.466],[-267.602,-65.992],[-267.305,-64.319],[-266.716,-62.746],[-264.945,-62.551],[-264.451,-60.683],[-262.586,-58.911],[-262.095,-57.635],[-260.227,-56.651],[-258.359,-55.964],[-256.784,-55.472],[-256.491,-54.488],[-254.524,-53.212],[-253.049,-52.128],[-252.265,-49.772],[-252.265,-47.901],[-253.347,-49.083],[-254.624,-50.657],[-254.919,-51.638],[-256.491,-52.618],[-257.573,-53.016],[-257.771,-54.587],[-259.047,-54.587],[-260.128,-55.375],[-261.112,-55.768],[-262.095,-56.062],[-263.273,-55.868],[-262.293,-54.587],[-261.014,-53.801],[-259.733,-52.72],[-257.081,-50.952],[-256.196,-49.083],[-255.214,-46.72],[-255.31,-44.855],[-255.506,-42.298],[-255.506,-39.447],[-256.394,-38.761],[-256.394,-36.895],[-255.31,-34.925],[-255.702,-33.057],[-255.407,-31.584],[-254.624,-30.305],[-254.723,-28.437],[-253.641,-26.863],[-252.166,-25.586],[-251.279,-22.933],[-250.004,-21.85],[-249.708,-20.474],[-248.526,-18.901],[-246.758,-18.901],[-245.48,-17.823],[-243.515,-16.936],[-242.137,-15.556],[-241.745,-13.886],[-241.055,-12.214],[-240.173,-9.462],[-238.991,-8.285],[-237.518,-6.908],[-237.125,-5.924],[-238.305,-5.039],[-237.518,-3.955],[-236.042,-2.879],[-234.172,-1.698],[-233.093,-0.42],[-233.29,0.665],[-232.897,1.549],[-231.422,2.138],[-230.047,3.318],[-229.062,4.299],[-228.965,5.478],[-228.177,5.088],[-227.981,3.81],[-228.572,2.333],[-229.852,1.744],[-230.047,0.466],[-231.522,-0.613],[-232.111,-2.284],[-232.7,-3.861],[-233.979,-5.039],[-234.371,-6.611],[-235.65,-7.103],[-236.435,-9.07],[-237.909,-10.74],[-238.107,-12.906],[-236.927,-13.001],[-235.255,-12.315],[-234.274,-11.13],[-234.172,-9.265],[-232.405,-6.807],[-230.535,-4.843],[-228.865,-3.465],[-227.686,-2.088],[-227.391,-0.52],[-225.623,0.466],[-224.345,1.939],[-223.36,3.514],[-221.296,5.674],[-220.509,7.546],[-219.429,8.429],[-220.509,9.119],[-220.803,10.296],[-218.544,12.065],[-216.675,13.538],[-214.411,14.23],[-212.055,15.608],[-209.303,16.783],[-206.255,18.259],[-203.796,18.948],[-202.226,18.848],[-201.73,18.06],[-199.96,17.867],[-197.996,18.848],[-195.834,20.517],[-194.656,21.899],[-192.884,21.899],[-192.194,21.899],[-191.212,22.29],[-190.131,23.764],[-187.97,24.453],[-187.87,23.469],[-186.687,24.06],[-185.511,25.732],[-183.347,27.991],[-183.543,29.759],[-182.858,30.547],[-181.969,30.154],[-180.791,30.744],[-179.121,32.318],[-177.35,32.809],[-174.403,34.281],[-172.829,34.973],[-172.926,33.399],[-172.14,32.415],[-169.388,32.611],[-169.09,33.596],[-168.208,33.5],[-167.716,32.221],[-168.7,31.038],[-171.551,31.038],[-173.417,30.939],[-176.17,30.744],[-177.451,29.858],[-179.218,27.991],[-179.121,26.517],[-179.121,24.553],[-178.532,22.094],[-178.532,20.421],[-179.415,19.145],[-181.185,18.259],[-183.839,18.456],[-185.708,18.06],[-187.773,18.848],[-189.148,17.964],[-187.87,16.981],[-187.87,15.211],[-187.379,14.131],[-186.687,12.36],[-186.687,10.392],[-185.511,9.61],[-185.313,8.135],[-186.197,7.546],[-189.148,7.741],[-191.016,8.037],[-191.804,9.411],[-192.588,11.475],[-193.473,13.341],[-195.048,13.538],[-197.307,14.131],[-199.667,14.426],[-200.748,13.049],[-202.715,12.065],[-203.404,10.493],[-204.78,8.429],[-205.566,4.889],[-205.861,2.333],[-204.877,0.37],[-204.386,-1.894],[-205.37,-4.256],[-203.599,-6.513],[-202.126,-6.611],[-200.651,-7.791],[-199.175,-9.17],[-197.111,-8.876],[-195.638,-8.381],[-194.457,-8.876],[-193.473,-7.595],[-191.705,-7.595],[-190.328,-7.696],[-190.624,-8.677],[-190.131,-10.25],[-187.97,-10.35],[-186.493,-10.544],[-183.739,-10.25],[-182.66,-8.876],[-181.775,-8.876],[-181.185,-9.658],[-180.401,-9.856],[-179.121,-8.677],[-177.939,-7.204],[-177.939,-5.531],[-177.255,-4.548],[-176.96,-3.465],[-176.072,-2.679],[-175.584,-1.5],[-174.5,-0.913],[-174.403,0.37],[-173.417,0.665],[-172.829,-0.224],[-172.336,-1.599],[-172.926,-3.268],[-173.516,-5.828],[-174.793,-8.086],[-174.793,-11.034],[-174.11,-13.1],[-173.027,-15.263],[-171.351,-15.953],[-169.388,-17.626],[-167.521,-18.901],[-165.75,-19.586],[-165.455,-20.867],[-164.081,-21.654],[-165.259,-23.817],[-166.144,-24.798],[-165.75,-25.979],[-166.538,-27.061],[-165.16,-27.747],[-163.982,-26.175],[-163.291,-27.747],[-162.508,-29.127],[-161.622,-30.009],[-160.736,-32.958],[-158.081,-32.958],[-156.409,-33.944],[-154.445,-34.141],[-154.936,-35.322],[-155.034,-37.778],[-153.66,-39.647],[-152.085,-39.647],[-151.592,-40.725],[-149.528,-40.629],[-147.662,-41.71],[-146.484,-43.185],[-144.219,-43.381],[-141.762,-42.891],[-142.352,-42.1],[-144.909,-42.1],[-146.286,-41.119],[-146.286,-39.447],[-145.203,-38.956],[-144.023,-39.941],[-143.139,-40.53],[-141.467,-41.022],[-139.697,-41.906],[-137.927,-42.298],[-136.553,-43.971],[-135.174,-45.15],[-134.979,-46.527],[-136.846,-46.034],[-138.125,-43.971],[-140.288,-43.874],[-142.059,-44.759],[-143.924,-46.234],[-144.909,-48.786],[-143.236,-50.067],[-143.337,-52.128],[-145.792,-52.327],[-148.448,-51.542],[-151.396,-49.871],[-154.248,-47.115],[-156.511,-45.542],[-155.624,-47.017],[-154.248,-48.593],[-153.362,-49.379],[-155.624,-49.967],[-152.772,-49.967],[-152.085,-51.344],[-150.512,-52.618],[-148.643,-52.72],[-147.858,-54.295],[-146.286,-54.883],[-143.826,-54.883],[-139.404,-54.979],[-137.141,-54.587],[-135.372,-54.69],[-133.603,-55.964],[-132.029,-57.734],[-129.177,-58.028],[-127.701,-58.614],[-126.917,-59.406],[-127.801,-60.192],[-127.214,-60.977],[-127.115,-62.648],[-129.177,-62.944],[-129.572,-63.926],[-131.833,-63.926],[-133.603,-62.944],[-134.781,-62.159],[-135.763,-62.551],[-135.372,-63.733],[-133.309,-64.418],[-130.85,-65.011],[-129.77,-65.992],[-131.342,-66.091],[-132.913,-66.876],[-134.979,-67.466],[-136.257,-68.646],[-137.732,-69.826],[-138.319,-70.908],[-137.436,-71.105],[-137.141,-71.889],[-138.52,-73.76],[-140.189,-75.823],[-142.547,-79.46],[-143.337,-81.132],[-145.103,-78.967],[-145.103,-77.101],[-146.974,-76.411],[-148.152,-75.134],[-149.921,-75.233],[-150.317,-76.411],[-151.493,-77.295],[-153.265,-76.903],[-152.772,-78.967],[-152.772,-81.718],[-152.871,-83.194],[-155.034,-83.294],[-156.707,-84.375],[-158.278,-85.947],[-161.03,-87.619],[-162.014,-86.833],[-164.374,-86.933],[-165.358,-87.523],[-168.009,-87.523],[-169.09,-86.44],[-168.11,-84.867],[-168.503,-82.806],[-168.208,-81.427],[-167.323,-79.557],[-168.7,-79.557],[-168.6,-77.79],[-169.485,-76.804],[-168.309,-76.017],[-166.538,-74.738],[-166.045,-72.482],[-166.045,-69.925],[-167.323,-68.155],[-169.09,-66.778],[-171.551,-66.484],[-170.175,-64.319],[-170.175,-61.565],[-169.485,-59.996],[-169.878,-58.717],[-170.959,-57.143],[-173.318,-56.85],[-174.699,-59.112],[-176.367,-61.076],[-176.367,-62.746],[-176.858,-65.108],[-176.563,-67.073],[-179.613,-67.466],[-181.872,-67.562],[-183.052,-68.254],[-185.906,-68.94],[-186.985,-70.119],[-189.442,-71.4],[-191.998,-72.775],[-195.341,-71.989],[-196.131,-73.266],[-197.503,-76.216],[-199.175,-77.005],[-200.257,-78.182],[-199.863,-81.82],[-198.192,-84.57],[-196.522,-87.027],[-194.36,-87.913],[-192.685,-89.191],[-193.376,-90.569],[-196.03,-91.158],[-199.08,-92.143],[-195.538,-91.648],[-192.685,-90.962],[-191.408,-91.255],[-191.113,-92.73],[-188.758,-91.944],[-187.379,-92.239],[-187.28,-93.421],[-186.395,-93.911],[-185.906,-95.482],[-187.577,-95.678],[-189.735,-95.877],[-190.525,-96.763],[-192.983,-97.746],[-191.312,-97.648],[-188.656,-96.957],[-186.885,-96.369],[-185.116,-96.957],[-183.936,-98.43],[-185.215,-99.613],[-183.446,-99.613],[-182.362,-98.533],[-183.248,-97.352],[-184.037,-95.191],[-184.037,-92.534],[-185.807,-91.944],[-185.313,-90.766],[-183.446,-90.667],[-183.446,-89.584],[-180.99,-89.783],[-180.3,-91.158],[-177.939,-91.059],[-176.664,-90.862],[-175.385,-90.276],[-173.516,-90.276],[-173.318,-91.751],[-175.187,-92.143],[-176.072,-94.01],[-178.331,-94.203],[-180.104,-95.678],[-181.775,-96.074],[-181.775,-97.152],[-180.202,-96.862],[-179.513,-97.648],[-179.71,-98.533],[-177.843,-98.533],[-177.154,-99.811],[-175.385,-101.088],[-174.793,-102.169],[-175.779,-103.349],[-176.664,-105.316],[-174.99,-105.609],[-174.5,-107.083],[-175.779,-108.561],[-177.547,-109.346],[-179.809,-110.525],[-177.255,-110.525],[-176.96,-111.313],[-175.09,-111.117],[-173.614,-110.23],[-171.551,-110.326],[-169.683,-110.721],[-171.256,-112.196],[-170.175,-112.491],[-168.503,-110.82],[-166.637,-110.623],[-165.848,-109.052],[-164.471,-108.757],[-163.686,-107.577],[-162.212,-106.987],[-161.423,-105.512],[-159.755,-104.923],[-158.377,-103.448],[-158.081,-101.676],[-160.049,-99.811],[-161.718,-97.945],[-160.836,-96.174],[-163.786,-95.779],[-165.358,-96.174],[-167.028,-96.174],[-169.09,-94.7],[-169.09,-93.126],[-166.637,-92.73],[-164.668,-92.831],[-164.176,-93.715],[-163.291,-94.203],[-162.014,-93.911],[-159.656,-93.225],[-157.393,-91.059],[-156.903,-89.881],[-155.525,-88.409],[-153.558,-88.409],[-151.493,-86.44],[-148.448,-86.34],[-146.484,-85.459],[-146.286,-86.636],[-149.528,-89.094],[-150.905,-90.175],[-151.592,-91.356],[-149.431,-90.276],[-145.792,-88.409],[-143.924,-87.325],[-143.924,-89.094],[-142.844,-90.667],[-144.615,-91.648],[-145.007,-94.108],[-147.463,-94.993],[-150.414,-98.141],[-149.431,-99.025],[-148.448,-99.811],[-144.516,-96.862],[-143.139,-94.993],[-141.467,-94.7],[-140.974,-96.862],[-138.913,-97.648],[-138.617,-98.533],[-137.238,-98.533],[-136.65,-99.515],[-136.749,-100.993],[-139.501,-100.993],[-139.501,-101.778],[-141.171,-103.057],[-142.352,-103.252],[-144.122,-104.035],[-145.497,-104.035],[-145.893,-105.119],[-146.383,-106.099],[-148.743,-106.099],[-149.727,-106.201],[-149.727,-107.871],[-148.055,-107.871],[-147.17,-108.658],[-149.431,-109.247],[-149.137,-109.936],[-148.055,-110.131],[-149.333,-111.313],[-151.101,-111.803],[-150.414,-112.884],[-152.283,-113.67],[-154.346,-113.576],[-154.641,-114.458],[-156.313,-114.554],[-156.999,-114.752],[-155.624,-115.639],[-157.491,-116.226],[-159.853,-115.639],[-161.423,-117.212],[-161.622,-118.096],[-163.095,-118.195],[-163.192,-119.274],[-165.554,-120.064],[-168.6,-120.064],[-168.995,-119.177],[-170.565,-118.978],[-172.04,-119.274],[-172.534,-118.195],[-174.009,-118.096],[-174.11,-119.472],[-173.221,-120.748],[-174.699,-122.522],[-175.385,-124.089],[-178.137,-124.089],[-179.415,-122.914],[-181.285,-122.816],[-182.564,-122.027],[-182.858,-120.455],[-181.676,-118.784],[-182.463,-117.702],[-180.888,-115.639],[-182.167,-115.441],[-183.936,-117.212],[-184.525,-119.566],[-184.724,-121.14],[-183.446,-122.816],[-181.58,-124.19]],\"c\":true},\"ix\":2},\"nm\":\"Path 54\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":54,\"ty\":\"sh\",\"ix\":55,\"ks\":{\"a\":0,\"k\":{\"i\":[[0,0],[0,0],[0,0],[0,0]],\"o\":[[0,0],[0,0],[0,0],[0,0]],\"v\":[[-225.131,-123.893],[-225.817,-123.207],[-224.44,-123.01],[-223.951,-123.994]],\"c\":true},\"ix\":2},\"nm\":\"Path 55\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":55,\"ty\":\"sh\",\"ix\":56,\"ks\":{\"a\":0,\"k\":{\"i\":[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],\"o\":[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],\"v\":[[-173.318,-123.893],[-172.926,-122.127],[-172.336,-120.748],[-168.404,-120.552],[-167.028,-121.537],[-164.668,-122.127],[-167.028,-123.7],[-170.764,-123.893]],\"c\":true},\"ix\":2},\"nm\":\"Path 56\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":56,\"ty\":\"sh\",\"ix\":57,\"ks\":{\"a\":0,\"k\":{\"i\":[[0.269,-0.167],[0.147,-0.118],[0.273,-0.269],[-0.218,0],[-0.194,0.028],[-0.123,0.028],[-0.146,0.027],[-0.125,-0.007],[-0.151,0.014],[0,0],[-0.171,0.073],[0.051,0.103],[0.126,0.098],[0.149,0.05],[0.122,0.024],[0.152,0]],\"o\":[[-0.174,0.098],[-0.298,0.249],[0.174,0.1],[0.222,0],[0.121,0],[0.149,-0.019],[0.131,-0.012],[0.128,0.006],[0,0],[0.171,-0.025],[-0.024,-0.122],[-0.095,-0.145],[-0.12,-0.096],[-0.121,-0.047],[-0.123,-0.024],[-0.34,0]],\"v\":[[110.111,-122.914],[109.715,-122.522],[108.927,-121.832],[109.418,-121.537],[110.009,-121.636],[110.404,-121.636],[110.796,-121.832],[111.171,-121.831],[111.582,-121.832],[111.977,-121.832],[112.368,-122.127],[112.368,-122.522],[112.072,-122.914],[111.68,-123.11],[111.287,-123.207],[110.892,-123.307]],\"c\":true},\"ix\":2},\"nm\":\"Path 57\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":57,\"ty\":\"sh\",\"ix\":58,\"ks\":{\"a\":0,\"k\":{\"i\":[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[-0.389,-0.096],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],\"o\":[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0.393,0.1],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],\"v\":[[-239.188,-122.522],[-240.369,-121.537],[-241.549,-121.045],[-243.122,-120.652],[-244.497,-119.766],[-244.203,-118.391],[-245.875,-117.408],[-245.774,-116.619],[-244.596,-116.619],[-243.808,-115.833],[-242.335,-116.325],[-240.467,-116.525],[-239.287,-115.639],[-241.155,-115.144],[-242.826,-114.752],[-243.612,-113.968],[-241.448,-113.081],[-239.287,-113.081],[-236.927,-113.277],[-234.862,-113.277],[-233.193,-112.591],[-233.389,-111.605],[-236.828,-111.705],[-239.975,-111.705],[-242.234,-110.721],[-240.86,-108.757],[-238.402,-108.658],[-236.338,-108.658],[-235.255,-106.79],[-233.882,-106.002],[-231.227,-106.002],[-228.768,-106.099],[-227.096,-106.987],[-225.328,-107.479],[-223.556,-108.462],[-222.575,-109.052],[-221.787,-108.361],[-220.706,-108.561],[-217.952,-107.183],[-216.083,-107.083],[-214.411,-107.28],[-213.728,-108.561],[-215.102,-109.642],[-214.019,-109.738],[-212.35,-110.034],[-211.956,-110.92],[-213.529,-111.902],[-216.774,-112.984],[-218.445,-114.655],[-218.15,-116.325],[-219.626,-117.408],[-219.92,-119.669],[-221.099,-121.14],[-223.26,-122.027],[-225.131,-122.027],[-225.131,-120.358],[-224.736,-119.177],[-223.85,-117.604],[-224.44,-116.917],[-225.228,-117.015],[-226.017,-117.702],[-226.21,-118.881],[-226.703,-119.867],[-228.177,-121.437],[-229.65,-121.537],[-229.257,-120.455],[-228.669,-119.566],[-230.339,-119.566],[-230.438,-118.784],[-231.816,-118.585],[-231.522,-119.472],[-231.126,-120.552],[-232.305,-120.652],[-233.78,-121.14],[-235.255,-121.045],[-235.452,-119.963],[-236.631,-120.159],[-236.338,-120.849],[-236.631,-122.225],[-237.419,-122.522]],\"c\":true},\"ix\":2},\"nm\":\"Path 58\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":58,\"ty\":\"sh\",\"ix\":59,\"ks\":{\"a\":0,\"k\":{\"i\":[[0.049,-0.018],[0.149,-0.098],[0.122,-0.051],[0.12,0],[0.194,0],[0.292,-0.025],[0.148,-0.07],[0,-0.49],[-0.195,-0.048],[-0.121,0],[-0.394,0],[-0.541,0.076],[-0.294,0.097],[-0.147,0.027],[-0.343,0],[0,0],[-0.146,0],[0,0],[-0.146,0],[0,0],[0.12,0.073],[0.171,0.078],[0.273,-0.014],[0.145,0.007],[0.123,0],[0.08,-0.006],[0.094,0.011],[0.148,0.048],[0.194,0.023],[0.175,0],[0.094,0]],\"o\":[[-0.169,0.07],[-0.097,0.074],[-0.124,0.052],[-0.171,0.023],[-0.294,0],[-0.172,0],[-0.442,0.224],[0.099,0.173],[0.122,0.027],[0.369,0.051],[0.564,0],[0.295,-0.023],[0.148,-0.05],[0.32,-0.074],[0,0],[0.15,0],[0,0],[0.148,0],[0,0],[-0.074,-0.122],[-0.15,-0.097],[-0.273,-0.133],[-0.123,0.007],[-0.147,0],[-0.09,-0.013],[-0.074,0.006],[-0.172,-0.027],[-0.196,-0.077],[-0.149,-0.026],[-0.113,0],[-0.046,0]],\"v\":[[317.051,-116.421],[316.658,-116.128],[316.561,-115.736],[316.168,-115.736],[315.676,-115.736],[314.892,-115.736],[314.496,-115.54],[314.103,-114.36],[314.397,-113.87],[314.792,-113.87],[315.822,-113.87],[317.249,-113.87],[318.037,-114.163],[318.428,-114.36],[319.288,-114.36],[320.098,-114.36],[320.493,-114.262],[320.986,-114.262],[321.378,-114.333],[321.378,-114.95],[321.184,-115.344],[320.79,-115.639],[320.009,-115.742],[319.61,-115.736],[319.215,-115.833],[318.969,-115.834],[318.723,-115.833],[318.329,-116.029],[317.939,-116.421],[317.493,-116.421],[317.193,-116.444]],\"c\":true},\"ix\":2},\"nm\":\"Path 59\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":59,\"ty\":\"sh\",\"ix\":60,\"ks\":{\"a\":0,\"k\":{\"i\":[[0,0],[0,-0.195],[-0.028,-0.147],[0,0],[0,0],[-0.121,0.097],[-0.198,0.096],[-0.038,-0.006],[-0.022,0.012],[-0.225,0.097],[-0.075,0.099],[-0.096,0.143],[-0.021,0.127],[0.118,0.049],[0.101,0.072],[0.071,0.124],[0.025,0.149]],\"o\":[[0,0.197],[0,0.174],[0,0],[0,0],[0.174,0],[0.177,-0.149],[0.025,-0.013],[0.036,0.005],[0.196,-0.1],[0.12,-0.052],[0.1,-0.148],[0.078,-0.098],[-0.118,-0.02],[-0.124,-0.048],[-0.124,-0.101],[-0.074,-0.121],[0,0]],\"v\":[[68.818,-109.148],[68.72,-108.658],[68.918,-108.265],[68.918,-106.397],[70.07,-106.397],[70.487,-106.494],[70.784,-107.083],[70.885,-107.083],[70.98,-107.083],[71.572,-107.28],[71.962,-107.379],[72.257,-107.773],[72.257,-108.168],[71.868,-108.265],[71.471,-108.361],[71.276,-108.757],[71.276,-109.148]],\"c\":true},\"ix\":2},\"nm\":\"Path 60\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":60,\"ty\":\"sh\",\"ix\":61,\"ks\":{\"a\":0,\"k\":{\"i\":[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],\"o\":[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],\"v\":[[-223.85,-106.594],[-226.406,-105.316],[-224.44,-104.923],[-222.867,-105.709],[-221.296,-106.002],[-221.198,-107.28]],\"c\":true},\"ix\":2},\"nm\":\"Path 61\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":61,\"ty\":\"sh\",\"ix\":62,\"ks\":{\"a\":0,\"k\":{\"i\":[[0.394,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],\"o\":[[-0.393,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],\"v\":[[-166.538,-104.824],[-168.11,-103.148],[-167.224,-101.876],[-165.554,-101.676],[-163.786,-102.071],[-162.898,-103.448],[-163.686,-104.923]],\"c\":true},\"ix\":2},\"nm\":\"Path 62\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":62,\"ty\":\"sh\",\"ix\":63,\"ks\":{\"a\":0,\"k\":{\"i\":[[0,0],[0,0],[0.49,0],[0.393,-0.049],[0.248,-0.049],[0.193,-0.196],[0,-0.394],[0,-0.392],[-0.128,-0.013],[-0.125,0.026],[-0.345,0],[-0.244,-0.048],[-0.199,-0.151],[-0.198,-0.241],[-0.099,-0.345],[0.293,0],[0.938,-0.052],[0.291,-0.051],[0,0],[-0.298,0],[0,0],[-0.048,0],[0,0],[0,0],[0,0],[-0.296,0],[-0.591,0],[0,0],[-0.243,-0.101],[-0.297,-0.196],[-0.297,-0.101],[-0.447,0],[-0.389,0.048],[-0.292,0.196],[-0.347,0.244],[-0.343,0.147],[-0.135,-0.025],[-0.121,0.048],[-0.341,0.149],[-0.587,0.096],[-1.13,0],[0,0],[0.295,0.146],[0,0],[0.145,-0.022],[0.129,0.022],[0,0.241],[0,0.346],[0,0.39],[0,0],[0.298,-0.097],[0.345,-0.145],[0.393,0],[0.2,0],[0.297,0],[0.589,0],[0.54,-0.102],[0.785,0],[0,0],[0,0],[0,0],[0.147,0.343]],\"o\":[[0,0],[-0.441,-0.145],[-0.441,0],[-0.244,0],[-0.296,0.098],[-0.247,0.248],[0,0.389],[0.143,-0.023],[0.132,0.011],[0.295,-0.047],[0.293,0],[0.248,0.048],[0.242,0.193],[0.196,0.249],[-0.295,-0.051],[-0.936,-0.052],[-0.296,0],[0,0],[0.291,-0.048],[0,0],[0.101,0],[0,0],[0,0],[0,0],[0.293,0],[0.586,-0.053],[0,0],[0.248,0],[0.344,0.145],[0.246,0.149],[0.392,0.145],[0.442,0],[0.349,-0.051],[0.344,-0.247],[0.294,-0.201],[0.122,-0.049],[0.135,0.024],[0.396,-0.149],[0.544,-0.294],[1.083,-0.147],[0,0],[-0.199,-0.243],[0,0],[-0.137,-0.055],[-0.116,0.017],[0.049,-0.294],[0.049,-0.297],[0,-0.394],[0,0],[-0.345,0],[-0.341,0.148],[-0.339,0.151],[-0.194,0],[-0.296,0],[-0.587,-0.052],[-0.587,0],[-0.738,0.146],[0,0],[0,0],[0,0],[-0.053,-0.345],[0,0]],\"v\":[[-63.41,-98.923],[-63.41,-98.141],[-64.589,-98.533],[-65.771,-98.334],[-66.556,-98.334],[-67.34,-97.945],[-67.928,-97.152],[-67.734,-96.174],[-67.331,-96.172],[-66.948,-96.174],[-66.161,-96.566],[-65.378,-96.566],[-64.783,-95.972],[-64,-95.585],[-64,-94.597],[-64.783,-94.795],[-67.147,-94.795],[-67.928,-94.597],[-67.734,-93.421],[-66.948,-93.615],[-65.378,-93.615],[-65.18,-93.421],[-65.18,-91.849],[-64.783,-91.059],[-64,-91.059],[-63.212,-91.255],[-61.638,-91.255],[-60.855,-91.255],[-60.068,-91.255],[-59.477,-90.471],[-58.689,-90.074],[-57.509,-90.074],[-56.335,-90.074],[-55.546,-90.667],[-54.956,-91.648],[-54.169,-92.239],[-53.775,-92.239],[-53.384,-92.239],[-52.598,-93.027],[-51.025,-93.615],[-48.073,-93.615],[-48.073,-95.191],[-48.469,-95.972],[-49.253,-96.369],[-49.671,-96.381],[-50.038,-96.369],[-50.038,-97.152],[-49.648,-97.892],[-49.84,-98.923],[-51.758,-98.923],[-52.598,-98.727],[-53.384,-98.141],[-54.365,-97.697],[-54.758,-97.352],[-55.546,-97.546],[-57.118,-97.746],[-58.689,-97.546],[-60.509,-96.763],[-62.031,-96.763],[-62.031,-97.546],[-62.031,-98.334],[-62.626,-99.12]],\"c\":true},\"ix\":2},\"nm\":\"Path 63\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":63,\"ty\":\"sh\",\"ix\":64,\"ks\":{\"a\":0,\"k\":{\"i\":[[0.026,-0.008],[-0.03,0.001],[0.012,0]],\"o\":[[0.031,-0.001],[-0.003,-0.01],[-0.017,0]],\"v\":[[52.898,-96.376],[52.991,-96.378],[52.967,-96.392]],\"c\":true},\"ix\":2},\"nm\":\"Path 64\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":64,\"ty\":\"sh\",\"ix\":65,\"ks\":{\"a\":0,\"k\":{\"i\":[[0.036,-0.004],[-0.043,0.014],[-0.002,0.001]],\"o\":[[0.013,0.024],[0.002,-0.001],[-0.034,0.002]],\"v\":[[52.793,-96.369],[52.893,-96.374],[52.898,-96.376]],\"c\":true},\"ix\":2},\"nm\":\"Path 65\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":65,\"ty\":\"sh\",\"ix\":66,\"ks\":{\"a\":0,\"k\":{\"i\":[[0.566,-0.123],[-0.171,-0.023],[-0.145,0.011],[-0.12,-0.009],[-0.119,-0.047],[-0.168,-0.076],[-0.345,0],[0,0],[-0.246,0],[-0.345,-0.149],[-0.273,0],[-0.218,0.028],[0,0],[0.121,0.025],[0.147,0.048],[0.125,0.025],[0.319,0.051],[0.271,0.047],[0.15,0.025],[0.151,0.025],[0.225,0]],\"o\":[[0.148,0.098],[0.154,0.028],[0.113,-0.008],[0.122,0],[0.173,0.05],[0.298,0.12],[0,0],[0.245,0],[0.394,0],[0.248,0.097],[0.221,0],[0,0],[-0.121,-0.023],[-0.147,-0.048],[-0.126,-0.027],[-0.318,-0.074],[-0.269,-0.051],[-0.145,-0.024],[-0.124,0],[-0.219,-0.024],[-0.588,0]],\"v\":[[331.699,-90.471],[331.798,-89.783],[332.241,-89.776],[332.587,-89.783],[332.978,-89.783],[333.271,-89.388],[334.158,-89.29],[334.65,-89.29],[335.238,-89.488],[336.222,-89.191],[336.837,-88.898],[337.4,-88.998],[337.4,-89.783],[337.009,-89.881],[336.616,-90.074],[336.222,-90.175],[335.337,-90.373],[334.551,-90.471],[334.158,-90.667],[333.762,-90.667],[333.175,-90.766]],\"c\":true},\"ix\":2},\"nm\":\"Path 66\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":66,\"ty\":\"sh\",\"ix\":67,\"ks\":{\"a\":0,\"k\":{\"i\":[[0.346,-0.148],[0.245,-0.097],[0.639,-0.348],[-0.44,0],[-0.639,0.445],[-0.196,0.246],[0,0]],\"o\":[[-0.246,0.096],[-0.689,0.296],[0.345,0.192],[0.839,0],[0.297,-0.196],[0,0],[-0.295,0.149]],\"v\":[[-177.057,-87.913],[-177.843,-87.72],[-179.613,-86.731],[-178.631,-86.144],[-176.664,-86.933],[-176.072,-87.72],[-176.268,-88.503]],\"c\":true},\"ix\":2},\"nm\":\"Path 67\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":67,\"ty\":\"sh\",\"ix\":68,\"ks\":{\"a\":0,\"k\":{\"i\":[[0,0],[0,0],[0,0],[0,0],[0,0],[0.046,0.542],[0,0]],\"o\":[[0,0],[0,0],[0,0],[0,0],[-0.048,-0.541],[0,0],[0,0]],\"v\":[[-173.516,-86.539],[-172.926,-84.57],[-170.959,-84.57],[-170.175,-84.965],[-170.175,-85.751],[-170.367,-87.129],[-171.944,-87.325]],\"c\":true},\"ix\":2},\"nm\":\"Path 68\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":68,\"ty\":\"sh\",\"ix\":69,\"ks\":{\"a\":0,\"k\":{\"i\":[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],\"o\":[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],\"v\":[[-335.828,-81.328],[-336.516,-80.834],[-336.22,-79.656],[-334.549,-79.557],[-333.763,-79.954],[-334.355,-81.328]],\"c\":true},\"ix\":2},\"nm\":\"Path 69\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":69,\"ty\":\"sh\",\"ix\":70,\"ks\":{\"a\":0,\"k\":{\"i\":[[0,0],[0.223,-0.025],[0.244,-0.127],[0,-0.343],[0,0],[-0.149,0],[-0.346,0],[-0.148,0.049],[-0.148,0.1],[-0.076,0.098],[-0.025,0.291],[0.168,0]],\"o\":[[-0.222,0],[-0.293,0.024],[-0.297,0.146],[0,0],[0.149,0],[0.343,0],[0.171,0],[0.171,-0.077],[0.099,-0.051],[0.173,-0.221],[-0.148,-0.051],[0,0]],\"v\":[[287.068,-77.69],[286.475,-77.593],[285.693,-77.491],[285.102,-76.831],[285.102,-76.067],[285.496,-76.017],[286.355,-76.067],[286.772,-76.313],[287.168,-76.609],[287.561,-76.707],[287.657,-77.491],[287.267,-77.69]],\"c\":true},\"ix\":2},\"nm\":\"Path 70\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":70,\"ty\":\"sh\",\"ix\":71,\"ks\":{\"a\":0,\"k\":{\"i\":[[0.164,0],[0,0],[0.146,0],[0.617,0.072],[0.027,-0.291],[0.052,-0.122],[0,-0.222],[0,-0.072],[0,-0.295],[0,-0.148],[0.347,0],[0.149,0.072],[0.244,0],[0.099,-0.197],[0,-0.146],[-0.171,-0.219],[-0.151,-0.079],[-0.267,-0.048],[0.029,-0.147],[0,0],[0,-0.15],[0,-0.175],[0.095,-0.123],[0.125,-0.049],[0.123,-0.05],[0,-0.222],[-0.022,-0.224],[0,0],[-0.169,0],[-0.098,-0.049],[-0.075,-0.121],[-0.099,-0.145],[0,0],[-0.027,0.145],[-0.046,0.146],[0,0],[0,-0.149],[0,-0.367],[0.049,-0.098],[0.122,-0.072],[0.147,-0.049],[-0.027,-0.122],[-0.071,-0.17],[0,0],[0,0],[-0.074,-0.124],[-0.073,-0.148],[0,-0.196],[0,-0.247],[-0.172,-0.175],[-0.295,-0.147],[0,0],[0,-0.32],[0.099,-0.125],[0.218,0],[0.197,0.02],[0.172,0.05],[0.22,0],[0,0],[0.099,-0.047],[0.12,-0.125],[0.098,-0.05],[0.079,0.01],[0.054,-0.011],[0.147,0],[0,0],[-0.196,0],[-0.393,0],[-0.223,-0.026],[0.046,-0.126],[0.073,-0.096],[0.085,0.021],[0.044,-0.022],[0.147,-0.097],[0.12,-0.074],[0.187,0.004],[0.088,-0.007],[0,0],[-0.027,-0.122],[-0.046,-0.146],[-0.061,-0.006],[-0.073,0.011],[-0.146,0.05],[-0.25,0],[-0.392,-0.098],[-0.148,0],[-0.112,0.009],[-0.154,-0.027],[-0.124,-0.025],[-0.101,-0.098],[0.174,-0.079],[0.123,-0.025],[0.346,-0.027],[0.124,-0.027],[0.145,-0.075],[0.146,-0.073],[0.075,0.01],[0.056,-0.01],[0.268,-0.047],[0.073,-0.269],[0.047,-0.1],[0.125,-0.072],[0.172,-0.072],[0.122,-0.049],[-0.196,0],[-0.147,0],[-0.127,0.022],[-0.125,0.051],[0,0],[-0.171,0],[-0.148,0],[-0.169,0],[0,0],[-0.076,0.418],[-0.296,0],[-0.151,0],[-0.174,0],[-0.296,0.024],[-0.126,0.048],[-0.146,0.103],[-0.198,0],[-0.196,-0.052],[-0.44,0],[0,0],[-0.149,0],[-0.12,-0.006],[-0.15,0.013],[-0.124,0.051],[-0.15,0.1],[-0.143,0.078],[-0.074,-0.011],[-0.057,0.013],[-0.144,0],[-0.148,0.048],[0,0],[0.075,0.154],[0,0.243],[0,0],[-0.098,0.073],[-0.124,0.048],[-0.067,-0.014],[-0.051,0.038],[-0.052,0.121],[-0.021,0.124],[0,0],[0,0],[0.124,0.147],[0.073,0.199],[0.073,0.096],[0.128,0.099],[0.147,0.097],[0,0],[0.052,-0.097],[0.097,-0.149],[0.1,-0.121],[0.075,0.096],[0.072,0.172],[0,0.146],[0.022,0.296],[0.025,0.221],[0,0],[0.077,0.391],[0.052,0.121],[0.294,0.197],[0.067,-0.018],[0.062,0.04],[0.118,0.098],[0.046,0.098],[0.046,0.125],[0.094,0.148],[0.073,0.172],[0.051,0.118],[0.07,0.172],[0.075,0.123],[0.201,0.097],[0.173,0],[0.121,-0.006],[0.149,0.013],[0.246,0.096],[0.147,0.122],[-0.079,0.124],[-0.124,0.145],[-0.118,0.072],[-0.08,-0.015],[-0.051,0.01],[-0.149,0.024],[0,0],[-0.05,0.125],[-0.102,0.147],[-0.123,0.097],[0,0.172],[0,0],[0,0],[-0.072,0.121],[-0.071,0.169],[-0.02,0.124],[-0.049,0.123],[-0.099,0.122],[-0.125,0.1],[-0.126,0.074],[0.195,0.072],[0.064,0]],\"o\":[[0,0],[-0.149,0],[-0.612,0.053],[0,0.297],[0,0.147],[-0.095,0.199],[0,0.075],[-0.024,0.293],[0,0.147],[-0.341,0.021],[-0.168,0],[-0.197,-0.099],[-0.248,0],[-0.048,0.12],[0,0.298],[0.099,0.12],[0.243,0.123],[-0.047,0.149],[0,0],[0,0.148],[0,0.171],[0,0.169],[-0.074,0.097],[-0.125,0.048],[-0.198,0.078],[0,0.22],[0,0],[0.146,-0.026],[0.149,0],[0.099,0.047],[0.099,0.15],[0,0],[0.02,-0.145],[0.02,-0.171],[0,0],[0,0.147],[0.022,0.368],[0,0.147],[-0.053,0.098],[-0.124,0.074],[0.02,0.124],[0.047,0.176],[0,0],[0,0],[0.123,0.099],[0.073,0.125],[0.073,0.173],[0,0.247],[0,0.244],[0.218,0.221],[0,0],[0.124,0.292],[0,0.196],[-0.122,0.147],[-0.224,0],[-0.169,-0.028],[-0.193,-0.047],[0,0],[-0.124,0],[-0.149,0.1],[-0.098,0.099],[-0.054,0.027],[-0.064,-0.009],[-0.124,0.023],[0,0],[0.178,0.048],[0.397,0],[0.222,0],[0,0.145],[-0.049,0.12],[-0.042,0.054],[-0.069,-0.017],[-0.145,0.097],[-0.125,0.077],[-0.172,0.102],[-0.082,-0.001],[0,0],[0.029,0.121],[0.047,0.148],[0.076,-0.012],[0.061,0.006],[0.171,-0.025],[0.223,-0.072],[0.415,0],[0.123,0.023],[0.13,0.011],[0.142,-0.01],[0.119,0],[0.147,0.023],[-0.147,0.12],[-0.121,0.044],[-0.32,0.099],[-0.147,0],[-0.147,0.048],[-0.151,0.072],[-0.069,0.026],[-0.06,-0.008],[-0.269,0.073],[0,0.299],[-0.027,0.124],[-0.077,0.124],[-0.147,0.099],[-0.124,0.052],[0.174,0.051],[0.147,0],[0.148,0],[0.119,-0.028],[0,0],[0.147,-0.073],[0.152,0],[0.168,0],[0,0],[0,-0.419],[0.294,0.026],[0.151,0],[0.171,0],[0.294,0],[0.147,0],[0.168,-0.075],[0.147,-0.1],[0.222,0],[0.416,0.148],[0,0],[0.147,0],[0.146,-0.011],[0.124,0.007],[0.147,0],[0.169,-0.075],[0.121,-0.073],[0.066,-0.026],[0.061,0.009],[0.125,-0.02],[0.174,0],[0,0],[-0.098,-0.144],[-0.097,-0.192],[0,0],[0,-0.148],[0.101,-0.076],[0.057,-0.024],[0.075,0.016],[0.103,-0.078],[0.045,-0.126],[0,0],[0,0],[-0.148,-0.101],[-0.117,-0.149],[-0.053,-0.119],[-0.074,-0.124],[-0.123,-0.097],[0,0],[-0.021,0.148],[-0.098,0.146],[-0.098,0.146],[-0.12,-0.048],[-0.099,-0.148],[-0.05,-0.122],[-0.029,-0.295],[0,-0.224],[0,0],[0.047,-0.419],[0,-0.121],[-0.122,-0.32],[-0.062,-0.033],[-0.068,0.019],[-0.146,-0.069],[-0.102,-0.071],[-0.049,-0.098],[-0.074,-0.17],[-0.124,-0.169],[-0.049,-0.122],[-0.074,-0.172],[-0.078,-0.149],[-0.099,-0.169],[-0.145,-0.072],[-0.146,-0.01],[-0.124,0.006],[-0.296,-0.023],[-0.174,-0.077],[0.073,-0.127],[0.095,-0.152],[0.075,-0.097],[0.073,-0.042],[0.056,0.011],[0.121,-0.024],[0,0],[0,-0.122],[0.073,-0.17],[0.095,-0.124],[0.123,-0.1],[0,0],[0,0],[0.071,-0.121],[0.097,-0.147],[0.049,-0.124],[0.026,-0.125],[0.075,-0.172],[0.099,-0.122],[0.119,-0.094],[-0.15,-0.148],[-0.075,-0.024],[-0.127,0]],\"v\":[[-29.025,-76.216],[-29.589,-76.216],[-29.984,-76.12],[-31.559,-76.192],[-31.559,-75.43],[-31.656,-75.037],[-32.001,-74.545],[-32.049,-74.349],[-31.951,-73.56],[-32.001,-73.167],[-32.91,-73.069],[-33.328,-73.167],[-33.818,-73.56],[-34.409,-73.266],[-34.409,-72.876],[-34.31,-72.088],[-33.915,-71.889],[-33.132,-71.694],[-33.328,-71.301],[-33.328,-70.908],[-33.423,-70.513],[-33.229,-70.119],[-33.423,-69.727],[-33.818,-69.63],[-34.211,-69.532],[-34.603,-69.137],[-34.508,-68.545],[-33.72,-68.545],[-33.328,-68.745],[-32.934,-68.646],[-32.934,-68.254],[-32.538,-67.959],[-31.751,-67.959],[-31.751,-68.352],[-31.559,-68.745],[-31.163,-68.449],[-31.259,-68.058],[-30.867,-67.173],[-30.965,-66.778],[-31.359,-66.68],[-31.751,-66.484],[-31.751,-66.091],[-31.46,-65.698],[-29.493,-65.698],[-29.294,-66.091],[-28.902,-65.895],[-28.706,-65.5],[-28.409,-65.108],[-28.607,-64.515],[-28.409,-63.926],[-27.625,-63.535],[-27.823,-62.746],[-27.529,-61.959],[-27.823,-61.565],[-28.409,-61.565],[-29.003,-61.565],[-29.396,-61.863],[-29.984,-61.863],[-30.18,-61.863],[-30.573,-61.863],[-30.867,-61.468],[-30.965,-61.076],[-31.176,-61.07],[-31.359,-61.076],[-31.751,-61.076],[-31.855,-60.683],[-31.46,-60.386],[-30.452,-60.587],[-29.884,-60.485],[-29.884,-60.091],[-29.984,-59.7],[-30.197,-59.688],[-30.379,-59.7],[-30.77,-59.406],[-30.965,-59.011],[-31.497,-58.915],[-31.751,-58.911],[-31.855,-58.518],[-31.751,-58.129],[-31.559,-57.734],[-31.359,-57.734],[-31.163,-57.734],[-30.77,-57.93],[-30.18,-58.129],[-29.197,-57.734],[-28.805,-57.734],[-28.448,-57.741],[-28.016,-57.734],[-27.625,-57.734],[-27.428,-57.34],[-27.724,-56.943],[-28.116,-56.85],[-29.003,-56.751],[-29.396,-56.751],[-29.783,-56.554],[-29.984,-56.161],[-30.203,-56.155],[-30.379,-56.161],[-31.163,-55.964],[-31.163,-55.179],[-31.259,-54.783],[-31.656,-54.587],[-32.049,-54.295],[-32.443,-54.194],[-32.049,-53.898],[-31.656,-53.998],[-31.259,-54.094],[-30.867,-54.194],[-30.474,-54.393],[-30.281,-54.783],[-29.884,-54.69],[-29.469,-54.488],[-28.31,-54.488],[-28.214,-55.547],[-27.428,-55.472],[-27.059,-55.572],[-26.641,-55.472],[-25.855,-55.472],[-25.46,-55.472],[-25.069,-55.768],[-24.773,-56.161],[-24.182,-56.062],[-23.202,-55.472],[-23.003,-55.472],[-22.611,-55.572],[-22.223,-55.572],[-21.824,-55.572],[-21.43,-55.572],[-21.038,-55.868],[-20.841,-56.262],[-20.628,-56.266],[-20.448,-56.262],[-20.057,-56.262],[-19.66,-56.457],[-19.562,-56.85],[-19.859,-57.246],[-20.155,-57.832],[-20.155,-58.028],[-20.057,-58.421],[-19.66,-58.518],[-19.467,-58.513],[-19.27,-58.518],[-19.167,-58.911],[-19.073,-59.307],[-18.285,-59.307],[-18.285,-60.091],[-18.68,-60.386],[-18.973,-60.882],[-18.973,-61.272],[-19.366,-61.468],[-19.76,-61.763],[-20.155,-61.666],[-20.057,-61.272],[-20.448,-60.977],[-20.743,-60.587],[-21.137,-60.683],[-21.43,-61.076],[-21.43,-61.468],[-21.43,-62.255],[-21.529,-62.845],[-22.708,-62.845],[-22.611,-63.926],[-22.611,-64.319],[-23.297,-65.011],[-23.492,-65.009],[-23.693,-65.011],[-23.884,-65.402],[-24.281,-65.5],[-24.281,-65.895],[-24.576,-66.288],[-25.069,-66.583],[-25.069,-66.974],[-25.361,-67.366],[-25.56,-67.763],[-25.956,-68.155],[-26.348,-68.352],[-26.736,-68.351],[-27.132,-68.352],[-27.921,-68.545],[-28.214,-68.94],[-28.016,-69.333],[-27.625,-69.63],[-27.529,-70.022],[-27.294,-70.034],[-27.132,-70.022],[-26.738,-70.119],[-26.738,-70.513],[-26.738,-70.908],[-26.443,-71.301],[-26.051,-71.497],[-25.855,-71.866],[-25.855,-73.463],[-29.688,-73.463],[-29.493,-73.855],[-29.1,-74.152],[-29.1,-74.545],[-29.1,-74.939],[-28.706,-75.233],[-28.409,-75.627],[-28.016,-75.823],[-28.409,-76.216],[-28.615,-76.249]],\"c\":true},\"ix\":2},\"nm\":\"Path 71\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":71,\"ty\":\"sh\",\"ix\":72,\"ks\":{\"a\":0,\"k\":{\"i\":[[0.121,-0.024],[0.319,-0.197],[0.124,-0.073],[0.096,-0.124],[0.124,-0.365],[0.025,-0.122],[0,0],[-0.126,0.099],[-0.122,0.103],[-0.169,0.046],[-0.062,-0.008],[-0.066,0.025],[-0.098,0.075],[-0.052,0.123],[-0.048,0.171],[-0.049,0.272]],\"o\":[[-0.369,0.126],[-0.126,0.074],[-0.123,0.074],[-0.248,0.268],[-0.025,0.126],[0,0],[0.12,-0.073],[0.149,-0.122],[0.124,-0.096],[0.058,-0.012],[0.074,0.01],[0.126,-0.054],[0.099,-0.071],[0.071,-0.172],[0.099,-0.269],[-0.122,0.024]],\"v\":[[-34.112,-75.921],[-34.898,-75.33],[-35.292,-75.233],[-35.487,-74.838],[-36.178,-74.056],[-36.178,-73.659],[-35.783,-73.463],[-35.391,-73.659],[-35.098,-74.056],[-34.805,-74.442],[-34.622,-74.437],[-34.409,-74.442],[-34.014,-74.545],[-34.014,-74.939],[-33.72,-75.33],[-33.525,-76.12]],\"c\":true},\"ix\":2},\"nm\":\"Path 72\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":72,\"ty\":\"sh\",\"ix\":73,\"ks\":{\"a\":0,\"k\":{\"i\":[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],\"o\":[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],\"v\":[[-310.169,-74.838],[-312.921,-73.266],[-312.037,-71.4],[-310.266,-72.379],[-308.792,-74.056],[-308.792,-75.823]],\"c\":true},\"ix\":2},\"nm\":\"Path 73\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":73,\"ty\":\"sh\",\"ix\":74,\"ks\":{\"a\":0,\"k\":{\"i\":[[-0.053,-0.371],[0,-0.169],[-0.022,-0.345],[-0.024,-0.293],[0,0],[0.05,0.15],[0.022,0.146],[0.047,0.343],[0.076,0.172],[0.124,0.15],[0.192,0.149]],\"o\":[[0.02,0.149],[0.025,0.345],[0,0.296],[0,0],[-0.05,-0.149],[-0.049,-0.146],[-0.072,-0.322],[-0.025,-0.196],[-0.1,-0.194],[-0.145,-0.174],[0,0.397]],\"v\":[[290.217,-66.974],[290.408,-66.583],[290.408,-65.698],[290.508,-64.959],[291.689,-64.959],[291.491,-65.402],[291.296,-65.794],[291.296,-66.68],[291.001,-67.073],[290.704,-67.562],[290.217,-67.959]],\"c\":true},\"ix\":2},\"nm\":\"Path 74\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":74,\"ty\":\"sh\",\"ix\":75,\"ks\":{\"a\":0,\"k\":{\"i\":[[0,0],[0.22,-0.099],[0.101,-0.075],[0.123,-0.099],[0.124,-0.096],[0.121,0.124],[0.123,0.124],[0.122,0.099],[0,0],[0,-0.15],[0,-0.146],[0,-0.248],[-0.047,-0.217],[0,-0.001],[0.006,0.001],[0.058,-0.009],[0.148,-0.025],[0.067,0.006],[0.062,-0.011],[0.317,0],[0.17,0.052],[0,0],[0,0],[-0.12,0],[-0.394,0.02],[0,0],[0.195,-0.048],[0.065,0.009],[0.053,-0.026],[0.079,-0.148],[0.027,-0.147],[0.097,-0.269],[0.048,-0.146],[0,-0.149],[-0.073,-0.124],[-0.147,-0.098],[-0.243,0],[-0.246,0.024],[-0.118,-0.024],[-0.148,0],[-0.099,0],[-0.194,0.171],[-0.099,0.17],[-0.049,0.117],[-0.099,0.145],[0,0],[0,0],[0,0.347],[-0.076,0.145],[-0.048,0.149],[0,0.146],[-0.026,0.298],[0,0.149],[0.027,0.295],[0,0],[-0.057,-0.009],[-0.067,0.029],[0,0.396],[0.099,0.196],[0.077,0.196],[0.051,0.126],[0.051,0.099],[0.146,0.075],[0.072,-0.017],[0.056,0.024],[0.174,0.027]],\"o\":[[-0.248,0],[-0.123,0.047],[-0.122,0.098],[-0.124,0.1],[-0.122,-0.096],[-0.124,-0.122],[-0.122,-0.123],[0,0],[0,0.149],[0,0.149],[0,0.25],[0,0.22],[0,0.001],[-0.006,-0.001],[-0.061,-0.005],[-0.149,0.027],[-0.062,0.015],[-0.067,-0.006],[-0.294,0.077],[-0.198,0],[0,0],[0,0],[0.126,0],[0.394,0],[0,0],[-0.22,0.023],[-0.058,0.014],[-0.077,-0.011],[-0.12,0.076],[-0.072,0.149],[-0.048,0.268],[-0.048,0.146],[-0.048,0.123],[0,0.146],[0.074,0.148],[0.194,0.126],[0.248,0],[0.148,0],[0.127,0.024],[0.096,0],[0.271,0],[0.125,-0.098],[0.048,-0.123],[0.098,-0.176],[0,0],[0,0],[0,-0.345],[0,-0.17],[0.074,-0.15],[0.027,-0.119],[0.027,-0.293],[0,-0.145],[0,-0.292],[0,0],[0.063,-0.009],[0.075,0.011],[0.347,-0.173],[0,-0.244],[-0.099,-0.17],[-0.022,-0.121],[-0.049,-0.119],[-0.095,-0.15],[-0.065,-0.04],[-0.063,0.015],[-0.171,-0.051],[0,0]],\"v\":[[-34.703,-67.173],[-35.292,-66.974],[-35.689,-66.876],[-35.882,-66.484],[-36.277,-66.288],[-36.667,-66.484],[-36.866,-66.876],[-37.259,-67.073],[-38.193,-66.974],[-38.146,-66.583],[-38.243,-66.191],[-38.193,-65.572],[-38.243,-65.011],[-38.243,-65.007],[-38.262,-65.009],[-38.439,-65.011],[-38.833,-64.814],[-39.031,-64.813],[-39.227,-64.814],[-40.01,-64.515],[-40.404,-64.814],[-40.848,-64.714],[-40.848,-61.91],[-40.503,-61.863],[-39.52,-61.91],[-39.52,-60.683],[-40.109,-60.587],[-40.299,-60.591],[-40.503,-60.587],[-40.702,-60.192],[-40.896,-59.796],[-40.896,-59.011],[-41.29,-58.816],[-41.389,-58.421],[-41.29,-58.028],[-40.896,-57.734],[-40.307,-57.536],[-39.716,-57.832],[-39.327,-57.832],[-38.93,-57.734],[-38.734,-57.589],[-38.146,-57.93],[-37.751,-58.225],[-37.751,-58.614],[-37.357,-58.911],[-34.014,-58.911],[-34.014,-59.479],[-34.31,-60.29],[-33.915,-60.485],[-33.72,-60.882],[-33.72,-61.272],[-33.72,-62.061],[-33.621,-62.454],[-33.72,-63.239],[-33.72,-64.025],[-33.542,-64.017],[-33.328,-64.025],[-32.637,-64.814],[-32.835,-65.402],[-33.229,-65.794],[-33.328,-66.191],[-33.328,-66.583],[-33.72,-66.876],[-33.93,-66.882],[-34.112,-66.876],[-34.508,-67.173]],\"c\":true},\"ix\":2},\"nm\":\"Path 75\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":75,\"ty\":\"sh\",\"ix\":76,\"ks\":{\"a\":0,\"k\":{\"i\":[[-0.001,0.001],[-0.012,-0.02],[0.032,0]],\"o\":[[0.043,-0.014],[-0.035,0.007],[0.001,0]],\"v\":[[-38.142,-65.003],[-38.044,-65.011],[-38.145,-65.002]],\"c\":true},\"ix\":2},\"nm\":\"Path 76\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":76,\"ty\":\"sh\",\"ix\":77,\"ks\":{\"a\":0,\"k\":{\"i\":[[0.028,-0.02],[0.047,-0.172],[0,-0.243],[0,0],[0.096,0.175],[0,0],[0.175,-0.022],[0.06,0.012],[0.039,0]],\"o\":[[-0.146,0.097],[-0.051,0.222],[0,0],[-0.024,-0.219],[0,0],[-0.072,-0.147],[-0.053,0.012],[-0.042,-0.008],[-0.036,0]],\"v\":[[293.064,-66.288],[292.969,-65.794],[292.969,-65.159],[294.147,-65.159],[294.147,-65.698],[293.947,-66.091],[293.457,-66.288],[293.283,-66.299],[293.16,-66.315]],\"c\":true},\"ix\":2},\"nm\":\"Path 77\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":77,\"ty\":\"sh\",\"ix\":78,\"ks\":{\"a\":0,\"k\":{\"i\":[[0.068,-0.04],[0.15,-0.246],[0.048,-0.249],[0.05,-0.342],[0.199,-0.296],[0.196,-0.297],[0.54,-0.538],[0,-1.182],[0,-0.34],[0,0],[-0.542,-0.54],[-0.737,-0.345],[-0.049,0.348],[0,0.589],[0,0.297],[-0.343,0.594],[0,0],[0.114,-0.018],[0.138,0.058],[0.542,0.394],[0.395,0.148],[0.245,0.049],[0.246,0],[0.294,0.097],[-0.342,0.49],[-0.147,0.297],[0,0.294],[0.049,0.296],[0.111,0.022],[0.074,0]],\"o\":[[-0.248,0.147],[-0.147,0.195],[-0.099,0.34],[-0.049,0.347],[-0.194,0.293],[-0.443,0.592],[-0.837,0.837],[0,0.342],[0,0],[0.785,0],[0.538,0.545],[0.197,-0.297],[0.098,-0.537],[0,-0.295],[0.049,-0.688],[0,0],[-0.129,-0.02],[-0.147,0.021],[-0.587,-0.242],[-0.34,-0.243],[-0.246,-0.048],[-0.244,-0.053],[-0.295,-0.053],[0.198,-0.589],[0.146,-0.246],[0.099,-0.245],[0,-0.347],[-0.125,0.022],[-0.078,-0.016],[-0.07,0]],\"v\":[[-127.507,-56.85],[-128.294,-56.457],[-128.294,-55.665],[-128.491,-54.69],[-129.082,-53.898],[-129.671,-53.115],[-131.046,-51.542],[-132.618,-48.935],[-132.423,-48.002],[-126.77,-48.002],[-125.147,-46.824],[-123.576,-45.642],[-122.79,-46.234],[-122.79,-47.805],[-122.986,-48.593],[-122.198,-50.166],[-122.398,-50.952],[-122.76,-50.937],[-123.182,-50.952],[-124.757,-51.936],[-125.542,-52.72],[-126.328,-52.916],[-127.115,-52.916],[-127.9,-53.309],[-127.312,-54.883],[-126.525,-55.276],[-126.328,-56.062],[-126.72,-56.85],[-127.072,-56.872],[-127.301,-56.904]],\"c\":true},\"ix\":2},\"nm\":\"Path 78\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":78,\"ty\":\"sh\",\"ix\":79,\"ks\":{\"a\":0,\"k\":{\"i\":[[0,0],[0.074,-0.172],[0.05,-0.171],[0.05,-0.125],[0.171,-0.226],[0,0],[-0.069,-0.012],[-0.05,0.027],[-0.124,0.147],[-0.123,0.12],[-0.073,0.122],[-0.045,0.121],[-0.026,0.145],[-0.026,0.147],[0,0]],\"o\":[[-0.048,0.172],[-0.073,0.175],[-0.022,0.121],[-0.1,0.266],[0,0],[0.058,-0.022],[0.073,0.013],[0.171,-0.122],[0.124,-0.147],[0.126,-0.124],[0.075,-0.101],[0.054,-0.15],[0.024,-0.122],[0,0],[0,0]],\"v\":[[270.65,-55.375],[270.452,-54.883],[270.158,-54.488],[270.158,-54.094],[269.668,-53.502],[269.472,-53.115],[269.671,-53.113],[269.863,-53.115],[270.158,-53.605],[270.452,-53.998],[270.845,-54.194],[270.941,-54.587],[271.142,-54.979],[271.142,-55.375],[270.748,-55.472]],\"c\":true},\"ix\":2},\"nm\":\"Path 79\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":79,\"ty\":\"sh\",\"ix\":80,\"ks\":{\"a\":0,\"k\":{\"i\":[[0.079,-0.011],[0.109,0.022],[0,0],[-0.245,-0.193],[-0.247,-0.197],[-0.243,-0.192],[-0.54,0],[-0.343,0.348],[-0.099,0.147],[0.295,0.049],[0.137,-0.012],[0.12,0.025],[0.295,0.148],[0.392,0.196],[0.07,0]],\"o\":[[-0.12,0.017],[0,0],[0.246,0.145],[0.247,0.194],[0.246,0.196],[0.394,0.348],[0.49,0],[0.149,-0.144],[-0.293,-0.095],[-0.125,-0.026],[-0.133,0.013],[-0.296,-0.053],[-0.394,-0.193],[-0.065,-0.026],[-0.079,0]],\"v\":[[-141.711,-54.106],[-142.059,-54.094],[-142.844,-53.702],[-142.059,-53.309],[-141.467,-52.523],[-140.682,-51.936],[-139.501,-51.145],[-138.52,-51.936],[-138.125,-52.523],[-138.913,-52.916],[-139.311,-52.917],[-139.697,-52.916],[-140.483,-53.309],[-141.27,-54.094],[-141.473,-54.129]],\"c\":true},\"ix\":2},\"nm\":\"Path 80\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":80,\"ty\":\"sh\",\"ix\":81,\"ks\":{\"a\":0,\"k\":{\"i\":[[0.031,-0.013],[0.171,-0.075],[0.127,-0.072],[0.172,-0.12],[0.147,-0.078],[-0.295,0],[-0.147,0.173],[-0.069,0.097],[-0.148,0.368],[0.06,0.008],[0.039,0]],\"o\":[[-0.169,0.074],[-0.15,0.075],[-0.17,0.097],[-0.126,0.073],[0.246,0.146],[0.246,0],[0.075,-0.097],[0.248,-0.296],[-0.054,0.01],[-0.04,-0.005],[-0.034,0]],\"v\":[[260.621,-44.855],[260.228,-44.562],[259.832,-44.364],[259.444,-43.971],[259.051,-43.771],[259.787,-43.481],[260.423,-43.577],[260.522,-43.971],[261.014,-44.855],[260.84,-44.861],[260.72,-44.872]],\"c\":true},\"ix\":2},\"nm\":\"Path 81\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":81,\"ty\":\"sh\",\"ix\":82,\"ks\":{\"a\":0,\"k\":{\"i\":[[0.031,-0.012],[0.197,-0.247],[0.071,-0.125],[0.096,-0.122],[0.128,-0.073],[0.32,-0.072],[0.148,0],[0.124,0.005],[0.146,-0.011],[0,0],[0.148,-0.029],[0,0],[0.098,0.018],[0.165,-0.078],[0.149,-0.077],[0.147,-0.071],[0.145,-0.048],[0.245,0],[0.222,0.076],[0.419,0.272],[0.145,0.122],[0.27,0.271],[0.148,0.098],[0.17,0.048],[0.466,0.126],[0.173,0.098],[0,-0.175],[-0.024,-0.344],[0,-0.147],[0,-0.296],[0.023,-0.124],[0.049,-0.122],[0.1,-0.148],[0.096,-0.1],[0.099,-0.123],[0.072,-0.172],[0,-0.467],[0.176,0],[0.122,0.176],[0.071,0.149],[0.097,-0.169],[0.12,-0.076],[0.067,0.018],[0.06,-0.038],[0.096,-0.119],[0,-0.42],[-0.144,-0.199],[-0.121,-0.074],[-0.075,-0.17],[-0.075,-0.101],[-0.171,-0.051],[0,0],[-0.218,0.1],[0,0],[0,0],[0,-0.297],[0,0],[0.025,-0.168],[0.029,-0.17],[0,-0.15],[0,-0.172],[0,0],[0.075,-0.321],[0.077,-0.095],[0.152,-0.076],[0.074,0.011],[0.056,-0.011],[0.099,-0.173],[0.176,-0.267],[0.171,-0.195],[0.223,-0.248],[0,0.149],[0,0.171],[0.027,0.292],[0.026,-0.096],[0.051,-0.172],[0.024,-0.292],[0,0],[0,0],[0,0],[0.075,0.146],[0.026,0.148],[-0.047,0.296],[0,0],[0.051,-0.172],[0.027,-0.168],[0.025,-0.295],[0.149,0],[0.295,0],[0,0],[0,0],[0.073,0.121],[0.101,0.072],[0.147,0.119],[0.121,0.052],[0.271,-0.173],[0.123,-0.02],[0.297,0.026],[0.491,-0.027],[0.122,-0.027],[0.147,-0.027],[0.124,0],[0.103,0.014],[0.162,-0.058],[0.169,-0.296],[0.026,-0.146],[0,-0.146],[0,-0.32],[0,0],[0,-0.169],[-0.023,-0.293],[0.32,-0.097],[0.121,-0.049],[0.099,-0.149],[0.076,-0.173],[0.049,-0.123],[0.051,-0.148],[0.027,-0.149],[-0.199,0],[-0.343,0],[-0.343,0.049],[-0.002,0],[0.016,-0.104],[0.049,-0.127],[0.072,-0.147],[0,0],[0.074,-0.174],[0,-0.225],[-0.542,0],[0,0],[-0.025,0.468],[-0.169,0.199],[-0.295,0.1],[0,0.442],[0.097,0.42],[0,0.146],[0,0.295],[0.149,0],[0.345,0.026],[-0.123,0.097],[-0.121,0.071],[-0.146,0.026],[-0.344,0],[-0.296,0.199],[-0.494,0.146],[-0.126,0],[-0.146,0],[-0.132,-0.007],[-0.139,0.01],[-0.123,0],[-0.15,0],[-0.197,-0.011],[-0.211,0.013],[-0.15,0.027],[0.175,-0.028],[0.121,0],[0.113,0.008],[0.151,-0.027],[0.685,0],[0,0],[0,0],[0,0],[-0.198,0.074],[-0.269,0.169],[-0.098,0.125],[-0.174,0.1],[-0.171,0.048],[-0.122,0.025],[-0.115,-0.022],[-0.129,0.085],[-0.077,0.122],[-0.05,0.123],[-0.099,0.093],[-0.074,-0.173],[-0.074,-0.097],[-0.145,-0.072],[-0.246,0],[-0.175,0.198],[-0.12,0.121],[-0.418,0],[0,0.148],[0,0.172],[0.023,0.151],[0.028,0.124],[0,0],[0,0],[-0.32,0.068],[-0.155,-0.041],[-0.155,0.012],[-0.15,0.217],[0,0.347],[0,0],[-0.052,0.149],[-0.021,0.125],[-0.051,0.37],[0,0],[0.02,0.295],[0,0],[-0.098,0.223],[-0.173,0.12],[-0.049,0.147],[-0.049,0.467],[-0.026,0.118],[-0.122,0.271],[-0.05,0.175],[0,0.345],[0.124,0.246],[0.096,0.146],[0.072,0.127],[0.099,0.316],[0.024,0.121],[0.097,0.322],[0.049,0.123],[0.119,0.099],[0.121,0.053],[0.27,0.05],[0,0],[0,0],[-0.222,0],[0,0],[-0.219,-0.073],[-0.146,-0.05],[-0.068,0.011],[-0.063,-0.025],[-0.144,-0.046],[-0.343,-0.024],[-0.341,-0.02],[0,0.148],[0.025,0.469],[0,0],[-0.176,0.049],[-0.123,0.051],[-0.072,0.094],[-0.024,0.123],[-0.024,0.269],[-0.047,0.121],[-0.124,0.101],[-0.124,0.048],[-0.148,0.027],[-0.118,-0.013],[-0.147,0.041],[-0.171,0.051],[-0.443,0.075],[0,0],[-0.118,0.026],[-0.096,0.096],[-0.074,0.121],[-0.049,0.099],[-0.099,0.098],[-0.098,0.124],[-0.074,0.147],[-0.049,0.126],[0,0.149],[0.06,0.009],[0.037,0]],\"o\":[[-0.295,0.124],[-0.076,0.1],[-0.074,0.119],[-0.098,0.123],[-0.267,0.197],[-0.125,0.024],[-0.149,0.012],[-0.121,-0.007],[0,0],[-0.145,0.024],[0,0],[-0.114,0.009],[-0.157,-0.026],[-0.172,0.07],[-0.123,0.072],[-0.148,0.075],[-0.223,0.099],[-0.246,0],[-0.489,-0.147],[-0.171,-0.096],[-0.296,-0.247],[-0.12,-0.122],[-0.148,-0.096],[-0.471,-0.126],[-0.199,-0.05],[-0.023,0.148],[-0.024,0.342],[0,0.147],[0.023,0.296],[0,0.146],[-0.026,0.124],[-0.074,0.173],[-0.098,0.123],[-0.099,0.095],[-0.126,0.145],[-0.197,0.391],[-0.177,0],[-0.218,0],[-0.074,-0.118],[-0.101,0.174],[-0.049,0.099],[-0.063,0.036],[-0.069,-0.019],[-0.149,0.095],[-0.245,0.297],[0,0.245],[0.077,0.123],[0.176,0.124],[0.05,0.126],[0.1,0.148],[0,0],[0.242,0],[0,0],[0,0],[-0.023,0.295],[0,0],[0,0.197],[-0.023,0.172],[-0.022,0.126],[0,0.172],[0,0],[0,0.344],[-0.022,0.119],[-0.097,0.122],[-0.065,0.027],[-0.061,-0.008],[-0.196,0.071],[-0.151,0.268],[-0.124,0.217],[-0.196,0.247],[0,-0.15],[0,-0.169],[0.028,-0.294],[-0.073,0.069],[-0.051,0.175],[-0.072,0.271],[0,0],[0,0],[0,0],[-0.127,-0.097],[-0.07,-0.151],[-0.073,-0.268],[0,0],[-0.076,0.17],[-0.048,0.172],[-0.048,0.273],[-0.147,0.025],[-0.293,0.024],[0,0],[0,0],[-0.124,-0.102],[-0.073,-0.098],[-0.119,-0.097],[-0.099,-0.077],[-0.171,0.297],[-0.096,0.048],[-0.27,0.049],[-0.494,-0.027],[-0.148,0],[-0.152,0.026],[-0.12,0.025],[-0.108,0.009],[-0.155,-0.02],[-0.32,0.12],[-0.078,0.149],[-0.023,0.126],[-0.023,0.323],[0,0],[-0.025,0.169],[0,0.298],[-0.343,0],[-0.125,0.026],[-0.176,0.074],[-0.097,0.15],[-0.048,0.122],[-0.049,0.146],[-0.045,0.147],[0.175,0.022],[0.343,0.027],[0.344,0],[0.002,0],[0.005,0.103],[-0.023,0.122],[-0.051,0.168],[0,0],[-0.074,0.148],[-0.076,0.197],[0,0.537],[0,0],[0,-0.468],[0.027,-0.291],[0.194,-0.219],[0.419,-0.148],[0,-0.418],[-0.025,-0.148],[-0.025,-0.297],[-0.146,0],[-0.345,0],[0.049,-0.15],[0.122,-0.101],[0.128,-0.073],[0.321,-0.072],[0.37,0],[0.441,-0.29],[0.12,-0.028],[0.124,0],[0.157,-0.016],[0.114,0.005],[0.147,0],[0.124,0],[0.255,-0.025],[0.161,0.008],[0.144,0],[-0.15,0.097],[-0.121,0.024],[-0.119,0.011],[-0.144,-0.011],[-0.662,0.146],[0,0],[0,0],[0,0],[0.221,0],[0.292,-0.123],[0.126,-0.078],[0.124,-0.146],[0.147,-0.096],[0.124,-0.024],[0.113,-0.021],[0.16,0.031],[0.12,-0.078],[0.072,-0.123],[0.049,-0.148],[0.076,0.17],[0.047,0.121],[0.096,0.147],[0.201,0.123],[0.267,0],[0.096,-0.121],[0.299,-0.3],[0.023,-0.148],[0,-0.178],[0,-0.173],[0,-0.122],[0,0],[0,0],[0.247,-0.246],[0.178,-0.044],[0.124,0.034],[0.297,-0.027],[0.195,-0.272],[0,0],[0,-0.173],[0.022,-0.121],[0.125,-0.368],[0,0],[0.021,-0.295],[0,0],[0,-0.245],[0.098,-0.198],[0.123,-0.076],[0.172,-0.418],[0,-0.151],[0.072,-0.299],[0.074,-0.17],[0.124,-0.322],[0,-0.294],[-0.077,-0.171],[-0.074,-0.125],[-0.174,-0.27],[-0.029,-0.125],[-0.099,-0.319],[-0.029,-0.121],[-0.05,-0.147],[-0.098,-0.072],[-0.267,-0.096],[0,0],[0,0],[0.222,0],[0,0],[0.243,0],[0.147,0.049],[0.061,0.024],[0.068,-0.012],[0.149,0.071],[0.296,0.121],[0.341,0.022],[0.027,-0.145],[0.049,-0.467],[0,0],[0.197,0],[0.12,-0.024],[0.124,-0.048],[0.076,-0.1],[0.074,-0.271],[0,-0.126],[0.051,-0.147],[0.097,-0.072],[0.147,-0.051],[0.124,-0.021],[0.14,0.017],[0.168,-0.046],[0.418,-0.147],[0,0],[0.122,0],[0.125,-0.024],[0.103,-0.101],[0.071,-0.126],[0.071,-0.122],[0.119,-0.123],[0.098,-0.121],[0.05,-0.125],[0.05,-0.121],[-0.067,0.014],[-0.038,-0.006],[-0.031,0]],\"v\":[[256.983,-42.989],[256.199,-42.497],[256.1,-42.1],[255.9,-41.71],[255.507,-41.514],[254.723,-41.022],[254.331,-41.022],[253.933,-41.021],[253.543,-41.022],[253.149,-41.022],[252.756,-40.823],[252.361,-40.823],[252.048,-40.848],[251.579,-40.823],[251.28,-40.429],[250.887,-40.236],[250.498,-40.04],[249.907,-39.843],[249.316,-40.04],[248.134,-40.629],[247.646,-40.923],[247.055,-41.71],[246.66,-42.004],[246.271,-42.298],[244.993,-42.497],[244.496,-42.792],[244.301,-42.397],[244.301,-41.514],[244.4,-41.119],[244.496,-40.333],[244.4,-39.941],[244.4,-39.548],[244.007,-39.251],[243.813,-38.856],[243.418,-38.661],[243.124,-38.266],[243.027,-37.089],[242.629,-36.895],[242.238,-37.288],[242.043,-37.679],[241.746,-37.188],[241.65,-36.792],[241.452,-36.792],[241.257,-36.792],[240.959,-36.402],[240.467,-35.418],[240.663,-34.827],[241.055,-34.63],[241.451,-34.239],[241.451,-33.843],[241.842,-33.548],[242.043,-33.548],[242.629,-33.843],[242.629,-32.861],[241.155,-32.861],[241.055,-32.073],[241.055,-31.584],[241.155,-31.092],[240.858,-30.701],[240.809,-30.329],[240.858,-29.911],[240.858,-28.635],[240.858,-27.747],[240.759,-27.356],[240.366,-27.158],[240.152,-27.152],[239.975,-27.158],[239.585,-26.764],[239.189,-25.979],[238.699,-25.489],[238.107,-24.798],[238.009,-25.195],[238.206,-25.586],[238.107,-26.371],[237.814,-26.275],[237.712,-25.783],[237.616,-24.999],[236.144,-24.999],[236.144,-23.423],[235.751,-23.326],[235.355,-23.521],[235.157,-23.916],[235.254,-24.702],[234.865,-24.798],[234.569,-24.406],[234.569,-23.916],[234.472,-23.128],[234.077,-23.028],[233.34,-23.028],[233.34,-20.669],[232.504,-20.669],[232.111,-20.867],[232.011,-21.26],[231.621,-21.553],[231.227,-21.654],[230.733,-20.867],[230.342,-20.771],[229.556,-20.867],[228.277,-20.867],[227.886,-20.867],[227.49,-20.669],[227.095,-20.571],[226.782,-20.589],[226.311,-20.571],[225.626,-19.883],[225.425,-19.492],[225.425,-19.1],[225.425,-18.263],[223.634,-18.263],[223.559,-17.823],[223.657,-17.033],[222.772,-16.936],[222.381,-16.835],[222.085,-16.444],[221.787,-16.048],[221.689,-15.656],[221.491,-15.263],[221.395,-14.82],[221.889,-14.674],[222.772,-14.674],[223.657,-14.674],[223.662,-14.674],[223.657,-14.378],[223.559,-13.982],[223.264,-13.593],[223.066,-13.2],[222.772,-12.804],[222.676,-12.214],[223.681,-11.233],[224.443,-11.233],[224.443,-12.414],[224.639,-13.2],[225.425,-13.496],[226.214,-14.279],[225.722,-15.263],[225.722,-15.656],[225.722,-16.394],[225.329,-16.348],[224.443,-16.394],[224.443,-16.835],[224.832,-17.033],[225.228,-17.231],[226.115,-17.231],[226.999,-17.626],[228.181,-18.409],[228.574,-18.409],[228.965,-18.504],[229.384,-18.506],[229.754,-18.504],[230.146,-18.608],[230.537,-18.707],[231.178,-18.711],[231.719,-18.707],[232.111,-18.804],[231.816,-18.409],[231.423,-18.409],[231.076,-18.414],[230.637,-18.409],[229.042,-17.626],[227.095,-17.626],[227.095,-14.969],[227.861,-14.969],[228.379,-15.165],[229.16,-15.556],[229.358,-15.953],[229.754,-16.348],[230.146,-16.641],[230.537,-16.738],[230.883,-16.715],[231.326,-16.738],[231.522,-17.131],[231.522,-17.525],[231.915,-17.719],[232.21,-17.326],[232.21,-16.936],[232.6,-16.641],[233.243,-16.544],[233.783,-16.936],[233.978,-17.326],[235.061,-17.525],[235.061,-17.916],[235.254,-18.311],[235.061,-18.707],[234.96,-19.1],[235.355,-19.246],[239.779,-19.196],[240.467,-19.782],[240.946,-19.743],[241.353,-19.687],[242.043,-20.079],[242.431,-20.894],[242.431,-22.807],[242.533,-23.227],[242.629,-23.621],[243.223,-24.406],[243.223,-24.798],[243.124,-25.586],[243.124,-26.227],[243.124,-26.863],[243.615,-27.158],[244.007,-27.356],[244.107,-28.535],[244.204,-28.925],[244.496,-29.716],[244.793,-30.109],[244.894,-30.995],[244.793,-31.779],[244.4,-32.073],[244.204,-32.47],[243.714,-33.253],[243.714,-33.647],[243.321,-34.435],[243.321,-34.827],[243.124,-35.221],[242.728,-35.322],[241.941,-35.517],[241.941,-36.105],[243.884,-36.105],[244.4,-36.402],[244.598,-36.402],[245.184,-36.105],[245.579,-35.909],[245.775,-35.909],[245.973,-35.909],[246.168,-35.517],[247.055,-35.418],[247.936,-35.322],[248.037,-35.711],[247.964,-36.895],[250.077,-36.895],[250.498,-37.188],[250.887,-37.288],[251.28,-37.382],[251.381,-37.778],[251.381,-38.563],[251.477,-38.956],[251.676,-39.352],[252.068,-39.447],[252.462,-39.647],[252.824,-39.64],[253.249,-39.647],[253.642,-39.941],[254.822,-40.236],[255.214,-40.236],[255.605,-40.333],[255.996,-40.429],[256.1,-40.823],[256.199,-41.218],[256.592,-41.415],[256.886,-41.808],[257.28,-42.1],[257.379,-42.497],[257.379,-42.989],[257.189,-42.993],[257.077,-43.005]],\"c\":true},\"ix\":2},\"nm\":\"Path 82\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":82,\"ty\":\"sh\",\"ix\":83,\"ks\":{\"a\":0,\"k\":{\"i\":[[-0.007,0],[-0.001,-0.012]],\"o\":[[0,0.013],[-0.006,-0.021]],\"v\":[[223.657,-14.82],[223.658,-14.783]],\"c\":true},\"ix\":2},\"nm\":\"Path 83\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":83,\"ty\":\"sh\",\"ix\":84,\"ks\":{\"a\":0,\"k\":{\"i\":[[0.294,0],[0.246,-0.048],[0.59,-0.099],[0.298,0],[0.306,0.021],[0.515,-0.085],[0.346,-0.148],[0.294,-0.196],[0.244,0.199],[0.292,0.195],[0.633,0],[0.887,-0.343],[0.149,0.021],[0.11,-0.022],[0.297,-0.296],[0,0],[0.147,-0.296],[0.147,-0.196],[0.346,-0.15],[0.296,0],[0.223,0.018],[0.303,-0.056],[0.344,0],[0,0],[0.442,0],[0.306,-0.022],[0.513,0.085],[0.246,0.098],[0.341,0.147],[0,0],[0.046,-0.344],[0.046,-0.249],[0,-0.292],[0,-0.486],[0.293,0],[0.295,0],[0.542,0],[0,0],[0,0],[0.048,-0.589],[0.048,-0.588],[0.05,-0.29],[0,-0.588],[0,0],[0,0],[0.783,-0.494],[0.195,-0.098],[0.343,-0.146],[0.25,-0.102],[0.139,0.025],[0.098,-0.051],[0.198,-0.245],[0.149,-0.293],[0.345,-0.641],[0.197,-0.392],[0.145,-0.246],[0.15,-0.345],[0.149,-0.246],[0.146,-0.248],[0.183,0.051],[0.097,-0.019],[0.543,-0.049],[0.104,-0.98],[0.05,-0.244],[0.147,-0.196],[0.29,-0.242],[0.246,-0.145],[0.197,-0.249],[0,0],[-0.589,-0.051],[-0.243,-0.051],[-0.135,0.013],[-0.121,-0.025],[-0.292,-0.195],[0,0],[0,-0.343],[0,-1.867],[0,0],[0.098,-0.24],[0.198,-0.246],[0.166,0.048],[0.047,-0.097],[0,-0.302],[-0.053,-0.293],[-0.052,-0.245],[0,-0.297],[0,0],[-0.243,-0.497],[-0.244,-0.295],[-0.244,-0.195],[-0.247,-0.149],[-0.344,-0.101],[-0.134,0.023],[-0.126,-0.051],[-0.195,-0.248],[-0.345,-0.393],[-0.247,-0.143],[-0.155,0.031],[-0.12,-0.018],[-0.148,-0.882],[-0.193,-0.294],[-0.344,-0.147],[-0.637,-0.244],[-0.688,-0.048],[0,-0.296],[-0.051,-0.25],[-0.15,-0.244],[-0.246,-0.193],[-0.248,-0.148],[-0.294,-0.198],[-0.638,-0.197],[-0.136,0.013],[-0.124,-0.023],[-0.298,-0.05],[-0.443,0],[-0.248,0.346],[-0.195,0.15],[-0.592,0],[-0.296,0],[-0.297,0],[0,0],[-0.738,-0.1],[-0.248,-0.1],[-0.295,-0.145],[-0.783,0],[-0.39,0.052],[-0.294,0.095],[-0.126,-0.029],[-0.131,0.079],[-0.248,0.196],[-0.291,0.197],[-0.342,0.051],[-0.59,0],[-0.589,0.045],[0,0],[-0.445,0.142],[-0.787,0],[-0.297,-0.344],[-0.1,-0.196],[-0.096,-0.346],[-0.099,-0.249],[-0.148,-0.195],[-0.248,-0.145],[-0.345,0],[0,0],[0,0],[0,-0.296],[0.05,-0.591],[0.05,-0.24],[0.145,-0.348],[0,-0.291],[0,-0.937],[0.195,-0.099],[0.148,0.025],[0.097,-0.049],[0.196,-0.199],[-0.295,-0.098],[-0.391,-0.491],[-0.196,-0.545],[-0.196,-0.195],[-0.198,-0.098],[-0.194,-0.194],[-0.148,-0.243],[-0.393,-0.638],[-0.149,-0.246],[-0.247,-0.592],[-0.046,-0.294],[-0.046,-0.688],[-0.147,-0.541],[-0.05,-0.346],[0,-0.295],[0,0],[-0.293,-0.491],[-0.15,-0.292],[0,-0.445],[0.051,-0.438],[0.046,-0.251],[0.145,-0.243],[0.197,-0.296],[0.146,-0.982],[0.097,-0.542],[0.043,-0.25],[0.196,-0.392],[0,-0.342],[0,-0.595],[-0.295,-0.835],[-0.243,-0.296],[-0.046,-0.347],[-0.046,-0.249],[-0.046,-0.25],[-0.147,-0.293],[-0.196,-0.248],[-0.59,-0.348],[-0.048,-0.299],[-0.047,-0.341],[-0.049,-0.242],[-0.049,-0.249],[0,-0.345],[0,0],[-0.054,-0.542],[-0.054,-0.244],[-0.344,-0.541],[-0.489,-1.033],[-0.049,-0.249],[-0.05,-0.246],[-0.1,-0.294],[-0.294,-0.544],[-0.244,-0.295],[-0.05,-0.343],[-0.149,-0.539],[-0.099,-0.296],[-0.051,-0.346],[0,0],[0.198,-0.296],[0.196,-0.293],[0.048,-0.241],[-0.295,0],[0,0],[-0.046,-0.248],[-0.099,-0.195],[-0.245,-0.198],[-0.344,0],[0,0],[-0.64,0.198],[-0.645,0],[0,0],[-0.151,0.34],[-0.199,0.154],[-0.248,0.05],[-0.297,0],[-0.54,0.151],[-0.196,0.148],[-0.196,0.297],[-0.147,0.2],[-0.244,0.201],[-0.294,0.198],[-0.293,0.296],[-0.197,0.392],[-0.293,0.541],[-0.297,0.245],[-0.395,0.642],[-0.146,0.244],[-0.295,0.295],[-0.148,0.391],[0,0.783],[0.146,0.392],[0.145,0.346],[0.1,0.244],[-0.346,0.053],[-0.244,0.053],[-0.133,-0.013],[-0.123,0.027],[-0.296,0.245],[-0.244,0.248],[-0.292,0.194],[-0.292,0.247],[-0.1,0.196],[0,0.295],[0.196,0.884],[0.144,0.539],[0.246,0.538],[0,0.692],[-0.244,0.294],[-0.244,0.292],[-0.346,0.247],[-0.194,0.096],[-0.196,0.246],[-0.246,0.346],[-0.25,0.152],[-0.638,0.146],[-0.246,0.053],[-0.134,-0.012],[-0.123,0.027],[-0.34,0.145],[-0.444,0.44],[-0.148,0.641],[-0.044,0.589],[0,0.296],[0,0],[0.05,0.441],[0,0.342],[0,0],[0.199,0.297],[0.443,0.938],[-0.049,0.589],[0,0.288],[0.049,0.294],[0.049,0.295],[0.049,0.293],[0,0],[-0.103,0.392],[-0.05,0.244],[-0.248,0.295],[-0.489,1.033],[-0.097,0.241],[-0.147,0.348],[-0.1,0.247],[-0.341,0.54],[-0.245,0.197],[-0.25,0.244],[-0.2,0.248],[-0.592,0.493],[-0.297,0.292],[-0.344,0.201],[-0.495,0.442],[-0.197,0.244],[-0.24,0.297],[-0.201,0.14],[-0.198,0.097],[-0.293,0.149],[-0.295,0.196],[-0.199,0.199],[-0.149,0.299],[-0.346,0.834],[-0.192,0.247],[-0.348,0.241],[-0.293,0.245],[-0.149,0.296],[-0.096,0.345],[0,0.59],[-0.052,0.592],[0,1.029],[0,0],[0.443,0],[0.448,-0.195],[0.296,-0.151],[1.132,0],[0.539,0.049],[0,0],[0.59,-0.047],[0.591,0],[0.294,0.048],[0,0],[0.149,0.347],[0.149,0.244],[0.146,0.3],[0,0],[0.15,0.194],[0.294,0.194],[0.143,-0.025],[0.122,0.047],[0.295,0.299],[0.296,0.247],[0.248,0.199],[0.295,0.148],[0.297,0.099],[0.136,-0.026],[0.122,0.049],[0.247,0.195],[0.149,0.642],[0,0.246],[0.246,0.488],[0.246,0.3],[0.34,0.692],[0,0.395],[0,0.293],[0,0],[0.198,0.538],[0.144,0.341],[0.343,0.538],[0.194,0.248],[0.143,0.249],[0.1,0.296],[0,0.296],[0.1,0.545],[0.049,0.242],[0.198,0.291],[0.297,0.689],[0.049,0.296],[0.101,0.546],[0.296,0.54],[0.243,0.292],[0.25,0.245],[0.244,0.246],[0.198,0.246],[0.048,0.347],[0.048,0.244],[0.146,0.247],[0.298,0.194],[0.293,0.103],[0.148,-0.021],[0.11,0.023],[0.345,0.049],[0,0],[0.784,-0.246],[0,0],[0,0],[0.59,0],[0.393,0.2],[0.296,0.248],[0.685,0.344],[1.133,0],[0.787,0],[0.44,0.098],[-0.05,-0.734],[0,-0.299],[0.047,-0.934],[0.444,0],[0,0],[0.295,0.05],[0.296,0.296],[0.344,0.147],[0.392,0],[0,0],[0.145,0.292],[0.142,0.196],[0.247,0.145],[0.346,0.148],[0.242,0.048],[0.592,0.047],[0.226,-0.017],[0.302,0.053],[0.59,0.296],[0.147,0.737],[0,0.29],[-0.151,0.298],[-0.149,0.345],[0,0.297],[0.148,0.246],[0.246,0.147],[0.298,0.196],[-0.345,0.147],[-0.247,0.101],[-0.249,0.048],[0.239,0.145],[0.248,0.096],[0.637,0]],\"o\":[[-0.3,0],[-0.587,0.099],[-0.245,0.049],[-0.389,0.021],[-0.429,-0.032],[-0.343,0.049],[-0.346,0.149],[-0.243,-0.196],[-0.246,-0.196],[-0.494,-0.343],[-0.986,0],[-0.137,0.056],[-0.12,-0.018],[-0.393,0.152],[0,0],[-0.1,0.293],[-0.099,0.249],[-0.248,0.295],[-0.245,0.098],[-0.259,0.022],[-0.284,-0.022],[-0.296,0.048],[0,0],[-0.442,0],[-0.389,-0.02],[-0.428,0.031],[-0.243,-0.05],[-0.347,-0.102],[0,0],[-0.147,0.345],[-0.048,0.246],[-0.048,0.246],[-0.05,0.49],[-0.293,0],[-0.294,0],[-0.545,0],[0,0],[0,0],[-0.052,0.593],[-0.049,0.593],[0,0.343],[-0.097,0.541],[0,0],[0,0],[-0.048,0.985],[-0.244,0.146],[-0.296,0.197],[-0.247,0.096],[-0.121,0.048],[-0.142,-0.025],[-0.245,0.148],[-0.196,0.246],[-0.341,0.645],[-0.146,0.345],[-0.098,0.248],[-0.198,0.345],[-0.148,0.294],[-0.146,0.244],[-0.09,0.149],[-0.117,-0.032],[-0.491,0.147],[0,0.981],[0,0.295],[-0.048,0.247],[-0.197,0.299],[-0.2,0.152],[-0.246,0.148],[0,0],[0.591,0.055],[0.293,0],[0.124,0.026],[0.135,-0.014],[0.343,0.052],[0,0],[-0.148,0.295],[0,1.869],[0,0],[0,0.249],[-0.147,0.348],[-0.073,0.099],[-0.165,-0.049],[-0.099,0.196],[0,0.344],[0.047,0.247],[0.051,0.248],[0,0],[0.05,0.591],[0.151,0.343],[0.198,0.242],[0.25,0.198],[0.293,0.145],[0.122,0.046],[0.137,-0.026],[0.293,0.144],[0.345,0.392],[0.194,0.25],[0.144,0.089],[0.108,-0.022],[0,0.937],[0.049,0.342],[0.201,0.292],[0.587,0.294],[0.639,0.242],[0.048,0.296],[0,0.295],[0.048,0.245],[0.147,0.247],[0.247,0.197],[0.295,0.192],[0.488,0.393],[0.123,0.026],[0.134,-0.012],[0.294,0.051],[0.39,0.1],[0.442,0],[0.147,-0.195],[0.442,-0.347],[0.297,0],[0.291,0],[0,0],[0.785,0],[0.244,0],[0.291,0.096],[0.689,0.344],[0.444,0],[0.3,-0.045],[0.115,-0.045],[0.144,0.033],[0.244,-0.147],[0.246,-0.201],[0.3,-0.197],[0.541,-0.095],[0.588,0],[0,0],[0.445,-0.102],[0.684,-0.247],[0.489,0],[0.146,0.197],[0.198,0.299],[0.1,0.244],[0.1,0.246],[0.196,0.248],[0.244,0.149],[0,0],[0,0],[0,0.297],[0,0.591],[0,0.295],[-0.098,0.347],[-0.101,0.241],[0,0.94],[-0.147,0.196],[-0.1,0.049],[-0.149,-0.024],[-0.246,0.145],[0.295,0.096],[0.59,0.199],[0.347,0.444],[0.102,0.293],[0.196,0.195],[0.244,0.149],[0.193,0.2],[0.395,0.639],[0.147,0.244],[0.292,0.538],[0.097,0.293],[0.148,0.639],[0.05,0.592],[0.097,0.348],[0.048,0.243],[0,0],[0,0.591],[0.148,0.296],[0.148,0.346],[0,0.445],[-0.05,0.297],[-0.051,0.244],[-0.152,0.295],[-0.589,0.789],[-0.049,0.542],[-0.049,0.242],[-0.152,0.391],[-0.149,0.295],[-0.051,0.589],[0,0.928],[0.149,0.396],[0.242,0.296],[0.05,0.245],[0.05,0.247],[0.05,0.296],[0.146,0.296],[0.445,0.491],[0,0.292],[0.048,0.39],[0.051,0.252],[0.05,0.245],[0.05,0.29],[0,0],[0,0.589],[0,0.244],[0.145,0.638],[0.637,0.933],[0.099,0.243],[0.048,0.247],[0.05,0.294],[0.196,0.589],[0.148,0.345],[0.249,0.294],[0.095,0.54],[0.046,0.297],[0.149,0.341],[0,0],[0,0.396],[-0.192,0.296],[-0.148,0.245],[0.295,0.051],[0,0],[0,0.3],[0.048,0.242],[0.147,0.248],[0.244,0.196],[0,0],[0.687,0],[0.588,-0.146],[0,0],[0.149,-0.346],[0.097,-0.247],[0.196,-0.143],[0.244,-0.048],[0.588,-0.048],[0.248,-0.046],[0.293,-0.245],[0.099,-0.196],[0.149,-0.242],[0.247,-0.195],[0.344,-0.245],[0.292,-0.295],[0.248,-0.538],[0.149,-0.343],[0.588,-0.494],[0.145,-0.244],[0.195,-0.345],[0.296,-0.299],[0.244,-0.738],[0,-0.449],[-0.099,-0.347],[-0.098,-0.244],[0.343,-0.149],[0.244,0],[0.124,-0.025],[0.136,0.013],[0.396,-0.098],[0.245,-0.197],[0.246,-0.248],[0.297,-0.195],[0.198,-0.144],[0.1,-0.198],[0,-0.934],[-0.1,-0.536],[-0.147,-0.588],[-0.296,-0.587],[0,-0.44],[0.246,-0.296],[0.248,-0.295],[0.2,-0.101],[0.245,-0.149],[0.249,-0.289],[0.196,-0.247],[0.539,-0.387],[0.246,-0.051],[0.121,-0.024],[0.137,0.013],[0.347,-0.097],[0.589,-0.3],[0.442,-0.443],[0.15,-0.538],[0,-0.295],[0,0],[0,-0.442],[-0.048,-0.349],[0,0],[-0.249,-0.244],[-0.539,-0.834],[0.097,-0.54],[0,-0.293],[0,-0.35],[-0.049,-0.294],[-0.049,-0.294],[0,0],[0,-0.444],[0.047,-0.246],[0.097,-0.348],[0.735,-0.891],[0.099,-0.248],[0.147,-0.348],[0.099,-0.245],[0.243,-0.591],[0.194,-0.296],[0.246,-0.196],[0.246,-0.246],[0.492,-0.542],[0.293,-0.248],[0.294,-0.3],[0.54,-0.339],[0.245,-0.196],[0.196,-0.294],[0.151,-0.196],[0.196,-0.153],[0.293,-0.196],[0.297,-0.145],[0.245,-0.144],[0.245,-0.242],[0.445,-0.783],[0.144,-0.344],[0.249,-0.292],[0.342,-0.251],[0.297,-0.246],[0.145,-0.291],[0.147,-0.544],[0,-0.588],[0.098,-1.031],[0,0],[-0.442,-0.045],[-0.539,0],[-0.341,0.149],[-0.931,0.537],[-0.544,0],[0,0],[-0.587,0],[-0.589,0.049],[-0.292,0],[0,0],[-0.146,-0.348],[-0.098,-0.243],[-0.145,-0.253],[0,0],[-0.101,-0.247],[-0.196,-0.297],[-0.1,-0.051],[-0.14,0.024],[-0.393,-0.151],[-0.246,-0.245],[-0.248,-0.194],[-0.292,-0.243],[-0.242,-0.145],[-0.124,-0.051],[-0.134,0.025],[-0.346,-0.149],[-0.49,-0.444],[-0.046,-0.244],[-0.047,-0.539],[-0.148,-0.296],[-0.49,-0.589],[-0.15,-0.342],[0,-0.293],[0,0],[0,-0.591],[-0.097,-0.345],[-0.297,-0.594],[-0.146,-0.246],[-0.196,-0.247],[-0.148,-0.243],[-0.049,-0.242],[-0.049,-0.586],[-0.049,-0.243],[-0.1,-0.346],[-0.389,-0.641],[-0.097,-0.296],[-0.147,-0.54],[-0.095,-0.634],[-0.146,-0.297],[-0.249,-0.295],[-0.244,-0.249],[-0.246,-0.244],[-0.146,-0.346],[0,-0.242],[-0.05,-0.248],[-0.145,-0.293],[-0.243,-0.15],[-0.135,-0.051],[-0.122,0.016],[-0.344,-0.094],[0,0],[-0.837,0],[0,0],[0,0],[-0.537,0.145],[-0.442,0],[-0.393,-0.193],[-0.587,-0.49],[-0.988,-0.544],[-0.788,0],[-0.443,0],[0,0.736],[0,0.296],[0.099,0.93],[-0.442,0.05],[0,0],[-0.348,0],[-0.393,-0.048],[-0.295,-0.29],[-0.346,-0.148],[0,0],[-0.098,-0.297],[-0.101,-0.252],[-0.198,-0.248],[-0.295,-0.193],[-0.244,-0.103],[-0.544,-0.151],[-0.261,-0.022],[-0.28,0.02],[-0.634,-0.147],[-0.687,-0.341],[-0.05,-0.248],[0,-0.347],[0.145,-0.343],[0.098,-0.246],[0,-0.347],[-0.146,-0.246],[-0.293,-0.196],[0.298,-0.247],[0.244,-0.095],[0.244,-0.101],[-0.149,-0.246],[-0.25,-0.147],[-0.539,-0.248],[-0.297,0]],\"v\":[[-4.814,-24.406],[-5.603,-24.406],[-7.177,-23.817],[-7.964,-23.817],[-8.978,-23.84],[-10.322,-23.817],[-11.107,-23.227],[-11.895,-22.636],[-12.681,-23.227],[-13.271,-24.012],[-14.841,-24.601],[-17.206,-23.621],[-17.641,-23.608],[-17.99,-23.621],[-18.779,-22.832],[-22.708,-22.832],[-23.103,-22.049],[-23.297,-21.26],[-24.085,-20.669],[-24.872,-20.669],[-25.583,-20.682],[-26.443,-20.669],[-27.232,-20.276],[-27.625,-20.276],[-28.805,-20.474],[-29.822,-20.45],[-31.163,-20.474],[-31.951,-20.669],[-32.736,-21.26],[-33.525,-21.654],[-34.112,-20.867],[-34.112,-20.079],[-34.31,-19.294],[-34.31,-18.018],[-35.098,-18.113],[-35.882,-17.916],[-37.259,-18.018],[-37.259,-14.775],[-40.208,-14.775],[-40.404,-13.2],[-40.404,-11.626],[-40.799,-10.84],[-40.997,-9.07],[-40.997,-7.696],[-43.353,-7.696],[-44.337,-5.334],[-45.124,-5.136],[-45.711,-4.352],[-46.503,-4.154],[-46.908,-4.155],[-47.285,-4.154],[-47.68,-3.369],[-48.272,-2.586],[-49.057,-0.812],[-49.648,0.169],[-49.84,0.958],[-50.63,1.744],[-51.025,2.531],[-51.22,3.318],[-51.674,3.364],[-52.007,3.318],[-53.384,3.514],[-53.384,6.068],[-53.579,6.856],[-53.775,7.64],[-54.559,8.23],[-55.349,8.429],[-55.742,9.218],[-55.742,10.588],[-54.169,10.788],[-53.384,10.788],[-52.988,10.789],[-52.598,10.788],[-52.007,11.574],[-52.4,12.36],[-52.988,13.096],[-52.792,17.867],[-52.792,18.651],[-52.792,19.434],[-53.384,20.225],[-53.796,20.226],[-54.169,20.225],[-54.365,21.013],[-53.971,21.798],[-53.775,22.583],[-53.579,23.374],[-53.579,24.158],[-53.384,25.732],[-52.598,26.323],[-52.204,27.105],[-51.414,27.503],[-50.63,28.092],[-50.241,28.091],[-49.84,28.092],[-49.057,28.484],[-48.663,30.055],[-47.876,30.448],[-47.432,30.473],[-47.09,30.448],[-47.09,32.809],[-46.503,33.596],[-45.516,33.987],[-43.944,34.973],[-42.176,35.167],[-41.977,35.956],[-41.977,36.743],[-41.977,37.526],[-41.191,37.921],[-40.404,38.315],[-39.815,39.102],[-38.243,40.082],[-37.848,40.083],[-37.456,40.082],[-36.667,40.477],[-35.487,40.675],[-34.703,39.885],[-34.508,39.102],[-32.934,38.904],[-32.146,39.102],[-31.359,38.904],[-30.867,38.904],[-28.805,38.904],[-28.016,38.904],[-27.625,39.69],[-25.659,39.885],[-24.482,39.885],[-23.693,39.495],[-23.324,39.507],[-22.905,39.495],[-22.512,38.708],[-21.729,38.118],[-20.939,37.526],[-19.366,37.526],[-17.794,37.728],[-17.402,37.728],[-16.415,36.94],[-14.352,36.548],[-13.073,36.743],[-12.879,37.526],[-12.29,38.315],[-12.091,39.102],[-11.895,39.885],[-11.107,40.278],[-10.272,40.477],[-3.443,40.477],[-3.443,42.882],[-3.638,43.622],[-3.638,45.197],[-3.638,45.978],[-4.225,46.772],[-4.422,47.503],[-4.62,49.917],[-4.814,50.701],[-5.21,50.701],[-5.603,50.701],[-5.996,51.487],[-5.21,51.878],[-3.638,52.469],[-3.443,54.046],[-3.047,54.829],[-2.26,55.024],[-1.473,55.418],[-1.279,56.205],[0.1,57.781],[0.493,58.568],[1.475,60.14],[1.866,60.924],[1.866,62.693],[2.262,64.266],[2.85,65.053],[2.654,65.843],[2.654,66.627],[3.046,68.201],[3.835,68.592],[3.835,69.773],[3.835,70.952],[3.639,71.741],[3.443,72.525],[2.654,73.116],[1.475,75.475],[1.475,77.05],[1.283,77.838],[0.493,78.621],[0.1,79.408],[0.1,80.983],[0.294,83.339],[1.083,84.128],[1.866,84.717],[1.866,85.503],[1.866,86.291],[2.262,87.074],[2.654,87.863],[4.424,89.044],[4.424,89.829],[4.816,90.808],[5.014,91.596],[5.014,92.387],[5.605,93.122],[5.605,97.152],[6,98.679],[6,99.463],[6.785,101.035],[8.945,103.198],[8.945,103.986],[9.142,104.771],[9.538,105.558],[10.126,107.132],[10.911,107.916],[11.702,108.507],[11.702,110.078],[12.092,110.868],[12.684,111.65],[12.684,112.043],[11.893,112.636],[11.307,113.422],[11.307,114.204],[12.092,114.402],[12.88,114.402],[12.88,115.194],[12.88,115.977],[13.665,116.373],[14.503,116.763],[18.336,116.763],[19.957,116.175],[21.583,115.782],[26.445,115.782],[27.036,114.998],[27.036,114.204],[27.823,114.011],[28.609,114.011],[30.181,113.812],[30.967,113.618],[31.557,112.832],[31.557,112.043],[32.344,111.65],[33.13,111.063],[33.917,110.276],[34.704,109.491],[35.293,107.916],[36.083,107.132],[37.656,105.753],[37.85,104.969],[38.635,104.18],[39.423,103.395],[39.621,101.432],[39.621,100.25],[39.029,99.463],[38.831,98.679],[39.621,98.084],[40.405,98.084],[40.796,98.085],[41.19,98.084],[41.98,97.3],[42.764,96.711],[43.353,95.925],[44.141,95.332],[44.928,95.136],[44.928,94.351],[44.536,91.99],[44.141,90.417],[43.552,88.846],[42.764,87.269],[43.552,86.487],[44.141,85.699],[44.928,84.914],[45.714,84.717],[46.108,83.928],[46.895,83.142],[47.29,82.352],[48.859,81.571],[49.646,81.373],[50.036,81.374],[50.432,81.373],[51.22,80.787],[52.793,79.799],[53.775,78.229],[53.775,76.654],[53.973,75.868],[53.973,74.687],[53.973,73.512],[53.581,72.675],[53.581,68.001],[52.793,67.413],[51.612,64.857],[52.005,63.285],[51.809,62.552],[52.005,61.711],[51.612,60.924],[51.22,60.14],[51.22,59.746],[51.419,58.568],[51.419,57.781],[52.204,57.191],[54.169,54.829],[54.365,54.046],[54.954,53.257],[55.154,52.469],[55.939,50.898],[56.725,50.309],[57.513,49.719],[58.104,48.931],[59.676,47.556],[60.462,46.772],[61.249,45.978],[62.823,45],[63.215,44.213],[63.997,43.622],[64.199,42.839],[64.984,42.641],[65.768,42.049],[66.557,41.456],[67.344,41.064],[67.932,40.278],[68.526,37.921],[69.307,37.33],[70.096,36.548],[71.077,35.956],[71.671,35.167],[72.257,34.384],[72.456,32.809],[72.456,31.235],[73.044,28.633],[73.044,27.105],[71.913,26.91],[70.487,27.105],[69.703,27.699],[66.951,28.876],[65.577,28.484],[64.786,28.484],[63.215,28.68],[61.639,28.68],[60.462,28.288],[60.066,27.503],[59.478,26.713],[59.478,25.929],[58.693,25.532],[58.299,24.749],[58.299,23.964],[57.513,23.374],[57.133,23.373],[56.725,23.374],[55.939,22.583],[55.35,21.798],[54.56,21.405],[53.973,20.619],[53.186,20.225],[52.79,20.225],[52.401,20.225],[51.612,19.638],[50.826,18.06],[50.63,17.277],[50.432,15.708],[49.646,15.112],[48.469,13.538],[47.876,12.753],[48.074,11.967],[48.074,11.179],[47.876,9.61],[47.29,8.824],[46.503,7.25],[46.108,6.461],[45.324,6.068],[44.928,5.281],[44.928,4.495],[44.928,2.92],[44.732,2.138],[44.141,1.353],[42.764,-0.223],[42.372,-1.01],[42.372,-2.586],[41.586,-4.154],[40.997,-4.939],[40.405,-5.726],[39.621,-6.318],[38.831,-8.086],[38.243,-8.876],[38.243,-9.658],[38.243,-10.447],[37.454,-11.034],[36.671,-11.432],[36.238,-11.442],[35.885,-11.432],[35.096,-12.019],[34.704,-12.019],[32.738,-11.233],[32.344,-11.233],[26.641,-12.607],[25.07,-12.214],[23.888,-12.414],[23.103,-13.2],[21.533,-14.378],[18.777,-15.363],[16.811,-14.969],[15.633,-15.263],[15.633,-13.396],[15.828,-12.607],[15.633,-10.25],[14.453,-10.054],[13.717,-10.054],[12.88,-10.054],[12.092,-10.84],[11.307,-11.626],[10.275,-11.822],[6.391,-11.822],[6,-12.607],[5.803,-13.396],[5.014,-13.789],[4.227,-14.378],[3.443,-14.575],[1.866,-14.969],[1.146,-14.957],[0.294,-14.969],[-1.279,-15.758],[-2.852,-17.131],[-3.047,-17.916],[-2.652,-18.707],[-1.867,-19.294],[-1.667,-20.079],[-2.064,-20.867],[-2.852,-21.26],[-3.638,-21.85],[-3.047,-22.636],[-2.26,-22.832],[-1.473,-23.028],[-1.667,-23.817],[-2.458,-24.012],[-4.029,-24.601]],\"c\":true},\"ix\":2},\"nm\":\"Path 84\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":84,\"ty\":\"sh\",\"ix\":85,\"ks\":{\"a\":0,\"k\":{\"i\":[[0.041,-0.016],[0.149,-0.103],[0.129,-0.101],[0.098,-0.145],[0.096,-0.121],[0.097,-0.128],[0.052,-0.094],[0.047,-0.121],[0,-0.293],[0,0],[0,0],[-0.027,0.347],[-0.025,0.123],[-0.05,0.122],[-0.072,0.15],[0,0],[-0.025,0.122],[-0.097,0.172],[-0.073,0.147],[-0.194,0.32],[-0.025,0.173],[0,0],[0,0],[0,0.149],[-0.023,0.222],[0.271,-0.025],[0.09,0]],\"o\":[[-0.171,0.074],[-0.146,0.097],[-0.123,0.097],[-0.099,0.147],[-0.1,0.122],[-0.075,0.094],[-0.049,0.1],[-0.1,0.272],[0,0],[0,0],[0,-0.346],[0,-0.145],[0.023,-0.121],[0.07,-0.146],[0,0],[0.05,-0.117],[0.077,-0.195],[0.078,-0.122],[0.195,-0.321],[0.075,-0.151],[0,0],[0,0],[0,-0.151],[0,-0.217],[-0.296,0],[-0.08,0],[-0.045,0]],\"v\":[[206.158,0.466],[205.861,0.861],[205.467,1.156],[205.077,1.448],[204.783,1.843],[204.587,2.239],[204.189,2.333],[204.094,2.725],[203.895,3.489],[203.895,6.856],[205.077,6.856],[205.077,5.97],[205.176,5.577],[205.274,5.185],[205.668,4.889],[205.861,4.495],[205.861,4.104],[206.254,3.71],[206.452,3.318],[207.139,2.531],[207.434,2.138],[207.434,1.744],[207.434,1.353],[207.236,1.03],[207.337,0.466],[206.55,0.466],[206.288,0.444]],\"c\":true},\"ix\":2},\"nm\":\"Path 85\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":85,\"ty\":\"sh\",\"ix\":86,\"ks\":{\"a\":0,\"k\":{\"i\":[[0.325,0],[0.488,-0.049],[0.345,0],[0.294,0],[0,0],[0.294,-0.047],[0.248,-0.101],[0,-0.489],[-0.394,-0.342],[-0.688,0],[-0.25,0.048],[-0.639,0.151],[-0.294,0],[-0.738,-0.588],[-0.242,-0.145],[-0.248,-0.098],[-0.294,-0.05],[-0.159,0.024],[-0.175,-0.048],[-0.294,-0.248],[-0.784,0],[0,0],[0.589,0.442],[0.785,0.048],[0,0],[0.27,-0.012],[0.343,0.024],[0.246,0.048],[0.246,0.148],[0.297,0.195],[0.291,0.151],[0.589,0.344],[0,0],[0.345,0.15],[0.135,0]],\"o\":[[-0.493,0],[-0.344,0.048],[-0.296,0],[0,0],[-0.346,0],[-0.244,0],[-0.392,0.197],[0,0.539],[0.491,0.393],[0.294,0],[0.636,-0.194],[0.248,-0.048],[0.984,0],[0.247,0.196],[0.198,0.152],[0.296,0.096],[0.169,0.048],[0.161,-0.024],[0.39,0.095],[0.591,0.491],[0,0],[-0.395,-0.641],[-0.592,-0.441],[0,0],[-0.345,-0.024],[-0.271,0.012],[-0.297,0],[-0.296,-0.098],[-0.294,-0.148],[-0.244,-0.147],[-0.592,-0.343],[0,0],[-0.295,-0.144],[-0.149,-0.065],[-0.27,0]],\"v\":[[-174.793,4.495],[-176.072,4.495],[-176.858,4.889],[-177.644,4.692],[-179.317,4.692],[-180.202,4.692],[-180.99,4.692],[-181.58,5.874],[-180.791,7.051],[-179.022,7.444],[-178.234,7.444],[-176.664,6.461],[-175.876,6.461],[-173.516,7.444],[-173.124,8.23],[-172.336,8.429],[-171.551,8.824],[-171.063,8.824],[-170.565,8.824],[-169.782,9.61],[-167.963,10.493],[-161.915,10.493],[-163.291,9.018],[-165.06,8.037],[-165.848,8.037],[-166.734,8.037],[-167.617,8.037],[-168.404,8.037],[-169.191,7.64],[-169.782,6.856],[-170.565,6.461],[-172.14,5.674],[-172.926,5.281],[-173.516,4.495],[-173.937,4.408]],\"c\":true},\"ix\":2},\"nm\":\"Path 86\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":86,\"ty\":\"sh\",\"ix\":87,\"ks\":{\"a\":0,\"k\":{\"i\":[[0.593,-0.097],[0,0],[-0.343,-0.194],[-0.343,-0.049],[0,0],[-0.247,0.046],[-0.389,0.149],[-0.247,0.052],[-0.293,0],[-0.294,0],[-0.295,0],[-0.591,0.052],[-0.59,0.05],[-0.293,0],[-0.296,0],[-0.59,0],[0,0],[-0.295,0.099],[0.146,0.295],[0.1,0.396],[0.933,0],[0,0],[0.49,0],[0,0],[0.342,-0.052],[0.293,0],[0.246,0.048],[0.345,0.146],[0.245,0.1],[0.346,0.099],[0.59,0],[0.639,0]],\"o\":[[0,0],[0.296,0.295],[0.296,0.151],[0,0],[0.292,0],[0.395,-0.097],[0.249,-0.053],[0.248,-0.051],[0.298,0],[0.296,0],[0.592,0],[0.591,-0.051],[0.295,0],[0.295,0],[0.588,0.05],[0,0],[0.343,0],[-0.196,-0.247],[-0.197,-0.397],[-0.936,0.197],[0,0],[-0.492,-0.049],[0,0],[-0.343,0.044],[-0.245,0.048],[-0.298,0],[-0.343,-0.099],[-0.244,-0.1],[-0.343,-0.146],[-0.54,-0.148],[-0.638,-0.048],[-0.589,0]],\"v\":[[-159.361,11.77],[-159.361,14.131],[-158.574,14.915],[-157.786,15.509],[-156.999,15.509],[-156.214,15.509],[-155.43,14.721],[-154.641,14.523],[-153.856,14.523],[-153.068,14.721],[-152.283,14.523],[-150.708,14.523],[-149.137,14.327],[-148.35,14.131],[-147.562,14.327],[-145.991,14.523],[-145.203,14.523],[-144.418,14.131],[-145.203,13.738],[-145.203,12.604],[-147.562,12.949],[-148.35,12.949],[-149.528,12.56],[-149.921,12.56],[-150.708,13.148],[-151.493,13.148],[-152.283,13.148],[-153.068,12.56],[-153.856,12.36],[-154.641,11.77],[-156.214,11.77],[-157.836,11.574]],\"c\":true},\"ix\":2},\"nm\":\"Path 87\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":87,\"ty\":\"sh\",\"ix\":88,\"ks\":{\"a\":0,\"k\":{\"i\":[[0,0],[0,-0.071],[0,-0.077],[0,-0.088],[0,-0.076],[-0.015,-0.095],[-0.015,-0.06],[-0.009,-0.074],[0,-0.148],[0.011,-0.062],[0.052,-0.1],[0.011,-0.078],[0,-0.158],[0,-0.355],[0.088,-0.06],[0.073,-0.033],[0.158,-0.072],[0.122,-0.099],[0.01,-0.111],[0,-0.099],[-0.009,-0.09],[-0.073,-0.108],[-0.112,-0.11],[-0.122,-0.088],[-0.099,-0.06],[-0.197,-0.113],[-0.09,-0.025],[-0.035,0.003],[-0.031,-0.007],[0,-0.309],[-0.034,-0.139],[-0.173,-0.085],[-0.086,-0.018],[-0.126,0],[0,0],[0,0],[0,0.188],[0,0],[-0.133,0.16],[-0.146,0.113],[-0.057,0.038],[-0.055,0.064],[-0.063,0.085],[-0.052,0.1],[-0.038,0.114],[-0.048,0.179],[-0.014,0.159],[0,0],[0,0.097],[0,0],[0.049,0.16],[0.025,0.075],[0.023,0.072],[0.008,0.061],[0.023,0.086],[0.023,0.088],[0.024,0.062],[0.052,0.072],[0.078,0.061],[0.097,0.048],[0.103,0],[0,0],[0.041,0],[0.086,0.044],[0.061,0.037],[0.075,0.053],[0.059,0.037],[0.175,0]],\"o\":[[0,0.076],[0,0.075],[0,0.085],[0,0.07],[0,0.097],[0,0.077],[0.01,0.078],[0.028,0.131],[0,0.075],[-0.024,0.107],[-0.035,0.071],[-0.024,0.145],[0,0.363],[0,0.111],[-0.074,0.051],[-0.148,0.089],[-0.146,0.073],[-0.073,0.06],[-0.009,0.097],[0,0.1],[0.01,0.124],[0.072,0.125],[0.111,0.111],[0.102,0.073],[0.187,0.122],[0.075,0.031],[0.029,0.006],[0.034,-0.003],[-0.136,0.285],[0,0.144],[0.063,0.182],[0.086,0.033],[0.108,0.023],[0,0],[0,0],[0,-0.18],[0,0],[0,-0.219],[0.124,-0.147],[0.061,-0.038],[0.064,-0.032],[0.059,-0.086],[0.057,-0.089],[0.047,-0.097],[0.06,-0.169],[0.036,-0.156],[0,0],[0,-0.101],[0,0],[0,-0.174],[-0.014,-0.074],[-0.027,-0.073],[-0.023,-0.061],[-0.032,-0.091],[-0.024,-0.086],[-0.023,-0.061],[-0.026,-0.085],[-0.05,-0.086],[-0.079,-0.077],[-0.074,-0.039],[0,0],[-0.046,-0.003],[-0.092,0],[-0.075,-0.037],[-0.072,-0.05],[-0.061,-0.034],[-0.135,-0.073],[0,0]],\"v\":[[204.365,13.441],[204.391,13.638],[204.339,13.837],[204.365,14.046],[204.339,14.23],[204.391,14.472],[204.391,14.668],[204.483,14.87],[204.535,15.26],[204.535,15.46],[204.339,15.708],[204.241,15.903],[204.189,16.316],[204.339,17.226],[204.141,17.422],[203.946,17.569],[203.504,17.767],[203.11,18.012],[202.962,18.259],[202.962,18.505],[202.962,18.752],[203.16,19.043],[203.405,19.389],[203.746,19.638],[203.993,19.833],[204.483,20.179],[204.684,20.324],[204.78,20.324],[204.879,20.324],[204.631,21.088],[204.73,21.457],[205.029,21.848],[205.274,21.899],[205.581,21.994],[206.452,21.994],[206.452,21.366],[206.353,20.9],[206.353,19.992],[206.647,19.488],[207.042,19.145],[207.236,19.043],[207.337,18.848],[207.535,18.605],[207.733,18.356],[207.829,18.06],[208.025,17.616],[208.124,17.178],[208.124,16.934],[208.173,16.686],[208.173,16.49],[208.124,16.048],[208.025,15.852],[207.926,15.655],[207.882,15.46],[207.78,15.211],[207.681,14.965],[207.634,14.77],[207.483,14.575],[207.283,14.377],[207.042,14.182],[206.793,14.08],[206.6,14.08],[206.47,14.077],[206.207,14.033],[206.011,13.934],[205.912,13.685],[205.715,13.59],[205.308,13.441]],\"c\":true},\"ix\":2},\"nm\":\"Path 88\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":88,\"ty\":\"sh\",\"ix\":89,\"ks\":{\"a\":0,\"k\":{\"i\":[[-0.011,-0.028],[0,0.024]],\"o\":[[0,-0.025],[-0.031,0.001]],\"v\":[[153.66,13.514],[153.658,13.441]],\"c\":true},\"ix\":2},\"nm\":\"Path 89\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":89,\"ty\":\"sh\",\"ix\":90,\"ks\":{\"a\":0,\"k\":{\"i\":[[0,-0.008],[0.005,0.014]],\"o\":[[0.007,0],[0,0.008]],\"v\":[[153.66,13.538],[153.66,13.514]],\"c\":true},\"ix\":2},\"nm\":\"Path 90\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":90,\"ty\":\"sh\",\"ix\":91,\"ks\":{\"a\":0,\"k\":{\"i\":[[0,0],[-0.439,-0.146],[-0.126,0.029],[-0.133,-0.077],[-0.244,-0.145],[-0.148,-0.248],[-0.122,-0.018],[-0.134,0.053],[-0.295,0.296],[0.244,0.148],[0.249,0.146],[0.343,0]],\"o\":[[0.298,0.396],[0.116,0.046],[0.145,-0.032],[0.293,0.145],[0.243,0.151],[0.11,-0.024],[0.148,0.021],[0.395,-0.199],[-0.149,-0.247],[-0.246,-0.146],[-0.295,-0.148],[0,0]],\"v\":[[-169.584,13.538],[-168.8,14.523],[-168.432,14.511],[-168.009,14.523],[-167.224,14.915],[-167.028,15.708],[-166.676,15.719],[-166.243,15.708],[-165.455,14.915],[-165.651,14.131],[-166.439,13.934],[-167.274,13.538]],\"c\":true},\"ix\":2},\"nm\":\"Path 91\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":91,\"ty\":\"sh\",\"ix\":92,\"ks\":{\"a\":0,\"k\":{\"i\":[[0.162,-0.09],[0.122,-0.072],[0.146,-0.048],[0.147,0],[0.294,0],[-0.342,-0.22],[-0.175,-0.073],[-0.151,-0.076],[-0.064,0.015],[-0.054,-0.041],[-0.075,-0.094],[-0.123,-0.117],[-0.076,-0.194],[-0.025,-0.122],[-0.05,-0.124],[-0.099,-0.125],[-0.124,-0.074],[-0.294,-0.221],[-0.078,-0.126],[-0.073,-0.172],[-0.022,-0.315],[0,0],[0,0.169],[0,0.293],[0,0.075],[0.346,0.345],[0.096,0.119],[0.073,0.123],[0.125,0.174],[0.172,0.126],[0.172,0.099],[0.069,-0.001],[0.026,0.068],[0,0],[0,0.17],[0,0],[0.147,0],[0.147,0],[0,0],[0.107,0]],\"o\":[[-0.146,0.068],[-0.123,0.072],[-0.124,0.025],[-0.294,0.025],[0.314,0.222],[0.149,0.077],[0.145,0.05],[0.055,0.021],[0.077,-0.016],[0.098,0.07],[0.098,0.126],[0.15,0.152],[0.023,0.125],[0.021,0.121],[0.049,0.145],[0.096,0.123],[0.297,0.218],[0.121,0.099],[0.095,0.145],[0.121,0.27],[0,0],[0,-0.17],[0,-0.297],[0,-0.079],[0,-0.514],[-0.1,-0.097],[-0.076,-0.097],[-0.098,-0.172],[-0.123,-0.168],[-0.174,-0.125],[-0.054,-0.031],[-0.088,0],[0,0],[-0.074,-0.144],[0,0],[-0.15,0],[-0.149,0],[0,0],[-0.129,0],[-0.157,0]],\"v\":[[209.499,22.39],[209.303,22.782],[208.91,22.979],[208.517,22.979],[207.535,23.175],[208.418,23.764],[208.814,24.06],[209.207,24.257],[209.392,24.249],[209.598,24.257],[209.598,24.647],[209.99,24.843],[210.386,25.235],[210.483,25.633],[210.483,26.028],[210.681,26.42],[211.072,26.617],[211.86,27.303],[212.257,27.503],[212.548,27.894],[212.646,28.729],[214.267,28.729],[214.217,28.288],[214.319,27.503],[214.267,27.327],[213.629,26.125],[213.238,25.929],[213.137,25.532],[212.844,25.041],[212.452,24.647],[211.957,24.354],[211.762,24.324],[211.566,24.257],[211.368,23.861],[211.467,23.448],[211.467,22.317],[211.072,22.39],[210.681,22.29],[210.309,22.29],[209.96,22.282]],\"c\":true},\"ix\":2},\"nm\":\"Path 92\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":92,\"ty\":\"sh\",\"ix\":93,\"ks\":{\"a\":0,\"k\":{\"i\":[[0,-0.243],[-0.196,-0.144],[-0.172,-0.046],[-0.148,0],[-0.27,0],[-0.071,-0.444],[-0.024,-0.147],[0,-0.369],[0.025,-0.243],[-0.024,-0.12],[0,-0.073],[-0.101,-0.074],[-0.17,-0.076],[-0.152,-0.025],[-0.294,0.052],[0.047,-0.166],[0.022,-0.12],[0,-0.17],[-0.074,-0.121],[-0.149,-0.073],[-0.15,-0.03],[-0.148,0],[-0.122,0.045],[-0.072,0.097],[-0.12,0.05],[-0.273,0],[0,0],[0.269,0.17],[0.097,0.046],[0.099,0.148],[0.046,0.126],[0.071,0.122],[0.145,0.102],[0.145,0.072],[0.097,0.074],[0.073,0.15],[0.02,0.148],[0.052,0.269],[0.098,0.145],[0.295,0.196],[0.272,0.196],[0.149,0.103],[0.148,0.099],[0.121,0.023]],\"o\":[[0,0.27],[0.149,0.124],[0.119,0.028],[0.271,0.028],[0,0.47],[0.025,0.145],[0.097,0.343],[0,0.246],[0,0.151],[0,0.056],[0,0.152],[0.145,0.119],[0.146,0.073],[0.266,0.046],[-0.077,0.177],[-0.026,0.124],[-0.026,0.149],[0,0.15],[0.073,0.124],[0.147,0.078],[0.122,0.021],[0.147,0],[0.125,-0.05],[0.074,-0.099],[0.247,-0.097],[0,0],[0,-0.343],[-0.099,-0.05],[-0.145,-0.103],[-0.049,-0.103],[-0.051,-0.124],[-0.076,-0.152],[-0.122,-0.074],[-0.12,-0.048],[-0.125,-0.098],[-0.076,-0.149],[-0.05,-0.272],[-0.027,-0.174],[-0.198,-0.297],[-0.269,-0.17],[-0.149,-0.099],[-0.148,-0.097],[-0.123,-0.076],[-0.023,0.248]],\"v\":[[204.587,24.084],[204.879,24.749],[205.274,25.041],[205.668,25.041],[206.353,25.041],[206.353,26.223],[206.55,26.617],[206.746,27.574],[206.647,28.185],[206.55,28.577],[206.647,28.777],[206.944,29.075],[207.337,29.37],[207.733,29.566],[208.517,29.465],[208.223,29.858],[208.223,30.253],[208.025,30.644],[208.124,31.038],[208.517,31.235],[208.91,31.435],[209.303,31.435],[209.696,31.435],[209.696,31.038],[210.089,30.939],[210.777,30.939],[210.777,29.786],[210.287,29.075],[209.892,28.979],[209.499,28.68],[209.404,28.288],[209.404,27.894],[209.009,27.597],[208.616,27.402],[208.223,27.303],[208.025,26.91],[207.829,26.517],[207.829,25.732],[207.535,25.338],[206.844,24.647],[206.061,24.257],[205.762,23.861],[205.371,23.568],[204.684,23.469]],\"c\":true},\"ix\":2},\"nm\":\"Path 93\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":93,\"ty\":\"sh\",\"ix\":94,\"ks\":{\"a\":0,\"k\":{\"i\":[[0.073,-0.123],[0.15,-0.391],[0.052,-0.127],[0.078,-0.15],[0.073,-0.121],[0.097,-0.151],[0.073,-0.121],[0.072,-0.123],[0.078,-0.171],[0.028,-0.126],[0,-0.123],[0.075,-0.151],[0.125,-0.147],[0.12,-0.073],[0.221,-0.171],[0.099,-0.073],[0.174,-0.1],[0.123,-0.022],[0.057,0.011],[0.073,-0.042],[0.099,-0.148],[0.099,-0.296],[-0.146,0],[-0.147,0],[-0.122,0.048],[-0.121,0.127],[-0.072,0.165],[-0.047,0.119],[-0.27,0.178],[-0.125,0.051],[-0.145,0.026],[-0.346,0],[-0.027,0.27],[-0.128,0.272],[-0.242,0.22],[-0.124,0.095],[-0.077,0.124],[-0.025,0.176],[-0.025,0.347],[0,0.147],[0,0.346]],\"o\":[[-0.243,0.369],[-0.024,0.124],[-0.073,0.173],[-0.072,0.146],[-0.097,0.146],[-0.074,0.121],[-0.072,0.124],[-0.077,0.149],[-0.048,0.121],[-0.021,0.122],[-0.021,0.172],[-0.072,0.146],[-0.095,0.123],[-0.225,0.173],[-0.099,0.078],[-0.144,0.125],[-0.122,0.046],[-0.052,0.011],[-0.078,-0.015],[-0.145,0.074],[-0.17,0.245],[0.147,0],[0.174,0],[0.124,0],[0.172,-0.073],[0.121,-0.124],[0.049,-0.124],[0.124,-0.296],[0.122,-0.071],[0.151,-0.049],[0.32,-0.074],[0,-0.295],[0.05,-0.296],[0.148,-0.29],[0.123,-0.101],[0.122,-0.103],[0.097,-0.15],[0.073,-0.316],[0,-0.148],[0.025,-0.346],[-0.072,0.148]],\"v\":[[203.602,25.338],[202.91,26.223],[202.91,26.617],[202.616,27.009],[202.421,27.402],[202.029,27.699],[201.832,28.092],[201.639,28.484],[201.24,28.777],[201.24,29.172],[201.24,29.566],[200.947,29.96],[200.65,30.351],[200.457,30.744],[199.668,30.939],[199.569,31.331],[199.176,31.631],[198.785,31.726],[198.621,31.715],[198.389,31.726],[198.095,32.121],[197.803,32.907],[198.168,33.003],[198.585,32.907],[198.98,32.907],[199.373,32.611],[199.668,32.221],[199.668,31.827],[200.258,31.135],[200.65,31.038],[201.046,30.842],[201.931,30.842],[201.931,30.055],[202.227,29.269],[202.715,28.484],[203.11,28.288],[203.504,28.092],[203.602,27.597],[203.602,26.713],[203.701,26.323],[203.798,24.942]],\"c\":true},\"ix\":2},\"nm\":\"Path 94\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":94,\"ty\":\"sh\",\"ix\":95,\"ks\":{\"a\":0,\"k\":{\"i\":[[0,0],[0.15,-0.019],[0.126,-0.051],[0.096,-0.124],[0.025,-0.124],[0,-0.347],[0,0],[0.292,-0.196],[0.174,-0.071],[0.173,-0.05],[0.172,-0.019],[0.32,-0.048],[0.149,0],[0.295,0],[0,0],[0.37,-0.068],[0.119,0],[0.294,0],[0.048,-0.194],[0.051,-0.146],[0.047,-0.144],[0.047,-0.124],[0.101,-0.126],[0.247,-0.274],[0.07,-0.169],[0.051,-0.126],[0.098,-0.198],[0.023,-0.124],[-0.125,-0.022],[-0.07,0.006],[-0.059,-0.01],[-0.198,-0.026],[-0.099,-0.586],[-0.027,-0.127],[-0.124,-0.296],[-0.023,-0.126],[0,-0.222],[0.075,-0.196],[0.127,-0.122],[0.046,-0.223],[0,-0.147],[0,-0.296],[0.095,-0.319],[0.146,-0.121],[0.172,-0.048],[0.068,0.006],[0.058,-0.011],[0.294,-0.027],[0,0],[-0.05,-0.175],[-0.025,-0.125],[0.416,-0.267],[0,0],[0.12,-0.027],[0.246,-0.195],[0.098,-0.149],[0,-0.609],[0,0],[0.052,-0.471],[0,-0.296],[0,-0.145],[0,-0.169],[0,-0.146],[-0.167,-0.295],[-0.148,0.048],[-0.248,0],[-0.345,-0.022],[0,0],[0.122,-0.076],[0.295,-0.052],[0.149,0],[0.201,-0.024],[0.076,-0.271],[0.095,-0.075],[0.123,-0.098],[0.147,-0.098],[0.074,-0.167],[0,-0.218],[-0.049,-0.202],[-0.074,-0.175],[-0.029,-0.175],[0,0],[-0.029,-0.346],[-0.05,-0.125],[-0.145,-0.121],[-0.144,-0.047],[-0.12,0],[-0.126,-0.026],[-0.149,-0.047],[-0.121,-0.074],[-0.125,-0.172],[-0.077,-0.146],[-0.099,-0.17],[-0.098,-0.121],[-0.073,-0.152],[-0.048,-0.151],[-0.025,-0.295],[-0.026,-0.127],[-0.077,-0.12],[-0.093,-0.122],[-0.098,-0.125],[-0.074,-0.145],[0,-0.293],[0,0],[-0.075,-0.127],[-0.075,-0.124],[-0.1,-0.146],[-0.025,-0.494],[-0.199,-0.438],[-0.075,-0.122],[-0.1,-0.098],[-0.124,-0.098],[-0.121,-0.071],[-0.145,-0.097],[-0.099,-0.122],[-0.049,-0.153],[0,-0.147],[-0.025,-0.393],[-0.026,-0.173],[-0.05,-0.125],[-0.073,-0.151],[-0.171,-0.295],[-0.1,-0.124],[-0.147,-0.12],[-0.148,-0.075],[-0.17,-0.102],[-0.174,-0.053],[-0.124,-0.025],[-0.128,0.012],[-0.136,-0.025],[-0.149,-0.075],[-0.144,-0.146],[-0.147,-0.101],[-0.125,-0.078],[-0.147,-0.095],[-0.345,-0.168],[-0.293,-0.101],[-0.148,-0.049],[-0.269,-0.317],[-0.099,-0.12],[-0.122,-0.151],[-0.296,-0.243],[-0.172,-0.023],[-0.121,0],[-0.292,0],[0,0],[0.025,-0.32],[0,-0.219],[0,-0.074],[0,0],[0,-0.368],[0,0],[0.025,-0.152],[0.025,-0.124],[0.022,-0.175],[0,-0.273],[0,-0.045],[0,0],[0,-0.147],[0,-0.221],[0,0],[0,0],[0.026,-0.22],[0,-0.344],[-0.025,-0.172],[0,0],[0,0],[0.022,-0.148],[0.022,-0.124],[0.026,-0.125],[0.049,-0.149],[0.073,-0.172],[0.145,-0.373],[0.022,-0.196],[0,-0.292],[0,-0.098],[-0.025,-0.392],[0,-0.146],[0,-0.175],[0,-0.195],[0.022,-0.124],[0.073,-0.197],[0.047,-0.124],[0.076,-0.148],[0.12,-0.174],[0,-0.494],[0,0],[0,-0.121],[-0.022,-0.121],[-0.073,-0.149],[-0.074,-0.15],[0,-0.644],[0.123,-0.586],[0,-0.15],[0.047,-0.442],[0.122,-0.296],[0.05,-0.123],[0.049,-0.195],[0.049,-0.171],[0.049,-0.148],[0.097,-0.15],[0.124,-0.172],[0,-0.149],[0,0],[0,-0.198],[0,-0.247],[0,-0.097],[0.022,-0.124],[0.076,-0.175],[0.075,-0.126],[0.078,-0.175],[0.026,-0.196],[0.148,-0.144],[0.074,-0.145],[0.023,-0.145],[0,-0.146],[-0.072,-0.193],[-0.026,-0.123],[-0.052,-0.3],[0,-0.148],[0,-0.148],[0,-0.317],[0.318,-0.517],[0.099,-0.147],[0.075,-0.145],[0,-0.298],[-0.025,-0.127],[-0.072,-0.173],[0,0],[0,-0.344],[0,-0.151],[0.244,-0.121],[0.099,-0.152],[0.049,-0.124],[0.049,-0.124],[0.05,-0.203],[0.026,-0.123],[0,-0.218],[-0.146,-0.167],[-0.124,-0.079],[-0.2,0],[0,0],[0,0],[0,0],[0,0],[0.146,-0.123],[0.123,-0.103],[0.126,-0.122],[0,0],[0.127,-0.145],[0.073,-0.149],[0.024,-0.122],[0,-0.151],[0,-0.49],[0.02,-0.469],[0.019,-0.148],[0,0],[0.121,0.1],[0.068,0],[0.041,0.068],[0,0.12],[0,0],[0.049,0.295],[0.049,0],[0.22,0],[0,0],[-0.099,-0.104],[-0.1,-0.123],[-0.072,-0.146],[-0.048,-0.147],[0,-0.12],[0,-0.147],[0,-0.292],[0,0],[0.099,0.072],[0.073,0.123],[0.049,0.125],[0.073,0.098],[0.197,0],[0.172,0],[0,0],[0.222,-0.147],[0.075,-0.122],[0,-0.198],[-0.469,-0.075],[-0.147,0],[-0.119,-0.03],[-0.064,0.007],[-0.064,-0.015],[-0.148,-0.098],[0.073,-0.121],[0,-0.216],[0,-0.169],[-0.027,-0.148],[-0.371,-0.146],[-0.296,-0.146],[0.024,-0.169],[0.024,-0.151],[0.292,-0.028],[0.125,-0.028],[0.297,-0.052],[0.112,0.008],[0.151,-0.029],[0.149,-0.075],[0,-0.223],[0,0],[-0.022,-0.149],[-0.022,-0.122],[-0.022,-0.121],[-0.073,-0.124],[0,-0.246],[0,0],[0.051,-0.172],[0,-0.169],[-0.196,-0.273],[0,-0.343],[0,-0.17],[-0.075,-0.126],[-0.119,-0.092],[-0.123,-0.099],[-0.049,-0.12],[0,0],[0,0],[-0.146,0],[0,0],[-0.144,-0.024],[0.147,-0.12],[0.296,-0.145],[-0.322,-0.127],[-0.072,0.01],[-0.056,-0.014],[-0.064,0.006],[-0.064,-0.015],[-0.097,-0.071],[0,0],[-0.098,-0.145],[-0.075,-0.169],[-0.052,-0.174],[-0.046,-0.127],[-0.144,-0.102],[-0.394,-0.266],[-0.099,-0.145],[-0.048,-0.12],[-0.048,-0.126],[-0.124,-0.077],[-0.047,-0.198],[-0.029,-0.123],[-0.027,-0.222],[-0.298,-0.031],[-0.126,-0.055],[-0.098,-0.073],[-0.05,-0.096],[-0.32,-0.127],[-0.141,0.021],[-0.123,-0.022],[-0.145,-0.025],[-0.121,-0.029],[-0.127,-0.025],[-0.169,-0.05],[-0.146,0.015],[-0.125,-0.012],[0,0],[-0.169,-0.048],[-0.198,0],[0,0],[-0.17,0],[-0.145,0.124],[-0.073,0.102],[-0.15,0.069],[-0.22,0],[-0.294,0.02],[0.223,0.149],[0.091,-0.021],[0.078,0.024],[0.321,0.074],[0.126,0],[0.15,0],[0.345,0],[0.145,0],[0,0],[0.295,0.024],[0.098,0.078],[0.096,0.143],[0.049,0.169],[0.022,0.296],[0.022,0.127],[0.049,0.121],[0.073,0.169],[0.047,0.144],[0,0.121],[0,0],[0.025,0.148],[0.025,0.265],[0.027,0.118],[0.074,0.15],[0,0.272],[0,0.243],[0,0],[0.048,0.15],[0,0],[-0.026,0.37],[0,0],[0.026,0.247],[0,0.142],[-0.122,0.246],[-0.147,0.093],[-0.124,0.026],[-0.273,0.073],[-0.099,0.168],[-0.196,0.61],[-0.047,0.127],[-0.122,0.126],[-0.146,0.074],[-0.171,0.072],[-0.067,-0.011],[-0.061,0.025],[-0.097,0.103],[0,0],[0.222,0],[0.318,0.1],[0.121,0.101],[0.05,0.099],[0.173,0.073],[0.122,0.049],[0.147,0.099],[0.097,0.171],[0.047,0.173],[0,0.295],[0,0],[-0.071,0.15],[-0.147,0.148],[-0.54,0],[0,0],[0,0],[-0.075,0.098],[-0.097,0.145],[-0.121,0.299],[-0.026,0.145],[0,0.146],[0,0.124],[-0.026,0.126],[-0.223,0],[-0.394,0],[-0.196,0.098],[-0.049,0.194],[0,0.145],[0,0],[0.052,0.148],[0.061,0.005],[0.074,-0.012],[0.148,-0.075],[0.199,-0.093],[0.077,0.01],[0.052,-0.009],[0.025,0.171],[0.025,0.295],[0.022,0.295],[0,0.152],[0,0],[0,0],[-0.293,-0.146],[-0.392,0],[0,0],[0,0.173],[0.027,0.175],[0,0],[-0.022,0.121],[-0.075,0.148],[-0.071,0.145],[0,0.143],[0.026,0.124],[0.071,0.294],[0,0.147],[0,0],[0,0],[-0.171,0],[0,0],[-0.268,0.073],[-0.344,0],[0,0],[-0.341,0],[-0.126,0.141],[-0.05,0.123],[-0.05,0.124],[-0.071,0.145],[-0.197,0.245],[-0.178,0.098],[-0.269,0.195],[-0.099,0.15],[-0.098,0.173],[0,0],[0,0.175],[0,0],[0,0],[0.149,0.032],[0,0],[0.025,0.125],[0.05,0.122],[0.123,0.097],[0.17,0.099],[0.297,0.222],[0.076,0.128],[0.098,0.149],[0.025,0.12],[0,0],[-0.32,-0.1],[-0.345,-0.176],[-0.174,-0.019],[-0.071,0.006],[-0.058,-0.009],[-0.467,0],[-0.127,0.025],[-0.196,0.051],[-0.3,0],[-0.271,0.078],[-0.168,0.074],[-0.097,0.073],[-0.098,0.148],[-0.147,0.293],[-0.073,0.124],[-0.173,0.102],[-0.124,0.052],[-0.123,0.169],[-0.049,0.17],[-0.022,0.122],[0,0.298],[-0.176,0.344],[-0.024,0.169],[-0.024,0.466],[0,0.126],[-0.024,0.125],[-0.073,0.119],[-0.295,0.122],[-0.172,0],[-0.172,-0.023],[0.047,-0.147],[0.027,-0.121],[0,-0.169],[-0.049,-0.168],[-0.223,0.224],[-0.072,0.122],[-0.148,0.298],[-0.074,0.122],[-0.099,0.169],[-0.073,0.145],[-0.074,0.172],[-0.025,0.124],[-0.027,0.149],[-0.027,0.123],[-0.073,0.126],[-0.147,0.097],[-0.126,0.044],[-0.126,0.025],[-0.149,0.097],[-0.099,0.197],[0,0.174],[0,0.296],[0.049,0.273],[0.048,0.293],[0,0.147],[0,0.195],[0,0.348],[-0.097,0.314],[-0.075,0.149],[-0.121,0.123],[-0.175,0.126],[-0.296,0.166],[-0.126,0.046],[-0.097,0.122],[-0.149,0.193],[-0.096,0.148],[-0.123,0.144],[-0.146,0.097],[-0.196,0],[0,0],[-0.27,0.194],[-0.122,0.148],[-0.1,0.126],[-0.124,0.127],[0,0],[-0.048,0.196],[-0.023,0.124],[-0.17,0.126],[-0.097,0.077],[-0.098,0.126],[-0.195,0.32],[-0.122,0.292],[-0.05,0.125],[-0.146,0.122],[-0.198,0.174],[-0.049,0.296],[-0.199,0.467],[-0.074,0.125],[-0.097,0.123],[-0.075,0.097],[-0.072,0.148],[-0.023,0.144],[0,0.125],[0,0.295],[-0.024,0.465],[0,0.121],[0,0],[-0.048,0.15],[-0.1,0.347],[-0.027,0.124],[0,0.121],[-0.023,0.151],[0,0.219],[0,0],[0,0.393],[0,0],[0,0.147],[0,0],[-0.122,0.029],[-0.065,-0.007],[-0.063,0.015],[-0.169,0.072],[-0.122,0.076],[-0.172,0.498],[-0.048,0.176],[-0.173,0.248],[-0.147,0.074],[-0.071,-0.016],[-0.059,0.026],[-0.121,0.025],[-0.343,0.246],[-0.097,0.095],[-0.143,0.296],[-0.317,0.639],[-0.047,0.121],[-0.1,0.119],[-0.076,0.171],[-0.053,0.125],[0,0],[-0.052,0.396],[0,0.22],[0.025,0.197],[0.074,0.174],[0.146,0.369],[0.027,0.293],[0,0.295],[0.127,0.296],[0.148,0.101],[0.347,0],[0,0],[0.148,0.027],[0.145,0.028],[0.08,-0.007],[0.086,0.014],[0.123,0.026],[0.269,0.169],[0.099,0.118],[0.049,0.123],[0.099,0.296],[0.024,0.121],[0.122,0.121],[0.17,0.125],[0.175,0.098],[0.123,0.024],[0.219,0],[0.393,0],[0,0],[0.172,0.078],[0.346,0.168],[0.148,0.047],[0.322,0],[0.37,-0.05],[0.047,-0.468],[0.221,0.024],[0.123,0],[0.122,0.027],[0.148,0.078],[0.123,0.075],[0.073,0.122],[-0.149,0.07],[-0.123,0.072],[-0.146,0.074],[0,0],[0.068,-0.006],[0.058,0.009],[0.148,0.024],[0.174,0.048],[0.148,0.098],[0.173,0.123],[0.15,0.1],[0.123,0.047],[0.223,0.017],[0.196,0],[0.121,0],[0,0],[0.145,0.048],[0.223,0.101],[0.345,0],[0.318,-0.048],[0,0],[0,0],[0,0],[-0.075,0.12],[-0.149,0.123],[-0.149,0.128],[-0.047,0.096],[-0.024,0.292],[0.27,0.102],[0.169,0.053],[0.271,0.074],[0.195,0],[0,0],[0,0],[0.197,-0.025],[0.025,-0.295],[0.025,-0.121],[0.417,0],[0.274,0.028],[0,0],[0,0.145],[0,0.148],[-0.392,0.195],[-0.097,0.073],[-0.048,0.148],[-0.021,0.293],[-0.026,0.294],[0,0.222],[0.026,0.42],[0.222,0],[0.147,0],[0.124,0],[0,0],[0.027,0.146],[0.048,0.171],[0.048,0.123],[0.072,0.197],[0.051,0.1],[0.148,0.098],[0.075,-0.017],[0.057,0.025],[0.297,0.145],[0.072,0.145],[0.221,0.193],[0.121,0.075],[0.148,0.077],[0.173,0.075],[0.174,-0.025],[0.138,0.013],[0.174,0.073],[0.173,0.074],[0,0],[0.244,0],[0.169,-0.075],[0.149,-0.1],[0.393,0],[0,0],[0.147,0],[0.271,0.073],[0.296,0.124],[0.122,0.052],[0.272,0.145],[0.294,0.248],[0.098,0.15],[0.025,0.194],[0,0.465],[0.174,0.023],[0.069,-0.007],[0.059,0.011],[0.173,0.07],[0.124,0.071],[0.146,0.145],[0.096,0.119],[0.096,0.074],[0.075,-0.016],[0.057,0.025],[0.147,0.125],[0.049,0.172],[0.023,0.122],[0,0.347],[0,0],[0.27,-0.075],[0.297,-0.025],[0.147,0],[0.05,0.174],[0.024,0.124],[0.027,0.393],[0,0],[-0.17,0.076],[0.22,0.094],[0.176,0.048],[0.148,0.053],[0.175,0.047],[0,0],[0,0],[0.147,0.051],[0.294,0],[0.145,-0.194],[0.051,-0.122],[0.048,-0.121],[0.071,-0.122],[0.344,0],[0.174,0.096],[0.097,0.127],[0.099,0.149],[0.171,0.075],[0.319,0.075],[0.196,0],[0,0],[0.145,0.021],[0.397,0.075],[0,0],[0.295,0.023],[0.148,0.053],[0.147,0.1],[0.171,0.077],[0.122,0.027],[0.54,0.102],[0.024,-0.293],[0.099,-0.122],[0.17,-0.024],[0.129,0.012],[0.135,-0.024],[0.172,-0.073],[0.147,-0.123],[0,-0.218],[0,-0.149],[-0.027,-0.121],[0,-0.122],[-0.025,-0.149],[0,-0.219],[0.025,-0.222],[0.048,-0.175],[0.123,0.124],[0.098,0.122],[0.148,0.391],[0,0.344],[-0.022,0.12],[-0.051,0.175],[-0.025,0.125],[0,0.146],[0,0.248],[-0.321,0.294],[-0.124,0.102],[-0.121,0.098],[-0.122,0.073],[0,0]],\"o\":[[-0.169,0],[-0.122,0.029],[-0.145,0.072],[-0.075,0.099],[-0.075,0.318],[0,0],[-0.37,0],[-0.148,0.099],[-0.171,0.075],[-0.17,0.05],[-0.32,0.074],[-0.124,0],[-0.291,0.022],[0,0],[-0.271,0.271],[-0.123,0.029],[-0.273,0.023],[0,0.222],[-0.048,0.151],[-0.047,0.148],[-0.051,0.124],[-0.051,0.173],[-0.244,0.266],[-0.097,0.124],[-0.05,0.123],[-0.077,0.17],[-0.049,0.117],[0,0],[0.064,0.014],[0.064,-0.007],[0.173,0.048],[0,0.612],[0,0.123],[0.096,0.315],[0.048,0.123],[0.05,0.195],[0,0.22],[-0.07,0.177],[-0.171,0.17],[-0.026,0.124],[-0.026,0.293],[0,0.343],[-0.052,0.196],[-0.147,0.122],[-0.062,0.014],[-0.067,-0.006],[-0.275,0.051],[0,0],[0.076,0.171],[0.025,0.12],[-0.467,0.222],[0,0],[-0.123,0.021],[-0.297,0.072],[-0.149,0.123],[-0.322,0.493],[0,0],[0.05,0.472],[-0.02,0.293],[0,0.148],[0,0.172],[0,0.173],[0.049,0.318],[0.149,-0.074],[0.219,-0.075],[0.341,0],[0,0],[-0.097,0.124],[-0.271,0.168],[-0.124,0.023],[-0.198,0.023],[0,0.295],[-0.02,0.123],[-0.121,0.095],[-0.147,0.126],[-0.148,0.098],[-0.072,0.176],[0,0.22],[0.05,0.169],[0.075,0.166],[0,0],[0.021,0.341],[0,0.147],[0.073,0.166],[0.121,0.096],[0.128,0.026],[0.122,0],[0.147,0.026],[0.148,0.052],[0.173,0.096],[0.073,0.124],[0.075,0.172],[0.072,0.124],[0.124,0.147],[0.073,0.117],[0.073,0.269],[0,0.148],[0.022,0.121],[0.071,0.145],[0.099,0.12],[0.1,0.123],[0.121,0.244],[0,0],[0.074,0.145],[0.074,0.123],[0.099,0.147],[0.291,0.368],[0.026,0.491],[0.046,0.148],[0.074,0.123],[0.098,0.098],[0.124,0.096],[0.146,0.099],[0.124,0.078],[0.099,0.12],[0.025,0.117],[0.025,0.396],[0,0.196],[0.025,0.125],[0.074,0.17],[0.174,0.271],[0.073,0.147],[0.096,0.125],[0.124,0.101],[0.174,0.098],[0.149,0.07],[0.122,0.024],[0.136,0.025],[0.129,-0.013],[0.17,0.022],[0.174,0.097],[0.124,0.125],[0.124,0.07],[0.148,0.097],[0.32,0.198],[0.269,0.126],[0.147,0.049],[0.367,0.174],[0.099,0.127],[0.122,0.172],[0.246,0.293],[0.147,0.128],[0.122,0.024],[0.271,0.024],[0,0],[0,0.318],[0,0.222],[0,0.074],[0,0],[0.025,0.371],[0,0],[0,0.173],[-0.025,0.122],[-0.025,0.149],[-0.027,0.269],[0,0.046],[0,0],[0,0.174],[0.025,0.198],[0,0],[0,0],[-0.025,0.196],[-0.049,0.345],[0.074,0.174],[0,0],[0,0],[-0.025,0.148],[-0.027,0.125],[-0.027,0.12],[-0.025,0.144],[-0.048,0.174],[-0.173,0.367],[-0.049,0.171],[-0.025,0.294],[0,0.104],[0,0.393],[0,0.146],[0,0.174],[0,0.194],[0,0.15],[-0.025,0.196],[-0.049,0.124],[-0.073,0.174],[-0.122,0.194],[-0.295,0.368],[0,0],[0,0.15],[0,0.126],[0.051,0.145],[0.07,0.171],[0.294,0.539],[0,0.611],[-0.023,0.127],[-0.051,0.465],[-0.051,0.32],[-0.049,0.122],[-0.073,0.198],[-0.05,0.17],[-0.05,0.148],[-0.05,0.171],[-0.124,0.172],[-0.049,0.097],[0,0],[0,0.198],[0,0.244],[0,0.097],[0,0.147],[-0.05,0.171],[-0.075,0.144],[-0.099,0.17],[-0.072,0.171],[-0.144,0.147],[-0.125,0.12],[-0.073,0.148],[-0.025,0.125],[0,0.222],[0.024,0.127],[0.098,0.294],[0.024,0.123],[0,0.145],[0.024,0.32],[0,0.64],[-0.074,0.147],[-0.095,0.149],[-0.122,0.247],[0,0.146],[0.048,0.173],[0,0],[0.15,0.296],[0,0.143],[-0.297,0.023],[-0.174,0.099],[-0.075,0.095],[-0.05,0.122],[-0.075,0.192],[-0.02,0.121],[-0.047,0.196],[0,0.249],[0.098,0.126],[0.146,0.096],[0,0],[0,0],[0,0],[0,0],[-0.126,0.125],[-0.126,0.097],[-0.147,0.119],[0,0],[-0.096,0.125],[-0.122,0.148],[-0.077,0.121],[-0.027,0.123],[0,0.492],[0,0.469],[0,0.169],[0,0],[-0.146,-0.098],[-0.045,-0.031],[-0.085,0.001],[-0.074,-0.123],[0,0],[0,-0.296],[-0.05,0.025],[-0.196,0.05],[0,0],[0.121,0.077],[0.121,0.12],[0.099,0.124],[0.076,0.126],[0.026,0.124],[0,0.122],[0.028,0.296],[0,0],[-0.12,-0.024],[-0.126,-0.072],[-0.076,-0.102],[-0.05,-0.122],[-0.125,-0.149],[-0.169,0],[0,0],[-0.274,0.049],[-0.124,0.076],[-0.097,0.153],[0,0.489],[0.121,0.022],[0.146,0],[0.059,0.011],[0.072,-0.006],[0.171,0.047],[-0.049,0.123],[-0.099,0.176],[0,0.177],[0,0.151],[0.415,0],[0.294,0.122],[-0.046,0.146],[-0.029,0.147],[-0.297,0],[-0.148,0],[-0.293,0.066],[-0.118,0.011],[-0.144,-0.012],[-0.173,0.023],[-0.173,0.099],[0,0],[0,0.168],[0,0.117],[0.026,0.125],[0.026,0.147],[0.123,0.171],[0,0],[-0.025,0.171],[-0.046,0.147],[0,0.347],[0.197,0.272],[0,0.171],[0,0.15],[0.072,0.121],[0.125,0.1],[0.098,0.073],[0,0],[0,0],[0.146,-0.024],[0,0],[0.147,0],[-0.072,0.173],[-0.246,0.198],[0.245,0.269],[0.066,0.025],[0.062,-0.009],[0.06,0.011],[0.071,-0.006],[0.102,0.022],[0,0],[0.099,0.125],[0.097,0.146],[0.072,0.172],[0.02,0.124],[0.072,0.169],[0.37,0.269],[0.148,0.102],[0.074,0.097],[0.052,0.125],[0.073,0.146],[0.17,0.122],[0.025,0.119],[0.023,0.196],[0.294,0.018],[0.148,0],[0.12,0.042],[0.099,0.075],[0.194,0.297],[0.148,0.052],[0.116,-0.017],[0.146,0.023],[0.127,0.024],[0.12,0.02],[0.168,0.049],[0.157,0.043],[0.108,-0.012],[0,0],[0.171,0.02],[0.174,0.049],[0,0],[0.173,0],[0.198,0],[0.097,-0.071],[0.126,-0.145],[0.171,-0.098],[0.294,0],[-0.047,-0.297],[-0.081,-0.05],[-0.075,0.016],[-0.296,-0.123],[-0.121,-0.027],[-0.122,0],[-0.342,-0.026],[-0.149,0],[0,0],[-0.295,0],[-0.149,0],[-0.148,-0.121],[-0.098,-0.151],[-0.077,-0.273],[0,-0.145],[-0.027,-0.121],[-0.075,-0.174],[-0.072,-0.149],[-0.023,-0.126],[0,0],[-0.023,-0.145],[-0.024,-0.268],[0,-0.127],[-0.02,-0.149],[-0.126,-0.22],[0,-0.244],[0,0],[0,-0.17],[0,0],[0,-0.368],[0,0],[0,-0.248],[0,-0.148],[0,-0.297],[0.099,-0.173],[0.099,-0.073],[0.27,-0.073],[0.196,-0.048],[0.343,-0.566],[0.026,-0.128],[0.074,-0.149],[0.099,-0.095],[0.146,-0.071],[0.061,-0.022],[0.068,0.012],[0.15,-0.073],[0,0],[-0.223,-0.023],[-0.345,0],[-0.146,-0.046],[-0.101,-0.076],[-0.121,-0.17],[-0.122,-0.048],[-0.172,-0.072],[-0.176,-0.097],[-0.099,-0.145],[-0.072,-0.266],[0,0],[0,-0.177],[0.099,-0.197],[0.37,-0.366],[0,0],[0,0],[0,-0.149],[0.096,-0.151],[0.173,-0.271],[0.05,-0.144],[0.025,-0.124],[0,-0.148],[0,-0.12],[0.05,-0.193],[0.392,0],[0.248,0],[0.172,-0.097],[0.025,-0.126],[0,0],[0,-0.169],[-0.073,0.012],[-0.06,-0.007],[-0.174,0.025],[-0.195,0.097],[-0.071,0.031],[-0.057,-0.009],[-0.099,-0.143],[-0.048,-0.272],[-0.022,-0.29],[0,-0.145],[0,0],[0,0],[0.348,0],[0.346,0.172],[0,0],[0,-0.173],[0,-0.197],[0,0],[0,-0.146],[0.051,-0.145],[0.072,-0.146],[0.051,-0.126],[0,-0.152],[-0.05,-0.296],[-0.028,-0.122],[0,0],[0,0],[0.173,0],[0,0],[0.292,0],[0.32,-0.078],[0,0],[0.343,0],[0.199,0],[0.073,-0.101],[0.049,-0.126],[0.072,-0.171],[0.174,-0.295],[0.12,-0.148],[0.293,-0.172],[0.151,-0.098],[0.098,-0.144],[0,0],[0.073,-0.142],[0,0],[0,0],[-0.147,0],[0,0],[0,-0.147],[-0.025,-0.123],[-0.049,-0.175],[-0.147,-0.126],[-0.324,-0.201],[-0.12,-0.099],[-0.097,-0.145],[-0.05,-0.098],[0,0],[0.342,0],[0.368,0.121],[0.173,0.073],[0.063,0.016],[0.064,-0.006],[0.44,0.099],[0.147,0],[0.194,-0.048],[0.271,-0.044],[0.293,0],[0.171,-0.044],[0.123,-0.047],[0.151,-0.125],[0.195,-0.269],[0.074,-0.148],[0.099,-0.173],[0.121,-0.067],[0.197,-0.095],[0.097,-0.151],[0.027,-0.122],[0.05,-0.272],[0.222,-0.293],[0.069,-0.17],[0.073,-0.444],[0,-0.151],[0,-0.122],[0.051,-0.147],[0.173,-0.273],[0.148,-0.047],[0.169,0],[-0.05,0.149],[-0.027,0.119],[-0.022,0.148],[0,0.197],[0.293,-0.144],[0.1,-0.095],[0.172,-0.273],[0.072,-0.144],[0.098,-0.173],[0.073,-0.128],[0.075,-0.177],[0.051,-0.122],[0.05,-0.149],[0.024,-0.124],[0.048,-0.149],[0.101,-0.147],[0.1,-0.075],[0.119,-0.052],[0.169,-0.048],[0.172,-0.101],[0.073,-0.148],[0.024,-0.294],[0,-0.294],[-0.05,-0.296],[-0.024,-0.123],[0,-0.195],[-0.023,-0.345],[0,-0.345],[0.027,-0.155],[0.073,-0.172],[0.149,-0.145],[0.269,-0.194],[0.124,-0.055],[0.147,-0.078],[0.147,-0.173],[0.098,-0.145],[0.098,-0.172],[0.123,-0.148],[0.146,-0.1],[0,0],[0.368,0],[0.147,-0.098],[0.099,-0.123],[0.121,-0.15],[0,0],[0.025,-0.224],[0.028,-0.125],[0.049,-0.197],[0.098,-0.047],[0.123,-0.096],[0.249,-0.297],[0.176,-0.267],[0.051,-0.125],[0.1,-0.17],[0.221,-0.172],[0.198,-0.169],[0.026,-0.539],[0.048,-0.15],[0.072,-0.118],[0.072,-0.097],[0.096,-0.125],[0.075,-0.149],[0.026,-0.126],[0.026,-0.269],[0,-0.466],[0,-0.147],[0,0],[0.026,-0.145],[0.097,-0.34],[0.022,-0.121],[0.024,-0.121],[0,-0.126],[0.027,-0.224],[0,0],[-0.023,-0.399],[0,0],[0,-0.149],[0,0],[0.145,-0.028],[0.059,-0.011],[0.07,0.006],[0.173,-0.047],[0.15,-0.073],[0.42,-0.295],[0.049,-0.172],[0.076,-0.291],[0.099,-0.146],[0.063,-0.037],[0.063,0.014],[0.124,-0.051],[0.394,-0.147],[0.097,-0.049],[0.223,-0.226],[0.324,-0.633],[0.052,-0.124],[0.077,-0.176],[0.098,-0.124],[0.045,-0.124],[0,0],[0.174,-0.34],[0.025,-0.22],[0,-0.223],[-0.022,-0.171],[-0.169,-0.342],[-0.052,-0.271],[-0.022,-0.295],[0,-0.346],[-0.071,-0.173],[-0.27,-0.171],[0,0],[-0.173,0],[-0.148,-0.023],[-0.087,-0.012],[-0.081,0.007],[-0.122,-0.026],[-0.322,-0.098],[-0.121,-0.078],[-0.07,-0.099],[-0.122,-0.267],[-0.025,-0.127],[-0.048,-0.174],[-0.147,-0.148],[-0.171,-0.122],[-0.121,-0.074],[-0.197,-0.075],[-0.397,0],[0,0],[-0.196,0],[-0.342,-0.147],[-0.147,-0.072],[-0.294,-0.098],[-0.367,0],[0,0.464],[-0.224,0],[-0.15,0],[-0.126,0],[-0.149,-0.024],[-0.149,-0.073],[-0.099,-0.075],[0.146,-0.123],[0.122,-0.075],[0.148,-0.073],[0,0],[-0.078,-0.013],[-0.061,0.005],[-0.149,-0.026],[-0.172,-0.051],[-0.171,-0.048],[-0.174,-0.1],[-0.145,-0.1],[-0.096,-0.048],[-0.196,-0.1],[-0.171,-0.028],[-0.147,0],[0,0],[-0.148,-0.03],[-0.221,-0.074],[-0.294,-0.118],[-0.321,0],[0,0],[0,0],[0,0],[0.05,-0.123],[0.097,-0.179],[0.122,-0.1],[0.099,-0.068],[0.15,-0.221],[-0.293,-0.025],[-0.171,-0.049],[-0.273,-0.099],[-0.169,-0.047],[0,0],[0,0],[-0.197,0],[0,0.294],[0,0.146],[-0.148,0.391],[-0.269,0],[0,0],[0,-0.145],[0,-0.148],[0.443,0],[0.123,-0.046],[0.125,-0.097],[0.1,-0.27],[0.025,-0.296],[0.026,-0.221],[0,-0.414],[-0.22,0],[-0.145,0],[-0.125,0],[0,0],[0,-0.176],[-0.022,-0.171],[-0.021,-0.122],[-0.074,-0.196],[-0.049,-0.123],[-0.097,-0.147],[-0.052,-0.037],[-0.067,0.014],[-0.297,-0.121],[-0.12,-0.098],[-0.146,-0.272],[-0.099,-0.076],[-0.124,-0.074],[-0.146,-0.072],[-0.177,-0.072],[-0.115,0.017],[-0.197,0],[-0.194,-0.097],[0,0],[-0.221,-0.099],[-0.219,0],[-0.172,0.075],[-0.316,0.218],[0,0],[-0.151,0],[-0.294,-0.027],[-0.316,-0.097],[-0.121,-0.05],[-0.294,-0.116],[-0.319,-0.198],[-0.15,-0.124],[-0.095,-0.169],[-0.075,-0.445],[-0.196,-0.021],[-0.062,-0.013],[-0.066,0.006],[-0.174,-0.052],[-0.147,-0.072],[-0.17,-0.096],[-0.124,-0.124],[-0.075,-0.104],[-0.054,-0.038],[-0.067,0.015],[-0.17,-0.072],[-0.12,-0.095],[-0.05,-0.124],[-0.074,-0.319],[0,0],[-0.266,0.054],[-0.296,0.096],[-0.119,0],[-0.194,0],[-0.048,-0.122],[-0.1,-0.366],[0,0],[0.169,-0.049],[-0.148,-0.197],[-0.176,-0.076],[-0.148,-0.048],[-0.168,-0.049],[0,0],[0,0],[-0.148,-0.051],[-0.27,-0.073],[-0.271,0],[-0.074,0.103],[-0.048,0.12],[-0.05,0.147],[-0.173,0.271],[-0.197,0],[-0.147,-0.074],[-0.097,-0.121],[-0.097,-0.147],[-0.297,-0.146],[-0.174,-0.024],[0,0],[-0.175,0],[-0.37,-0.1],[0,0],[-0.291,0],[-0.174,0],[-0.171,-0.049],[-0.146,-0.095],[-0.124,-0.047],[-0.494,-0.172],[0,0.294],[0,0.197],[-0.1,0.125],[-0.137,0.025],[-0.128,-0.013],[-0.174,0.026],[-0.169,0.077],[-0.148,0.125],[0,0.148],[0,0.147],[0.023,0.122],[0.023,0.15],[0.025,0.194],[0,0.224],[-0.025,0.195],[-0.124,-0.101],[-0.125,-0.124],[-0.27,-0.346],[-0.119,-0.323],[0,-0.15],[0.051,-0.173],[0.026,-0.121],[0.023,-0.123],[0,-0.245],[0,-0.465],[0.12,-0.097],[0.122,-0.095],[0.123,-0.098],[0,0],[0,0]],\"v\":[[-156.459,25.264],[-156.875,25.357],[-157.27,25.459],[-157.659,25.655],[-157.759,26.048],[-157.759,26.936],[-159.993,26.936],[-160.805,27.424],[-161.2,27.719],[-161.693,27.916],[-162.184,28.111],[-163.068,28.305],[-163.463,28.41],[-164.247,28.41],[-164.247,30.668],[-165.036,31.256],[-165.425,31.359],[-166.214,31.359],[-166.214,31.946],[-166.412,32.339],[-166.605,32.733],[-166.605,33.127],[-167.002,33.426],[-167.788,34.013],[-168.18,34.306],[-168.18,34.7],[-168.574,35.094],[-168.6,35.463],[-168.6,35.856],[-168.396,35.858],[-168.208,35.856],[-167.716,35.956],[-167.716,37.526],[-167.617,37.921],[-167.224,38.708],[-167.129,39.102],[-167.028,39.69],[-167.129,40.278],[-167.521,40.577],[-168.009,40.97],[-168.009,41.359],[-167.914,42.149],[-168.009,43.032],[-168.404,43.426],[-168.7,43.818],[-168.898,43.819],[-169.09,43.818],[-169.878,43.919],[-169.978,44.508],[-169.683,44.904],[-169.683,45.294],[-170.863,45.978],[-170.959,46.772],[-171.351,46.868],[-172.14,47.163],[-172.434,47.556],[-172.73,49.124],[-174.403,49.124],[-174.306,50.309],[-174.403,51.095],[-174.5,51.487],[-174.403,51.904],[-174.5,52.373],[-174.11,53.157],[-173.713,52.964],[-173.097,52.768],[-172.239,52.862],[-172.239,53.647],[-172.434,54.046],[-173.221,54.339],[-173.614,54.339],[-174.11,54.436],[-174.11,55.224],[-174.205,55.618],[-174.599,55.811],[-174.99,56.107],[-175.385,56.401],[-175.482,56.992],[-175.385,57.587],[-175.09,57.98],[-174.793,58.372],[-174.793,58.765],[-174.793,59.648],[-174.793,60.043],[-174.5,60.433],[-174.11,60.63],[-173.713,60.63],[-173.318,60.63],[-172.926,60.825],[-172.534,61.025],[-172.14,61.417],[-171.944,61.811],[-171.648,62.3],[-171.453,62.693],[-171.058,62.992],[-170.863,63.385],[-170.863,64.169],[-170.764,64.566],[-170.665,64.956],[-170.274,65.252],[-169.978,65.645],[-169.584,65.94],[-169.485,66.725],[-169.485,67.612],[-169.191,68.104],[-168.995,68.497],[-168.6,68.79],[-168.11,69.97],[-168.009,71.249],[-167.815,71.642],[-167.421,71.839],[-167.224,72.231],[-166.832,72.426],[-166.439,72.72],[-166.045,72.92],[-165.848,73.316],[-165.848,73.705],[-165.848,74.687],[-165.75,75.18],[-165.75,75.575],[-165.358,75.868],[-164.964,76.654],[-164.764,77.05],[-164.374,77.342],[-163.982,77.54],[-163.49,77.838],[-163.095,78.132],[-162.702,78.229],[-162.309,78.229],[-161.915,78.229],[-161.522,78.524],[-161.131,78.916],[-160.836,79.312],[-160.439,79.508],[-160.049,79.799],[-159.262,80.388],[-158.475,80.687],[-158.081,80.883],[-157.197,81.469],[-156.999,81.865],[-156.608,82.261],[-155.918,83.043],[-155.624,83.438],[-155.232,83.438],[-154.47,83.438],[-154.47,87.545],[-154.641,88.354],[-154.542,88.941],[-154.641,89.139],[-154.641,89.53],[-154.445,90.491],[-154.445,90.712],[-154.641,91.108],[-154.641,91.499],[-154.835,91.895],[-154.74,92.558],[-154.835,92.677],[-154.835,93.171],[-154.641,93.564],[-154.641,94.129],[-154.641,94.351],[-154.641,94.742],[-154.936,95.234],[-154.936,96.119],[-154.641,96.614],[-154.641,97.004],[-154.641,97.397],[-154.835,97.792],[-154.835,98.189],[-154.936,98.58],[-155.133,98.972],[-155.329,99.463],[-155.819,100.446],[-156.015,100.936],[-156.015,101.695],[-156.114,101.921],[-156.015,102.904],[-155.918,103.295],[-156.015,103.766],[-155.918,104.278],[-156.015,104.672],[-156.313,105.166],[-156.409,105.558],[-156.707,105.953],[-157.098,106.443],[-157.687,107.573],[-157.687,107.817],[-157.592,108.21],[-157.592,108.606],[-157.393,109],[-157.098,109.394],[-156.608,110.968],[-156.903,112.533],[-156.999,112.932],[-156.999,114.109],[-157.294,114.998],[-157.393,115.389],[-157.786,115.782],[-157.786,116.274],[-157.984,116.667],[-158.278,117.058],[-158.671,117.454],[-158.966,117.749],[-158.966,118.533],[-158.867,119.027],[-158.966,119.642],[-158.867,119.91],[-158.867,120.306],[-159.164,120.698],[-159.361,121.092],[-159.755,121.485],[-159.853,121.975],[-160.439,122.466],[-160.836,122.761],[-161.03,123.152],[-161.131,123.547],[-160.736,123.938],[-160.736,124.334],[-160.439,125.123],[-160.439,125.515],[-160.344,125.908],[-160.344,126.742],[-160.638,128.365],[-160.935,128.758],[-161.326,129.053],[-161.423,129.843],[-161.423,130.234],[-161.131,130.627],[-160.935,131.02],[-160.541,131.834],[-160.638,132.2],[-161.423,132.295],[-161.817,132.594],[-161.915,132.986],[-162.014,133.38],[-162.409,133.775],[-162.409,134.166],[-162.508,134.753],[-162.31,135.341],[-161.915,135.546],[-161.497,135.839],[-160.245,135.839],[-159.95,132.295],[-158.475,132.295],[-158.475,133.473],[-158.768,133.87],[-159.164,134.071],[-159.46,134.459],[-159.46,136.525],[-159.755,136.916],[-160.144,137.213],[-160.245,137.607],[-160.291,137.999],[-160.144,139.276],[-160.144,140.458],[-160.291,140.852],[-160.736,140.555],[-161.03,140.162],[-161.209,140.132],[-161.423,140.065],[-161.423,139.673],[-161.423,139.276],[-161.522,138.49],[-161.522,138.688],[-162.112,138.688],[-162.112,139.865],[-161.718,139.969],[-161.522,140.357],[-161.131,140.652],[-160.935,141.047],[-160.935,141.44],[-160.836,141.835],[-160.836,142.617],[-161.131,142.422],[-161.522,142.326],[-161.915,142.131],[-161.915,141.735],[-162.014,141.342],[-162.409,141.047],[-162.799,141.247],[-162.799,142.422],[-163.587,142.617],[-163.786,143.013],[-164.176,143.31],[-163.291,144.195],[-162.898,144.093],[-162.508,144.195],[-162.32,144.193],[-162.112,144.195],[-161.817,144.586],[-161.915,144.977],[-162.31,145.37],[-162.112,145.763],[-162.112,146.159],[-161.03,146.26],[-160.245,146.649],[-160.439,147.042],[-160.439,147.441],[-161.227,147.441],[-161.622,147.441],[-162.409,147.732],[-162.752,147.727],[-163.192,147.732],[-163.587,148.026],[-163.982,148.422],[-163.982,148.618],[-163.786,149.012],[-163.786,149.403],[-163.786,149.796],[-163.392,149.994],[-163.095,150.584],[-163.095,150.781],[-163.392,151.172],[-163.587,151.564],[-162.996,152.256],[-162.606,153.039],[-162.996,153.236],[-162.898,153.63],[-162.508,153.824],[-162.112,154.023],[-162.112,154.416],[-162.898,154.812],[-162.702,155.301],[-162.31,155.205],[-161.522,155.205],[-161.131,155.301],[-161.227,155.792],[-162.014,156.187],[-161.326,156.878],[-161.115,156.882],[-160.935,156.878],[-160.747,156.876],[-160.541,156.878],[-160.541,157.171],[-160.935,157.464],[-160.638,157.857],[-160.245,158.153],[-160.144,158.644],[-160.245,159.039],[-159.853,159.334],[-158.671,159.821],[-158.278,160.117],[-158.181,160.51],[-158.081,160.908],[-157.687,161.102],[-157.197,161.4],[-157.294,161.791],[-157.197,162.381],[-156.409,162.482],[-156.015,162.482],[-155.624,162.576],[-155.624,162.968],[-154.936,163.66],[-154.506,163.671],[-154.149,163.66],[-153.759,163.854],[-153.362,163.955],[-152.967,164.052],[-152.578,164.348],[-152.136,164.36],[-151.791,164.348],[-151.396,164.348],[-151.006,164.639],[-150.485,164.742],[-147.366,164.742],[-146.974,164.937],[-146.581,164.639],[-146.484,164.245],[-146.087,163.906],[-145.497,163.955],[-144.714,163.906],[-144.909,163.164],[-145.171,163.154],[-145.4,163.164],[-146.188,162.775],[-146.581,162.775],[-146.974,162.677],[-147.858,162.677],[-148.249,162.576],[-148.249,161.691],[-149.038,161.691],[-149.431,161.691],[-149.823,161.4],[-149.921,160.908],[-150.117,160.117],[-150.117,159.724],[-150.117,159.334],[-150.512,159.039],[-150.708,158.644],[-150.708,158.252],[-150.708,157.857],[-150.905,157.464],[-150.905,156.682],[-151.006,156.287],[-151.2,155.891],[-151.669,155.4],[-151.493,154.812],[-151.493,154.416],[-151.691,154.023],[-151.691,152.745],[-151.592,151.812],[-149.627,151.812],[-149.627,151.172],[-149.727,150.781],[-149.627,149.994],[-149.333,149.601],[-148.939,149.502],[-148.152,149.403],[-147.759,149.012],[-147.17,147.441],[-147.071,147.042],[-146.776,146.649],[-146.383,146.453],[-145.991,146.159],[-145.796,146.16],[-145.598,146.159],[-145.4,145.763],[-145.4,144.977],[-145.991,144.878],[-146.875,144.878],[-147.265,144.68],[-147.366,144.29],[-147.759,143.896],[-148.152,143.799],[-148.544,143.503],[-148.939,143.112],[-149.234,142.718],[-149.333,141.93],[-149.333,141.542],[-149.137,141.144],[-148.743,140.752],[-147.538,140.065],[-145.203,140.065],[-145.203,137.879],[-145.103,137.508],[-144.714,137.213],[-144.319,136.424],[-144.122,136.032],[-144.122,135.641],[-144.219,135.245],[-144.122,134.851],[-143.729,134.459],[-142.745,134.658],[-142.155,134.459],[-141.762,134.071],[-141.762,133.676],[-141.762,133.277],[-141.961,132.887],[-142.158,132.888],[-142.352,132.887],[-142.745,133.083],[-143.139,133.473],[-143.365,133.482],[-143.531,133.473],[-144.236,133.229],[-144.236,132.44],[-144.331,131.654],[-144.431,131.286],[-144.431,130.084],[-143.77,130.084],[-142.958,130.375],[-142.146,130.969],[-139.712,130.969],[-139.513,130.572],[-139.811,130.179],[-139.811,129.787],[-139.811,129.394],[-139.613,129.001],[-139.221,128.808],[-139.221,128.415],[-139.221,128.019],[-139.513,127.232],[-139.613,126.863],[-139.613,125.953],[-137.77,125.953],[-137.354,125.854],[-136.564,125.854],[-135.781,125.759],[-134.969,125.465],[-133.051,125.465],[-132.241,125.759],[-131.846,125.465],[-131.749,125.07],[-131.65,124.675],[-131.358,124.284],[-130.865,123.497],[-130.37,123.2],[-129.587,122.709],[-129.29,122.315],[-128.995,121.923],[-128.801,121.527],[-128.602,121.159],[-128.602,119.959],[-128.995,119.959],[-129.389,119.856],[-129.389,119.073],[-129.389,118.678],[-129.486,118.288],[-129.882,117.993],[-130.37,117.697],[-131.161,117.006],[-131.552,116.811],[-131.846,116.418],[-131.846,116.026],[-130.298,116.026],[-129.389,116.222],[-128.602,116.811],[-128.207,117.103],[-128.001,117.106],[-127.814,117.103],[-126.637,117.302],[-126.241,117.302],[-125.852,116.907],[-125.061,116.907],[-124.276,116.907],[-123.885,116.614],[-123.493,116.516],[-123.194,116.122],[-122.802,115.337],[-122.607,114.944],[-122.212,114.547],[-121.819,114.45],[-121.327,114.159],[-121.034,113.765],[-120.935,113.37],[-120.935,112.582],[-120.245,111.797],[-119.951,111.407],[-119.951,110.228],[-119.854,109.83],[-119.854,109.436],[-119.658,109.047],[-118.969,108.453],[-118.574,108.259],[-118.184,108.453],[-118.378,108.848],[-118.478,109.24],[-118.673,109.633],[-118.378,110.025],[-117.591,109.633],[-117.395,109.24],[-117.003,108.453],[-116.806,108.063],[-116.411,107.672],[-116.216,107.279],[-115.921,106.884],[-115.822,106.488],[-115.626,106.097],[-115.626,105.703],[-115.431,105.306],[-115.137,104.916],[-114.74,104.82],[-114.348,104.717],[-113.954,104.427],[-113.561,104.028],[-113.365,103.637],[-113.365,102.851],[-113.365,102.063],[-113.66,101.279],[-113.66,100.885],[-113.759,100.394],[-113.759,99.509],[-113.759,98.627],[-113.561,98.23],[-113.169,97.935],[-112.775,97.542],[-111.988,97.056],[-111.594,96.955],[-111.398,96.559],[-111.005,96.068],[-110.712,95.674],[-110.417,95.183],[-110.021,94.889],[-109.607,94.593],[-107.686,94.593],[-106.876,94.103],[-106.486,93.807],[-106.286,93.414],[-105.892,93.118],[-101.076,93.118],[-100.978,92.531],[-100.978,92.136],[-100.585,91.74],[-100.191,91.643],[-99.995,91.249],[-99.406,90.464],[-98.915,89.679],[-98.915,89.283],[-98.618,88.891],[-97.833,88.695],[-97.635,87.907],[-97.34,86.337],[-97.142,85.94],[-96.947,85.548],[-96.553,85.451],[-96.358,85.058],[-96.163,84.666],[-96.163,84.27],[-96.064,83.485],[-96.064,82.305],[-95.964,81.91],[-95.964,81.517],[-95.766,81.125],[-95.374,80.239],[-95.276,79.846],[-95.178,79.454],[-95.081,79.059],[-95.081,78.47],[-95.081,77.883],[-95.276,76.897],[-95.276,76.013],[-95.374,75.645],[-95.374,73.261],[-94.982,73.16],[-94.792,73.162],[-94.589,73.16],[-94.195,72.868],[-93.803,72.671],[-92.917,71.587],[-92.819,71.096],[-92.522,70.309],[-92.228,69.916],[-92.021,69.912],[-91.835,69.916],[-91.443,69.819],[-90.655,69.032],[-90.263,68.937],[-89.872,68.145],[-88.986,66.477],[-88.887,66.085],[-88.493,65.79],[-88.098,65.495],[-87.999,65.099],[-87.805,64.706],[-87.312,63.822],[-87.312,63.233],[-87.312,62.643],[-87.611,62.249],[-88.098,61.365],[-88.493,60.381],[-88.493,59.596],[-88.594,58.711],[-88.887,58.316],[-89.699,57.924],[-91.615,57.924],[-92.031,57.825],[-92.423,57.629],[-92.669,57.63],[-92.917,57.629],[-93.309,57.53],[-94.098,57.139],[-94.491,56.943],[-94.589,56.544],[-94.883,55.762],[-94.883,55.368],[-95.276,55.073],[-95.766,54.777],[-96.163,54.383],[-96.553,54.285],[-97.142,54.188],[-98.151,54.481],[-100.559,54.481],[-101.076,54.383],[-101.863,53.795],[-102.257,53.599],[-103.068,53.501],[-104.026,53.599],[-104.073,54.777],[-104.615,54.777],[-105.008,54.679],[-105.4,54.679],[-105.796,54.481],[-106.188,54.285],[-106.286,53.892],[-105.991,53.501],[-105.598,53.402],[-105.206,53.107],[-105.4,52.715],[-105.616,52.714],[-105.796,52.715],[-106.188,52.517],[-106.68,52.418],[-107.072,52.123],[-107.566,51.828],[-107.861,51.435],[-108.253,51.34],[-108.845,51.046],[-109.335,51.046],[-109.727,50.949],[-110.12,50.949],[-110.513,50.747],[-111.104,50.449],[-112.013,50.253],[-112.823,50.353],[-112.823,52.221],[-114.445,52.221],[-114.445,51.435],[-114.348,51.046],[-113.954,50.65],[-113.66,50.253],[-113.268,50.157],[-113.169,49.373],[-113.954,49.271],[-114.348,48.975],[-115.137,48.779],[-115.626,48.583],[-116.043,48.583],[-116.411,48.583],[-116.905,48.681],[-116.905,49.471],[-116.905,49.862],[-117.789,50.449],[-118.478,50.353],[-118.478,49.566],[-118.378,49.176],[-118.451,48.779],[-117.297,48.681],[-116.905,48.583],[-116.708,48.191],[-116.708,47.405],[-116.608,46.619],[-116.51,46.052],[-116.608,44.994],[-117.201,45.047],[-117.591,44.946],[-117.888,44.994],[-117.888,42.859],[-118.085,42.489],[-118.184,41.997],[-118.281,41.604],[-118.673,41.211],[-118.673,40.818],[-118.969,40.423],[-119.168,40.419],[-119.361,40.423],[-120.501,39.91],[-120.892,39.713],[-121.188,38.928],[-121.581,38.829],[-121.977,38.631],[-122.27,38.235],[-122.779,38.214],[-123.154,38.235],[-123.647,38.042],[-124.138,37.749],[-124.531,37.552],[-125.122,37.256],[-125.708,37.356],[-126.007,37.749],[-127.036,37.843],[-127.676,37.843],[-128.069,37.749],[-128.857,37.649],[-129.645,37.256],[-130.036,37.154],[-130.823,36.668],[-131.706,36.175],[-132.003,35.778],[-132.297,35.292],[-132.297,34.109],[-132.789,34.013],[-132.99,34.013],[-133.181,34.013],[-133.576,33.718],[-133.969,33.522],[-134.359,33.127],[-134.753,32.934],[-134.753,32.537],[-134.954,32.532],[-135.148,32.537],[-135.639,32.241],[-136.031,31.946],[-136.129,31.554],[-136.129,30.668],[-136.526,30.668],[-137.31,30.867],[-138.1,31.16],[-138.492,31.256],[-138.982,31.061],[-138.982,30.668],[-139.082,29.687],[-138.587,29.586],[-138.197,29.294],[-138.587,28.804],[-139.082,28.704],[-139.475,28.506],[-139.966,28.41],[-140.85,29.097],[-141.049,29.097],[-141.44,28.898],[-142.177,28.704],[-142.816,28.898],[-142.917,29.294],[-143.012,29.687],[-143.21,30.08],[-143.898,30.668],[-144.389,30.572],[-144.585,30.175],[-144.88,29.782],[-145.176,29.39],[-146.06,29.097],[-146.576,29.001],[-148.589,29.001],[-149.008,28.804],[-149.995,28.605],[-149.995,27.424],[-150.778,27.424],[-151.173,27.228],[-151.665,27.031],[-151.958,26.636],[-152.351,26.538],[-153.727,26.244],[-153.727,27.031],[-153.925,27.523],[-154.219,27.916],[-154.615,27.917],[-155.006,27.916],[-155.401,28.211],[-155.792,28.506],[-156.186,28.898],[-156.087,29.294],[-155.988,29.687],[-155.988,30.08],[-155.792,30.474],[-155.792,31.061],[-155.792,31.653],[-155.988,32.146],[-156.382,31.946],[-156.579,31.554],[-157.171,30.572],[-157.367,29.687],[-157.367,29.294],[-157.071,28.898],[-156.972,28.506],[-156.875,28.111],[-157.171,27.523],[-156.481,26.538],[-156.087,26.244],[-155.792,25.852],[-155.401,25.655],[-155.596,25.264]],\"c\":true},\"ix\":2},\"nm\":\"Path 95\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":95,\"ty\":\"sh\",\"ix\":96,\"ks\":{\"a\":0,\"k\":{\"i\":[[0.078,-0.171],[0,0],[0.075,-0.1],[0.318,-0.079],[0.147,0],[0.168,-0.073],[0.121,-0.17],[0.1,-0.069],[0.295,0],[0.12,0.023],[0.147,0.096],[0.273,-0.096],[0.101,-0.071],[0.101,-0.076],[0.146,-0.051],[0.122,0],[0.121,-0.024],[0.117,-0.074],[0.125,-0.147],[0,-0.172],[0,0],[0,0],[-0.023,0.172],[0,0],[0,0],[-0.045,0.098],[-0.123,0.072],[-0.171,0.051],[-0.342,0],[-0.468,-0.025],[0,0],[-0.096,-0.272],[-0.097,-0.097],[-0.15,-0.078],[-0.072,0.009],[-0.056,-0.013],[-0.176,-0.073],[-0.194,-0.075],[-0.079,0.02],[-0.057,-0.07],[-0.096,-0.126],[-0.096,-0.099],[-0.078,0.022],[-0.055,-0.022],[-0.168,-0.069],[0,0],[0,0],[0.077,0.12],[0.048,0.144],[0.024,0.12],[0.05,0.273],[-0.198,0],[-0.174,-0.022],[-0.126,-0.022],[-0.151,0],[0,0],[0,0],[0,0],[0.047,0.149],[0.069,0.125],[0.321,0]],\"o\":[[0,0],[-0.054,0.124],[-0.193,0.247],[-0.121,0.02],[-0.194,0.019],[-0.177,0.072],[-0.049,0.096],[-0.219,0.201],[-0.146,0],[-0.174,-0.025],[-0.296,0.026],[-0.122,0.051],[-0.095,0.073],[-0.123,0.098],[-0.124,0.048],[-0.122,0],[-0.147,0.048],[-0.152,0.098],[-0.096,0.125],[0,0],[0,0],[0.07,-0.175],[0,0],[0,0],[0,-0.124],[0.051,-0.096],[0.148,-0.077],[0.319,-0.101],[0.467,0],[0,0],[0,0.293],[0.051,0.148],[0.097,0.098],[0.065,0.025],[0.062,-0.009],[0.174,0.046],[0.195,0.102],[0.073,0.021],[0.104,-0.026],[0.1,0.121],[0.077,0.096],[0.055,0.054],[0.064,-0.017],[0.153,0.072],[0,0],[0,0],[0,-0.171],[-0.073,-0.126],[-0.05,-0.123],[-0.072,-0.276],[0.17,-0.046],[0.194,0],[0.123,0.024],[0.12,0.027],[0,0],[0,0],[0,0],[0,-0.168],[-0.05,-0.143],[-0.176,-0.243],[-0.219,0]],\"v\":[[214.121,30.842],[213.926,31.235],[213.822,31.631],[213.04,32.025],[212.646,31.927],[212.257,32.221],[211.86,32.611],[211.759,33.003],[210.975,33.204],[210.582,33.204],[210.483,32.611],[209.696,32.707],[209.303,32.809],[209.303,33.204],[208.91,33.399],[208.517,33.399],[208.124,33.399],[207.733,33.596],[207.434,33.987],[207.236,34.356],[207.236,36.348],[207.634,36.645],[207.926,36.251],[207.926,35.856],[207.926,35.463],[207.926,35.069],[208.321,34.973],[208.714,34.678],[209.574,34.577],[210.777,34.678],[210.777,35.463],[210.777,36.251],[210.975,36.645],[211.368,36.843],[211.579,36.848],[211.759,36.843],[212.157,37.134],[212.646,37.431],[212.879,37.413],[213.137,37.431],[213.43,37.825],[213.43,38.217],[213.639,38.229],[213.822,38.217],[214.217,38.507],[214.61,38.412],[214.61,37.649],[214.512,37.236],[214.121,37.038],[214.121,36.645],[213.926,35.856],[214.319,35.56],[214.811,35.756],[215.204,35.856],[215.598,35.856],[215.887,35.463],[215.499,34.678],[215.499,31.752],[215.4,31.331],[215.204,30.939],[214.512,30.448]],\"c\":true},\"ix\":2},\"nm\":\"Path 96\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":96,\"ty\":\"sh\",\"ix\":97,\"ks\":{\"a\":0,\"k\":{\"i\":[[0.049,-0.171],[0.026,-0.119],[0,-0.168],[0,-0.148],[0,-0.172],[0,-0.176],[0.024,-0.147],[0.049,-0.172],[0,-0.396],[-0.222,-0.517],[-0.343,-0.175],[-0.173,-0.052],[-0.322,0],[-0.439,0.028],[0,0.297],[0,0.169],[0,0.172],[0.024,0.295],[0,0],[0,0],[0.07,0.146],[0.097,0.148],[0.098,0.127],[0.1,0.124],[0.122,0.144],[0.028,0.169],[0.027,0.345],[0,0]],\"o\":[[-0.027,0.125],[-0.027,0.149],[0,0.148],[0,0.172],[0,0.171],[0,0.17],[-0.027,0.169],[-0.122,0.369],[0,0.566],[0.148,0.345],[0.173,0.072],[0.294,0.102],[0.442,0],[0,-0.291],[0,-0.173],[0,-0.173],[-0.023,-0.296],[0,0],[0,0],[-0.03,-0.17],[-0.076,-0.152],[-0.075,-0.123],[-0.101,-0.146],[-0.101,-0.122],[-0.12,-0.147],[-0.071,-0.318],[0,0],[-0.124,0.15]],\"v\":[[128.296,30.939],[128.197,31.331],[128.296,31.752],[128.197,32.121],[128.394,32.514],[128.296,32.934],[128.394,33.399],[128.098,33.792],[128.001,34.825],[128.197,36.251],[128.983,36.843],[129.376,37.134],[130.188,37.236],[131.293,37.134],[131.342,36.348],[131.293,35.883],[131.342,35.463],[131.149,34.678],[131.149,34.281],[131.149,33.888],[130.855,33.5],[130.558,33.104],[130.361,32.707],[129.967,32.415],[129.671,32.025],[129.376,31.631],[129.279,30.744],[128.691,30.644]],\"c\":true},\"ix\":2},\"nm\":\"Path 97\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":97,\"ty\":\"sh\",\"ix\":98,\"ks\":{\"a\":0,\"k\":{\"i\":[[0.074,-0.122],[0.147,-0.125],[0.174,-0.076],[0.272,-0.096],[0.143,-0.145],[0.097,-0.172],[0.073,-0.174],[0.051,-0.125],[0.072,-0.147],[0.121,-0.147],[0.102,-0.12],[0.169,-0.07],[0.147,-0.05],[0.442,-0.151],[0.145,-0.121],[0.124,-0.147],[0.096,-0.17],[0.097,-0.083],[0.125,-0.099],[0.147,-0.097],[0.119,-0.119],[0.15,-0.121],[0.175,-0.026],[0.126,0],[0.295,0],[0,0],[0.267,-0.022],[0.171,0],[0.221,0],[0.246,0.024],[0.219,0.295],[0,0],[0,0],[0.147,-0.024],[0.292,-0.515],[0.072,-0.175],[0.024,-0.124],[0,-0.345],[-0.074,-0.316],[-0.048,-0.099],[-0.146,-0.098],[-0.271,-0.199],[-0.099,-0.146],[-0.07,-0.149],[0,-0.22],[0,-0.071],[0,0],[0,-0.25],[-0.05,-0.196],[-0.048,-0.118],[-0.144,-0.126],[-0.146,-0.051],[-0.294,0],[-0.321,-0.073],[-0.099,-0.074],[-0.073,-0.098],[-0.32,-0.098],[-0.292,0],[-0.298,0.025],[-0.418,0],[-0.169,-0.098],[-0.176,-0.075],[-0.194,0],[-0.242,0],[-0.296,-0.296],[-0.199,-0.047],[-0.125,-0.024],[-0.248,0],[0,0],[-0.073,0],[0,0],[-0.099,0.072],[-0.123,0.073],[-0.119,0.097],[0,0.242],[0.056,0.201],[0.077,0.172],[0,0.196],[-0.072,0.148],[-0.1,0.123],[-0.072,0.126],[-0.048,0.198],[-0.097,0.446],[0,0],[0,0],[-0.493,0.022],[-0.172,0.053],[-0.121,0.172],[-0.072,0.148],[0.176,0.023],[0.079,-0.005],[0.086,0.012],[0.146,0],[0.296,0.022],[0,0.249],[0,0.17],[0,0],[0.052,0.197],[0.053,0.142],[0,0.317],[0,0],[-0.414,0.027],[-0.147,0],[-0.03,0.146],[-0.051,0.12],[-0.143,0.125],[-0.075,-0.017],[-0.058,0.024],[-0.174,0.075],[-0.296,0.099],[0.222,0.201],[0.299,0.025],[0.122,-0.007],[0.146,0.012],[0.169,0.046],[0.145,0.097],[0.074,0.12],[0.024,0.121],[0.047,0.124],[0.075,0.146],[0.245,0.196],[0.123,0.048],[0.123,0.024]],\"o\":[[-0.097,0.173],[-0.123,0.097],[-0.245,0.098],[-0.195,0.075],[-0.149,0.152],[-0.103,0.146],[-0.051,0.123],[-0.047,0.145],[-0.074,0.169],[-0.123,0.147],[-0.097,0.125],[-0.15,0.079],[-0.441,0.174],[-0.198,0.072],[-0.153,0.128],[-0.121,0.149],[-0.069,0.12],[-0.124,0.094],[-0.146,0.121],[-0.146,0.101],[-0.126,0.126],[-0.147,0.122],[-0.122,0.025],[-0.268,0.025],[0,0],[-0.273,-0.026],[-0.175,0.024],[-0.223,0.024],[-0.246,0],[-0.395,-0.052],[0,0],[0,0],[-0.149,0],[0,0.614],[-0.072,0.147],[-0.048,0.123],[-0.074,0.318],[0,0.342],[0.024,0.127],[0.099,0.151],[0.274,0.193],[0.147,0.1],[0.098,0.147],[0.099,0.17],[0,0.073],[0,0],[0,0.247],[0,0.219],[0.027,0.125],[0.074,0.154],[0.127,0.096],[0.273,0.097],[0.342,0],[0.121,0.023],[0.095,0.074],[0.2,0.248],[0.269,0.074],[0.296,0],[0.413,-0.05],[0.22,0],[0.174,0.101],[0.17,0.077],[0.244,0],[0.447,0],[0.144,0.146],[0.122,0.026],[0.219,0.048],[0,0],[0.071,0],[0,0],[0.073,-0.126],[0.119,-0.073],[0.124,-0.071],[0.177,-0.122],[0,-0.226],[-0.048,-0.166],[-0.071,-0.174],[0,-0.196],[0.075,-0.146],[0.096,-0.119],[0.101,-0.171],[0.15,-0.415],[0,0],[0,0],[0.492,0],[0.193,0],[0.197,-0.045],[0.076,-0.124],[-0.149,-0.096],[-0.085,-0.012],[-0.078,0.006],[-0.124,-0.024],[-0.295,0],[-0.076,-0.222],[0,-0.165],[0,0],[0,-0.222],[-0.025,-0.149],[-0.096,-0.296],[0,0],[0.414,0.028],[0.149,0],[0,-0.169],[0,-0.122],[0.071,-0.174],[0.053,-0.039],[0.066,0.014],[0.176,-0.074],[0.266,-0.143],[-0.097,-0.297],[-0.194,-0.167],[-0.148,-0.012],[-0.123,0.006],[-0.197,0],[-0.174,-0.05],[-0.124,-0.076],[-0.077,-0.126],[-0.025,-0.123],[-0.077,-0.174],[-0.171,-0.273],[-0.099,-0.073],[-0.121,-0.046],[-0.048,0.127]],\"v\":[[197.605,36.152],[197.212,36.548],[196.915,36.94],[196.129,37.134],[195.738,37.526],[195.345,37.921],[195.051,38.315],[194.949,38.708],[194.754,39.102],[194.361,39.495],[194.064,39.885],[193.772,40.278],[193.376,40.477],[192.1,40.675],[191.709,41.064],[191.311,41.359],[191.017,41.853],[190.92,42.252],[190.525,42.445],[190.132,42.738],[189.741,43.032],[189.444,43.426],[188.951,43.622],[188.559,43.723],[187.772,43.723],[187.772,45.784],[187.087,45.687],[186.693,45.883],[186.126,45.883],[185.512,45.883],[184.725,45.197],[184.332,45],[183.941,45],[183.545,45.097],[183.35,46.672],[182.956,46.968],[182.858,47.36],[182.858,48.245],[182.858,49.124],[182.956,49.52],[183.35,49.817],[184.137,50.209],[184.431,50.602],[184.822,50.898],[184.725,51.487],[184.822,51.682],[184.822,52.077],[184.629,52.67],[184.725,53.257],[184.822,53.647],[185.118,54.046],[185.512,54.242],[186.298,54.339],[187.184,54.339],[187.577,54.436],[187.673,54.829],[188.365,55.418],[189.149,55.418],[189.939,55.418],[190.92,54.926],[191.508,55.024],[191.902,55.32],[192.197,55.713],[192.785,55.418],[193.772,56.009],[194.165,56.401],[194.559,56.502],[195.171,56.502],[195.738,56.502],[195.934,56.401],[195.934,55.618],[196.033,55.224],[196.423,55.024],[196.816,54.829],[197.113,54.242],[197.012,53.647],[196.717,53.257],[196.524,52.768],[196.816,52.373],[197.212,52.077],[197.408,51.682],[197.702,51.192],[197.999,50.01],[199.176,50.01],[199.176,47.948],[200.457,47.948],[200.947,47.847],[201.34,47.457],[201.537,47.064],[201.24,46.672],[200.995,46.672],[200.751,46.672],[200.358,46.672],[199.569,46.574],[199.373,45.978],[199.569,45.588],[199.569,45],[199.569,44.409],[199.373,44.019],[199.079,43.257],[199.079,41.212],[200.158,41.263],[200.556,41.212],[200.556,40.773],[200.556,40.382],[200.848,39.984],[201.048,39.979],[201.24,39.984],[201.639,39.59],[202.421,39.297],[202.126,38.507],[201.34,38.315],[200.947,38.315],[200.556,38.315],[200.064,38.315],[199.668,38.021],[199.277,37.825],[199.277,37.431],[199.277,37.038],[198.881,36.743],[198.488,35.956],[198.095,35.856],[197.702,35.756]],\"c\":true},\"ix\":2},\"nm\":\"Path 98\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":98,\"ty\":\"sh\",\"ix\":99,\"ks\":{\"a\":0,\"k\":{\"i\":[[0.174,-0.023],[-0.025,-0.121],[-0.15,-0.268],[-0.125,-0.144],[-0.153,-0.174],[-0.146,-0.143],[-0.169,-0.071],[-0.272,-0.121],[-0.123,-0.146],[-0.123,-0.148],[-0.073,-0.172],[-0.099,-0.295],[-0.099,-0.15],[-0.15,-0.05],[-0.12,-0.027],[-0.067,0.007],[-0.063,-0.014],[-0.125,-0.053],[-0.148,-0.294],[-0.05,-0.296],[-0.027,-0.294],[0,0],[-0.074,-0.15],[-0.29,-0.222],[-0.273,-0.248],[-0.123,-0.124],[-0.249,-0.296],[-0.174,-0.345],[-0.097,-0.318],[-0.071,-0.321],[-0.051,-0.149],[-0.148,-0.269],[-0.126,-0.148],[-0.149,-0.172],[-0.123,-0.145],[-0.121,-0.122],[-0.315,-0.269],[-0.245,-0.298],[-0.127,-0.177],[-0.075,-0.126],[-0.297,-0.226],[-0.246,-0.272],[-0.099,-0.147],[-0.05,-0.124],[-0.149,0.026],[-0.122,0],[-0.344,0],[-0.272,0.049],[-0.101,0.176],[-0.028,0.175],[0,0],[-0.052,0.465],[0,0.121],[-0.027,0.292],[0,0],[-0.073,0.147],[-0.242,0],[-0.221,-0.025],[-0.172,0],[-0.17,0.048],[0.024,0.123],[0.126,0.168],[0.196,0.078],[0.064,-0.007],[0.066,0.016],[0.147,0.046],[-0.049,0.125],[-0.144,0.148],[0.125,0.075],[0.147,0.053],[0.119,0],[0.195,0],[0.173,-0.045],[0.098,-0.07],[0.047,-0.121],[0.022,-0.125],[0,0],[0,0.298],[-0.025,0.295],[0.118,0],[0,0],[0.121,-0.008],[0.179,0.027],[0.166,0.074],[0.175,0.072],[0.121,0.151],[0,0.172],[0,0],[0.396,0.097],[0.068,-0.007],[0.062,0.012],[0.121,0.145],[0.075,0.169],[0.052,0.124],[0.024,0.147],[0.024,0.126],[0,0.126],[0.072,0.169],[0.171,0],[0,0],[0.273,0.073],[0.168,0.121],[0.124,0.169],[0.073,0.1],[0.095,0.074],[0.128,0.122],[0.124,0.126],[0.122,0.101],[0.175,0.119],[0.147,0.149],[0.122,0.079],[0.271,0.127],[0.072,0.096],[0.048,0.127],[0.025,0.122],[0.094,-0.001],[0.043,0.032],[0.145,0.197],[0.144,0.369],[0.467,0.051],[0.122,0.024],[0.174,0.075],[0.121,0.052],[0.363,0.095],[0.172,0]],\"o\":[[0.025,0.147],[0.096,0.322],[0.099,0.175],[0.145,0.174],[0.116,0.148],[0.147,0.148],[0.273,0.149],[0.196,0.095],[0.125,0.147],[0.127,0.146],[0.151,0.271],[0.048,0.173],[0.071,0.121],[0.123,0.048],[0.062,0.013],[0.068,-0.007],[0.123,0.026],[0.291,0.147],[0.148,0.27],[0.023,0.272],[0,0],[0.023,0.175],[0.197,0.317],[0.296,0.221],[0.122,0.094],[0.271,0.273],[0.244,0.29],[0.149,0.294],[0.098,0.322],[0.027,0.144],[0.124,0.293],[0.101,0.17],[0.147,0.172],[0.123,0.145],[0.101,0.127],[0.294,0.295],[0.295,0.247],[0.122,0.15],[0.071,0.123],[0.219,0.297],[0.295,0.217],[0.098,0.128],[0.053,0.098],[0.148,-0.048],[0.118,-0.019],[0.32,-0.048],[0.294,0],[0.195,-0.048],[0.07,-0.145],[0,0],[0.048,-0.464],[0,-0.148],[0.024,-0.272],[0,0],[0,-0.17],[0.101,-0.199],[0.224,0],[0.174,0],[0.194,0],[-0.023,-0.123],[-0.05,-0.197],[-0.122,-0.169],[-0.059,-0.01],[-0.072,0.006],[-0.144,-0.045],[0.027,-0.124],[0.097,-0.192],[-0.096,-0.124],[-0.121,-0.073],[-0.122,-0.046],[-0.173,-0.021],[-0.202,0],[-0.123,0.028],[-0.096,0.08],[-0.05,0.124],[0,0],[-0.025,-0.297],[0,-0.295],[-0.126,-0.076],[0,0],[-0.153,-0.009],[-0.158,0.01],[-0.173,-0.022],[-0.172,-0.073],[-0.173,-0.076],[-0.097,-0.119],[0,0],[-0.418,0],[-0.059,-0.011],[-0.068,0.005],[-0.197,-0.053],[-0.098,-0.126],[-0.048,-0.124],[-0.048,-0.147],[-0.023,-0.121],[-0.023,-0.123],[-0.023,-0.173],[-0.147,0.044],[0,0],[-0.296,0],[-0.194,-0.052],[-0.176,-0.126],[-0.069,-0.099],[-0.073,-0.101],[-0.149,-0.122],[-0.12,-0.121],[-0.122,-0.119],[-0.15,-0.125],[-0.173,-0.125],[-0.1,-0.099],[-0.244,-0.166],[-0.121,-0.047],[-0.073,-0.097],[-0.047,-0.121],[-0.015,-0.067],[-0.074,0],[-0.171,-0.151],[-0.221,-0.295],[-0.468,0],[-0.148,0],[-0.174,-0.048],[-0.122,-0.05],[-0.344,-0.169],[-0.15,-0.023],[-0.17,0]],\"v\":[[156.904,38.412],[156.904,38.804],[157.296,39.59],[157.691,39.984],[158.087,40.477],[158.478,40.868],[158.868,41.263],[159.658,41.557],[160.05,41.95],[160.344,42.346],[160.736,42.738],[161.037,43.523],[161.23,44.019],[161.426,44.409],[161.818,44.508],[162.014,44.508],[162.214,44.508],[162.608,44.606],[163.196,45.294],[163.493,46.08],[163.493,46.868],[163.493,47.261],[163.787,47.653],[164.569,48.342],[165.36,49.03],[165.753,49.323],[166.342,50.113],[167.03,50.898],[167.421,51.682],[167.52,52.572],[167.719,52.964],[168.111,53.75],[168.508,54.142],[168.897,54.634],[169.29,55.024],[169.585,55.418],[170.469,56.107],[171.158,56.895],[171.553,57.29],[171.749,57.683],[172.537,58.372],[173.322,59.055],[173.712,59.352],[173.816,59.746],[174.209,59.548],[174.6,59.45],[175.485,59.45],[176.271,59.45],[176.668,59.055],[176.96,58.663],[176.96,58.269],[176.96,57.092],[177.056,56.699],[177.158,55.913],[177.158,55.517],[177.35,55.125],[177.842,54.731],[178.434,54.829],[178.827,55.024],[179.22,54.731],[179.22,54.339],[178.925,53.848],[178.533,53.451],[178.345,53.454],[178.137,53.451],[177.745,53.257],[177.745,52.862],[178.137,52.469],[177.941,52.077],[177.548,51.878],[177.158,51.78],[176.668,51.682],[176.171,51.78],[175.779,51.878],[175.683,52.273],[175.584,52.67],[174.503,52.67],[174.405,51.878],[174.503,51.095],[174.209,50.799],[173.816,50.799],[173.413,50.806],[172.93,50.799],[172.537,50.506],[172.142,50.209],[171.65,50.01],[171.553,49.547],[171.553,47.556],[170.469,47.556],[170.275,47.557],[170.077,47.556],[169.684,47.163],[169.29,46.868],[169.191,46.472],[168.996,46.08],[168.996,45.687],[168.996,45.294],[168.702,44.904],[168.306,45.097],[167.915,45.097],[167.126,45],[166.639,44.707],[166.241,44.312],[166.145,43.919],[165.753,43.818],[165.454,43.426],[165.162,43.032],[164.771,42.738],[164.376,42.346],[163.887,42.049],[163.688,41.652],[162.899,41.359],[162.507,41.263],[162.408,40.868],[162.408,40.477],[162.207,40.413],[162.016,40.382],[161.624,39.885],[161.132,39],[159.658,39.396],[159.264,39.396],[158.868,39.102],[158.478,39],[157.691,38.412],[157.296,38.217]],\"c\":true},\"ix\":2},\"nm\":\"Path 99\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":99,\"ty\":\"sh\",\"ix\":100,\"ks\":{\"a\":0,\"k\":{\"i\":[[0,-0.169],[-0.025,-0.15],[-0.049,-0.124],[-0.098,-0.075],[-0.193,0.008],[-0.096,-0.009],[0,0],[0,0.344],[0.052,0.124],[0,0]],\"o\":[[0,0.171],[0.023,0.121],[0.048,0.125],[0.132,0.115],[0.092,-0.005],[0,0],[-0.272,-0.196],[0,-0.144],[0,0],[0,0.172]],\"v\":[[158.378,43.647],[158.576,44.019],[158.673,44.409],[158.772,44.804],[159.275,44.903],[159.559,44.904],[159.658,44.508],[158.969,43.892],[158.868,43.523],[158.478,43.228]],\"c\":true},\"ix\":2},\"nm\":\"Path 100\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":100,\"ty\":\"sh\",\"ix\":101,\"ks\":{\"a\":0,\"k\":{\"i\":[[0.271,-0.27],[0.167,-0.1],[0.176,-0.072],[0.066,0.014],[0.052,-0.038],[0.027,-0.125],[0,0],[0,-0.392],[0,-0.149],[0.075,-0.275],[0.076,-0.175],[0,-0.289],[0,-0.174],[0,-0.293],[-0.069,0.007],[-0.082,-0.01],[-0.175,0],[-0.291,0.073],[0,0.365],[0.026,0.442],[-0.071,0],[-0.543,-0.027],[-0.15,-0.023],[0,0.275],[0.15,0.219],[0,0.172],[0,0.147],[0,0.199],[0.148,0],[0.292,-0.022],[0,0],[-0.054,0.15],[-0.071,0.169],[0,0.147],[0,0.194]],\"o\":[[-0.146,0.144],[-0.15,0.069],[-0.057,0.024],[-0.074,-0.016],[-0.099,0.072],[0,0],[0,0.392],[0,0.148],[0,0.295],[-0.05,0.171],[-0.1,0.269],[0,0.177],[0,0.296],[0.088,0.014],[0.066,-0.005],[0.174,0.026],[0.297,0],[0.026,-0.371],[0,-0.445],[0.077,0],[0.543,-0.027],[0.147,0],[0.025,-0.271],[0,-0.27],[-0.072,-0.127],[0,-0.149],[-0.024,-0.2],[-0.149,-0.022],[-0.294,0],[0,0],[0,-0.172],[0.072,-0.173],[0.049,-0.126],[0,-0.196],[-0.22,0.293]],\"v\":[[218.741,44.804],[218.35,45.197],[217.952,45.492],[217.761,45.487],[217.561,45.492],[217.462,45.883],[217.462,46.08],[217.66,47.064],[217.561,47.457],[217.561,48.245],[217.266,48.639],[217.021,49.395],[217.069,49.817],[217.021,50.602],[217.248,50.603],[217.462,50.602],[217.858,50.799],[218.642,50.602],[218.741,49.671],[218.642,48.538],[218.837,48.443],[220.217,48.443],[220.61,48.538],[220.709,47.874],[220.41,47.261],[220.017,47.064],[220.116,46.672],[220.116,46.179],[219.723,46.08],[218.939,46.179],[218.939,45.614],[219.037,45.197],[219.43,44.904],[219.527,44.508],[219.43,44.019]],\"c\":true},\"ix\":2},\"nm\":\"Path 101\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":101,\"ty\":\"sh\",\"ix\":102,\"ks\":{\"a\":0,\"k\":{\"i\":[[0.222,-0.089],[0.07,-0.125],[0,0],[0.394,-0.149],[0.297,-0.027],[0.395,-0.217],[0.099,-0.149],[0,-0.244],[-0.024,-0.222],[-0.444,0.22],[-0.124,0.073],[-0.149,0.096],[-0.153,0.074],[-0.147,0.05],[-0.077,-0.01],[-0.052,0.009],[-0.148,0.143],[0,0],[0,0],[-0.148,-0.049],[-0.145,-0.045],[-0.273,0],[-0.195,0.066],[-0.146,0.074],[-0.169,0.073],[-0.069,-0.013],[-0.063,0.024],[0,0],[-0.122,0.144],[-0.075,0.369],[0.122,0]],\"o\":[[-0.125,0.048],[0,0],[-0.419,0],[-0.269,0.099],[-0.47,0.021],[-0.145,0.075],[-0.121,0.196],[0,0.222],[0.467,-0.222],[0.124,-0.052],[0.148,-0.074],[0.121,-0.08],[0.149,-0.074],[0.068,-0.026],[0.058,0.008],[0.196,-0.074],[0,0],[0,0],[0.173,0],[0.15,0.051],[0.223,0.101],[0.218,0],[0.147,-0.052],[0.146,-0.074],[0.061,-0.026],[0.067,0.013],[0,0],[0.172,-0.074],[0.222,-0.273],[-0.157,0],[-0.184,0]],\"v\":[[212.352,46.179],[212.257,46.574],[205.693,46.574],[204.879,47.261],[204.094,47.36],[202.91,47.653],[202.616,48.049],[202.421,48.66],[202.519,49.226],[203.701,48.639],[204.094,48.538],[204.391,48.149],[204.783,47.948],[205.176,47.752],[205.399,47.746],[205.566,47.752],[205.96,47.36],[206.746,47.556],[209.18,47.556],[209.598,47.653],[209.99,47.847],[210.582,48.245],[211.17,48.149],[211.566,47.948],[211.86,47.556],[212.059,47.555],[212.257,47.556],[212.646,47.36],[212.939,46.968],[213.334,46.08],[212.925,46.072]],\"c\":true},\"ix\":2},\"nm\":\"Path 102\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":102,\"ty\":\"sh\",\"ix\":103,\"ks\":{\"a\":0,\"k\":{\"i\":[[0.026,-0.173],[-0.005,-0.058],[-0.266,-0.223],[-0.198,-0.148],[-0.096,-0.149],[-0.096,-0.223],[0,0.072],[0,0],[0.148,0.242],[0.102,0.123],[0.319,0.199],[0.124,0.048]],\"o\":[[-0.01,0.07],[0.161,0.286],[0.17,0.143],[0.145,0.095],[0.145,0.196],[0,-0.052],[0,0],[0,-0.317],[-0.101,-0.149],[-0.245,-0.273],[-0.127,-0.076],[-0.049,0.147]],\"v\":[[160.54,46.472],[160.54,46.659],[161.132,47.36],[161.624,47.752],[162.016,48.049],[162.309,48.639],[162.408,48.443],[162.408,48.069],[162.214,47.261],[161.818,46.968],[161.132,46.179],[160.736,46.08]],\"c\":true},\"ix\":2},\"nm\":\"Path 103\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":103,\"ty\":\"sh\",\"ix\":104,\"ks\":{\"a\":0,\"k\":{\"i\":[[0,0],[0.007,0.066],[0.033,0.067]],\"o\":[[0.014,-0.078],[-0.032,-0.058],[0,0]],\"v\":[[160.54,46.868],[160.54,46.659],[160.441,46.472]],\"c\":true},\"ix\":2},\"nm\":\"Path 104\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":104,\"ty\":\"sh\",\"ix\":105,\"ks\":{\"a\":0,\"k\":{\"i\":[[0.034,-0.026],[0.073,-0.128],[0.148,-0.295],[-0.294,-0.123],[-0.152,0.011],[-0.066,-0.011],[0,0.444],[0.198,0.097],[0.169,0],[0,0],[0.085,0]],\"o\":[[-0.097,0.071],[-0.171,0.292],[0.267,0.169],[0.068,0.027],[0.126,-0.008],[0.319,-0.324],[0,-0.248],[-0.146,-0.078],[0,0],[-0.1,0],[-0.042,0]],\"v\":[[223.066,48.049],[222.969,48.443],[222.579,49.226],[223.36,49.719],[223.736,49.725],[224.051,49.719],[224.639,48.735],[224.245,48.245],[223.855,48.049],[223.464,48.049],[223.181,48.014]],\"c\":true},\"ix\":2},\"nm\":\"Path 105\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":105,\"ty\":\"sh\",\"ix\":106,\"ks\":{\"a\":0,\"k\":{\"i\":[[0.292,-0.147],[0.172,-0.047],[0.297,0],[0.298,-0.025],[0.151,-0.1],[0.122,-0.146],[0.002,-0.002],[0,0],[0.071,0.009],[0.091,-0.026],[0.295,-0.145],[0,0],[-0.122,-0.045],[-0.145,-0.049],[-0.145,-0.023],[-0.119,0],[-0.067,0.01],[-0.098,-0.04],[-0.146,-0.1],[-0.05,-0.122],[-0.201,-0.047],[-0.148,0],[0,0],[-0.217,0],[-0.096,0],[-0.149,0],[-0.149,0],[-0.244,0],[-0.223,0.019],[-0.17,0.076],[0.073,0.099],[0.07,0.148],[0.021,0.466],[0.07,0.176],[0.147,0.12],[0.126,0.049],[0.344,0]],\"o\":[[-0.172,0.07],[-0.269,0.078],[-0.296,0],[-0.199,0],[-0.145,0.094],[-0.002,0.003],[0,0],[-0.091,0.014],[-0.082,-0.011],[-0.32,0.103],[0,0],[0.123,0.023],[0.15,0.054],[0.146,0.049],[0.126,0.026],[0.073,0.012],[0.093,-0.015],[0.175,0.077],[0.1,0.048],[0.072,0.172],[0.123,0.027],[0,0],[0.221,0],[0.1,0],[0.15,0],[0.146,0],[0.246,0.019],[0.246,0],[0.17,-0.027],[-0.072,-0.124],[-0.095,-0.119],[-0.198,-0.415],[0,-0.195],[-0.077,-0.173],[-0.097,-0.074],[-0.294,-0.147],[-0.347,0]],\"v\":[[227.295,49.719],[226.902,50.01],[226.115,50.113],[225.329,50.113],[224.832,50.309],[224.443,50.602],[224.436,50.61],[224.54,50.403],[224.303,50.399],[224.051,50.403],[223.264,50.799],[223.36,51.192],[223.756,51.288],[224.15,51.487],[224.54,51.682],[224.931,51.682],[225.142,51.672],[225.425,51.682],[225.819,51.978],[225.918,52.373],[226.214,52.862],[226.605,52.862],[226.999,52.862],[227.587,52.716],[227.783,52.572],[228.181,52.67],[228.574,52.768],[229.21,52.768],[229.853,52.768],[230.241,52.469],[230.146,52.077],[229.754,51.878],[229.754,50.701],[229.754,50.209],[229.456,49.817],[229.061,49.719],[228.181,49.52]],\"c\":true},\"ix\":2},\"nm\":\"Path 106\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":106,\"ty\":\"sh\",\"ix\":107,\"ks\":{\"a\":0,\"k\":{\"i\":[[0,0],[0.022,-0.037]],\"o\":[[-0.017,0.04],[0,0]],\"v\":[[224.301,50.881],[224.245,50.996]],\"c\":true},\"ix\":2},\"nm\":\"Path 107\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":107,\"ty\":\"sh\",\"ix\":108,\"ks\":{\"a\":0,\"k\":{\"i\":[[0.04,-0.008],[0.147,-0.074],[0.125,-0.121],[0.517,-0.073],[0.271,0.051],[0.118,0.027],[0.293,0.096],[0.124,0],[0,0],[0.126,-0.171],[0.122,-0.32],[0.022,-0.199],[0,-0.173],[0.025,-0.121],[0.072,-0.124],[0.15,-0.101],[0.07,0.014],[0.051,-0.037],[0.095,-0.143],[0,-0.247],[-0.222,-0.147],[-0.124,-0.024],[-0.144,-0.025],[-0.295,0],[0,-0.199],[0.101,-0.294],[0.025,-0.146],[0,-0.175],[-0.024,-0.15],[-0.05,-0.174],[-0.047,-0.177],[-0.049,-0.147],[-0.1,0.128],[-0.047,0.17],[0,0.343],[-0.024,0.293],[0,0.172],[0,0],[0,0],[0,0],[0,0],[0,0],[-0.122,0],[-0.122,-0.022],[-0.145,-0.024],[-0.118,-0.025],[-0.147,0],[0,0],[0.028,-0.147],[0,-0.126],[0,0],[-0.025,-0.15],[-0.124,-0.097],[-0.216,0],[0,0],[0,0.15],[0,0],[0.125,0.366],[0.124,0.097],[0.148,0.145],[0.072,0.149],[0,0.244],[-0.023,0.248],[0,0],[0.051,0.12],[0.122,0.145],[0.124,0.127],[0.149,0.097],[0.081,-0.004],[0.078,0.068],[0.078,0.094],[0,0],[-0.466,0.123],[-0.176,0.052],[-0.124,0.026],[-0.182,-0.018],[-0.225,0.039],[-0.066,-0.006],[-0.063,0.014],[0,0.222],[0.051,0.15],[0.122,0.103],[0.119,0.072],[0.145,0.072],[0.171,0.023],[0,0],[0.084,0]],\"o\":[[-0.149,0.051],[-0.17,0.074],[-0.368,0.371],[-0.268,0.051],[-0.125,-0.025],[-0.3,-0.072],[-0.099,-0.025],[0,0],[-0.219,0.024],[-0.196,0.271],[-0.074,0.195],[-0.027,0.15],[0,0.148],[-0.026,0.125],[-0.101,0.149],[-0.047,0.025],[-0.078,-0.017],[-0.146,0.095],[-0.122,0.174],[0,0.295],[0.098,0.048],[0.149,0.048],[0.269,0.05],[0,0.196],[0,0.317],[-0.048,0.148],[-0.024,0.148],[0,0.172],[0.025,0.174],[0.048,0.17],[0.052,0.146],[0.147,-0.098],[0.097,-0.12],[0.099,-0.322],[0,-0.292],[0,-0.174],[0,0],[0,0],[0,0],[0,0],[0,0],[0.145,0.027],[0.122,0],[0.147,0.027],[0.123,0.028],[0.124,0.026],[0,0],[0,0.174],[-0.022,0.123],[0,0],[0,0.171],[0.023,0.167],[0.146,0.123],[0,0],[0.025,-0.145],[0,0],[0,-0.395],[-0.05,-0.148],[-0.147,-0.121],[-0.123,-0.123],[-0.097,-0.196],[0,-0.25],[0,0],[0,-0.15],[-0.077,-0.174],[-0.127,-0.143],[-0.122,-0.123],[-0.07,-0.046],[-0.09,0.003],[-0.099,-0.074],[0,0],[0.49,0],[0.169,-0.022],[0.122,-0.021],[0.218,-0.035],[0.186,0.019],[0.06,-0.01],[0.068,0.006],[0.198,-0.048],[0,-0.173],[-0.072,-0.171],[-0.121,-0.094],[-0.15,-0.096],[-0.149,-0.079],[0,0],[-0.098,0],[-0.042,0]],\"v\":[[207.829,49.62],[207.434,49.817],[207.139,50.209],[205.96,50.996],[205.176,50.898],[204.783,50.799],[203.993,50.506],[203.701,50.309],[203.306,50.309],[202.91,50.701],[202.421,51.487],[202.421,52.077],[202.227,52.469],[202.227,52.862],[202.227,53.257],[201.832,53.552],[201.646,53.548],[201.438,53.552],[201.145,53.944],[200.947,54.534],[201.34,55.224],[201.733,55.32],[202.126,55.517],[202.91,55.517],[203.011,56.037],[202.715,56.796],[202.519,57.191],[202.519,57.633],[202.519,58.075],[202.816,58.469],[202.91,58.96],[203.11,59.352],[203.504,59.055],[203.895,58.765],[203.993,57.879],[203.993,57.092],[204.189,56.672],[204.189,54.046],[205.371,54.046],[205.371,54.926],[205.176,55.32],[205.274,55.713],[205.668,55.811],[206.061,55.811],[206.452,56.009],[206.844,56.107],[207.236,56.107],[207.236,56.918],[207.042,57.29],[206.944,57.683],[206.944,58.124],[206.944,58.568],[207.337,58.862],[207.85,59.055],[209.107,59.055],[209.207,58.663],[209.207,58.1],[209.107,57.092],[208.714,56.895],[208.321,56.502],[207.926,56.205],[207.733,55.618],[207.926,55.024],[207.926,54.634],[207.926,54.242],[207.535,53.944],[207.236,53.552],[206.844,53.257],[206.613,53.218],[206.353,53.157],[206.254,52.768],[206.353,52.077],[207.634,52.077],[208.025,51.78],[208.418,51.682],[209.001,51.684],[209.598,51.682],[209.79,51.683],[209.99,51.682],[210.287,51.192],[210.089,50.799],[209.795,50.403],[209.404,50.209],[209.009,49.917],[208.616,49.62],[208.223,49.62],[207.952,49.61]],\"c\":true},\"ix\":2},\"nm\":\"Path 108\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":108,\"ty\":\"sh\",\"ix\":109,\"ks\":{\"a\":0,\"k\":{\"i\":[[0,0],[0,-0.171],[-0.074,-0.27],[-0.172,-0.27],[-0.242,-0.295],[-0.273,-0.265],[-0.147,-0.097],[-0.098,-0.097],[-0.102,-0.149],[-0.076,-0.099],[-0.096,-0.126],[-0.089,0.02],[-0.05,-0.011],[0,0],[0.121,0.072],[0.195,0.05],[0.124,0.028],[0.087,-0.011],[0.078,0.012],[0.099,0.169],[0.048,0.169],[0.031,0.12],[0,0.292],[0.149,0.224],[0.294,0.124]],\"o\":[[0.046,0.147],[0.023,0.296],[0.072,0.321],[0.199,0.318],[0.248,0.294],[0.122,0.124],[0.099,0.048],[0.126,0.126],[0.05,0.097],[0.097,0.144],[0.042,0.057],[0.062,-0.014],[0,0],[-0.145,-0.076],[-0.17,-0.123],[-0.125,-0.022],[-0.093,-0.027],[-0.073,0.009],[-0.194,-0.051],[-0.098,-0.149],[-0.025,-0.124],[-0.047,-0.272],[0,-0.295],[-0.194,-0.269],[0,0]],\"v\":[[163.59,50.602],[163.59,50.799],[163.59,51.583],[164.081,52.373],[164.668,53.157],[165.36,53.944],[165.654,54.339],[166.046,54.436],[166.342,54.829],[166.441,55.224],[166.735,55.618],[166.952,55.635],[167.126,55.618],[167.126,54.046],[166.735,53.848],[166.342,53.451],[165.947,53.354],[165.68,53.348],[165.454,53.354],[165.063,52.964],[164.771,52.572],[164.668,52.176],[164.668,51.39],[164.569,50.602],[163.787,50.209]],\"c\":true},\"ix\":2},\"nm\":\"Path 109\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":109,\"ty\":\"sh\",\"ix\":110,\"ks\":{\"a\":0,\"k\":{\"i\":[[0.223,-0.022],[-0.023,-0.148],[0,-0.245],[0.023,-0.415],[0,0],[0,0],[0,0],[0,0.295],[0,0.197],[0,0.126],[0.23,0]],\"o\":[[0.023,0.174],[0.052,0.222],[0,0.422],[0,0],[0,0],[0,0],[0.022,-0.295],[0,-0.197],[0,-0.121],[-0.294,-0.016],[-0.177,0]],\"v\":[[232.801,50.259],[232.897,50.701],[233.095,51.313],[232.998,52.373],[234.96,52.373],[234.96,51.878],[234.129,51.878],[234.178,51.095],[234.077,50.602],[234.129,50.259],[233.384,50.229]],\"c\":true},\"ix\":2},\"nm\":\"Path 110\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":110,\"ty\":\"sh\",\"ix\":111,\"ks\":{\"a\":0,\"k\":{\"i\":[[0,0],[0.121,-0.021],[0.071,0.006],[0.06,-0.009],[0.098,-0.099],[-0.177,-0.021],[0,0],[0,0],[-0.319,0],[-0.291,0.052],[0.044,-0.014],[0,0.041],[0,0.324],[0.226,0]],\"o\":[[-0.148,0],[-0.065,0.016],[-0.065,-0.005],[-0.145,0.028],[0.173,0.075],[0,0],[0,0],[0.318,0.024],[0.296,0],[0,-0.022],[-0.052,0.017],[-0.073,-0.317],[-0.217,0],[0,0]],\"v\":[[212.646,51.583],[212.452,51.78],[212.243,51.782],[212.053,51.78],[211.86,52.176],[212.257,52.469],[212.646,52.469],[213.04,52.469],[213.848,52.572],[214.61,52.469],[214.524,52.476],[214.415,52.469],[214.415,51.634],[213.822,51.583]],\"c\":true},\"ix\":2},\"nm\":\"Path 111\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":111,\"ty\":\"sh\",\"ix\":112,\"ks\":{\"a\":0,\"k\":{\"i\":[[0.172,-0.099],[0.151,-0.124],[0.369,0],[0.296,-0.022],[0.148,-0.074],[0.049,-0.194],[0.097,-0.272],[0.096,-0.124],[0.147,-0.05],[0.297,0],[0.32,0.05],[0.223,0.195],[0.099,0.145],[0.075,0.096],[0.322,0],[0.124,-0.023],[0.171,-0.077],[0.17,0],[0,0],[0,0],[-0.12,-0.122],[-0.071,-0.147],[0,-0.126],[0,-0.294],[0,0],[-0.098,0.05],[-0.069,-0.012],[-0.063,0.026],[-0.194,0],[-0.172,0],[-0.295,-0.022],[-0.123,-0.022],[-0.295,-0.146],[-0.294,-0.199],[-0.122,-0.074],[-0.169,-0.077],[-0.076,0.01],[-0.055,-0.009],[-0.173,-0.028],[-0.146,0],[-0.176,0.017],[-0.262,-0.056],[-0.145,-0.05],[-0.271,-0.145],[-0.12,-0.076],[-0.148,-0.149],[-0.198,-0.32],[-0.072,-0.125],[0,-0.541],[0,-0.144],[0.049,-0.168],[0.298,-0.146],[0.075,0.011],[0.056,-0.01],[0.121,-0.027],[0.151,-0.101],[0.079,-0.195],[0,-0.169],[0,-0.148],[-0.396,0],[-0.318,0.218],[-0.124,0.103],[-0.047,0.098],[-0.244,0],[-0.365,-0.248],[-0.144,-0.128],[-0.146,-0.126],[-0.194,-0.097],[-0.12,-0.051],[-0.147,-0.052],[-0.3,-0.149],[-0.171,-0.075],[-0.172,-0.028],[-0.272,-0.026],[-0.32,0],[-0.296,0.075],[-0.148,0.098],[-0.073,0.123],[-0.023,0.124],[0,0.291],[-0.194,0.048],[-0.27,0.148],[-0.12,0.145],[-0.445,0],[0,0],[-0.147,-0.051],[-0.123,-0.048],[-0.147,-0.05],[-0.295,-0.169],[-0.121,-0.098],[-0.171,-0.269],[-0.07,-0.121],[-0.271,-0.272],[-0.099,-0.147],[-0.174,-0.297],[-0.099,-0.173],[-0.171,-0.048],[-0.25,0],[-0.565,0.043],[-0.295,0],[-0.347,-0.347],[-0.343,-0.125],[-0.246,0],[-0.222,0.021],[0,0],[0.244,0.122],[0.123,0.047],[0.101,0.076],[0.097,0.125],[0.124,0.147],[0.198,0.027],[0.125,0.027],[0.067,-0.006],[0.062,0.014],[0.172,0.047],[0.122,0.026],[0.149,0],[0.296,0],[0,0],[0.665,-0.048],[0,0],[-0.588,-0.051],[0,0],[0.128,0.096],[0.122,0.097],[0.123,0.098],[0,0],[0.126,0.147],[0.074,0.15],[0.095,0.272],[0.071,0.101],[0.124,0.098],[0.146,0.101],[0.147,0.121],[0.12,0.121],[0.395,0.169],[0.148,0.027],[0.343,0],[0.271,0.247],[0.147,0.075],[0.074,-0.009],[0.055,0.013],[0.17,0.027],[0.269,0.121],[0.297,0.118],[0.149,0.024],[0.149,0],[0.197,-0.007],[0.246,0.012],[0.194,0],[0.12,-0.004],[0.288,0.122],[0.272,0.146],[0.297,0.117],[0.122,0.02],[0.169,0.075],[0.292,0]],\"o\":[[-0.146,0.075],[-0.27,0.222],[-0.292,0],[-0.171,0],[-0.197,0.096],[-0.048,0.274],[-0.048,0.145],[-0.099,0.124],[-0.271,0.124],[-0.342,0],[-0.27,-0.025],[-0.147,-0.124],[-0.072,-0.124],[-0.196,-0.243],[-0.148,0],[-0.173,0.053],[-0.149,0.047],[0,0],[0,0],[0.152,0.073],[0.124,0.126],[0.074,0.123],[0.027,0.271],[0,0],[0.047,-0.12],[0.048,-0.023],[0.071,0.012],[0.171,-0.072],[0.169,0],[0.295,0],[0.149,0],[0.322,0.078],[0.345,0.174],[0.123,0.072],[0.149,0.1],[0.071,0.028],[0.06,-0.008],[0.172,0.028],[0.121,0],[0.215,0.021],[0.226,-0.021],[0.15,0.021],[0.298,0.12],[0.123,0.073],[0.171,0.099],[0.272,0.271],[0.073,0.147],[0.298,0.442],[0,0.146],[0,0.198],[-0.099,0.321],[-0.07,0.027],[-0.059,-0.008],[-0.121,0.023],[-0.174,0.049],[-0.171,0.093],[-0.047,0.145],[0,0.146],[0.05,0.392],[0.391,0],[0.151,-0.099],[0.099,-0.072],[0.121,-0.197],[0.44,0],[0.175,0.098],[0.146,0.12],[0.153,0.121],[0.122,0.048],[0.147,0.049],[0.318,0.1],[0.167,0.073],[0.168,0.07],[0.248,0.051],[0.319,0.027],[0.318,0],[0.172,-0.05],[0.122,-0.075],[0.048,-0.097],[0.074,-0.271],[0.221,0],[0.323,-0.103],[0.172,-0.098],[0.271,-0.324],[0,0],[0.171,0],[0.12,0.023],[0.147,0.045],[0.298,0.125],[0.147,0.073],[0.245,0.222],[0.075,0.121],[0.2,0.32],[0.123,0.121],[0.196,0.275],[0.098,0.175],[0.096,0.145],[0.223,0.077],[0.565,0],[0.294,-0.029],[0.491,0],[0.267,0.268],[0.221,0.072],[0.222,0],[0,0],[0,-0.296],[-0.124,-0.047],[-0.119,-0.055],[-0.12,-0.073],[-0.124,-0.145],[-0.127,-0.144],[-0.125,0],[-0.061,-0.012],[-0.068,0.007],[-0.173,-0.046],[-0.12,-0.029],[-0.123,-0.024],[-0.294,-0.025],[0,0],[-0.663,-0.03],[0,0],[0.587,-0.025],[0,0],[-0.121,-0.073],[-0.121,-0.099],[-0.12,-0.102],[0,0],[-0.103,-0.124],[-0.124,-0.147],[-0.145,-0.242],[-0.051,-0.123],[-0.075,-0.123],[-0.144,-0.126],[-0.169,-0.122],[-0.146,-0.124],[-0.294,-0.298],[-0.147,-0.051],[-0.319,-0.074],[-0.366,0],[-0.122,-0.096],[-0.066,-0.025],[-0.061,0.009],[-0.174,-0.047],[-0.297,-0.05],[-0.297,-0.147],[-0.145,-0.052],[-0.122,-0.025],[-0.248,-0.013],[-0.195,0.006],[-0.198,0],[-0.144,-0.008],[-0.269,0.009],[-0.296,-0.118],[-0.268,-0.145],[-0.125,-0.053],[-0.174,-0.051],[-0.248,-0.122],[-0.223,0]],\"v\":[[237.225,52.077],[236.928,52.469],[236.043,52.862],[235.254,52.862],[234.865,53.061],[234.472,53.451],[234.472,54.242],[234.277,54.634],[233.879,54.829],[233.095,54.926],[232.21,54.829],[231.423,54.634],[231.128,54.242],[231.128,53.848],[230.342,53.552],[229.947,53.552],[229.556,53.848],[229.139,53.944],[226.702,53.944],[226.702,54.731],[227.095,54.926],[227.49,55.224],[227.49,55.618],[227.49,56.401],[228.082,56.401],[228.082,56.009],[228.266,56.01],[228.475,56.009],[228.767,55.618],[229.16,55.811],[229.947,55.811],[230.342,55.811],[231.128,56.205],[231.915,56.796],[232.306,56.992],[232.6,57.385],[232.824,57.392],[232.998,57.385],[233.488,57.486],[233.879,57.587],[234.454,57.574],[235.157,57.587],[235.551,57.781],[236.34,58.269],[236.733,58.469],[237.126,58.862],[237.814,59.648],[238.009,60.043],[238.798,61.219],[238.699,61.613],[238.699,62.103],[238.107,62.793],[237.887,62.799],[237.712,62.793],[237.324,62.895],[236.928,63.192],[236.533,63.58],[236.34,63.973],[236.436,64.37],[237.225,65.053],[238.206,64.762],[238.6,64.463],[238.699,64.071],[239.189,63.678],[240.27,63.973],[240.663,64.37],[241.055,64.663],[241.451,65.053],[241.842,65.152],[242.238,65.348],[243.124,65.645],[243.517,65.94],[244.007,66.038],[244.696,66.234],[245.532,66.234],[246.366,66.234],[246.761,65.94],[247.154,65.742],[247.251,65.348],[247.251,64.566],[247.84,64.566],[248.628,64.169],[249.02,63.78],[249.907,63.091],[250.103,63.091],[250.498,63.285],[250.887,63.385],[251.28,63.58],[252.068,63.973],[252.462,64.169],[252.952,64.956],[253.149,65.348],[253.936,65.94],[254.232,66.331],[254.723,67.119],[255.02,67.612],[255.313,68.001],[255.952,68.001],[257.379,67.91],[258.116,67.807],[259.15,68.497],[259.934,69.086],[260.548,69.282],[261.113,69.185],[261.113,67.977],[260.621,67.413],[260.228,67.319],[259.832,67.218],[259.639,66.822],[259.344,66.432],[258.853,66.135],[258.457,66.135],[258.264,66.135],[258.064,66.135],[257.673,65.843],[257.28,65.742],[256.886,65.645],[256.1,65.645],[256.1,63.139],[254.379,63.139],[254.379,61.27],[255.9,61.27],[255.9,60.63],[255.507,60.433],[255.214,60.043],[254.822,59.746],[252.858,59.746],[252.559,59.352],[252.167,59.055],[251.973,58.269],[251.873,57.879],[251.477,57.683],[251.085,57.385],[250.691,56.992],[250.3,56.699],[249.512,55.913],[249.118,55.713],[248.233,55.713],[247.35,55.32],[247.154,54.926],[246.939,54.921],[246.761,54.926],[246.271,54.829],[245.482,54.534],[244.696,54.046],[244.301,53.848],[243.908,53.848],[243.267,53.848],[242.629,53.848],[242.139,53.75],[241.746,53.751],[240.959,53.647],[240.173,53.157],[239.387,52.67],[238.995,52.572],[238.504,52.373],[237.814,51.978]],\"c\":true},\"ix\":2},\"nm\":\"Path 112\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":112,\"ty\":\"sh\",\"ix\":113,\"ks\":{\"a\":0,\"k\":{\"i\":[[0,0],[0,0],[0,0],[0,0],[-0.026,-0.243],[-0.49,-0.05],[0,0]],\"o\":[[0,0],[0,0],[0,0],[0.026,0.243],[0.492,-0.025],[0,0],[0,0]],\"v\":[[222.283,51.978],[222.283,52.572],[222.085,52.176],[222.085,52.572],[222.184,53.207],[223.41,53.207],[223.41,51.978]],\"c\":true},\"ix\":2},\"nm\":\"Path 113\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":113,\"ty\":\"sh\",\"ix\":114,\"ks\":{\"a\":0,\"k\":{\"i\":[[0.088,-0.092],[0.077,-0.122],[0.05,-0.149],[0,0],[0,-0.149],[-0.025,-0.147],[0,0],[-0.321,0],[-0.152,0],[0,0],[-0.12,-0.024],[-0.126,-0.021],[-0.127,-0.025],[-0.171,-0.046],[-0.347,0],[-0.046,0.463],[0.395,0.047],[0.295,0.026],[0.146,0],[0,0],[0.273,0.049],[0.39,0],[0.083,0]],\"o\":[[-0.097,0.096],[-0.073,0.126],[0,0],[0,0.145],[0,0.172],[0,0],[0.319,0],[0.147,0],[0,0],[0.124,0],[0.126,0.027],[0.12,0.025],[0.166,0.05],[0.32,0.078],[-0.054,-0.464],[-0.392,-0.053],[-0.296,-0.024],[-0.151,0],[0,0],[-0.269,-0.025],[-0.368,-0.074],[-0.086,0],[-0.128,0]],\"v\":[[218.837,54.046],[218.741,54.436],[218.545,54.829],[218.545,54.436],[218.449,54.829],[218.642,55.224],[219.798,55.224],[220.61,55.125],[221.006,55.224],[221.395,55.224],[221.787,55.32],[222.184,55.418],[222.579,55.517],[222.969,55.811],[223.855,55.811],[223.801,54.634],[222.772,54.534],[221.988,54.436],[221.592,54.339],[221.197,54.339],[220.41,54.142],[219.43,53.944],[219.173,53.937]],\"c\":true},\"ix\":2},\"nm\":\"Path 114\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":114,\"ty\":\"sh\",\"ix\":115,\"ks\":{\"a\":0,\"k\":{\"i\":[[0,0],[-0.151,-0.074],[0,0],[-0.173,0],[0,0],[0,0],[0.145,0.073],[0.269,0.047],[0.27,0.048]],\"o\":[[0.123,0.12],[0,0],[0.147,0.076],[0,0],[0,0],[-0.097,-0.124],[-0.248,-0.123],[-0.268,-0.05],[0,0]],\"v\":[[215.301,55.125],[215.598,55.517],[215.991,55.713],[216.405,55.811],[217.165,55.811],[217.165,55.125],[216.973,54.731],[216.186,54.534],[215.4,54.339]],\"c\":true},\"ix\":2},\"nm\":\"Path 115\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":115,\"ty\":\"sh\",\"ix\":116,\"ks\":{\"a\":0,\"k\":{\"i\":[[0.118,0],[0.123,-0.022],[0.145,-0.074],[0.073,-0.123],[0.073,-0.275],[0.073,-0.15],[0.098,-0.052],[0.122,0],[0.688,0],[0,0],[0,0],[0.49,0.018],[0.15,0],[0,-0.147],[0,-0.296],[0,-0.07],[-0.663,-0.07],[-0.294,-0.021],[-0.293,0],[-0.295,0.028],[-0.147,0.075],[-0.198,0.055],[-0.058,-0.009],[-0.071,0.031],[-0.121,0.025],[-0.096,0.172],[-0.078,0.322],[-0.097,0.267],[-0.049,0.171],[0,0.148],[0.021,0.145]],\"o\":[[-0.122,0],[-0.146,0.024],[-0.148,0.076],[-0.145,0.242],[-0.048,0.166],[-0.076,0.119],[-0.1,0.048],[-0.661,0.097],[0,0],[0,0],[-0.495,0],[-0.147,0],[0,0.15],[0.025,0.296],[0,0.069],[0.664,0],[0.293,0.026],[0.299,0.028],[0.296,0],[0.172,0],[0.194,-0.097],[0.052,-0.009],[0.076,0.012],[0.125,-0.045],[0.198,-0.073],[0.178,-0.267],[0.044,-0.27],[0.048,-0.174],[0.025,-0.124],[0,-0.174],[-0.148,0.022]],\"v\":[[263.671,56.796],[263.275,56.796],[262.882,56.992],[262.488,57.191],[262.488,57.98],[262.196,58.372],[262.098,58.765],[261.702,58.765],[259.96,58.765],[259.538,58.765],[259.15,58.765],[257.868,58.765],[257.475,58.663],[257.28,59.352],[257.379,60.14],[257.329,60.334],[259.051,60.334],[259.832,60.529],[260.621,60.529],[261.408,60.529],[261.803,60.334],[262.196,59.941],[262.363,59.949],[262.587,59.941],[262.98,59.844],[263.371,59.45],[263.771,58.663],[263.868,57.879],[264.16,57.486],[264.259,57.092],[264.064,56.699]],\"c\":true},\"ix\":2},\"nm\":\"Path 116\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":116,\"ty\":\"sh\",\"ix\":117,\"ks\":{\"a\":0,\"k\":{\"i\":[[0.051,-0.176],[0.026,-0.12],[0,0],[0,0],[0,0.12],[0,0]],\"o\":[[-0.024,0.12],[0,0],[0,0],[0,-0.12],[0,0],[-0.072,0.169]],\"v\":[[170.077,58.765],[170.077,59.154],[170.469,59.45],[170.469,59.055],[170.373,58.765],[170.373,58.372]],\"c\":true},\"ix\":2},\"nm\":\"Path 117\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":117,\"ty\":\"sh\",\"ix\":118,\"ks\":{\"a\":0,\"k\":{\"i\":[[0.148,-0.099],[0.097,-0.122],[0.046,-0.172],[0.021,-0.126],[0.027,-0.12],[0,-0.146],[0,-0.175],[-0.219,0.024],[-0.121,0.024],[-0.121,0.149],[-0.049,0.125],[0,0.566],[0,0],[0.121,0.123]],\"o\":[[-0.147,0.1],[-0.098,0.124],[-0.028,0.123],[-0.028,0.124],[-0.024,0.127],[0,0.176],[0,0.219],[0.145,0],[0.171,-0.052],[0.076,-0.096],[0.248,-0.491],[0,0],[-0.027,-0.169],[-0.148,0.098]],\"v\":[[230.832,59.154],[230.439,59.45],[230.051,59.746],[230.051,60.14],[229.947,60.529],[229.853,60.924],[229.652,61.322],[230.241,61.417],[230.637,61.417],[231.029,61.121],[231.128,60.728],[231.621,59.352],[231.621,59.154],[231.227,58.862]],\"c\":true},\"ix\":2},\"nm\":\"Path 118\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":118,\"ty\":\"sh\",\"ix\":119,\"ks\":{\"a\":0,\"k\":{\"i\":[[0,0],[0.15,-0.023],[-0.026,-0.149],[-0.024,-0.168],[0,-0.144],[-0.07,-0.146],[-0.247,-0.296],[-0.097,-0.123],[-0.198,-0.072],[-0.172,0],[-0.169,0.027],[0.054,0.124],[0.047,0.173],[0.047,0.124],[0.099,0.149],[0.268,0.245],[0.074,0.122],[0.024,0.126],[0,0.148]],\"o\":[[-0.146,0],[0.048,0.148],[0.048,0.172],[0,0.148],[0,0.199],[0.175,0.321],[0.099,0.122],[0.123,0.168],[0.146,0.051],[0.172,0],[-0.045,-0.12],[-0.07,-0.175],[-0.048,-0.121],[-0.072,-0.17],[-0.195,-0.319],[-0.125,-0.097],[-0.075,-0.121],[-0.025,-0.121],[0,0]],\"v\":[[268.78,59.154],[268.387,59.254],[268.585,59.648],[268.683,60.164],[268.585,60.529],[268.876,60.924],[269.668,61.515],[269.863,61.91],[270.257,62.3],[270.65,62.496],[271.04,62.3],[270.941,61.91],[270.65,61.515],[270.65,61.121],[270.353,60.728],[269.571,60.14],[269.176,59.941],[269.176,59.548],[269.176,59.154]],\"c\":true},\"ix\":2},\"nm\":\"Path 119\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":119,\"ty\":\"sh\",\"ix\":120,\"ks\":{\"a\":0,\"k\":{\"i\":[[0,0],[0,0],[0,0],[0,0],[-0.295,-0.023],[-0.12,-0.043],[0,0],[-0.122,-0.127],[-0.194,-0.096],[-0.226,0],[-0.395,0.1],[-0.147,0],[-0.296,0],[-0.318,0],[-0.27,-0.146],[-0.126,-0.072],[-0.169,0],[-0.146,0],[-0.316,0],[-0.346,-0.074],[-0.34,-0.175],[-0.171,-0.021],[-0.082,0.007],[-0.083,-0.009],[-0.342,-0.024],[-0.024,0.141],[-0.053,0.148],[-0.067,0.006],[-0.061,-0.012],[-0.173,-0.024],[-0.148,0],[0,0],[-0.244,0],[-0.223,-0.093],[-0.124,-0.076],[-0.146,-0.099],[-0.317,-0.1],[-0.321,0],[0,0],[-0.149,0.024],[0.145,0.27],[0.198,0.073],[0.066,-0.013],[0.061,0.027],[0.195,0.32],[0,0],[-0.075,0.147],[-0.122,0.098],[-0.12,0.025],[-0.134,-0.016],[-0.131,0.027],[-0.293,0.175],[0.271,0.051],[0.146,0.024],[0.069,-0.006],[0.062,0.012],[0.344,0],[0.295,0],[0.198,0],[0.115,-0.003],[0.307,0.105],[0.315,0.098],[0.323,0.049]],\"o\":[[0,0],[0,0],[0,0],[0.293,0],[0.149,0],[0,0],[0.17,0.075],[0.151,0.145],[0.201,0.098],[0.415,0],[0.12,-0.024],[0.296,-0.024],[0.318,-0.024],[0.323,0],[0.148,0.072],[0.122,0.072],[0.151,0],[0.319,0],[0.368,0],[0.367,0.098],[0.175,0.066],[0.086,0.014],[0.077,-0.005],[0.322,0.048],[0.024,-0.146],[0.024,-0.175],[0.059,0.012],[0.068,-0.006],[0.173,0.053],[0.125,0.027],[0,0],[0.244,-0.024],[0.27,0],[0.122,0.051],[0.149,0.066],[0.272,0.196],[0.297,0.1],[0,0],[0.172,0],[-0.149,-0.295],[-0.103,-0.175],[-0.061,-0.024],[-0.067,0.013],[-0.348,-0.147],[0,0],[0.022,-0.169],[0.072,-0.152],[0.096,-0.074],[0.142,-0.037],[0.123,0.016],[0.32,-0.049],[-0.293,-0.047],[-0.15,-0.022],[-0.062,-0.012],[-0.068,0.006],[-0.316,-0.049],[-0.293,0],[-0.198,0],[-0.141,-0.006],[-0.267,0.005],[-0.321,-0.098],[-0.323,-0.096],[0,0]],\"v\":[[176.368,61.219],[176.368,61.711],[177.548,61.711],[177.548,62.595],[178.335,62.595],[178.728,62.595],[179.123,62.793],[179.415,63.192],[179.809,63.58],[180.402,63.678],[181.386,63.285],[181.777,63.285],[182.564,63.285],[183.397,63.192],[184.233,63.285],[184.431,63.678],[184.822,63.899],[185.217,63.973],[186.027,63.874],[186.986,63.973],[187.772,64.566],[188.167,64.857],[188.418,64.858],[188.655,64.857],[189.543,64.956],[189.543,64.566],[189.741,64.169],[189.936,64.169],[190.132,64.169],[190.525,64.463],[190.92,64.463],[191.311,64.463],[191.902,64.266],[192.59,64.463],[192.983,64.566],[193.277,64.956],[194.064,65.448],[194.902,65.548],[195.345,65.548],[195.738,65.348],[195.345,64.566],[194.949,64.169],[194.754,64.17],[194.559,64.169],[193.868,63.43],[190.822,63.43],[190.822,62.992],[191.017,62.595],[191.408,62.496],[191.819,62.492],[192.197,62.496],[192.983,62.103],[192.197,62.005],[191.806,61.811],[191.607,61.811],[191.408,61.811],[190.525,61.613],[189.741,61.711],[189.246,61.613],[188.868,61.611],[188.068,61.515],[187.285,61.121],[186.395,60.924]],\"c\":true},\"ix\":2},\"nm\":\"Path 120\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":120,\"ty\":\"sh\",\"ix\":121,\"ks\":{\"a\":0,\"k\":{\"i\":[[0.489,-0.376],[0,-0.293],[-0.025,-0.149],[0,0],[-0.094,0.144],[0,0.242],[0.124,0.368],[0.075,0.155]],\"o\":[[-0.048,0.292],[0,0.15],[0,0],[0.144,-0.097],[0.151,-0.201],[0,-0.395],[-0.048,-0.173],[-0.564,0.223]],\"v\":[[224.443,63.192],[224.344,64.266],[224.443,64.663],[225.626,64.663],[226.012,64.37],[226.311,63.78],[226.115,62.793],[225.819,62.397]],\"c\":true},\"ix\":2},\"nm\":\"Path 121\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":121,\"ty\":\"sh\",\"ix\":122,\"ks\":{\"a\":0,\"k\":{\"i\":[[0,0],[-0.018,-0.147],[-0.051,-0.149],[-0.066,-0.007],[-0.063,0.013],[-0.199,0],[-0.241,0],[0,0],[-0.148,0.072],[0,0]],\"o\":[[0.027,0.143],[0.027,0.17],[0.06,-0.011],[0.07,0.006],[0.171,-0.024],[0.242,0],[0,0],[0.195,0],[0,0],[0,0]],\"v\":[[214.217,63.091],[214.217,63.484],[214.415,63.874],[214.608,63.875],[214.811,63.874],[215.204,63.58],[215.792,63.78],[215.991,63.78],[216.381,63.484],[216.085,63.091]],\"c\":true},\"ix\":2},\"nm\":\"Path 122\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":122,\"ty\":\"sh\",\"ix\":123,\"ks\":{\"a\":0,\"k\":{\"i\":[[0.025,-0.005],[0.172,-0.032],[0.22,0.021],[0.223,-0.024],[0.271,-0.029],[0,0],[0.147,0],[0.146,-0.031],[0.244,0],[0.194,0.074],[0.22,0.069],[0.293,0.028],[0.22,0],[0.2,-0.044],[0.172,-0.072],[0.225,0],[0,0],[0,0],[-0.393,-0.052],[-0.836,0],[0,0],[-0.687,0.047],[-0.147,0],[-0.123,0.024],[-0.123,0.024],[-0.145,0.075],[-0.198,0.048],[-0.126,0],[-0.129,-0.005],[-0.144,0.011],[-0.198,0.022],[-0.173,0.074],[0,0],[0.07,0.006],[0.039,0]],\"o\":[[-0.171,0.048],[-0.257,0.051],[-0.181,-0.017],[-0.294,0.021],[0,0],[-0.15,0],[-0.149,0],[-0.243,0.024],[-0.221,0],[-0.219,-0.075],[-0.269,-0.076],[-0.221,-0.024],[-0.222,0],[-0.168,0.028],[-0.196,0.074],[0,0],[0,0],[0.271,0.271],[0.839,0.097],[0,0],[0.687,0],[0.148,0],[0.147,0],[0.125,-0.024],[0.15,-0.023],[0.173,-0.075],[0.122,-0.026],[0.137,-0.013],[0.123,0.006],[0.194,0],[0.199,-0.026],[0,0],[-0.063,0.014],[-0.039,-0.004],[-0.026,0]],\"v\":[[211.759,64.071],[211.368,64.37],[210.681,64.38],[210.089,64.37],[209.303,64.566],[208.91,64.566],[208.517,64.663],[208.124,64.663],[207.535,64.857],[206.944,64.762],[206.452,64.37],[205.668,64.266],[205.077,64.169],[204.483,64.266],[203.993,64.463],[203.475,64.762],[203.011,64.762],[203.306,64.956],[204.094,65.548],[206.207,65.548],[206.55,65.548],[208.321,65.548],[208.714,65.448],[209.107,65.448],[209.499,65.348],[209.892,65.152],[210.287,64.762],[210.681,64.762],[211.074,64.761],[211.467,64.762],[211.957,64.762],[212.352,64.463],[212.157,64.071],[211.956,64.072],[211.837,64.064]],\"c\":true},\"ix\":2},\"nm\":\"Path 123\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":123,\"ty\":\"sh\",\"ix\":124,\"ks\":{\"a\":0,\"k\":{\"i\":[[0.222,-0.071],[0.146,-0.053],[0.147,0],[0.297,-0.052],[0,-0.269],[-0.099,-0.147],[-0.465,0],[-0.27,0.072],[-0.146,0.076],[-0.174,0.05],[-0.343,-0.023],[-0.345,0],[-0.146,0],[0.046,-0.013],[0,0.025],[0.023,0.2],[0.272,0.051],[0.175,0.028],[0.063,-0.006],[0.061,0.014],[0.274,0]],\"o\":[[-0.147,0.053],[-0.122,0.046],[-0.294,0],[-0.27,0.02],[0,0.196],[0.272,0.37],[0.295,0],[0.149,-0.052],[0.17,-0.069],[0.316,-0.099],[0.344,0.024],[0.15,0],[-0.013,-0.025],[-0.046,0.012],[-0.047,-0.172],[-0.295,0],[-0.145,-0.024],[-0.071,-0.012],[-0.067,0.007],[-0.248,-0.044],[-0.244,0]],\"v\":[[199.176,64.169],[198.785,64.37],[198.488,64.663],[197.702,64.566],[197.113,64.956],[197.408,65.348],[198.585,65.548],[199.373,65.548],[199.767,65.348],[200.064,64.956],[200.947,65.053],[201.832,65.053],[202.227,64.956],[202.118,64.956],[202.029,64.956],[202.029,64.463],[201.24,64.463],[200.848,64.266],[200.649,64.267],[200.457,64.266],[199.814,64.071]],\"c\":true},\"ix\":2},\"nm\":\"Path 124\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":124,\"ty\":\"sh\",\"ix\":125,\"ks\":{\"a\":0,\"k\":{\"i\":[[0.041,-0.011],[0.123,-0.024],[0.198,-0.073],[0.124,-0.051],[0.123,-0.023],[0.17,-0.052],[0.169,-0.076],[0.125,-0.076],[0.119,-0.075],[0.168,0.004],[0.099,-0.017],[0.065,0.01],[0.101,-0.043],[0.147,-0.101],[0.123,-0.119],[0,-0.248],[0,0],[-0.004,-0.021],[0,0],[0,-0.15],[-0.295,-0.097],[-0.146,0],[-0.147,0],[-0.203,0.267],[-0.294,0.243],[-0.22,0.1],[-0.127,0],[-0.269,0.05],[-0.343,0.169],[-0.293,0.024],[-0.112,-0.008],[-0.149,0.027],[-0.12,0.024],[-0.099,0.099],[0.124,0.075],[0.193,0.074],[0.295,0],[0.083,0]],\"o\":[[-0.125,0.021],[-0.195,0.074],[-0.122,0.048],[-0.121,0.05],[-0.175,0.048],[-0.173,0.051],[-0.124,0.048],[-0.123,0.072],[-0.157,0.094],[-0.098,-0.002],[-0.071,0.01],[-0.094,-0.016],[-0.172,0.071],[-0.145,0.095],[-0.171,0.175],[0,0],[-0.004,0.025],[0,0],[0,0.144],[0,0.321],[0.122,0.026],[0.15,0],[0.346,0],[0.219,-0.297],[0.198,-0.17],[0.125,-0.045],[0.273,-0.051],[0.37,-0.07],[0.244,-0.125],[0.131,-0.01],[0.141,0.011],[0.124,0],[0.147,-0.024],[-0.149,-0.073],[-0.172,-0.121],[-0.271,-0.093],[-0.099,0],[-0.041,0]],\"v\":[[215.694,64.37],[215.301,64.463],[214.908,64.857],[214.512,64.956],[214.121,65.053],[213.728,65.348],[213.238,65.448],[212.844,65.548],[212.746,65.94],[212.254,66.026],[211.957,66.038],[211.756,66.027],[211.467,66.038],[211.17,66.432],[210.777,66.725],[210.386,67.218],[210.386,67.413],[210.386,67.482],[210.287,67.319],[210.188,67.71],[210.878,68.201],[211.27,68.3],[211.66,68.395],[212.257,67.71],[213.04,67.021],[213.53,66.527],[213.926,66.432],[214.709,66.331],[215.499,65.645],[216.283,65.448],[216.644,65.454],[217.069,65.448],[217.462,65.448],[217.66,65.053],[217.266,64.857],[216.876,64.463],[216.085,64.37],[215.816,64.356]],\"c\":true},\"ix\":2},\"nm\":\"Path 125\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":125,\"ty\":\"sh\",\"ix\":126,\"ks\":{\"a\":0,\"k\":{\"i\":[[0,0],[-0.016,-0.047]],\"o\":[[0.03,0.037],[0,0]],\"v\":[[210.508,67.683],[210.582,67.807]],\"c\":true},\"ix\":2},\"nm\":\"Path 126\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":126,\"ty\":\"sh\",\"ix\":127,\"ks\":{\"a\":0,\"k\":{\"i\":[[0.006,-0.001],[0.294,-0.145],[-0.097,-0.121],[-0.097,-0.151],[-0.097,-0.122],[-0.145,-0.073],[-0.173,-0.023],[-0.348,0],[-0.469,0.028],[0,0],[0.123,0.023],[0.127,0.122],[0.093,0.05],[0.127,0.078],[0.124,0.052],[0.147,0.123],[0.138,0.056],[0.069,0]],\"o\":[[-0.317,0.097],[0.073,0.124],[0.122,0.147],[0.073,0.12],[0.099,0.122],[0.15,0.074],[0.321,0.073],[0.462,0],[0,0],[-0.123,-0.029],[-0.174,-0.052],[-0.093,-0.094],[-0.104,-0.051],[-0.122,-0.071],[-0.174,-0.071],[-0.073,0.013],[-0.126,-0.05],[-0.007,0]],\"v\":[[202.616,66.234],[201.832,66.627],[202.029,67.021],[202.421,67.319],[202.616,67.71],[202.91,68.104],[203.405,68.201],[204.267,68.201],[205.467,68.15],[205.371,67.71],[204.978,67.612],[204.483,67.413],[204.391,67.021],[203.993,66.922],[203.602,66.822],[203.306,66.432],[202.954,66.333],[202.636,66.233]],\"c\":true},\"ix\":2},\"nm\":\"Path 127\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":127,\"ty\":\"sh\",\"ix\":128,\"ks\":{\"a\":0,\"k\":{\"i\":[[0.218,-0.029],[-0.048,-0.098],[-0.149,-0.126],[-0.298,0],[0,0],[-0.176,0.073],[0.072,0.124],[0.068,0.124],[0.121,0.052],[0.294,0]],\"o\":[[0.023,0.123],[0.097,0.145],[0.221,0.194],[0,0],[0.168,-0.029],[-0.054,-0.149],[-0.074,-0.121],[-0.076,-0.122],[-0.25,-0.095],[-0.223,0]],\"v\":[[278.123,66.432],[278.22,67.119],[278.516,67.516],[279.301,67.71],[279.694,67.71],[280.09,67.413],[279.889,67.021],[279.795,66.627],[279.402,66.527],[278.688,66.331]],\"c\":true},\"ix\":2},\"nm\":\"Path 128\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":128,\"ty\":\"sh\",\"ix\":129,\"ks\":{\"a\":0,\"k\":{\"i\":[[0.125,-0.05],[0.296,-0.15],[-0.05,-0.248],[0,0],[0,0],[0,0]],\"o\":[[-0.291,0.118],[0.073,0.221],[0,0],[0,0],[0,0],[-0.123,0.021]],\"v\":[[209.499,68.988],[208.714,69.382],[208.91,69.97],[210.089,69.97],[210.089,69.282],[209.892,68.889]],\"c\":true},\"ix\":2},\"nm\":\"Path 129\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":129,\"ty\":\"sh\",\"ix\":130,\"ks\":{\"a\":0,\"k\":{\"i\":[[0.115,0],[0,0],[0.146,0],[0.149,0],[0,0],[-0.123,-0.045],[-0.27,-0.076],[-0.144,-0.075],[-0.12,-0.07],[-0.05,-0.125],[0.176,0],[0.341,0],[0.297,-0.024],[0.149,-0.046],[0.172,-0.122],[0.368,-0.249],[0.169,-0.1],[0.147,-0.124],[0,-0.245],[0,0],[0,-0.145],[0.024,-0.293],[0,-0.122],[0.048,-0.173],[0.169,-0.048],[0.242,0],[0.517,0.324],[0.147,0.051],[0.123,0],[0.39,0],[0.026,0.293],[0,0],[0.323,-0.026],[0.112,0.009],[0.149,-0.028],[0.268,-0.2],[0.099,-0.123],[0.148,-0.122],[0.17,-0.021],[0.116,0.016],[0.148,-0.052],[0.121,-0.467],[0.023,-0.121],[0.221,-0.047],[0.064,0.006],[0.064,-0.013],[0.294,0],[0,0],[-0.097,-0.119],[-0.121,-0.141],[0,-0.172],[0,0],[0,0],[0,0.05],[0,0.292],[0,0.153],[0,0],[0.148,-0.072],[0.124,-0.101],[0.07,-0.171],[0,-0.294],[0.098,-0.464],[0.028,-0.118],[0.126,-0.147],[0.124,-0.199],[0.075,-0.147],[0.078,-0.121],[0.125,-0.094],[0.217,-0.295],[0.123,-0.1],[0.123,-0.073],[0.149,-0.046],[0.148,-0.025],[0.122,0],[0.199,0],[0.311,0.011],[0.294,-0.008],[0.197,-0.022],[0.347,-0.199],[0.196,-0.027],[0.174,0.021],[0.23,-0.052],[0.193,-0.126],[0.367,-0.145],[0.47,-0.194],[0.147,-0.098],[0.072,-0.318],[0.025,-0.297],[0.05,-0.144],[0.062,-0.005],[0.06,0.013],[0.148,0.025],[0.123,0.054],[0.097,0.096],[0.049,0.124],[0.074,0.171],[0.145,-0.244],[0.074,-0.145],[0,-0.147],[0,0],[0,-0.145],[0.022,-0.342],[0,0],[0.077,-0.148],[0.048,-0.194],[0,-0.147],[-0.122,-0.249],[-0.095,-0.15],[-0.099,-0.151],[-0.127,-0.268],[-0.291,-0.422],[0,0],[0.174,0.045],[0.08,-0.012],[0.084,0.023],[0.173,0.021],[0.147,0],[0.147,-0.027],[0,0],[-0.124,-0.149],[-0.248,-0.293],[-0.124,-0.123],[-0.122,-0.097],[-0.099,-0.203],[0,-0.173],[-0.026,-0.318],[-0.144,-0.293],[-0.074,-0.194],[-0.052,-0.395],[-0.022,-0.197],[-0.022,-0.194],[-0.175,-0.299],[-0.077,-0.146],[-0.171,-0.394],[-0.024,-0.153],[0,-0.125],[-0.05,-0.465],[-0.1,-0.319],[-0.024,-0.144],[0,-0.194],[0,0],[0.275,-0.071],[0.271,-0.147],[0.125,-0.075],[0.144,-0.196],[0,0],[-0.34,-0.271],[-0.246,-0.223],[-0.122,-0.074],[-0.149,-0.077],[-0.294,-0.121],[-0.124,-0.047],[-0.32,-0.098],[-0.246,0],[-0.245,0.023],[-0.27,0.049],[-0.125,0.025],[-0.197,0.149],[-0.072,0.124],[-0.098,0.146],[-0.049,0.099],[-0.124,0.127],[-0.143,0.072],[-0.295,0.022],[-0.27,0.099],[-0.196,0.071],[-0.294,0],[-0.661,-0.172],[-0.345,-0.097],[-0.197,-0.029],[-0.272,0],[-0.197,0.073],[-0.147,0.144],[-0.124,0.167],[-0.171,0.273],[-0.171,0.17],[-0.813,0.273],[-0.124,0.053],[-0.145,0.051],[-0.148,0.027],[-0.151,0],[-0.125,-0.022],[-0.143,-0.05],[-0.168,-0.047],[-0.296,0],[-0.27,0.053],[-0.152,0.071],[-0.37,0.271],[-0.145,0.126],[-0.121,0.095],[-0.171,0.05],[-0.068,-0.006],[-0.061,0.012],[-0.395,0],[-0.295,-0.025],[-0.198,0.015],[-0.275,-0.039],[-0.271,-0.12],[0,0],[-0.146,-0.077],[-0.293,0],[-0.243,0],[-0.148,0],[0,0],[-0.294,-0.026],[-0.123,-0.026],[-0.148,-0.072],[-0.1,-0.124],[-0.072,-0.22],[0,-0.144],[0,-0.466],[-0.444,-0.37],[-0.075,-0.147],[0,-0.292],[-0.12,-0.465],[-0.074,-0.12],[-0.147,-0.072],[-0.144,0],[-0.245,0.437],[-0.075,0.127],[-0.244,0.296],[-0.096,0.122],[-0.096,0.144],[-0.075,0.153],[-0.101,0.295],[-0.048,0.148],[-0.222,-0.221],[0,-0.195],[0.272,-0.273],[0,-0.518],[-0.047,-0.292],[-0.072,0.096],[-0.095,0.047],[-0.195,0],[-0.174,0],[-0.147,-0.025],[0,0],[0.025,-0.197],[0,0],[0.026,-0.466],[-0.059,-0.009],[-0.069,0.029],[-0.149,0.144],[-0.272,0],[-0.124,-0.198],[-0.072,-0.323],[-0.271,-0.271],[-0.1,-0.099],[0,-0.224],[0,0],[0,-0.149],[-0.025,-0.292],[-0.025,-0.12],[-0.247,-0.196],[-0.29,-0.176],[-0.173,-0.049],[-0.294,0],[-0.419,-0.193],[-0.149,-0.072],[-0.121,-0.076],[-0.151,-0.073],[-0.177,-0.05],[-0.393,0],[-0.445,0.441],[0,0.589],[0,0],[-0.17,-0.439],[-0.024,-0.119],[-0.247,-0.196],[-0.343,0],[-0.395,0.344],[-0.143,0.097],[-0.345,0.193],[-0.15,0.073],[-0.392,0],[-0.221,0],[-0.833,0],[-0.126,0.098],[-0.076,0.122],[-0.049,0.12],[-0.073,0.317],[-0.271,0.391],[-0.27,0.198],[0,0.272],[0,0],[0.051,0.196],[0,0.245],[-0.17,0.563],[-0.051,0.147],[-0.052,0.121],[-0.074,0.152],[-0.294,0.244],[-0.124,0.096],[-0.098,0.149],[-0.073,0.146],[-0.026,0.148],[-0.026,0.125],[-0.029,0.121],[-0.097,0.155],[-0.198,0.1],[-0.123,0.073],[-0.075,-0.004],[-0.073,0.085],[-0.048,0.173],[0,0.121],[0,0.146],[0,0.343],[-0.221,0.345],[-0.074,0.372],[-0.098,0.441],[-0.027,0.119],[0,0.144],[0,0],[0.072,0.147],[0.07,0.122],[0.1,0.174],[0.025,0.173],[0,0],[-0.022,0.118],[-0.075,0.319],[0,0.294],[0,0],[0,0],[0.024,0.122],[0.145,0.194],[0.172,0.348],[0.049,0.17],[0.023,0.124],[0.073,0.145],[0.075,0.126],[0.099,0.124],[0.274,0.219],[0.174,0.07],[0.147,0.119],[0,0.224],[0,0],[0.296,0],[0.466,0.052],[0.172,0.071],[0.122,0.069],[0.052,0.365],[0,0],[0,0.15],[0,0.342],[0.056,-0.011],[0.068,0.041],[0.073,0.121],[0.145,0.225],[0.12,0.079],[0.15,0.05],[0.269,0.196],[0.125,0.121],[0.099,0.121],[0.099,0.123],[0.198,0.076],[0.466,0.15],[0.152,0.099],[0.046,0.195],[0.073,0.269],[0.097,0.321],[0.025,0.171],[0.027,0.124],[0.021,0.145],[0,0.147],[0,0],[0.022,0.295],[0.022,0.126],[0.247,0.221],[0.097,0.195],[0,0.219],[0,0.296],[0.37,0.123],[0.124,0],[0.125,0.02],[0.15,0.025],[0.298,0.148],[0.074,0.12],[0.029,0.124],[0,0.125],[0.023,0.146],[0,0],[0.097,0.441],[0.097,0.172],[0.074,0.125],[0.051,0.196],[0.026,0.123],[0.045,0.272],[0.049,0.125],[0.294,0.197],[0.077,-0.015],[0.052,0.013],[0,0],[0.027,-0.295],[0,0],[0.072,-0.171],[0.097,-0.148],[0.17,-0.297],[0.047,-0.177],[0,-0.297],[-0.029,-0.123],[-0.025,-0.172],[0,-0.293],[0,0],[0.049,-0.197],[0.073,-0.172],[0,-0.193],[0,0],[0.123,-0.17],[0.123,-0.1],[0.198,-0.091],[0.224,0],[0.372,0.074],[0.069,-0.006],[0.061,0.01],[0.148,0.096],[0.095,0.177],[0.046,0.123],[0.127,0.148],[0.565,0.295],[0.395,0.121],[0.149,0.1],[0.247,0.314],[0.122,0.072],[0.081,-0.011],[0.054,0.01],[0.124,0],[0.072,-0.009],[0.094,0.026],[0.125,0.07],[0.077,0.174],[0,0.147],[0,0.175],[0,0.394],[0,0],[0.024,0.144],[0,0.169],[-0.074,0.149],[-0.074,0.126],[-0.07,0.122],[-0.075,0.146],[-0.12,0.148],[-0.2,0.32],[-0.048,0.121],[0,0],[0.27,0.047],[0.344,0.024],[0,0],[0.49,0.044],[0.17,0.047],[0.173,0],[0.127,0.024],[0.067,-0.005],[0.062,0.013],[0.194,0.098],[0.146,0.023],[0.068,-0.006],[0.061,0.012],[0.147,0.052],[0.12,0.053],[0.321,0.075],[0.043,0]],\"o\":[[0,0],[-0.148,0],[-0.147,0],[0,0],[0.075,0.125],[0.245,0.12],[0.152,0.049],[0.124,0.047],[0.125,0.078],[-0.146,0.049],[-0.343,0.023],[-0.295,0],[-0.17,0],[-0.219,0.098],[-0.343,0.273],[-0.174,0.1],[-0.176,0.096],[-0.174,0.149],[0,0],[0,0.146],[0.024,0.297],[0,0.15],[-0.024,0.174],[-0.051,0.17],[-0.222,0.079],[-0.615,0],[-0.147,-0.077],[-0.123,-0.047],[-0.367,-0.047],[-0.053,-0.29],[0,0],[-0.317,0],[-0.131,0.011],[-0.14,-0.01],[-0.324,0.043],[-0.124,0.07],[-0.118,0.172],[-0.146,0.127],[-0.121,0.023],[-0.143,-0.02],[-0.441,0.147],[-0.027,0.122],[-0.074,0.217],[-0.058,0.01],[-0.07,-0.006],[-0.271,0.049],[0,0],[0.073,0.126],[0.124,0.154],[0.098,0.129],[0,0],[0,0],[0,-0.046],[0,-0.295],[0,-0.149],[0,0],[-0.174,0],[-0.147,0.075],[-0.147,0.121],[-0.125,0.245],[0,0.487],[-0.027,0.124],[-0.073,0.202],[-0.146,0.173],[-0.072,0.144],[-0.071,0.125],[-0.072,0.124],[-0.266,0.242],[-0.074,0.123],[-0.123,0.096],[-0.124,0.072],[-0.147,0.05],[-0.123,0.023],[-0.173,0.023],[-0.39,0.03],[-0.233,-0.008],[-0.197,0],[-0.418,0.05],[-0.175,0.098],[-0.21,0.035],[-0.194,-0.023],[-0.223,0.046],[-0.347,0.22],[-0.491,0.198],[-0.171,0.079],[-0.273,0.17],[-0.052,0.269],[0,0.173],[-0.073,-0.01],[-0.066,0.007],[-0.152,-0.02],[-0.123,-0.022],[-0.124,-0.046],[-0.099,-0.098],[-0.075,-0.171],[-0.097,0.292],[-0.073,0.121],[-0.049,0.123],[0,0],[0,0.145],[0.022,0.348],[0,0],[-0.028,0.171],[-0.095,0.169],[-0.025,0.126],[0,0.294],[0.076,0.17],[0.097,0.145],[0.168,0.243],[0.219,0.49],[0,0],[-0.172,-0.076],[-0.087,-0.025],[-0.079,0.011],[-0.174,-0.049],[-0.12,-0.025],[-0.172,0],[0,0],[0,0.194],[0.244,0.296],[0.117,0.148],[0.124,0.124],[0.147,0.123],[0.071,0.146],[0.022,0.343],[0.022,0.317],[0.098,0.193],[0.146,0.345],[0.022,0.192],[0.026,0.196],[0.047,0.368],[0.072,0.146],[0.219,0.368],[0.05,0.149],[0.021,0.117],[0.075,0.465],[0.048,0.323],[0.047,0.147],[0.048,0.175],[0,0],[-0.294,0],[-0.319,0.098],[-0.123,0.08],[-0.195,0.149],[0,0],[0.466,0],[0.248,0.195],[0.123,0.098],[0.125,0.074],[0.296,0.145],[0.128,0.051],[0.294,0.125],[0.224,0.049],[0.248,0],[0.295,-0.029],[0.122,0],[0.225,-0.051],[0.123,-0.072],[0.102,-0.147],[0.073,-0.098],[0.097,-0.146],[0.119,-0.121],[0.248,-0.122],[0.296,-0.025],[0.201,-0.074],[0.269,-0.096],[0.689,0],[0.345,0.1],[0.172,0.048],[0.269,0.021],[0.217,0],[0.195,-0.072],[0.148,-0.151],[0.195,-0.275],[0.147,-0.221],[0.613,-0.612],[0.121,-0.026],[0.144,-0.045],[0.146,-0.05],[0.124,-0.022],[0.147,0],[0.146,0.027],[0.173,0.051],[0.272,0.076],[0.29,0],[0.171,-0.026],[0.394,-0.223],[0.17,-0.121],[0.147,-0.12],[0.123,-0.099],[0.061,-0.012],[0.068,0.006],[0.371,-0.123],[0.292,0],[0.255,0.024],[0.225,-0.016],[0.296,0.05],[0,0],[0.172,0.071],[0.249,0.149],[0.248,0],[0.149,0],[0,0],[0.299,0],[0.148,0],[0.151,0.046],[0.175,0.074],[0.148,0.171],[0.027,0.125],[0.021,0.47],[0.586,0],[0.145,0.125],[0.145,0.249],[0.028,0.493],[0.025,0.124],[0.072,0.145],[0.123,0.073],[0.517,0],[0.074,-0.122],[0.167,-0.319],[0.1,-0.122],[0.098,-0.125],[0.101,-0.15],[0.147,-0.243],[0.049,-0.145],[0.293,0.097],[0.119,0.125],[0,0.393],[-0.343,0.341],[0,0.294],[0.125,-0.073],[0.075,-0.098],[0.151,-0.099],[0.171,0],[0.147,0],[0,0],[0,0.22],[0,0],[-0.072,0.444],[0.054,-0.01],[0.075,0.011],[0.199,-0.096],[0.172,-0.17],[0.243,0],[0.17,0.274],[0.098,0.366],[0.096,0.095],[0.149,0.148],[0,0],[0,0.146],[-0.025,0.296],[0,0.15],[0.096,0.324],[0.245,0.198],[0.149,0.073],[0.271,0.096],[0.49,0],[0.172,0.079],[0.12,0.074],[0.145,0.073],[0.147,0.072],[0.342,0.123],[0.641,0],[0.416,-0.413],[0,0],[0.49,0],[0.025,0.127],[0.075,0.321],[0.244,0.197],[0.537,0],[0.147,-0.124],[0.32,-0.247],[0.147,-0.073],[0.321,-0.197],[0.223,0],[0.835,0.021],[0.177,0],[0.122,-0.094],[0.073,-0.098],[0.121,-0.293],[0.099,-0.468],[0.17,-0.275],[0.195,-0.147],[0,0],[0,-0.225],[-0.047,-0.218],[0,-0.587],[0.025,-0.15],[0.026,-0.124],[0.048,-0.147],[0.174,-0.343],[0.147,-0.125],[0.124,-0.1],[0.075,-0.121],[0.075,-0.146],[0.02,-0.125],[0.02,-0.118],[0.047,-0.171],[0.099,-0.166],[0.147,-0.073],[0.062,-0.03],[0.102,0.005],[0.121,-0.149],[0.019,-0.122],[0,-0.126],[0.025,-0.343],[0.219,-0.322],[0.217,-0.316],[0.098,-0.44],[0.026,-0.123],[0.02,-0.126],[0,0],[0,-0.174],[-0.074,-0.147],[-0.1,-0.175],[-0.072,-0.149],[0,0],[0,-0.149],[0.078,-0.323],[0.047,-0.27],[0,0],[0,0],[0,-0.149],[-0.054,-0.217],[-0.221,-0.295],[-0.075,-0.17],[-0.024,-0.126],[-0.05,-0.149],[-0.076,-0.149],[-0.098,-0.144],[-0.223,-0.243],[-0.146,-0.126],[-0.169,-0.078],[-0.175,-0.122],[0,0],[-0.294,-0.024],[-0.465,0],[-0.198,0],[-0.148,-0.049],[-0.296,-0.223],[0,0],[0,-0.124],[-0.023,-0.339],[-0.064,-0.012],[-0.073,0.015],[-0.124,-0.074],[-0.147,-0.224],[-0.074,-0.096],[-0.146,-0.074],[-0.295,-0.121],[-0.151,-0.101],[-0.121,-0.128],[-0.095,-0.127],[-0.123,-0.146],[-0.443,-0.196],[-0.171,-0.045],[-0.171,-0.097],[-0.049,-0.267],[-0.098,-0.319],[-0.05,-0.169],[-0.024,-0.124],[-0.024,-0.145],[-0.029,-0.121],[0,0],[-0.029,-0.296],[0,-0.146],[-0.1,-0.318],[-0.169,-0.147],[-0.099,-0.174],[0,-0.294],[0,-0.396],[-0.122,-0.026],[-0.12,0],[-0.146,-0.026],[-0.318,-0.073],[-0.146,-0.073],[-0.073,-0.103],[-0.024,-0.125],[-0.024,-0.149],[0,0],[-0.027,-0.467],[-0.051,-0.199],[-0.073,-0.122],[-0.1,-0.169],[-0.021,-0.122],[-0.048,-0.272],[-0.029,-0.122],[-0.147,-0.322],[-0.072,-0.04],[-0.058,0.011],[0,0],[0.048,0.296],[0,0],[-0.022,0.177],[-0.075,0.172],[-0.175,0.27],[-0.076,0.148],[-0.099,0.268],[0,0.144],[0.024,0.17],[0.051,0.272],[0,0],[0,0.225],[-0.024,0.172],[-0.075,0.174],[0,0],[0,0.218],[-0.098,0.122],[-0.145,0.123],[-0.193,0.103],[-0.392,0],[-0.061,-0.014],[-0.065,0.006],[-0.171,-0.027],[-0.15,-0.1],[-0.055,-0.12],[-0.099,-0.172],[-0.417,-0.496],[-0.346,-0.172],[-0.171,-0.049],[-0.322,-0.246],[-0.098,-0.127],[-0.057,-0.029],[-0.063,0.008],[-0.119,-0.028],[-0.079,-0.011],[-0.087,0.01],[-0.147,-0.027],[-0.146,-0.102],[-0.049,-0.122],[0,-0.175],[0,-0.392],[0,0],[-0.027,-0.151],[-0.022,-0.149],[0,-0.172],[0.077,-0.148],[0.074,-0.096],[0.074,-0.147],[0.099,-0.178],[0.242,-0.297],[0.071,-0.124],[0,0],[-0.265,-0.049],[-0.321,-0.072],[0,0],[-0.494,0],[-0.195,0],[-0.147,-0.049],[-0.149,0],[-0.061,-0.012],[-0.067,0.006],[-0.198,-0.048],[-0.151,-0.071],[-0.063,-0.013],[-0.066,0.006],[-0.146,-0.025],[-0.126,-0.021],[-0.295,-0.145],[-0.048,-0.008],[-0.085,0]],\"v\":[[226.975,69.674],[226.605,69.674],[226.214,69.773],[225.819,69.722],[225.819,70.461],[225.918,70.856],[226.702,71.052],[227.095,71.249],[227.49,71.343],[227.49,71.741],[227.095,71.937],[226.214,71.937],[225.425,71.937],[225.032,72.133],[224.54,72.525],[223.657,73.216],[223.168,73.512],[222.676,73.804],[222.283,74.294],[222.283,74.493],[222.381,74.883],[222.381,75.672],[222.283,76.062],[222.184,76.557],[221.889,76.946],[221.249,76.946],[219.723,76.654],[219.527,76.261],[219.134,76.261],[218.155,76.261],[217.952,75.379],[217.193,75.379],[216.381,75.575],[216.022,75.568],[215.598,75.575],[214.811,75.971],[214.61,76.359],[214.217,76.751],[213.926,77.145],[213.572,77.134],[213.137,77.145],[212.452,78.229],[212.352,78.621],[211.957,79.113],[211.772,79.112],[211.566,79.113],[210.777,79.113],[210.777,79.799],[210.975,80.192],[211.368,80.487],[211.566,80.908],[211.566,81.667],[209.845,81.667],[209.892,81.571],[209.795,80.787],[209.845,80.388],[208.741,80.388],[208.321,80.487],[207.926,80.687],[207.634,81.079],[207.535,81.865],[207.535,83.142],[207.434,83.533],[207.042,83.928],[206.647,84.424],[206.353,84.813],[206.254,85.206],[205.861,85.404],[205.176,86.191],[204.978,86.587],[204.587,86.781],[204.189,86.978],[203.798,87.174],[203.405,87.174],[202.91,87.269],[201.913,87.277],[201.145,87.269],[200.65,87.37],[199.668,87.765],[199.176,88.061],[198.615,88.055],[197.999,88.061],[197.509,88.455],[196.524,88.941],[195.243,89.53],[194.754,89.731],[194.262,90.516],[194.262,91.304],[194.064,91.695],[193.863,91.696],[193.676,91.695],[193.277,91.499],[192.884,91.4],[192.493,91.304],[192.493,90.91],[192.197,90.516],[191.902,91.304],[191.508,91.499],[191.508,91.895],[191.508,92.285],[191.61,92.677],[191.61,93.564],[191.61,93.958],[191.311,94.351],[190.92,94.742],[190.92,95.136],[191.017,95.925],[191.311,96.318],[191.709,96.614],[192.004,97.397],[192.785,98.58],[192.689,98.972],[192.295,98.679],[192.046,98.679],[191.806,98.679],[191.408,98.383],[191.017,98.282],[190.624,98.482],[190.624,99.243],[190.92,99.66],[191.61,100.446],[191.902,100.839],[192.295,101.132],[192.689,101.53],[192.884,101.921],[192.884,102.805],[193.18,103.688],[193.475,104.18],[193.772,105.166],[193.868,105.658],[193.868,106.147],[194.262,107.032],[194.559,107.425],[195.147,108.406],[195.345,108.806],[195.443,109.198],[195.443,110.47],[195.738,111.357],[195.934,111.747],[196.033,112.264],[196.033,113.913],[195.243,113.913],[194.457,114.402],[194.064,114.602],[193.676,115.094],[193.772,115.486],[194.949,115.682],[195.443,116.471],[195.835,116.667],[196.228,116.866],[197.012,117.255],[197.408,117.353],[198.194,117.749],[198.832,117.749],[199.473,117.749],[200.258,117.551],[200.65,117.551],[201.145,117.157],[201.537,116.961],[201.832,116.569],[201.931,116.175],[202.324,115.877],[202.616,115.486],[203.405,115.389],[204.189,115.29],[204.587,114.898],[205.371,114.802],[207.139,115.094],[208.025,115.486],[208.517,115.587],[209.207,115.682],[209.795,115.587],[210.188,115.194],[210.582,114.802],[211.072,114.011],[211.566,113.521],[213.334,112.143],[213.728,112.043],[214.121,111.851],[214.512,111.65],[214.908,111.65],[215.301,111.65],[215.694,111.851],[216.085,112.143],[216.876,112.143],[217.66,112.143],[218.056,111.851],[218.939,111.063],[219.43,110.766],[219.723,110.375],[220.017,109.981],[220.214,109.981],[220.41,109.981],[221.447,109.786],[222.184,109.883],[222.84,109.877],[223.559,109.883],[224.344,110.177],[224.74,110.375],[225.129,110.669],[225.819,111.063],[226.433,110.912],[226.803,110.968],[227.587,110.968],[228.475,110.968],[228.866,110.968],[229.261,111.161],[229.556,111.555],[229.947,112.043],[230.051,112.439],[230.051,113.618],[231.522,113.913],[231.816,114.306],[232.011,115.094],[232.111,116.373],[232.21,116.763],[232.504,117.157],[232.897,117.157],[234.077,116.471],[234.178,116.075],[234.96,115.486],[235.157,115.094],[235.551,114.802],[235.848,114.402],[236.144,113.618],[236.34,113.225],[237.126,113.521],[237.421,113.913],[236.829,114.702],[236.436,116.004],[236.533,116.763],[236.928,116.667],[237.024,116.274],[237.421,115.977],[237.814,116.175],[238.206,116.175],[238.206,117.331],[238.009,117.848],[238.009,118.237],[237.814,119.419],[237.986,119.426],[238.206,119.419],[238.6,119.027],[239.092,118.533],[239.684,118.731],[239.779,119.617],[240.566,120.306],[240.959,120.5],[241.055,121.092],[241.055,121.287],[240.959,121.679],[240.959,122.466],[240.959,122.859],[241.551,123.547],[242.332,124.041],[242.728,124.334],[243.517,124.43],[244.793,124.527],[245.092,124.925],[245.482,125.022],[245.876,125.319],[246.271,125.613],[247.251,125.711],[248.827,125.219],[249.219,123.745],[249.98,123.745],[250.986,124.527],[250.986,124.925],[251.381,125.711],[252.264,126.005],[253.447,125.219],[253.837,124.925],[254.723,124.334],[255.116,124.041],[256.123,123.745],[256.689,123.844],[258.827,123.769],[259.246,123.547],[259.639,123.351],[259.639,122.959],[260.033,122.174],[260.132,120.896],[260.918,120.5],[261.308,119.91],[261.308,119.718],[261.014,119.223],[261.014,118.584],[261.21,117.058],[261.408,116.667],[261.507,116.274],[261.702,115.877],[262.392,115.094],[262.783,114.802],[263.178,114.503],[263.371,114.109],[263.576,113.718],[263.576,113.322],[263.671,112.932],[263.965,112.533],[264.358,112.143],[264.751,111.947],[264.964,111.925],[265.243,111.851],[265.243,111.357],[265.342,110.968],[265.439,110.572],[265.439,109.688],[266.03,108.702],[266.522,107.817],[266.816,106.638],[266.917,106.248],[267.009,105.879],[267.009,103.862],[266.717,103.492],[266.522,103.101],[266.126,102.708],[265.831,102.314],[265.831,101.921],[265.831,101.53],[266.225,100.74],[266.225,99.956],[266.03,99.857],[266.03,98.679],[266.03,98.282],[265.637,97.792],[265.045,97.004],[264.751,96.614],[264.751,96.219],[264.556,95.825],[264.358,95.43],[263.965,95.136],[263.275,94.45],[262.882,94.155],[262.392,93.958],[262.098,93.49],[262.098,91.596],[261.308,91.499],[260.132,91.499],[259.639,91.304],[259.246,91.108],[258.655,90.322],[258.655,89.929],[258.556,89.53],[258.556,88.65],[258.376,88.661],[258.167,88.65],[257.772,88.455],[257.772,87.662],[257.379,87.566],[256.983,87.37],[256.199,86.978],[255.9,86.587],[255.507,86.291],[255.313,85.896],[254.822,85.6],[253.642,85.206],[253.149,85.011],[252.756,84.618],[252.756,83.832],[252.264,83.043],[252.264,82.554],[252.167,82.159],[251.973,81.766],[251.973,81.373],[251.973,80.983],[251.873,80.192],[251.873,79.799],[251.28,79.113],[250.79,78.721],[250.691,78.132],[250.887,77.342],[250.199,76.557],[249.806,76.557],[249.413,76.557],[249.02,76.359],[248.134,76.164],[247.743,75.971],[247.743,75.575],[247.743,75.18],[247.548,74.789],[247.548,74.393],[247.548,73.216],[247.154,72.82],[247.055,72.426],[246.66,72.035],[246.66,71.642],[246.568,70.856],[246.464,70.461],[245.777,69.773],[245.55,69.763],[245.383,69.773],[245.283,70.165],[245.184,70.952],[245.184,71.343],[244.894,71.741],[244.598,72.133],[244.107,72.92],[243.813,73.316],[243.714,74.101],[243.714,74.493],[244.007,74.883],[244.007,75.672],[244.007,76.455],[243.908,77.05],[243.714,77.54],[243.418,77.955],[243.418,81.251],[243.223,81.766],[242.824,81.965],[242.431,82.352],[241.842,82.455],[240.858,82.261],[240.658,82.26],[240.467,82.261],[240.074,81.965],[239.684,81.667],[239.684,81.276],[239.288,80.983],[237.912,79.997],[236.928,79.605],[236.436,79.408],[235.848,78.524],[235.652,78.132],[235.436,78.125],[235.254,78.132],[234.865,78.033],[234.641,78.039],[234.373,78.033],[233.978,77.838],[233.585,77.54],[233.681,77.175],[233.585,76.751],[233.783,75.745],[233.783,75.575],[233.585,75.18],[233.392,74.789],[233.585,74.393],[233.978,74.197],[234.077,73.804],[234.373,73.412],[234.668,72.92],[235.454,72.231],[235.551,71.839],[235.157,71.839],[234.373,71.642],[233.488,71.446],[233.095,71.446],[231.816,71.446],[231.326,71.249],[230.931,71.052],[230.537,71.052],[230.342,71.052],[230.146,71.052],[229.754,70.657],[229.358,70.461],[229.158,70.461],[228.965,70.461],[228.574,70.263],[228.181,70.165],[227.392,69.674],[227.258,69.663]],\"c\":true},\"ix\":2},\"nm\":\"Path 130\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":130,\"ty\":\"sh\",\"ix\":131,\"ks\":{\"a\":0,\"k\":{\"i\":[[0.338,-0.023],[0.34,0],[0,-0.245],[-0.197,-0.12],[-0.146,0],[-0.149,0.024],[-0.296,0.024],[0,0],[-0.297,0.022],[0,0],[0,0]],\"o\":[[-0.347,0.029],[-0.199,0.153],[0,0.251],[0.121,0.074],[0.171,0],[0.268,-0.048],[0,0],[0.295,-0.023],[0,0],[0,0],[-0.319,0.075]],\"v\":[[223.464,70.065],[222.579,70.065],[222.184,70.56],[222.381,71.148],[222.772,71.249],[223.168,71.052],[223.952,70.952],[224.344,70.952],[225.129,70.856],[225.129,70.065],[224.344,69.869]],\"c\":true},\"ix\":2},\"nm\":\"Path 131\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":131,\"ty\":\"sh\",\"ix\":132,\"ks\":{\"a\":0,\"k\":{\"i\":[[0.096,-0.07],[0,0]],\"o\":[[0,0],[-0.146,0.025]],\"v\":[[222.579,70.065],[222.969,69.97]],\"c\":true},\"ix\":2},\"nm\":\"Path 132\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":132,\"ty\":\"sh\",\"ix\":133,\"ks\":{\"a\":0,\"k\":{\"i\":[[0.046,-0.244],[0.098,-0.248],[0.244,-0.296],[0.197,-0.248],[0.147,-0.293],[0.099,-0.242],[0.099,-0.248],[0.167,0.013],[0.073,-0.121],[0.492,-0.341],[0.25,0],[0.282,0.023],[0.262,-0.021],[0.494,-0.293],[0.148,-0.246],[0.048,-0.246],[0.048,-0.247],[0,-0.687],[0,-0.289],[-0.099,-0.541],[-0.049,-0.347],[0,-0.293],[0.148,-0.248],[0.165,0.058],[0.07,-0.097],[0.147,-0.296],[0.048,-0.295],[0.147,-0.54],[0.048,-0.339],[0,0],[-0.098,-0.442],[0,-0.296],[0,0],[0,-0.3],[0,-0.588],[-0.295,0],[-0.591,0],[-0.248,-0.049],[-0.136,0.013],[-0.122,-0.024],[-0.3,0],[-0.294,0],[-0.171,-0.003],[-0.305,0.204],[-0.194,0.292],[-0.047,0.292],[0,0.298],[-0.148,0.886],[-0.048,0.241],[-0.149,0.348],[-0.051,0.341],[0,0.589],[-0.1,0.544],[-0.246,0.248],[-0.244,0.296],[0,0.392],[0,0.786],[-0.146,0.442],[0,0.344],[0,0],[0,0.295],[0,0],[-0.147,0.345],[-0.052,0.244],[0,0],[0.047,0.791],[0.047,0.538],[0.047,0.248],[0.296,0.244],[0.347,0.15],[0.249,0.099]],\"o\":[[-0.048,0.244],[-0.147,0.34],[-0.248,0.296],[-0.202,0.244],[-0.096,0.248],[-0.1,0.244],[-0.05,0.124],[-0.165,-0.013],[-0.295,0.494],[-0.196,0.101],[-0.3,0.057],[-0.224,-0.017],[-0.589,0.05],[-0.292,0.146],[-0.148,0.242],[-0.049,0.241],[-0.148,0.639],[0,0.296],[0,0.593],[0.052,0.341],[0.048,0.243],[0,0.296],[-0.076,0.126],[-0.155,-0.054],[-0.196,0.244],[-0.146,0.291],[-0.1,0.54],[-0.049,0.347],[0,0],[0,0.488],[0.047,0.245],[0,0],[0,0.296],[0.05,0.588],[0.294,0],[0.593,0],[0.297,0],[0.123,0.027],[0.133,-0.012],[0.246,0.054],[0.293,0],[0.181,-0.015],[0.384,0.008],[0.292,-0.195],[0.147,-0.249],[0.05,-0.245],[0.05,-0.931],[0.05,-0.244],[0.097,-0.348],[0.145,-0.34],[0.096,-0.541],[0,-0.589],[0.046,-0.34],[0.296,-0.29],[0.2,-0.25],[0,-0.785],[0,-0.496],[0.098,-0.293],[0,0],[0,-0.296],[0,0],[0,-0.391],[0.099,-0.245],[0,0],[0,-0.79],[0,-0.587],[0,-0.248],[-0.049,-0.345],[-0.295,-0.244],[-0.242,-0.099],[0,0.296]],\"v\":[[69.703,73.116],[69.703,73.905],[68.918,74.493],[68.329,75.279],[67.539,75.868],[67.344,76.654],[67.344,77.443],[66.966,77.542],[66.557,77.638],[65.965,79.211],[65.178,79.211],[64.326,79.224],[63.607,79.211],[62.034,79.605],[61.249,79.997],[61.249,80.787],[61.249,81.571],[60.462,83.142],[60.656,83.928],[60.656,85.503],[61.249,86.291],[61.249,87.074],[61.249,87.863],[60.84,87.874],[60.462,87.863],[60.066,88.65],[59.676,89.434],[59.676,91.007],[59.083,91.793],[59.083,92.189],[59.478,93.368],[59.676,94.155],[59.676,94.938],[59.871,95.73],[59.871,97.202],[60.656,97.3],[62.23,97.202],[62.626,97.887],[63.022,97.888],[63.411,97.887],[64.199,98.084],[64.984,97.887],[65.514,97.879],[66.557,97.692],[67.145,96.91],[67.539,96.119],[67.539,95.332],[67.539,92.973],[67.734,92.189],[68.329,91.4],[68.918,90.615],[68.918,89.044],[68.918,87.465],[69.703,86.877],[70.682,86.291],[71.471,85.699],[70.883,83.735],[71.276,82.554],[71.671,81.766],[71.671,80.983],[71.471,80.192],[71.471,79.799],[72.257,79.211],[72.456,78.425],[72.456,78.033],[72.062,76.062],[72.062,74.493],[72.062,73.705],[71.276,73.116],[70.487,72.525],[69.703,72.327]],\"c\":true},\"ix\":2},\"nm\":\"Path 133\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":133,\"ty\":\"sh\",\"ix\":134,\"ks\":{\"a\":0,\"k\":{\"i\":[[0.039,-0.004],[0.063,0.014],[0,0],[-0.095,-0.15],[-0.075,-0.124],[-0.127,-0.101],[-0.049,-0.196],[-0.049,-0.273],[-0.095,-0.145],[-0.144,-0.095],[-0.124,-0.072],[-0.466,-0.223],[-0.296,-0.119],[-0.147,-0.045],[-0.172,0],[0,0],[0.027,0.124],[0.1,0.148],[0.147,0.102],[0.122,0.05],[0.197,0.124],[0.22,0.123],[0.121,0.074],[0.073,0.201],[0.024,0.125],[0.296,0.222],[0.37,0.248],[0.196,0.05],[0.025,0]],\"o\":[[-0.069,0.006],[0,0],[0.097,0.15],[0.076,0.123],[0.073,0.12],[0.146,0.121],[0.05,0.271],[0.023,0.172],[0.101,0.145],[0.124,0.074],[0.439,0.295],[0.297,0.148],[0.146,0.052],[0.147,0.048],[0,0],[-0.02,-0.123],[-0.048,-0.171],[-0.099,-0.146],[-0.096,-0.046],[-0.221,-0.097],[-0.224,-0.122],[-0.124,-0.076],[-0.175,-0.1],[-0.024,-0.117],[-0.121,-0.367],[-0.343,-0.247],[-0.17,-0.096],[-0.025,-0.004],[-0.038,0]],\"v\":[[287.269,87.372],[287.068,87.37],[286.379,87.465],[286.673,87.863],[286.87,88.259],[287.267,88.455],[287.657,88.846],[287.657,89.633],[287.949,90.026],[288.245,90.417],[288.641,90.615],[289.92,91.206],[290.704,91.596],[291.097,91.793],[291.514,91.99],[292.374,91.99],[292.374,91.596],[292.079,91.206],[291.785,90.808],[291.392,90.712],[290.803,90.516],[290.311,90.026],[289.92,89.929],[289.525,89.53],[289.525,89.139],[288.835,88.354],[287.949,87.662],[287.46,87.37],[287.386,87.365]],\"c\":true},\"ix\":2},\"nm\":\"Path 134\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":134,\"ty\":\"sh\",\"ix\":135,\"ks\":{\"a\":0,\"k\":{\"i\":[[0,-0.244],[-0.124,-0.272],[-0.07,-0.145],[-0.219,-0.294],[-0.341,-0.268],[-0.099,-0.124],[-0.073,-0.147],[-0.051,-0.124],[-0.076,-0.149],[0,-0.295],[-0.047,-0.145],[-0.049,-0.145],[0,-0.194],[0,0],[0,0],[-0.05,-0.392],[0,-0.15],[0,0],[0,0],[0,0],[0,0],[-0.173,0.393],[-0.126,0.118],[-0.121,0.125],[-0.07,0.175],[-0.044,0.122],[-0.126,0.295],[-0.026,0.146],[0,0.291],[0,0],[-0.049,0.174],[-0.048,0.145],[-0.075,0.172],[-0.075,0.123],[-0.12,0.124],[-0.078,-0.025],[-0.036,0.047],[0,0.173],[0,0.15],[0.074,0.171],[0.271,0],[0.174,-0.121],[0.075,-0.098],[0.246,0],[0.393,0.027],[0,0],[0.144,0],[0.147,-0.024],[0,0],[0,0.323],[0.222,0.244],[0.196,0.118],[0.073,-0.017],[0.057,0.022],[0.046,-0.171],[0.023,-0.122],[0.074,-0.168],[0.126,0.1],[0.095,0.145],[0,0.242],[-0.023,0.217],[0,0.147],[0.049,0.099],[0.084,-0.023],[0.047,0.035],[0.098,0.1],[0.122,0.145],[0.098,0.125],[0.124,0.176],[0.096,0.169],[0.104,0.149],[0.169,0.075],[0.22,0]],\"o\":[[0,0.324],[0.05,0.149],[0.173,0.347],[0.273,0.346],[0.119,0.073],[0.097,0.125],[0.048,0.121],[0.075,0.172],[0,0.295],[0,0.177],[0.05,0.148],[0.072,0.177],[0,0],[0,0],[-0.02,0.392],[0,0.148],[0,0],[0,0],[0,0],[0,0],[0.024,-0.443],[0.074,-0.175],[0.122,-0.126],[0.123,-0.121],[0.054,-0.119],[0.15,-0.294],[0.046,-0.15],[0.047,-0.268],[0,0],[0.027,-0.201],[0.051,-0.151],[0.051,-0.172],[0.045,-0.124],[0.074,-0.147],[0.051,-0.05],[0.075,0.024],[0.101,-0.123],[0,-0.146],[0,-0.193],[-0.097,-0.228],[-0.246,0],[-0.099,0.076],[-0.147,0.176],[-0.391,0],[0,0],[-0.146,0],[-0.172,0],[0,0],[0.119,-0.295],[0,-0.344],[-0.147,-0.173],[-0.065,-0.041],[-0.062,0.014],[-0.075,0.172],[-0.024,0.124],[-0.049,0.171],[-0.12,-0.072],[-0.145,-0.121],[-0.151,-0.198],[0,-0.221],[0,-0.147],[0,-0.144],[-0.027,-0.051],[-0.076,0.02],[-0.126,-0.099],[-0.124,-0.118],[-0.099,-0.123],[-0.123,-0.171],[-0.124,-0.17],[-0.099,-0.147],[-0.096,-0.146],[-0.174,-0.073],[-0.242,0]],\"v\":[[303.094,117.058],[303.387,117.848],[303.582,118.237],[304.072,119.123],[304.96,119.91],[305.353,120.107],[305.548,120.5],[305.647,120.896],[305.943,121.287],[305.845,122.342],[305.943,122.761],[306.139,123.152],[306.434,123.573],[306.434,126.053],[304.465,126.053],[304.368,127.086],[304.465,127.482],[304.465,127.923],[306.999,127.923],[306.999,131.167],[308.694,131.167],[308.892,130.038],[309.287,129.745],[309.68,129.445],[310.069,129.149],[310.168,128.758],[310.566,127.973],[310.762,127.578],[310.762,126.795],[312.137,126.795],[312.137,126.3],[312.332,125.908],[312.629,125.515],[312.629,125.123],[312.92,124.729],[313.131,124.728],[313.314,124.729],[313.514,124.334],[313.415,123.938],[313.314,123.453],[312.725,123.055],[312.137,123.253],[312.137,123.645],[311.496,123.745],[310.467,123.645],[309.973,123.645],[309.581,123.547],[309.188,123.721],[309.09,122.859],[309.384,122.071],[308.793,121.386],[308.4,120.896],[308.189,120.89],[308.008,120.896],[307.714,121.287],[307.714,121.679],[307.415,122.071],[307.022,121.875],[306.73,121.485],[306.533,120.896],[306.632,120.306],[306.73,119.91],[306.632,119.518],[306.441,119.512],[306.238,119.518],[306.04,119.123],[305.647,118.829],[305.451,118.436],[305.059,118.041],[304.764,117.551],[304.465,117.157],[304.176,116.763],[303.582,116.667]],\"c\":true},\"ix\":2},\"nm\":\"Path 135\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":135,\"ty\":\"sh\",\"ix\":136,\"ks\":{\"a\":0,\"k\":{\"i\":[[0.017,-0.008],[0.124,-0.12],[0,-0.175],[-0.271,-0.413],[0,0],[0,0],[0.103,0]],\"o\":[[-0.151,0.075],[-0.119,0.124],[0,0.515],[0,0],[0,0],[-0.125,0],[-0.019,0]],\"v\":[[248.727,127.187],[248.332,127.382],[248.134,127.777],[248.727,128.954],[249.118,128.856],[249.118,127.282],[248.78,127.176]],\"c\":true},\"ix\":2},\"nm\":\"Path 136\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":136,\"ty\":\"sh\",\"ix\":137,\"ks\":{\"a\":0,\"k\":{\"i\":[[0.042,-0.006],[0.054,0.013],[0.147,0],[-0.022,-0.126],[-0.07,-0.125],[-0.149,-0.099],[-0.069,0.021],[-0.051,-0.051],[-0.049,-0.119],[-0.025,-0.12],[0,0],[0,0],[0.099,0.122],[0.075,0.125],[0.122,0.146],[0.099,0.048],[0.033,0]],\"o\":[[-0.063,0.009],[-0.128,-0.026],[0,0.147],[0.029,0.116],[0.096,0.147],[0.046,0.036],[0.076,-0.024],[0.099,0.097],[0.05,0.125],[0,0],[0,0],[0,-0.172],[-0.096,-0.125],[-0.098,-0.147],[-0.077,-0.101],[-0.025,-0.012],[-0.037,0]],\"v\":[[256.48,127.377],[256.298,127.382],[255.9,127.676],[255.9,128.073],[255.9,128.464],[256.298,128.758],[256.483,128.753],[256.689,128.758],[256.788,129.149],[256.886,129.545],[257.574,129.545],[257.574,128.784],[257.475,128.365],[257.082,128.167],[256.788,127.777],[256.689,127.382],[256.6,127.365]],\"c\":true},\"ix\":2},\"nm\":\"Path 137\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":137,\"ty\":\"sh\",\"ix\":138,\"ks\":{\"a\":0,\"k\":{\"i\":[[0.248,-0.076],[0.151,-0.126],[0.072,-0.097],[-0.019,-0.121],[-0.072,-0.32],[0,-0.121],[0,0],[-0.079,-0.146],[-0.173,-0.096],[-0.122,-0.097],[-0.173,-0.302],[-0.051,-0.123],[-0.071,-0.148],[-0.173,-0.339],[-0.198,-0.273],[-0.172,0],[0,0],[0.019,0.468],[0,0.079],[0,0],[0,0],[0,0.319],[-0.103,0.123],[-0.097,0.051],[-0.025,0.194],[0,0.143],[0,0.177],[0,0.148],[0,0.151],[0,0],[0.148,-0.024],[0.08,0.006],[0.084,-0.012],[0.168,0],[0.119,0.05],[0.126,0.099],[0.123,0.122],[0.121,0.12],[0.244,0]],\"o\":[[-0.17,0.049],[-0.096,0.07],[0.024,0.144],[0.101,0.321],[0.027,0.124],[0,0],[0,0.172],[0.097,0.195],[0.125,0.073],[0.271,0.194],[0.071,0.121],[0.068,0.171],[0.197,0.321],[0.145,0.301],[0.07,0.12],[0,0],[0.024,-0.471],[0,-0.07],[0,0],[0,0],[0,-0.32],[0,-0.171],[0.071,-0.095],[0.173,-0.124],[0.024,-0.123],[0,-0.177],[0,-0.147],[0,-0.148],[0,0],[-0.171,0],[-0.087,0.013],[-0.08,-0.006],[-0.148,0.026],[-0.151,0],[-0.173,-0.072],[-0.124,-0.097],[-0.126,-0.127],[-0.173,-0.177],[-0.269,0]],\"v\":[[250.691,129.545],[250.199,129.645],[250.103,130.038],[249.806,130.528],[250.199,131.316],[250.199,131.709],[250.199,132.101],[250.4,132.494],[250.79,132.887],[251.184,133.083],[251.873,133.775],[251.973,134.166],[252.264,134.557],[252.858,135.341],[253.249,136.135],[253.665,136.231],[254.574,136.231],[254.626,135.047],[254.574,134.851],[256.199,134.851],[256.199,133.847],[255.9,133.083],[256.1,132.689],[256.493,132.594],[256.886,132.2],[256.837,131.834],[256.886,131.411],[256.788,131.02],[256.837,130.627],[254.55,130.627],[254.133,130.823],[253.884,130.824],[253.642,130.823],[253.249,131.02],[252.858,130.921],[252.559,130.528],[252.167,130.234],[251.873,129.843],[251.381,129.445]],\"c\":true},\"ix\":2},\"nm\":\"Path 138\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":138,\"ty\":\"sh\",\"ix\":139,\"ks\":{\"a\":0,\"k\":{\"i\":[[0.369,-0.026],[0,0],[0,0],[0.123,-0.099],[0.074,-0.146],[0,-0.146],[0.023,-0.464],[0.269,-0.268],[0.345,-0.173],[0.296,-0.176],[0.347,-0.169],[0,0],[0.101,-0.05],[0.118,-0.096],[0.123,-0.101],[0.147,-0.075],[0.123,-0.052],[0.244,-0.199],[0.077,-0.12],[0.219,-0.242],[0.147,-0.099],[0.144,-0.072],[0.175,-0.048],[0.068,0.006],[0.061,-0.011],[0.146,-0.027],[0.022,-0.121],[0.027,-0.123],[0,-0.193],[-0.268,-0.177],[-0.146,-0.025],[-0.489,0],[-0.246,-0.121],[-0.149,-0.1],[-0.149,-0.099],[-0.318,0],[-0.151,0.021],[-0.075,0.022],[-0.122,0.096],[-0.117,0.077],[-0.148,0.047],[-0.465,0],[-0.102,0.366],[-0.099,0.144],[-0.296,0.248],[-0.075,0.2],[-0.052,0.275],[-0.077,0.269],[-0.047,0.146],[-0.051,0.118],[-0.146,0.098],[-0.319,0.048],[-0.146,0],[-0.464,0.025],[-0.145,0.029],[0.074,0.124],[0,0.242],[-0.221,0.318],[-0.346,0.171],[-0.126,0.046],[-0.122,0.099],[-0.05,0.196],[-0.026,0.121],[0,0.151],[0,0.165],[0,0],[0.421,0.023],[0.224,0.173],[0.049,0.097],[0.074,0.144],[0.147,0.098],[0.248,0]],\"o\":[[0,0],[0,0],[-0.147,0.074],[-0.146,0.099],[-0.075,0.126],[-0.05,0.465],[-0.026,0.394],[-0.269,0.274],[-0.319,0.17],[-0.321,0.193],[0,0],[-0.122,0.052],[-0.147,0.095],[-0.123,0.098],[-0.124,0.097],[-0.12,0.074],[-0.318,0.127],[-0.122,0.097],[-0.171,0.273],[-0.098,0.128],[-0.125,0.072],[-0.176,0.077],[-0.059,0.012],[-0.067,-0.005],[-0.124,0.024],[0,0.148],[-0.025,0.126],[-0.052,0.172],[0,0.32],[0.122,0.071],[0.469,0.126],[0.296,0],[0.175,0.072],[0.146,0.096],[0.248,0.15],[0.171,0],[0.072,0],[0.126,-0.072],[0.126,-0.103],[0.127,-0.068],[0.417,-0.17],[0,-0.39],[0.023,-0.178],[0.197,-0.321],[0.145,-0.123],[0.097,-0.268],[0.05,-0.27],[0.047,-0.153],[0.051,-0.124],[0.069,-0.174],[0.247,-0.199],[0.122,-0.03],[0.468,0],[0.152,0],[-0.07,-0.147],[-0.124,-0.199],[0,-0.42],[0.222,-0.294],[0.124,-0.049],[0.172,-0.079],[0.148,-0.125],[0.025,-0.118],[0.025,-0.125],[0,-0.168],[0,0],[-0.416,0],[-0.288,0],[-0.1,-0.075],[-0.07,-0.122],[-0.074,-0.148],[-0.196,-0.126],[-0.37,0]],\"v\":[[301.42,129.645],[301.42,131.512],[300.634,131.903],[300.24,132.101],[299.848,132.394],[299.848,132.791],[299.947,133.968],[299.357,134.753],[298.569,135.443],[297.684,135.839],[296.897,136.424],[296.504,136.62],[296.111,136.723],[295.819,137.115],[295.423,137.412],[295.126,137.805],[294.736,137.9],[293.85,138.198],[293.65,138.587],[293.261,139.373],[292.868,139.673],[292.478,139.865],[292.079,140.162],[291.887,140.162],[291.689,140.162],[291.296,140.262],[291.296,140.652],[291.197,141.047],[290.9,141.44],[291.392,142.131],[291.785,142.326],[293.064,142.326],[293.85,142.422],[294.243,142.718],[294.538,143.112],[295.374,143.31],[295.819,143.31],[296.012,143.112],[296.405,142.917],[296.6,142.52],[296.996,142.326],[298.175,142.225],[298.277,141.247],[298.569,140.852],[299.357,140.162],[299.751,139.769],[299.947,138.98],[300.145,138.198],[300.339,137.805],[300.441,137.412],[300.829,137.115],[301.618,136.723],[302.008,136.723],[303.188,136.723],[303.582,136.62],[303.387,136.231],[302.993,135.742],[303.483,134.753],[304.272,134.166],[304.665,134.071],[304.96,133.676],[305.353,133.277],[305.353,132.887],[305.353,132.494],[305.548,132.13],[305.548,130.921],[304.465,130.921],[303.681,130.823],[303.582,130.43],[303.387,130.038],[302.993,129.745],[302.378,129.545]],\"c\":true},\"ix\":2},\"nm\":\"Path 139\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":139,\"ty\":\"sh\",\"ix\":140,\"ks\":{\"a\":0,\"k\":{\"i\":[[0.176,0.003],[0.056,-0.045],[0.125,-0.095],[0.081,0.017],[0.045,-0.02],[0.048,-0.073],[0,0],[0,0],[0,0.146]],\"o\":[[-0.157,-0.003],[-0.124,0.099],[-0.055,0.044],[-0.066,-0.014],[-0.097,0.052],[0,0],[0,0],[0,-0.145],[-0.065,0.064]],\"v\":[[293.723,144.252],[293.36,144.29],[293.163,144.68],[292.944,144.69],[292.769,144.68],[292.671,145.028],[294.243,145.028],[294.243,144.586],[294.147,144.195]],\"c\":true},\"ix\":2},\"nm\":\"Path 140\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ty\":\"gf\",\"o\":{\"a\":0,\"k\":35,\"ix\":10},\"r\":1,\"bm\":0,\"g\":{\"p\":2,\"k\":{\"a\":0,\"k\":[0,1,1,1,1,0,0,0],\"ix\":9}},\"s\":{\"a\":0,\"k\":[0,0],\"ix\":5},\"e\":{\"a\":0,\"k\":[0,250],\"ix\":6},\"t\":1,\"nm\":\"Gradient Fill 1\",\"mn\":\"ADBE Vector Graphic - G-Fill\",\"hd\":false},{\"ty\":\"tr\",\"p\":{\"a\":0,\"k\":[337.65,165.187],\"ix\":2},\"a\":{\"a\":0,\"k\":[0,0],\"ix\":1},\"s\":{\"a\":0,\"k\":[100,100],\"ix\":3},\"r\":{\"a\":0,\"k\":0,\"ix\":6},\"o\":{\"a\":0,\"k\":100,\"ix\":7},\"sk\":{\"a\":0,\"k\":0,\"ix\":4},\"sa\":{\"a\":0,\"k\":0,\"ix\":5},\"nm\":\"Transform\"}],\"nm\":\"Group 2\",\"np\":141,\"cix\":2,\"bm\":0,\"ix\":2,\"mn\":\"ADBE Vector Group\",\"hd\":false},{\"ty\":\"gr\",\"it\":[{\"ind\":0,\"ty\":\"sh\",\"ix\":1,\"ks\":{\"a\":0,\"k\":{\"i\":[[0.295,-0.054],[0.068,0.006],[0.061,-0.012],[0.171,-0.124],[0.198,-0.026],[0.173,0],[0,0],[0.195,0],[0,0],[0.147,0],[0.246,0],[0.219,-0.021],[0.441,-0.347],[-0.099,-0.197],[0,-0.196],[0.296,-0.095],[0.297,0],[0.295,0.122],[0.171,0],[0,0],[0.517,0.273],[0.149,0.027],[0.415,0],[0.173,-0.026],[0.122,-0.023],[0.15,-0.102],[0.197,0],[0.319,0],[0,0],[0.194,0.022],[0.245,0],[0.418,-0.15],[0.488,0],[0.095,-0.017],[0.072,-0.014],[0.032,0.002],[0.033,-0.007],[0.109,-0.024],[0.136,-0.039],[0.219,-0.086],[-0.12,-0.149],[-0.109,-0.048],[-0.086,-0.016],[-0.036,0.002],[-0.048,-0.008],[-0.173,-0.113],[-0.084,-0.073],[-0.051,-0.087],[-0.025,-0.087],[-0.024,-0.145],[0,-0.208],[0,0],[0.059,0.048],[0.085,0.026],[0.031,-0.003],[0.033,0.008],[0.097,0.01],[0.083,0.025],[0.101,0.024],[0.033,-0.002],[0.03,0.006],[0.089,0.024],[0.097,0.014],[0.075,0],[0.108,0],[0.16,0],[0.123,-0.061],[0.041,-0.085],[0,-0.089],[-0.012,-0.065],[-0.086,-0.135],[-0.072,-0.062],[-0.098,-0.049],[-0.185,-0.085],[-0.149,-0.062],[-0.062,-0.012],[-0.074,-0.017],[-0.086,-0.012],[-0.172,0],[0,0],[-0.085,-0.01],[-0.076,-0.049],[-0.075,-0.039],[-0.149,-0.15],[-0.061,-0.076],[-0.099,-0.162],[-0.039,-0.098],[-0.009,-0.085],[-0.009,-0.072],[0,-0.11],[0.146,0],[0.074,0],[0.16,0.036],[0.097,0.014],[0.036,-0.002],[0.052,0.008],[0.109,0.037],[0.149,0.059],[0.074,0.028],[0.084,0.025],[0.085,0.038],[0.109,0.037],[0.062,0.012],[0.28,0.036],[0.121,0.021],[0.206,0.073],[0.061,0.02],[0.097,0.061],[0.059,0.036],[0.101,0.063],[0.099,0.063],[0.076,0.072],[0.126,0.036],[0.039,-0.005],[0.044,0.012],[0.072,0.013],[0.061,0.015],[0.109,0],[0,0],[0.096,0.011],[0.159,0.047],[0.126,0.048],[0.243,0],[0.786,0],[-0.024,-0.097],[-0.046,-0.075],[-0.16,-0.165],[-0.199,-0.035],[-0.034,0.005],[-0.049,-0.02],[0,0],[-0.062,-0.061],[-0.147,-0.109],[-0.065,-0.072],[-0.064,-0.071],[-0.061,-0.097],[-0.06,-0.149],[-0.022,-0.063],[-0.037,-0.096],[0,-0.169],[0,0],[0,0],[0.097,0.016],[0.084,0.039],[0.087,0.048],[0.086,0.074],[0.058,0.059],[0.063,0.035],[0.099,0.061],[0.102,0.062],[0.11,0.073],[0.186,0.108],[0.075,0.036],[0.074,0.047],[0.073,0.06],[0.18,0.034],[0.059,0.01],[0.073,0],[0.174,0.09],[0.051,0.075],[0.051,0.074],[0.085,0.048],[0.062,0.023],[0.11,0.026],[0.073,0],[0.162,0],[0,0],[0,0],[-0.062,-0.146],[-0.11,-0.223],[0,-0.128],[0.015,-0.11],[0,-0.098],[0,-0.061],[0,0],[0.025,-0.074],[0.11,-0.314],[0.059,-0.074],[0.075,-0.038],[0.111,0],[0.121,0.05],[0.1,0.071],[0.061,0.159],[0,0.08],[-0.038,0.162],[-0.05,0.069],[-0.133,0.156],[-0.035,0.099],[0,0.086],[0.013,0.061],[0.05,0.089],[0.06,0.099],[0.017,0.103],[0,0],[0,0.063],[0.136,0.097],[0.087,0.048],[0.096,0.065],[0.073,0.061],[0.085,0.022],[0.133,0],[0.118,-0.025],[0.076,-0.01],[0.133,-0.038],[0.071,-0.026],[0.17,-0.112],[0.098,-0.049],[0.073,-0.021],[0.076,-0.015],[0.032,0.003],[0.033,-0.008],[0.084,-0.026],[0.085,-0.039],[0.099,-0.023],[0.171,0],[0.088,0],[0,0],[0.086,-0.027],[0.083,-0.036],[0.073,-0.014],[0.159,0],[0,0],[0.135,0],[0.433,0],[0.089,-0.024],[0.062,-0.028],[0.048,-0.1],[0.012,-0.058],[-0.072,-0.035],[-0.06,-0.014],[-0.077,0],[-0.068,0.003],[-0.087,-0.005],[-0.113,-0.049],[-0.085,-0.059],[-0.051,-0.086],[-0.038,-0.076],[-0.035,-0.071],[-0.101,-0.047],[-0.085,-0.024],[-0.158,-0.039],[-0.072,0],[-0.059,0.004],[-0.079,-0.007],[-0.074,-0.036],[-0.087,-0.051],[-0.147,-0.062],[-0.075,-0.022],[-0.061,-0.037],[-0.126,-0.133],[0,0],[0,0],[0.075,0.02],[0.06,0.013],[0.075,0.025],[0.173,0.087],[0.097,0.061],[0.085,0.049],[0.07,0.062],[0.097,0.017],[0.117,-0.011],[0.101,0.008],[0.099,0],[0,0],[0.088,0.025],[0.124,0.05],[0.16,0.036],[0.075,0.022],[0.187,0.135],[0.072,0.075],[0.061,0.088],[0.06,0.038],[0.09,0.035],[0.073,0],[0.32,-0.085],[0.074,-0.02],[0.086,-0.034],[0.083,-0.038],[0.086,-0.035],[0.085,-0.042],[0.198,-0.065],[0.059,-0.024],[0,-0.131],[-0.111,-0.172],[-0.051,-0.086],[-0.027,-0.073],[0,-0.085],[0,0],[0,0],[0.149,0.059],[0.087,0.063],[0.081,0.051],[0.085,0],[0.858,0.01],[0.052,-0.076],[0.073,-0.136],[0.097,-0.039],[0.135,-0.048],[0.237,-0.049],[0.135,-0.022],[0.135,-0.134],[0,0],[0.194,-0.126],[0.087,-0.024],[0.063,-0.012],[0.146,0],[0.137,-0.012],[0.1,0],[0.086,-0.011],[0.084,-0.05],[0.086,-0.048],[0.086,-0.038],[0.056,-0.021],[0.051,-0.038],[0.086,-0.036],[0.036,0.006],[0.03,-0.009],[0.063,-0.027],[0.051,-0.06],[0.133,-0.194],[0.051,-0.038],[0.049,-0.038],[0,-0.108],[-0.013,-0.145],[0,0],[-0.17,-0.025],[-0.149,-0.111],[-0.073,-0.05],[-0.086,-0.036],[-0.061,0],[-0.199,0],[-0.271,0.031],[-0.136,0.062],[-0.06,0.028],[-0.087,0.049],[-0.125,0],[-0.04,-0.184],[0,-0.146],[-0.026,-0.135],[-0.013,-0.076],[-0.013,-0.059],[0,-0.084],[0,0],[0.295,-0.294],[0.085,-0.06],[0.099,-0.011],[0.248,0],[0,0],[0.1,0],[0.175,-0.013],[0.135,-0.046],[0.11,-0.053],[0.084,-0.026],[0.134,0],[0,0],[0.269,0.037],[0.097,0.024],[0.085,0],[0.173,0],[0.234,-0.053],[0.171,-0.085],[0,-0.076],[0.01,-0.084],[0.156,-0.087],[0.088,0],[0,0],[0.174,-0.086],[0.088,-0.023],[0.206,0],[0.112,0.014],[0.148,0.013],[0.172,0],[0.171,-0.011],[0.11,-0.038],[0.087,-0.012],[0.087,-0.032],[0.036,-0.073],[0.025,-0.073],[0.012,-0.062],[0.022,-0.058],[0.034,-0.059],[0.085,0],[0,0],[0.036,-0.073],[0.048,-0.148],[-0.075,-0.121],[-0.097,-0.149],[-0.122,-0.097],[-0.145,-0.074],[-0.075,0.01],[-0.054,-0.009],[-0.146,0],[-0.122,-0.026],[-0.273,-0.175],[-0.099,-0.121],[0,0],[0,0],[-0.063,-0.025],[-0.075,-0.035],[-0.16,-0.036],[-0.171,0],[-0.112,0],[0,0],[-0.122,0.01],[-0.062,0.009],[-0.161,0.058],[-0.109,0],[0,0],[-0.174,0.027],[-0.174,0],[0,0],[-0.151,0],[-0.062,0],[0,0],[0.098,-0.137],[0.061,-0.038],[0.085,-0.037],[0.133,-0.086],[0.113,-0.024],[0.07,0],[0,0],[0.088,0.01],[0.038,-0.004],[0.045,0.012],[0.086,0.021],[0.097,0],[0,0],[0.232,-0.062],[0.096,-0.04],[0.221,0],[0,0],[0.1,0],[0.11,0.012],[0.208,0.021],[0.137,0],[0,0],[0.077,-0.011],[0.025,-0.193],[0,0],[0.063,-0.049],[0,-0.124],[-0.232,-0.176],[-0.099,-0.065],[-0.098,-0.008],[-0.098,0.008],[-0.107,-0.011],[-0.234,-0.111],[-0.194,-0.062],[-0.149,-0.059],[-0.221,-0.126],[0,0],[0.161,-0.122],[0.048,-0.076],[0.027,-0.063],[-0.088,-0.037],[-0.061,-0.026],[-0.135,-0.072],[-0.062,-0.064],[-0.065,-0.082],[-0.02,-0.049],[-0.064,-0.04],[-0.086,-0.039],[-0.073,-0.037],[-0.074,-0.027],[-0.184,-0.073],[-0.074,-0.039],[-0.098,-0.061],[-0.11,-0.036],[-0.232,0],[0,0],[-0.087,0.012],[-0.086,0.034],[0.037,0.061],[0.064,0.084],[0,0.124],[-0.097,0.059],[-0.063,0],[-0.196,0],[-0.284,-0.023],[-0.159,-0.061],[-0.075,-0.022],[-0.059,-0.013],[-0.086,0],[-0.074,0],[0,0],[0,0],[-0.075,-0.04],[-0.1,-0.037],[-0.193,0],[-0.171,0.087],[-0.073,0.051],[-0.074,0.036],[-0.075,0.028],[-0.059,0.018],[-0.048,0],[-0.079,0.041],[-0.074,0.051],[-0.064,0.036],[-0.135,0],[-0.175,-0.083],[-0.16,-0.085],[-0.084,0],[0,0],[-0.232,-0.01],[-0.06,-0.01],[-0.074,-0.014],[-0.196,-0.165],[-0.084,-0.05],[-0.086,-0.024],[-0.085,0],[0,0],[-0.073,-0.016],[-0.056,-0.022],[-0.222,-0.125],[-0.086,-0.023],[-0.233,0],[0,0],[-0.061,-0.012],[-0.075,-0.054],[-0.162,-0.1],[-0.086,-0.024],[-0.149,-0.015],[0,0],[-0.135,-0.048],[-0.074,-0.053],[0,-0.171],[0,0],[-0.099,-0.148],[-0.061,-0.073],[-0.097,-0.026],[-0.061,-0.013],[-0.047,0.005],[-0.052,-0.014],[-0.095,-0.048],[-0.086,-0.037],[-0.063,-0.083],[-0.038,-0.059],[-0.073,-0.148],[-0.037,-0.047],[-0.065,-0.062],[-0.124,-0.148],[-0.061,-0.09],[-0.073,-0.096],[-0.049,-0.062],[-0.05,-0.074],[-0.063,-0.15],[-0.073,-0.149],[-0.027,-0.072],[-0.173,-0.225],[-0.071,-0.052],[-0.061,-0.046],[0,-0.134],[0,0],[0.025,-0.096],[0,-0.123],[-0.06,-0.095],[0,-0.284],[0,0],[0.061,-0.095],[0,-0.161],[-0.012,-0.136],[0,0],[0,0],[0.184,-0.051],[0.122,-0.114],[0.024,-0.06],[-0.026,-0.297],[0.048,-0.218],[0,0],[0,0],[-0.148,-0.072],[-0.295,-0.025],[0,0],[-0.12,0],[-0.169,0],[0,0],[-0.024,0.196],[-0.022,0.123],[-0.296,0],[-0.146,0],[-0.146,0],[-0.024,-0.196],[-0.024,-0.12],[-0.074,-0.147],[-0.174,-0.097],[-0.172,-0.022],[-0.123,-0.022],[-0.068,0.007],[-0.059,-0.01],[-0.147,-0.072],[-0.119,-0.071],[-0.097,-0.12],[-0.126,-0.148],[-0.049,-0.124],[0,0],[0,0],[0.195,0],[0,0],[0.416,0.196],[0.124,0.072],[0.122,0.072],[0.079,-0.016],[0.048,0.009],[0.298,0.025],[0.343,0],[0.416,-0.174],[-0.147,-0.266],[-0.12,-0.121],[0,-0.222],[0,-0.169],[0.27,-0.075],[0.147,-0.096],[0,-0.271],[-0.199,-0.15],[-0.246,0.03],[-0.167,-0.026],[-0.267,-0.171],[-0.539,0],[-0.148,0.147],[-0.394,0.051],[-0.493,0],[0,0],[0.414,0.148],[0.06,-0.008],[0.069,0.027],[0.147,0.049],[0.075,-0.009],[0.054,0.012],[0.149,0.024],[0,0],[0,0],[-0.148,-0.077],[-0.172,-0.072],[-0.147,-0.022],[-0.12,0],[-0.194,0],[0,0],[-0.245,-0.12],[0,-0.271],[0,0],[0.072,-0.148],[0.048,-0.126],[0,-0.218],[0,0],[-0.101,-0.148],[-0.124,-0.171],[0,-0.176],[0,0],[0,0],[0.147,-0.072],[0.171,-0.101],[0.171,-0.078],[0.173,0],[0,0],[0.17,0.024],[0.172,0],[0,0],[0.198,0.048],[0.198,0],[0.169,-0.069],[0.147,-0.052],[0.122,-0.049],[0.095,-0.049],[0,-0.24],[0,0],[-0.072,-0.171],[-0.172,-0.075],[-0.123,-0.05],[-0.125,-0.046],[-0.147,-0.099],[-0.097,-0.118],[-0.049,-0.293],[0.25,-0.148],[0,-0.242],[-0.2,-0.347],[-0.193,-0.269],[-0.097,-0.124],[-0.223,0],[-0.198,0.101],[-0.173,0.05],[-0.149,0],[0,0],[-0.148,-0.048],[0.048,-0.121],[0.099,-0.1],[0.082,0.02],[0.045,-0.021],[0.098,-0.123],[0.048,-0.125],[0.049,-0.148],[0,-0.243],[-0.048,-0.198],[-0.173,-0.245],[-0.149,-0.07],[-0.151,0],[-0.123,0.051],[-0.124,0.1],[-0.1,0.121],[-0.12,0.073],[-0.148,0],[-0.222,-0.024],[0,0],[0.145,-0.075],[0.122,-0.075],[0.148,-0.074],[0.074,-0.167],[0,-0.224],[-0.097,-0.195],[-0.12,-0.122],[-0.124,-0.145],[-0.345,-0.391],[-0.099,-0.148],[-0.047,-0.15],[-0.023,-0.118],[-0.122,-0.294],[-0.101,-0.271],[-0.295,-0.195],[-0.094,-0.123],[-0.072,-0.175],[-0.119,-0.271],[-0.122,-0.096],[-0.442,-0.148],[-0.298,-0.22],[-0.172,-0.077],[-0.146,0],[0,0],[-0.15,0.024],[-0.221,0],[0,0],[-0.122,-0.023],[-0.059,0.01],[-0.058,-0.043],[-0.047,-0.124],[-0.049,-0.126],[-0.194,-0.099],[-0.201,0],[-0.115,0.009],[-0.149,-0.025],[-0.099,-0.174],[-0.074,-0.123],[-0.194,-0.047],[-0.297,0],[-0.27,0.077],[-0.172,0.074],[-0.125,0.097],[-0.076,0.148],[0,0.124],[0,0],[-0.319,0.516],[-0.25,0.266],[-0.072,0.149],[0,0.247],[0.028,0.22],[0,0.147],[0,0.148],[0.126,0.247],[0.075,0.148],[0.049,0.145],[0,0.142],[-0.42,0.021],[0,0],[-0.148,0],[-0.293,0],[-0.024,0.271],[-0.074,0.122],[-0.121,0.121],[-0.17,0.077],[-0.074,-0.012],[-0.055,0.012],[-0.174,0.073],[0,0],[0,0.248],[0.048,0.196],[0.074,0.15],[0.072,0.12],[0,0.176],[-0.197,0.125],[-0.079,-0.011],[-0.056,0.012],[-0.273,0.074],[-0.126,0.073],[-0.07,0.147],[-0.021,0.124],[0,0.145],[-0.026,0.147],[0,0],[-0.024,0.421],[0,0.15],[0,0],[-0.025,-0.466],[0,-0.172],[-0.318,0],[-0.146,0],[-0.339,0.369],[-0.145,0.15],[-0.198,0.096],[-0.169,0],[0,0],[-0.114,-0.008],[-0.152,0.028],[-0.145,0.071],[-0.073,0.099],[-0.073,0.127],[0,0],[-0.146,0.098],[-0.147,0.098],[-0.098,0.097],[-0.097,0.126],[-0.122,0.099],[-0.098,0.07],[-0.171,0.273],[-0.123,0.096],[-0.097,0.072],[-0.098,0.124],[-0.046,0.104],[-0.123,0.122],[-0.121,0.072],[-0.05,0.193],[0,0.468],[-0.045,0.019],[-0.059,0],[-0.122,-0.046],[-0.038,-0.016],[-0.035,-0.014],[-0.034,-0.014],[-0.08,-0.051],[-0.03,-0.017],[-0.084,-0.071],[-0.043,-0.021],[-0.148,0],[-0.27,-0.077],[-0.296,-0.148],[-0.392,0],[-0.244,0.025],[-0.149,0.048],[-0.294,0.221],[-0.149,0.173],[-0.171,0.123],[-0.321,0.048],[-0.146,-0.009],[-0.118,0.009],[-0.123,0.024],[-0.17,0.019],[-0.073,-0.009],[-0.094,0.026],[-0.146,0.024],[-0.143,0.048],[-0.061,-0.009],[-0.066,0.027],[-0.148,0.075],[-0.123,0.075],[-0.099,0.122],[-0.123,0.198],[-0.15,0.196],[-0.369,0],[0,0],[-0.27,0.176],[-0.149,0.127],[-0.124,0.195],[-0.048,0.124],[0,0],[0.268,-0.249],[0.098,-0.075],[0.246,0],[0,0],[0.246,0.195],[0.298,0.173],[0.121,0],[0,0],[0.615,0.197],[0.125,0.025],[0.149,0.125],[0.076,0.149],[0,0.172],[0,0],[-0.269,0],[-0.162,-0.009],[-0.256,0.028],[-0.12,0],[-0.318,0.123],[-0.219,0.294],[-0.096,-0.05],[-0.099,-0.146],[-0.075,-0.369],[-0.074,-0.146],[-0.074,-0.123],[-0.37,0],[-0.123,0.171],[-0.048,0.1],[-0.318,0.075],[-0.294,0],[-0.344,0.027],[-0.145,0.027],[0.026,0.274],[0.17,0.322],[0.172,0.121],[0.271,0.172],[0.122,0.318],[0.097,0.272],[0.073,0.149],[0.052,0.122],[0.052,0.102],[0.121,0.076],[0.295,0.127],[0.145,0.072],[-0.147,0.1],[-0.124,0.047],[-0.268,-0.199],[-0.145,-0.071],[-0.169,0],[0,0],[-0.148,0],[-0.147,0],[-0.025,0.589],[0,0],[-0.024,0.121],[0,0.171],[0.075,0.124],[0.152,0.076],[0.317,0],[0.271,-0.121],[0.123,-0.101],[0.174,0],[0,0],[-0.221,0.124],[-0.099,0.075],[-0.124,0.073],[-0.052,0.12],[0.296,0.098],[0.148,0.05],[0,0],[0,0],[0,0],[0,0],[-0.124,0.098],[-0.144,0.077],[-0.32,0],[0,0],[-0.442,0],[-0.197,0.103],[-0.124,0.124],[0,0.226],[0.121,0.193],[0.169,0.146],[0.273,0],[0.194,-0.051],[0.146,-0.023],[0.148,0],[0.123,0.049],[0.074,0.147],[0,0.17],[-0.244,0],[-0.147,0],[-0.15,0],[-0.32,0],[-0.296,0.049],[-0.149,0.073],[0,0],[-0.194,0],[-0.173,0],[0,0],[-0.222,0.049],[-0.126,0.048],[-0.075,0.122],[0.367,0.099],[0.067,-0.006],[0.06,0.013],[0.169,0.124],[0.079,0.249],[0,0.149],[0,0.22],[0,0.245],[0,0.148],[0,0.097],[-0.639,0.048],[0,0],[0.22,0.467],[0.026,0.118],[0.024,0.23],[0.466,0.079],[0.172,0.027],[0.123,0.029],[0.147,0.073],[0.122,0.074],[0.1,0.148],[0,0.224],[-0.023,0.051],[-0.122,0.072],[-0.173,0.07],[-0.076,-0.01],[-0.052,0.008],[-0.343,0.022],[-0.147,0],[0,0],[-0.272,-0.05],[-0.148,-0.098],[0,-0.245],[0,0],[0.047,-0.146],[0,-0.243],[-0.273,-0.541],[0,0],[0,0],[-0.125,0.15],[0,0.224],[0,0],[0.121,0.172],[0.27,0],[0.196,-0.051],[0.144,-0.023],[0.269,0],[0,0],[0.194,0],[0.121,0],[0,0],[-0.121,0],[-0.173,0],[0,0],[-0.296,0.075],[-0.149,0.074],[0.122,0.148],[0.224,0.022],[0.117,-0.032],[0.143,0.027],[0.175,0.049],[0.123,0.026],[0.149,0],[0.248,0],[0.368,-0.027],[0.05,-0.269],[0.074,-0.145],[0.059,-0.011],[0.059,0.043],[0.095,0.148],[0,0.148],[-0.095,0.245],[-0.099,0.124],[-0.072,0.099],[-0.075,0.174],[0,0.15],[0,0.294],[-0.05,0.395],[0,0],[-0.246,0.269],[-0.147,0.1],[-0.191,-0.004],[-0.085,0.009],[0,0],[-0.172,0.075],[0.022,0.145],[0,0.221],[-0.121,0.195],[-0.098,0.15],[-0.073,0.125],[-0.148,0.099],[-0.318,0.05],[-0.178,-0.045],[-0.228,0.05],[-0.101,0.075],[-0.072,0.144],[-0.049,0.121],[-0.097,0.124],[-0.148,0.076],[-0.149,0.025],[-0.123,0],[-0.122,0.021],[-0.069,-0.006],[-0.061,0.011],[-0.147,0.099],[0,0],[0,0],[0,0],[-0.317,0.124],[-0.494,0],[-0.222,-0.098],[-0.217,-0.024],[-0.174,0],[0,0],[-0.151,0],[-0.12,0.022],[-0.17,0.048],[-0.125,0.096],[-0.125,0.148],[-0.195,0.169],[-0.173,0.048],[-0.298,0],[0,0],[-0.592,0.073],[-0.123,0.022],[-0.123,0.051],[-0.099,0.175],[-0.05,0.17],[0,0.294],[0.201,0.199],[0.148,0.049],[0.345,0],[0.318,-0.076],[0.198,-0.049],[0.293,0],[0.321,0.124],[0.174,0.049],[0,0],[0.195,0],[0.316,-0.024],[0.082,0.006],[0.084,-0.011],[0.321,-0.099],[0.149,-0.099],[0.078,-0.149],[0.147,-0.27],[0.122,-0.079],[0.125,-0.026],[0.162,0.016],[0.145,-0.011],[0.32,0],[0.271,0.124],[0.148,0.101],[0.391,0],[0.222,-0.1],[0.221,-0.27],[0.121,-0.099],[0.15,-0.047],[0.148,0],[0.131,0.007],[0.176,-0.012],[0.273,-0.097],[0.17,-0.05],[0.318,-0.102],[0.149,-0.097],[0.151,-0.171],[0.392,-0.193],[0.172,0],[0.172,0.024],[-0.126,0.119],[-0.099,0.121],[-0.075,0.121],[-0.075,0.15],[-0.273,0.172],[-0.07,-0.013],[-0.061,0.026],[-0.248,0.098],[0,0.145],[0,0],[-0.173,0.072],[-0.099,0.08],[-0.075,0.147],[0,0.146],[0.025,0.119],[0.074,0.124],[0.148,0.073],[0.145,0],[0,0],[0.148,0],[0.147,0.006],[0.196,-0.013],[0.146,0],[0.491,0.023],[0.174,0.026],[0.027,-0.488],[0,-0.149],[0,-0.127],[0.203,0],[0.196,0.025],[0.273,0],[0.246,-0.052],[0.291,-0.122],[0.121,-0.048],[0.168,-0.07],[0.079,0.011],[0.053,-0.008],[-0.02,0.123],[-0.049,0.147],[-0.147,0.097],[-0.172,0.025],[0,0],[-0.339,0],[-0.269,0.072],[-0.147,0.07],[0,0],[0.174,0.023],[0.074,-0.006],[0.098,0.011],[0.246,0],[0.614,-0.072],[0.294,0],[0.173,0],[0,0],[0.414,0],[0.369,-0.096],[0.172,-0.048],[0.148,-0.05],[0.126,-0.024],[0.226,-0.05],[0.075,0.007],[0.1,-0.013],[0.248,-0.027],[0.072,0.006],[0.099,-0.014],[0.172,-0.05],[0.127,-0.025],[0.196,0],[0.169,0.024],[-0.054,0.124],[-0.222,0.299],[-0.147,0.125],[-0.372,0.072],[-0.195,0],[0,0],[-0.124,0.073],[-0.148,0.098],[-0.169,0],[0,0],[-0.178,0],[-0.267,0.097],[-0.147,0.072],[-0.149,0.071],[-0.081,-0.016],[-0.052,0.009],[-0.145,0.028],[-0.12,0.028],[-0.065,-0.005],[-0.065,0.016],[-0.174,0.023],[-0.245,-0.021],[-0.197,0.01],[-0.196,0.024],[0,0],[0,0],[0.244,0],[0,0],[0.15,0.022],[0.489,0],[0.298,0],[0.367,0.1],[0.145,0.075],[0,0.196],[0,0.17],[0.147,0.026],[0.295,0],[0.072,-0.028],[0.195,0],[0,0],[0.319,0.121],[0.124,0.027],[0.345,0],[0,0],[0,0],[0,0],[0,0],[0.27,-0.072],[0.147,-0.097],[0,0],[0,0],[0,0],[-0.295,0.051],[-0.096,0.12],[-0.05,0.148],[0,0],[0.05,0.148],[0.174,0.123],[0.15,0.051],[0.345,0.027],[0,0],[0.345,0.029],[0.268,0.076],[0.145,0.029],[0.124,0],[0.343,0],[0.341,-0.024],[0.147,0],[0.343,0],[0,0],[0.32,0],[3.27,0]],\"o\":[[-0.063,0.012],[-0.068,-0.005],[-0.194,0.023],[-0.173,0.126],[-0.145,0.026],[0,0],[-0.198,0],[0,0],[-0.15,0],[-0.248,-0.021],[-0.247,0],[-0.541,0.076],[0.15,0.193],[0.073,0.148],[0,0.318],[-0.273,0.074],[-0.343,0],[-0.15,-0.05],[0,0],[-0.586,0],[-0.124,-0.048],[-0.417,-0.074],[-0.198,0],[-0.124,0.024],[-0.173,0.049],[-0.147,0.098],[-0.318,0.022],[0,0],[-0.193,0],[-0.246,-0.025],[-0.441,0],[-0.491,-0.037],[-0.11,0],[-0.071,0.013],[-0.031,0.005],[-0.035,-0.004],[-0.11,0.022],[-0.139,0.039],[-0.222,0.075],[0.088,0.185],[0.075,0.087],[0.073,0.027],[0.045,0.005],[0.043,-0.004],[0.195,0.034],[0.097,0.056],[0.075,0.06],[0.05,0.073],[0.048,0.136],[0.027,0.209],[0,0],[-0.05,-0.071],[-0.063,-0.05],[-0.03,-0.005],[-0.035,0.004],[-0.085,-0.024],[-0.099,-0.011],[-0.099,-0.034],[-0.029,-0.005],[-0.034,0.003],[-0.088,-0.025],[-0.086,-0.025],[-0.074,0],[-0.109,-0.013],[-0.162,0],[-0.146,0],[-0.083,0.038],[-0.022,0.072],[0,0.072],[0.025,0.156],[0.047,0.085],[0.088,0.075],[0.172,0.098],[0.147,0.06],[0.061,0.026],[0.075,0.024],[0.088,0.01],[0.161,0.011],[0,0],[0.097,0],[0.09,0.013],[0.071,0.05],[0.167,0.094],[0.061,0.059],[0.122,0.147],[0.051,0.083],[0.024,0.073],[0.013,0.077],[0.013,0.111],[0,0.148],[-0.075,0],[-0.174,0],[-0.087,-0.015],[-0.047,-0.004],[-0.039,0.004],[-0.125,-0.01],[-0.16,-0.062],[-0.072,-0.027],[-0.084,-0.02],[-0.088,-0.027],[-0.11,-0.049],[-0.06,-0.024],[-0.256,-0.1],[-0.136,-0.01],[-0.222,-0.052],[-0.062,-0.027],[-0.1,-0.052],[-0.059,-0.037],[-0.099,-0.064],[-0.097,-0.059],[-0.088,-0.048],[-0.085,-0.089],[-0.042,-0.011],[-0.041,0.006],[-0.071,-0.012],[-0.064,-0.014],[-0.099,-0.024],[0,0],[-0.099,0],[-0.174,-0.021],[-0.123,-0.037],[-0.219,-0.083],[-0.787,0],[0,0.111],[0.028,0.087],[0.135,0.186],[0.149,0.147],[0.036,0.005],[0.046,-0.007],[0,0],[0.086,0.039],[0.134,0.137],[0.072,0.052],[0.063,0.073],[0.073,0.087],[0.086,0.135],[0.026,0.062],[0.039,0.096],[0.062,0.147],[0,0],[0,0],[-0.097,0],[-0.099,-0.011],[-0.088,-0.036],[-0.097,-0.065],[-0.058,-0.047],[-0.063,-0.061],[-0.099,-0.077],[-0.098,-0.063],[-0.094,-0.061],[-0.183,-0.123],[-0.059,-0.037],[-0.072,-0.037],[-0.073,-0.052],[-0.148,-0.127],[-0.066,-0.016],[-0.063,-0.014],[-0.197,-0.014],[-0.089,-0.034],[-0.048,-0.071],[-0.048,-0.086],[-0.061,-0.038],[-0.109,-0.049],[-0.063,-0.011],[-0.159,-0.011],[0,0],[0,0],[0,0.173],[0.099,0.221],[0.046,0.11],[0,0.111],[-0.012,0.097],[0,0.071],[0,0],[-0.015,0.075],[-0.099,0.32],[-0.025,0.091],[-0.053,0.058],[-0.087,0.051],[-0.133,0],[-0.112,-0.05],[-0.147,-0.111],[-0.025,-0.061],[0,-0.169],[0.014,-0.084],[0.121,-0.173],[0.061,-0.075],[0.025,-0.069],[0,-0.072],[-0.024,-0.102],[-0.062,-0.094],[-0.053,-0.086],[0,0],[0,-0.075],[-0.027,-0.162],[-0.083,-0.062],[-0.097,-0.062],[-0.087,-0.047],[-0.071,-0.063],[-0.125,-0.051],[-0.137,0],[-0.077,0.01],[-0.138,0.038],[-0.072,0.011],[-0.187,0.071],[-0.099,0.06],[-0.074,0.036],[-0.073,0.028],[-0.028,0.005],[-0.035,-0.003],[-0.085,0.01],[-0.085,0.024],[-0.101,0.047],[-0.159,0.039],[-0.084,0],[0,0],[-0.101,0],[-0.085,0.026],[-0.075,0.021],[-0.148,0.037],[0,0],[-0.137,-0.012],[-0.429,0],[-0.099,0],[-0.059,0.024],[-0.099,0.037],[-0.027,0.062],[0.048,0.066],[0.061,0.025],[0.063,0.011],[0.084,0.006],[0.067,-0.002],[0.122,0.011],[0.096,0.038],[0.089,0.063],[0.038,0.062],[0.038,0.072],[0.049,0.088],[0.086,0.037],[0.159,0.064],[0.063,0.011],[0.07,0.005],[0.064,-0.003],[0.085,0],[0.1,0.05],[0.135,0.073],[0.073,0.024],[0.06,0.027],[0.146,0.085],[0,0],[0,0],[-0.09,0],[-0.059,-0.015],[-0.074,-0.028],[-0.185,-0.061],[-0.098,-0.05],[-0.087,-0.052],[-0.075,-0.051],[-0.076,-0.061],[-0.137,-0.027],[-0.084,0.007],[-0.1,0],[0,0],[-0.097,0],[-0.122,-0.039],[-0.149,-0.063],[-0.073,-0.013],[-0.208,-0.074],[-0.084,-0.062],[-0.072,-0.073],[-0.05,-0.059],[-0.072,-0.048],[-0.063,-0.023],[-0.332,0],[-0.073,0.013],[-0.087,0.027],[-0.086,0.038],[-0.088,0.038],[-0.087,0.038],[-0.174,0.083],[-0.062,0.009],[-0.111,0.063],[0,0.209],[0.049,0.086],[0.035,0.075],[0.024,0.074],[0,0],[0,0],[-0.172,0],[-0.099,-0.039],[-0.084,-0.061],[-0.074,-0.037],[-0.864,0],[-0.063,0.057],[-0.083,0.135],[-0.048,0.085],[-0.135,0.048],[-0.222,0.073],[-0.133,0.026],[-0.184,0.04],[0,0],[-0.157,0.157],[-0.073,0.036],[-0.06,0.013],[-0.132,0.026],[-0.137,0],[-0.098,0],[-0.098,0],[-0.101,0.013],[-0.085,0.048],[-0.074,0.038],[-0.063,0.028],[-0.027,0.059],[-0.073,0.051],[-0.032,0.015],[-0.033,-0.005],[-0.059,0.027],[-0.072,0.023],[-0.145,0.184],[-0.028,0.05],[-0.049,0.037],[-0.087,0.061],[0,0.151],[0,0],[0.16,0.037],[0.2,0.027],[0.072,0.048],[0.073,0.05],[0.062,0.022],[0.185,0.022],[0.281,0],[0.144,-0.016],[0.063,-0.022],[0.099,-0.05],[0.098,-0.062],[0.196,0],[0.022,0.134],[0,0.148],[0.01,0.074],[0.012,0.059],[0.023,0.072],[0,0],[0,0.416],[-0.072,0.075],[-0.086,0.064],[-0.231,0.038],[0,0],[-0.098,0],[-0.169,-0.013],[-0.145,0.013],[-0.107,0.042],[-0.09,0.033],[-0.123,0.04],[0,0],[-0.271,0],[-0.111,-0.011],[-0.073,-0.012],[-0.172,-0.011],[-0.244,0],[-0.173,0.033],[0,0.073],[0,0.1],[-0.038,0.182],[-0.075,0.037],[0,0],[-0.196,0],[-0.085,0.036],[-0.181,0.073],[-0.112,0],[-0.143,-0.013],[-0.172,-0.011],[-0.174,0],[-0.126,0.013],[-0.088,0.024],[-0.097,0.023],[-0.073,0.04],[-0.037,0.072],[-0.027,0.061],[-0.013,0.06],[-0.025,0.079],[-0.041,0.064],[0,0],[-0.062,0.065],[-0.076,0.137],[0.022,0.119],[0.099,0.145],[0.099,0.148],[0.125,0.096],[0.069,0.028],[0.06,-0.009],[0.126,0.026],[0.147,0],[0.293,0.072],[0.12,0.072],[0,0],[0,0],[0.063,0.027],[0.087,0.038],[0.134,0.075],[0.162,0.037],[0.113,0],[0,0],[0.131,0],[0.061,0],[0.171,-0.036],[0.097,-0.039],[0,0],[0.184,0],[0.16,-0.023],[0,0],[0.149,0.011],[0.056,0],[0,0],[0,0.173],[-0.037,0.059],[-0.073,0.039],[-0.149,0.061],[-0.097,0.059],[-0.062,0.014],[0,0],[-0.099,0],[-0.04,-0.006],[-0.042,0.004],[-0.087,-0.024],[-0.085,-0.027],[0,0],[-0.243,0],[-0.097,0.021],[-0.198,0.085],[0,0],[-0.098,0],[-0.111,0],[-0.212,-0.038],[-0.136,-0.013],[0,0],[-0.074,0],[-0.009,0.196],[0,0],[-0.087,0],[-0.085,0.063],[0,0.294],[0.097,0.072],[0.084,0.045],[0.118,0.019],[0.084,-0.007],[0.258,0.024],[0.185,0.085],[0.162,0.051],[0.235,0.085],[0,0],[-0.209,0],[-0.072,0.052],[-0.022,0.049],[0.074,0.061],[0.063,0.024],[0.137,0.048],[0.07,0.035],[0.075,0.077],[0.027,0.049],[0.036,0.06],[0.074,0.05],[0.076,0.025],[0.073,0.036],[0.186,0.084],[0.085,0.02],[0.098,0.051],[0.099,0.063],[0.221,0.074],[0,0],[0.097,0],[0.086,-0.012],[-0.038,-0.077],[-0.06,-0.098],[-0.061,-0.085],[0,-0.12],[0.063,-0.037],[0.185,-0.023],[0.285,0],[0.181,0.012],[0.077,0.019],[0.06,0.027],[0.074,0.012],[0.075,0],[0,0],[0,0],[0.102,0],[0.086,0.05],[0.17,0.073],[0.199,0],[0.088,-0.037],[0.063,-0.039],[0.071,-0.037],[0.061,-0.01],[0.049,-0.006],[0.085,0.001],[0.086,-0.036],[0.061,-0.034],[0.11,-0.073],[0.198,0],[0.169,0.087],[0.075,0.038],[0,0],[0.234,0],[0.074,0],[0.076,0.014],[0.257,0.071],[0.073,0.063],[0.073,0.046],[0.074,0.014],[0,0],[0.086,0],[0.063,0.008],[0.237,0.085],[0.076,0.037],[0.208,0.086],[0,0],[0.063,0],[0.086,0.013],[0.111,0.145],[0.069,0.049],[0.136,0.035],[0,0],[0.145,0.011],[0.084,0.024],[0.137,0.097],[0,0],[0,0.188],[0.05,0.073],[0.059,0.075],[0.063,0.009],[0.048,0.012],[0.05,-0.007],[0.098,0.023],[0.09,0.037],[0.099,0.05],[0.039,0.062],[0.09,0.137],[0.025,0.062],[0.038,0.062],[0.147,0.145],[0.074,0.085],[0.063,0.082],[0.051,0.073],[0.05,0.066],[0.087,0.12],[0.058,0.147],[0.038,0.072],[0.111,0.248],[0.049,0.071],[0.076,0.049],[0.097,0.087],[0,0],[0.011,0.111],[-0.039,0.112],[0,0.127],[0.148,0.22],[0,0],[0,0.124],[-0.072,0.134],[0,0.132],[0,0],[0,0],[-0.196,0],[-0.161,0.037],[-0.049,0.033],[0.049,0.27],[0,0.22],[0,0],[0,0],[0.097,0.119],[0.246,0.122],[0,0],[0.148,0],[0.149,0.029],[0,0],[0.025,-0.196],[0.025,-0.149],[0.294,0],[0.146,0],[0.149,0],[0.025,0.219],[0.025,0.12],[0.025,0.17],[0.097,0.172],[0.146,0.072],[0.123,0],[0.063,0.014],[0.066,-0.005],[0.149,0.027],[0.147,0.074],[0.148,0.098],[0.1,0.125],[0.073,0.099],[0,0],[0,0],[-0.198,0],[0,0],[-0.469,0],[-0.148,-0.052],[-0.097,-0.048],[-0.074,-0.044],[-0.055,0.011],[-0.27,-0.075],[-0.342,-0.021],[-0.469,0],[0.099,0.294],[0.074,0.148],[0.15,0.148],[0,0.174],[-0.295,0.024],[-0.172,0.049],[-0.198,0.149],[0,0.241],[0.228,0.166],[0.15,-0.019],[0.319,0.052],[0.445,0.296],[0.222,0],[0.269,-0.271],[0.491,-0.047],[0,0],[-0.441,0],[-0.056,-0.01],[-0.076,0.011],[-0.146,-0.048],[-0.069,-0.026],[-0.06,0.01],[-0.124,-0.024],[0,0],[0,0],[0.172,0],[0.169,0.074],[0.148,0.051],[0.124,0.029],[0.173,0.029],[0,0],[0.294,0],[0.219,0.1],[0,0],[-0.024,0.169],[-0.076,0.123],[-0.076,0.173],[0,0],[0,0.195],[0.12,0.173],[0.074,0.125],[0,0],[0,0],[-0.172,0],[-0.146,0.079],[-0.173,0.095],[-0.149,0.049],[0,0],[-0.174,0],[-0.175,-0.03],[0,0],[-0.221,-0.028],[-0.173,-0.05],[-0.197,0],[-0.152,0.051],[-0.123,0.047],[-0.124,0.05],[-0.198,0.124],[0,0],[0,0.196],[0.099,0.196],[0.122,0.047],[0.124,0.051],[0.169,0.073],[0.124,0.074],[0.175,0.225],[-0.271,0.051],[-0.192,0.098],[0,0.421],[0.17,0.289],[0.076,0.123],[0.124,0.149],[0.219,0],[0.17,-0.074],[0.123,-0.049],[0,0],[0.167,0],[0,0.145],[-0.048,0.122],[-0.054,0.054],[-0.066,-0.017],[-0.122,0.071],[-0.073,0.1],[-0.051,0.147],[-0.099,0.215],[0,0.223],[0.075,0.291],[0.096,0.147],[0.124,0.076],[0.146,0],[0.174,-0.07],[0.122,-0.097],[0.097,-0.124],[0.101,-0.05],[0.222,0],[0,0],[-0.147,0.121],[-0.126,0.074],[-0.146,0.073],[-0.147,0.075],[-0.073,0.176],[0,0.243],[0.075,0.146],[0.15,0.145],[0.345,0.42],[0.1,0.125],[0.072,0.122],[0.052,0.12],[0.101,0.323],[0.097,0.247],[0.146,0.344],[0.125,0.077],[0.102,0.121],[0.124,0.273],[0.075,0.169],[0.345,0.319],[0.37,0.121],[0.145,0.098],[0.123,0.048],[0,0],[0.172,0],[0.195,-0.05],[0,0],[0.147,0],[0.05,0.01],[0.084,-0.017],[0.097,0.074],[0.05,0.124],[0.099,0.219],[0.148,0.077],[0.132,0.013],[0.138,-0.01],[0.197,0.045],[0.075,0.121],[0.102,0.175],[0.273,0.049],[0.295,0],[0.172,-0.047],[0.147,-0.074],[0.145,-0.123],[0.072,-0.124],[0,0],[0,-0.615],[0.173,-0.294],[0.097,-0.128],[0.098,-0.195],[0,-0.217],[0,-0.148],[0,-0.149],[0,-0.296],[-0.072,-0.168],[-0.072,-0.121],[-0.024,-0.125],[0,-0.422],[0,0],[0.144,0],[0.295,-0.025],[0,-0.269],[0,-0.149],[0.1,-0.148],[0.123,-0.127],[0.069,-0.028],[0.06,0.008],[0.172,-0.051],[0,0],[0.146,-0.199],[0,-0.219],[-0.025,-0.148],[-0.051,-0.124],[-0.079,-0.123],[0,-0.242],[0.053,-0.025],[0.064,0.008],[0.266,-0.071],[0.142,-0.05],[0.147,-0.093],[0.074,-0.125],[0.027,-0.125],[0,-0.145],[0,0],[-0.025,-0.418],[0,-0.145],[0,0],[-0.024,0.467],[0,0.173],[0.319,-0.025],[0.146,0],[0.515,0],[0.126,-0.148],[0.149,-0.146],[0.149,-0.079],[0,0],[0.132,-0.011],[0.14,0.011],[0.149,-0.026],[0.125,-0.054],[0.074,-0.102],[0,0],[0.073,-0.175],[0.149,-0.099],[0.124,-0.072],[0.099,-0.101],[0.101,-0.12],[0.101,-0.077],[0.247,-0.225],[0.076,-0.122],[0.094,-0.075],[0.12,-0.073],[0.076,-0.097],[0.099,-0.143],[0.099,-0.096],[0.174,-0.098],[0.098,-0.442],[0.025,-0.036],[0.046,-0.017],[0.134,0],[0.038,0.013],[0.038,0.01],[0.031,0.009],[0.084,0.037],[0.035,0.018],[0.092,0.06],[0.038,0.035],[0.148,0.024],[0.297,0],[0.317,0.072],[0.343,0.172],[0.249,0],[0.17,0],[0.365,-0.126],[0.198,-0.146],[0.122,-0.148],[0.271,-0.199],[0.152,-0.026],[0.113,0.009],[0.121,0],[0.172,-0.03],[0.079,-0.011],[0.086,0.01],[0.15,-0.05],[0.148,-0.021],[0.056,-0.01],[0.075,0.01],[0.174,-0.049],[0.148,-0.074],[0.148,-0.097],[0.145,-0.172],[0.122,-0.196],[0.197,-0.271],[0,0],[0.343,0],[0.173,-0.099],[0.169,-0.149],[0.07,-0.126],[0,0],[-0.292,0.223],[-0.098,0.07],[-0.175,0.146],[0,0],[-0.341,-0.028],[-0.246,-0.195],[-0.12,-0.07],[0,0],[-0.663,0],[-0.123,-0.022],[-0.171,-0.048],[-0.143,-0.121],[-0.074,-0.147],[0,0],[0.27,-0.023],[0.211,-0.012],[0.197,0.011],[0.147,0],[0.32,-0.049],[0.346,-0.126],[0.124,0.049],[0.147,0.097],[0.196,0.321],[0.022,0.147],[0.074,0.148],[0.193,0.295],[0.221,0],[0.05,-0.098],[0.198,-0.268],[0.269,-0.05],[0.343,0],[0.173,0],[-0.052,-0.293],[-0.046,-0.342],[-0.073,-0.175],[-0.269,-0.2],[-0.294,-0.196],[-0.101,-0.272],[-0.048,-0.146],[-0.049,-0.121],[-0.048,-0.126],[-0.07,-0.121],[-0.245,-0.149],[-0.17,-0.071],[0.145,-0.122],[0.1,-0.05],[0.293,0.173],[0.125,0.075],[0.149,0.076],[0,0],[0.146,0],[0.145,0],[0.074,-0.592],[0,0],[0,-0.122],[0.025,-0.147],[0,-0.145],[-0.072,-0.12],[-0.269,-0.148],[-0.32,0],[-0.147,0.075],[-0.123,0.1],[0,0],[0.148,-0.224],[0.124,-0.073],[0.122,-0.072],[0.097,-0.074],[-0.295,-0.121],[-0.144,-0.047],[0,0],[0,0],[0,0],[0,0],[0.171,0],[0.123,-0.095],[0.273,-0.122],[0,0],[0.442,0.027],[0.246,0],[0.146,-0.072],[0.149,-0.146],[0,-0.244],[-0.124,-0.196],[-0.197,-0.171],[-0.218,0],[-0.151,0.025],[-0.121,0.024],[-0.147,0],[-0.174,-0.072],[-0.073,-0.145],[0,-0.249],[0.144,0],[0.147,0],[0.317,0.02],[0.319,0],[0.146,-0.025],[0,0],[0.174,-0.074],[0.175,0],[0,0],[0.244,0],[0.121,-0.024],[0.118,-0.05],[-0.273,-0.269],[-0.061,-0.011],[-0.068,0.007],[-0.198,-0.052],[-0.197,-0.149],[-0.021,-0.12],[0,-0.22],[0,-0.246],[0,-0.148],[0,-0.102],[0.643,0.022],[0,0],[0,-0.517],[-0.05,-0.122],[-0.024,-0.201],[-0.467,0],[-0.196,-0.021],[-0.125,-0.023],[-0.146,-0.048],[-0.147,-0.073],[-0.145,-0.096],[-0.098,-0.176],[0,-0.072],[0.074,-0.148],[0.145,-0.097],[0.071,-0.028],[0.058,0.008],[0.325,-0.077],[0.147,0],[0,0],[0.291,0],[0.172,0.022],[0.199,0.122],[0,0],[0.021,0.176],[-0.077,0.223],[0,0.615],[0,0],[0,0],[0.096,-0.149],[0.119,-0.145],[0,0],[0,-0.224],[-0.153,-0.197],[-0.221,0],[-0.147,0.027],[-0.246,0.048],[0,0],[-0.198,0],[-0.124,0],[0,0],[0.146,0],[0.146,0.025],[0,0],[0.322,0],[0.173,-0.047],[-0.097,-0.147],[-0.124,-0.148],[-0.137,-0.01],[-0.135,0.036],[-0.173,-0.029],[-0.119,-0.026],[-0.123,-0.022],[-0.246,-0.022],[-0.37,0],[0,0.267],[-0.029,0.176],[-0.051,-0.009],[-0.084,0.015],[-0.145,-0.12],[-0.073,-0.121],[0,-0.296],[0.053,-0.151],[0.075,-0.099],[0.123,-0.147],[0.05,-0.124],[0.021,-0.294],[0.021,-0.392],[0,0],[0,-0.393],[0.1,-0.126],[0.15,-0.099],[0.087,0.002],[0,0],[0.171,-0.026],[-0.024,-0.145],[-0.027,-0.222],[0,-0.247],[0.075,-0.148],[0.074,-0.126],[0.098,-0.144],[0.267,-0.196],[0.212,-0.035],[0.191,0.047],[0.123,-0.024],[0.122,-0.1],[0.05,-0.128],[0.072,-0.15],[0.097,-0.122],[0.145,-0.074],[0.122,-0.025],[0.124,0],[0.064,-0.011],[0.066,0.006],[0.173,-0.047],[0,0],[0,0],[0,0],[0.346,-0.073],[0.443,-0.171],[0.244,0],[0.198,0.07],[0.173,0.022],[0,0],[0.144,0],[0.145,0],[0.175,-0.028],[0.173,-0.051],[0.119,-0.098],[0.169,-0.198],[0.123,-0.102],[0.271,-0.1],[0,0],[0.615,0],[0.124,0],[0.12,-0.026],[0.196,-0.072],[0.098,-0.151],[0.074,-0.273],[0,-0.293],[-0.095,-0.096],[-0.292,-0.124],[-0.346,0],[-0.198,0.049],[-0.269,0.073],[-0.343,0],[-0.171,-0.046],[0,0],[-0.176,-0.048],[-0.344,0],[-0.089,0.013],[-0.079,-0.007],[-0.321,0.025],[-0.172,0.049],[-0.147,0.1],[-0.147,0.273],[-0.074,0.148],[-0.1,0.07],[-0.184,0.043],[-0.117,-0.011],[-0.319,0.025],[-0.318,0],[-0.172,-0.076],[-0.322,-0.22],[-0.245,0],[-0.318,0.148],[-0.097,0.127],[-0.124,0.101],[-0.121,0.022],[-0.166,0.011],[-0.14,-0.005],[-0.297,0.022],[-0.172,0.05],[-0.323,0.124],[-0.174,0.048],[-0.195,0.15],[-0.269,0.32],[-0.15,0.076],[-0.173,0],[0.097,-0.12],[0.124,-0.127],[0.099,-0.125],[0.096,-0.147],[0.147,-0.269],[0.049,-0.024],[0.07,0.012],[0.248,-0.097],[0,-0.149],[0,0],[0.15,-0.073],[0.126,-0.052],[0.148,-0.094],[0.075,-0.124],[0,-0.146],[-0.024,-0.148],[-0.099,-0.149],[-0.121,-0.072],[0,0],[-0.145,0],[-0.197,0.013],[-0.147,-0.007],[-0.149,0],[-0.495,0.023],[-0.199,0],[0,0.494],[0,0.147],[0,0.124],[-0.195,0],[-0.194,0],[-0.27,-0.022],[-0.273,0],[-0.318,0.072],[-0.124,0.052],[-0.172,0.048],[-0.071,0.031],[-0.057,-0.008],[0.023,-0.123],[0.049,-0.146],[0.049,-0.171],[0.15,-0.1],[0,0],[0.345,-0.027],[0.297,0],[0.175,-0.047],[0,0],[-0.151,-0.024],[-0.1,-0.012],[-0.074,0.006],[-0.24,-0.025],[-0.613,0],[-0.293,0.023],[-0.173,0],[0,0],[-0.415,0],[-0.396,0],[-0.173,0.028],[-0.15,0.027],[-0.123,0.021],[-0.219,0.075],[-0.084,0.013],[-0.078,-0.006],[-0.244,0.025],[-0.098,0.012],[-0.074,-0.007],[-0.195,0.025],[-0.12,0.024],[-0.168,0.048],[-0.176,0],[0.046,-0.123],[0.169,-0.343],[0.097,-0.145],[0.271,-0.22],[0.193,-0.024],[0,0],[0.174,0],[0.146,-0.1],[0.125,-0.074],[0,0],[0.174,0],[0.291,0],[0.15,-0.052],[0.146,-0.073],[0.071,-0.044],[0.055,0.01],[0.146,-0.05],[0.124,0],[0.06,-0.009],[0.071,0.007],[0.17,-0.021],[0.28,-0.059],[0.162,0.013],[0.193,0],[0,0],[0,0],[-0.221,0.075],[0,0],[-0.175,0],[-0.467,-0.122],[-0.297,0],[-0.391,0],[-0.152,-0.02],[0.073,-0.147],[0,-0.173],[-0.147,0],[-0.298,-0.051],[-0.1,0],[-0.172,0.076],[0,0],[-0.365,0],[-0.121,-0.051],[-0.32,-0.048],[0,0],[0,0],[0,0],[0,0],[-0.296,0],[-0.17,0.051],[0,0],[0,0],[0,0],[0.317,0],[0.171,-0.024],[0.097,-0.123],[0,0],[-0.021,-0.147],[-0.073,-0.199],[-0.124,-0.073],[-0.293,-0.122],[0,0],[-0.346,-0.021],[-0.294,0],[-0.149,-0.021],[-0.121,-0.021],[-0.321,-0.054],[-0.346,0],[-0.147,0],[-0.343,0.029],[0,0],[-0.322,-0.021],[-3.265,0],[-0.322,0]],\"v\":[[-88.283,-164.791],[-88.482,-164.791],[-88.677,-164.791],[-89.167,-164.498],[-89.561,-164.104],[-90.003,-164.104],[-90.447,-164.104],[-90.938,-164.202],[-91.426,-164.202],[-91.82,-164.302],[-92.461,-164.302],[-93.099,-164.302],[-94.378,-163.61],[-94.082,-162.924],[-93.884,-162.432],[-94.573,-161.943],[-95.361,-161.843],[-96.245,-162.038],[-96.664,-162.235],[-98.681,-162.235],[-99.98,-163.024],[-100.374,-163.122],[-101.454,-163.219],[-101.948,-163.219],[-102.339,-163.122],[-102.638,-162.726],[-103.126,-162.531],[-103.964,-162.531],[-104.307,-162.531],[-104.796,-162.531],[-105.388,-162.828],[-106.47,-162.531],[-107.969,-162.628],[-108.238,-162.628],[-108.435,-162.531],[-108.53,-162.531],[-108.633,-162.531],[-108.926,-162.432],[-109.319,-162.334],[-109.861,-162.088],[-109.616,-161.646],[-109.37,-161.45],[-109.174,-161.349],[-109.056,-161.349],[-108.926,-161.349],[-108.435,-161.104],[-108.191,-160.907],[-107.993,-160.711],[-107.844,-160.515],[-107.749,-160.123],[-107.749,-159.583],[-107.943,-159.731],[-108.09,-159.924],[-108.238,-160.123],[-108.332,-160.122],[-108.435,-160.123],[-108.68,-160.171],[-108.926,-160.221],[-109.174,-160.369],[-109.27,-160.369],[-109.37,-160.369],[-109.568,-160.515],[-109.811,-160.564],[-110.01,-160.614],[-110.301,-160.614],[-110.721,-160.666],[-111.091,-160.614],[-111.289,-160.465],[-111.384,-160.268],[-111.336,-160.07],[-111.138,-159.679],[-110.943,-159.484],[-110.697,-159.286],[-110.204,-159.091],[-109.811,-158.893],[-109.616,-158.844],[-109.418,-158.745],[-109.174,-158.697],[-108.73,-158.697],[-108.288,-158.697],[-108.044,-158.649],[-107.844,-158.5],[-107.647,-158.351],[-107.206,-158.055],[-107.059,-157.86],[-106.716,-157.468],[-106.566,-157.221],[-106.47,-157.028],[-106.47,-156.831],[-106.421,-156.534],[-106.566,-156.19],[-106.763,-156.24],[-107.206,-156.336],[-107.451,-156.435],[-107.57,-156.434],[-107.699,-156.435],[-107.993,-156.534],[-108.387,-156.729],[-108.583,-156.831],[-108.827,-156.877],[-109.073,-156.979],[-109.37,-157.123],[-109.568,-157.172],[-110.253,-157.42],[-110.598,-157.468],[-111.138,-157.713],[-111.336,-157.76],[-111.582,-157.959],[-111.776,-158.055],[-112.025,-158.257],[-112.318,-158.403],[-112.517,-158.597],[-112.762,-158.844],[-112.883,-158.844],[-113.008,-158.844],[-113.202,-158.942],[-113.4,-158.992],[-113.658,-159.091],[-114.568,-159.091],[-114.824,-159.042],[-115.268,-159.188],[-115.615,-159.286],[-116.214,-159.534],[-118.219,-159.508],[-118.219,-159.239],[-118.072,-159.042],[-117.676,-158.597],[-117.234,-158.304],[-117.132,-158.309],[-116.99,-158.304],[-116.792,-158.205],[-116.645,-158.01],[-116.25,-157.666],[-116.055,-157.519],[-115.906,-157.273],[-115.663,-157.075],[-115.466,-156.682],[-115.418,-156.482],[-115.268,-156.24],[-115.122,-155.834],[-115.122,-155.55],[-115.602,-155.55],[-115.858,-155.602],[-116.102,-155.653],[-116.301,-155.846],[-116.596,-155.994],[-116.693,-156.19],[-116.891,-156.286],[-117.186,-156.482],[-117.434,-156.682],[-117.727,-156.877],[-118.171,-157.221],[-118.367,-157.318],[-118.561,-157.468],[-118.758,-157.614],[-119.15,-157.906],[-119.346,-157.959],[-119.544,-157.959],[-120.035,-158.109],[-120.233,-158.257],[-120.332,-158.5],[-120.529,-158.697],[-120.724,-158.745],[-121.018,-158.893],[-121.215,-158.893],[-121.622,-158.942],[-122.345,-158.942],[-122.345,-158.612],[-122.198,-158.205],[-121.853,-157.614],[-121.757,-157.318],[-121.807,-157.028],[-121.807,-156.778],[-121.853,-156.583],[-121.853,-156.386],[-121.953,-156.19],[-122.247,-155.356],[-122.345,-155.107],[-122.444,-154.911],[-122.742,-154.86],[-123.082,-154.961],[-123.378,-155.107],[-123.721,-155.453],[-123.721,-155.653],[-123.674,-156.093],[-123.525,-156.286],[-123.182,-156.729],[-122.986,-156.93],[-122.888,-157.123],[-122.938,-157.318],[-123.132,-157.519],[-123.279,-157.812],[-123.479,-158.01],[-123.479,-158.205],[-123.426,-158.403],[-123.674,-158.794],[-123.919,-158.942],[-124.163,-159.141],[-124.41,-159.286],[-124.557,-159.484],[-124.901,-159.484],[-125.245,-159.484],[-125.443,-159.387],[-125.835,-159.286],[-126.033,-159.188],[-126.525,-158.942],[-126.77,-158.745],[-126.967,-158.649],[-127.167,-158.549],[-127.257,-158.55],[-127.361,-158.549],[-127.605,-158.45],[-127.85,-158.351],[-128.096,-158.205],[-128.54,-158.156],[-128.749,-158.205],[-129.904,-158.205],[-130.163,-158.156],[-130.406,-158.055],[-130.603,-157.959],[-131.009,-157.86],[-131.145,-157.86],[-131.49,-157.906],[-132.609,-157.872],[-132.866,-157.812],[-133.062,-157.76],[-133.259,-157.565],[-133.259,-157.372],[-133.161,-157.172],[-132.965,-157.123],[-132.764,-157.075],[-132.546,-157.075],[-132.324,-157.075],[-132.029,-156.979],[-131.784,-156.831],[-131.589,-156.635],[-131.49,-156.435],[-131.342,-156.24],[-131.193,-155.994],[-130.947,-155.945],[-130.555,-155.747],[-130.361,-155.747],[-130.173,-155.747],[-129.965,-155.747],[-129.77,-155.653],[-129.572,-155.453],[-129.177,-155.256],[-128.98,-155.159],[-128.786,-155.107],[-128.441,-154.768],[-128.589,-154.568],[-129.411,-154.568],[-129.621,-154.664],[-129.818,-154.715],[-130.014,-154.813],[-130.505,-154.961],[-130.751,-155.159],[-130.996,-155.305],[-131.193,-155.453],[-131.391,-155.653],[-131.757,-155.659],[-132.029,-155.653],[-132.275,-155.7],[-132.471,-155.7],[-132.719,-155.747],[-132.965,-155.994],[-133.408,-156.093],[-133.603,-156.19],[-134.145,-156.435],[-134.339,-156.635],[-134.538,-156.831],[-134.635,-157.028],[-134.833,-157.172],[-135.027,-157.172],[-135.865,-157.028],[-136.06,-156.93],[-136.306,-156.831],[-136.5,-156.682],[-136.749,-156.635],[-136.943,-156.482],[-137.436,-156.286],[-137.633,-156.24],[-137.831,-155.945],[-137.633,-155.453],[-137.436,-155.256],[-137.337,-155.059],[-137.266,-154.852],[-137.266,-153.24],[-138.507,-153.24],[-138.913,-153.386],[-139.158,-153.536],[-139.352,-153.734],[-139.562,-153.781],[-141.762,-153.827],[-141.961,-153.682],[-142.155,-153.289],[-142.352,-153.09],[-142.745,-152.994],[-143.337,-152.75],[-143.729,-152.702],[-144.122,-152.356],[-144.319,-152.157],[-144.76,-151.765],[-144.958,-151.617],[-145.156,-151.57],[-145.546,-151.57],[-145.893,-151.57],[-146.139,-151.523],[-146.383,-151.523],[-146.629,-151.373],[-146.875,-151.226],[-147.071,-151.08],[-147.265,-151.031],[-147.316,-150.784],[-147.513,-150.638],[-147.617,-150.636],[-147.712,-150.638],[-147.908,-150.584],[-148.007,-150.39],[-148.397,-149.9],[-148.448,-149.7],[-148.643,-149.653],[-148.842,-149.458],[-148.791,-149.063],[-148.397,-149.063],[-148.007,-148.966],[-147.513,-148.864],[-147.316,-148.719],[-147.17,-148.519],[-146.974,-148.519],[-146.456,-148.519],[-145.742,-148.519],[-145.352,-148.669],[-145.156,-148.719],[-144.958,-148.912],[-144.661,-149.063],[-144.366,-148.669],[-144.366,-148.278],[-144.366,-147.882],[-144.27,-147.684],[-144.219,-147.489],[-144.122,-147.281],[-144.122,-146.369],[-144.615,-145.425],[-144.81,-145.231],[-145.057,-145.081],[-145.697,-145.081],[-145.893,-145.081],[-146.139,-145.131],[-146.581,-145.131],[-146.974,-145.036],[-147.218,-144.833],[-147.463,-144.787],[-147.771,-144.637],[-148.68,-144.637],[-149.382,-144.736],[-149.676,-144.787],[-149.872,-144.885],[-150.317,-144.885],[-150.953,-144.833],[-151.396,-144.637],[-151.493,-144.344],[-151.493,-144.098],[-151.838,-143.703],[-152.049,-143.61],[-153.156,-143.61],[-153.611,-143.359],[-153.856,-143.262],[-154.393,-143.166],[-154.692,-143.166],[-155.084,-143.262],[-155.525,-143.262],[-155.967,-143.262],[-156.261,-143.166],[-156.511,-143.065],[-156.804,-143.02],[-156.999,-142.917],[-157.098,-142.721],[-157.098,-142.524],[-157.147,-142.333],[-157.244,-142.135],[-157.455,-142.036],[-158.523,-142.036],[-158.72,-141.887],[-158.867,-141.492],[-158.867,-141.099],[-158.574,-140.708],[-158.181,-140.411],[-157.984,-140.018],[-157.763,-140.01],[-157.592,-140.018],[-157.197,-140.018],[-156.804,-139.92],[-156.015,-139.624],[-155.819,-139.234],[-153.856,-139.234],[-153.068,-138.84],[-152.772,-138.788],[-152.578,-138.643],[-152.184,-138.394],[-151.742,-138.394],[-151.444,-138.346],[-151.101,-138.346],[-150.758,-138.346],[-150.561,-138.394],[-150.117,-138.591],[-149.86,-138.69],[-148.755,-138.69],[-148.3,-138.84],[-147.845,-138.887],[-147.662,-138.887],[-147.265,-138.84],[-147.118,-138.864],[-147.118,-138.065],[-147.316,-137.658],[-147.513,-137.562],[-147.759,-137.463],[-148.152,-137.265],[-148.35,-137.021],[-148.544,-137.021],[-148.743,-137.021],[-148.989,-137.117],[-149.104,-137.114],[-149.234,-137.117],[-149.431,-137.265],[-149.676,-137.317],[-150.095,-137.317],[-150.708,-137.265],[-150.953,-137.117],[-151.52,-137.021],[-151.791,-137.021],[-152.037,-137.068],[-152.33,-137.068],[-152.822,-137.265],[-153.156,-137.265],[-153.461,-137.265],[-153.66,-137.218],[-153.707,-136.727],[-154.874,-136.727],[-155.084,-136.627],[-155.28,-136.38],[-154.789,-135.789],[-154.542,-135.591],[-154.295,-135.448],[-153.986,-135.445],[-153.707,-135.448],[-153.068,-135.201],[-152.578,-135.005],[-152.134,-134.857],[-151.543,-134.562],[-151.347,-134.464],[-151.889,-134.416],[-152.085,-134.265],[-152.134,-134.068],[-151.987,-133.875],[-151.791,-133.825],[-151.396,-133.679],[-151.25,-133.481],[-151.053,-133.287],[-151.006,-133.088],[-150.805,-132.987],[-150.561,-132.89],[-150.366,-132.792],[-150.167,-132.692],[-149.676,-132.497],[-149.431,-132.4],[-149.187,-132.202],[-148.89,-132.055],[-148.3,-132.006],[-148.201,-132.006],[-147.956,-132.006],[-147.759,-132.151],[-147.858,-132.349],[-148.055,-132.596],[-148.249,-132.843],[-148.152,-133.136],[-147.956,-133.136],[-147.441,-133.136],[-146.726,-133.136],[-146.286,-132.937],[-146.087,-132.843],[-145.893,-132.792],[-145.684,-132.692],[-145.497,-132.742],[-145.497,-133.136],[-144.677,-133.136],[-144.465,-132.987],[-144.219,-132.843],[-143.706,-132.792],[-143.189,-132.843],[-143.042,-133.038],[-142.844,-133.136],[-142.646,-133.239],[-142.452,-133.287],[-142.305,-133.294],[-142.059,-133.333],[-141.909,-133.531],[-141.714,-133.628],[-141.419,-133.825],[-140.926,-133.679],[-140.535,-133.383],[-140.326,-133.287],[-139.747,-133.287],[-139.109,-133.239],[-138.913,-133.239],[-138.714,-133.136],[-138.074,-132.843],[-137.879,-132.643],[-137.633,-132.546],[-137.426,-132.497],[-136.072,-132.497],[-135.865,-132.447],[-135.671,-132.4],[-135.079,-132.055],[-134.88,-131.908],[-134.289,-131.859],[-134.095,-131.859],[-133.897,-131.859],[-133.749,-131.658],[-133.355,-131.268],[-133.161,-131.122],[-132.764,-131.071],[-132.568,-131.071],[-132.176,-130.974],[-131.982,-130.825],[-131.685,-130.471],[-131.685,-129.122],[-131.44,-128.713],[-131.293,-128.516],[-131.095,-128.317],[-130.898,-128.268],[-130.755,-128.268],[-130.603,-128.268],[-130.361,-128.122],[-130.113,-128.025],[-129.866,-127.876],[-129.77,-127.682],[-129.572,-127.289],[-129.522,-127.093],[-129.324,-126.99],[-129.03,-126.548],[-128.786,-126.349],[-128.641,-126.057],[-128.491,-125.863],[-128.294,-125.713],[-128.145,-125.319],[-127.951,-124.926],[-127.85,-124.733],[-127.507,-124.089],[-127.312,-123.942],[-126.917,-123.7],[-126.77,-123.38],[-126.77,-123.256],[-126.819,-122.964],[-126.967,-122.667],[-126.819,-122.371],[-126.426,-121.77],[-126.426,-120.762],[-126.624,-120.506],[-126.819,-120.132],[-126.77,-119.79],[-125.824,-119.79],[-125.824,-118.978],[-126.328,-118.978],[-126.72,-118.732],[-126.77,-118.536],[-126.525,-117.799],[-126.671,-117.212],[-127.409,-117.212],[-127.409,-116.421],[-127.115,-115.933],[-126.328,-115.736],[-125.936,-115.736],[-125.542,-115.639],[-125.126,-115.54],[-123.182,-115.54],[-123.182,-116.029],[-122.986,-116.375],[-122.198,-116.421],[-121.807,-116.325],[-121.413,-116.375],[-121.314,-115.833],[-121.314,-115.441],[-121.018,-115.05],[-120.625,-114.655],[-120.233,-114.36],[-119.839,-114.36],[-119.638,-114.359],[-119.448,-114.36],[-119.053,-114.163],[-118.661,-113.968],[-118.367,-113.576],[-117.97,-113.277],[-117.872,-112.884],[-117.97,-112.491],[-118.733,-112.491],[-119.249,-112.591],[-120.035,-112.591],[-121.215,-112.687],[-121.609,-112.884],[-121.706,-113.277],[-121.943,-113.29],[-122.099,-113.277],[-122.888,-113.377],[-123.77,-113.475],[-124.952,-113.178],[-124.658,-112.394],[-124.266,-112.098],[-123.868,-111.705],[-124.068,-111.313],[-124.853,-111.214],[-125.245,-110.92],[-125.641,-110.326],[-125.443,-109.738],[-124.74,-109.631],[-124.266,-109.642],[-123.479,-109.247],[-122.398,-108.361],[-122,-108.757],[-121.215,-109.346],[-119.986,-109.346],[-119.986,-110.721],[-121.116,-110.82],[-121.292,-110.814],[-121.512,-110.82],[-121.706,-111.214],[-121.926,-111.22],[-122.099,-111.214],[-122.495,-111.313],[-122.297,-111.705],[-121.535,-111.705],[-121.116,-111.605],[-120.724,-111.313],[-120.332,-111.117],[-119.939,-111.117],[-119.448,-111.016],[-118.661,-111.016],[-117.872,-110.92],[-117.482,-110.326],[-117.482,-110.131],[-117.872,-109.835],[-117.872,-109.443],[-118.267,-109.052],[-118.267,-108.853],[-117.97,-108.462],[-117.579,-108.069],[-117.379,-107.647],[-117.379,-106.494],[-118.439,-106.494],[-118.857,-106.594],[-119.249,-106.296],[-119.544,-105.903],[-119.986,-105.903],[-120.427,-105.903],[-120.82,-106.099],[-121.264,-105.954],[-121.264,-104.035],[-121.807,-104.134],[-122.297,-104.334],[-122.59,-103.941],[-122.986,-103.741],[-123.378,-103.645],[-123.77,-103.546],[-123.868,-102.908],[-123.868,-102.66],[-123.674,-102.169],[-123.378,-101.676],[-122.986,-101.579],[-122.59,-101.482],[-122.198,-101.185],[-121.807,-100.993],[-121.609,-100.204],[-122.398,-100.005],[-122.693,-99.419],[-122.198,-98.43],[-121.807,-97.648],[-121.609,-97.253],[-121.018,-97.152],[-120.427,-97.253],[-120.134,-97.648],[-119.741,-97.648],[-119.346,-97.648],[-118.954,-97.449],[-118.954,-97.058],[-119.053,-96.663],[-119.273,-96.65],[-119.448,-96.663],[-119.839,-96.469],[-119.839,-96.074],[-120.035,-95.678],[-120.427,-95.191],[-120.332,-94.597],[-120.035,-93.812],[-119.741,-93.421],[-119.346,-93.421],[-118.954,-93.421],[-118.561,-93.715],[-118.267,-94.108],[-118.072,-94.5],[-117.676,-94.597],[-117.087,-94.5],[-117.087,-92.926],[-117.379,-92.534],[-117.775,-92.437],[-118.171,-92.143],[-118.561,-91.849],[-118.661,-91.255],[-118.464,-90.667],[-118.072,-90.373],[-117.676,-89.98],[-116.792,-88.8],[-116.397,-88.503],[-116.203,-88.11],[-116.203,-87.72],[-115.711,-86.933],[-115.513,-86.144],[-114.728,-85.459],[-114.337,-85.259],[-114.04,-84.867],[-114.04,-84.08],[-113.745,-83.687],[-112.566,-83.294],[-111.776,-82.703],[-111.486,-82.309],[-111.091,-82.309],[-110.697,-82.309],[-110.301,-82.508],[-109.714,-82.605],[-109.516,-82.605],[-109.125,-82.508],[-108.956,-82.519],[-108.73,-82.508],[-108.633,-82.115],[-108.534,-81.718],[-108.044,-81.328],[-107.548,-81.132],[-107.184,-81.136],[-106.763,-81.132],[-106.371,-80.736],[-106.275,-80.346],[-105.882,-79.954],[-105.091,-79.954],[-104.307,-79.954],[-103.913,-80.245],[-103.52,-80.443],[-103.126,-80.736],[-103.126,-81.132],[-103.126,-81.525],[-102.832,-83.098],[-102.142,-83.783],[-101.948,-84.18],[-101.751,-84.768],[-101.85,-85.358],[-101.948,-85.751],[-101.85,-86.144],[-101.948,-86.933],[-102.339,-87.227],[-102.538,-87.619],[-102.638,-88.01],[-101.652,-88.503],[-101.257,-88.503],[-100.866,-88.602],[-100.081,-88.602],[-100.081,-89.29],[-100.081,-89.682],[-99.784,-90.074],[-99.392,-90.373],[-99.173,-90.378],[-98.997,-90.373],[-98.602,-90.667],[-98.602,-92.632],[-98.21,-93.126],[-98.309,-93.715],[-98.505,-94.108],[-98.602,-94.5],[-98.997,-94.7],[-98.801,-95.29],[-98.592,-95.294],[-98.406,-95.29],[-97.618,-95.384],[-97.227,-95.585],[-96.837,-95.877],[-96.837,-96.27],[-96.837,-96.663],[-96.737,-97.058],[-94.328,-97.058],[-94.378,-98.141],[-94.328,-98.533],[-92.953,-98.533],[-93,-97.352],[-92.953,-96.886],[-92.117,-96.957],[-91.749,-96.862],[-90.645,-97.648],[-90.249,-98.042],[-89.855,-98.43],[-89.464,-98.629],[-89.072,-98.629],[-88.71,-98.623],[-88.283,-98.629],[-87.889,-98.824],[-87.496,-98.923],[-87.496,-99.32],[-87.301,-99.708],[-86.906,-100.005],[-86.513,-100.302],[-86.12,-100.497],[-85.924,-100.894],[-85.628,-101.284],[-85.236,-101.38],[-84.745,-102.169],[-84.546,-102.56],[-84.151,-102.66],[-83.76,-102.857],[-83.76,-103.252],[-83.465,-103.645],[-83.072,-103.741],[-82.677,-104.134],[-82.677,-105.316],[-82.652,-105.389],[-82.503,-105.389],[-82.163,-105.339],[-82.064,-105.289],[-81.969,-105.24],[-81.865,-105.217],[-81.671,-105.068],[-81.572,-105.02],[-81.378,-104.802],[-81.251,-104.727],[-80.811,-104.626],[-80.023,-104.626],[-79.236,-104.134],[-78.206,-104.035],[-77.566,-104.035],[-77.172,-104.232],[-76.289,-104.727],[-75.796,-105.119],[-75.503,-105.609],[-74.714,-106.002],[-74.271,-106.009],[-73.927,-106.002],[-73.536,-106.099],[-73.046,-106.296],[-72.819,-106.29],[-72.552,-106.296],[-72.161,-106.494],[-71.768,-106.691],[-71.59,-106.684],[-71.374,-106.691],[-70.98,-106.987],[-70.586,-107.183],[-70.292,-107.577],[-69.896,-108.069],[-69.505,-108.658],[-68.693,-109.148],[-66.677,-109.148],[-65.868,-109.543],[-65.473,-109.936],[-64.982,-110.326],[-64.982,-110.721],[-65.378,-110.92],[-66.161,-110.326],[-66.259,-109.936],[-66.9,-109.835],[-67.147,-109.835],[-68.03,-110.131],[-68.523,-110.92],[-68.915,-110.92],[-69.309,-110.92],[-70.98,-111.117],[-71.374,-111.214],[-71.768,-111.51],[-72.161,-111.803],[-72.257,-112.27],[-72.257,-113.081],[-71.572,-113.178],[-71.033,-113.172],[-70.391,-113.178],[-69.997,-113.277],[-69.113,-113.475],[-68.424,-114.262],[-68.03,-114.163],[-67.734,-113.772],[-67.734,-112.787],[-67.538,-112.394],[-67.34,-112],[-66.456,-111.605],[-65.966,-111.902],[-65.868,-112.296],[-65.081,-112.787],[-64.296,-112.787],[-63.41,-112.787],[-63.016,-112.984],[-63.115,-113.772],[-63.508,-114.655],[-63.805,-115.144],[-64.589,-115.54],[-65.277,-116.226],[-65.277,-117.015],[-65.671,-117.212],[-65.771,-117.604],[-65.771,-117.998],[-66.161,-118.195],[-66.948,-118.491],[-67.34,-118.784],[-67.048,-119.177],[-66.654,-119.274],[-65.966,-118.585],[-65.771,-118.195],[-65.305,-118.195],[-64.883,-118.195],[-64.49,-118.29],[-64.099,-118.241],[-64,-119.766],[-64,-120.159],[-63.901,-120.552],[-63.707,-120.948],[-63.805,-121.341],[-64.198,-121.537],[-65.03,-121.732],[-65.868,-121.636],[-66.064,-121.24],[-66.482,-121.14],[-67.833,-121.14],[-67.443,-121.732],[-67.048,-121.832],[-66.654,-122.027],[-66.654,-122.419],[-67.443,-122.715],[-67.833,-122.914],[-67.538,-123.207],[-65.868,-123.207],[-65.868,-122.127],[-64.318,-122.127],[-63.901,-122.225],[-63.707,-122.617],[-62.868,-122.715],[-62.423,-122.715],[-61.348,-122.32],[-60.753,-122.522],[-60.46,-122.914],[-60.068,-123.307],[-60.361,-123.893],[-60.753,-124.386],[-61.348,-124.781],[-61.934,-124.682],[-62.329,-124.485],[-62.721,-124.386],[-63.115,-124.485],[-63.508,-124.781],[-63.707,-125.172],[-63.212,-125.566],[-62.82,-125.469],[-62.423,-125.368],[-61.591,-125.368],[-60.753,-125.368],[-60.361,-125.566],[-59.97,-125.761],[-59.677,-126.153],[-59.28,-125.96],[-58.641,-125.96],[-58.003,-125.96],[-57.607,-126.057],[-57.509,-126.452],[-58.297,-127.041],[-58.492,-127.041],[-58.689,-127.041],[-59.18,-127.337],[-59.677,-127.831],[-59.773,-128.221],[-59.724,-128.786],[-59.773,-129.401],[-59.677,-129.791],[-59.724,-130.039],[-58.1,-130.039],[-58.1,-131.195],[-58.887,-132.252],[-58.887,-132.643],[-58.986,-133.239],[-60.164,-133.239],[-60.656,-133.333],[-61.049,-133.432],[-61.444,-133.628],[-61.836,-133.825],[-62.132,-134.216],[-62.229,-134.808],[-62.229,-135.005],[-61.836,-135.201],[-61.542,-135.591],[-61.318,-135.599],[-61.151,-135.591],[-60.264,-135.69],[-59.871,-135.789],[-59.081,-135.789],[-58.297,-135.789],[-57.904,-135.494],[-57.509,-135.005],[-57.509,-134.808],[-57.706,-134.416],[-58.003,-133.825],[-57.509,-132.349],[-57.017,-132.546],[-57.017,-135.69],[-56.723,-136.086],[-56.335,-136.481],[-56.335,-136.675],[-56.624,-137.167],[-57.118,-137.658],[-57.706,-137.562],[-58.1,-137.364],[-58.764,-137.364],[-59.378,-137.364],[-59.871,-137.463],[-60.164,-137.412],[-60.164,-138.643],[-59.773,-138.739],[-59.378,-138.542],[-59.012,-138.542],[-58.199,-138.643],[-57.807,-138.937],[-58.1,-139.33],[-58.495,-139.722],[-58.872,-139.669],[-59.28,-139.624],[-59.677,-139.92],[-60.068,-140.018],[-60.46,-140.018],[-61.074,-140.214],[-62.031,-140.115],[-62.031,-139.432],[-62.229,-139.036],[-62.4,-139.023],[-62.626,-139.036],[-63.016,-139.33],[-63.016,-139.722],[-62.921,-140.507],[-62.721,-140.903],[-62.329,-141.002],[-62.031,-141.394],[-62.031,-141.789],[-62.031,-142.575],[-61.836,-143.657],[-60.656,-143.657],[-60.46,-144.637],[-60.164,-145.036],[-59.637,-145.127],[-59.378,-145.131],[-58.986,-145.131],[-58.592,-145.425],[-58.689,-145.818],[-58.79,-146.407],[-58.495,-146.997],[-58.199,-147.39],[-58.003,-147.786],[-57.607,-148.081],[-56.823,-148.473],[-56.253,-148.419],[-55.643,-148.374],[-55.249,-148.473],[-55.055,-148.864],[-54.956,-149.257],[-54.758,-149.653],[-54.365,-149.851],[-53.971,-150.045],[-53.579,-150.045],[-53.186,-150.144],[-52.983,-150.144],[-52.792,-150.144],[-52.499,-150.536],[-52.598,-151.002],[-56.23,-151.002],[-57.216,-151.226],[-56.335,-151.424],[-55.249,-152.111],[-54.661,-151.913],[-54.169,-151.617],[-53.723,-151.617],[-53.28,-151.617],[-52.888,-151.715],[-52.499,-151.715],[-52.007,-151.812],[-51.71,-152.208],[-51.414,-152.601],[-50.926,-153.09],[-50.63,-153.485],[-49.84,-153.585],[-49.451,-153.585],[-47.876,-153.682],[-47.482,-153.781],[-47.09,-153.878],[-46.697,-154.271],[-46.401,-154.664],[-46.302,-155.453],[-46.503,-156.24],[-46.895,-156.435],[-47.777,-156.534],[-48.663,-156.435],[-49.155,-156.141],[-49.941,-156.041],[-50.826,-156.24],[-51.318,-156.435],[-51.906,-156.635],[-52.4,-156.831],[-53.28,-156.635],[-53.533,-156.633],[-53.775,-156.635],[-54.661,-156.435],[-55.055,-156.141],[-55.448,-155.846],[-55.742,-155.059],[-55.939,-154.664],[-56.335,-154.568],[-56.831,-154.557],[-57.216,-154.568],[-58.052,-154.468],[-58.887,-154.568],[-59.18,-154.961],[-60.215,-155.059],[-60.855,-155.059],[-61.542,-154.374],[-61.74,-153.979],[-62.132,-153.781],[-62.525,-153.781],[-62.956,-153.781],[-63.41,-153.781],[-64.198,-153.585],[-64.589,-153.289],[-65.473,-153.09],[-65.868,-152.799],[-66.361,-152.406],[-66.948,-151.424],[-67.34,-151.226],[-67.734,-151.424],[-67.538,-151.812],[-67.147,-152.011],[-66.948,-152.406],[-66.654,-152.799],[-66.161,-153.585],[-65.977,-153.584],[-65.771,-153.585],[-65.13,-153.878],[-65.18,-154.271],[-65.18,-155.159],[-64.689,-155.55],[-64.296,-155.653],[-63.901,-155.945],[-63.901,-156.336],[-63.901,-156.729],[-64.099,-157.123],[-64.395,-157.519],[-64.783,-157.519],[-65.18,-157.519],[-65.574,-157.42],[-66.066,-157.419],[-66.556,-157.42],[-66.948,-157.318],[-68.225,-157.318],[-68.72,-157.494],[-68.72,-156.24],[-68.815,-155.846],[-68.72,-155.525],[-69.214,-155.356],[-69.701,-155.55],[-70.391,-155.55],[-71.078,-155.55],[-71.863,-155.159],[-72.257,-155.059],[-72.65,-154.768],[-72.878,-154.76],[-73.046,-154.768],[-72.947,-155.159],[-72.749,-155.55],[-72.552,-156.041],[-72.161,-156.336],[-71.768,-156.336],[-70.883,-156.336],[-70.096,-156.435],[-69.701,-156.729],[-69.799,-157.123],[-70.193,-157.318],[-70.441,-157.318],[-70.688,-157.318],[-71.324,-157.42],[-72.849,-157.123],[-73.633,-157.123],[-74.051,-157.028],[-76.757,-157.028],[-77.81,-157.221],[-78.844,-157.028],[-79.335,-156.93],[-79.728,-156.729],[-80.124,-156.635],[-80.714,-156.336],[-80.944,-156.336],[-81.204,-156.336],[-81.796,-156.141],[-82.038,-156.141],[-82.285,-156.141],[-82.779,-155.945],[-83.172,-155.846],[-83.661,-155.653],[-84.055,-155.846],[-83.954,-156.24],[-83.366,-157.028],[-83.072,-157.42],[-82.185,-157.812],[-81.671,-157.906],[-75.035,-157.906],[-74.617,-158.01],[-74.323,-158.403],[-73.908,-158.5],[-68.352,-158.5],[-67.928,-158.597],[-67.147,-158.597],[-66.753,-158.794],[-66.556,-159.188],[-66.323,-159.2],[-66.161,-159.188],[-65.771,-159.387],[-65.378,-159.387],[-65.189,-159.385],[-64.982,-159.387],[-64.589,-159.679],[-63.836,-159.695],[-63.309,-159.679],[-62.82,-159.776],[-62.82,-160.666],[-64,-160.762],[-64.589,-160.564],[-64.783,-160.564],[-65.18,-160.762],[-66.456,-160.96],[-67.246,-160.86],[-68.225,-160.96],[-68.62,-161.154],[-68.225,-161.45],[-68.424,-161.843],[-68.815,-161.843],[-69.555,-162.038],[-69.799,-162.038],[-70.214,-161.745],[-72.137,-161.745],[-72.947,-162.235],[-73.339,-162.334],[-74.223,-162.334],[-76.583,-162.334],[-77.172,-162.334],[-78.647,-162.334],[-79.432,-162.334],[-80.223,-162.235],[-80.613,-161.894],[-84.055,-161.894],[-83.954,-162.334],[-83.193,-162.334],[-82.382,-162.235],[-82.089,-162.628],[-81.892,-163.072],[-70.096,-163.072],[-70.096,-163.513],[-70.49,-163.906],[-70.883,-164.104],[-71.768,-164.302],[-72.257,-164.302],[-73.142,-164.401],[-73.927,-164.498],[-74.323,-164.697],[-74.714,-164.791],[-75.599,-164.791],[-76.484,-164.791],[-76.878,-164.697],[-77.763,-164.697],[-78.253,-164.697],[-79.068,-164.89],[-87.47,-164.937]],\"c\":true},\"ix\":2},\"nm\":\"Path 1\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":1,\"ty\":\"sh\",\"ix\":2,\"ks\":{\"a\":0,\"k\":{\"i\":[[0.392,0.1],[0.13,-0.046],[0.245,0.309],[0.688,0],[0.395,0],[0,0],[0,0],[0,0],[0,0],[0.157,-0.468],[0,0],[0,0],[0,0],[0.589,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[-0.199,-0.496],[0,0],[0.395,0.396],[0.488,0],[0,0],[0.292,0.398],[0.492,-0.096],[0,0],[0,0],[0.491,-0.098],[0,0],[0,0],[0.395,0],[0,0],[0,0],[0,0],[0,0],[0.393,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[-0.395,0],[0,0],[-0.689,-0.198],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[-0.195,0.593],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[-0.492,0.096],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0.496,0.196],[0.392,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0.394,0],[0,-0.493],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[-0.492,0.195],[0,0],[0,0],[0,0],[0,0],[0,0],[0.788,0],[0,0],[0,0],[0.395,0],[0,0],[0,0],[0,0],[0,0],[0,0],[-0.787,-0.295],[-0.492,0],[-0.099,0.39],[0,0],[-0.391,0],[-0.393,0.195],[-0.593,0],[0,0],[-0.384,-0.084],[0,0],[0,0],[0,0],[-0.688,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[-0.296,0.394],[0,0],[-0.986,0],[0,0],[0,0.489],[0,0],[0.494,0.393],[0,0],[0,0],[0,0],[0,0],[0,0],[-0.395,0.097],[0,0],[0,0],[0,0],[0,0],[-0.392,0.392],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[-0.493,0.101],[0,0],[0,0],[0,0],[0,0],[0.39,0],[0.394,0.29],[0.79,0],[0,0],[0,0],[0,0],[0,0],[0,0],[-0.784,0],[0,0],[0,0],[-0.196,0.342],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0.198,0.395],[0,0],[0,0],[0,0]],\"o\":[[-0.149,-0.037],[-0.218,0.077],[-0.395,-0.489],[-0.687,0],[-0.394,0],[-0.589,0.489],[-1.084,-1.081],[0,0],[0,0],[-0.294,0.883],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[-0.886,-0.294],[-0.59,0.686],[0,0],[0,0],[0.591,0.591],[0,0],[0.195,0.486],[0,0],[-0.393,-0.388],[0,0],[0,0],[-0.297,-0.393],[-0.491,0.101],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0.393,0],[0,0],[0.688,0.198],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0.196,-0.588],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0.494,-0.097],[0,0],[0,0],[0,0],[-0.883,0.588],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[-0.785,0.396],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[-0.491,-0.196],[-0.395,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[-0.392,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0.49,-0.197],[0,0],[0,0],[0,0],[0,0],[0,0],[-0.785,0],[0,0],[0,0],[-0.394,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0.786,0.296],[0.494,0],[0.096,-0.395],[0,0],[0.397,0],[0.393,-0.196],[0,0],[0.193,0.491],[1.376,0.293],[0,0],[0,0],[0,0],[0.688,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0.293,-0.393],[0,0],[0,0],[0.59,0],[0,-0.492],[0,0],[-0.49,-0.398],[0,0],[0,0],[0,0],[0,0],[0,0],[0.393,-0.099],[0,0],[0,0],[0,0],[0,0],[0.391,-0.392],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0.491,-0.097],[0,0],[0,0],[0,0],[0,0],[-0.394,0],[-0.392,-0.297],[-0.787,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0.79,0],[0,0],[0,0],[0.392,-0.688],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[-0.196,-0.394],[0,0],[-0.979,-0.494],[0,0]],\"v\":[[-156.114,-161.45],[-156.528,-161.394],[-157.197,-161.549],[-158.081,-162.334],[-159.361,-162.235],[-159.656,-161.154],[-161.522,-161.253],[-163.291,-162.334],[-165.16,-162.432],[-166.734,-162.432],[-166.538,-160.564],[-167.421,-160.564],[-168.6,-161.253],[-169.485,-161.646],[-171.256,-161.646],[-171.351,-160.86],[-172.926,-160.86],[-175.482,-161.054],[-177.35,-160.268],[-178.234,-159.091],[-175.976,-159.091],[-173.124,-158.01],[-172.434,-157.906],[-171.845,-156.729],[-173.812,-156.93],[-175.187,-157.812],[-177.35,-157.812],[-178.824,-158.304],[-179.809,-159.387],[-181.382,-159.188],[-182.564,-159.877],[-183.446,-159.877],[-184.431,-159.679],[-184.627,-158.794],[-184.627,-157.713],[-186,-157.713],[-187.674,-158.205],[-188.556,-158.205],[-189.442,-157.42],[-190.328,-157.028],[-191.312,-157.028],[-192.39,-157.028],[-192.588,-156.24],[-194.556,-156.336],[-194.656,-155.453],[-193.376,-155.256],[-192.685,-155.059],[-192.784,-153.878],[-191.212,-153.585],[-190.328,-152.503],[-188.656,-152.406],[-187.181,-151.913],[-185.511,-151.715],[-184.525,-152.896],[-183.936,-153.585],[-181.969,-153.781],[-183.248,-152.896],[-184.135,-151.715],[-183.936,-150.536],[-181.086,-150.638],[-178.728,-150.638],[-177.843,-151.812],[-175.976,-151.617],[-173.516,-151.617],[-172.04,-152.601],[-171.058,-153.485],[-170.863,-154.174],[-169.584,-154.174],[-167.815,-154.86],[-166.144,-154.664],[-167.323,-154.568],[-168.8,-153.781],[-170.468,-152.702],[-168.309,-152.799],[-167.323,-152.601],[-166.439,-152.503],[-167.028,-151.715],[-169.191,-151.715],[-170.959,-151.617],[-172.04,-151.226],[-173.027,-151.13],[-175.286,-150.536],[-176.464,-150.536],[-177.644,-150.341],[-177.644,-149.356],[-176.367,-149.161],[-175.482,-148.573],[-174.99,-147.589],[-172.336,-147.193],[-173.516,-146.997],[-175.09,-147.096],[-176.96,-148.278],[-179.513,-149.653],[-181.481,-149.752],[-184.431,-150.045],[-184.627,-148.966],[-183.543,-148.081],[-182.07,-146.903],[-179.513,-145.327],[-177.843,-144.637],[-175.187,-144.44],[-175.876,-143.755],[-176.858,-143.359],[-176.858,-142.183],[-179.317,-143.852],[-180.99,-144.148],[-183.052,-143.951],[-184.525,-143.657],[-186,-142.966],[-186,-141.887],[-185.906,-141.099],[-184.431,-140.804],[-182.266,-140.804],[-180.496,-141.002],[-182.167,-140.115],[-181.676,-139.036],[-180.202,-138.84],[-179.121,-139.132],[-177.057,-140.507],[-177.644,-139.234],[-179.218,-138.15],[-180.99,-138.051],[-183.739,-138.937],[-185.807,-139.92],[-188.068,-139.821],[-187.577,-138.739],[-187.28,-137.167],[-189.148,-136.872],[-189.935,-135.789],[-188.556,-134.317],[-186.788,-133.628],[-184.922,-134.216],[-184.232,-134.317],[-182.463,-133.921],[-181.086,-133.921],[-179.809,-134.611],[-178.631,-134.02],[-177.154,-134.02],[-176.464,-134.317],[-174.892,-134.317],[-174.99,-133.136],[-172.926,-133.239],[-171.747,-133.239],[-170.175,-133.825],[-169.388,-134.317],[-168.208,-135.398],[-168.6,-136.481],[-170.175,-135.789],[-170.665,-137.265],[-168.995,-137.562],[-168.503,-138.937],[-169.09,-140.214],[-167.914,-140.214],[-165.75,-140.115],[-164.864,-140.314],[-164.764,-141.593],[-165.651,-142.771],[-163.982,-142.771],[-162.898,-142.966],[-163.786,-144.244],[-165.358,-144.637],[-166.931,-144.935],[-168.208,-144.244],[-169.191,-143.657],[-169.584,-144.637],[-168.009,-145.036],[-167.914,-145.719],[-166.734,-146.308],[-165.259,-146.308],[-164.571,-145.523],[-162.606,-145.231],[-161.326,-145.523],[-159.853,-146.508],[-161.622,-147.786],[-159.656,-147.882],[-158.867,-146.997],[-157.294,-147.096],[-155.43,-147.684],[-156.214,-149.063],[-157.491,-149.554],[-155.232,-149.554],[-153.856,-149.554],[-153.068,-150.437],[-151.396,-150.934],[-149.727,-152.011],[-147.562,-152.702],[-145.792,-153.979],[-144.023,-154.078],[-143.042,-154.664],[-143.826,-155.653],[-145.103,-155.159],[-147.17,-154.664],[-148.055,-155.059],[-150.512,-154.961],[-150.117,-155.846],[-148.249,-156.24],[-146.087,-156.24],[-143.924,-156.24],[-141.862,-156.729],[-139.893,-157.318],[-137.732,-157.42],[-137.141,-158.5],[-137.536,-159.877],[-139.206,-159.484],[-140.682,-159.679],[-141.072,-160.666],[-143.042,-161.646],[-144.516,-161.253],[-146.581,-161.253],[-148.842,-160.666],[-148.743,-161.549],[-150.414,-161.646],[-151.889,-161.549],[-152.38,-162.235],[-153.856,-162.334],[-155.819,-162.828]],\"c\":true},\"ix\":2},\"nm\":\"Path 2\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":2,\"ty\":\"sh\",\"ix\":3,\"ks\":{\"a\":0,\"k\":{\"i\":[[0.049,-0.009],[0.172,-0.022],[0.119,0],[0,0],[0.127,0],[0.146,-0.077],[0.02,-0.175],[0,-0.146],[0,-0.151],[0,-0.196],[0.344,0.024],[0.145,0],[0,0],[0,0],[0.07,0.011],[0.085,-0.043],[0,-0.198],[0.025,-0.123],[0,-0.171],[0,-0.173],[0,0],[0.61,-0.048],[0.173,-0.022],[0.124,-0.021],[0.152,-0.024],[0.069,0.007],[0.06,-0.012],[0.149,-0.072],[0.148,-0.147],[0,0],[0,0],[-0.049,0.148],[-0.074,0.124],[-0.122,0.072],[-0.16,-0.032],[-0.112,0.02],[-0.125,0.027],[-0.174,0.055],[-0.134,-0.016],[-0.129,0.027],[-0.17,0.029],[-0.118,0],[-0.27,0.099],[-0.124,0.05],[-0.172,0],[-0.301,-0.072],[-0.122,-0.024],[-0.195,0],[0,0],[0.023,0.121],[0,0.319],[-0.343,0],[-0.2,-0.097],[-0.099,-0.07],[-0.123,-0.125],[-0.416,0],[-0.414,0.024],[0,0.198],[0,0.146],[0,0],[0.343,-0.027],[0.148,0],[0.293,0],[0.147,0.024],[-0.171,0.199],[-0.176,0.175],[-0.148,0.196],[0,0],[0.083,0]],\"o\":[[-0.197,0.024],[-0.122,0],[0,0],[-0.122,0],[-0.17,0.024],[-0.15,0.072],[-0.027,0.124],[0,0.147],[0,0.195],[-0.345,0],[-0.147,0],[0,0],[0,0],[-0.072,0.011],[-0.098,-0.015],[-0.147,0.07],[0,0.146],[-0.05,0.148],[0,0.173],[0,0],[-0.614,0.078],[-0.198,0],[-0.125,0.027],[-0.145,0.028],[-0.061,0.014],[-0.066,-0.006],[-0.147,0.028],[-0.194,0.102],[0,0],[0,0],[0.099,-0.099],[0.05,-0.122],[0.075,-0.125],[0.131,-0.087],[0.114,0.022],[0.12,-0.025],[0.172,-0.047],[0.138,-0.035],[0.124,0.015],[0.175,-0.02],[0.123,-0.021],[0.275,-0.021],[0.12,-0.022],[0.148,-0.071],[0.323,0],[0.12,0.028],[0.178,0.05],[0,0],[-0.022,-0.148],[-0.075,-0.296],[0,-0.345],[0.244,0],[0.12,0.049],[0.122,0.078],[0.293,0.294],[0.419,0],[0,-0.196],[0,-0.146],[0,0],[-0.344,0],[-0.149,0],[-0.291,0.024],[-0.148,0],[0.147,-0.223],[0.148,-0.172],[0.169,-0.169],[0,0],[-0.098,0],[-0.042,0]],\"v\":[[87.005,-155.256],[86.514,-155.159],[86.125,-155.059],[85.725,-155.059],[85.333,-154.961],[84.844,-154.86],[84.451,-154.568],[84.451,-154.174],[84.548,-153.781],[84.451,-153.289],[83.565,-153.289],[83.172,-153.386],[82.678,-153.386],[82.286,-153.386],[82.074,-153.398],[81.796,-153.386],[81.504,-152.994],[81.599,-152.601],[81.203,-152.406],[81.402,-152.011],[81.402,-151.325],[79.831,-151.226],[79.337,-151.13],[78.941,-151.031],[78.548,-150.833],[78.349,-150.833],[78.156,-150.833],[77.763,-150.638],[77.37,-150.244],[76.98,-149.851],[77.37,-149.554],[77.763,-149.752],[77.763,-150.144],[77.96,-150.536],[78.406,-150.56],[78.749,-150.536],[79.141,-150.638],[79.536,-150.934],[79.943,-150.937],[80.32,-150.934],[80.712,-151.226],[81.103,-151.226],[81.893,-151.325],[82.286,-151.424],[82.48,-151.812],[83.272,-151.523],[83.661,-151.424],[84.178,-151.325],[84.941,-151.325],[84.941,-151.715],[84.645,-152.503],[85.432,-152.994],[86.023,-152.799],[86.415,-152.702],[86.611,-152.305],[87.618,-151.913],[88.674,-152.011],[88.773,-152.503],[88.674,-152.896],[88.674,-153.386],[87.793,-153.386],[87.397,-153.289],[86.611,-153.289],[86.22,-153.386],[86.611,-153.979],[87.105,-154.374],[87.497,-154.86],[87.397,-155.256],[87.139,-155.268]],\"c\":true},\"ix\":2},\"nm\":\"Path 3\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":3,\"ty\":\"sh\",\"ix\":4,\"ks\":{\"a\":0,\"k\":{\"i\":[[-0.098,-0.586],[0,0],[-0.099,-0.492],[0,0],[0,0],[0,0],[-0.492,-0.196],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0.394,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0.39],[-0.488,-0.195],[0,0],[0,0],[0,0],[0.884,0.394],[0,0],[0,0],[0,0],[0.395,0.102],[0,0.392],[0.394,0.196],[0.883,0.29],[0,0],[0,0],[0.394,0.093],[0,0]],\"o\":[[0,0],[0.589,0],[0.095,0.49],[0,0],[0,0],[0,0],[0.491,0.199],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0.491,0],[0,0],[0,0],[0,0],[0,-0.392],[0.494,0.197],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[-0.39,-0.095],[0,-0.396],[-0.392,-0.197],[-0.886,-0.299],[0,0],[0,0],[-0.392,-0.101],[0,0]],\"v\":[[-199.274,-154.078],[-197.801,-154.078],[-197.307,-153.386],[-198.484,-153.09],[-200.355,-153.09],[-201.14,-152.799],[-199.863,-152.011],[-199.766,-151.13],[-201.338,-151.226],[-202.42,-151.031],[-202.126,-149.752],[-203.11,-149.161],[-203.11,-147.982],[-201.832,-147.882],[-201.832,-146.607],[-200.257,-145.818],[-198.879,-146.011],[-197.503,-146.407],[-195.638,-146.508],[-194.753,-145.523],[-196.424,-145.036],[-198.094,-145.036],[-199.274,-144.44],[-197.604,-143.557],[-196.717,-142.183],[-193.866,-141.593],[-191.705,-141.887],[-189.735,-141.394],[-189.05,-142.183],[-188.165,-142.183],[-187.97,-143.166],[-187.773,-144.244],[-186.298,-143.657],[-185.807,-144.44],[-184.037,-144.344],[-182.758,-145.231],[-182.758,-146.703],[-184.724,-147.291],[-186,-147.684],[-186.592,-148.669],[-186.592,-149.458],[-187.773,-150.144],[-188.758,-149.458],[-189.442,-150.437],[-190.426,-151.325],[-192.49,-151.812],[-193.573,-152.799],[-194.556,-153.682],[-196.228,-154.86],[-197.307,-154.961]],\"c\":true},\"ix\":2},\"nm\":\"Path 4\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":4,\"ty\":\"sh\",\"ix\":5,\"ks\":{\"a\":0,\"k\":{\"i\":[[0.244,0],[0.17,0.048],[0.123,0.024],[0,0],[0,0],[-0.172,-0.074],[-0.145,-0.07],[-0.2,0],[0,0],[-0.194,0.122],[-0.023,0.15],[0,0.15],[0.027,0.148],[0.075,0.122],[0.248,0]],\"o\":[[-0.196,0],[-0.128,-0.025],[0,0],[0,0],[0.197,0.022],[0.172,0.073],[0.149,0.078],[0,0],[0.246,0],[0.124,-0.073],[0.028,-0.122],[0,-0.17],[-0.023,-0.124],[-0.123,-0.195],[-0.243,0]],\"v\":[[148.352,-153.979],[147.863,-154.174],[147.464,-154.271],[147.17,-153.878],[147.17,-153.09],[147.662,-152.994],[148.055,-152.702],[148.451,-152.406],[148.646,-152.406],[149.235,-152.601],[149.628,-152.799],[149.727,-153.192],[149.53,-153.585],[149.53,-153.979],[148.941,-154.271]],\"c\":true},\"ix\":2},\"nm\":\"Path 5\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":5,\"ty\":\"sh\",\"ix\":6,\"ks\":{\"a\":0,\"k\":{\"i\":[[0.274,-0.124],[0.121,-0.049],[0.171,-0.073],[0.165,0],[0.14,-0.033],[0.149,-0.05],[0.297,-0.023],[0.348,0],[0.152,0],[0.028,-0.296],[0.075,-0.148],[0.195,-0.047],[0.133,0.012],[0.131,-0.022],[0.149,-0.051],[0.171,-0.072],[0.07,-0.098],[-0.123,-0.074],[-0.241,0],[-0.295,0],[0,0],[-0.148,-0.121],[-0.169,-0.097],[-0.149,0],[-0.098,-0.046],[-0.146,-0.05],[-0.225,0],[-0.196,0.026],[-0.151,0.072],[-0.197,0.049],[-0.125,0],[-0.116,-0.009],[-0.149,0.027],[-0.125,0.049],[-0.171,0.051],[-0.294,0],[-0.611,0.049],[0,0.197],[-0.146,0.25],[-0.15,0.123],[-0.069,-0.018],[-0.063,0.038],[-0.148,0.101],[-0.123,0.076],[0.123,0.073],[0.024,0.025],[0,0],[0.248,0.296],[0.124,0.071],[0.083,-0.016],[0.048,0.009],[0.174,0]],\"o\":[[-0.121,0.048],[-0.147,0.075],[-0.166,0.07],[-0.127,-0.001],[-0.147,0.022],[-0.292,0.097],[-0.315,0.049],[-0.146,0],[0,0.296],[0,0.172],[-0.098,0.196],[-0.14,0.029],[-0.125,-0.013],[-0.147,0.028],[-0.171,0.075],[-0.125,0.054],[0.07,0.149],[0.2,0.15],[0.302,0],[0,0],[0.221,0.029],[0.127,0.102],[0.121,0.052],[0.12,0],[0.147,0.078],[0.195,0.054],[0.22,0],[0.175,-0.022],[0.173,-0.103],[0.126,-0.026],[0.12,-0.012],[0.142,0.01],[0.123,-0.026],[0.171,-0.075],[0.269,-0.099],[0.614,0],[0.026,-0.195],[0.029,-0.297],[0.075,-0.145],[0.05,-0.035],[0.071,0.018],[0.146,-0.094],[0.123,-0.074],[-0.151,-0.073],[-0.025,0],[0,0],[0,-0.394],[-0.098,-0.124],[-0.058,-0.045],[-0.058,0.011],[-0.148,-0.026],[-0.319,0]],\"v\":[[156.999,-153.682],[156.61,-153.585],[156.314,-153.192],[155.826,-153.122],[155.428,-153.09],[155.035,-152.896],[154.246,-152.601],[153.365,-152.601],[152.97,-152.503],[152.97,-151.715],[152.774,-151.325],[152.383,-150.934],[151.978,-150.932],[151.595,-150.934],[151.199,-150.734],[150.712,-150.638],[150.615,-150.244],[150.808,-149.851],[151.394,-149.653],[152.184,-149.851],[152.383,-149.851],[152.774,-149.458],[153.069,-149.063],[153.465,-148.966],[153.758,-148.769],[154.152,-148.573],[154.743,-148.573],[155.331,-148.573],[155.723,-148.864],[156.116,-149.257],[156.512,-149.257],[156.863,-149.252],[157.296,-149.257],[157.691,-149.356],[157.986,-149.752],[158.772,-149.752],[160.344,-149.851],[160.441,-150.341],[160.54,-151.13],[160.837,-151.523],[161.022,-151.521],[161.23,-151.523],[161.525,-151.913],[161.92,-152.111],[161.525,-152.305],[161.525,-152.406],[158.969,-152.406],[158.772,-153.386],[158.576,-153.781],[158.35,-153.792],[158.184,-153.781],[157.788,-153.979]],\"c\":true},\"ix\":2},\"nm\":\"Path 6\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":6,\"ty\":\"sh\",\"ix\":7,\"ks\":{\"a\":0,\"k\":{\"i\":[[0.067,-0.017],[0.123,-0.049],[0.124,-0.048],[0.124,0],[0.184,0.018],[0.221,-0.036],[0.122,-0.027],[0.174,-0.073],[0.2,0],[0.173,0.053],[0,0],[-0.321,-0.196],[-0.148,-0.074],[-0.394,0],[-0.194,0.05],[-0.147,0.078],[-0.121,0.099],[-0.099,0.12],[-0.145,0.098],[-0.121,0.049],[-0.147,0.049],[-0.149,0.049],[-0.264,0.048],[0,0],[0.144,0.022],[0,0],[0.147,0],[0.217,0],[0.126,0]],\"o\":[[-0.121,0.025],[-0.121,0.05],[-0.124,0.05],[-0.222,0.038],[-0.184,-0.019],[-0.124,0.027],[-0.175,0.048],[-0.171,0.075],[-0.195,0],[0,0],[0.273,0.27],[0.148,0.094],[0.319,0.196],[0.219,0],[0.148,-0.048],[0.147,-0.074],[0.123,-0.094],[0.097,-0.122],[0.101,-0.075],[0.148,-0.074],[0.145,-0.048],[0.269,-0.097],[0,0],[-0.147,-0.051],[0,0],[-0.121,0],[-0.221,-0.027],[-0.149,0],[-0.062,0]],\"v\":[[99.096,-153.682],[98.702,-153.585],[98.605,-153.192],[98.214,-153.192],[97.622,-153.192],[97.034,-153.192],[96.642,-153.09],[96.243,-152.799],[95.852,-152.503],[95.359,-152.702],[95.557,-152.305],[96.346,-151.617],[96.74,-151.325],[97.721,-151.031],[98.309,-151.13],[98.702,-151.325],[99.096,-151.523],[99.297,-151.913],[99.587,-152.305],[99.98,-152.406],[100.375,-152.601],[100.77,-152.799],[101.553,-152.994],[101.454,-153.386],[101.065,-153.585],[100.669,-153.585],[100.277,-153.682],[99.689,-153.682],[99.289,-153.705]],\"c\":true},\"ix\":2},\"nm\":\"Path 7\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":7,\"ty\":\"sh\",\"ix\":8,\"ks\":{\"a\":0,\"k\":{\"i\":[[0.101,-0.05],[0.121,-0.102],[0.198,-0.097],[0.125,-0.048],[0.145,-0.048],[0,0],[0.024,-0.125],[0.075,-0.098],[0.122,-0.078],[0.245,-0.197],[0.071,-0.117],[0,0],[-0.167,-0.076],[-0.221,0],[0,0],[-0.169,0.054],[-0.222,0],[0,0],[-0.197,0],[-0.561,0.023],[-0.147,0.027],[0.102,0.175],[0.051,0.175],[0.051,0.12],[0.074,0.322],[0,0.293],[0,0]],\"o\":[[-0.144,0.099],[-0.147,0.12],[-0.123,0.053],[-0.148,0.073],[0,0],[0,0.15],[-0.022,0.121],[-0.071,0.101],[-0.268,0.172],[-0.125,0.099],[0,0],[0.145,0.075],[0.198,0.096],[0,0],[0.196,-0.024],[0.199,-0.072],[0,0],[0.196,0],[0.566,0.048],[0.173,0],[-0.122,-0.148],[-0.074,-0.145],[-0.024,-0.118],[-0.124,-0.294],[-0.072,-0.268],[0,0],[-0.122,0.05]],\"v\":[[92.508,-153.485],[92.217,-153.09],[91.823,-152.702],[91.427,-152.601],[91.039,-152.406],[90.544,-152.702],[90.544,-152.305],[90.544,-151.913],[90.152,-151.812],[89.365,-151.325],[89.169,-150.934],[89.561,-150.734],[89.954,-150.437],[90.544,-150.341],[90.742,-150.341],[91.133,-150.638],[91.723,-150.638],[92.311,-150.638],[92.806,-150.536],[94.279,-150.536],[94.674,-150.685],[94.279,-151.13],[93.984,-151.523],[93.984,-151.913],[93.493,-152.702],[93.493,-153.485],[92.902,-153.585]],\"c\":true},\"ix\":2},\"nm\":\"Path 8\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":8,\"ty\":\"sh\",\"ix\":9,\"ks\":{\"a\":0,\"k\":{\"i\":[[0.147,0],[0.217,-0.17],[0.073,-0.122],[0.123,-0.146],[0.194,-0.073],[0.465,0],[0.269,-0.053],[0.145,-0.049],[0.15,-0.031],[0,0],[0.199,0.05],[0.123,0.024],[0.176,0.05],[0.101,-0.175],[0.124,-0.022],[0.169,0],[0.171,0.05],[0.124,0.028],[0.322,0],[0,0],[-0.147,-0.296],[-0.419,0],[-0.296,0.099],[-0.122,0.027],[-0.172,0.049],[-0.148,0.028],[-0.314,0],[-0.291,-0.021],[-0.146,0],[-0.148,0],[0,0],[0.197,-0.025],[0.342,0],[0,0],[-0.096,-0.128],[-0.199,-0.1],[0,0],[-0.467,0],[-0.271,0.099],[-0.097,0.147],[-0.027,0.247],[0.023,0.293],[0,0],[-0.445,0],[-0.167,0],[0,0],[-0.223,0.099],[-0.149,0.099],[-0.125,0.095],[0,0.17],[0,0],[0.416,0],[0,0],[0.172,0]],\"o\":[[-0.295,0],[-0.099,0.075],[-0.099,0.15],[-0.121,0.147],[-0.418,0.15],[-0.297,0],[-0.148,0.023],[-0.149,0.05],[0,0],[-0.219,0],[-0.121,-0.026],[-0.17,-0.049],[-0.099,0.172],[-0.072,0.121],[-0.146,0.051],[-0.199,0],[-0.123,-0.024],[-0.295,-0.072],[0,0],[0.024,0.342],[0.171,0.369],[0.32,0],[0.124,-0.025],[0.172,-0.047],[0.149,-0.046],[0.294,-0.049],[0.295,0],[0.149,0],[0.151,0],[0,0],[-0.147,0.147],[-0.32,0.052],[0,0],[0,0.17],[0.147,0.172],[0,0],[0.415,0.196],[0.295,0],[0.172,-0.072],[0.151,-0.199],[0.024,-0.291],[0,0],[0.441,-0.024],[0.169,0],[0,0],[0.273,0],[0.174,-0.073],[0.12,-0.102],[0.12,-0.1],[0,0],[-0.416,-0.098],[0,0],[-0.149,-0.024],[-0.151,0]],\"v\":[[72.456,-153.289],[71.671,-153.192],[71.671,-152.799],[71.276,-152.503],[70.883,-152.111],[69.507,-152.208],[68.72,-152.208],[68.329,-152.011],[67.932,-151.812],[67.734,-151.812],[67.145,-151.913],[66.753,-152.011],[66.262,-152.208],[65.965,-151.715],[65.868,-151.325],[65.475,-151.13],[65.083,-151.424],[64.69,-151.523],[63.876,-151.715],[63.116,-151.715],[63.215,-150.833],[64.1,-150.244],[64.885,-150.536],[65.277,-150.638],[65.768,-150.833],[66.163,-151.031],[66.971,-151.13],[67.734,-151.031],[68.126,-150.934],[68.526,-151.031],[68.621,-150.437],[68.23,-150.045],[67.344,-150.045],[67.344,-149.234],[67.539,-148.864],[68.03,-148.473],[68.427,-148.278],[69.556,-147.882],[70.293,-148.081],[70.682,-148.374],[70.98,-148.966],[70.883,-149.752],[70.883,-150.144],[72.039,-150.244],[72.456,-150.144],[72.676,-150.144],[73.341,-150.244],[73.733,-150.536],[74.126,-150.734],[74.323,-151.151],[74.323,-151.913],[73.243,-152.011],[73.243,-153.192],[72.849,-153.386]],\"c\":true},\"ix\":2},\"nm\":\"Path 9\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":9,\"ty\":\"sh\",\"ix\":10,\"ks\":{\"a\":0,\"k\":{\"i\":[[0.121,-0.072],[0.22,0],[0,0],[0.171,0],[0,0],[0.025,-0.394],[0.074,-0.269],[0.078,-0.145],[0,0],[0.268,0.345],[0.149,0.097],[0.151,0.05],[0.172,0],[1.255,0],[0.174,-0.026],[0.122,-0.047],[0,-0.297],[-0.1,-0.224],[-0.169,-0.05],[-0.148,-0.024],[0,0],[-0.122,-0.024],[-0.245,0],[-0.195,0.05],[-0.242,0],[-0.195,-0.049],[-0.124,-0.073],[-0.146,-0.122],[-0.047,-0.125],[0,0],[0,0],[-0.268,-0.101],[-0.342,0],[0,0],[-0.171,0],[-0.27,-0.102],[-0.151,-0.097],[-0.172,-0.024],[-0.121,-0.023],[-0.22,0],[-0.368,0.123],[-0.148,0.073],[-0.146,0.097],[-0.247,0],[-0.513,0],[-0.32,0.2],[-0.071,0.121],[-0.1,0.27],[-0.297,0.102],[-0.121,0],[-0.169,0.048],[-0.15,0.075],[0,0],[0.318,0.151],[0.316,0],[0.147,-0.027],[0.339,0],[0,0],[0.022,0.196],[0.072,0.148],[0.172,0.171],[0.095,0.146],[0.098,-0.051],[0.123,-0.099],[0.145,-0.122],[0.391,0],[0.145,0],[0.174,0.049],[0,0],[0,0],[0.027,0.148]],\"o\":[[-0.171,0.095],[0,0],[-0.174,0.025],[0,0],[-0.047,0.392],[0,0.296],[-0.047,0.174],[0,0],[0,-0.466],[-0.097,-0.149],[-0.119,-0.073],[-0.146,-0.047],[-1.253,0],[-0.172,0],[-0.147,0.027],[-0.244,0.124],[0,0.27],[0.073,0.172],[0.146,0.046],[0,0],[0.122,0],[0.222,0.049],[0.223,0],[0.222,-0.048],[0.225,0],[0.12,0.024],[0.146,0.076],[0.097,0.076],[0,0],[0,0],[0.298,0.124],[0.295,0.121],[0,0],[0.171,0],[0.296,0],[0.172,0.048],[0.146,0.099],[0.124,0.024],[0.198,0.025],[0.394,0],[0.148,-0.048],[0.172,-0.075],[0.197,-0.125],[0.515,0],[0.397,0],[0.122,-0.075],[0.144,-0.247],[0.096,-0.296],[0.118,-0.022],[0.173,-0.022],[0.172,-0.048],[0,0],[-0.246,-0.268],[-0.266,-0.124],[-0.177,0],[-0.319,0.049],[0,0],[-0.024,-0.2],[-0.024,-0.172],[-0.099,-0.196],[-0.122,-0.125],[-0.129,0.048],[-0.149,0.096],[-0.148,0.121],[-0.296,0.245],[-0.15,0],[-0.193,0],[0,0],[0,0],[-0.027,-0.147],[-0.119,0.049]],\"v\":[[22.023,-150.734],[21.632,-150.341],[21.434,-150.341],[21.016,-150.536],[19.858,-150.536],[19.76,-149.554],[19.661,-148.769],[19.366,-148.374],[18.971,-148.473],[18.777,-149.653],[18.383,-149.947],[17.99,-150.144],[17.572,-150.244],[14.378,-150.341],[13.958,-150.244],[13.568,-150.144],[13.074,-149.554],[13.174,-148.864],[13.665,-148.669],[14.057,-148.473],[14.453,-148.473],[14.845,-148.374],[15.436,-148.179],[16.023,-148.278],[16.609,-148.473],[17.206,-148.374],[17.598,-148.278],[17.99,-147.982],[18.087,-147.589],[15.138,-147.589],[15.138,-146.703],[15.927,-146.407],[16.737,-146.011],[18.852,-146.011],[19.268,-146.114],[20.056,-146.011],[20.353,-145.622],[20.842,-145.425],[21.236,-145.327],[21.824,-145.327],[22.807,-145.425],[23.202,-145.622],[23.595,-145.916],[24.087,-146.308],[25.362,-145.916],[26.348,-146.211],[26.741,-146.407],[26.741,-147.193],[27.333,-147.786],[27.721,-147.786],[28.216,-147.882],[28.609,-148.179],[29.001,-148.374],[28.312,-149.063],[27.48,-149.161],[27.036,-149.161],[26.227,-148.864],[25.464,-148.864],[25.464,-149.356],[25.267,-149.752],[24.773,-150.144],[24.484,-150.536],[24.087,-150.437],[23.792,-150.045],[23.398,-149.653],[22.516,-149.161],[22.121,-149.063],[21.725,-149.356],[22.516,-150.244],[22.516,-150.437],[22.413,-150.833]],\"c\":true},\"ix\":2},\"nm\":\"Path 10\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":10,\"ty\":\"sh\",\"ix\":11,\"ks\":{\"a\":0,\"k\":{\"i\":[[0,0],[0.319,-0.122],[0.171,-0.078],[0.171,-0.07],[0.399,-0.07],[0,0],[0,0],[0,0],[-0.096,0.197],[-0.047,0.123],[-0.071,0.095],[-0.296,-0.242],[-0.201,0],[-0.174,0],[-0.167,0.026],[0.05,0.468],[0,0],[0,0],[0.024,0.146]],\"o\":[[-0.346,0],[-0.174,0.052],[-0.172,0.072],[-0.342,0.172],[0,0],[0,0],[0,0],[0.148,-0.146],[0.051,-0.121],[0.051,-0.102],[0,0.393],[0.149,0.124],[0.164,0],[0.172,0],[0.026,-0.465],[0,0],[0,0],[0,-0.146],[0,0]],\"v\":[[85.656,-150.536],[84.844,-150.244],[84.35,-150.045],[83.956,-149.752],[82.971,-149.458],[82.971,-149.752],[82.971,-148.573],[84.743,-148.573],[85.135,-148.966],[85.135,-149.356],[85.432,-149.554],[85.629,-148.573],[86.125,-148.374],[86.514,-148.573],[86.954,-148.573],[86.954,-149.752],[88.674,-149.752],[88.674,-150.144],[88.578,-150.536]],\"c\":true},\"ix\":2},\"nm\":\"Path 11\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":11,\"ty\":\"sh\",\"ix\":12,\"ks\":{\"a\":0,\"k\":{\"i\":[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],\"o\":[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],\"v\":[[-210.578,-149.554],[-210.578,-148.374],[-209.105,-148.374],[-208.71,-147.291],[-207.533,-147.786],[-208.024,-149.161],[-209.303,-149.554]],\"c\":true},\"ix\":2},\"nm\":\"Path 12\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":12,\"ty\":\"sh\",\"ix\":13,\"ks\":{\"a\":0,\"k\":{\"i\":[[0.127,-0.027],[0.17,-0.025],[0,0],[0.126,0],[0,0],[-0.048,-0.1],[-0.121,-0.072],[-0.17,0],[-0.147,0.027],[-0.147,0.027],[-0.27,0.05],[0.024,0.118],[0.074,0.17]],\"o\":[[-0.17,0.049],[0,0],[-0.103,0],[0,0],[0.029,0.144],[0.077,0.123],[0.124,0.076],[0.171,0],[0.146,-0.023],[0.272,-0.073],[-0.022,-0.122],[-0.047,-0.175],[-0.122,0.024]],\"v\":[[89.855,-149.161],[89.365,-148.966],[88.973,-148.966],[88.674,-148.864],[88.28,-148.864],[88.28,-148.473],[88.478,-148.081],[88.921,-148.081],[89.365,-148.081],[89.757,-148.278],[90.544,-148.473],[90.544,-148.864],[90.249,-149.257]],\"c\":true},\"ix\":2},\"nm\":\"Path 13\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":13,\"ty\":\"sh\",\"ix\":14,\"ks\":{\"a\":0,\"k\":{\"i\":[[0.106,-0.016],[0.149,-0.072],[0.126,-0.073],[0.171,-0.075],[0.121,-0.023],[0.223,0.021],[0.187,-0.009],[0.121,-0.022],[0.06,0.008],[0.067,-0.026],[0.143,-0.075],[0.174,-0.076],[0.067,0.013],[0.06,-0.024],[0.12,-0.027],[0.101,-0.172],[0.072,-0.168],[0.024,-0.099],[-0.243,-0.153],[-0.074,-0.126],[-0.024,-0.124],[0,-0.145],[-0.024,-0.227],[0,0],[-0.147,-0.024],[-0.067,0.006],[-0.063,-0.012],[-0.124,-0.121],[-0.097,-0.171],[-1.007,-0.025],[-0.148,0],[0,0],[-0.271,0.025],[-0.12,0.027],[-0.273,0.149],[0,0.172],[0,0],[0.221,0.029],[0.147,0.074],[-0.099,0.268],[-0.075,0.148],[-0.095,0.148],[0,0.242],[0.119,0.246],[0.095,0.124],[0.15,0.078],[0.393,0],[0.194,-0.076],[0.124,-0.076],[0.123,-0.097],[0.175,-0.072],[0.15,0],[0.295,0],[-0.099,0.124],[-0.123,0.122],[0,0],[0.492,0],[0.193,0]],\"o\":[[-0.148,0.024],[-0.147,0.073],[-0.147,0.1],[-0.122,0.049],[-0.269,0.059],[-0.146,-0.014],[-0.144,0],[-0.057,0.012],[-0.075,-0.011],[-0.172,0.075],[-0.147,0.074],[-0.061,0.025],[-0.068,-0.011],[-0.12,0.049],[-0.201,0.072],[-0.101,0.149],[-0.027,0.099],[0.293,0.097],[0.126,0.067],[0.073,0.121],[0.022,0.123],[0,0.222],[0,0],[0.174,0],[0.06,0.012],[0.068,-0.005],[0.17,0.05],[0.144,0.148],[1.01,-0.022],[0.146,0],[0,0],[0.271,0],[0.147,0],[0.296,-0.053],[0.123,-0.072],[0,0],[-0.218,0],[-0.174,-0.021],[0.027,-0.292],[0.048,-0.153],[0.074,-0.172],[0.128,-0.195],[0,-0.299],[-0.077,-0.147],[-0.099,-0.123],[-0.317,-0.197],[-0.222,0],[-0.15,0.048],[-0.122,0.074],[-0.144,0.098],[-0.125,0.052],[-0.295,0.025],[0.074,-0.122],[0.123,-0.145],[0,0],[-0.489,0],[-0.23,0],[-0.096,0]],\"v\":[[159.658,-149.161],[159.264,-148.966],[158.868,-148.769],[158.576,-148.374],[158.184,-148.278],[157.488,-148.26],[156.999,-148.278],[156.61,-148.179],[156.433,-148.183],[156.215,-148.179],[155.822,-147.882],[155.527,-147.489],[155.331,-147.489],[155.134,-147.489],[154.743,-147.39],[154.347,-146.997],[154.053,-146.607],[154.053,-146.308],[154.837,-146.011],[155.233,-145.818],[155.233,-145.425],[155.233,-145.036],[155.331,-144.44],[158.845,-144.44],[159.264,-144.344],[159.457,-144.344],[159.658,-144.344],[159.952,-143.951],[160.246,-143.458],[162.803,-143.557],[163.196,-143.458],[163.809,-143.458],[164.473,-143.458],[164.866,-143.557],[165.654,-143.852],[165.848,-144.222],[165.848,-145.036],[165.261,-145.036],[164.866,-145.231],[164.965,-146.011],[165.162,-146.407],[165.454,-146.802],[165.848,-147.291],[165.559,-147.982],[165.36,-148.374],[165.063,-148.769],[164.081,-148.864],[163.493,-148.864],[163.098,-148.669],[162.899,-148.278],[162.507,-147.982],[162.113,-147.982],[161.329,-147.982],[161.525,-148.374],[161.92,-148.669],[161.818,-149.136],[160.566,-149.161],[159.957,-149.182]],\"c\":true},\"ix\":2},\"nm\":\"Path 14\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":14,\"ty\":\"sh\",\"ix\":15,\"ks\":{\"a\":0,\"k\":{\"i\":[[0.128,0],[0,0],[0,0],[0.049,-0.468],[-0.641,-0.074],[0,0],[-0.148,-0.101],[-0.173,-0.052],[-0.148,0],[-0.121,0.022],[-0.148,0.099],[-0.078,0.125],[0,0.145],[0,0],[0.048,0.148],[0.124,0],[0.125,0.025],[0.148,0.05],[0.17,0.05],[0.176,0.024],[0,0],[0.15,0]],\"o\":[[0,0],[0,0],[0.023,0.468],[0.636,0.071],[0,0],[0.176,0.026],[0.148,0.099],[0.122,0.022],[0.145,0],[0.172,-0.052],[0.122,-0.07],[0.068,-0.121],[0,0],[0,-0.171],[-0.146,0],[-0.121,0],[-0.148,-0.023],[-0.173,-0.048],[-0.174,-0.048],[0,0],[-0.144,0],[-0.124,0]],\"v\":[[150.116,-148.374],[149.727,-148.374],[149.384,-148.374],[149.384,-147.193],[151.008,-147.096],[151.394,-147.096],[151.793,-146.802],[151.99,-146.308],[152.383,-146.308],[152.774,-146.308],[153.168,-146.607],[153.566,-146.802],[153.566,-147.193],[153.566,-147.589],[153.365,-147.982],[152.97,-147.882],[152.577,-147.982],[152.184,-148.179],[151.696,-148.278],[151.199,-148.473],[150.808,-148.473],[150.415,-148.573]],\"c\":true},\"ix\":2},\"nm\":\"Path 15\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":15,\"ty\":\"sh\",\"ix\":16,\"ks\":{\"a\":0,\"k\":{\"i\":[[0.031,-0.012],[0.098,-0.199],[0,-0.295],[0,0],[-0.025,-0.127],[0,-0.271],[0.171,-0.196],[0.246,0],[0.149,0.172],[0.049,0.32],[0,0],[0,0.152],[0,0],[0.028,0.267],[0,0],[0.245,-0.199],[0.097,-0.125],[0.125,-0.099],[0.198,0],[0,0],[0,0],[-0.146,0.072],[-0.067,-0.011],[-0.062,0.025],[-0.172,0.072],[0,0],[0.062,0.008],[0.068,-0.026],[0.146,-0.075],[0.124,-0.076],[0.097,-0.127],[0,0],[0.171,-0.025],[0.315,-0.05],[0.148,-0.047],[-0.098,-0.269],[-0.15,-0.123],[-0.173,-0.023],[-0.221,0.02],[-0.185,-0.009],[-0.145,-0.022],[0.05,-0.124],[0.052,-0.124],[0,-0.197],[-0.068,-0.198],[-0.069,-0.144],[0,-0.219],[0.099,-0.246],[0.12,0.078],[0.097,0.124],[0.052,0.123],[0.123,0.097],[0.173,0.077],[0.147,0.052],[0.071,-0.011],[0.067,0.013],[-0.081,-0.319],[-0.03,-0.122],[-0.023,-0.121],[-0.147,-0.147],[-0.201,-0.097],[-0.367,0],[-0.177,0],[0,0.297],[0,0.146],[-0.094,0.007],[-0.168,-0.134],[-0.195,-0.247],[-0.149,-0.096],[-0.149,-0.025],[-0.295,0],[0,0],[-0.124,0.072],[-0.072,0.147],[-0.072,0.124],[-0.148,0.1],[-0.075,-0.016],[-0.058,0.022],[-0.148,0.045],[0,0.15],[0,0],[0,0],[-0.044,-0.17],[-0.02,-0.121],[-0.025,-0.295],[0,0],[0,0],[0,0],[-0.05,-0.344],[-0.024,-0.047],[0.146,-0.027],[0.345,0.022],[0,0],[0.145,0],[0.269,-0.049],[0.148,-0.052],[0.144,-0.023],[0.224,0.022],[0.217,-0.021],[0.392,-0.268],[0,-0.172],[0,0],[-0.468,-0.022],[0,0],[-0.148,0],[-0.271,0],[-0.344,0.149],[-0.29,0.148],[-0.248,0],[0,0],[-0.123,-0.048],[-0.098,-0.128],[0.178,-0.049],[0.06,0.009],[0.067,-0.027],[0.126,-0.048],[0.15,-0.096],[0.245,-0.029],[0.22,0],[0.539,-0.028],[0.124,-0.028],[0.148,-0.052],[0.074,-0.097],[0,-0.151],[-0.048,-0.122],[-0.32,-0.125],[-0.147,0],[-0.125,0.006],[-0.144,-0.01],[-0.123,-0.021],[-0.272,-0.195],[-0.101,-0.145],[-0.069,-0.128],[-0.094,-0.148],[-0.224,-0.295],[0,0],[-0.049,0.096],[-0.123,0.123],[-0.121,0.075],[-0.17,0.27],[-0.023,0.125],[-0.023,0.347],[-0.048,0.149],[-0.2,0.099],[-0.175,0],[-0.298,0],[0,0],[-0.274,0.075],[-0.269,0.172],[0.027,0.198],[0,0.152],[0,0.176],[0,0.148],[0,0.171],[0,0],[0.049,-0.197],[0,-0.342],[0,-0.149],[-0.3,-0.027],[-0.124,-0.096],[-0.027,-0.172],[0,-0.147],[0.099,-0.27],[0.122,-0.096],[0,-0.416],[0,-0.172],[0,0],[-0.442,0.268],[-0.345,0],[-0.099,-0.148],[0,-0.123],[0,-0.296],[0,0],[-0.079,0.146],[-0.048,0.12],[-0.047,0.145],[0,0],[0,0],[0,0],[0.517,0.05],[0.149,0],[0.367,0.022],[0,0.365],[0,0.146],[0,0],[0.441,0.392],[0.127,0.076],[0.102,0.099],[0.074,0.122],[0.097,0.07],[0.317,0.047],[0.122,0.047],[0.12,0.125],[0.252,0.197],[0.123,0.019],[0.147,0],[0.122,-0.028],[0.295,0],[0.272,0.073],[0.071,-0.006],[0.058,0.01],[0.152,0.075],[0,0],[0.209,0],[0.223,0.022],[0.146,0.073],[-0.047,0.126],[-0.124,0.367],[-0.027,0.119],[0,0],[0.061,0.008],[0.039,0]],\"o\":[[-0.194,0.098],[-0.123,0.243],[0,0],[0,0.145],[0.049,0.248],[0,0.272],[-0.146,0.175],[-0.246,0],[-0.196,-0.245],[0,0],[0,-0.149],[0,0],[-0.025,-0.274],[0,0],[-0.295,0.147],[-0.119,0.1],[-0.098,0.124],[-0.121,0.096],[0,0],[0,0],[0.099,-0.098],[0.061,-0.023],[0.069,0.013],[0.172,-0.076],[0,0],[-0.056,0.012],[-0.074,-0.011],[-0.171,0.075],[-0.125,0.074],[-0.124,0.072],[0,0],[-0.169,0],[-0.347,0.048],[-0.151,0.026],[0.024,0.296],[0.072,0.198],[0.144,0.121],[0.266,0.058],[0.147,-0.013],[0.149,0],[0,0.15],[-0.047,0.12],[-0.073,0.168],[0,0.223],[0.076,0.169],[0.099,0.172],[0,0.272],[-0.146,-0.07],[-0.126,-0.07],[-0.078,-0.1],[-0.072,-0.172],[-0.121,-0.097],[-0.148,-0.053],[-0.069,-0.026],[-0.059,0.009],[0.148,0.297],[0.023,0.121],[0.023,0.124],[0.072,0.198],[0.147,0.15],[0.316,0.147],[0.172,0],[-0.029,-0.292],[0,-0.15],[0.102,0.009],[0.195,-0.015],[0.244,0.197],[0.101,0.149],[0.122,0.073],[0.273,0.072],[0,0],[0.123,0],[0.149,-0.098],[0.075,-0.124],[0.075,-0.147],[0.052,-0.037],[0.067,0.014],[0.146,-0.048],[-0.025,-0.147],[0,0],[0,0],[0.095,0.145],[0.028,0.123],[0.056,0.273],[0,0],[0,0],[0,0],[0,0.344],[0,0.071],[-0.073,0.147],[-0.319,0.074],[0,0],[-0.151,0],[-0.297,0],[-0.145,0.026],[-0.148,0.046],[-0.262,0.056],[-0.177,-0.016],[-0.491,0.049],[-0.125,0.073],[0,0],[0.467,-0.096],[0,0],[0.149,0],[0.271,0.023],[0.391,0],[0.295,-0.121],[0.197,-0.099],[0,0],[0.146,0],[0.147,0.072],[-0.149,0.094],[-0.053,0.011],[-0.076,-0.01],[-0.125,0.048],[-0.169,0.052],[-0.193,0.148],[-0.222,0.027],[-0.544,-0.028],[-0.147,0],[-0.145,0.02],[-0.126,0.047],[-0.075,0.099],[0,0.145],[0.149,0.319],[0.124,0.049],[0.151,0.013],[0.121,-0.006],[0.144,0],[0.32,0.075],[0.147,0.099],[0.072,0.124],[0.097,0.145],[0.199,0.318],[0,0],[0.024,-0.122],[0.099,-0.146],[0.096,-0.097],[0.269,-0.174],[0.049,-0.096],[0.078,-0.316],[0,-0.172],[0.076,-0.196],[0.146,-0.077],[0.293,-0.024],[0,0],[0.296,0],[0.316,-0.099],[-0.075,-0.171],[0,-0.147],[0,-0.17],[0,-0.147],[0,-0.167],[0,0],[-0.025,0.22],[-0.074,0.322],[0,0.145],[0.291,0],[0.196,0],[0.122,0.1],[0.026,0.121],[0,0.296],[-0.052,0.149],[-0.293,0.273],[0,0.173],[0,0],[0.541,0],[0.27,-0.149],[0.196,0],[0.05,0.097],[0.026,0.27],[0,0],[0.123,-0.099],[0.051,-0.123],[0.07,-0.15],[0,0],[0,0],[0,0],[-0.298,-0.393],[-0.148,0],[-0.368,0],[-0.025,-0.372],[0,-0.151],[0,0],[0,-0.589],[-0.099,-0.073],[-0.121,-0.074],[-0.095,-0.098],[-0.048,-0.1],[-0.246,-0.222],[-0.125,0],[-0.172,-0.07],[-0.222,-0.22],[-0.097,-0.077],[-0.125,-0.028],[-0.148,0],[-0.271,0.045],[-0.292,0],[-0.064,-0.016],[-0.064,0.006],[-0.149,-0.03],[0,0],[-0.184,0.039],[-0.222,0],[-0.171,-0.029],[0.05,-0.123],[0.172,-0.34],[0.023,-0.127],[0,0],[-0.056,0.013],[-0.04,-0.006],[-0.034,0]],\"v\":[[8.65,-148.278],[8.258,-147.882],[8.06,-147.096],[8.06,-146.703],[8.16,-146.308],[8.456,-145.674],[8.16,-145.036],[7.57,-144.736],[6.98,-144.935],[6.686,-145.818],[6.686,-146.211],[6.587,-146.607],[6.587,-146.997],[6.484,-147.684],[5.704,-147.786],[4.915,-147.39],[4.719,-146.997],[4.324,-146.703],[3.906,-146.407],[2.654,-146.407],[2.654,-147.096],[2.85,-147.489],[3.046,-147.489],[3.245,-147.489],[3.639,-147.786],[3.54,-148.179],[3.362,-148.183],[3.143,-148.179],[2.753,-147.882],[2.359,-147.684],[2.165,-147.291],[-0.371,-147.291],[-0.784,-147.193],[-1.667,-147.096],[-2.064,-146.903],[-1.966,-146.114],[-1.572,-145.719],[-1.279,-145.327],[-0.587,-145.309],[-0.1,-145.327],[0.294,-145.231],[0.294,-144.833],[0.195,-144.44],[-0.194,-144.148],[-0.1,-143.557],[0.294,-143.262],[0.393,-142.674],[0.195,-141.985],[-0.194,-142.183],[-0.589,-142.377],[-0.689,-142.771],[-0.884,-143.262],[-1.279,-143.557],[-1.667,-143.755],[-1.875,-143.76],[-2.064,-143.755],[-1.667,-142.966],[-1.667,-142.575],[-1.572,-142.183],[-1.18,-141.789],[-0.784,-141.394],[0.122,-141.099],[0.544,-141.2],[0.493,-141.985],[0.544,-142.377],[0.837,-142.383],[1.378,-142.281],[1.671,-141.492],[2.065,-141.2],[2.458,-141.002],[3.245,-141.002],[3.639,-141.002],[4.031,-141.002],[4.324,-141.394],[4.324,-141.789],[4.621,-142.183],[4.82,-142.188],[5.014,-142.183],[5.409,-142.377],[5.307,-142.771],[5.307,-143.359],[6.098,-143.458],[6.484,-143.166],[6.484,-142.771],[6.587,-141.985],[8.06,-141.985],[8.846,-142.575],[9.242,-142.281],[9.242,-141.394],[9.438,-141.295],[9.242,-140.903],[8.355,-141.002],[7.867,-141.002],[7.474,-141.099],[6.686,-141.099],[6.293,-140.903],[5.898,-140.708],[5.198,-140.695],[4.621,-140.708],[3.443,-140.314],[3.341,-139.894],[3.341,-139.036],[4.523,-139.234],[4.915,-139.234],[5.307,-139.132],[6,-139.036],[6.98,-139.234],[7.764,-139.722],[8.355,-140.018],[8.555,-140.018],[8.945,-139.92],[9.142,-139.525],[8.846,-139.132],[8.674,-139.138],[8.456,-139.132],[8.06,-139.036],[7.764,-138.643],[7.177,-138.346],[6.587,-138.443],[5.211,-138.443],[4.816,-138.443],[4.424,-138.247],[4.031,-138.15],[3.934,-137.757],[4.031,-137.364],[4.719,-136.675],[5.112,-136.675],[5.513,-136.674],[5.898,-136.675],[6.293,-136.58],[7.079,-136.185],[7.474,-135.891],[7.667,-135.494],[7.961,-135.102],[8.555,-134.317],[8.945,-134.416],[8.945,-134.808],[9.242,-135.201],[9.634,-135.398],[10.421,-135.891],[10.518,-136.284],[10.518,-137.167],[10.715,-137.562],[11.111,-137.953],[11.504,-138.15],[12.241,-138.15],[12.241,-140.115],[12.98,-140.115],[13.764,-140.607],[13.469,-141.002],[13.516,-141.372],[13.469,-141.789],[13.568,-142.183],[13.516,-142.622],[16.319,-142.622],[16.319,-142.083],[16.023,-141.271],[16.124,-140.903],[16.91,-140.903],[17.402,-140.708],[17.797,-140.411],[17.797,-140.018],[17.698,-139.234],[17.303,-139.036],[16.714,-138.127],[16.811,-137.658],[17.672,-137.658],[18.876,-138.346],[19.661,-138.739],[20.056,-138.443],[20.056,-138.051],[20.056,-137.265],[21.137,-137.265],[21.533,-137.463],[21.632,-137.854],[21.824,-138.247],[24.087,-138.247],[24.876,-138.443],[24.973,-138.84],[23.888,-139.624],[23.495,-139.525],[22.561,-139.575],[22.516,-140.507],[22.561,-140.903],[20.056,-140.903],[19.76,-142.377],[19.366,-142.477],[18.971,-142.674],[18.777,-143.065],[18.681,-143.458],[17.797,-143.657],[17.402,-143.657],[17.01,-143.951],[16.609,-144.736],[16.221,-144.833],[15.828,-144.935],[15.436,-144.833],[14.794,-144.44],[14.057,-144.637],[13.85,-144.64],[13.665,-144.637],[13.344,-144.935],[13.344,-145.909],[12.781,-145.916],[12.19,-145.916],[11.797,-146.114],[11.893,-146.508],[12.487,-147.291],[12.487,-147.684],[9.044,-148.278],[8.867,-148.281],[8.747,-148.294]],\"c\":true},\"ix\":2},\"nm\":\"Path 16\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":16,\"ty\":\"sh\",\"ix\":17,\"ks\":{\"a\":0,\"k\":{\"i\":[[0,0],[0.171,-0.049],[0.174,-0.076],[0.123,-0.075],[0.125,-0.098],[0.095,-0.146],[0.075,-0.149],[0.074,-0.123],[0.124,-0.099],[0.073,0.018],[0.048,-0.036],[0.097,-0.146],[0,-0.126],[0.097,-0.269],[0.072,-0.148],[0.12,-0.073],[0.149,-0.073],[0.073,-0.122],[0.051,-0.172],[0.022,-0.196],[0,-0.199],[-0.245,0],[-0.321,0.273],[-0.146,0.148],[-0.199,0.073],[-0.122,0.027],[-0.196,0],[-0.148,-0.025],[0,0],[-0.173,0.073],[-0.148,0.024],[-0.147,0],[-0.292,0],[-0.146,0.024],[-0.248,0.026],[-0.395,0],[-0.194,0.17],[-0.045,0.147],[0,0.146],[0,0.174],[0,0],[0,0],[0.046,0.32],[0.046,0.098],[0.148,0.069],[0.127,0.026],[0.491,0],[0.146,-0.026],[0.124,-0.096],[0.221,0],[0,0],[0.15,0.073],[-0.122,0.15],[-0.098,0.17],[-0.026,0.121],[0.122,0.049],[0.124,0.049],[0.22,0]],\"o\":[[-0.195,0],[-0.176,0.048],[-0.123,0.049],[-0.149,0.075],[-0.124,0.098],[-0.075,0.125],[-0.05,0.12],[-0.072,0.148],[-0.051,0.038],[-0.073,-0.019],[-0.146,0.099],[-0.077,0.127],[-0.025,0.272],[-0.05,0.145],[-0.075,0.147],[-0.152,0.098],[-0.118,0.075],[-0.095,0.149],[-0.051,0.17],[-0.025,0.197],[0.219,0.097],[0.445,0],[0.147,-0.124],[0.147,-0.149],[0.124,-0.053],[0.174,-0.027],[0.172,0],[0,0],[0.194,0],[0.144,-0.049],[0.121,-0.028],[0.294,-0.028],[0.148,0],[0.249,-0.028],[0.393,-0.046],[0.293,0],[0.122,-0.101],[0.053,-0.119],[0,-0.171],[0,0],[0,0],[0,-0.344],[0,-0.124],[-0.079,-0.126],[-0.124,-0.053],[-0.461,-0.121],[-0.174,0],[-0.148,0.026],[-0.147,0.12],[0,0],[-0.197,0],[0.15,-0.15],[0.122,-0.145],[0.049,-0.122],[-0.127,-0.024],[-0.122,-0.048],[-0.196,-0.076],[0,0]],\"v\":[[170.175,-146.308],[169.785,-146.011],[169.29,-145.916],[168.897,-145.818],[168.602,-145.425],[168.212,-145.131],[168.012,-144.736],[167.915,-144.344],[167.719,-143.951],[167.52,-143.95],[167.324,-143.951],[166.933,-143.657],[166.933,-143.262],[166.933,-142.477],[166.735,-142.083],[166.342,-141.887],[165.848,-141.688],[165.454,-141.492],[165.162,-141.099],[165.162,-140.607],[165.162,-140.115],[165.947,-139.432],[166.933,-140.018],[167.324,-140.411],[167.719,-140.804],[168.111,-140.903],[168.602,-141.002],[168.996,-140.804],[171.136,-140.804],[171.553,-141.099],[171.947,-141.295],[172.339,-141.295],[173.124,-141.295],[173.517,-141.295],[174.11,-141.593],[175.094,-141.492],[175.876,-141.688],[176.072,-142.083],[176.171,-142.45],[176.072,-142.87],[176.072,-143.359],[174.405,-143.359],[174.405,-144.244],[174.405,-144.637],[174.009,-144.833],[173.613,-144.935],[172.389,-145.131],[171.947,-145.131],[171.749,-144.736],[171.358,-144.344],[171.158,-144.344],[170.764,-144.637],[171.158,-145.036],[171.553,-145.327],[171.553,-145.719],[171.158,-145.818],[170.764,-145.916],[170.373,-146.308]],\"c\":true},\"ix\":2},\"nm\":\"Path 17\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":17,\"ty\":\"sh\",\"ix\":18,\"ks\":{\"a\":0,\"k\":{\"i\":[[-0.012,-0.034],[0,0]],\"o\":[[0,0],[-0.018,0.008]],\"v\":[[13.344,-146.041],[13.344,-146.114]],\"c\":true},\"ix\":2},\"nm\":\"Path 18\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":18,\"ty\":\"sh\",\"ix\":19,\"ks\":{\"a\":0,\"k\":{\"i\":[[0,0],[-0.008,0.002],[0.02,0.057]],\"o\":[[0.009,-0.002],[0.032,0],[0,0]],\"v\":[[13.344,-145.909],[13.368,-145.916],[13.344,-146.041]],\"c\":true},\"ix\":2},\"nm\":\"Path 19\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":19,\"ty\":\"sh\",\"ix\":20,\"ks\":{\"a\":0,\"k\":{\"i\":[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],\"o\":[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],\"v\":[[-217.758,-145.818],[-220.706,-145.231],[-220.02,-144.244],[-218.935,-144.344],[-217.855,-143.852],[-217.559,-142.674],[-219.231,-142.674],[-218.642,-141.593],[-217.559,-141.688],[-216.774,-141.002],[-215.693,-141.492],[-214.709,-141.394],[-212.35,-141.2],[-210.578,-139.722],[-208.807,-139.33],[-208.318,-140.214],[-208.613,-141.394],[-209.698,-142.183],[-210.186,-143.359],[-211.659,-143.951],[-212.843,-144.637],[-214.019,-144.44],[-215.102,-145.231],[-216.58,-146.011]],\"c\":true},\"ix\":2},\"nm\":\"Path 20\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":20,\"ty\":\"sh\",\"ix\":21,\"ks\":{\"a\":0,\"k\":{\"i\":[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],\"o\":[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],\"v\":[[-206.844,-143.359],[-206.056,-142.281],[-205.464,-140.507],[-203.699,-140.214],[-202.027,-140.411],[-200.454,-140.708],[-200.061,-141.492],[-201.73,-142.674],[-204.091,-142.87],[-205.96,-144.05]],\"c\":true},\"ix\":2},\"nm\":\"Path 21\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":21,\"ty\":\"sh\",\"ix\":22,\"ks\":{\"a\":0,\"k\":{\"i\":[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0.494,0.099],[0,0]],\"o\":[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[-0.492,-0.096],[0,0]],\"v\":[[-231.717,-143.359],[-233.29,-142.966],[-234.666,-141.789],[-232.897,-141.789],[-230.535,-141.789],[-227.686,-141.789],[-228.08,-142.87],[-229.851,-143.458]],\"c\":true},\"ix\":2},\"nm\":\"Path 22\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":22,\"ty\":\"sh\",\"ix\":23,\"ks\":{\"a\":0,\"k\":{\"i\":[[0.13,0],[0,0],[0.17,-0.077],[0,0],[-0.12,-0.025],[-0.06,0.009],[-0.065,-0.03],[-0.147,-0.1],[-0.174,-0.075],[-0.344,0],[0,0],[-0.147,0],[0.05,0.12],[0.074,0.145],[0.101,0.073],[0.121,0.024],[0.176,0.022],[0,0],[0.151,0],[0.051,0]],\"o\":[[0,0],[-0.169,0.026],[0,0],[0.147,0.027],[0.053,0.011],[0.075,-0.011],[0.173,0.073],[0.151,0.097],[0.295,0.147],[0,0],[0.149,0],[-0.022,-0.126],[-0.097,-0.175],[-0.075,-0.126],[-0.1,-0.072],[-0.169,-0.047],[0,0],[-0.146,-0.026],[-0.057,-0.007],[-0.102,0]],\"v\":[[177.745,-141.593],[177.35,-141.593],[176.96,-141.295],[177.056,-140.903],[177.451,-140.804],[177.624,-140.81],[177.842,-140.804],[178.236,-140.507],[178.533,-140.115],[179.441,-140.018],[179.908,-140.018],[180.301,-140.115],[180.301,-140.507],[179.908,-140.804],[179.908,-141.2],[179.517,-141.295],[179.022,-141.394],[178.631,-141.394],[178.236,-141.593],[178.077,-141.602]],\"c\":true},\"ix\":2},\"nm\":\"Path 23\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":23,\"ty\":\"sh\",\"ix\":24,\"ks\":{\"a\":0,\"k\":{\"i\":[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],\"o\":[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],\"v\":[[-238.795,-141.002],[-238.402,-140.018],[-237.615,-139.33],[-236.139,-139.234],[-236.338,-140.507],[-237.812,-141.099]],\"c\":true},\"ix\":2},\"nm\":\"Path 24\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":24,\"ty\":\"sh\",\"ix\":25,\"ks\":{\"a\":0,\"k\":{\"i\":[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],\"o\":[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],\"v\":[[-229.454,-140.607],[-231.914,-140.607],[-233.389,-140.214],[-234.762,-139.432],[-233.681,-137.658],[-232.7,-137.463],[-231.62,-137.854],[-229.454,-137.953],[-228.965,-138.739],[-229.948,-139.624],[-228.965,-139.722],[-228.278,-140.607]],\"c\":true},\"ix\":2},\"nm\":\"Path 25\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":25,\"ty\":\"sh\",\"ix\":26,\"ks\":{\"a\":0,\"k\":{\"i\":[[0,0],[0,0],[0,0],[0,0],[0,0]],\"o\":[[0,0],[0,0],[0,0],[0,0],[0,0]],\"v\":[[-215.693,-139.92],[-215.398,-138.84],[-213.825,-138.739],[-212.546,-139.132],[-213.825,-140.018]],\"c\":true},\"ix\":2},\"nm\":\"Path 26\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":26,\"ty\":\"sh\",\"ix\":27,\"ks\":{\"a\":0,\"k\":{\"i\":[[-0.294,-0.593],[0,0],[0,0],[0,0],[0,0]],\"o\":[[0.296,0.589],[0,0],[0,0],[0,0],[0,0]],\"v\":[[-221.198,-138.443],[-219.527,-136.675],[-218.445,-137.167],[-219.723,-138.84],[-221.296,-139.722]],\"c\":true},\"ix\":2},\"nm\":\"Path 27\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":27,\"ty\":\"sh\",\"ix\":28,\"ks\":{\"a\":0,\"k\":{\"i\":[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],\"o\":[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],\"v\":[[-199.372,-139.624],[-201.338,-139.624],[-202.42,-138.739],[-202.42,-137.953],[-200.061,-138.051],[-198.782,-138.346],[-197.212,-138.643],[-197.212,-139.624]],\"c\":true},\"ix\":2},\"nm\":\"Path 28\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":28,\"ty\":\"sh\",\"ix\":29,\"ks\":{\"a\":0,\"k\":{\"i\":[[0,0],[0,0],[0,0],[0,0],[0.393,0.296]],\"o\":[[0,0],[0,0],[0,0],[0,0],[0,0]],\"v\":[[-194.161,-138.84],[-195.048,-137.463],[-192.194,-137.068],[-190.624,-137.757],[-191.903,-139.234]],\"c\":true},\"ix\":2},\"nm\":\"Path 29\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":29,\"ty\":\"sh\",\"ix\":30,\"ks\":{\"a\":0,\"k\":{\"i\":[[0,0],[0.149,-0.052],[0.294,-0.05],[0.121,0],[0.442,-0.169],[0.122,-0.048],[0.148,-0.098],[0.022,-0.196],[0.022,-0.12],[0.048,-0.121],[0.12,-0.125],[0.294,-0.15],[-0.123,-0.12],[-0.121,-0.096],[0,0],[0,0],[0.219,-0.171],[0.155,0.002],[0.127,-0.109],[0.048,-0.094],[0.123,-0.099],[0.148,-0.074],[0.419,0],[0.249,0.046],[0.149,0.073],[0.144,0.096],[0.145,0.075],[0.122,0.024],[0.151,0],[0.392,0.024],[0,0],[0.344,0],[0.172,-0.023],[0.058,0.002],[0.066,-0.099],[0.075,-0.165],[0.05,-0.175],[0.025,-0.126],[0.121,-0.072],[0.221,0],[0,0],[0.371,-0.172],[0.173,-0.076],[0.296,-0.122],[0.124,-0.048],[0.247,0],[0.121,0.026],[0.149,0.051],[0.172,0],[0.296,-0.099],[0.174,-0.071],[0.268,-0.151],[0.198,-0.048],[0.124,-0.024],[0.194,0],[0.372,-0.1],[0.268,-0.195],[0.073,-0.17],[0.1,-0.148],[0.124,-0.072],[0.081,0.01],[0.054,-0.008],[0.196,0],[0.125,-0.018],[0.122,-0.025],[0.117,-0.051],[0,-0.22],[-0.203,-0.273],[-0.127,-0.072],[-0.292,-0.147],[-0.074,-0.125],[0,-0.145],[0,0],[0.075,-0.172],[0.123,0.025],[0.493,0],[0.271,-0.075],[0.122,-0.073],[0.147,-0.101],[0.171,-0.079],[0.146,0],[0.12,0.021],[0.244,0],[0.417,0],[0.271,-0.028],[0.125,-0.024],[0.167,0],[0,0],[0.146,-0.046],[0.096,-0.079],[0.05,-0.1],[0.073,-0.148],[0,0],[0.249,-0.222],[-0.077,-0.122],[-0.147,-0.147],[-0.119,-0.146],[-0.022,-0.173],[-0.022,-0.294],[-0.022,-0.125],[-0.049,-0.145],[-0.096,-0.073],[-0.392,0],[0,0],[-0.169,-0.023],[-0.153,-0.048],[-0.126,-0.122],[-0.05,-0.199],[0,-0.147],[0,0],[0.421,0],[0.198,0.094],[0.122,0.075],[0.145,0.075],[0.066,-0.011],[0.061,0.026],[0.168,0.052],[0.121,0.05],[0.1,0.101],[0.079,0.123],[0.047,0.125],[0.126,0.094],[0,0],[0.246,0.218],[0.096,0.072],[0.3,0],[0.121,-0.029],[0.169,-0.048],[0.122,-0.025],[0.443,-0.097],[0,0],[-0.141,0],[-0.267,-0.022],[-0.125,-0.022],[-0.099,-0.146],[0,-0.195],[0,-0.17],[0.321,0.094],[0.126,0.052],[0.176,0.069],[0.243,0],[0,0],[0.096,-0.076],[0.074,-0.123],[0.047,-0.122],[0,-0.223],[-0.492,-0.075],[-0.123,0.006],[-0.151,-0.012],[-0.124,-0.02],[-0.394,-0.249],[-0.147,-0.078],[-0.122,-0.073],[-0.097,-0.125],[0,-0.169],[0.023,-0.173],[0.221,0.099],[0.148,-0.001],[0.121,0.035],[0.172,0.024],[0.067,-0.006],[0.062,0.013],[0.066,-0.006],[0.061,0.013],[0.171,0.048],[0.126,0.027],[0.182,-0.018],[0.223,0.039],[0.269,0.147],[0.071,0.175],[0,0.195],[0,0.15],[0,0],[-0.049,0.269],[-0.026,0.174],[0,0.149],[0.026,0.12],[0.048,0.123],[0.072,0.15],[0.05,0.125],[0.147,0.297],[0.174,-0.023],[0.063,0.006],[0.073,-0.01],[-0.026,-0.223],[0,-0.147],[0.02,-0.469],[0,-0.149],[0,0],[0.296,0],[0.197,0],[0.146,0],[0.069,-0.218],[0.102,-0.048],[0.15,-0.076],[0.124,-0.046],[0,-0.39],[0,0],[-0.391,-0.343],[-0.145,-0.321],[-0.025,-0.121],[0,-0.296],[0,-0.121],[0.073,-0.145],[0,-0.293],[0,0],[-0.024,-0.147],[-0.024,-0.174],[0,-0.148],[0,-0.171],[-0.024,-0.125],[-0.194,-0.27],[-0.169,0],[0,0],[-0.127,0.124],[-0.125,0.099],[-0.221,0],[0,0],[-0.122,-0.076],[-0.147,-0.099],[-0.295,-0.149],[-0.124,-0.073],[-0.098,-0.12],[-0.176,-0.271],[-0.269,-0.247],[-0.074,-0.146],[0,-0.196],[0.148,-0.247],[0.072,-0.148],[0,-0.193],[0,-0.171],[-0.057,0.009],[-0.068,-0.027],[0,0],[-0.17,-0.078],[-0.267,0.014],[-0.15,-0.008],[-0.143,-0.024],[0,0],[0.148,-0.023],[0.298,0],[0,0],[0.176,0.076],[0.148,0.072],[0.125,0.074],[0,0.392],[0,0],[0,0.151],[0.269,0.272],[0.073,0.149],[0.05,0.097],[0.15,0.097],[0.125,0.025],[0.172,0.025],[0.296,0],[0.47,-0.049],[0.126,-0.025],[0.146,-0.052],[0.124,-0.073],[0,-0.226],[0,-0.149],[-0.027,-0.121],[0,-0.394],[0.121,-0.375],[0.048,-0.124],[0.145,-0.121],[0.15,-0.098],[0.151,-0.174],[0.024,-0.174],[0,-0.392],[0.27,-0.073],[0.438,-0.249],[0.199,-0.269],[0.052,-0.099],[0.145,-0.103],[0.147,0],[0.273,0.075],[0.149,0.048],[0.122,0.047],[0.195,0],[0,0],[0,0],[-0.098,0.142],[-0.172,0.072],[-0.218,0],[-0.197,-0.025],[-0.149,-0.026],[-0.296,0],[-0.269,0.048],[-0.175,0.075],[-0.125,0.097],[-0.098,0.147],[-0.218,0.247],[-0.122,0.102],[-0.219,0.295],[-0.074,0.097],[-0.124,0.103],[-0.071,0.124],[-0.023,0.122],[-0.026,0.122],[-0.072,0.296],[-0.028,0.124],[-0.025,0.123],[0,0.173],[0,0.193],[0.297,0],[0.198,0.024],[0.095,0.048],[0.096,0.145],[0,0.221],[-0.05,0.393],[0,0.468],[0,0],[-0.053,0.269],[0,0.465],[0.027,0.124],[0.098,0.321],[0.024,0.123],[0.147,0.271],[0.074,0.148],[0,0.172],[0,0],[-0.296,0],[-0.148,0],[-0.047,0],[0,0],[0.37,0.098],[0.193,0.074],[0.123,0.022],[0.297,0],[0,0],[0.221,0],[0.344,-0.143],[0.176,-0.073],[0.146,-0.026],[0.145,0],[0.298,0],[0.147,-0.021],[0.025,-0.467],[0.025,-0.171],[0.171,-0.271],[0.124,-0.144],[0.128,-0.372],[0.073,-0.269],[0.171,-0.073],[0.122,-0.022],[0.151,0.015],[0.121,-0.009],[0,0],[0.121,-0.076],[0,-0.245],[0,0],[-0.096,-0.12],[-0.081,0.024],[-0.046,-0.034],[-0.151,-0.321],[0,-0.296],[0.194,-0.197],[0.096,-0.075],[0.125,-0.101],[0,-0.244],[-0.024,-0.294],[-0.298,-0.021],[-0.124,-0.07],[-0.126,-0.124],[-0.075,-0.174],[-0.052,-0.123],[-0.074,-0.121],[-0.119,-0.101],[-0.147,-0.099],[-0.097,-0.048],[-0.221,-0.245],[-0.075,-0.146],[0,-0.145],[0.024,-0.121],[0.125,-0.147],[0.123,-0.073],[0.121,0],[0,0],[0.273,0.048],[0.269,0.146],[0,0.566],[0.296,0],[0.364,0.242],[0.151,0.1],[0.171,0.076],[0.153,-0.02],[0.116,0.01],[0.147,0],[0.27,0.097],[0.097,0.173],[0.169,0.096],[0.122,0.049],[0.124,0.024],[0.172,0.076],[0.175,0],[0,0],[0.122,0.096],[0.117,0.097],[0.169,0],[0,0],[0.298,0.172],[0.272,0.174],[0.099,0.048],[0.126,0.072],[0.099,0.072],[0.145,0.122],[0.121,0.076],[0.077,-0.014],[0.051,0.012],[0.221,0],[0,0],[0.147,-0.073],[0,-0.221],[-0.076,-0.195],[-0.121,-0.145],[-0.025,-0.17],[-0.025,-0.122],[0,-0.195],[-0.299,-0.026],[-0.124,0],[-0.122,-0.053],[-0.098,-0.121],[-0.05,-0.12],[-0.046,-0.172],[-0.27,-0.148],[-0.1,-0.122],[0,-0.198],[0,-0.122],[0.049,-0.124],[0.324,-0.118],[0.145,0],[0,0],[0.098,-0.049],[0.074,-0.15],[0.049,-0.125],[0.075,-0.122],[0.121,-0.099],[0,0],[-0.024,0.294],[0,0.144],[0.02,0.293],[0.028,0.147],[0,0],[0.098,-0.076],[0.096,-0.124],[0.1,-0.121],[0.12,-0.123],[0.294,0],[0,0],[0.293,-0.022],[0.064,0.014],[0.103,-0.057],[0.122,-0.097],[0.172,-0.075],[0.169,0],[0,0],[0.149,0],[0,0],[0,0],[0.147,0],[0,0],[0,0],[0.123,0.121],[0.121,0.124],[0.123,0.074],[-0.025,0.147],[-0.025,0.126],[-0.147,0.296],[0,0],[0.101,-0.078],[0.148,-0.075],[0.122,-0.022],[0.126,0],[0.109,0.002],[0.185,-0.091],[0.147,-0.076],[0.294,-0.146],[0,0],[0.416,-0.194],[0.12,-0.097],[0.098,-0.073],[0.149,-0.049],[0.147,0],[0,0],[0.122,-0.024],[0.316,-0.101],[0.147,-0.124],[0.319,-0.194],[0.199,-0.025],[0.213,0.012],[0.32,-0.111],[0.15,-0.145],[-0.072,-0.124],[0,-0.247],[0.17,-0.174],[0.292,-0.145],[0.174,-0.049],[0.123,-0.02],[0.145,0],[0.198,-0.02],[0.247,0],[0,0],[0.145,0.098],[0.17,0.052],[0.099,0.146],[0.048,0.122],[0,0.272],[-0.025,0.366],[0,0],[0,0],[0.172,0.121],[0.099,0.075],[0.096,0.124],[0.097,0.149],[0.223,0],[0.293,0],[0,0],[0.197,0.072],[0.124,0.028],[0.345,0],[0,0],[0.15,0],[0.126,0],[0,0],[-0.269,-0.048],[-0.124,-0.023],[0,0],[0.074,-0.124],[0,-0.198],[0,-0.145],[-0.075,-0.102],[-0.1,-0.048],[-0.148,-0.075],[-0.097,-0.121],[0,-0.243],[0,0],[0,-0.173],[0,-0.123],[0,-0.469],[0,-0.073],[0.297,0.051],[0.101,0.075],[0.122,0.144],[0.075,0.097],[0.147,0.076],[0.175,0],[0.144,-0.021],[0.174,-0.029],[0.152,0],[0.341,0],[0.147,0],[0.05,-0.127],[0.073,-0.099],[0.146,-0.073],[0.127,-0.024],[0.271,-0.052],[0.176,-0.076],[0.125,-0.152],[0.122,-0.099],[0.171,-0.071],[0.211,-0.002],[0,-0.004],[-0.052,-0.269],[-0.073,-0.119],[-0.098,-0.098],[-0.126,-0.072],[-0.126,-0.076],[0,-0.245],[0.024,-0.222],[0.073,0],[0.294,0],[0.293,0.028],[0.271,0.026],[0,0],[0.144,0],[0.323,0.099],[0.174,0.047],[0.121,0.026],[0.066,-0.006],[0.062,0.014],[0.146,0.097],[0.075,0.172],[0,0],[0.119,-0.071],[0.15,-0.1],[0.064,0.015],[0.066,-0.04],[0,-0.244],[-0.147,-0.175],[-0.148,-0.123],[-0.078,-0.098],[-0.051,-0.121],[-0.048,-0.152],[0,0],[-0.315,-0.075],[-0.248,-0.198],[0,-0.217],[0.025,-0.171],[0,0],[0.144,-0.05],[0.144,0],[0.121,0.073],[0.074,0.101],[0.146,0.094],[0.466,0.075],[0.066,-0.006],[0.063,0.013],[0.173,0.27],[0.024,0.149],[0,0.149],[0,0.468],[0,0],[0,0],[0.098,0.59],[0.22,0.194],[0.248,-0.009],[0.175,0.048],[0.128,0.126],[0.097,0.197],[0.244,0.172],[0.179,-0.014],[0.128,0.032],[0.169,0.098],[0.294,0.15],[0,0],[-0.122,-0.053],[-0.125,-0.077],[-0.125,-0.073],[-0.268,-0.12],[-0.293,-0.121],[-0.15,-0.026],[-0.223,0.022],[-0.249,-0.036],[-0.122,-0.05],[-0.147,-0.098],[-0.345,0],[0,0],[-0.149,-0.048],[-0.124,-0.051],[-0.148,-0.072],[-0.124,-0.028],[-0.146,0],[-0.148,0],[-0.296,0],[0,0],[0,0],[-0.146,0.024],[-0.067,-0.006],[-0.061,0.013],[-0.124,0.024],[-0.32,0.073],[-0.146,0],[-0.271,0.074],[-0.145,0.08],[-0.117,0.095],[-0.075,0.146],[-0.05,0.147],[0,0.291],[0.047,0.471],[0.024,0.125],[0.171,0.27],[0.127,0.122],[0.196,0.073],[0.121,0.025],[0.199,0],[0.297,0],[0.274,0.069],[0.269,0.196],[0.123,0.099],[0.125,0.099],[0.127,0.1],[0.172,0.071],[0.067,-0.014],[0.061,0.025],[0,0],[0.146,0.076],[0.122,0.05],[0,0],[0.175,0.073],[0.124,0.021],[0.366,0],[0.364,-0.049],[0.223,0],[0,0],[0.171,0.075],[0.146,0.097],[0.246,0.274],[0,0],[0.098,-0.17],[0.146,-0.023],[0.145,0],[0,0],[0.168,0.097],[-0.05,0.148],[0,0.246],[0.026,0.049],[0.121,0.096],[0.078,0.124],[0.025,0.122],[0.025,0.196],[0,0],[0.125,-0.073],[0.217,0],[0.2,0.123],[0.123,0.072],[0.075,0.12],[0.296,0.019],[0.318,0.052],[0.123,0.026],[0,0],[-0.15,0],[-0.148,0],[-0.198,0],[0,0],[0.126,0.1],[0.169,0.027],[0.119,0],[0.342,0],[0.267,0.1],[0.123,0.097],[0.145,0.101],[0.121,0.047],[0,0],[0,0],[0.417,0],[0,0],[-0.074,0.123],[-0.069,0.174],[-0.024,0.099],[0,0],[0.099,-0.467],[0,-0.169],[0,0],[-0.024,-0.147],[0,0],[-0.019,0.149],[0,0.224],[0.125,0.17],[0.177,0],[0,0],[0,0],[0,0],[0.397,-0.12],[0.172,0],[0.122,0],[0.123,-0.048],[0,-0.2],[0.197,-0.244],[0.244,0],[0,0],[0.175,0.047],[0.144,0.097],[-0.098,0.123],[-0.123,0.123],[0,0],[0.468,-0.126],[0.172,-0.075],[0.051,-0.194],[0,-0.148],[-0.051,-0.147],[-0.194,-0.075],[-0.292,-0.026],[-0.269,-0.026],[0,0],[0,0],[0.196,0.026],[0.342,0],[0.273,0.052],[0.172,0],[0,0],[0.048,-0.418],[0.024,-0.125],[0.075,-0.151],[0.122,-0.099],[0.076,0.273],[0.072,0.096],[0.147,0.073],[0.067,-0.012],[0.061,0.026],[0.148,0.073],[0.151,0.097],[0.07,-0.013],[0.061,0.025],[0.393,0],[0.271,-0.026],[0,0],[0,-0.172],[0,-0.196],[0,-0.322],[0.02,-0.125],[0.121,-0.123],[0.248,0],[0.121,0.145],[0.02,0.124],[0.023,0.149],[0.023,0.15],[0.096,-0.124],[0.148,-0.098],[0.078,0.01],[0.056,-0.011],[0.295,-0.024],[0,0],[-0.147,-0.047],[-0.062,0.014],[-0.069,-0.039],[-0.072,-0.122],[0,-0.149],[0,0],[0.05,-0.15],[0.122,0.074],[0.196,0.027],[0.161,-0.016],[0.143,0.012],[0.171,0.049],[0.026,0.471],[0.048,0.149],[0.223,-0.051],[0,0],[0.175,0],[0.25,0],[0.365,-0.172],[-0.052,-0.118],[0,-0.168],[0,-0.173],[0.395,-0.024],[0.122,0],[0.122,-0.047],[0.146,-0.124],[0.098,-0.073],[0.101,-0.073],[0.124,-0.147],[0.099,-0.074],[0.078,0.016],[0.045,-0.023],[0.148,-0.194],[0,0],[-0.121,0.098],[-0.147,0.073],[-0.147,0.047],[-0.147,0],[-0.147,0],[-0.119,0.047],[-0.148,0.073],[-0.153,0.075],[-0.075,-0.01],[-0.056,0.011],[-0.065,-0.006],[-0.064,0.013],[-0.173,0.074],[-0.391,0],[-0.37,-0.099],[-0.149,-0.073],[0,0],[0.267,-0.049],[0.127,-0.049],[0.127,-0.046],[0.123,-0.031],[0.064,0.033],[0.064,-0.024],[0.102,-0.124],[0.074,-0.122],[0.075,-0.122],[0.072,-0.121],[0.02,-0.147],[0,-0.145],[0.02,-0.296],[0.245,-0.345],[0.219,-0.248],[0.121,-0.098],[0.126,-0.099],[0.125,-0.095],[0.098,-0.096],[0.075,-0.148],[0.023,-0.123],[0.023,-0.124],[0.149,-0.145],[0.049,-0.2],[0.025,-0.272],[0.022,-0.149],[0.022,-0.151],[0,0],[0.173,-0.072],[0.244,-0.171],[0.147,-0.098],[0.145,-0.101],[0.078,0.015],[0.053,-0.01],[0.119,-0.025],[0.173,-0.074],[0,0],[-0.149,0],[-0.15,0],[0,0],[0.052,-0.176],[0.052,-0.096],[0.118,-0.075],[0.147,-0.073],[0.144,-0.098],[0.123,-0.075],[0.172,-0.098],[0.168,-0.069],[0.097,-0.054],[0.123,-0.148],[0.074,-0.148],[0.073,-0.122],[0.27,0],[0.417,0],[0,0],[0,0],[-0.101,-0.294],[0.44,-0.071],[0.069,0.007],[0.06,-0.011],[0.299,-0.148],[0.146,-0.075],[0.17,-0.051],[0.06,0.008],[0.068,-0.028],[0.075,-0.125],[0.024,-0.121],[0.024,-0.121],[0.171,-0.099],[0.177,-0.024],[0.126,-0.024],[0.124,0],[0.148,-0.122],[0,-0.197],[0,-0.148],[0,-0.171],[0.074,-0.123],[0.086,0.004],[0.022,-0.046],[0,-0.171],[-0.022,-0.15],[0,-0.247],[0.147,-0.2],[0.079,0.022],[0.045,-0.038],[0.098,-0.096],[0,0],[0,0],[-0.147,-0.046],[-0.147,-0.046],[-0.101,-0.122],[0.101,-0.121],[0.071,-0.146],[0.048,-0.124],[0.025,-0.123],[0.074,-0.172],[0,-0.149],[0,-0.196],[-0.614,-0.048],[0.153,-0.317],[0.076,-0.173],[0,-0.175],[0,-0.175],[-0.02,-0.127],[-0.273,-0.054],[-0.063,0.011],[-0.102,-0.044],[-0.153,-0.1],[-0.148,-0.147],[0,0],[-0.123,-0.024],[-0.243,0],[-0.318,0.172],[-0.172,0.074],[-0.075,-0.011],[-0.055,0.011],[-0.122,0.049],[-0.145,0.098],[-0.101,0.121],[-0.127,0.145],[-0.269,0.269],[-0.17,0.046],[-0.125,0.027],[-0.146,0],[-0.147,0.024],[0,0],[-0.058,0.009],[-0.067,-0.026],[-0.103,-0.096],[-0.075,-0.151],[-0.047,-0.129],[-0.051,-0.173],[-0.072,-0.318],[-0.02,-0.124],[-0.101,-0.148],[0,-0.273],[0,0],[0,-0.223],[0,-0.128],[-0.268,-0.173],[-0.118,-0.076],[-0.099,-0.148],[-0.026,-0.173],[0,0],[0,0],[-0.152,-0.268],[-0.12,-0.12],[-0.123,-0.15],[-0.05,-0.178],[0,-0.148],[0.025,-0.122],[0,-0.249],[0,0],[-0.025,-0.146],[-0.025,-0.152],[0,0],[-0.023,0.195],[-0.023,0.121],[-0.081,0.146],[-0.195,0.048],[-0.148,0],[0,0],[-0.124,0],[-0.176,0],[-0.151,0.078],[-0.172,0.075],[-0.343,0],[0,0],[0,0],[0,0.149],[0.03,0.217],[0,0],[0.148,0.027],[0.059,-0.008],[0.068,0.027],[0.075,0.103],[0.101,0.075],[-0.173,0.297],[-0.05,0.176],[-0.025,0.296],[-0.024,0.293],[-0.024,0.122],[-0.072,0.149],[-0.124,0.097],[-0.168,0.074],[-0.123,0.047],[-0.174,0.048],[-0.123,0.05],[-0.066,-0.015],[-0.053,0.041],[-0.073,0.149],[-0.05,0.121],[-0.099,0.145],[-0.095,0.126],[-0.023,0.171],[0,0.149],[0,0],[0.029,0.192],[0.295,0.022],[0.295,0],[0.146,0],[0.097,0.469],[0.2,0.072],[0.071,-0.013],[0.049,0.025],[0.148,0.118],[0,0.148],[0,0],[-0.099,0.122],[-0.096,0.122],[-0.075,0.169],[-0.028,0.148],[-0.124,0.245],[-0.122,0.103],[-0.147,0.045],[-0.074,-0.011],[-0.057,0.011],[-0.249,0.198],[-0.1,0.12],[-0.125,0.122],[-0.125,0.068],[-0.166,-0.005],[-0.101,0.019],[-0.068,-0.011],[-0.1,0.043],[-0.123,0.098],[-0.074,0.147],[-0.046,0.097],[-0.145,0.121],[-0.128,0.03],[-0.124,0],[-0.125,0.029],[-0.119,0.046],[0,0.243],[0.124,0.2],[0.072,0.174],[0,0.147],[-0.264,0.37],[-0.144,0.094],[-0.077,-0.018],[-0.057,0.023],[-0.148,0.093],[-0.072,0.202],[-0.126,0.269],[-0.097,0.073],[-0.295,0],[-0.271,-0.048],[-0.069,0.005],[-0.061,-0.012],[-0.126,-0.101],[-0.221,-0.295],[-0.099,0.049],[-0.175,0.049],[-0.148,0],[-0.148,-0.097],[-0.077,-0.145],[-0.072,-0.123],[0,-0.168],[0,0],[0,0],[0.026,-0.468],[0.026,-0.124],[0.196,-0.265],[0.147,-0.1],[0.247,0],[0.419,0],[0.147,-0.048],[0.125,-0.097],[0.072,-0.122],[0.072,-0.147],[0.073,-0.122],[0.123,-0.098],[0.125,-0.149],[0.126,-0.122],[0.124,-0.073],[0,-0.368],[0,-0.54],[0.097,-0.221],[0,-0.272],[-0.027,-0.536],[0,0],[0,-0.151],[0,-0.344],[-0.372,-0.051],[-0.271,-0.149],[-0.124,-0.12],[-0.143,-0.072],[-0.292,-0.126],[-0.15,-0.073],[-0.418,0],[0,0],[-0.145,0.048],[-0.592,0],[-0.389,0],[-0.194,0.024],[-0.121,0.046],[-0.121,0.077],[-0.069,0.097],[-0.121,0.098],[0,0],[-0.173,0.051],[-0.221,0],[-0.047,-0.026],[-0.1,-0.148],[-0.076,-0.119],[-0.123,-0.093],[0,0],[0,0],[0.196,-0.048],[0.294,0],[0.369,-0.048],[0.12,-0.018],[0.149,-0.073],[0.149,-0.124],[0.098,-0.147],[0.098,-0.148],[0.098,-0.12],[0.146,-0.073],[0.148,0],[0.267,0.097],[0.171,0.126],[0.273,0],[0.372,-0.05],[0.296,0.026],[0.293,-0.024],[0.122,-0.025],[0.144,-0.051],[0.194,0],[0.148,0],[0.169,0],[0.147,-0.07],[0.096,-0.121],[0.046,-0.124],[0.124,-0.145],[0.147,0],[0.145,0],[0.123,0.047],[0.144,0.126],[0.097,0.051],[0.147,0],[0.122,-0.025],[0.124,-0.068],[0.07,-0.119],[-0.171,-0.05],[-0.068,0.006],[-0.063,-0.012],[-0.174,-0.073],[0.271,-0.026],[0.466,-0.148],[0.147,-0.048],[-0.073,-0.097],[-0.322,-0.124],[-0.117,0],[-0.144,0],[-0.222,0],[-0.197,0.048],[-0.251,0.294],[-0.248,0],[-0.194,-0.102],[-0.121,-0.072],[-0.096,-0.149],[-0.051,-0.124],[-0.051,-0.103],[-0.12,-0.075],[-0.151,-0.069],[-0.145,-0.095],[0.122,-0.122],[0.372,-0.24],[0.048,-0.149],[0.024,-0.124],[0.023,-0.269],[0,0],[0.174,0.074],[0.101,0.072],[0.073,0.146],[0.073,0.123],[0.124,0.146],[0.084,-0.025],[0.024,0.047],[0.022,0.123],[0,0.151],[0,0],[0.292,-0.225],[0.12,-0.1],[0.072,-0.121],[0.022,-0.122],[0.022,-0.123],[0.054,-0.147],[0.072,-0.17],[0.026,-0.122],[0,-0.245],[-0.048,-0.199],[0,-0.127],[0,-0.175],[0.074,-0.172],[0.072,-0.169],[0.025,-0.199],[0,0],[0,0],[0.145,0.027],[0.418,0.051],[0.297,0],[0.293,-0.025],[0.076,-0.145],[0,-0.196],[-0.051,-0.148],[-0.27,-0.245],[0,0],[0,0],[0.513,0.346],[0.124,0.125],[0.223,0.047],[0.148,0],[0.146,-0.022],[0.322,-0.198],[0.168,-0.072],[0.121,-0.049],[0.123,-0.072],[0.145,-0.097],[0.171,-0.076],[0.466,0],[0.269,-0.078],[0.199,-0.05],[0.25,0],[0.295,0.295],[0,0.54],[0,0],[0.124,-0.071],[0.12,0],[0.144,0],[0.195,0],[0,0],[0.318,0],[0.051,-0.471],[0,0],[0.175,0.127],[0.048,0.172],[0.072,0.322],[0,0],[0,0],[0,0],[0,0.15],[-0.023,0.147],[0,0],[-0.296,-0.096],[-0.175,-0.073],[-0.249,0],[-0.293,0.027],[0,0.296],[0,0.393],[-0.099,0.223],[0,0.27],[0.025,0.297],[0,0],[0.175,0],[0.101,0.013],[0.162,-0.059],[0.147,-0.073],[0.101,-0.127],[0.225,0],[0,0],[0.149,0.047],[-0.122,0.247],[-0.075,0.172],[0,0.145],[0,0],[0.296,0],[0.148,0.021],[-0.072,0.176],[-0.074,0.32],[0,0.148],[0.023,0.125],[0.075,0.171],[0.101,0.118],[0.196,0],[0.147,0],[0.075,-0.174],[0.125,-0.247],[0.32,-0.122],[0.076,0.011],[0.052,-0.009],[0.174,-0.05],[0,-0.22],[0,-0.248],[0,0],[0.098,-0.071],[0.123,-0.048],[0.123,-0.031],[0,-0.417],[-0.222,-0.321],[-0.149,-0.121],[-0.126,-0.077],[-0.148,-0.078],[0.025,-0.125],[0,-0.173],[0,-0.17],[0,0],[0,-0.246],[0,-0.098],[-0.048,-0.125],[-0.074,-0.174],[0,-0.339],[0,0],[0,0],[0.194,-0.024],[0.392,0],[0,0],[0.271,0],[0.397,0],[0.246,-0.145],[0.122,-0.071],[0.146,-0.051],[0.243,-0.196],[0.071,-0.128],[0.053,-0.149],[0.392,0],[0.174,0.029],[0,0],[0,0],[0.148,0],[0.151,0],[0,0],[0,0],[0,0],[0.193,-0.047],[0.148,-0.051],[0.122,-0.048],[0.147,-0.072],[0.296,-0.249],[0.176,-0.097],[0.172,-0.02],[0,0],[0.491,0],[0,0],[0.542,-0.097],[0.122,-0.026],[0.122,-0.025],[0,0],[0,0],[0.171,0],[0.109,-0.011],[0.152,0.041],[0.149,0.102],[0.077,0.099],[0.241,0],[0.216,-0.018],[0,0],[-0.296,-0.094],[0,0],[0,0],[0,0],[0.492,0],[0.144,0.022],[0.146,0],[0.147,0],[0.171,0.048],[0.146,0.099],[0.073,0.121],[0.296,-0.049],[0.067,0.006],[0.06,-0.013],[0.242,-0.168],[0.071,-0.147],[0,-0.147],[-0.098,-0.123],[-0.085,0.021],[-0.044,-0.02],[-0.148,-0.073],[-0.148,-0.073],[-0.144,-0.023],[-0.165,0.016],[-0.143,-0.009],[0,0],[-0.146,-0.073],[-0.147,-0.098],[-0.124,-0.072],[-0.124,-0.121],[-0.293,-0.223],[0,0],[-0.147,-0.097],[-0.144,-0.073],[-0.266,-0.2],[0,-0.244],[0.021,-0.197],[0,-0.272],[-0.078,-0.545],[0,-0.222],[0.097,-0.196],[0.372,-0.371],[0.094,-0.099],[0.12,-0.072],[0.494,0],[0,0],[0.176,0.05],[0.246,0.047],[0.149,0],[0.391,0.05],[0.152,0.075],[0.172,0.102],[0.174,0],[0,0],[0.393,0],[0.174,0.026],[0.268,0],[0,0],[0.073,-0.126],[0.052,-0.118],[0.049,-0.146],[0,0],[0,0],[-0.118,-0.118],[-0.101,-0.148],[0,-0.221],[0.048,-0.197],[0,-0.394],[-0.073,-0.245],[-0.052,-0.149],[0,-0.195],[0,0],[0.074,-0.125],[0.097,-0.149],[0.078,-0.125],[0,-0.493],[-0.025,-0.121],[-0.076,-0.169],[0,0],[-0.023,-0.194],[0,0],[0,0],[0.053,-0.173],[0,-0.246],[-0.021,-0.37],[0,0],[-0.343,0],[-0.147,-0.048],[-0.146,-0.096],[-0.222,0],[-0.393,0],[-0.176,-0.048],[-0.149,-0.051],[-0.125,-0.048],[0,0],[-0.097,-0.145],[-0.076,-0.145],[-0.075,-0.12],[-0.123,-0.151],[0,0],[0,0],[-0.174,0],[-0.126,-0.006],[-0.146,0.012],[-0.272,0.101],[-0.148,0.073],[-0.291,0.252],[-0.169,0.078],[-0.295,0.051],[-0.125,-0.006],[-0.149,0.013],[-0.147,0.048],[-0.146,0.096],[-0.244,0.295],[-0.518,0.197],[-0.295,0.028],[-0.214,-0.01],[-0.225,0.012],[-0.294,0.023],[0,0],[0.074,0.125],[0.147,0.146],[0,0.22],[-0.072,0.197],[-0.076,0.167],[-0.172,0.345],[0,0],[-0.07,0.121],[-0.124,0.072],[-0.08,-0.016],[-0.051,0.01],[-0.268,0.1],[-0.119,0.096],[-0.174,0.047],[-0.122,0.047],[-0.067,-0.012],[-0.062,0.024],[-0.172,0.075],[-0.076,-0.011],[-0.054,0.011],[-0.147,0.024],[-0.216,-0.016],[-0.193,0.011],[-0.293,0.025],[0,0],[0,0],[0,0.293],[0,0.172],[-0.074,0.27],[-0.096,0.123],[-0.293,0.074],[-0.223,0],[-0.368,-0.072],[-0.068,0.006],[-0.06,-0.012],[-0.494,-0.15],[-0.391,0],[0,0],[-0.146,0],[-0.148,0],[-0.072,0.249],[-0.074,0.102],[-0.125,0.1],[-0.174,0.074],[-0.124,0],[0,0],[-0.27,0.048],[-0.17,0.072],[-0.148,0.097],[-0.147,0.126],[-0.221,0],[-0.145,0],[-0.269,-0.196],[-0.196,-0.273],[-0.196,-0.464],[-0.05,-0.119],[-0.097,-0.144],[-0.147,-0.096],[-0.149,-0.074],[0,0],[-0.122,-0.075],[-0.122,-0.173],[-0.049,-0.099],[-0.145,-0.121],[-0.146,-0.127],[-0.121,-0.099],[-0.174,-0.121],[-0.125,-0.074],[-0.174,-0.096],[-0.173,-0.049],[-0.293,-0.052],[-0.071,0.009],[-0.098,-0.028],[-0.126,-0.099],[-0.074,-0.121],[-0.465,-0.272],[-0.127,-0.049],[-0.149,-0.069],[-0.123,-0.097],[-0.198,-0.276],[-0.172,-0.317],[-0.048,-0.149],[-0.027,-0.121],[0,-0.32],[0.047,-0.294],[0.663,-0.419],[0.169,-0.071],[0.123,-0.025],[0.294,0],[0.198,0],[1.051,0],[0,0],[-0.269,-0.197],[-0.099,-0.124],[-0.076,-0.123],[-0.098,-0.096],[-0.175,-0.077],[-0.076,0.011],[-0.054,-0.011],[-0.319,0],[0,0],[0,0],[-0.125,0.05],[-0.266,0.196],[-0.172,0.096],[-0.07,-0.02],[-0.038,0.05],[-0.049,0.125],[-0.098,0.267],[-0.075,0.101],[-0.171,0.098],[-0.075,-0.011],[-0.056,0.011],[-0.267,0.096],[0,0.148],[0,0.149],[0,0],[0.196,0],[0,0],[0.148,0],[0,0],[-0.023,0.226],[0,0],[-0.322,-0.121],[-0.122,-0.077],[-0.223,0],[-0.174,0],[0.074,0.466],[0,0.293],[0.194,0.027],[0.066,-0.005],[0.061,0.015],[0.17,0.077],[0.147,0.124],[0.171,0.098],[0.127,0.072],[0.172,0.072],[0.067,-0.014],[0.052,0.039],[0.122,0.126],[0.099,0.047],[0.08,-0.011],[0.055,0.01],[0.07,-0.007],[0.06,0.011],[0.146,0.05],[0.099,0.075],[0.121,0.076],[0.172,0.075],[0.075,-0.011],[0.055,0.013],[0.143,0.021],[0.068,-0.006],[0.071,0.011],[-0.023,0.121],[0,0.194],[0,0.147],[0.174,0.125],[0.175,0.05],[0.392,0.247],[0.123,0.094],[0.073,-0.021],[0.038,0.049],[0.026,0.121],[0,0.345],[0.349,0],[0.34,-0.024],[0,0],[0,0],[0,0.194],[0,0],[0.049,0.123],[0,0.221],[-0.173,0.148],[-0.223,0],[-0.175,-0.098],[-0.098,-0.146],[-0.101,-0.15],[-0.125,-0.096],[-0.074,0.017],[-0.059,-0.023],[-0.122,-0.047],[-0.148,-0.101],[-0.146,-0.099],[-0.148,-0.05],[-0.077,0.011],[-0.056,-0.01],[-0.152,-0.098],[-0.051,-0.193],[-0.245,-0.22],[-0.076,0.017],[-0.057,-0.021],[-0.296,-0.195],[-0.123,-0.072],[-0.146,-0.123],[-0.367,-0.02],[-0.086,0.005],[-0.154,-0.117],[-0.07,-0.094],[-0.12,-0.096],[-0.147,-0.074],[-0.293,-0.15],[-0.542,-0.195],[-0.249,-0.147],[-0.125,-0.147],[-0.05,-0.121],[0,-0.2],[0.05,-0.148],[0.076,-0.175],[0.028,-0.124],[0,-0.219],[-0.096,-0.171],[0,-0.369],[-0.046,-0.27],[-0.198,-0.24],[-0.12,-0.073],[-0.08,0.017],[-0.051,-0.009],[-0.145,0],[-0.267,-0.054],[0,0],[0,0],[0.124,0.025],[0.147,0],[0.148,-0.024],[-0.048,-0.126],[-0.074,-0.15],[-0.291,-0.243],[-0.121,-0.099],[-0.148,-0.145],[-0.1,0.149],[-0.05,0.096],[-0.126,0.15],[-0.053,-0.122],[-0.07,-0.099],[-0.149,-0.294],[-0.023,-0.345],[-0.023,-0.12],[-0.197,-0.151],[0,0],[-0.125,0.025],[-0.126,0.077],[-0.097,0.12],[-0.073,0.171],[0,0.149],[0,0],[0,0.171],[-0.125,0.097],[-0.171,0],[-0.121,-0.026],[-0.199,-0.025],[-0.168,0],[0,0],[-0.196,0.025],[-0.021,0.341],[0,0.146],[0,0.071],[-0.316,0.022],[-0.147,0.021],[0.122,0.147],[0.144,0.124],[0.194,0.071],[0.197,0],[0,-0.297],[0.025,-0.15],[0.169,0.07],[0.121,0.053],[0.124,0.175],[0.049,0.173],[0.024,0.123],[0.022,0.118],[0.049,0.12],[0.12,0.099],[0.123,0.052],[0.074,-0.011],[0.056,0.013],[0.123,0.148],[0.026,0.169],[0,0.148],[0,0],[-0.078,0.17],[0,0],[-0.151,-0.069],[-0.174,-0.025],[-0.292,0],[0,0],[0,0],[-0.171,0.077],[0.146,0.1],[0.121,0.048],[-0.121,0.146],[-0.193,0.025],[-0.347,0],[-0.322,-0.048],[-0.124,-0.023],[-0.146,-0.074],[-0.196,-0.047],[-0.06,0.008],[-0.067,-0.025],[-0.099,-0.101],[-0.052,-0.119],[-0.076,-0.1],[-0.095,-0.076],[-0.146,-0.077],[0,0],[0.12,-0.074],[0,-0.221],[-0.294,-0.27],[-0.269,-0.197],[0,-0.441],[0,-0.076],[0,-0.149],[0,-0.147],[0,0],[-0.062,-0.147],[-0.096,-0.158],[-0.058,-0.076],[-0.072,-0.062],[-0.065,-0.048],[-0.061,-0.048],[-0.096,-0.07],[-0.062,-0.072],[0,-0.134],[0.035,-0.124],[0.06,-0.089],[0.024,-0.071],[0.007,-0.101],[0,-0.15],[-0.044,-0.205],[-0.037,-0.077],[-0.088,-0.038],[-0.097,0],[-0.074,0.211],[-0.011,0.06],[-0.024,0.111],[0,0.079],[0.016,0.234],[0,0.073],[-0.011,0.237],[0,0],[-0.047,-0.021],[-0.076,-0.048],[-0.066,-0.057],[-0.076,-0.064],[-0.163,-0.16],[-0.064,-0.075],[-0.075,-0.082],[-0.086,-0.035],[-0.078,-0.02],[-0.077,0],[-0.149,0],[-0.135,-0.048],[-0.082,-0.023],[-0.16,0],[-0.075,0.01],[-0.062,0.041],[-0.036,0.091],[0,0.076],[0,0.084],[0,0.223],[-0.036,0.098],[-0.06,0.086],[-0.038,0.077],[-0.086,0.037],[-0.195,0],[-0.17,-0.122],[-0.065,-0.058],[-0.149,-0.128],[-0.077,-0.059],[-0.162,-0.11],[-0.1,-0.086],[-0.072,-0.045],[-0.074,-0.035],[-0.06,-0.021],[-0.109,0],[0,0],[0,0.271],[0,0],[0,0.109],[-0.024,0.185],[-0.122,0],[-0.075,0],[-0.079,0.011],[-0.109,0],[-0.232,-0.134],[-0.161,-0.088],[-0.073,-0.024],[-0.163,0],[-0.069,0.025],[-0.064,0.04],[-0.052,0.061],[-0.065,0.059],[-0.028,-0.048],[-0.076,-0.123],[-0.034,-0.075],[-0.016,-0.063],[0,-0.148],[0.064,-0.235],[0.037,-0.09],[0.087,-0.221],[0,-0.308],[-0.011,-0.137],[-0.033,-0.113],[-0.023,-0.075],[-0.027,-0.061],[-0.051,-0.122],[0,-0.11],[0.036,-0.122],[0.074,-0.075],[0.034,-0.089],[0.01,-0.073],[0,-0.171],[0.035,-0.073],[0.052,-0.075],[0.086,-0.208],[0.075,-0.134],[0.187,-0.087],[0.083,-0.046],[0.076,-0.06],[0.035,-0.098],[0.011,-0.063],[0.013,-0.151],[0.136,-0.354],[0.075,-0.199],[0.158,-0.162],[0.073,-0.06],[0.085,-0.051],[0.084,-0.011],[0,0],[0.062,0.004],[0.091,-0.012],[0.148,-0.025],[0.065,0],[0.042,0.004],[0.041,-0.005],[0.06,-0.011],[0.072,-0.038],[0.124,0],[0.124,0.036],[0.071,0.062],[0.219,0.026],[0,0],[0.113,0],[0.137,0.012],[0.108,0],[0.183,0.038],[0.097,0],[0,0],[0.084,-0.011],[0.087,-0.05],[-0.16,-0.062],[-0.246,-0.061],[-0.245,-0.024],[-0.147,-0.012],[0,0],[0,0],[-0.097,-0.123],[-0.033,-0.076],[0,-0.137],[0,-0.083],[0,-0.076],[0,-0.101],[0,-0.306],[-0.124,-0.122],[-0.196,-0.297],[-0.073,-0.147],[0,0],[-0.1,-0.147],[-0.126,-0.146],[-0.192,-0.075],[-0.172,0],[0,0],[-0.149,0.048],[-0.099,0.122],[-0.05,0.126],[-0.147,0.148],[0,0],[-0.32,-0.445],[-0.1,-0.122],[-0.147,-0.122],[-0.124,-0.073],[-0.072,-0.174],[-0.073,-0.316],[-0.024,-0.123],[-0.074,-0.148],[-0.272,-0.316],[-0.071,-0.199],[0,-0.269],[0,0],[0,-0.148],[-0.246,-0.395],[-0.225,-0.1],[-0.145,-0.048],[-0.118,-0.076],[-0.101,-0.121],[-0.078,-0.12],[-0.072,-0.124],[-0.217,-0.394],[-0.144,-0.296],[0,0],[0,-0.491],[0.027,-0.148],[0.025,-0.173],[0,-0.145],[-0.174,-0.224],[-0.148,-0.122],[-0.125,-0.072],[-0.148,-0.126],[-0.273,-0.272],[-0.122,-0.146],[-0.097,-0.122],[-0.123,-0.17],[-0.147,-0.318],[-0.122,-0.147],[-0.122,-0.17],[-0.297,-0.418],[-0.368,-0.491],[-0.073,-0.148],[-0.073,-0.196],[0,-0.175],[-0.022,-0.293],[-0.022,-0.125],[-0.049,-0.146],[0,-0.369],[0,0],[-0.393,-0.343],[-0.39,-0.042],[-0.297,0],[-0.42,0.145],[-0.096,0.169],[-0.22,0.219],[-0.3,0.122],[-0.173,0],[0,0],[-0.17,-0.05],[-0.069,0.006],[-0.061,-0.012],[0,0],[-0.122,0.146],[-0.174,0.117],[-0.2,0.072],[-0.438,0.149],[-0.171,0.056],[-0.133,-0.016],[-0.133,0.028],[-0.17,0.023],[-0.124,0],[-0.267,0.097],[-0.146,0.146],[0,0],[-0.199,0.049],[-0.123,0],[-0.469,0],[-0.025,0.267],[-0.074,0.1],[-0.147,0.125],[-0.076,-0.017],[-0.057,0.023],[-0.174,0.048],[-0.124,0.024],[-0.147,0.017],[-0.122,0],[-0.146,0.023],[0,0],[-0.027,0.217],[0,0.124],[-0.027,0.117],[-0.174,0.275],[0,0],[-0.023,0.124],[-0.051,0.148],[-0.196,0.226],[-0.172,0.073],[-0.147,0],[0,0],[-0.145,0],[0,0],[-0.046,0.145],[-0.046,0.123],[-0.075,0.169],[-0.097,0.121],[-0.248,0],[0,0],[-0.144,-0.097],[-0.12,-0.046],[-0.047,0.465],[-0.103,0.49],[-0.049,0.169],[-0.097,0.094],[-0.124,0.029],[-0.065,-0.007],[-0.064,0.015],[-0.294,0.124],[0.122,0.317],[0.195,0.072],[0.061,-0.008],[0.07,0.027],[0.146,0.074],[0.071,0.126],[0.023,0.121],[0.027,0.178],[0.076,0.148],[0.177,0.072],[0.296,0.074],[0.122,0],[0.146,0.05],[-0.023,0.127],[0,0.319],[0.051,0.099],[0.12,0.073],[0.175,0],[0,0],[0.099,-0.324],[0.246,-0.243],[0.07,0.319],[0.05,0.124],[0.095,0.127],[0.122,0.124],[0,0],[0.121,0.126],[0.121,0.099],[0.126,-0.075],[0.125,-0.074],[0.121,-0.076],[0.071,-0.317],[0.022,-0.468],[0.025,-0.295],[0.291,0],[0.339,0.023],[0,0],[0.171,0.048],[0.298,0],[0.074,-0.023],[0.172,-0.074],[0.12,-0.073],[0.149,-0.146],[0.223,0],[0.267,0.147],[0.153,0.149],[0.051,0.199],[0,0.146],[-0.049,0.097],[-0.095,0.078],[-0.42,0],[0,0],[-0.221,-0.051],[-0.245,0],[-0.246,0.023],[-0.145,0.023],[0.097,0.073],[0.195,0],[0,0],[0.296,0],[0,0],[0.146,0],[0.123,0.026],[0.419,0.022],[0.208,-0.007],[0.232,0.011],[0.147,0],[0,0],[0,0],[0.144,0.095],[0.128,0.078],[0.197,0.072],[0.121,0.02],[0.122,0],[0.147,0.052],[0.072,0.223],[0.023,0.17],[0.072,0.268],[0.196,0.273],[0.047,0.195],[0.025,0.125],[0,0.147],[0.023,0.196],[0,0.247],[-0.028,0.245],[-0.076,0.148],[-0.2,0.072],[-0.221,0],[-0.365,-0.075],[-0.395,-0.393],[-0.124,-0.099],[-0.249,-0.293],[-0.097,-0.171],[-0.249,-0.419],[-0.177,-0.102],[-0.447,-0.248],[-0.294,-0.245],[-0.32,-0.196],[-0.318,-0.072],[-0.164,0.016],[-0.141,-0.009],[-0.12,0],[-0.591,0],[0,0],[0,0],[-0.148,0.022],[-0.131,-0.006],[-0.133,0.012],[-0.148,0.024],[0,0],[-0.268,-0.072],[-0.146,-0.102],[-0.12,-0.319],[-0.023,-0.124],[-0.05,-0.12],[-0.12,-0.102],[-0.149,-0.074],[-0.197,0],[0,0],[-0.172,0],[-0.174,-0.047],[-0.148,-0.098],[-0.099,-0.124],[-0.125,-0.072],[-0.222,0],[0,0],[-0.345,0],[0,0],[0,0],[0,0],[-0.298,-0.248],[-0.119,-0.103],[-0.101,-0.147],[-0.247,-0.217],[-0.151,-0.076],[-0.102,-0.048],[-0.126,-0.148],[-0.048,-0.151],[-0.027,-0.296],[-0.101,0.002],[-0.076,-0.092],[-0.123,-0.099],[-0.149,-0.072],[-0.125,0],[0,0],[-0.271,-0.074],[-0.151,-0.053],[-0.122,-0.049],[-0.372,-0.071],[0.468,-0.047],[0.268,-0.07],[0.149,-0.049],[-0.073,-0.126],[-0.121,-0.103],[-0.124,-0.05],[-0.121,-0.049],[-0.12,-0.123],[-0.122,-0.148],[-0.32,-0.196],[-0.174,-0.122],[-0.198,-0.049],[-0.146,0],[-0.122,0.048],[-0.148,0.098],[-0.154,0.073],[-0.241,0.12],[-0.12,0.173],[-0.221,0],[-0.32,-0.244],[-0.073,-0.124],[0,-0.394],[-0.048,-0.27],[-0.078,-0.347],[0,-0.124],[0,-0.317],[0,0],[0,-0.194],[-0.026,-0.54],[-0.026,-0.121],[-0.072,-0.295],[0,-0.148],[-0.049,-0.492],[-0.249,-0.295],[-0.126,-0.146],[-0.099,-0.167],[-0.025,-0.164],[-0.025,-0.122],[-0.098,-0.315],[-0.023,-0.12],[-0.074,-0.175],[-0.025,-0.17],[-0.025,-0.124],[-0.046,-0.147],[-0.074,-0.124],[-0.118,-0.171],[-0.072,-0.123],[-0.075,-0.196],[0,-0.297],[0,0],[0,-0.295],[-0.324,-0.471],[-0.098,-0.174],[-0.074,-0.148],[-0.073,-0.147],[-0.32,-0.662],[-0.171,-0.468],[-0.047,-0.124],[0,0],[-0.141,-0.12],[-0.269,0],[-0.173,0.098],[-0.121,0.148],[-0.049,0.123],[-0.045,0.146],[-0.295,0.392],[-0.126,0.075],[-0.069,-0.012],[-0.061,0.026],[-0.118,0.026],[-0.125,0.149],[-0.076,0.174],[-0.049,0.123],[-0.048,0.146],[0,0.289],[-0.098,0.369],[-0.073,0.172],[-0.074,0.295],[-0.026,0.295],[0.024,0.29],[0,0.296],[0,0.147],[0,0],[0,0.609],[-0.075,0.125],[-0.118,0.076],[-0.467,0],[-0.323,0.296],[-0.096,0.294],[-0.073,0.145],[-0.195,0.075],[-0.122,0.05],[-0.124,0.052],[-0.147,0.098],[-0.145,0.097],[-0.117,0.068],[-0.098,0.071],[-0.096,0.151],[-0.147,0.273],[-0.122,0.148],[-0.096,0.124],[-0.149,0.1],[-0.244,0.222],[-0.098,0.146],[-0.074,0.122],[-0.122,0.078],[-0.077,-0.015],[-0.052,0.013],[-0.06,-0.008],[-0.068,0.027],[-0.124,0.147],[-0.077,0.122],[-0.318,0.095],[-0.147,0],[-0.083,-0.001],[-0.158,0.105],[-0.094,0.148],[-0.049,0.614],[-0.022,0.299],[0,0],[-0.145,-0.027],[-0.22,0],[0,0],[-0.172,0.076],[-0.065,-0.013],[-0.062,0.027],[-0.171,0.077],[-0.1,0.049],[-0.149,0.1],[-0.079,0.124],[0,0],[0,0],[-0.244,-0.052],[-0.06,0.014],[-0.043,-0.063],[-0.096,-0.146],[-0.046,-0.121],[-0.072,-0.121],[-0.125,-0.124],[-0.072,-0.124],[-0.096,-0.321],[0,-0.296],[-0.074,-0.124],[-0.075,-0.122],[-0.097,-0.122],[-0.075,-0.098],[-0.296,-0.248],[-0.121,-0.124],[-0.1,-0.146],[0,-0.196],[0,0],[0,-0.147],[-0.004,-0.285],[-0.001,0],[-0.296,0],[-0.121,-0.07],[-0.074,-0.1],[0,-0.149],[0.075,-0.268],[0.046,-0.145],[0,-0.465],[-0.419,-0.416],[-0.149,-0.099],[-0.173,-0.026],[-0.295,0],[0,0],[-0.125,0.049],[-0.145,0.076],[-0.13,0.052],[-0.145,0.024],[-0.321,0.074],[0,0],[0,0],[-0.073,0.172],[-0.323,-0.344],[-0.074,-0.148],[-0.053,-0.151],[-0.075,-0.297],[-0.151,-0.492],[-0.049,-0.119],[-0.096,-0.145],[-0.075,-0.147],[0,-0.146],[0,-0.589],[-0.047,-0.148],[-0.073,-0.123],[-0.095,-0.123],[-0.272,-0.272],[-0.1,-0.144],[0,-0.248],[0,-0.293],[0,-0.317],[0.344,-0.222],[0.148,-0.073],[0.095,-0.076],[0.047,-0.148],[0,-0.124],[0,-0.466],[0,0],[0.027,-0.296],[0,-0.247],[-0.171,-0.346],[-0.15,-0.123],[-0.148,-0.074],[-0.126,-0.053],[-0.241,-0.296],[-0.32,-0.173],[-0.124,-0.069],[-0.095,-0.146],[-0.026,-0.2],[-0.026,-0.35],[-0.099,-0.245],[-0.126,-0.294],[-0.075,-0.169],[-0.097,-0.195],[0,-0.368],[0,0],[-0.021,-0.148],[-0.051,-0.169],[-0.123,-0.144],[-0.171,-0.1],[-0.146,-0.073],[-0.539,-0.196],[-0.249,-0.197],[-0.173,-0.267],[-0.127,-0.094],[-0.127,-0.051],[-0.124,-0.024],[-0.175,-0.049],[-0.269,0],[0,0],[-0.146,0.069],[0.202,0.276],[0.097,0.099],[0.097,0.096],[0.072,0.317],[0.019,0.343],[0,0.148],[0.074,0.434],[0.026,0.12],[0.073,0.152],[0.049,0.199],[0,0.472],[0,0],[0,0.15],[0,0],[0,0.195],[0,0],[0.371,0.247],[0.123,0.096],[0.121,0.098],[0.121,0.101],[0.173,0.077],[0.295,0.054],[0.068,-0.008],[0.099,0.031],[0.194,0.272],[0.046,0.167],[0.027,0.12],[0,0.292],[0.027,0.123],[0.072,0.098],[0.126,0.096],[0.076,0.124],[0,0.296],[0,0],[0.071,0.097],[0.124,0.072],[0.145,0.051],[0,0],[0,0],[-0.27,0.494],[-0.194,0.462],[0,0.24],[0,0.295],[-0.072,0.197],[-0.102,0.149],[-0.101,0.175],[-0.097,-0.079],[-0.124,-0.099],[-0.099,-0.126],[-0.074,-0.15],[-0.101,-0.244],[-0.146,-0.098],[-0.244,0],[0,0],[-0.148,0.023],[-0.169,0],[-0.196,-0.274],[-0.15,-0.345],[-0.123,-0.316],[-0.148,-0.291],[-0.198,-0.274],[-0.318,-0.147],[-0.077,0.011],[-0.051,-0.008],[-0.124,-0.027],[-0.127,-0.021],[-0.096,-0.073],[0,-0.196],[0.096,-0.314],[0,-0.294],[-0.342,-0.588],[-0.098,0.144],[-0.294,0.246],[-0.149,0.123],[-0.15,0.118],[-0.174,0.146],[-0.097,0.15],[-0.073,0.122],[-0.074,0.174],[-0.047,0.123],[-0.048,0.124],[-0.196,0.048],[-0.224,0],[-0.27,0.02],[-0.167,0.119],[-0.371,0.322],[-0.196,0.098],[-0.098,0.074],[-0.097,0.146],[-0.027,0.122],[0,0.294],[0,0.738],[0,0],[0.074,0.323],[0.121,0.521],[0.026,0.346],[0,0.345],[0.364,0.095],[0.147,0.076],[0.124,0.125],[0.149,0.367],[0.07,0.093],[0.097,0.071],[0.152,0.072],[0.318,0.197],[0.126,0.144],[0.099,0.12],[0.073,0.173],[0.052,0.27],[0.026,0.124],[0.073,0.17],[0,0.243],[-0.052,0.223],[-0.048,0.175],[-0.12,0.099],[-0.115,0.124],[-0.07,0.147],[-0.05,0.179],[-0.023,0.171],[-0.048,0.22],[-0.049,0.174],[-0.196,0.075],[-0.12,0.051],[-0.091,-0.016],[-0.082,0.012],[-0.343,0.12],[-0.068,-0.012],[-0.061,0.024],[-0.175,0.052],[-0.123,0],[-0.318,0],[-0.15,0],[-0.467,0],[0,0],[0,-0.143],[0,0],[0.174,-0.074],[0.146,-0.05],[0.067,0.012],[0.062,-0.025],[0.146,-0.099],[0.094,-0.149],[0,-0.272],[-0.051,-0.199],[-0.077,-0.17],[-0.124,-0.124],[0,0],[-0.151,0.513],[-0.025,0.124],[-0.024,0.175],[0,0.174],[0.073,0.123],[0.272,0.095],[0,0],[-0.318,0.022],[0,0],[-0.148,0.07],[-0.173,0.094],[-0.174,0.046],[-0.268,0.052],[-0.318,0],[0,0],[-0.126,0],[-0.29,0],[-0.119,0.025],[-0.146,0.071],[-0.125,0.123],[-0.123,0.049],[-0.273,0.047],[-0.146,0.025],[-0.126,-0.005],[-0.148,0.013],[-0.125,0.024],[-0.059,-0.008],[-0.069,0.027],[-0.147,0.099],[-0.149,0.074],[-0.124,0.049],[-0.145,0.098],[-0.096,0.101],[-0.1,0.126],[-0.101,0.145],[-0.151,0.097],[-0.17,0.022],[-0.121,0.022],[-0.07,-0.006],[-0.061,0.012],[-0.244,0.223],[-0.099,0.124],[-0.127,0.101],[-0.121,0.148],[-0.075,0.143],[-0.072,0.171],[-0.05,0.123],[-0.076,0.148],[-0.22,0.365],[-0.223,0.443],[-0.049,0.123],[-0.126,0.15],[-0.12,0.125],[-0.201,0.123],[-0.15,0.118],[-0.074,0.175],[-0.05,0.17],[-0.02,0.172],[-0.02,0.124],[-0.021,0.127],[-0.053,0.119],[-0.171,0.098],[-0.197,0.319],[0,0.465],[0.125,0.172],[0.149,0.076],[0.079,-0.016],[0.05,0.01],[0.324,0.023],[0,0.294],[0,0.147],[0,0.146],[0,0],[0.025,0.126],[0.023,0.171],[0.072,0.442],[0.023,0.124],[0.122,0.145],[0.024,0.172],[0,0.465],[0.196,0.419],[0.2,0.321],[0.393,0.197],[0.17,0.047],[0.077,-0.015],[0.078,0.04],[0.097,0.151],[0,0.151],[0,0],[-0.072,0.149],[-0.124,0.149],[-0.027,0.171],[0,0.293],[0,0],[0,0],[-0.096,0.149],[-0.098,0.122],[-0.123,0.075],[-0.078,-0.015],[-0.052,0.011],[-0.122,0],[-0.146,0.021],[0,0],[-0.467,0],[0,0.394],[0.023,0.121],[0,0],[0.075,0.124],[0.224,0.294],[0,0],[0.027,-0.298],[0.027,-0.12],[0.022,-0.127],[0.15,0],[0.147,0],[0.169,0],[0,0],[0,0],[0,0.417],[-0.077,0.22],[-0.097,0.146],[-0.197,0.073],[-0.126,0.02],[-0.467,0],[-0.124,0.02],[-0.098,0.074],[-0.05,0.124],[-0.097,0.148],[-0.171,0.072],[-0.173,0.05],[-0.145,0.019],[-0.15,-0.01],[-0.115,0.009],[-0.123,0.019],[-0.147,0.126],[-0.122,0.149],[-0.124,0.122],[-0.169,0.123],[-0.248,0],[0,0],[-0.148,-0.052],[0,0],[0.124,-0.146],[0.075,-0.145],[0.052,-0.27],[0.246,-0.269],[0.125,-0.149],[0.129,-0.154],[0.047,-0.125],[0,0],[-0.121,0.099],[-0.122,0.123],[0,0],[-0.175,0.122],[-0.246,0.248],[-0.173,0.073],[-0.123,0.02],[-0.173,0],[-0.467,-0.074],[-0.064,0.006],[-0.064,-0.013],[-0.27,-0.146],[-0.098,-0.12],[0,-0.296],[0,0],[0.073,-0.147],[0.098,-0.198],[0.047,-0.124],[0,-0.269],[-0.027,-0.342],[0,0],[0,0],[-0.223,0],[-0.121,-0.021],[-0.176,-0.319],[-0.027,-0.119],[-0.075,-0.273],[-0.029,-0.122],[-0.075,-0.146],[0,-0.245],[0,0],[0.126,-0.175],[0.073,-0.174],[0.049,-0.128],[0,-0.17],[0,0],[0,0],[-0.468,0.27],[0,0],[-0.173,0.096],[-0.222,0.094],[-0.125,0.049],[-0.148,0.05],[-0.173,0.052],[-0.078,-0.014],[-0.078,0.039],[-0.099,0.146],[0,0.121],[-0.025,0.297],[-0.027,0.171],[0,0.149],[0,0],[0.294,0.223],[0.026,0.222],[0.052,0.322],[0.074,0.122],[0.122,0.097],[0.147,0.096],[0.148,0.096],[0.123,0.096],[0.124,0.148],[0.073,0.119],[0.05,0.175],[0,0.222],[-0.124,0.373],[-0.072,0.172],[-0.07,0.122],[-0.101,0.076],[-0.081,-0.014],[-0.053,0.014],[-0.321,0.049],[0,0],[-0.295,0.027],[0,0],[-0.026,0.123],[-0.075,0.122],[-0.15,0.099],[-0.069,-0.013],[-0.064,0.027],[-0.146,0.072],[-0.273,0.37],[-0.125,0.148],[-0.315,0.123],[-0.146,0],[-0.127,-0.02],[-0.66,-0.222],[-0.147,0],[-0.274,0.147],[-0.122,0.076],[-0.144,0.1],[-0.146,0.077],[-0.072,-0.017],[-0.06,0.024],[-0.171,0.047],[-0.145,-0.022],[-0.119,0.021],[-0.147,0.054],[-0.097,0.047],[-0.12,0.095],[-0.024,0.123],[-0.293,0.245],[-0.096,0.126],[-0.097,0.123],[-0.099,0.122],[-0.489,0.42],[-0.145,0.126],[-0.148,0.343],[-0.046,0.121],[-0.071,0.172],[-0.047,0.122],[-0.124,0.295],[-0.076,0.149],[-0.342,0.271],[-0.123,0.068],[-0.124,0.074],[-0.072,-0.017],[-0.058,0.022],[-0.25,0.294],[-0.122,0.151],[-0.097,0.124],[-0.144,0.149],[-0.121,0.151],[-0.025,0.173],[-0.025,0.294],[0,0.145],[-0.026,0.299],[0,0],[-0.072,0.175],[-0.072,0.172],[0,0.419],[0,0],[0,0.146],[0,0],[-0.025,0.118],[-0.047,0.17],[-0.02,0.124],[-0.095,0.272],[-0.099,0.173],[-0.078,0.148],[-0.099,0.146],[-0.096,-0.074],[-0.125,-0.072],[-0.096,-0.072],[-0.125,-0.151],[0,-0.197],[0,-0.148],[0.049,-0.148],[0,-0.218],[-0.054,-0.369],[0,-0.667],[0.046,-0.513],[0.046,-0.123],[0.1,-0.147],[0.096,-0.145],[0,-0.221],[-0.026,-0.2],[-0.148,-0.442],[0,-0.394],[0.072,-0.199],[0.118,-0.125],[0.05,-0.174],[0,-0.246],[0,-0.221],[0,-0.199],[0,-0.148],[0,0],[-0.073,0.15],[-0.049,0.125],[0,0],[-0.074,0.145],[-0.074,0.15],[-0.029,-0.15],[-0.15,-0.249],[-0.146,-0.098],[-0.465,-0.024],[0.028,0.125],[0.052,0.147],[0.052,0.118],[0.097,0.15],[0.123,0.146],[0.097,0.122],[0.075,0.175],[0.121,0.296],[0.072,0.174],[0,0.32],[-0.174,0.321],[-0.021,0.196],[-0.048,0.173],[-0.048,0.126],[-0.074,0.119],[-0.122,0.101],[-0.199,0],[-0.267,-0.151],[-0.392,0],[-0.171,0.053],[0.026,0.124],[0.025,0.145],[0.025,0.122],[0.052,0.293],[0,0.145],[0.048,0.17],[0.024,0.17],[0,0.465],[0.049,0.124],[0.074,0.175],[0.078,0.118],[0.124,0.368],[0.027,0.148],[0,0.149],[0,0.172],[0,0.145],[0,0],[0,0.196],[0,0.172],[0.024,0.121],[0.074,0.12],[0.08,-0.006],[0.037,0.058],[0.023,0.27],[0.019,0.295],[0.019,0.342],[0.025,0.296],[0,0],[0,0],[0.27,-0.047],[0.145,-0.073],[0,0],[0,-0.119],[0,0],[-0.026,-0.148],[0,-0.296],[0,0],[0.067,-0.001],[0.027,0.072],[0,0.169],[0,0.149],[-0.026,0.127],[0,0.293],[0,0],[0.07,0.149],[0.17,0.097],[0.175,0.049],[0.07,-0.007],[0.06,0.01],[0.149,0.124],[0.126,0.077],[0.121,0.073],[0.441,0.443],[0,0],[0,0],[0,0],[0.022,0.148],[0.049,0.148],[0.344,0.466],[0,0],[0,-0.148],[0,0],[0.024,-0.151],[0.075,-0.006],[0.096,0.013],[0.149,0.025],[0,0],[-0.023,0.12],[0,0.247],[0.323,0.271],[0.195,-0.072],[0.169,0],[0,0],[0,0],[0.149,0.027],[-0.07,0.269],[-0.122,0.146],[-0.174,0.045],[-0.074,-0.011],[-0.055,0.012],[-0.296,0.099],[-0.148,0.094],[-0.096,0.145],[-0.145,0.174],[-0.222,0.101],[-0.122,0.025],[-0.146,0.023],[-0.293,0],[-0.217,0.516],[-0.097,0.124],[-0.126,0.101],[-0.124,0.076],[-0.073,0.122],[-0.148,0.097],[-0.121,0.096],[-0.121,0.075],[-0.147,0.12],[-0.144,0.12],[-0.145,0.075],[-0.125,0.051],[-0.071,-0.011],[-0.051,0.026],[-0.072,0.124],[-0.053,0.149],[-0.048,0.123],[-0.07,0.147],[-0.095,0.143],[-0.096,0.103],[-0.323,0.05],[-0.133,-0.015],[-0.168,0.038],[-0.269,0.201],[-0.12,0.15],[-0.144,0.167],[-0.343,0],[-0.399,0],[-0.07,0],[-0.37,0],[0,0],[-0.147,-0.024],[0,0],[-0.148,0.024],[-0.245,0],[0,0],[-0.144,-0.052],[-0.295,0],[-0.193,0.046],[-0.17,0],[0,0],[0,0],[-0.197,0.269],[-0.147,0.099],[-0.198,-0.124],[-0.246,0],[-0.294,0],[-0.197,-0.1],[-0.176,-0.077],[-0.124,-0.048],[-0.147,-0.073],[0.073,-0.121],[0,-0.223],[-0.196,-0.172],[-0.174,0],[0,0],[-0.243,0.298],[-0.122,0.148],[-0.217,0],[-0.367,-0.374],[-0.122,-0.095],[-0.027,0.149],[-0.047,0.148],[-0.124,-0.051],[-0.196,0],[0,0],[0.048,0.121],[0.072,0.175],[0.025,0.099],[0.296,0],[0.146,0],[0,0],[-0.268,0.173],[-0.071,-0.018],[-0.049,0.037],[-0.124,0.144],[-0.08,0.126],[-0.097,0.148],[-0.124,0.149],[-0.198,0.074],[-0.059,-0.008],[-0.066,0.027],[0,0],[-0.098,0.175],[-0.322,0.365],[-0.444,0.368],[-0.418,0],[-0.195,-0.047],[-0.245,0],[0,0],[-0.145,0.077],[-0.222,0],[0,0],[-0.12,-0.095],[-0.175,-0.052],[-0.125,-0.02],[-0.07,0.006],[-0.062,-0.01],[-0.174,-0.075],[0,-0.271],[0,0],[-0.074,-0.127],[-0.069,-0.148],[0,-0.127],[0,-0.295],[0,0],[-0.125,0.095],[-0.129,0.097],[-0.367,0.147],[-0.124,0.075],[-0.146,0.101],[-0.099,0.125],[-0.147,0.122],[-0.175,0.047],[-0.27,0.047],[-0.056,-0.011],[-0.071,0.044],[-0.072,0.121],[-0.049,0.148],[-0.021,0.148],[-0.021,0.294],[-0.053,0.271],[-0.271,0.047],[-0.343,0],[0,0],[0,0],[0.171,-0.074],[0,0],[0.122,-0.074],[0.075,-0.17],[0.023,-0.146],[0.022,-0.123],[0.022,-0.118],[0.025,-0.121],[0.097,-0.343],[0.025,-0.125],[0.074,-0.117],[0.148,-0.098],[0.121,-0.052],[0.17,-0.095],[0.096,-0.1],[0.05,-0.126],[0.046,-0.122],[0.316,-0.195],[0.467,-0.3],[0.49,-0.296],[0.419,-0.347],[0.368,-0.419],[0.147,-0.1],[0.217,-0.247],[0.072,-0.122],[0.197,-0.023],[0.068,0.005],[0.062,-0.011],[0.081,0.005],[0.086,-0.011],[0.145,-0.024],[0.123,-0.023],[0.343,-0.125],[0.149,-0.047],[0.06,0.008],[0.07,-0.025],[0.096,-0.124],[0,-0.193],[0,-0.246],[0.149,-0.367],[0.121,-0.146],[0.103,-0.145],[0.047,-0.127],[0.028,-0.22],[0,-0.194],[0.076,-0.269],[0.099,-0.32],[0.025,-0.349],[0,-0.295],[0,-1.647],[0.049,-0.2],[0.149,-0.15],[0,0],[0,0],[-0.172,0],[-0.171,0.052],[-0.12,0.044],[-0.148,0.025],[-0.122,0],[-0.271,0],[-0.072,0.44],[-0.049,0.123],[-0.121,0.147],[-0.126,0.099],[-0.096,0.147],[-0.073,0.174],[0,0],[-0.073,0.121],[-0.246,0],[0,0],[-0.149,-0.022],[0,0],[-0.12,0.05],[-0.122,0.097],[0,0.175],[0,0],[-0.268,0.268],[-0.121,0.1],[0,0],[0,0],[0.149,0.27],[0.028,0.169],[0,0],[0,0],[-0.07,0.147],[-0.124,0.195],[-0.074,0.124],[-0.224,0],[-0.167,-0.12],[-0.072,-0.097],[-0.126,-0.15],[0,0],[0,0],[0.119,0.12],[0.125,0.325],[0.029,0.126],[0.029,0.125],[0.026,0.149],[0,0.321],[-0.072,0.12],[-0.101,0.051],[-0.144,0.048],[0.025,0.121],[0.071,0.172],[0.062,0.008],[0.068,-0.025],[0.197,0],[0,0],[-0.078,0.268],[-0.124,0.297],[-0.073,0.122],[-0.124,0.098],[-0.245,0.218],[-0.073,0.147],[-0.053,0.127],[-0.026,0.148],[0,0.127],[-0.024,0.344],[-0.024,0.122],[-0.073,0.128],[-0.149,0.097],[-0.125,0.024],[-0.148,0],[-0.273,-0.198],[-0.099,-0.101],[-0.247,0],[-0.203,0.097],[-0.125,0.126],[-0.148,0.124],[-0.121,0.072],[-0.075,-0.172],[-0.048,-0.118],[-0.074,-0.17],[-0.068,-0.006],[-0.06,0.011],[-0.151,0.101],[-0.124,0.121],[-0.22,0.294],[-0.17,0.074],[-0.22,0],[-0.224,-0.024],[-0.116,0],[-0.172,0],[0,0],[-0.025,-0.293],[-0.025,-0.118],[-0.273,-0.174],[-0.078,0.01],[-0.056,-0.011],[-0.418,0.419],[-0.123,0.102],[-0.141,0.099],[-0.097,0.147],[-0.248,0.317],[-0.177,0.168],[-0.171,0.072],[-0.269,0.068],[-0.193,0],[0,0],[-0.318,0.074],[-0.149,0.052],[-0.297,0.098],[-0.151,0.127],[-0.097,0.122],[-0.172,0.077],[-0.124,0.048],[-0.515,0.122],[-0.166,-0.016],[-0.141,0.009],[-0.169,0.051],[-0.149,0.095],[-0.39,0.243],[-0.17,0.026],[-0.292,0],[-0.445,-0.121],[-0.149,-0.096],[-0.197,-0.074],[-0.126,-0.026],[-0.392,0],[0,0],[-0.195,0.025],[0,0],[0.124,0.122],[0.074,0.173],[0.051,0.123],[0,0],[0.074,0.15],[0.07,0.172],[0.048,0.124],[0,0],[0.225,0.345],[0.073,0.146],[0.075,0.121],[0.072,0.124],[0.196,0],[0,0],[0.145,0.098],[0.074,0.099],[-0.149,0.103],[-0.121,0.074],[-0.196,0.046],[-0.149,0],[0,0],[-0.392,0],[0,0],[-0.323,0],[-0.273,0.103],[-0.222,0.244],[-0.126,0.146],[-0.077,0.151],[0,0.224],[0.096,0.171],[0.088,-0.004],[0.035,0.048],[0,0.145],[0,0],[-0.371,0],[-0.169,-0.442],[-0.019,-0.124],[-0.053,-0.147],[-0.22,-0.295],[0,0],[-0.172,-0.049],[-0.121,-0.095],[-0.024,-0.17],[0,-0.464],[0,0],[-0.243,-0.193],[-0.147,-0.124],[-0.297,-0.15],[-0.174,-0.075],[-0.245,0],[0,0],[-0.075,0.17],[0,0.147],[0,0.296],[-0.027,0.146],[0,0],[-0.267,0.021],[0.049,0.469],[0,0.148],[-0.024,0.125],[-0.048,0.121],[-0.122,0.094],[-0.342,-0.172],[-0.171,-0.024],[0,0],[-0.12,0.024],[-0.123,0.074],[-0.122,0.124],[-0.128,0.094],[-0.126,0.07],[-0.071,-0.013],[-0.062,0.024],[-0.151,0.098],[-0.073,0.125],[0,0.144],[0.272,0.147],[0.145,0.029],[0.111,-0.007],[0.132,0.105],[0.074,0.095],[0.096,0.147],[0.146,0.098],[0.345,0],[0,0],[0.271,0],[0.445,0.049],[0,0],[0.072,-0.006],[0.103,0.016],[0.146,0.077],[0.198,0.026],[0.173,0],[0.146,-0.026],[0.171,-0.066],[-0.174,-0.047],[-0.07,0.012],[-0.049,-0.023],[-0.122,-0.097],[0,-0.221],[0,0],[0.048,-0.117],[0.274,0],[0.249,0.345],[0,0.15],[0,0],[0.121,0.074],[0.17,0.046],[0.147,0.02],[0,0],[0.146,0],[0.319,0.097],[0.197,0.072],[0.121,0.046],[0.174,0.046],[0.244,0.126],[0.171,0.151],[0.122,0.173],[0.099,0.075],[0.126,0.049],[0.171,0.025],[0.344,0.026],[0.145,0],[0.339,0],[0.266,0.321],[0.441,0.294],[0.221,0.097],[0.299,0.027],[0.131,-0.006],[0.176,0.015],[0.147,0.048],[0.151,0.096],[0.198,0.073],[0.067,-0.006],[0.061,0.013],[0.148,0.025],[0,0],[0,0],[0.146,0.052],[0.174,0.045],[0.341,0.196],[0.148,0.098],[0.47,-0.024],[0,0],[0.148,-0.051],[0.223,-0.098],[0.22,0],[0.396,0.051],[0,0],[0.173,0.046],[0.196,0.052],[0.068,-0.005],[0.061,0.012],[0.294,0.172],[0.32,0.099],[0.122,0.025],[0.218,0],[0.195,-0.051],[0.123,-0.075],[0,-0.197],[0.047,-0.123],[0.076,-0.176],[0.07,-0.125],[0.146,-0.151],[-0.125,-0.048],[-0.149,-0.101],[-0.1,-0.121],[0,-0.297],[0.025,-0.12],[0.126,-0.149],[0.12,-0.097],[0.172,0],[0,0],[0,0],[0,0],[0,0],[0,0],[-0.415,0.148],[-0.267,0.173],[0,0],[0.126,0.023],[0.174,0],[0,0],[0.023,-0.32],[0.023,-0.124],[0.073,-0.126],[0.124,-0.049],[0.275,0],[0,0],[0.173,0.073],[0.296,0.05],[0.86,0],[0,0],[0.196,-0.023],[0.415,-0.073],[0.221,0],[0.222,0.025],[0.149,0.098],[0.199,0.123],[0.174,0],[0,0],[0,-0.223],[0,-0.144],[0,0],[0,0],[0,0],[0,0],[0.147,0.219],[0.148,0.099],[0.121,0.051],[0.145,0.046],[0.121,0.075],[0.1,0.169],[0,0.295],[-0.048,0.366],[0,0.147],[0.048,0.147],[0.097,0.147],[0.124,0.1],[0.101,0.077],[0.15,0.123],[0.097,0.049],[0.122,0.027],[0.065,-0.005],[0.062,0.014],[0.15,0.024],[0.175,0.023],[0.149,0],[0.296,0],[0.345,0],[0.123,-0.027],[0.15,-0.077],[0.125,-0.074],[0.17,-0.071],[0.175,-0.048],[0.174,0],[0,0],[0.15,0],[0.492,0],[0.368,-0.094],[0.176,-0.028],[0,0],[0.123,0.021],[0.143,0.05],[0.124,0.052],[0.173,0.125],[0.198,0.049],[0.146,0],[0,0],[0.194,0.024],[0.223,0.023],[0.198,0.049],[0.173,0.1],[0,0],[0.272,0.196],[0.147,0.121],[0.126,0.07],[0.296,0],[0,0],[0,0],[-0.148,0.094],[-0.294,0.147],[0,0],[0.063,-0.006],[0.062,0.014],[0.222,0],[0,0],[0.073,-0.271],[0.096,-0.144],[0.323,-0.121],[0.15,0],[0,0],[0.166,0.075],[-0.047,0.149],[-0.051,0.171],[-0.051,0.124],[-0.098,0.147],[-0.098,0.075],[-0.048,0.121],[0.294,0.024],[0.171,0.076],[0.171,0.026],[0.071,-0.009],[0.095,0.028],[0.319,0.052],[0.146,0],[0.193,0],[0.346,0],[0.271,0.077],[0.216,0.048],[0.073,-0.008],[0.094,0.026],[0.295,0.024],[0.213,-0.016],[0.229,0.023],[0.294,0.024],[0.153,0],[0.103,-0.146],[0.031,-0.121],[0,-0.344],[0,0],[0.321,-0.051],[-0.026,-0.147],[-0.099,-0.145],[-0.15,-0.073],[-0.124,-0.076],[-0.1,-0.074],[-0.097,-0.122],[-0.074,-0.148],[-0.026,-0.122],[0,-0.172],[0,-0.144],[0,0],[0.272,0.052],[0.124,0],[0.083,-0.006],[0.084,0.011],[0.119,0.025],[0.171,0.048],[0.175,0],[0.147,0],[0.391,0.025],[0,0],[0,0],[-0.124,-0.072],[0,-0.248],[0.096,-0.243],[0.291,0.194],[0.147,0.122],[0.167,0.126],[0.073,0.125],[0.101,0.149],[0.101,0.07],[0.124,0.023],[0.318,0],[0.149,-0.026],[0.12,-0.073],[0.049,-0.096],[0.122,-0.122],[0.49,0],[0.371,0.244],[0.32,0.046],[0.126,0.022],[0.175,0.048],[0.148,0],[0.122,-0.026],[0.201,0],[0.445,0],[0.099,-0.223],[-0.024,-0.343],[0.025,-0.463],[0.026,-0.296],[0,0],[0.294,0.344],[0.119,0.096],[0.199,0.1],[0.117,0.052],[0.144,0.073],[0.173,0.125],[0.15,0.121],[0,0.444],[0,0],[-0.05,0.121],[0,0.171],[0,0.197],[0,0.293],[0.026,0.346],[0,0.341],[0.072,0.273],[0.074,0.146],[0.121,0.098],[0.196,0.095],[0.174,0.026],[0.273,0],[0.148,-0.217],[0.098,-0.127],[0.075,-0.098],[0.244,0],[0.244,0.393],[0.074,0.146],[0.146,0.126],[0.17,0.023],[0.122,0],[0.118,-0.006],[0.216,0.106],[0.148,0.101],[0.417,0],[0.248,-0.099],[0.175,-0.074],[0.196,-0.097],[0.148,-0.076],[0.197,-0.146],[0,0],[-0.099,-0.15],[-0.027,-0.171],[0,-0.197],[0,-0.174],[0,0],[0.196,-0.073],[0.442,0],[0.391,0.173],[0.214,0.051],[0.323,0.123],[0.17,0.1],[0.249,0],[0.148,-0.05],[0.222,0],[0.121,0.192],[0,0.293],[0,0],[0.17,0.075],[0.171,0.026],[0.149,0],[0.147,0],[0.149,-0.073],[0.171,0],[0.273,0.026],[0,0],[0.17,0],[0,0],[0,0],[0.439,-0.075],[0.123,-0.024],[0.124,-0.07],[0.269,0],[0,0],[0.147,0],[0.175,0],[0,0.29],[0,0.147],[0,0.146],[0,0],[0.101,-0.075],[0.097,-0.122],[0.421,0],[0.194,0.068],[0.147,0.147],[0,0],[-0.298,0.024],[-0.121,0.049],[-0.15,0.097],[-0.121,0.073],[-0.126,0.049],[-0.123,0.069],[0,0.247],[0,0],[0.124,0.124],[0.221,0],[0.343,-0.124],[0.147,-0.104],[0.122,-0.097],[0.097,-0.147],[0.123,-0.124],[0.148,-0.122],[0.245,0],[0,0],[0,0],[-0.048,-0.124],[0,-0.245],[0,0],[0.121,-0.098],[0.149,-0.103],[0.243,0],[0,0],[0.146,0],[0.296,-0.028],[0.17,-0.074],[0.174,-0.025],[0.296,0],[0,0],[0.391,0],[0,0],[0.074,0],[-0.174,0.124],[-0.124,0.121],[-0.123,0.095],[-0.15,0.096],[-0.147,0.05],[-0.138,-0.016],[-0.125,0.024],[-0.122,0.05],[-0.128,0.097],[-0.125,0.096],[-0.198,0.295],[-0.245,0.195],[-0.297,0.026],[0,0],[-0.125,0],[-0.123,0.049],[-0.116,0.097],[-0.07,0.096],[-0.151,0.124],[-0.293,0.027],[0,0],[-0.149,0],[-0.173,0.024],[-0.122,0.024],[-0.147,0.124],[-0.046,0.173],[-0.024,0.121],[-0.046,0.271],[0,0],[-0.026,0.225],[-0.053,0.125],[-0.097,0.12],[-0.08,-0.025],[-0.039,0.049],[0,0.173],[0.023,0.126],[0.071,0.122],[0.08,-0.007],[0.038,0.061],[0.05,0.103],[0.072,0.122],[0.084,-0.024],[0.023,0.048],[0.047,0.124],[0.096,0.148],[0.201,0.099],[0.172,0.026],[0.079,-0.006],[0.088,0.014],[0.149,0],[-0.049,0.467],[0,0],[0.295,0.048],[0.347,0],[0.125,-0.024],[0.147,-0.075],[0.15,-0.096],[0.125,-0.051],[0.29,0.196],[0.121,0.026],[0.244,0],[0.222,-0.027],[0,0],[0,0],[0,0],[-0.123,0.073],[-0.075,0.099],[0,0.319],[0,0.173],[0,0],[0.318,0.022],[0.394,0],[0.148,0],[-0.099,0.121],[-0.321,0.174],[-0.075,-0.012],[-0.055,0.013],[-0.173,0.073],[0,0]],\"o\":[[-0.171,0],[-0.293,0.124],[-0.126,0.024],[-0.471,0.072],[-0.125,0.051],[-0.172,0.073],[-0.174,0.12],[0,0.121],[-0.027,0.122],[-0.074,0.172],[-0.223,0.218],[0.098,0.121],[0.121,0.122],[0,0],[0,0],[-0.054,0.322],[-0.122,0.095],[-0.163,-0.003],[-0.098,0.079],[-0.098,0.151],[-0.121,0.098],[-0.346,0.197],[-0.271,0],[-0.144,-0.029],[-0.144,-0.073],[-0.149,-0.099],[-0.125,-0.049],[-0.122,-0.023],[-0.391,0],[0,0],[-0.346,-0.023],[-0.196,0],[-0.054,0.01],[-0.126,-0.005],[-0.1,0.151],[-0.075,0.17],[-0.022,0.121],[-0.05,0.145],[-0.172,0.103],[0,0],[-0.418,0],[-0.171,0.074],[-0.294,0.124],[-0.121,0.051],[-0.221,0.097],[-0.146,0],[-0.15,-0.024],[-0.149,-0.046],[-0.32,0],[-0.172,0.048],[-0.294,0.15],[-0.175,0.094],[-0.123,0.024],[-0.17,0.05],[-0.393,0],[-0.32,0.073],[-0.146,0.1],[-0.073,0.174],[-0.068,0.121],[-0.059,0.028],[-0.061,-0.008],[-0.17,0.026],[-0.147,0],[-0.123,0.029],[-0.127,0.026],[-0.203,0.076],[0,0.345],[0.069,0.122],[0.269,0.15],[0.151,0.073],[0.051,0.098],[0,0],[-0.021,0.175],[-0.125,-0.024],[-0.466,-0.097],[-0.296,0],[-0.123,0.024],[-0.147,0.075],[-0.149,0.096],[-0.122,0.046],[-0.149,0],[-0.223,-0.051],[-0.419,0],[-0.296,0],[-0.12,0],[-0.147,0.024],[0,0],[-0.175,0],[-0.124,0.024],[-0.101,0.068],[-0.097,0.147],[0,0],[-0.344,0],[0.053,0.124],[0.097,0.177],[0.15,0.147],[0.126,0.15],[0.05,0.268],[0,0.148],[0.028,0.145],[0.05,0.123],[0.296,0.222],[0,0],[0.196,0],[0.147,0.024],[0.169,0.075],[0.147,0.149],[0.025,0.121],[0,0],[-0.075,0.396],[-0.244,0],[-0.147,-0.076],[-0.122,-0.071],[-0.064,-0.023],[-0.067,0.013],[-0.175,-0.047],[-0.125,-0.022],[-0.123,-0.052],[-0.099,-0.098],[-0.067,-0.121],[-0.071,-0.145],[0,0],[-0.344,0],[-0.096,-0.076],[-0.226,-0.173],[-0.145,0],[-0.173,0.045],[-0.124,0.025],[-0.442,0.148],[0,0],[0.148,0.027],[0.298,0],[0.124,0],[0.169,0.027],[0.099,0.151],[0,0.174],[-0.343,-0.021],[-0.122,-0.027],[-0.176,-0.074],[-0.193,-0.097],[0,0],[-0.119,0],[-0.122,0.069],[-0.05,0.102],[-0.101,0.197],[0,0.513],[0.133,0.012],[0.129,-0.006],[0.147,0],[0.465,0.099],[0.148,0.094],[0.125,0.074],[0.124,0.072],[0.097,0.125],[0,0.173],[-0.147,-0.223],[-0.136,-0.066],[-0.118,0],[-0.171,-0.046],[-0.062,-0.011],[-0.068,0.006],[-0.059,-0.011],[-0.069,0.006],[-0.175,-0.048],[-0.124,-0.024],[-0.218,-0.034],[-0.186,0.018],[-0.298,-0.048],[-0.171,-0.072],[-0.075,-0.172],[0,-0.149],[0,0],[0,-0.298],[0.025,-0.17],[0.026,-0.121],[0,-0.148],[-0.026,-0.125],[-0.075,-0.146],[-0.048,-0.119],[-0.122,-0.295],[-0.148,0.052],[-0.073,0.013],[-0.061,-0.006],[0,0.221],[0,0.146],[0.02,0.468],[0,0.149],[0,0],[-0.294,0],[-0.197,0],[-0.146,0],[0,0.243],[-0.03,0.128],[-0.123,0.075],[-0.123,0.069],[-0.346,0.15],[0,0],[0.123,0.515],[0.271,0.246],[0.049,0.125],[0.049,0.269],[0,0.148],[-0.022,0.148],[-0.126,0.244],[0,0],[0,0.173],[0.049,0.17],[0,0.123],[0,0.172],[0,0.145],[0.049,0.319],[0.099,0.125],[0,0],[0.096,-0.122],[0.121,-0.122],[0.147,-0.123],[0,0],[0.149,0],[0.149,0.072],[0.272,0.197],[0.124,0.048],[0.148,0.074],[0.217,0.245],[0.195,0.296],[0.124,0.097],[0.077,0.147],[0,0.32],[-0.074,0.147],[-0.074,0.146],[0,0.174],[0.064,0.011],[0.073,-0.01],[0,0],[0.148,0.073],[0.269,0.132],[0.127,-0.008],[0.149,0],[0,0],[-0.147,0.047],[-0.271,0.05],[0,0],[-0.171,-0.023],[-0.171,-0.075],[-0.123,-0.073],[-0.317,-0.194],[0,0],[0,-0.145],[0,-0.392],[-0.124,-0.121],[-0.047,-0.123],[-0.099,-0.151],[-0.095,-0.075],[-0.171,-0.049],[-0.269,-0.049],[-0.466,0],[-0.147,0],[-0.146,0.025],[-0.148,0.048],[-0.173,0.095],[0,0.147],[0,0.148],[0.096,0.371],[0,0.393],[-0.027,0.116],[-0.078,0.2],[-0.148,0.126],[-0.195,0.148],[-0.099,0.122],[-0.098,0.366],[-0.292,0],[-0.493,0.175],[-0.297,0.166],[-0.07,0.102],[-0.097,0.145],[-0.12,0.07],[-0.291,0],[-0.149,-0.024],[-0.121,-0.05],[-0.17,-0.075],[0,0],[0,0],[0.1,-0.146],[0.1,-0.151],[0.196,-0.073],[0.224,0],[0.144,0.025],[0.269,0.024],[0.296,0],[0.172,-0.026],[0.168,-0.072],[0.122,-0.101],[0.176,-0.267],[0.097,-0.123],[0.27,-0.218],[0.075,-0.096],[0.098,-0.124],[0.118,-0.091],[0.051,-0.097],[0.024,-0.122],[0.069,-0.299],[0.027,-0.122],[0.024,-0.122],[0.025,-0.147],[0,-0.195],[-0.296,0.024],[-0.194,0],[-0.122,-0.052],[-0.15,-0.099],[-0.125,-0.172],[0,-0.393],[0.051,-0.467],[0,0],[0.025,-0.295],[0.095,-0.445],[0,-0.147],[-0.07,-0.32],[-0.023,-0.121],[-0.099,-0.294],[-0.074,-0.174],[-0.073,-0.122],[0,0],[0.293,0],[0.147,0],[0.048,0],[0,0],[-0.393,0],[-0.197,-0.05],[-0.124,-0.023],[-0.271,-0.047],[0,0],[-0.22,0],[-0.393,0],[-0.173,0.074],[-0.144,0.051],[-0.125,0.027],[-0.294,0.027],[-0.148,0],[0,0.469],[0,0.196],[-0.075,0.322],[-0.098,0.151],[-0.249,0.295],[-0.096,0.265],[-0.047,0.174],[-0.129,0.046],[-0.159,0.045],[-0.104,-0.012],[0,0],[-0.169,0],[-0.197,0.122],[0,0],[0.026,0.173],[0.038,0.053],[0.073,-0.02],[0.295,0.224],[0.122,0.244],[0,0.295],[-0.102,0.099],[-0.121,0.097],[-0.171,0.148],[0,0.297],[0.294,0],[0.143,0],[0.146,0.099],[0.117,0.124],[0.049,0.121],[0.073,0.149],[0.073,0.127],[0.148,0.121],[0.101,0.05],[0.294,0.199],[0.1,0.124],[0.049,0.124],[0,0.151],[-0.051,0.199],[-0.071,0.097],[-0.125,0.074],[0,0],[-0.296,0],[-0.32,-0.073],[-0.467,-0.271],[-0.297,-0.022],[-0.466,0],[-0.147,-0.1],[-0.147,-0.098],[-0.163,-0.058],[-0.102,0.014],[-0.149,0],[-0.294,-0.024],[-0.199,-0.073],[-0.097,-0.15],[-0.126,-0.049],[-0.128,-0.048],[-0.194,-0.05],[-0.146,-0.072],[0,0],[-0.174,0],[-0.124,-0.097],[-0.126,-0.099],[0,0],[-0.37,0],[-0.27,-0.152],[-0.12,-0.072],[-0.123,-0.072],[-0.098,-0.047],[-0.147,-0.124],[-0.097,-0.074],[-0.072,-0.04],[-0.057,0.011],[-0.202,-0.049],[0,0],[-0.167,0],[-0.173,0.097],[0,0.22],[0.073,0.197],[0.125,0.145],[0.028,0.123],[0.028,0.171],[0.293,0],[0.148,0],[0.123,0],[0.147,0.045],[0.074,0.099],[0.074,0.17],[0.295,0.099],[0.148,0.075],[0.097,0.124],[0,0.148],[0,0.121],[-0.172,0.32],[-0.12,0.051],[0,0],[-0.121,0],[-0.122,0.074],[-0.071,0.122],[-0.07,0.148],[-0.072,0.124],[0,0],[0,-0.294],[0,-0.147],[0,-0.298],[0,-0.172],[0,0],[-0.121,0.051],[-0.148,0.099],[-0.099,0.121],[-0.097,0.122],[-0.198,0.197],[0,0],[-0.297,-0.027],[-0.08,0.011],[-0.093,-0.02],[-0.146,0.074],[-0.148,0.099],[-0.146,0.072],[0,0],[-0.15,0],[0,0],[0,0],[-0.149,0],[0,0],[0,0],[-0.124,-0.122],[-0.12,-0.121],[-0.104,-0.097],[0.049,-0.147],[0.025,-0.121],[0.095,-0.314],[0,0],[-0.122,0.073],[-0.121,0.097],[-0.122,0.075],[-0.124,0.027],[-0.118,0.018],[-0.184,-0.005],[-0.173,0.079],[-0.269,0.173],[0,0],[-0.469,0],[-0.147,0.048],[-0.098,0.075],[-0.122,0.075],[-0.117,0.026],[0,0],[-0.151,0],[-0.317,0.048],[-0.173,0.05],[-0.294,0.248],[-0.174,0.099],[-0.253,0.042],[-0.286,-0.016],[-0.202,0.074],[0.074,0.145],[0.124,0.196],[0,0.247],[-0.224,0.217],[-0.17,0.078],[-0.121,0.051],[-0.122,0.028],[-0.198,0],[-0.243,0.028],[0,0],[-0.198,0],[-0.146,-0.096],[-0.128,-0.147],[-0.046,-0.096],[-0.123,-0.22],[0,-0.367],[0,0],[0,0],[-0.148,-0.149],[-0.099,-0.049],[-0.12,-0.097],[-0.122,-0.145],[-0.124,-0.171],[-0.293,0],[0,0],[-0.224,-0.026],[-0.125,-0.027],[-0.317,-0.073],[0,0],[-0.144,0],[-0.121,0],[0,0],[0.294,0.051],[0.125,0],[0,0],[0,0.172],[-0.1,0.144],[0,0.147],[0,0.149],[0.072,0.096],[0.123,0.073],[0.148,0.074],[0.147,0.172],[0,0],[-0.022,0.172],[0,0.124],[-0.048,0.467],[0,0.075],[-0.322,-0.024],[-0.122,0],[-0.147,-0.121],[-0.073,-0.103],[-0.098,-0.15],[-0.151,-0.07],[-0.173,0],[-0.174,0.029],[-0.123,0.024],[-0.344,0.024],[-0.148,0],[0,0.145],[-0.05,0.121],[-0.1,0.125],[-0.123,0.048],[-0.267,0.073],[-0.171,0.021],[-0.169,0.072],[-0.097,0.117],[-0.124,0.1],[-0.191,0.096],[0.001,0.003],[0.072,0.295],[0.024,0.151],[0.076,0.126],[0.102,0.095],[0.119,0.077],[0.17,0.12],[0,0.222],[-0.049,-0.024],[-0.293,-0.071],[-0.296,0],[-0.293,-0.024],[0,0],[-0.15,0],[-0.346,-0.026],[-0.169,-0.047],[-0.122,-0.029],[-0.061,-0.011],[-0.069,0.006],[-0.172,-0.024],[-0.177,-0.126],[0,0],[-0.126,0.072],[-0.15,0.099],[-0.044,0.021],[-0.076,-0.017],[-0.197,0.098],[0,0.248],[0.099,0.123],[0.102,0.074],[0.07,0.1],[0.047,0.149],[0,0],[0.344,-0.026],[0.322,0.072],[0.146,0.12],[0,0.197],[0,0],[-0.097,0.122],[-0.125,0.021],[-0.151,0],[-0.121,-0.073],[-0.122,-0.148],[-0.372,-0.296],[-0.061,-0.01],[-0.069,0.006],[-0.318,-0.121],[-0.071,-0.123],[-0.024,-0.121],[-0.024,-0.468],[0,0],[0,0],[0,-0.62],[-0.05,-0.297],[-0.194,-0.179],[-0.163,0.006],[-0.15,-0.026],[-0.144,-0.145],[-0.126,-0.272],[-0.162,-0.116],[-0.12,0.011],[-0.198,-0.047],[-0.272,-0.146],[0,0],[0.126,0.025],[0.122,0.048],[0.121,0.073],[0.245,0.176],[0.295,0.151],[0.147,0.051],[0.269,0.05],[0.206,-0.021],[0.123,0],[0.174,0.074],[0.273,0.176],[0,0],[0.174,0],[0.126,0.051],[0.151,0.073],[0.123,0.053],[0.123,0.019],[0.149,0],[0.293,0.025],[0,0],[0,0],[0.149,-0.026],[0.059,-0.012],[0.068,0.006],[0.125,-0.024],[0.318,-0.098],[0.122,-0.021],[0.297,-0.021],[0.174,-0.05],[0.147,-0.072],[0.125,-0.103],[0.075,-0.148],[0.099,-0.269],[0,-0.467],[0,-0.146],[-0.075,-0.318],[-0.097,-0.148],[-0.144,-0.15],[-0.123,-0.05],[-0.17,-0.046],[-0.292,-0.031],[-0.291,0],[-0.315,-0.079],[-0.128,-0.073],[-0.124,-0.098],[-0.12,-0.097],[-0.146,-0.099],[-0.062,-0.027],[-0.067,0.012],[0,0],[-0.146,-0.073],[-0.126,-0.072],[0,0],[-0.17,-0.074],[-0.122,-0.052],[-0.344,-0.076],[-0.37,0],[-0.223,0.021],[0,0],[-0.198,-0.026],[-0.171,-0.07],[-0.296,-0.22],[0,0],[0,0.222],[-0.074,0.148],[-0.124,0.024],[0,0],[-0.198,-0.023],[0.072,-0.147],[0.075,-0.219],[0,-0.073],[-0.073,-0.126],[-0.124,-0.099],[-0.049,-0.097],[-0.049,-0.173],[0,0],[-0.175,0],[-0.173,0.123],[-0.248,0],[-0.121,-0.076],[-0.099,-0.073],[-0.293,0],[-0.341,-0.029],[-0.128,-0.024],[0,0],[0.145,0],[0.148,0],[0.196,0],[0,0],[-0.1,-0.147],[-0.123,-0.098],[-0.123,-0.025],[-0.323,-0.052],[-0.293,0],[-0.171,-0.05],[-0.124,-0.099],[-0.098,-0.047],[0,0],[0,0],[-0.418,0.051],[0,0],[0,-0.173],[0.127,-0.174],[0.052,-0.098],[0,0],[0.024,0.492],[-0.027,0.147],[0,0],[0,0.17],[0,0],[0.03,-0.147],[0.028,-0.219],[0,-0.244],[-0.099,-0.126],[0,0],[0,0],[0,0],[-0.319,0.221],[-0.148,0.049],[-0.148,0],[-0.122,0],[-0.148,0.075],[0,0.344],[-0.147,0.172],[0,0],[-0.194,-0.021],[-0.171,-0.052],[0.067,-0.124],[0.124,-0.148],[0,0],[-0.493,0],[-0.171,0.05],[-0.194,0.099],[-0.023,0.12],[0,0.172],[0.073,0.196],[0.273,0.098],[0.274,0.023],[0,0],[0,0],[-0.2,0],[-0.345,-0.049],[-0.297,0],[-0.144,-0.022],[0,0],[0,0.418],[0,0.148],[-0.048,0.148],[-0.075,0.149],[0,-0.295],[-0.025,-0.122],[-0.098,-0.126],[-0.062,-0.024],[-0.067,0.013],[-0.174,-0.072],[-0.146,-0.074],[-0.049,-0.024],[-0.07,0.012],[-0.344,-0.171],[-0.269,0],[0,0],[0,0.172],[0,0.199],[0,0.322],[0,0.145],[-0.03,0.169],[-0.172,0.174],[-0.221,0],[-0.078,-0.101],[-0.051,-0.145],[-0.028,-0.122],[-0.126,0.125],[-0.121,0.149],[-0.055,0.027],[-0.063,-0.008],[-0.268,0.072],[0,0],[0.1,0.101],[0.058,0.021],[0.072,-0.017],[0.125,0.075],[0.075,0.1],[0,0],[0,0.176],[-0.124,-0.05],[-0.175,-0.097],[-0.184,-0.041],[-0.119,0.011],[-0.199,0],[0.1,-0.441],[0,-0.171],[-0.22,0.077],[0,0],[-0.176,0.024],[-0.244,0],[-0.412,0],[0.068,0.124],[0.072,0.147],[0,0.173],[-0.395,0],[-0.145,0],[-0.126,0],[-0.175,0.076],[-0.098,0.074],[-0.098,0.074],[-0.171,0.121],[-0.076,0.101],[-0.051,0.038],[-0.07,-0.015],[-0.197,0.124],[0,0],[0.173,0],[0.148,-0.123],[0.126,-0.077],[0.121,-0.031],[0.149,0],[0.147,0],[0.174,-0.052],[0.122,-0.075],[0.063,-0.027],[0.061,0.009],[0.06,-0.01],[0.07,0.006],[0.172,-0.05],[0.344,-0.147],[0.392,0],[0.172,0.049],[0,0],[-0.295,0],[-0.124,0],[-0.121,0.052],[-0.121,0.052],[-0.06,0.012],[-0.071,-0.036],[-0.173,0.071],[-0.067,0.094],[-0.074,0.122],[-0.072,0.124],[-0.075,0.126],[-0.027,0.123],[-0.026,0.295],[-0.418,0],[-0.175,0.27],[-0.099,0.123],[-0.12,0.098],[-0.12,0.098],[-0.12,0.098],[-0.125,0.127],[-0.068,0.122],[-0.025,0.122],[-0.05,0.193],[-0.146,0.149],[-0.049,0.267],[-0.022,0.149],[-0.027,0.123],[0,0],[-0.152,0.075],[-0.294,0.124],[-0.147,0.101],[-0.146,0.094],[-0.071,0.043],[-0.058,-0.012],[-0.121,0.025],[-0.176,0.046],[0,0],[0.146,0],[0.146,0],[0,0],[-0.027,0.197],[-0.025,0.124],[-0.076,0.123],[-0.122,0.071],[-0.172,0.075],[-0.125,0.049],[-0.172,0.1],[-0.149,0.101],[-0.122,0.049],[-0.148,0.094],[-0.098,0.122],[-0.072,0.124],[-0.121,0.222],[-0.417,0],[0,0],[0,0],[0.123,0.297],[-0.444,0.096],[-0.063,0.014],[-0.067,-0.006],[-0.324,0.077],[-0.172,0.075],[-0.147,0.07],[-0.054,0.012],[-0.075,-0.012],[-0.153,0.073],[-0.075,0.096],[-0.025,0.126],[-0.051,0.197],[-0.147,0.073],[-0.12,0],[-0.12,0.024],[-0.171,0.024],[-0.148,0.123],[0,0.147],[0,0.176],[0,0.174],[-0.039,0.065],[-0.079,-0.002],[-0.073,0.124],[0,0.15],[0.026,0.244],[0,0.267],[-0.038,0.05],[-0.076,-0.021],[-0.123,0.095],[0,0],[0,0],[0.175,0],[0.145,0.045],[0.144,0.053],[-0.121,0.124],[-0.097,0.126],[-0.049,0.128],[-0.049,0.12],[-0.049,0.173],[-0.051,0.122],[0,0.196],[0.616,0],[-0.026,0.369],[-0.072,0.173],[-0.071,0.144],[0,0.17],[0,0.122],[0.298,0],[0.067,0.007],[0.095,-0.016],[0.178,0.07],[0.169,0.121],[0,0],[0.147,0.023],[0.221,0.053],[0.392,0],[0.148,-0.075],[0.069,-0.028],[0.06,0.008],[0.122,-0.025],[0.171,-0.076],[0.126,-0.074],[0.12,-0.171],[0.245,-0.298],[0.123,-0.127],[0.124,-0.027],[0.126,-0.027],[0.174,0],[0,0],[0.067,0.012],[0.072,-0.01],[0.148,0.075],[0.095,0.1],[0.045,0.121],[0.072,0.167],[0.095,0.32],[0.023,0.121],[0.052,0.169],[0.145,0.194],[0,0],[0,0.222],[0,0.148],[0.048,0.317],[0.123,0.075],[0.151,0.097],[0.096,0.145],[0,0],[0,0],[0.048,0.295],[0.068,0.151],[0.149,0.148],[0.1,0.119],[0.025,0.121],[0,0.147],[-0.05,0.224],[0,0],[0,0.173],[0.023,0.124],[0,0],[0.022,-0.225],[0.025,-0.122],[0.025,-0.173],[0.095,-0.172],[0.126,-0.024],[0,0],[0.121,0],[0.147,0.027],[0.169,0],[0.169,-0.071],[0.296,-0.146],[0,0],[0,0],[0,-0.146],[0,-0.22],[0,0],[-0.17,0],[-0.055,-0.009],[-0.076,0.011],[-0.121,-0.049],[-0.075,-0.096],[0.172,-0.272],[0.076,-0.146],[0.1,-0.268],[0.021,-0.293],[0,-0.148],[0.051,-0.15],[0.07,-0.144],[0.148,-0.124],[0.125,-0.05],[0.172,-0.076],[0.121,-0.023],[0.057,-0.022],[0.076,0.017],[0.125,-0.095],[0.05,-0.124],[0.072,-0.172],[0.097,-0.148],[0.1,-0.121],[0.027,-0.124],[0,0],[0,-0.201],[-0.294,0],[-0.296,-0.025],[-0.145,0],[0,-0.49],[-0.051,-0.193],[-0.062,-0.026],[-0.071,0.012],[-0.146,-0.099],[-0.098,-0.078],[0,0],[0.146,-0.099],[0.1,-0.12],[0.126,-0.147],[0.072,-0.148],[0.074,-0.267],[0.07,-0.149],[0.125,-0.094],[0.068,-0.027],[0.062,0.008],[0.316,-0.073],[0.144,-0.096],[0.097,-0.124],[0.097,-0.101],[0.155,-0.096],[0.099,0.002],[0.073,-0.011],[0.093,0.016],[0.171,-0.074],[0.122,-0.098],[0.076,-0.125],[0.096,-0.149],[0.104,-0.073],[0.12,-0.02],[0.122,0],[0.119,-0.02],[0.197,-0.101],[0,-0.25],[-0.099,-0.15],[-0.053,-0.122],[0,-0.468],[0.099,-0.145],[0.054,-0.042],[0.065,0.014],[0.171,-0.079],[0.175,-0.13],[0.126,-0.267],[0.05,-0.129],[0.198,-0.173],[0.291,0],[0.059,0.012],[0.066,-0.007],[0.171,0.048],[0.272,0.245],[0.121,-0.047],[0.149,-0.099],[0.124,-0.025],[0.195,0],[0.147,0.1],[0.072,0.124],[0.076,0.121],[0,0],[0,0],[0,0.466],[0,0.142],[-0.052,0.317],[-0.097,0.151],[-0.196,0.146],[-0.418,0],[-0.17,0],[-0.146,0.048],[-0.12,0.1],[-0.104,0.145],[-0.078,0.12],[-0.075,0.123],[-0.149,0.12],[-0.097,0.123],[-0.12,0.125],[-0.292,0.193],[0,0.537],[0,0.247],[-0.097,0.22],[0,0.538],[0,0],[0,0.147],[0.023,0.341],[0.395,0.048],[0.294,0.046],[0.149,0.072],[0.125,0.124],[0.274,0.149],[0.171,0.074],[0.343,0.196],[0,0],[0.173,0],[0.519,-0.224],[0.389,0],[0.225,0],[0.124,0],[0.144,-0.05],[0.096,-0.071],[0.1,-0.123],[0,0],[0.2,0],[0.196,-0.073],[0.075,0],[0.149,0.072],[0.069,0.098],[0.072,0.124],[0,0],[0,0],[-0.148,0.148],[-0.268,0.049],[-0.393,0],[-0.123,0],[-0.172,0.052],[-0.147,0.072],[-0.147,0.122],[-0.098,0.147],[-0.078,0.123],[-0.123,0.145],[-0.126,0.075],[-0.293,0],[-0.197,-0.075],[-0.196,-0.147],[-0.396,0],[-0.271,0.026],[-0.293,-0.025],[-0.149,0],[-0.15,0.048],[-0.176,0.047],[-0.149,0],[-0.169,0],[-0.175,0],[-0.15,0.075],[-0.076,0.102],[-0.103,0.175],[-0.074,0.099],[-0.15,0],[-0.146,0],[-0.171,-0.074],[-0.095,-0.073],[-0.095,-0.048],[-0.145,0],[-0.145,0.051],[-0.122,0.076],[0.171,0.077],[0.062,0.012],[0.067,-0.006],[0.17,0.047],[-0.297,0],[-0.494,0.072],[-0.149,0.046],[0.048,0.12],[0.197,0.271],[0.121,0.022],[0.126,0],[0.224,0.02],[0.22,0],[0.367,-0.1],[0.145,-0.176],[0.245,0],[0.149,0.07],[0.149,0.097],[0.049,0.099],[0.049,0.12],[0.077,0.118],[0.125,0.072],[0.17,0.073],[-0.098,0.124],[-0.319,0.32],[-0.121,0.075],[-0.025,0.121],[-0.049,0.244],[0,0],[-0.198,0],[-0.121,-0.048],[-0.123,-0.099],[-0.051,-0.122],[-0.072,-0.146],[-0.037,-0.049],[-0.082,0.023],[-0.051,-0.099],[-0.025,-0.122],[0,0],[-0.218,0.297],[-0.15,0.094],[-0.124,0.097],[-0.075,0.125],[-0.024,0.12],[-0.024,0.149],[-0.047,0.17],[-0.053,0.125],[-0.077,0.219],[0,0.223],[0.025,0.124],[0.022,0.145],[0,0.193],[-0.099,0.196],[-0.075,0.174],[0,0],[0,0],[-0.148,0],[-0.421,-0.07],[-0.291,-0.025],[-0.293,0],[-0.197,0],[-0.069,0.147],[0,0.172],[0.148,0.323],[0,0],[0,0],[-0.541,-0.317],[-0.147,-0.1],[-0.172,-0.17],[-0.122,-0.027],[-0.175,0],[-0.37,0.097],[-0.148,0.071],[-0.127,0.049],[-0.148,0.075],[-0.148,0.098],[-0.147,0.1],[-0.395,0.196],[-0.295,0],[-0.198,0.048],[-0.221,0.073],[-0.445,0],[-0.368,-0.37],[0,0],[-0.12,0.075],[-0.099,0.05],[-0.149,0],[-0.199,0],[0,0],[-0.316,0],[0.023,0.464],[0,0],[-0.244,0],[-0.142,-0.097],[-0.125,-0.32],[0,0],[0,0],[0,0],[0,-0.149],[0,-0.17],[0,0],[0.32,0],[0.173,0.05],[0.219,0.097],[0.296,0],[0.051,-0.296],[0.023,-0.393],[0,-0.251],[0.095,-0.219],[0,-0.296],[0,0],[-0.173,0],[-0.118,0.01],[-0.154,-0.021],[-0.148,0.052],[-0.149,0.074],[-0.121,0.146],[0,0],[-0.176,0.025],[0.023,-0.294],[0.074,-0.17],[0.045,-0.123],[0,0],[-0.289,0.021],[-0.146,0],[0.025,-0.2],[0.149,-0.293],[0.023,-0.122],[0,-0.151],[-0.05,-0.173],[-0.075,-0.148],[-0.121,-0.149],[-0.15,0],[-0.224,0],[-0.122,0.245],[-0.169,0.32],[-0.072,0.027],[-0.058,-0.008],[-0.174,0.027],[-0.194,0.052],[0,0.247],[0,0],[-0.023,0.124],[-0.099,0.073],[-0.126,0.048],[-0.397,0.145],[0,0.393],[0.094,0.145],[0.097,0.075],[0.147,0.069],[-0.024,0.119],[-0.025,0.147],[0,0.172],[0,0],[0,0.246],[0,0.1],[0,0.149],[0.05,0.172],[0.125,0.294],[0,0],[0,0],[-0.194,0],[-0.397,0.049],[0,0],[-0.267,0],[-0.393,-0.024],[-0.296,0],[-0.147,0.072],[-0.12,0.073],[-0.298,0.124],[-0.097,0.073],[-0.076,0.12],[-0.221,0.294],[-0.198,0],[0,0],[0,0],[-0.147,0],[-0.147,0],[0,0],[0,0],[0,0],[-0.221,0],[-0.148,0.026],[-0.123,0.05],[-0.172,0.073],[-0.321,0.196],[-0.147,0.118],[-0.147,0.072],[0,0],[-0.491,0.052],[0,0],[-0.565,0],[-0.12,0],[-0.124,0.021],[0,0],[0,0],[-0.171,0],[-0.128,-0.012],[-0.144,0.015],[-0.173,-0.03],[-0.095,-0.048],[-0.145,-0.194],[-0.223,0],[0,0],[0.295,0.122],[0,0],[0,0],[0,0],[-0.496,0.027],[-0.171,0],[-0.127,0],[-0.15,0],[-0.198,0],[-0.174,-0.047],[-0.124,-0.072],[-0.296,0.121],[-0.061,0.013],[-0.068,-0.006],[-0.295,0.048],[-0.149,0.102],[-0.077,0.125],[0,0.172],[0.038,0.055],[0.068,-0.017],[0.144,0.098],[0.125,0.077],[0.146,0.072],[0.189,0.045],[0.115,-0.011],[0,0],[0.168,0.026],[0.149,0.074],[0.126,0.076],[0.146,0.098],[0.268,0.272],[0,0],[0.129,0.125],[0.121,0.076],[0.296,0.172],[0.174,0.121],[0,0.222],[-0.049,0.247],[0,0.542],[0.023,0.22],[0,0.223],[-0.223,0.467],[-0.094,0.101],[-0.098,0.099],[-0.397,0.296],[0,0],[-0.198,0],[-0.244,-0.074],[-0.124,-0.026],[-0.392,0],[-0.198,-0.02],[-0.171,-0.098],[-0.149,-0.068],[0,0],[-0.394,0],[-0.196,0],[-0.243,-0.028],[0,0],[-0.147,0.025],[-0.074,0.095],[-0.051,0.15],[0,0],[0,0],[0.098,0.123],[0.127,0.127],[0.122,0.172],[0,0.224],[-0.101,0.368],[0,0.271],[0.05,0.15],[0.075,0.171],[0,0],[0,0.172],[-0.099,0.144],[-0.073,0.122],[-0.269,0.389],[0,0.148],[0.049,0.173],[0,0],[0.101,0.168],[0,0],[0,0],[-0.023,0.175],[-0.068,0.221],[0,0.371],[0,0],[0.347,0],[0.172,0],[0.171,0.073],[0.172,0.099],[0.394,0],[0.194,0],[0.146,0.049],[0.123,0.052],[0,0],[0.146,0.075],[0.101,0.148],[0.071,0.123],[0.07,0.145],[0,0],[0,0],[0.143,-0.05],[0.147,-0.013],[0.121,0.006],[0.296,-0.026],[0.174,-0.05],[0.317,-0.198],[0.149,-0.12],[0.272,-0.146],[0.133,-0.011],[0.126,0.006],[0.175,0],[0.171,-0.051],[0.296,-0.22],[0.346,-0.419],[0.271,-0.096],[0.268,-0.026],[0.179,0.009],[0.295,0],[0,0],[0,-0.172],[-0.123,-0.171],[-0.149,-0.147],[0,-0.221],[0.075,-0.174],[0.171,-0.35],[0,0],[0.075,-0.146],[0.077,-0.124],[0.069,-0.042],[0.055,0.01],[0.27,-0.052],[0.176,-0.051],[0.122,-0.099],[0.122,-0.052],[0.062,-0.025],[0.068,0.012],[0.172,-0.049],[0.067,-0.026],[0.06,0.008],[0.147,-0.048],[0.258,-0.044],[0.152,0.011],[0.296,-0.025],[0,0],[0,0],[-0.025,-0.293],[0,-0.175],[0,-0.294],[0.048,-0.15],[0.2,-0.222],[0.195,-0.048],[0.393,0],[0.062,0.013],[0.067,-0.005],[0.492,0.124],[0.369,0.1],[0,0],[0.147,0],[0.147,0],[0,-0.273],[0.025,-0.12],[0.122,-0.148],[0.121,-0.095],[0.122,-0.052],[0,0],[0.293,0],[0.174,-0.029],[0.175,-0.077],[0.147,-0.099],[0.147,-0.121],[0.147,0],[0.348,0.026],[0.297,0.197],[0.298,0.395],[0.047,0.124],[0.071,0.174],[0.097,0.149],[0.122,0.076],[0,0],[0.146,0.073],[0.174,0.097],[0.052,0.099],[0.12,0.175],[0.149,0.122],[0.126,0.098],[0.174,0.124],[0.119,0.078],[0.173,0.12],[0.144,0.099],[0.295,0.099],[0.077,0.01],[0.09,-0.01],[0.144,0.047],[0.122,0.097],[0.343,0.444],[0.124,0.076],[0.143,0.051],[0.144,0.077],[0.248,0.226],[0.196,0.292],[0.072,0.149],[0.053,0.124],[0.047,0.297],[0,0.297],[-0.788,0],[-0.149,0.073],[-0.127,0.051],[-0.271,0.049],[-0.198,0],[-1.056,0],[0,0],[0.29,0.148],[0.15,0.097],[0.099,0.124],[0.077,0.121],[0.122,0.125],[0.068,0.027],[0.06,-0.008],[0.295,0.048],[0,0],[0,0],[0.146,-0.023],[0.295,-0.124],[0.171,-0.127],[0.057,-0.034],[0.077,0.023],[0.077,-0.1],[0.099,-0.272],[0.025,-0.123],[0.123,-0.148],[0.071,-0.027],[0.059,0.008],[0.27,-0.074],[0,-0.147],[0,-0.147],[0,0],[-0.196,0],[0,0],[-0.148,0],[0,0],[0.027,-0.224],[0,0],[0.343,0],[0.148,0.051],[0.172,0.097],[0.171,0],[-0.224,-0.442],[-0.024,-0.272],[-0.219,-0.025],[-0.062,-0.01],[-0.069,0.007],[-0.173,-0.023],[-0.169,-0.074],[-0.146,-0.124],[-0.126,-0.075],[-0.171,-0.098],[-0.058,-0.022],[-0.076,0.017],[-0.145,-0.123],[-0.099,-0.094],[-0.057,-0.027],[-0.062,0.008],[-0.063,-0.014],[-0.065,0.006],[-0.147,-0.027],[-0.125,-0.049],[-0.124,-0.076],[-0.145,-0.096],[-0.068,-0.027],[-0.06,0.009],[-0.149,-0.019],[-0.067,-0.015],[-0.063,0.005],[0.022,-0.124],[0.048,-0.172],[0,-0.15],[-0.023,-0.221],[-0.147,-0.1],[-0.441,-0.146],[-0.125,-0.072],[-0.048,-0.035],[-0.081,0.022],[-0.072,-0.098],[-0.076,-0.32],[-0.345,-0.022],[-0.342,0],[0,0],[0,0],[0.123,-0.122],[0,0],[0,-0.145],[-0.073,-0.194],[0,-0.248],[0.147,-0.121],[0.217,0],[0.146,0.098],[0.101,0.147],[0.073,0.12],[0.051,0.04],[0.067,-0.015],[0.121,0.051],[0.172,0.074],[0.148,0.095],[0.122,0.074],[0.068,0.028],[0.059,-0.008],[0.172,0.048],[0.17,0.122],[0.094,0.322],[0.053,0.042],[0.065,-0.014],[0.343,0.172],[0.121,0.072],[0.151,0.094],[0.267,0.222],[0.093,0.008],[0.189,-0.009],[0.096,0.073],[0.127,0.149],[0.125,0.103],[0.298,0.176],[0.518,0.268],[0.268,0.101],[0.144,0.073],[0.07,0.098],[0.073,0.173],[0,0.171],[-0.049,0.171],[-0.049,0.122],[-0.049,0.196],[0,0.225],[0.174,0.295],[0,0.297],[0.075,0.317],[0.095,0.127],[0.074,0.047],[0.056,-0.011],[0.121,0.027],[0.296,0.027],[0,0],[0,0],[-0.048,-0.124],[-0.124,-0.027],[-0.174,0],[0.047,0.125],[0.076,0.168],[0.197,0.32],[0.124,0.1],[0.175,0.118],[0.123,-0.145],[0.048,-0.097],[0.098,-0.147],[0.022,0.123],[0.047,0.124],[0.194,0.269],[0.146,0.3],[0,0.146],[0.052,0.223],[0,0],[0.149,0],[0.119,-0.023],[0.119,-0.072],[0.126,-0.149],[0.048,-0.123],[0,0],[0,-0.173],[0,-0.195],[0.119,-0.099],[0.149,0],[0.195,0.049],[0.145,0.024],[0,0],[0.196,0],[0,-0.342],[0,-0.149],[0,-0.076],[0.322,0],[0.151,0],[-0.098,-0.175],[-0.126,-0.15],[-0.152,-0.124],[-0.172,-0.074],[0.049,0.294],[0,0.146],[-0.196,0],[-0.121,-0.048],[-0.194,-0.074],[-0.098,-0.146],[-0.028,-0.118],[-0.028,-0.125],[-0.029,-0.124],[-0.072,-0.148],[-0.099,-0.071],[-0.067,-0.026],[-0.061,0.008],[-0.194,-0.048],[-0.126,-0.148],[-0.026,-0.127],[0,0],[0.026,-0.172],[0,0],[0.145,0.076],[0.147,0.077],[0.268,0.049],[0,0],[0,0],[0.169,-0.025],[-0.147,-0.124],[-0.099,-0.046],[0.099,-0.148],[0.121,-0.147],[0.323,-0.069],[0.342,0],[0.123,0],[0.148,0.027],[0.175,0.073],[0.053,0.011],[0.076,-0.009],[0.126,0.047],[0.101,0.094],[0.049,0.123],[0.068,0.1],[0.15,0.094],[0,0],[-0.122,0.054],[-0.176,0.098],[0,0.417],[0.245,0.223],[0.344,0.245],[0,0.075],[0,0.146],[0,0.147],[0,0],[0,0.174],[0.075,0.173],[0.053,0.086],[0.061,0.072],[0.063,0.048],[0.073,0.062],[0.086,0.073],[0.077,0.051],[0.085,0.099],[0,0.138],[-0.039,0.099],[-0.037,0.063],[-0.041,0.091],[-0.012,0.145],[0,0.219],[0.012,0.075],[0.036,0.083],[0.085,0.035],[0.23,0],[0.012,-0.058],[0.027,-0.108],[0.015,-0.062],[0.016,-0.23],[0,-0.071],[0,-0.234],[0,0],[0.061,0.028],[0.077,0.051],[0.072,0.052],[0.059,0.06],[0.17,0.148],[0.076,0.075],[0.07,0.082],[0.048,0.065],[0.072,0.038],[0.059,0.014],[0.149,0.014],[0.147,0],[0.09,0.026],[0.147,0.05],[0.085,0],[0.073,-0.013],[0.072,-0.046],[0.029,-0.059],[0,-0.084],[0,-0.223],[0,-0.111],[0.036,-0.101],[0.038,-0.065],[0.073,-0.037],[0.17,-0.088],[0.22,0],[0.078,0.049],[0.132,0.138],[0.07,0.057],[0.146,0.124],[0.11,0.075],[0.063,0.048],[0.077,0.049],[0.062,0.027],[0.095,0.041],[0,0],[-0.014,-0.268],[0,0],[0,-0.112],[0,-0.184],[0.124,0.028],[0.072,0],[0.075,0],[0.107,-0.011],[0.272,0],[0.161,0.09],[0.076,0.034],[0.138,0.048],[0.081,0],[0.077,-0.024],[0.062,-0.039],[0.048,-0.061],[0.062,0.035],[0.069,0.119],[0.038,0.063],[0.026,0.058],[0.034,0.133],[0,0.242],[-0.024,0.096],[-0.098,0.196],[-0.011,0.304],[0,0.133],[0.016,0.122],[0.025,0.072],[0.014,0.06],[0.049,0.123],[0.036,0.097],[0,0.141],[-0.034,0.097],[-0.062,0.059],[-0.036,0.072],[-0.05,0.157],[-0.041,0.072],[-0.037,0.071],[-0.123,0.181],[-0.046,0.147],[-0.084,0.174],[-0.098,0.049],[-0.072,0.048],[-0.075,0.065],[-0.025,0.06],[-0.038,0.133],[-0.037,0.382],[-0.075,0.21],[-0.071,0.207],[-0.063,0.058],[-0.075,0.061],[-0.073,0.038],[0,0],[-0.076,0.006],[-0.077,-0.005],[-0.146,0.026],[-0.062,0.011],[-0.043,0.009],[-0.038,-0.002],[-0.062,0],[-0.074,0.014],[-0.102,0.049],[-0.135,0],[-0.088,-0.025],[-0.161,-0.134],[0,0],[-0.112,-0.011],[-0.134,0],[-0.111,-0.012],[-0.201,-0.012],[-0.086,-0.015],[0,0],[-0.088,0],[-0.11,0.009],[0.173,0.084],[0.236,0.096],[0.233,0.062],[0.147,0.013],[0,0],[0,0],[0,0.171],[0.053,0.063],[0.052,0.11],[0,0.088],[0,0.076],[0,0.097],[-0.007,0.31],[0.026,0],[0.248,0.249],[0.073,0.124],[0,0],[0.071,0.17],[0.098,0.145],[0.122,0.144],[0.146,0.048],[0,0],[0.174,0],[0.167,-0.073],[0.077,-0.102],[0.077,-0.168],[0,0],[0.267,0.467],[0.072,0.12],[0.096,0.125],[0.123,0.102],[0.143,0.102],[0.146,0.291],[0.026,0.123],[0.048,0.174],[0.219,0.368],[0.122,0.147],[0.102,0.247],[0,0],[0,0.148],[-0.022,0.49],[0.123,0.195],[0.15,0.049],[0.126,0.047],[0.149,0.074],[0.098,0.126],[0.072,0.126],[0.248,0.395],[0.177,0.296],[0,0],[0.194,0.421],[0,0.171],[-0.026,0.173],[-0.022,0.12],[0,0.297],[0.097,0.144],[0.127,0.101],[0.172,0.097],[0.293,0.243],[0.12,0.123],[0.101,0.122],[0.122,0.172],[0.224,0.297],[0.1,0.196],[0.149,0.174],[0.32,0.42],[0.368,0.492],[0.071,0.121],[0.072,0.171],[0.05,0.148],[0.026,0.292],[0,0.149],[0.026,0.149],[0.148,0.32],[0,0],[0,0.542],[0.294,0.243],[0.298,0.031],[0.468,0],[0.197,-0.076],[0.172,-0.269],[0.223,-0.225],[0.142,-0.051],[0,0],[0.201,0],[0.062,0.013],[0.067,-0.007],[0,0],[0.068,-0.173],[0.122,-0.15],[0.17,-0.124],[0.418,-0.146],[0.176,-0.052],[0.139,-0.034],[0.126,0.015],[0.171,-0.018],[0.126,-0.025],[0.27,-0.025],[0.195,-0.073],[0,0],[0.15,-0.149],[0.122,-0.022],[0.446,-0.076],[0,-0.269],[0,-0.147],[0.123,-0.147],[0.053,-0.04],[0.067,0.015],[0.171,-0.075],[0.12,-0.05],[0.147,-0.051],[0.126,-0.033],[0.122,0],[0,0],[0,-0.227],[0,-0.149],[0,-0.123],[0.098,-0.322],[0,0],[0.021,-0.119],[0.052,-0.146],[0.097,-0.294],[0.1,-0.12],[0.123,-0.051],[0,0],[0.152,0],[0,0],[0.023,-0.142],[0.026,-0.123],[0.049,-0.174],[0.075,-0.146],[0.146,-0.175],[0,0],[0.171,0.051],[0.102,0.072],[0,-0.465],[0.053,-0.515],[0.023,-0.174],[0.02,-0.126],[0.098,-0.102],[0.059,-0.011],[0.07,0.006],[0.295,-0.048],[-0.051,-0.32],[-0.071,-0.2],[-0.055,-0.011],[-0.074,0.01],[-0.147,-0.049],[-0.147,-0.07],[-0.052,-0.093],[-0.052,-0.173],[-0.021,-0.145],[-0.097,-0.198],[-0.266,-0.149],[-0.122,-0.025],[-0.151,-0.025],[0.026,-0.148],[0.078,-0.291],[0,-0.147],[-0.07,-0.122],[-0.122,-0.075],[0,0],[0,0.339],[-0.097,0.316],[-0.074,-0.316],[-0.027,-0.123],[-0.077,-0.148],[-0.102,-0.122],[0,0],[-0.098,-0.123],[-0.124,-0.12],[-0.1,0.124],[-0.118,0.071],[-0.122,0.077],[-0.273,0.148],[-0.099,0.444],[-0.027,0.292],[-0.296,-0.024],[-0.344,0],[0,0],[-0.199,0],[-0.27,-0.069],[-0.103,0],[-0.171,0.077],[-0.148,0.072],[-0.174,0.099],[-0.147,0.148],[-0.318,0],[-0.174,-0.076],[-0.144,-0.146],[-0.027,-0.119],[0,-0.15],[0.051,-0.103],[0.324,-0.218],[0,0],[0.248,0.021],[0.221,0.047],[0.246,0],[0.173,0],[-0.029,-0.122],[-0.145,-0.122],[0,0],[-0.294,0],[0,0],[-0.146,0],[-0.145,0],[-0.395,-0.073],[-0.258,-0.015],[-0.185,0.006],[-0.149,0],[0,0],[0,0],[-0.151,-0.124],[-0.124,-0.075],[-0.175,-0.094],[-0.123,-0.027],[-0.124,-0.027],[-0.147,-0.027],[-0.22,-0.077],[-0.047,-0.17],[-0.047,-0.271],[-0.074,-0.321],[-0.121,-0.168],[-0.026,-0.124],[-0.026,-0.121],[0,-0.196],[-0.028,-0.245],[0,-0.245],[0,-0.171],[0.095,-0.196],[0.196,-0.075],[0.39,0],[0.542,0.123],[0.128,0.124],[0.27,0.25],[0.121,0.146],[0.248,0.418],[0.097,0.176],[0.418,0.245],[0.343,0.17],[0.295,0.248],[0.273,0.174],[0.19,0.045],[0.116,-0.011],[0.148,0],[0.568,0.094],[0,0],[0,0],[0.147,-0.024],[0.137,-0.013],[0.126,0.005],[0.147,-0.025],[0,0],[0.296,0],[0.171,0.049],[0.273,0.193],[0.028,0.127],[0.028,0.121],[0.047,0.146],[0.124,0.094],[0.149,0.077],[0,0],[0.173,0],[0.196,0],[0.168,0.048],[0.127,0.07],[0.099,0.124],[0.171,0.098],[0,0],[0.344,0],[0,0],[0,0],[0,0],[0.393,0],[0.144,0.123],[0.126,0.097],[0.196,0.269],[0.121,0.099],[0.12,0.072],[0.146,0.1],[0.095,0.123],[0.099,0.265],[0.063,0.018],[0.168,-0.004],[0.099,0.124],[0.125,0.097],[0.121,0.077],[0,0],[0.294,0],[0.147,0.026],[0.123,0.024],[0.322,0.121],[-0.468,0],[-0.295,0.026],[-0.147,0.026],[0.025,0.144],[0.073,0.123],[0.102,0.069],[0.121,0.048],[0.175,0.074],[0.124,0.121],[0.248,0.299],[0.168,0.098],[0.172,0.128],[0.122,0.025],[0.147,0],[0.171,-0.072],[0.144,-0.102],[0.244,-0.146],[0.176,-0.075],[0.123,-0.167],[0.419,0],[0.124,0.076],[0.198,0.316],[0,0.295],[0.074,0.344],[0.021,0.121],[0.023,0.295],[0,0],[0,0.196],[-0.026,0.543],[0,0.15],[0.046,0.294],[0.027,0.123],[0.047,0.49],[0.024,0.394],[0.121,0.147],[0.121,0.151],[0.073,0.151],[0.023,0.128],[0.075,0.321],[0.022,0.128],[0.047,0.171],[0.076,0.169],[0.026,0.123],[0.026,0.148],[0.05,0.149],[0.1,0.17],[0.08,0.126],[0.126,0.168],[0.102,0.268],[0,0],[-0.03,0.3],[0,0.565],[0.097,0.169],[0.074,0.124],[0.073,0.149],[0.394,0.641],[0.222,0.445],[0.052,0.119],[0,0],[0.075,0.147],[0.2,0.171],[0.221,0],[0.147,-0.076],[0.073,-0.098],[0.073,-0.148],[0.2,-0.468],[0.102,-0.123],[0.048,-0.024],[0.071,0.012],[0.126,-0.048],[0.198,-0.073],[0.096,-0.122],[0.049,-0.117],[0.07,-0.149],[0.099,-0.25],[0,-0.394],[0.049,-0.172],[0.121,-0.271],[0.073,-0.273],[0.024,-0.297],[-0.026,-0.296],[0,-0.146],[0,0],[0,-0.616],[0,-0.174],[0.075,-0.123],[0.37,-0.271],[0.47,0],[0.219,-0.197],[0.051,-0.147],[0.075,-0.175],[0.127,-0.049],[0.123,-0.045],[0.171,-0.073],[0.15,-0.098],[0.124,-0.073],[0.126,-0.077],[0.145,-0.1],[0.199,-0.27],[0.099,-0.169],[0.124,-0.146],[0.1,-0.125],[0.27,-0.17],[0.127,-0.094],[0.073,-0.125],[0.073,-0.122],[0.069,-0.04],[0.058,0.011],[0.055,-0.011],[0.076,0.01],[0.171,-0.071],[0.071,-0.096],[0.172,-0.272],[0.125,-0.023],[0.089,-0.006],[0.196,0.004],[0.143,-0.096],[0.348,-0.491],[0.027,-0.294],[0,0],[0.175,0],[0.197,0.045],[0,0],[0.173,-0.026],[0.06,-0.024],[0.069,0.012],[0.196,-0.071],[0.123,-0.05],[0.145,-0.1],[0.12,-0.075],[0,0],[0,0],[0.272,0.026],[0.048,0.009],[0.091,-0.022],[0.1,0.119],[0.05,0.102],[0.081,0.15],[0.072,0.123],[0.121,0.12],[0.173,0.269],[0,0.294],[0,0.171],[0.077,0.121],[0.072,0.119],[0.073,0.097],[0.222,0.294],[0.147,0.123],[0.122,0.122],[0.101,0.147],[0,0],[0,0.15],[-0.024,0.312],[0,0],[0.295,-0.072],[0.17,0],[0.126,0.075],[0.073,0.1],[0,0.294],[-0.024,0.148],[-0.147,0.416],[0,0.612],[0.122,0.128],[0.146,0.097],[0.268,0.049],[0,0],[0.124,0],[0.145,-0.051],[0.124,-0.068],[0.147,-0.048],[0.32,-0.1],[0,0],[0,0],[0.02,-0.175],[0.465,0.099],[0.099,0.121],[0.074,0.149],[0.122,0.272],[0.126,0.487],[0.024,0.122],[0.073,0.147],[0.099,0.124],[0.073,0.122],[0,0.59],[0,0.173],[0.052,0.148],[0.101,0.143],[0.246,0.267],[0.12,0.121],[0.12,0.172],[0,0.295],[0,0.32],[0,0.417],[-0.124,0.072],[-0.121,0.046],[-0.122,0.093],[-0.053,0.122],[-0.073,0.441],[0,0],[-0.024,0.296],[-0.026,0.245],[0,0.389],[0.074,0.171],[0.126,0.097],[0.124,0.068],[0.339,0.173],[0.25,0.294],[0.122,0.074],[0.147,0.076],[0.099,0.15],[0.049,0.341],[0.028,0.291],[0.124,0.295],[0.072,0.171],[0.072,0.198],[0.147,0.322],[0,0],[0,0.169],[0.049,0.175],[0.051,0.172],[0.124,0.148],[0.123,0.072],[0.49,0.295],[0.296,0.097],[0.245,0.198],[0.069,0.123],[0.097,0.075],[0.121,0.047],[0.171,0.048],[0.244,0.072],[0,0],[0.198,0],[-0.175,-0.3],[-0.072,-0.116],[-0.098,-0.096],[-0.221,-0.226],[-0.075,-0.323],[0,-0.145],[-0.023,-0.466],[0,-0.125],[-0.022,-0.145],[-0.074,-0.166],[-0.099,-0.439],[0,0],[0,-0.147],[0,0],[0,-0.201],[0,0],[-0.472,0],[-0.149,-0.094],[-0.127,-0.098],[-0.122,-0.097],[-0.17,-0.122],[-0.27,-0.148],[-0.074,-0.009],[-0.092,0.012],[-0.321,-0.096],[-0.097,-0.146],[-0.027,-0.122],[-0.047,-0.272],[0,-0.149],[-0.025,-0.126],[-0.076,-0.124],[-0.124,-0.097],[-0.172,-0.222],[0,0],[0,-0.12],[-0.077,-0.098],[-0.122,-0.073],[0,0],[0,0],[0,-0.563],[0.246,-0.444],[0.1,-0.224],[0,-0.296],[0,-0.22],[0.076,-0.171],[0.12,-0.171],[0.12,0.05],[0.149,0.095],[0.125,0.097],[0.1,0.144],[0.124,0.251],[0.073,0.174],[0.172,0.122],[0,0],[0.146,-0.025],[0.147,-0.023],[0.345,0],[0.222,0.294],[0.122,0.296],[0.121,0.321],[0.149,0.297],[0.197,0.271],[0.072,0.03],[0.057,-0.008],[0.127,0.027],[0.121,0.022],[0.121,0.026],[0.125,0.099],[0,0.344],[-0.075,0.273],[0,0.688],[0.098,-0.146],[0.22,-0.295],[0.15,-0.124],[0.149,-0.125],[0.17,-0.147],[0.123,-0.096],[0.078,-0.12],[0.076,-0.146],[0.052,-0.123],[0.05,-0.122],[0.076,-0.197],[0.198,-0.048],[0.292,0.02],[0.198,-0.028],[0.393,-0.298],[0.172,-0.148],[0.122,-0.054],[0.146,-0.125],[0.072,-0.099],[0.072,-0.269],[0.022,-0.74],[0,0],[0,-0.344],[-0.126,-0.514],[-0.075,-0.315],[-0.02,-0.345],[-0.388,0],[-0.15,-0.027],[-0.173,-0.074],[-0.291,-0.296],[-0.049,-0.121],[-0.076,-0.104],[-0.146,-0.099],[-0.318,-0.196],[-0.174,-0.097],[-0.1,-0.126],[-0.115,-0.152],[-0.12,-0.242],[-0.019,-0.127],[-0.019,-0.174],[-0.098,-0.221],[0,-0.247],[0.024,-0.171],[0.05,-0.17],[0.123,-0.099],[0.126,-0.125],[0.076,-0.146],[0.048,-0.167],[0.023,-0.223],[0.022,-0.17],[0.073,-0.194],[0.126,-0.045],[0.1,-0.044],[0.065,0.012],[0.368,-0.047],[0.061,-0.024],[0.067,0.012],[0.175,-0.077],[0.12,-0.024],[0.296,-0.048],[0.147,0],[0.468,0],[0,0],[0,0.149],[0,0],[-0.122,0.121],[-0.15,0.072],[-0.061,0.025],[-0.068,-0.012],[-0.171,0.072],[-0.148,0.099],[-0.147,0.199],[0,0.219],[0.048,0.172],[0.049,0.148],[0,0],[0.075,-0.541],[0.023,-0.124],[0.049,-0.171],[0.027,-0.148],[0,-0.173],[-0.149,-0.248],[0,0],[0.324,0],[0,0],[0.171,0],[0.198,-0.099],[0.148,-0.102],[0.269,-0.099],[0.295,-0.047],[0,0],[0.145,0],[0.268,0.027],[0.151,0],[0.151,-0.048],[0.17,-0.077],[0.074,-0.121],[0.245,-0.101],[0.149,-0.025],[0.137,-0.011],[0.126,0.007],[0.15,0],[0.054,-0.011],[0.075,0.01],[0.175,-0.074],[0.147,-0.093],[0.125,-0.074],[0.173,-0.075],[0.123,-0.074],[0.101,-0.096],[0.123,-0.146],[0.097,-0.149],[0.145,-0.098],[0.128,0],[0.063,-0.013],[0.065,0.005],[0.319,-0.073],[0.122,-0.096],[0.095,-0.125],[0.147,-0.122],[0.123,-0.149],[0.074,-0.151],[0.049,-0.122],[0.049,-0.148],[0.198,-0.366],[0.247,-0.423],[0.05,-0.124],[0.097,-0.199],[0.124,-0.145],[0.172,-0.17],[0.168,-0.096],[0.149,-0.126],[0.073,-0.17],[0.048,-0.172],[0,-0.125],[0.025,-0.124],[0.029,-0.118],[0.073,-0.174],[0.32,-0.198],[0.246,-0.372],[0,-0.247],[-0.097,-0.147],[-0.069,-0.043],[-0.057,0.01],[-0.294,-0.073],[0,-0.297],[0,-0.149],[0,-0.148],[0,0],[-0.021,-0.126],[-0.047,-0.168],[-0.1,-0.442],[0,-0.127],[-0.05,-0.197],[-0.122,-0.145],[-0.075,-0.443],[0,-0.468],[-0.176,-0.345],[-0.242,-0.367],[-0.174,-0.073],[-0.08,-0.022],[-0.089,0.017],[-0.149,-0.075],[-0.047,-0.097],[0,0],[0,-0.17],[0.099,-0.196],[0.123,-0.15],[0.048,-0.27],[0,0],[0,0],[0.127,-0.099],[0.099,-0.148],[0.098,-0.123],[0.069,-0.042],[0.057,0.012],[0.126,-0.024],[0.149,-0.024],[0,0],[0.464,-0.027],[0.049,-0.394],[0,-0.124],[0,0],[-0.074,-0.125],[-0.198,-0.322],[0,0],[-0.023,0.294],[0,0.145],[-0.023,0.124],[-0.149,0],[-0.148,0],[-0.171,0],[0,0],[0,0],[-0.417,0],[0,-0.245],[0.047,-0.173],[0.099,-0.171],[0.123,-0.024],[0.443,-0.102],[0.147,0],[0.12,-0.028],[0.097,-0.073],[0.07,-0.171],[0.099,-0.148],[0.176,-0.076],[0.149,-0.046],[0.155,-0.031],[0.11,0.009],[0.123,0],[0.172,-0.028],[0.145,-0.123],[0.122,-0.147],[0.172,-0.175],[0.173,-0.125],[0,0],[0.176,-0.023],[0,0],[-0.098,0.121],[-0.124,0.148],[-0.124,0.248],[-0.073,0.365],[-0.097,0.125],[-0.121,0.145],[-0.074,0.093],[0,0],[0.129,-0.072],[0.149,-0.121],[0,0],[0.222,0],[0.272,-0.197],[0.122,-0.122],[0.123,-0.048],[0.15,-0.052],[0.492,0],[0.059,0.01],[0.07,-0.006],[0.299,0.047],[0.145,0.074],[0.196,0.225],[0,0],[0,0.173],[-0.098,0.2],[-0.049,0.119],[-0.1,0.245],[0,0.341],[0,0],[0,0],[0.169,-0.075],[0.146,0],[0.346,0.124],[0.05,0.125],[0.073,0.273],[0.023,0.125],[0.022,0.145],[0.096,0.196],[0,0],[0,0.244],[-0.122,0.149],[-0.05,0.121],[-0.046,0.144],[0,0],[0,0],[0.54,0],[0,0],[0.17,-0.096],[0.196,-0.122],[0.123,-0.052],[0.146,-0.074],[0.169,-0.076],[0.08,-0.024],[0.089,0.017],[0.146,-0.074],[0.047,-0.097],[0.023,-0.268],[0,-0.196],[0,-0.12],[0,0],[-0.397,0],[-0.173,-0.12],[-0.049,-0.343],[0,-0.124],[-0.072,-0.124],[-0.125,-0.099],[-0.149,-0.1],[-0.122,-0.1],[-0.121,-0.099],[-0.072,-0.097],[-0.072,-0.149],[-0.073,-0.193],[0,-0.419],[0.048,-0.166],[0.072,-0.144],[0.078,-0.126],[0.055,-0.038],[0.061,0.011],[0.319,-0.094],[0,0],[0.291,-0.025],[0,0],[0,-0.15],[0.024,-0.127],[0.07,-0.149],[0.048,-0.024],[0.072,0.014],[0.147,-0.05],[0.417,-0.222],[0.097,-0.147],[0.221,-0.268],[0.128,-0.046],[0.151,0],[0.659,0.172],[0.123,0.021],[0.321,0],[0.146,-0.07],[0.15,-0.1],[0.148,-0.097],[0.066,-0.039],[0.063,0.014],[0.17,-0.074],[0.15,-0.056],[0.114,0.017],[0.147,-0.028],[0.12,-0.021],[0.144,-0.098],[0.099,-0.075],[0.223,-0.297],[0.122,-0.097],[0.097,-0.121],[0.102,-0.124],[0.42,-0.467],[0.15,-0.121],[0.298,-0.247],[0.049,-0.121],[0.076,-0.175],[0.052,-0.121],[0.125,-0.298],[0.075,-0.173],[0.219,-0.368],[0.125,-0.074],[0.121,-0.079],[0.064,-0.04],[0.064,0.014],[0.341,-0.172],[0.124,-0.144],[0.098,-0.122],[0.125,-0.169],[0.146,-0.147],[0.125,-0.145],[0.05,-0.272],[0,-0.149],[0.022,-0.296],[0,0],[0.022,-0.169],[0.075,-0.173],[0.176,-0.369],[0,0],[0,-0.151],[0,0],[0,-0.148],[0.025,-0.176],[0.031,-0.122],[0.051,-0.267],[0.078,-0.192],[0.07,-0.124],[0.069,-0.148],[0.122,0.073],[0.122,0.098],[0.098,0.05],[0.149,0.098],[0.121,0.146],[0,0.149],[0,0.172],[-0.052,0.196],[0,0.393],[0.093,0.64],[0,0.513],[0,0.151],[-0.077,0.172],[-0.098,0.15],[-0.1,0.176],[0,0.223],[0.073,0.468],[0.124,0.37],[0,0.221],[-0.075,0.166],[-0.125,0.122],[-0.076,0.224],[0,0.221],[0,0.194],[0,0.147],[0,0],[0.119,-0.095],[0.05,-0.119],[0,0],[0.073,-0.173],[0.072,-0.123],[0.103,0.099],[0.072,0.272],[0.072,0.146],[0.37,0.271],[-0.022,-0.147],[-0.022,-0.148],[-0.024,-0.122],[-0.068,-0.176],[-0.124,-0.169],[-0.1,-0.122],[-0.097,-0.145],[-0.147,-0.291],[-0.078,-0.17],[-0.124,-0.269],[0,-0.394],[0.074,-0.146],[0.026,-0.196],[0.026,-0.122],[0.051,-0.147],[0.074,-0.125],[0.122,-0.096],[0.318,0],[0.345,0.171],[0.197,0],[-0.023,-0.147],[-0.023,-0.144],[-0.025,-0.124],[-0.073,-0.297],[-0.025,-0.121],[0,-0.196],[-0.051,-0.173],[-0.074,-0.445],[-0.025,-0.124],[-0.074,-0.172],[-0.074,-0.149],[-0.198,-0.323],[-0.052,-0.146],[-0.023,-0.122],[0,-0.169],[0,-0.15],[0,0],[0,-0.195],[0,-0.171],[0,-0.146],[-0.052,-0.149],[-0.038,-0.065],[-0.079,0.007],[-0.146,-0.247],[-0.024,-0.272],[-0.029,-0.346],[0,-0.295],[0,0],[0,0],[-0.268,0],[-0.174,0.028],[0,0],[0,0.146],[0,0],[0.021,0.145],[0.049,0.267],[0,0],[-0.055,-0.03],[-0.09,0.001],[-0.075,-0.145],[0,-0.147],[0,-0.148],[0.047,-0.269],[0,0],[-0.024,-0.175],[-0.098,-0.169],[-0.15,-0.073],[-0.062,-0.013],[-0.066,0.005],[-0.193,-0.051],[-0.124,-0.099],[-0.095,-0.07],[-0.517,-0.319],[0,0],[0,0],[0,0],[-0.027,-0.15],[-0.027,-0.172],[-0.17,-0.54],[0,0],[0.024,0.147],[0,0],[0,0.148],[-0.1,-0.013],[-0.073,0.007],[-0.173,-0.027],[0,0],[0,-0.147],[0.049,-0.226],[0,-0.445],[-0.145,0.147],[-0.151,0.047],[0,0],[0,0],[-0.17,0],[0.026,-0.294],[0.053,-0.173],[0.124,-0.149],[0.065,-0.026],[0.061,0.008],[0.295,-0.098],[0.175,-0.049],[0.148,-0.099],[0.15,-0.195],[0.173,-0.197],[0.125,-0.049],[0.149,-0.024],[0.272,-0.048],[0,-0.565],[0.051,-0.146],[0.122,-0.147],[0.122,-0.099],[0.121,-0.073],[0.101,-0.146],[0.122,-0.074],[0.123,-0.103],[0.149,-0.097],[0.145,-0.125],[0.125,-0.1],[0.125,-0.075],[0.058,-0.023],[0.071,0.013],[0.12,-0.072],[0.075,-0.124],[0.048,-0.125],[0.051,-0.147],[0.078,-0.172],[0.078,-0.127],[0.224,-0.219],[0.152,-0.025],[0.149,0.016],[0.322,-0.077],[0.149,-0.096],[0.147,-0.171],[0.194,-0.248],[0.393,0],[0.068,0],[0.374,0],[0,0],[0.172,0],[0,0],[0.147,0],[0.246,-0.024],[0,0],[0.172,0],[0.268,0.099],[0.224,0],[0.151,-0.027],[0,0],[0,0],[0.029,-0.345],[0.099,-0.152],[0.2,0.148],[0.196,0.122],[0.296,0],[0.249,0],[0.172,0.097],[0.12,0.048],[0.17,0.075],[-0.049,0.123],[-0.097,0.169],[0,0.273],[0.124,0.096],[0,0],[0.39,0],[0.124,-0.145],[0.122,-0.146],[0.518,0],[0.125,0.121],[0.023,-0.145],[0.023,-0.173],[0.121,0.051],[0.171,0.073],[0,0],[-0.028,-0.124],[-0.075,-0.172],[-0.027,-0.099],[-0.293,0.025],[-0.146,0],[0,0],[0,-0.344],[0.061,-0.037],[0.071,0.019],[0.148,-0.099],[0.098,-0.126],[0.069,-0.148],[0.096,-0.148],[0.124,-0.149],[0.053,-0.009],[0.076,0.01],[0,0],[0.172,-0.098],[0.27,-0.39],[0.394,-0.441],[0.293,-0.246],[0.219,0],[0.223,0.052],[0,0],[0.175,0],[0.173,-0.095],[0,0],[0.193,0],[0.122,0.101],[0.123,0.045],[0.063,0.014],[0.066,-0.005],[0.171,0.026],[-0.148,0.222],[0,0],[0.022,0.15],[0.076,0.12],[0.052,0.121],[0.052,0.267],[0,0],[0.121,-0.077],[0.145,-0.126],[0.291,-0.273],[0.122,-0.05],[0.144,-0.074],[0.148,-0.098],[0.124,-0.143],[0.122,-0.098],[0.268,-0.099],[0.051,-0.01],[0.079,0.015],[0.126,-0.072],[0.075,-0.123],[0.052,-0.146],[0.05,-0.27],[0.025,-0.296],[0.293,0],[0.319,-0.051],[0,0],[0,0],[-0.144,0.098],[0,0],[-0.15,0.074],[-0.168,0.1],[-0.073,0.148],[-0.025,0.123],[-0.025,0.121],[-0.025,0.121],[-0.072,0.345],[-0.029,0.122],[-0.023,0.122],[-0.073,0.153],[-0.097,0.074],[-0.172,0.07],[-0.126,0.05],[-0.1,0.099],[-0.05,0.122],[-0.15,0.347],[-0.467,0.27],[-0.493,0.316],[-0.469,0.268],[-0.441,0.366],[-0.101,0.122],[-0.27,0.196],[-0.077,0.096],[-0.096,0.174],[-0.063,0.013],[-0.066,-0.006],[-0.085,0.013],[-0.079,-0.006],[-0.149,0.024],[-0.126,0.026],[-0.343,0.101],[-0.148,0.049],[-0.055,0.012],[-0.075,-0.01],[-0.144,0.051],[-0.126,0.15],[0,0.248],[0,0.417],[-0.072,0.199],[-0.1,0.122],[-0.05,0.099],[-0.071,0.17],[-0.025,0.198],[0,0.295],[-0.073,0.319],[-0.097,0.319],[0,0.295],[0,1.649],[0,0.223],[-0.049,0.196],[0,0],[0,0],[0.174,0],[0.196,0],[0.125,-0.025],[0.15,-0.051],[0.123,-0.025],[0.244,-0.02],[0,-0.465],[0,-0.124],[0.075,-0.173],[0.102,-0.121],[0.145,-0.122],[0.1,-0.147],[0,0],[0.077,-0.146],[0.126,-0.199],[0,0],[0.168,0],[0,0],[0.15,0],[0.151,-0.073],[0.121,-0.101],[0,0],[0.27,-0.272],[0.123,-0.125],[0,0],[0,0],[0,-0.318],[-0.07,-0.173],[0,0],[0,0],[0.028,-0.169],[0.099,-0.197],[0.073,-0.127],[0.122,-0.172],[0.223,0],[0.1,0.075],[0.122,0.146],[0,0],[0,0],[-0.097,-0.123],[-0.248,-0.244],[-0.045,-0.118],[-0.025,-0.12],[-0.025,-0.145],[-0.047,-0.294],[0,-0.172],[0.075,-0.123],[0.123,-0.076],[-0.021,-0.123],[-0.049,-0.172],[-0.055,0.012],[-0.075,-0.01],[-0.168,0.073],[0,0],[0.021,-0.296],[0.098,-0.321],[0.046,-0.122],[0.078,-0.148],[0.245,-0.222],[0.122,-0.099],[0.074,-0.122],[0.045,-0.145],[0.025,-0.121],[0.049,-0.32],[0,-0.147],[0.022,-0.124],[0.075,-0.144],[0.097,-0.075],[0.121,-0.024],[0.344,0],[0.121,0.074],[0.168,0.172],[0.246,0],[0.144,-0.073],[0.123,-0.121],[0.122,-0.097],[0.101,0.148],[0.052,0.124],[0.073,0.176],[0.061,-0.012],[0.067,0.006],[0.176,-0.049],[0.146,-0.099],[0.269,-0.273],[0.096,-0.148],[0.195,-0.072],[0.222,0],[0.147,0],[0.152,0.025],[0,0],[0,0.294],[0,0.148],[0.099,0.323],[0.053,0.027],[0.063,-0.009],[0,-0.613],[0.098,-0.093],[0.148,-0.099],[0.151,-0.098],[0.246,-0.32],[0.146,-0.196],[0.119,-0.125],[0.245,-0.098],[0.176,-0.051],[0,0],[0.342,0],[0.147,-0.022],[0.293,-0.097],[0.17,-0.048],[0.124,-0.097],[0.124,-0.148],[0.122,-0.047],[0.467,-0.246],[0.189,-0.044],[0.115,0.01],[0.194,0],[0.171,-0.048],[0.366,-0.271],[0.151,-0.074],[0.271,-0.049],[0.467,0],[0.169,0.052],[0.171,0.099],[0.121,0.05],[0.367,0.094],[0,0],[0.193,0],[0,0],[-0.148,-0.097],[-0.123,-0.124],[-0.047,-0.122],[0,0],[-0.072,-0.175],[-0.074,-0.145],[-0.05,-0.122],[0,0],[-0.415,0],[-0.071,-0.121],[-0.048,-0.124],[-0.072,-0.124],[-0.1,-0.148],[0,0],[-0.195,0],[-0.101,-0.071],[0.148,-0.123],[0.122,-0.074],[0.171,-0.096],[0.126,-0.026],[0,0],[0.369,0.046],[0,0],[0.319,0],[0.292,0],[0.32,-0.121],[0.122,-0.145],[0.099,-0.128],[0.096,-0.194],[0,-0.221],[-0.029,-0.065],[-0.078,0.002],[-0.075,-0.095],[0,0],[0.371,-0.028],[0.488,0],[0.05,0.125],[0.05,0.145],[0.143,0.343],[0,0],[0.194,0],[0.171,0.048],[0.123,0.098],[0.1,0.447],[0,0],[0.346,0],[0.149,0.099],[0.245,0.194],[0.173,0.076],[0.218,0.095],[0,0],[0.169,-0.046],[0.048,-0.124],[0.025,-0.294],[0,-0.15],[0,0],[0.273,-0.024],[0,-0.468],[0,-0.148],[0,-0.145],[0.028,-0.122],[0.049,-0.147],[0.298,0.216],[0.175,0.078],[0,0],[0.142,0],[0.146,-0.049],[0.146,-0.097],[0.123,-0.121],[0.119,-0.101],[0.048,-0.026],[0.069,0.012],[0.169,-0.075],[0.125,-0.073],[0.074,-0.119],[0,-0.323],[-0.151,-0.074],[-0.11,-0.027],[-0.163,0.01],[-0.099,-0.072],[-0.099,-0.151],[-0.098,-0.149],[-0.267,-0.198],[0,0],[-0.271,0.028],[-0.443,0],[0,0],[-0.081,-0.009],[-0.082,0.006],[-0.198,-0.02],[-0.174,-0.099],[-0.151,-0.026],[-0.174,0],[-0.171,0.026],[0.147,0.099],[0.062,0.025],[0.07,-0.012],[0.124,0.074],[0.151,0.124],[0,0],[-0.021,0.122],[-0.098,0.224],[-0.439,0],[-0.048,-0.095],[0,0],[0,-0.174],[-0.147,-0.097],[-0.149,-0.048],[0,0],[-0.122,0],[-0.342,-0.024],[-0.196,-0.046],[-0.124,-0.052],[-0.176,-0.074],[-0.27,-0.099],[-0.194,-0.093],[-0.147,-0.121],[-0.076,-0.098],[-0.099,-0.073],[-0.168,-0.075],[-0.322,-0.047],[-0.145,0],[-0.344,-0.026],[0,-0.42],[-0.346,-0.417],[-0.223,-0.147],[-0.246,-0.096],[-0.167,-0.011],[-0.139,0.006],[-0.172,0],[-0.174,-0.047],[-0.167,-0.098],[-0.062,-0.01],[-0.066,0.006],[-0.147,-0.048],[0,0],[0,0],[-0.174,0],[-0.176,-0.049],[-0.39,-0.127],[-0.149,-0.077],[-0.467,0],[0,0],[-0.171,0],[-0.223,0.096],[-0.195,0.073],[-0.417,0],[0,0],[-0.198,0],[-0.194,-0.048],[-0.063,-0.011],[-0.067,0.007],[-0.321,-0.098],[-0.298,-0.17],[-0.122,-0.022],[-0.194,-0.027],[-0.222,0],[-0.146,0.025],[-0.146,0.097],[0,0.149],[-0.075,0.17],[-0.048,0.148],[-0.102,0.169],[0.122,0.051],[0.169,0.073],[0.12,0.073],[0.172,0.223],[0,0.145],[-0.048,0.198],[-0.099,0.122],[-0.122,0.099],[0,0],[0,0],[0,0],[0,0],[0,0],[0.464,0],[0.32,-0.1],[0,0],[-0.12,-0.029],[-0.146,-0.025],[0,0],[0,0.319],[0,0.148],[-0.049,0.149],[-0.075,0.121],[-0.22,0.096],[0,0],[-0.172,-0.026],[-0.267,-0.126],[-0.833,-0.12],[0,0],[-0.194,0],[-0.418,0.05],[-0.221,0.025],[-0.22,0],[-0.198,-0.024],[-0.194,-0.151],[-0.124,-0.075],[0,0],[-0.021,0.223],[0,0.145],[0,0],[0,0],[0,0],[0,0],[0,-0.294],[-0.099,-0.151],[-0.122,-0.073],[-0.147,-0.047],[-0.151,-0.047],[-0.175,-0.097],[-0.146,-0.246],[0,-0.394],[0,-0.124],[0,-0.171],[-0.075,-0.169],[-0.074,-0.12],[-0.097,-0.074],[-0.147,-0.126],[-0.097,-0.071],[-0.097,-0.05],[-0.058,-0.009],[-0.07,0.007],[-0.149,-0.021],[-0.166,-0.023],[-0.122,-0.029],[-0.292,-0.023],[-0.343,-0.023],[-0.148,0],[-0.148,0.024],[-0.147,0.073],[-0.143,0.077],[-0.175,0.075],[-0.148,0.051],[0,0],[-0.149,0.026],[-0.488,0.021],[-0.392,0],[-0.174,0.052],[0,0],[-0.145,0],[-0.145,-0.028],[-0.124,-0.049],[-0.193,-0.094],[-0.176,-0.121],[-0.122,-0.021],[0,0],[-0.198,0],[-0.217,-0.023],[-0.222,-0.029],[-0.194,-0.048],[0,0],[-0.297,-0.148],[-0.146,-0.097],[-0.121,-0.099],[-0.246,-0.15],[0,0],[0,0],[0.122,-0.121],[0.267,-0.176],[0,0],[-0.073,-0.01],[-0.067,0.007],[-0.195,-0.048],[0,0],[-0.024,0.298],[-0.046,0.174],[-0.197,0.295],[-0.121,0.052],[0,0],[-0.175,-0.025],[0.07,-0.148],[0.076,-0.17],[0.021,-0.125],[0.068,-0.17],[0.076,-0.094],[0.098,-0.076],[-0.296,0],[-0.197,0],[-0.172,-0.072],[-0.076,-0.011],[-0.089,0.011],[-0.322,-0.094],[-0.123,-0.022],[-0.197,0],[-0.346,0.023],[-0.291,0],[-0.219,-0.047],[-0.08,-0.012],[-0.088,0.011],[-0.294,-0.075],[-0.248,-0.038],[-0.188,0.015],[-0.293,-0.025],[-0.15,0],[-0.196,0],[-0.071,0.097],[-0.071,0.321],[0,0],[-0.343,0],[0,0.145],[0.028,0.194],[0.099,0.148],[0.146,0.075],[0.123,0.073],[0.123,0.075],[0.128,0.149],[0.053,0.12],[0.022,0.147],[0,0.147],[0,0],[-0.266,-0.051],[-0.122,-0.025],[-0.09,-0.013],[-0.078,0.006],[-0.124,-0.027],[-0.176,-0.048],[-0.149,-0.026],[-0.143,0],[-0.391,0],[0,0],[0,0],[0.151,0.075],[0.196,0.127],[0,0.267],[-0.372,-0.072],[-0.147,-0.101],[-0.147,-0.124],[-0.127,-0.098],[-0.096,-0.15],[-0.047,-0.1],[-0.098,-0.076],[-0.296,-0.073],[-0.169,0],[-0.12,0],[-0.123,0.073],[-0.1,0.146],[-0.346,0.348],[-0.444,0],[-0.343,0],[-0.12,0],[-0.172,-0.048],[-0.123,-0.051],[-0.148,0],[-0.174,0.048],[-0.439,0],[-0.245,0],[-0.124,0.294],[0.025,0.467],[-0.024,0.294],[0,0],[0,-0.464],[-0.124,-0.144],[-0.175,-0.149],[-0.122,-0.048],[-0.175,-0.07],[-0.173,-0.097],[-0.171,-0.122],[-0.32,-0.273],[0,0],[0,-0.145],[0.048,-0.149],[0,-0.194],[-0.025,-0.296],[0,-0.344],[-0.025,-0.341],[0,-0.297],[-0.049,-0.148],[-0.075,-0.172],[-0.175,-0.146],[-0.147,-0.071],[-0.248,-0.048],[-0.271,0],[-0.075,0.121],[-0.074,0.095],[-0.122,0.172],[-0.467,0],[-0.075,-0.146],[-0.096,-0.171],[-0.145,-0.121],[-0.125,-0.029],[-0.137,-0.019],[-0.198,0.008],[-0.175,-0.079],[-0.318,-0.246],[-0.272,0],[-0.169,0.046],[-0.195,0.101],[-0.177,0.072],[-0.198,0.094],[0,0],[0.076,0.169],[0.098,0.146],[0.021,0.173],[0,0.171],[0,0],[-0.221,0],[-0.397,0.15],[-0.442,0],[-0.221,-0.097],[-0.321,-0.096],[-0.194,-0.072],[-0.199,-0.101],[-0.171,0],[-0.194,0.049],[-0.243,0],[-0.149,-0.251],[0,0],[-0.146,-0.101],[-0.172,-0.073],[-0.127,-0.022],[-0.143,0],[-0.171,0],[-0.145,0.076],[-0.298,0],[0,0],[-0.147,-0.025],[0,0],[0,0],[-0.464,0],[-0.125,0],[-0.123,0.024],[-0.222,0.128],[0,0],[-0.15,0],[-0.174,0],[0,-0.293],[0,-0.149],[0,-0.15],[0,0],[-0.124,0.075],[-0.121,0.097],[-0.273,0.294],[-0.22,0],[-0.198,-0.079],[0,0],[0.297,0],[0.149,0],[0.174,-0.075],[0.122,-0.074],[0.104,-0.077],[0.147,-0.075],[0.198,-0.125],[0,0],[-0.05,-0.151],[-0.147,-0.148],[-0.39,0],[-0.171,0.05],[-0.124,0.069],[-0.153,0.125],[-0.099,0.15],[-0.126,0.125],[-0.173,0.147],[0,0],[0,0],[0.025,0.149],[0.072,0.221],[0,0],[-0.052,0.146],[-0.124,0.101],[-0.197,0.12],[0,0],[-0.15,0],[-0.296,-0.028],[-0.197,0],[-0.172,0.074],[-0.266,0.051],[0,0],[-0.393,0.025],[0,0],[-0.071,0],[0.226,-0.025],[0.147,-0.098],[0.122,-0.127],[0.127,-0.098],[0.121,-0.071],[0.143,-0.039],[0.119,0.015],[0.124,0],[0.149,-0.075],[0.121,-0.103],[0.271,-0.251],[0.192,-0.271],[0.22,-0.173],[0,0],[0.147,0],[0.124,0],[0.149,-0.05],[0.1,-0.074],[0.1,-0.151],[0.218,-0.173],[0,0],[0.15,0],[0.194,0],[0.123,-0.024],[0.17,-0.048],[0.151,-0.124],[0.027,-0.122],[0.075,-0.275],[0,0],[0.027,-0.221],[0.023,-0.145],[0.047,-0.147],[0.038,-0.05],[0.079,0.024],[0.097,-0.125],[0,-0.145],[-0.026,-0.122],[-0.04,-0.062],[-0.08,0.005],[-0.07,-0.124],[-0.07,-0.122],[-0.039,-0.05],[-0.082,0.025],[-0.051,-0.101],[-0.075,-0.173],[-0.145,-0.2],[-0.174,-0.074],[-0.087,-0.011],[-0.081,0.007],[-0.121,-0.024],[-0.05,-0.467],[0,0],[-0.32,0],[-0.319,-0.049],[-0.148,0],[-0.147,0.048],[-0.143,0.076],[-0.099,0.08],[-0.245,-0.269],[-0.098,-0.05],[-0.222,-0.051],[-0.22,0],[0,0],[0,0],[0,0],[0.097,-0.12],[0.098,-0.072],[0.195,-0.22],[0,-0.169],[0,0],[-0.319,0],[-0.397,-0.024],[-0.147,0],[0.072,-0.146],[0.194,-0.268],[0.069,-0.028],[0.06,0.009],[0.169,-0.051],[0,0],[0,0]],\"v\":[[172.657,-138.643],[172.24,-138.443],[171.456,-138.15],[171.064,-138.15],[169.88,-137.757],[169.486,-137.658],[169.095,-137.364],[168.801,-136.872],[168.801,-136.481],[168.801,-136.086],[168.508,-135.69],[167.719,-135.299],[167.915,-134.906],[168.306,-134.713],[168.212,-134.244],[164.28,-134.244],[164.081,-133.432],[163.65,-133.343],[163.196,-133.239],[163.196,-132.843],[162.899,-132.447],[162.507,-132.252],[161.425,-132.151],[160.736,-132.151],[160.344,-132.349],[159.952,-132.643],[159.658,-133.038],[159.264,-133.136],[158.868,-133.136],[157.887,-133.136],[157.493,-133.136],[156.61,-133.432],[156.117,-133.333],[155.944,-133.328],[155.626,-133.239],[155.331,-132.843],[155.428,-132.349],[155.331,-131.955],[154.939,-131.761],[154.421,-131.564],[152.308,-131.564],[151.298,-131.171],[150.808,-130.974],[150.019,-130.583],[149.628,-130.484],[149.137,-130.088],[148.746,-130.189],[148.548,-130.583],[148.103,-130.583],[147.27,-130.484],[146.874,-130.189],[146.092,-129.791],[145.696,-129.401],[145.301,-129.304],[144.813,-129.304],[143.829,-129.205],[143.043,-128.812],[142.746,-128.419],[142.647,-127.924],[142.454,-127.535],[142.235,-127.527],[142.058,-127.535],[141.568,-127.535],[141.175,-127.437],[140.783,-127.337],[140.391,-127.238],[139.993,-126.845],[140.391,-126.057],[140.783,-125.863],[141.663,-125.566],[142.058,-125.368],[142.058,-124.978],[142.058,-124.585],[141.764,-124.19],[141.371,-124.289],[140.092,-124.485],[139.306,-124.386],[138.913,-124.289],[138.618,-123.893],[138.225,-123.597],[137.834,-123.597],[137.441,-123.597],[136.947,-123.994],[135.866,-123.893],[135.079,-123.893],[134.684,-123.797],[134.271,-123.597],[132.449,-123.597],[132.033,-123.7],[131.639,-123.597],[131.538,-123.207],[131.246,-122.816],[129.204,-122.816],[128.491,-122.225],[128.691,-121.832],[129.079,-121.437],[129.472,-121.045],[129.866,-120.748],[129.866,-119.963],[129.866,-119.566],[130.066,-119.177],[130.163,-118.784],[131.149,-118.685],[131.736,-118.685],[132.227,-118.784],[132.624,-118.585],[132.918,-118.195],[133.309,-117.799],[133.309,-117.408],[133.309,-117.015],[132.423,-116.421],[131.835,-116.619],[131.441,-116.818],[131.246,-117.212],[131.05,-117.211],[130.855,-117.212],[130.361,-117.408],[129.967,-117.503],[129.571,-117.604],[129.472,-117.998],[129.376,-118.391],[128.983,-118.585],[126.647,-118.585],[125.839,-118.978],[125.743,-119.373],[124.949,-119.566],[124.559,-119.566],[124.168,-119.274],[123.772,-119.177],[122.594,-118.881],[122.691,-118.491],[123.082,-118.391],[123.871,-118.391],[124.267,-118.391],[124.559,-117.998],[124.853,-117.604],[124.658,-117.212],[123.772,-117.306],[123.381,-117.408],[123.082,-117.799],[122.447,-117.799],[122.197,-117.799],[121.806,-117.799],[121.611,-117.408],[121.514,-117.015],[121.116,-116.619],[122.103,-115.736],[122.48,-115.736],[122.889,-115.736],[123.283,-115.639],[124.46,-115.144],[124.756,-114.752],[125.149,-114.655],[125.543,-114.458],[125.743,-114.066],[125.543,-113.67],[125.149,-114.262],[124.72,-114.326],[124.361,-114.36],[123.97,-114.655],[123.775,-114.654],[123.576,-114.655],[123.383,-114.654],[123.184,-114.655],[122.79,-114.95],[122.396,-115.05],[121.813,-115.048],[121.219,-115.05],[120.431,-115.344],[120.04,-115.736],[119.746,-116.128],[119.842,-116.525],[119.842,-117.306],[119.842,-118.096],[120.137,-118.491],[120.137,-118.881],[120.137,-119.274],[120.04,-119.669],[119.644,-119.867],[119.644,-120.257],[119.249,-121.045],[118.858,-120.849],[118.66,-120.848],[118.464,-120.849],[118.464,-120.257],[118.566,-119.867],[118.566,-118.685],[118.464,-118.29],[118.464,-117.847],[117.678,-117.896],[117.186,-117.799],[116.796,-117.847],[116.796,-117.212],[116.694,-116.818],[116.301,-116.619],[115.91,-116.525],[115.415,-115.639],[115.415,-115.441],[116.301,-114.36],[116.991,-113.67],[116.991,-113.277],[117.186,-112.491],[117.087,-112.098],[116.892,-111.705],[116.4,-111.117],[116.4,-110.92],[116.595,-110.525],[116.694,-110.034],[116.796,-109.642],[116.595,-109.247],[116.694,-108.853],[117.087,-108.069],[117.504,-107.871],[119.447,-107.871],[119.746,-108.265],[120.137,-108.561],[120.527,-108.951],[120.725,-108.951],[121.116,-108.853],[121.413,-108.462],[122.197,-107.968],[122.594,-107.871],[122.988,-107.577],[123.381,-106.79],[124.066,-106.099],[124.46,-105.808],[124.756,-105.413],[124.46,-104.626],[124.168,-104.232],[123.772,-103.941],[123.97,-103.546],[124.152,-103.552],[124.361,-103.546],[124.756,-103.349],[125.051,-102.954],[125.818,-102.851],[126.23,-102.857],[126.621,-102.76],[126.331,-102.367],[125.936,-102.169],[125.149,-102.071],[124.756,-102.071],[124.361,-102.367],[123.97,-102.66],[123.576,-102.76],[123.381,-103.741],[123.381,-104.334],[123.477,-104.727],[122.889,-105.512],[122.495,-105.709],[122.495,-106.099],[122.197,-106.494],[121.806,-106.594],[121.314,-106.691],[120.527,-106.79],[119.348,-106.691],[118.954,-106.691],[118.566,-106.494],[118.17,-106.296],[117.775,-105.903],[117.876,-105.512],[117.975,-105.119],[118.267,-104.134],[118.071,-103.148],[117.975,-102.76],[117.581,-102.367],[117.186,-102.071],[116.694,-101.676],[116.301,-101.38],[116.301,-100.4],[115.517,-100.4],[114.339,-99.708],[113.546,-99.222],[113.546,-98.824],[113.254,-98.43],[112.861,-98.43],[112.072,-98.533],[111.68,-98.727],[111.287,-98.824],[110.868,-99.12],[108.536,-99.12],[108.142,-99.32],[108.436,-99.708],[108.73,-100.104],[109.319,-100.104],[109.913,-100.104],[110.305,-99.907],[111.092,-99.907],[111.878,-99.907],[112.274,-100.204],[112.665,-100.497],[113.056,-100.792],[113.449,-101.579],[113.845,-101.778],[114.529,-102.464],[114.629,-102.857],[115.025,-103.057],[115.415,-103.252],[115.415,-103.645],[115.517,-104.035],[115.808,-104.824],[115.91,-105.217],[116.009,-105.609],[116.202,-105.981],[116.103,-106.47],[115.316,-106.397],[114.827,-106.494],[114.339,-106.691],[114.042,-107.083],[113.943,-107.676],[114.137,-108.658],[114.137,-109.835],[114.137,-110.23],[114.339,-111.016],[114.529,-112.196],[114.529,-112.591],[114.137,-113.377],[114.042,-113.772],[113.746,-114.554],[113.449,-114.95],[113.254,-115.316],[113.254,-117.752],[114.042,-117.702],[114.434,-117.799],[114.529,-117.752],[114.556,-120.159],[113.546,-120.257],[113.157,-120.652],[112.762,-120.748],[111.977,-120.748],[111.188,-120.748],[110.6,-120.849],[109.616,-120.652],[109.22,-120.358],[108.832,-120.159],[108.436,-120.159],[107.648,-120.159],[107.258,-120.064],[107.258,-118.881],[107.258,-118.391],[106.766,-117.604],[106.471,-117.212],[105.78,-116.421],[105.587,-115.639],[105.391,-115.144],[104.996,-115.05],[104.543,-115.036],[104.208,-115.05],[103.816,-115.05],[103.424,-114.85],[103.227,-114.262],[103.227,-114.066],[103.323,-113.576],[103.523,-113.569],[103.717,-113.576],[104.406,-112.884],[104.504,-112.098],[104.31,-111.313],[103.915,-111.214],[103.522,-111.016],[103.424,-110.404],[103.522,-109.642],[104.31,-109.642],[104.703,-109.642],[105.098,-109.346],[105.391,-108.951],[105.391,-108.561],[105.587,-108.168],[105.979,-107.968],[106.273,-107.577],[106.668,-107.479],[107.354,-106.79],[107.75,-106.594],[107.75,-106.201],[107.75,-105.808],[107.354,-105.413],[107.258,-105.02],[106.867,-105.02],[106.471,-105.02],[105.684,-105.02],[104.897,-105.413],[104.406,-106.79],[103.62,-106.887],[102.441,-107.083],[102.143,-107.479],[101.751,-107.773],[101.29,-107.79],[100.966,-107.773],[100.572,-107.871],[99.786,-107.968],[99.393,-108.361],[99.198,-108.853],[98.805,-108.951],[98.408,-109.052],[97.918,-109.346],[97.499,-109.543],[95.585,-109.543],[95.165,-109.738],[94.971,-110.131],[94.552,-110.326],[92.536,-110.326],[91.723,-110.82],[90.938,-111.313],[90.544,-111.41],[90.346,-111.803],[89.954,-111.902],[89.561,-112.196],[89.465,-112.591],[89.236,-112.601],[89.072,-112.591],[88.478,-112.687],[88.28,-112.687],[87.891,-112.491],[87.497,-112.098],[87.596,-111.51],[87.988,-111.117],[88.382,-110.82],[88.382,-110.427],[88.382,-109.936],[89.169,-109.936],[89.561,-109.835],[89.954,-109.835],[90.346,-109.642],[90.448,-109.247],[90.643,-108.757],[91.626,-108.462],[92.021,-108.265],[92.311,-107.871],[92.217,-107.479],[92.118,-107.083],[91.427,-106.397],[91.039,-106.397],[90.643,-106.397],[90.249,-106.397],[90.053,-106.002],[89.954,-105.609],[89.757,-105.217],[89.365,-105.02],[88.921,-105.119],[88.973,-105.903],[89.072,-106.296],[89.072,-107.083],[88.921,-107.479],[88.382,-107.479],[87.988,-107.379],[87.596,-107.083],[87.397,-106.691],[87.203,-106.296],[86.415,-106.296],[86.023,-106.296],[85.236,-106.397],[85.025,-106.414],[84.743,-106.397],[84.548,-106.002],[84.251,-105.609],[83.787,-105.609],[83.37,-105.609],[82.971,-105.709],[82.579,-105.709],[81.698,-105.709],[81.303,-105.633],[81.303,-104.626],[80.125,-104.626],[79.729,-104.923],[79.536,-105.316],[79.141,-105.413],[79.337,-105.808],[79.337,-106.201],[79.729,-106.987],[79.633,-107.379],[79.237,-107.28],[79.042,-106.887],[78.65,-106.79],[78.253,-106.691],[77.914,-106.677],[77.37,-106.594],[77.074,-106.201],[76.29,-105.808],[75.703,-105.808],[74.523,-105.709],[74.126,-105.512],[74.029,-105.119],[73.632,-104.923],[73.244,-104.923],[72.849,-104.923],[72.456,-104.824],[71.572,-104.626],[71.177,-104.334],[70.393,-103.645],[69.898,-103.349],[69.21,-103.331],[68.329,-103.252],[67.932,-102.857],[68.126,-102.464],[68.526,-101.973],[68.329,-101.38],[67.539,-100.993],[67.145,-100.696],[66.753,-100.598],[66.361,-100.598],[65.868,-100.598],[65.277,-100.302],[65.083,-100.302],[64.786,-100.696],[64.298,-100.894],[63.899,-101.284],[63.805,-101.676],[63.411,-102.268],[63.508,-103.202],[65.672,-103.202],[65.672,-104.427],[65.277,-104.824],[64.885,-104.923],[64.69,-105.316],[64.395,-105.709],[63.997,-106.099],[63.215,-105.903],[63.018,-105.903],[62.626,-106.296],[62.23,-106.397],[61.369,-106.397],[60.557,-106.397],[60.165,-106.296],[59.871,-106.369],[59.871,-105.512],[60.656,-105.413],[61.001,-105.217],[61.001,-102.884],[60.755,-102.464],[60.361,-102.169],[60.462,-101.778],[60.462,-101.38],[60.855,-101.284],[61.249,-101.088],[61.543,-100.696],[61.936,-100.204],[61.936,-100.005],[61.592,-99.76],[61.639,-99.419],[61.639,-98.236],[61.592,-98.042],[60.755,-98.141],[60.361,-98.141],[59.969,-98.43],[59.969,-98.824],[59.676,-99.222],[59.233,-99.222],[58.79,-99.222],[58.397,-98.923],[58.001,-98.923],[57.12,-98.923],[56.726,-98.824],[56.726,-98.43],[56.628,-98.042],[56.234,-97.844],[55.839,-97.746],[55.053,-97.546],[54.56,-97.449],[54.169,-97.152],[53.973,-96.763],[53.581,-96.469],[52.991,-96.378],[52.992,-96.369],[52.992,-95.585],[53.186,-95.191],[53.284,-94.795],[53.68,-94.7],[54.072,-94.5],[54.268,-93.911],[54.169,-93.321],[54.169,-93.519],[53.385,-93.519],[52.596,-93.519],[51.809,-93.715],[51.419,-93.715],[51.025,-93.812],[50.135,-93.911],[49.743,-94.203],[49.354,-94.306],[49.159,-94.305],[48.958,-94.306],[48.568,-94.597],[48.27,-95.09],[48.074,-95.482],[47.685,-95.29],[47.385,-94.893],[47.216,-94.9],[46.993,-94.893],[46.599,-94.404],[46.796,-93.812],[47.188,-93.519],[47.586,-93.421],[47.586,-93.027],[47.78,-92.632],[48.173,-92.632],[49.055,-92.73],[49.844,-92.239],[50.135,-91.751],[49.844,-91.356],[47.876,-91.356],[47.685,-90.962],[47.29,-90.862],[46.895,-90.962],[46.796,-91.356],[46.406,-91.648],[45.224,-92.143],[45.03,-92.142],[44.828,-92.143],[44.141,-92.73],[43.945,-93.126],[43.945,-93.519],[43.945,-94.7],[42.691,-94.7],[42.667,-95.972],[42.863,-97.648],[42.57,-98.43],[41.9,-98.592],[41.391,-98.629],[41.19,-99.025],[40.801,-99.419],[40.505,-100.204],[39.993,-100.291],[39.621,-100.302],[39.228,-100.696],[38.438,-101.088],[38.538,-101.482],[38.931,-101.38],[39.326,-101.284],[39.522,-100.894],[40.307,-100.598],[41.094,-100.104],[41.486,-99.907],[42.199,-99.902],[42.863,-99.907],[43.255,-99.907],[43.552,-99.515],[44.363,-99.12],[47.066,-99.12],[47.484,-99.025],[47.876,-98.923],[48.074,-98.533],[48.469,-98.43],[48.859,-98.43],[49.254,-98.334],[50.04,-98.334],[50.432,-98.334],[50.826,-98.334],[51.22,-98.533],[51.415,-98.533],[51.612,-98.533],[52.005,-98.629],[52.793,-99.025],[53.186,-99.025],[53.973,-99.12],[54.365,-99.419],[54.758,-99.708],[55.154,-100.005],[55.35,-100.4],[55.449,-101.185],[55.35,-102.367],[55.35,-102.76],[54.954,-103.546],[54.56,-103.839],[54.169,-104.232],[53.775,-104.334],[53.284,-104.427],[52.496,-104.427],[51.708,-104.427],[50.928,-104.923],[50.531,-105.119],[50.333,-105.512],[49.941,-105.709],[49.646,-106.099],[49.448,-106.099],[49.254,-106.099],[48.859,-106.296],[48.568,-106.691],[48.173,-106.79],[47.78,-106.987],[47.385,-107.28],[46.993,-107.379],[46.06,-107.479],[45.128,-107.379],[44.536,-107.28],[44.339,-107.28],[43.945,-107.577],[43.456,-107.773],[42.764,-108.462],[41.586,-108.462],[41.586,-107.871],[41.391,-107.479],[40.997,-107.479],[40.603,-107.479],[40.113,-107.773],[40.307,-108.168],[40.505,-108.757],[40.505,-108.951],[40.113,-109.148],[39.716,-109.346],[39.716,-109.738],[39.621,-110.23],[38.466,-110.23],[38.046,-110.034],[37.656,-109.642],[37.061,-109.835],[36.671,-110.034],[36.572,-110.427],[35.686,-110.326],[34.805,-110.525],[34.41,-110.623],[34.41,-111.065],[34.805,-111.016],[35.195,-111.117],[35.686,-111.065],[35.786,-111.902],[35.488,-112.296],[35.195,-112.687],[34.805,-112.687],[33.917,-112.687],[33.13,-112.787],[32.837,-113.178],[32.54,-113.576],[32.148,-113.67],[31.755,-113.576],[31.755,-112.394],[30.673,-112.296],[30.673,-113.104],[30.868,-113.475],[31.26,-113.87],[31.26,-114.213],[28.559,-114.213],[28.609,-112.984],[28.411,-112.591],[28.411,-112.196],[28.559,-111.803],[28.017,-111.902],[28.115,-112.296],[28.216,-112.884],[27.922,-113.475],[27.499,-113.67],[26.736,-113.67],[26.717,-114.655],[26.249,-114.752],[25.362,-114.163],[24.973,-113.968],[24.579,-114.066],[24.185,-114.066],[23.888,-113.67],[23.495,-112.884],[22.906,-112.591],[22.71,-112.591],[22.217,-112.687],[21.928,-113.081],[22.121,-113.475],[22.516,-113.772],[21.163,-113.772],[19.957,-113.475],[19.462,-113.277],[18.971,-112.984],[18.876,-112.591],[19.074,-112.196],[19.462,-111.803],[20.249,-111.705],[20.939,-111.605],[20.939,-110.721],[20.178,-110.721],[19.76,-111.016],[18.876,-111.016],[18.087,-111.117],[17.672,-111.214],[16.91,-111.214],[16.91,-110.131],[16.91,-109.738],[16.714,-109.346],[16.319,-109.148],[16.319,-109.936],[16.221,-110.326],[15.828,-110.525],[15.632,-110.524],[15.436,-110.525],[15.043,-110.82],[14.746,-111.214],[14.56,-111.213],[14.354,-111.214],[13.543,-111.803],[12.88,-111.705],[12.88,-110.943],[13.074,-110.525],[13.174,-110.034],[12.88,-109.247],[12.98,-108.853],[12.585,-108.561],[11.993,-108.265],[11.406,-108.361],[11.406,-108.757],[11.21,-109.148],[11.21,-109.543],[10.815,-109.346],[10.715,-108.853],[10.505,-108.847],[10.32,-108.853],[9.538,-108.757],[9.438,-108.069],[9.634,-107.676],[9.816,-107.682],[10.029,-107.676],[10.421,-107.479],[10.421,-107.083],[10.421,-106.691],[10.225,-106.296],[9.833,-106.397],[9.438,-106.79],[8.941,-106.8],[8.555,-106.79],[8.06,-106.987],[8.258,-108.168],[8.06,-108.561],[7.474,-108.361],[7.474,-107.183],[7.079,-106.987],[6.484,-107.183],[5.51,-106.79],[5.605,-106.397],[6,-106.201],[5.803,-105.808],[4.816,-105.808],[4.424,-105.709],[4.031,-105.709],[3.639,-105.413],[3.54,-105.02],[3.143,-104.923],[2.753,-104.528],[2.654,-104.134],[2.445,-104.128],[2.262,-104.134],[1.866,-103.645],[2.628,-103.645],[3.046,-103.839],[3.341,-104.232],[3.734,-104.427],[4.13,-104.427],[4.523,-104.528],[4.915,-104.427],[5.307,-104.727],[5.51,-105.119],[5.721,-105.125],[5.898,-105.119],[6.09,-105.118],[6.293,-105.119],[6.686,-105.413],[7.716,-105.512],[8.751,-105.413],[9.142,-105.119],[8.945,-104.727],[8.16,-104.727],[7.764,-104.727],[7.667,-104.334],[7.276,-104.232],[7.087,-104.286],[6.882,-104.334],[6.484,-104.035],[6.391,-103.645],[6.193,-103.252],[5.803,-103.057],[5.605,-102.66],[5.704,-102.268],[5.605,-101.482],[4.523,-101.284],[4.13,-100.497],[3.734,-100.302],[3.341,-100.005],[3.143,-99.613],[2.753,-99.419],[2.359,-99.12],[2.359,-98.727],[2.359,-98.334],[1.966,-97.945],[1.573,-97.546],[1.573,-96.763],[1.378,-96.369],[1.378,-95.972],[1.283,-96.369],[0.884,-96.074],[0.1,-95.779],[-0.194,-95.384],[-0.589,-95.09],[-0.816,-95.078],[-0.986,-95.09],[-1.572,-94.893],[-1.966,-94.597],[-1.867,-94.108],[-1.473,-94.01],[-1.081,-94.108],[-0.293,-94.108],[-0.392,-93.615],[-0.392,-93.225],[-0.784,-93.027],[-1.18,-92.831],[-1.572,-92.534],[-2.163,-92.437],[-2.555,-92.045],[-2.948,-91.751],[-3.34,-91.648],[-3.736,-91.356],[-3.931,-90.962],[-4.029,-90.569],[-4.62,-90.175],[-5.626,-90.569],[-6.388,-90.569],[-6.486,-89.881],[-6.19,-89.094],[-7.37,-88.8],[-7.57,-88.799],[-7.763,-88.8],[-8.553,-88.409],[-8.944,-88.11],[-9.339,-87.817],[-9.512,-87.822],[-9.73,-87.817],[-10.125,-87.619],[-10.125,-87.227],[-10.125,-86.833],[-10.517,-86.44],[-10.914,-86.144],[-11.307,-86.144],[-11.698,-86.144],[-12.091,-85.85],[-12.487,-85.554],[-12.387,-85.161],[-12.19,-84.768],[-12.387,-84.375],[-12.605,-84.318],[-12.78,-84.277],[-12.979,-83.884],[-12.879,-83.488],[-12.585,-82.899],[-12.681,-82.21],[-12.876,-82.205],[-13.073,-82.21],[-13.271,-81.82],[-13.271,-81.03],[-12.217,-81.03],[-11.796,-81.132],[-11.402,-80.937],[-11.206,-80.542],[-11.503,-80.149],[-11.895,-79.954],[-11.895,-79.557],[-11.895,-79.165],[-12.387,-78.967],[-12.487,-78.575],[-12.387,-78.083],[-10.814,-78.035],[-10.914,-77.101],[-11.307,-76.804],[-11.503,-76.411],[-11.307,-76.017],[-11.307,-75.721],[-10.517,-75.721],[-10.322,-75.734],[-10.03,-75.721],[-9.73,-75.33],[-9.339,-74.939],[-8.553,-75.134],[-8.159,-75.037],[-7.569,-74.838],[-6.587,-75.134],[-6.292,-75.527],[-6.072,-75.533],[-5.897,-75.527],[-5.504,-75.627],[-5.115,-75.921],[-4.913,-76.313],[-4.52,-76.707],[-3.931,-77.491],[-3.638,-77.884],[-3.243,-77.986],[-2.852,-77.884],[-2.458,-78.083],[-2.458,-78.871],[-2.271,-78.876],[-2.064,-78.871],[-1.667,-78.675],[-1.473,-78.279],[-1.473,-77.884],[-1.081,-77.593],[-1.081,-76.707],[-0.986,-76.313],[-0.589,-76.017],[-0.194,-75.43],[-0.194,-75.233],[-0.589,-74.838],[-0.491,-74.442],[-0.001,-73.659],[0.393,-73.56],[0.689,-73.167],[0.986,-72.775],[0.986,-72.379],[0.986,-71.989],[1.283,-71.204],[1.671,-70.908],[2.065,-70.513],[2.458,-70.216],[2.557,-69.826],[2.458,-69.433],[2.165,-68.841],[2.165,-68.646],[2.359,-68.254],[2.359,-67.855],[5.112,-67.855],[5.211,-68.449],[5.211,-68.841],[5.51,-69.236],[5.898,-69.63],[6.293,-69.63],[6.686,-69.63],[7.079,-69.532],[7.474,-69.333],[7.867,-69.532],[8.16,-69.925],[9.044,-70.022],[9.044,-71.204],[10.616,-71.204],[10.715,-71.597],[10.616,-72.185],[9.855,-72.185],[9.438,-72.088],[9.266,-72.081],[9.044,-72.088],[9.044,-72.482],[8.65,-72.578],[9.142,-73.366],[9.438,-73.76],[9.538,-74.545],[9.634,-75.33],[9.634,-75.721],[9.833,-76.12],[10.225,-76.313],[10.616,-76.707],[11.01,-76.804],[11.406,-77.101],[11.797,-77.2],[11.987,-77.193],[12.19,-77.2],[12.388,-77.593],[12.388,-77.986],[12.684,-78.379],[13.074,-78.675],[13.469,-78.967],[13.469,-79.338],[13.469,-79.753],[13.368,-80.245],[12.585,-80.245],[11.797,-80.346],[11.406,-80.27],[11.406,-81.525],[11.01,-81.916],[10.803,-81.916],[10.616,-81.916],[10.225,-82.21],[10.275,-82.582],[10.275,-85.751],[10.715,-86.048],[10.911,-86.44],[11.307,-86.833],[11.504,-87.227],[11.702,-88.01],[11.893,-88.409],[12.289,-88.602],[12.505,-88.608],[12.684,-88.602],[13.469,-88.998],[13.764,-89.388],[14.159,-89.682],[14.354,-90.074],[14.837,-90.161],[15.138,-90.175],[15.348,-90.163],[15.633,-90.175],[15.927,-90.569],[16.319,-90.862],[16.319,-91.255],[16.609,-91.648],[17.01,-91.751],[17.402,-91.849],[17.797,-91.849],[18.186,-91.944],[18.483,-92.534],[18.186,-93.126],[17.797,-93.421],[17.797,-93.812],[18.087,-94.993],[18.383,-95.384],[18.589,-95.391],[18.777,-95.384],[19.171,-95.678],[19.462,-96.174],[19.76,-96.957],[19.858,-97.352],[20.648,-97.449],[21.434,-97.352],[21.629,-97.351],[21.824,-97.352],[22.121,-96.957],[22.71,-96.174],[23.103,-96.27],[23.398,-96.663],[23.792,-96.763],[24.185,-96.469],[24.579,-96.174],[24.773,-95.779],[24.973,-95.361],[24.973,-94.108],[23.792,-94.108],[23.792,-92.926],[23.792,-92.534],[23.398,-91.751],[23.004,-91.454],[22.413,-91.158],[21.333,-91.356],[20.939,-91.158],[20.544,-90.962],[20.353,-90.569],[20.056,-90.175],[19.957,-89.783],[19.565,-89.584],[19.171,-89.191],[18.971,-88.8],[18.579,-88.602],[17.893,-87.913],[18.186,-86.539],[17.99,-85.947],[17.598,-85.358],[17.797,-83.985],[17.797,-83.589],[17.893,-83.194],[17.893,-82.309],[18.876,-82.21],[19.661,-81.916],[19.957,-81.525],[20.249,-81.132],[21.039,-80.834],[21.434,-80.542],[22.413,-80.053],[22.612,-80.053],[23.004,-80.245],[24.384,-80.937],[25.362,-80.639],[25.953,-80.736],[26.348,-80.736],[26.741,-80.937],[26.837,-81.328],[27.232,-81.525],[30.35,-81.525],[30.771,-81.82],[31.361,-81.916],[31.557,-81.916],[31.855,-81.525],[31.952,-81.132],[32.344,-80.937],[34.31,-80.937],[34.508,-80.542],[34.113,-80.149],[33.329,-80.149],[32.344,-80.149],[31.952,-80.053],[31.557,-79.753],[31.163,-79.46],[30.771,-79.165],[30.478,-78.771],[30.281,-78.379],[29.987,-77.986],[29.589,-77.986],[28.807,-78.083],[28.411,-78.478],[27.823,-78.871],[26.837,-78.575],[26.052,-78.575],[25.267,-78.675],[24.876,-78.575],[24.484,-78.379],[24.087,-78.083],[23.691,-78.182],[23.302,-78.379],[22.906,-78.182],[22.516,-77.986],[22.516,-77.593],[22.121,-77.2],[22.023,-76.804],[21.632,-76.903],[21.236,-76.903],[20.842,-77.2],[20.842,-77.593],[20.449,-77.593],[20.056,-77.593],[19.661,-77.398],[19.565,-77.005],[19.957,-76.707],[20.154,-76.707],[20.353,-76.707],[20.747,-76.411],[19.957,-76.411],[18.681,-76.017],[18.288,-75.823],[18.383,-75.43],[19.074,-74.838],[19.462,-74.838],[19.858,-74.738],[20.449,-74.738],[21.039,-74.738],[21.632,-75.527],[22.121,-75.921],[22.71,-75.721],[23.103,-75.527],[23.495,-75.233],[23.595,-74.838],[23.595,-74.442],[23.987,-74.249],[24.384,-74.056],[24.773,-73.76],[24.579,-73.366],[23.495,-72.876],[23.103,-72.675],[23.103,-72.283],[23.004,-71.597],[22.245,-71.597],[21.725,-71.694],[21.333,-71.79],[21.137,-72.185],[21.137,-72.578],[20.842,-72.97],[20.635,-72.97],[20.449,-72.97],[20.449,-73.366],[20.449,-73.76],[19.661,-73.76],[19.074,-72.97],[18.681,-72.675],[18.288,-72.482],[18.288,-72.088],[18.288,-71.694],[18.087,-71.301],[17.797,-70.908],[17.797,-70.513],[17.499,-69.925],[17.598,-69.333],[17.698,-68.94],[17.893,-68.545],[17.598,-68.155],[17.206,-67.763],[17.105,-67.267],[17.598,-66.876],[17.402,-66.484],[17.01,-66.484],[16.023,-66.876],[15.236,-66.876],[14.453,-66.876],[13.958,-66.68],[13.665,-66.288],[13.862,-65.895],[14.549,-65.206],[14.453,-64.814],[14.057,-64.714],[12.684,-65.598],[12.289,-65.895],[11.893,-66.384],[11.504,-66.484],[11.111,-66.288],[10.225,-65.794],[9.833,-65.5],[9.438,-65.402],[9.044,-65.206],[8.751,-64.814],[8.355,-64.515],[7.177,-64.418],[6.391,-64.319],[5.898,-64.025],[5.26,-63.926],[4.13,-64.221],[3.934,-65.598],[3.143,-65.598],[2.753,-65.402],[2.557,-65.129],[2.165,-65.108],[1.671,-65.206],[0.884,-65.206],[0.049,-65.129],[0.049,-63.926],[-0.762,-63.926],[-1.378,-64.025],[-1.77,-64.319],[-1.966,-65.206],[-2.357,-65.011],[-3.145,-65.011],[-3.145,-65.698],[-3.243,-66.091],[-3.047,-66.484],[-1.499,-66.484],[-0.689,-66.288],[-0.293,-65.992],[0.32,-65.794],[1.105,-65.895],[1.283,-66.68],[1.083,-67.66],[1.283,-68.254],[1.671,-68.841],[1.573,-69.63],[0.811,-69.63],[0.393,-69.433],[0.068,-69.45],[-0.392,-69.433],[-0.784,-69.236],[-0.986,-68.841],[-1.378,-68.449],[-1.572,-68.449],[-1.966,-68.646],[-1.867,-69.433],[-1.473,-69.727],[-1.378,-70.095],[-1.378,-70.708],[-2.163,-70.611],[-2.555,-70.708],[-2.458,-71.204],[-1.966,-71.989],[-1.966,-72.379],[-1.966,-72.775],[-2.26,-73.167],[-2.458,-73.56],[-2.751,-73.953],[-3.145,-73.855],[-3.638,-73.56],[-3.835,-72.775],[-4.52,-72.088],[-4.745,-72.081],[-4.913,-72.088],[-5.409,-71.989],[-5.801,-71.597],[-5.603,-71.004],[-5.603,-70.811],[-5.701,-70.415],[-6.094,-70.315],[-6.486,-70.216],[-7.079,-69.333],[-6.781,-68.352],[-6.486,-67.959],[-6.094,-67.855],[-5.701,-67.562],[-5.801,-67.173],[-6.044,-66.778],[-5.897,-66.384],[-5.897,-65.992],[-6.044,-65.352],[-6.094,-65.108],[-5.996,-64.714],[-5.701,-64.319],[-5.409,-63.512],[-5.409,-62.746],[-5.996,-62.746],[-6.486,-62.648],[-7.471,-62.551],[-7.964,-62.551],[-8.65,-62.648],[-9.635,-62.648],[-10.422,-62.551],[-10.617,-62.159],[-11.009,-61.959],[-11.895,-61.763],[-11.991,-61.369],[-12.19,-60.977],[-13.073,-60.29],[-13.469,-60.587],[-13.887,-60.587],[-14.254,-60.587],[-14.648,-60.485],[-15.042,-60.558],[-15.042,-59.796],[-14.254,-59.406],[-14.254,-58.129],[-14.841,-58.129],[-15.236,-57.93],[-15.63,-57.832],[-16.025,-57.536],[-16.81,-56.943],[-17.206,-56.554],[-17.598,-56.262],[-17.99,-56.262],[-19.27,-56.262],[-19.27,-53.898],[-20.743,-53.801],[-21.137,-53.702],[-21.529,-53.605],[-21.529,-52.423],[-22.979,-52.423],[-23.396,-52.618],[-23.749,-52.608],[-24.182,-52.618],[-24.678,-52.72],[-24.678,-53.115],[-25.163,-53.502],[-25.754,-53.412],[-25.754,-52.227],[-24.971,-51.936],[-25.361,-51.145],[-25.163,-50.753],[-25.163,-50.263],[-26.421,-50.166],[-26.835,-50.361],[-27.232,-50.463],[-27.625,-50.361],[-28.116,-50.361],[-28.509,-50.657],[-28.706,-51.049],[-29.493,-50.753],[-29.689,-50.753],[-29.884,-50.753],[-30.671,-50.463],[-31.064,-50.166],[-31.163,-49.772],[-30.965,-49.379],[-30.754,-49.366],[-30.573,-49.379],[-30.281,-48.985],[-29.884,-48.786],[-29.493,-48.593],[-28.986,-48.58],[-28.607,-48.593],[-28.214,-48.593],[-27.823,-48.296],[-27.428,-48.002],[-27.033,-47.805],[-26.738,-47.411],[-25.956,-46.72],[-25.956,-44.66],[-25.659,-44.267],[-25.267,-44.07],[-24.482,-43.674],[-24.182,-43.087],[-24.281,-42.497],[-24.482,-41.809],[-24.182,-40.43],[-24.182,-39.843],[-24.182,-39.251],[-25.267,-38.367],[-25.361,-37.974],[-25.754,-37.778],[-26.936,-37.288],[-27.331,-37.288],[-27.823,-37.482],[-28.509,-37.679],[-28.902,-37.778],[-29.884,-37.778],[-30.281,-38.073],[-30.671,-38.469],[-31.09,-38.563],[-34.579,-38.563],[-35.587,-38.661],[-36.081,-38.661],[-36.667,-39.056],[-36.866,-39.056],[-37.259,-38.856],[-37.259,-38.469],[-37.456,-38.073],[-39.423,-38.073],[-39.618,-37.679],[-39.327,-37.288],[-38.93,-36.991],[-38.833,-36.402],[-38.93,-35.81],[-39.227,-34.827],[-39.128,-34.141],[-38.93,-33.743],[-38.635,-33.331],[-38.635,-31.018],[-38.734,-30.598],[-39.128,-30.305],[-39.327,-29.911],[-39.815,-28.731],[-39.815,-28.339],[-39.52,-27.947],[-39.327,-27.549],[-39.03,-27.061],[-39.03,-26.668],[-39.03,-26.275],[-39.327,-25.88],[-39.423,-25.266],[-39.327,-24.307],[-38.168,-24.307],[-37.259,-24.505],[-36.866,-24.307],[-36.572,-23.916],[-35.982,-23.817],[-34.999,-24.114],[-34.603,-23.817],[-34.211,-23.621],[-33.818,-23.521],[-33.423,-23.326],[-33.132,-22.933],[-32.835,-22.539],[-32.736,-22.146],[-32.342,-21.85],[-32.146,-22.345],[-32.538,-22.439],[-32.146,-22.636],[-31.749,-22.636],[-31.359,-22.636],[-30.573,-22.832],[-30.18,-23.128],[-29.396,-23.721],[-29.003,-24.114],[-28.214,-24.406],[-27.833,-24.405],[-27.428,-24.406],[-27.033,-24.601],[-26.544,-24.798],[-25.956,-25.586],[-24.773,-26.473],[-23.986,-26.668],[-23.296,-26.673],[-22.708,-26.668],[-21.923,-26.764],[-21.923,-28.068],[-22.12,-28.437],[-22.512,-28.832],[-22.905,-29.224],[-22.809,-29.814],[-22.512,-30.203],[-22.02,-31.092],[-21.824,-31.484],[-21.63,-31.877],[-21.43,-32.27],[-21.201,-32.281],[-21.038,-32.27],[-20.251,-32.37],[-19.956,-32.762],[-19.66,-33.154],[-19.27,-33.253],[-19.072,-33.253],[-18.875,-33.253],[-18.579,-33.647],[-18.361,-33.652],[-18.185,-33.647],[-17.794,-33.843],[-17.12,-33.855],[-16.615,-33.843],[-15.827,-33.944],[-15.827,-35.122],[-15.827,-35.517],[-15.926,-36.3],[-15.852,-36.72],[-15.926,-37.482],[-15.732,-37.875],[-14.943,-38.171],[-14.352,-38.266],[-13.37,-38.073],[-13.173,-38.073],[-12.979,-38.073],[-11.796,-37.482],[-10.79,-37.383],[-10.224,-37.383],[-9.831,-37.482],[-9.438,-37.406],[-9.438,-38.073],[-9.339,-38.469],[-8.944,-38.762],[-8.65,-39.151],[-8.254,-39.151],[-7.862,-39.151],[-7.079,-39.151],[-6.688,-39.447],[-6.292,-39.744],[-5.897,-40.04],[-5.504,-40.43],[-5.115,-40.333],[-4.326,-39.941],[-3.638,-39.251],[-2.948,-38.073],[-2.852,-37.679],[-2.555,-37.288],[-2.26,-36.895],[-1.867,-36.697],[-1.473,-36.5],[-1.081,-36.3],[-0.689,-35.909],[-0.589,-35.517],[-0.1,-35.221],[0.195,-34.827],[0.59,-34.63],[0.986,-34.239],[1.378,-34.039],[1.772,-33.647],[2.262,-33.451],[3.046,-33.154],[3.264,-33.161],[3.54,-33.154],[3.934,-32.958],[4.13,-32.566],[5.112,-31.484],[5.51,-31.387],[5.898,-31.191],[6.293,-30.995],[6.785,-30.203],[7.57,-29.617],[7.764,-29.224],[7.867,-28.832],[7.961,-28.019],[7.867,-27.255],[5.898,-26.863],[5.605,-26.473],[5.211,-26.371],[4.424,-26.371],[3.906,-26.473],[1.184,-26.445],[1.283,-25.979],[2.065,-25.586],[2.458,-25.291],[2.654,-24.895],[2.85,-24.505],[3.245,-24.209],[3.465,-24.203],[3.639,-24.209],[4.449,-24.012],[6.785,-24.012],[6.785,-25.489],[7.276,-25.684],[8.06,-26.175],[8.456,-26.568],[8.658,-26.562],[8.846,-26.568],[8.945,-26.962],[9.142,-27.747],[9.242,-28.143],[9.634,-28.437],[9.854,-28.442],[10.029,-28.437],[10.715,-28.731],[10.815,-29.128],[10.715,-29.522],[10.715,-29.962],[10.225,-29.911],[9.438,-29.911],[9.044,-29.962],[9.044,-30.401],[9.142,-30.995],[10.694,-30.995],[11.504,-30.701],[11.893,-30.498],[12.289,-30.109],[12.684,-30.305],[12.19,-31.484],[12.19,-32.27],[11.603,-32.37],[11.408,-32.369],[11.21,-32.37],[10.815,-32.666],[10.421,-32.958],[10.029,-33.351],[9.634,-33.451],[9.242,-33.843],[9.048,-33.837],[8.846,-33.843],[8.555,-34.239],[8.456,-34.63],[8.24,-34.636],[8.06,-34.63],[7.858,-34.63],[7.667,-34.63],[7.276,-34.827],[6.882,-34.925],[6.686,-35.322],[6.293,-35.616],[6.076,-35.621],[5.898,-35.616],[5.51,-35.81],[5.311,-35.811],[5.112,-35.81],[5.112,-36.203],[5.409,-36.596],[5.307,-36.991],[5.014,-37.482],[4.621,-37.778],[3.443,-38.171],[3.245,-38.563],[3.048,-38.557],[2.85,-38.563],[2.753,-38.956],[2.753,-39.843],[1.866,-39.941],[0.986,-39.89],[0.986,-40.923],[1.378,-41.317],[1.772,-41.609],[1.772,-41.809],[1.671,-42.203],[1.283,-42.592],[1.573,-43.185],[2.165,-43.283],[2.753,-43.185],[3.143,-42.891],[3.245,-42.397],[3.443,-42.004],[3.641,-41.998],[3.835,-42.004],[4.227,-41.906],[4.621,-41.609],[4.915,-41.218],[5.307,-41.022],[5.529,-41.016],[5.704,-41.022],[6.098,-40.725],[6.391,-40.236],[6.686,-39.352],[6.889,-39.345],[7.079,-39.352],[7.867,-38.762],[8.258,-38.563],[8.555,-38.171],[9.438,-37.778],[9.707,-37.778],[10.225,-37.679],[10.32,-37.288],[10.616,-36.895],[11.01,-36.697],[11.797,-36.3],[12.98,-35.322],[13.764,-35.122],[14.159,-34.827],[14.255,-34.435],[14.549,-34.039],[14.354,-33.647],[13.958,-33.351],[13.958,-32.958],[13.862,-32.37],[13.958,-31.779],[14.648,-31.092],[14.549,-30.305],[15.043,-29.522],[15.236,-29.128],[15.471,-29.113],[15.633,-29.128],[16.023,-29.128],[16.811,-28.925],[16.811,-27.357],[15.828,-27.357],[15.828,-27.747],[15.436,-27.849],[15.043,-27.65],[15.138,-27.255],[15.436,-26.863],[16.023,-26.079],[16.415,-25.88],[16.811,-25.489],[17.206,-25.783],[17.303,-26.175],[17.698,-26.473],[17.797,-26.079],[17.893,-25.684],[18.681,-25.195],[18.579,-24.307],[18.579,-23.916],[19.074,-23.521],[19.957,-23.521],[20.353,-23.521],[20.747,-23.621],[20.939,-24.012],[21.333,-24.307],[21.333,-24.703],[21.333,-25.093],[21.137,-25.489],[21.434,-25.88],[21.824,-26.079],[22.217,-25.979],[22.612,-25.586],[23.027,-25.586],[23.398,-25.586],[23.888,-25.684],[23.888,-26.568],[23.987,-26.962],[23.938,-27.158],[24.773,-27.158],[25.168,-27.255],[24.876,-27.747],[24.484,-28.042],[24.087,-28.437],[23.595,-28.437],[23.691,-27.65],[23.595,-27.255],[23.103,-27.255],[22.71,-27.357],[22.413,-27.849],[22.023,-28.143],[22.023,-28.535],[21.928,-28.925],[21.824,-29.32],[21.632,-29.716],[21.236,-29.814],[21.02,-29.818],[20.842,-29.814],[20.449,-30.203],[20.056,-30.498],[20.056,-30.895],[20.056,-31.289],[20.353,-31.678],[20.747,-31.484],[21.137,-31.191],[21.533,-30.895],[22.315,-30.895],[22.71,-30.895],[23.103,-30.895],[23.495,-31.191],[23.202,-31.584],[22.807,-31.678],[23.103,-32.073],[23.495,-32.47],[24.384,-32.47],[25.267,-32.47],[25.66,-32.37],[26.052,-32.173],[26.445,-31.779],[26.618,-31.785],[26.837,-31.779],[27.232,-31.678],[27.333,-31.289],[27.333,-30.895],[27.721,-30.795],[28.115,-30.498],[28.017,-30.109],[27.626,-30.009],[27.232,-29.617],[27.626,-28.635],[28.411,-28.24],[28.708,-27.136],[28.609,-26.962],[28.708,-26.568],[28.609,-26.175],[28.609,-25.844],[28.755,-25.439],[29.048,-25.046],[29.198,-24.798],[29.344,-24.601],[29.544,-24.505],[29.689,-24.307],[29.934,-24.114],[30.133,-23.964],[30.332,-23.672],[30.281,-23.326],[30.083,-23.128],[29.987,-22.933],[29.889,-22.684],[29.889,-22.316],[29.934,-21.753],[30.035,-21.553],[30.23,-21.357],[30.428,-21.211],[30.82,-21.655],[30.868,-21.85],[30.967,-22.146],[31.016,-22.345],[31.016,-22.933],[30.967,-23.128],[31.016,-23.721],[31.361,-23.721],[31.557,-23.672],[31.755,-23.521],[31.905,-23.326],[32.1,-23.176],[32.54,-22.785],[32.738,-22.587],[32.936,-22.345],[33.082,-22.146],[33.281,-22.049],[33.475,-22.049],[33.868,-22.049],[34.259,-22.001],[34.456,-21.85],[34.876,-21.8],[35.096,-21.8],[35.293,-21.903],[35.488,-22.049],[35.441,-22.232],[35.488,-22.439],[35.392,-22.992],[35.441,-23.274],[35.635,-23.469],[35.737,-23.672],[36.031,-23.865],[36.547,-23.916],[37.109,-23.817],[37.311,-23.672],[37.656,-23.274],[37.85,-23.128],[38.243,-22.785],[38.538,-22.587],[38.685,-22.394],[38.883,-22.245],[39.079,-22.197],[39.337,-22.098],[42.004,-22.098],[41.98,-22.785],[41.98,-23.028],[41.928,-23.326],[42.004,-23.806],[42.324,-23.721],[42.52,-23.768],[42.719,-23.817],[43.01,-23.817],[43.699,-23.672],[43.993,-23.274],[44.19,-23.176],[44.612,-23.128],[44.828,-23.128],[45.027,-23.227],[45.128,-23.423],[45.324,-23.569],[45.52,-23.521],[45.665,-23.128],[45.861,-23.028],[45.911,-22.832],[45.911,-22.439],[45.861,-21.8],[45.714,-21.553],[45.467,-21.012],[45.37,-20.239],[45.37,-19.884],[45.467,-19.586],[45.566,-19.39],[45.616,-19.196],[45.812,-18.901],[45.861,-18.608],[45.812,-18.263],[45.616,-18.064],[45.422,-17.916],[45.324,-17.719],[45.324,-17.277],[45.224,-17.033],[45.076,-16.836],[44.732,-16.348],[44.582,-15.953],[44.141,-15.656],[43.897,-15.51],[43.699,-15.363],[43.501,-15.165],[43.456,-14.969],[43.405,-14.575],[43.061,-13.644],[42.911,-13.1],[42.57,-12.607],[42.372,-12.462],[42.176,-12.264],[41.98,-12.119],[41.781,-12.119],[41.579,-12.121],[41.336,-12.119],[40.945,-11.97],[40.749,-11.923],[40.622,-11.922],[40.505,-11.923],[40.307,-11.873],[40.113,-11.774],[39.865,-11.58],[39.522,-11.626],[39.326,-11.774],[38.883,-12.119],[38.685,-12.119],[38.389,-12.119],[38.046,-12.166],[37.753,-12.214],[37.26,-12.264],[37.013,-12.361],[36.794,-12.361],[36.572,-12.361],[36.324,-12.214],[36.767,-12.019],[37.408,-11.774],[38.046,-11.677],[38.438,-11.626],[38.438,-11.233],[38.438,-10.985],[38.732,-10.644],[38.831,-10.447],[38.883,-10.102],[38.857,-9.896],[38.883,-9.708],[38.831,-9.462],[38.831,-8.677],[39.126,-8.285],[39.816,-7.595],[40.01,-7.204],[40.21,-6.807],[40.505,-6.415],[40.801,-6.024],[41.19,-5.626],[41.586,-5.432],[42.027,-5.432],[42.473,-5.432],[42.863,-5.726],[42.863,-6.122],[43.255,-6.513],[43.456,-6.122],[44.339,-4.939],[44.536,-4.548],[44.928,-4.256],[45.324,-4.057],[45.616,-3.66],[45.714,-2.78],[45.812,-2.386],[46.108,-1.991],[46.796,-1.109],[47.188,-0.714],[47.29,-0.027],[47.29,0.169],[47.188,0.565],[47.385,1.843],[47.978,2.138],[48.367,2.333],[48.76,2.433],[49.156,2.725],[49.354,3.117],[49.547,3.514],[50.333,4.396],[50.728,5.185],[51.122,5.97],[51.516,7.2],[51.516,7.64],[51.22,8.037],[51.22,8.429],[51.419,9.218],[51.809,9.509],[52.204,9.707],[52.596,10.101],[53.385,10.788],[53.775,11.084],[53.973,11.475],[54.365,11.869],[54.758,12.753],[55.053,13.243],[55.544,13.638],[56.333,14.817],[57.513,16],[57.71,16.392],[58.001,16.882],[58.199,17.277],[58.199,18.06],[58.199,18.456],[58.397,18.848],[58.888,19.662],[58.888,23.051],[59.871,24.06],[60.656,24.647],[61.445,24.647],[62.626,24.553],[63.018,24.158],[63.508,23.374],[64.298,22.882],[64.715,22.782],[67.118,22.782],[67.539,23.077],[67.738,23.078],[67.932,23.077],[68.329,22.29],[68.621,21.899],[69.115,21.604],[69.507,21.208],[70.682,21.013],[71.077,20.711],[71.482,20.709],[71.868,20.711],[72.257,20.421],[72.652,20.421],[73.436,20.324],[73.832,19.93],[74.225,19.538],[74.62,19.145],[75.009,19.145],[76.191,19.145],[76.191,18.456],[76.191,18.06],[76.484,17.67],[76.688,17.664],[76.879,17.67],[77.273,17.374],[77.665,17.277],[78.059,17.085],[78.453,17.085],[78.846,16.981],[81.599,17.085],[81.599,16.49],[81.698,16.097],[81.698,15.708],[82.188,14.915],[84.157,14.915],[84.251,14.523],[84.451,14.131],[84.743,13.341],[85.135,13],[85.529,13.049],[85.924,13.049],[86.316,13],[86.514,12.26],[86.71,11.869],[86.71,11.475],[87.005,11.084],[87.203,10.691],[87.793,10.392],[87.988,10.392],[88.28,10.788],[88.674,10.886],[88.674,9.707],[88.973,8.429],[89.072,7.939],[89.169,7.546],[89.561,7.444],[89.751,7.446],[89.954,7.444],[90.742,7.151],[90.544,6.268],[90.152,5.874],[89.977,5.88],[89.757,5.874],[89.365,5.674],[88.973,5.478],[88.973,5.088],[88.87,4.591],[88.674,4.2],[88.28,3.81],[87.497,3.514],[87.105,3.514],[86.71,3.318],[86.71,2.92],[87.005,2.138],[86.904,1.744],[86.514,1.549],[86.096,1.353],[85.333,1.353],[85.333,2.239],[84.743,2.92],[84.548,2.038],[84.548,1.644],[84.157,1.448],[83.861,1.055],[83.861,-0.913],[83.565,-1.305],[83.172,-1.599],[82.971,-1.203],[82.579,-1.01],[82.188,-0.812],[81.698,-0.027],[81.698,1.156],[81.599,1.939],[80.811,1.843],[79.928,1.843],[79.536,1.843],[79.042,1.644],[78.306,1.448],[78.059,1.448],[77.665,1.744],[77.273,1.939],[76.879,2.333],[76.484,2.725],[75.703,2.433],[75.302,2.038],[74.913,1.644],[74.913,1.253],[74.913,0.861],[75.302,0.758],[76.29,0.37],[76.484,0.37],[77.074,0.665],[77.714,0.665],[78.353,0.665],[78.749,0.466],[78.749,0.074],[78.353,-0.223],[77.96,-0.223],[77.197,-0.125],[76.78,-0.125],[76.387,-0.223],[75.994,-0.223],[75.009,-0.613],[74.339,-0.615],[73.733,-0.613],[73.341,-0.714],[72.849,-0.714],[72.849,-2.679],[72.553,-3.072],[72.161,-3.174],[71.766,-3.565],[71.374,-3.66],[70.98,-3.66],[70.586,-3.861],[69.999,-4.057],[69.999,-4.548],[69.999,-5.334],[69.507,-6.122],[69.115,-6.513],[69.115,-6.908],[69.115,-7.3],[68.918,-7.791],[68.918,-8.432],[68.918,-9.07],[69.115,-9.462],[69.507,-9.856],[70.096,-9.856],[71.077,-9.759],[72.161,-8.777],[72.553,-8.48],[73.244,-7.696],[73.632,-7.3],[74.225,-6.122],[74.62,-5.726],[75.801,-5.136],[76.584,-4.451],[77.37,-3.861],[78.156,-3.369],[78.664,-3.356],[79.042,-3.369],[79.432,-3.268],[80.958,-3.072],[81.203,-3.072],[81.599,-3.072],[81.992,-3.268],[82.391,-3.268],[82.777,-3.268],[83.172,-3.465],[83.565,-3.465],[84.35,-3.369],[84.743,-3.072],[85.333,-2.386],[85.333,-1.991],[85.432,-1.599],[85.629,-1.203],[86.023,-1.01],[86.538,-0.913],[88.555,-0.913],[88.973,-1.01],[89.465,-1.01],[89.855,-0.714],[90.053,-0.321],[90.448,-0.125],[90.964,0.074],[92.979,0.074],[93.814,0.37],[97.132,0.37],[99.587,-0.027],[101.826,-0.027],[102.641,0.565],[103.027,0.861],[103.424,1.156],[103.915,1.939],[104.31,2.239],[104.703,2.333],[105.098,2.629],[105.292,3.024],[105.391,3.81],[105.65,3.824],[106.077,3.909],[106.273,4.299],[106.57,4.692],[106.962,4.692],[107.354,4.692],[108.142,4.791],[108.536,4.989],[108.927,5.088],[109.816,5.478],[108.633,5.478],[107.846,5.674],[107.454,5.874],[107.454,6.268],[107.648,6.662],[108.046,6.759],[108.436,6.856],[108.73,7.25],[109.026,7.64],[109.816,8.331],[110.305,8.624],[110.699,9.018],[111.092,9.018],[111.485,9.018],[111.878,8.726],[112.176,8.331],[112.957,8.135],[113.254,7.64],[113.647,7.25],[114.629,7.64],[114.827,8.037],[115.025,9.018],[115.123,9.804],[115.517,10.691],[115.613,11.084],[115.613,11.915],[115.613,12.753],[115.517,13.243],[115.517,14.62],[115.517,15.015],[115.808,15.804],[115.91,16.196],[115.91,17.473],[116.499,18.259],[116.796,18.651],[117.186,19.043],[117.482,19.434],[117.482,19.833],[117.678,20.711],[117.775,21.109],[118.071,21.505],[118.267,21.994],[118.267,22.39],[118.464,22.782],[118.66,23.175],[119.051,23.568],[119.249,23.964],[119.644,24.354],[119.746,25.14],[119.746,25.532],[119.644,26.323],[120.04,27.699],[120.431,28.092],[120.626,28.484],[120.921,28.876],[121.806,30.644],[122.396,31.827],[122.495,32.221],[122.691,32.611],[123.082,32.907],[123.673,33.302],[124.267,33.204],[124.658,32.907],[124.756,32.514],[124.949,32.121],[125.641,30.939],[125.839,30.547],[126.022,30.548],[126.23,30.547],[126.621,30.448],[127.021,30.055],[127.413,29.759],[127.511,29.37],[127.704,28.979],[128.098,28.288],[128.001,27.303],[128.296,26.91],[128.589,26.125],[128.788,25.338],[128.788,24.553],[128.691,23.764],[128.788,23.397],[128.788,21.208],[128.691,19.515],[128.887,19.145],[129.079,18.752],[130.259,18.651],[131.441,18.456],[131.736,17.67],[131.931,17.277],[132.322,16.882],[132.72,16.783],[133.113,16.686],[133.507,16.392],[133.801,16],[134.191,15.804],[134.589,15.708],[134.879,15.309],[135.274,14.523],[135.668,14.131],[135.962,13.738],[136.259,13.341],[137.043,12.949],[137.339,12.56],[137.538,12.166],[137.733,11.77],[137.957,11.76],[138.124,11.77],[138.298,11.776],[138.52,11.77],[138.913,11.475],[138.913,11.084],[139.6,10.493],[139.993,10.493],[140.251,10.489],[140.783,10.392],[141.072,10],[141.371,8.429],[141.467,7.64],[143.311,7.64],[143.728,7.84],[144.319,7.939],[144.517,7.939],[144.91,7.64],[145.103,7.642],[145.301,7.64],[145.696,7.25],[146.092,7.151],[146.483,6.856],[146.683,6.461],[148.646,6.461],[148.646,5.281],[149.334,5.385],[149.501,5.366],[149.727,5.385],[150.019,5.772],[150.116,6.167],[150.316,6.559],[150.712,6.759],[150.905,7.151],[151.199,8.037],[151.103,8.798],[151.298,9.218],[151.498,9.61],[151.889,9.804],[151.99,10.199],[152.774,10.788],[153.168,11.084],[153.464,11.475],[153.758,11.869],[153.758,12.26],[153.66,12.655],[153.658,13.441],[153.66,13.441],[154.447,13.341],[154.838,13.538],[155.233,13.638],[155.233,14.033],[155.134,14.817],[154.939,15.211],[154.838,16.392],[155.233,17.964],[155.626,18.259],[156.021,18.556],[156.806,18.556],[157.197,18.556],[157.594,18.556],[157.788,18.16],[158.184,18.06],[158.576,17.867],[159.462,17.67],[159.462,17.277],[159.462,16.882],[159.756,16.49],[160.938,16.981],[161.132,17.374],[161.329,17.767],[161.624,18.556],[161.92,19.833],[162.016,20.225],[162.309,20.619],[162.704,20.815],[162.803,21.208],[162.113,22.583],[162.309,22.979],[162.507,23.374],[162.899,23.667],[163.493,24.453],[163.886,24.749],[164.081,25.338],[163.886,26.125],[164.176,26.91],[163.59,27.796],[163.196,27.991],[162.803,28.092],[162.607,28.484],[162.507,28.876],[162.507,30.055],[162.507,30.448],[162.309,31.235],[162.309,31.878],[162.408,32.907],[162.704,33.302],[163.098,33.5],[163.493,33.596],[164.176,34.384],[164.965,35.069],[165.36,35.167],[165.654,35.56],[165.947,35.956],[165.947,36.843],[166.145,37.626],[166.639,38.412],[166.735,38.904],[167.126,39.297],[167.421,40.208],[167.421,42.323],[167.618,42.738],[167.719,43.228],[168.012,43.622],[168.405,44.019],[168.801,44.213],[170.077,45],[170.865,45.294],[171.358,46.08],[171.553,46.472],[171.947,46.574],[172.339,46.672],[172.831,46.868],[173.517,47.064],[173.712,47.064],[174.11,46.772],[173.613,45.978],[173.42,45.588],[173.027,45.492],[172.537,44.707],[172.537,43.818],[172.436,43.426],[172.436,42.252],[172.339,41.853],[172.142,41.456],[171.749,41.064],[171.749,39.885],[171.749,39.495],[171.65,39.102],[171.65,38.708],[171.553,38.217],[171.553,37.431],[170.373,37.33],[169.98,37.038],[169.684,36.645],[169.29,36.447],[168.897,36.052],[168.111,35.756],[167.9,35.764],[167.618,35.756],[166.933,35.167],[166.639,34.775],[166.538,34.384],[166.538,33.596],[166.538,33.204],[166.441,32.809],[166.045,32.611],[165.654,32.415],[165.559,31.631],[165.559,31.235],[165.559,30.842],[165.162,30.744],[164.771,30.547],[164.473,30.448],[164.473,28.457],[165.261,27.205],[165.847,26.028],[166.045,25.436],[165.847,24.647],[165.947,24.06],[166.343,23.764],[166.639,23.273],[167.029,23.374],[167.421,23.667],[167.618,24.06],[168.012,24.354],[168.212,25.14],[168.602,25.436],[169.191,25.633],[169.392,25.633],[169.785,25.436],[170.175,25.235],[170.764,25.929],[171.358,26.713],[171.65,27.597],[172.043,28.383],[172.537,29.172],[173.223,29.858],[173.449,29.866],[173.613,29.858],[174.009,29.96],[174.405,30.055],[174.795,30.154],[175.094,30.547],[174.699,31.331],[174.6,32.121],[175.189,33.792],[175.485,33.399],[176.17,32.611],[176.567,32.318],[176.96,31.927],[177.451,31.531],[177.842,31.235],[178.04,30.842],[178.335,30.448],[178.434,30.055],[178.532,29.662],[178.925,29.269],[179.517,29.37],[180.301,29.37],[180.79,29.075],[181.678,28.185],[182.171,27.796],[182.564,27.699],[182.956,27.402],[183.055,27.009],[183.154,26.223],[183.154,24.303],[183.154,22.882],[183.154,21.994],[182.564,20.711],[182.363,19.833],[182.363,18.948],[181.386,18.948],[180.991,18.752],[180.693,18.356],[180.107,17.473],[180.107,17.085],[179.712,16.981],[179.318,16.686],[178.532,16.097],[178.04,15.804],[177.842,15.412],[177.451,15.112],[177.35,14.327],[177.35,13.934],[176.96,13.638],[176.96,13],[176.96,12.36],[177.056,11.869],[177.451,11.574],[177.842,11.281],[178.236,11.084],[178.236,10.588],[178.335,10.101],[178.532,9.509],[178.631,9.018],[178.925,8.525],[179.318,8.429],[179.592,8.417],[179.809,8.429],[180.693,8.037],[180.891,8.037],[181.087,8.037],[181.386,7.64],[181.777,7.64],[182.587,7.64],[182.956,7.741],[184.137,7.668],[184.137,8.135],[184.04,8.525],[184.04,10.691],[183.743,11.084],[183.35,11.281],[183.154,11.281],[182.956,11.281],[182.564,11.574],[182.269,11.967],[181.874,12.56],[181.975,13.148],[182.072,13.638],[182.467,13.837],[185.609,13.837],[185.809,12.46],[185.905,12.065],[186.201,11.673],[186.201,11.231],[186.201,10.788],[185.462,10.493],[185.462,8.135],[186.298,8.135],[186.693,8.135],[187.087,7.939],[187.478,7.546],[187.873,7.25],[188.655,7.051],[189.491,6.956],[189.939,6.956],[190.332,7.051],[191.113,7.151],[191.508,7.151],[191.902,6.956],[192.197,6.559],[192.395,6.268],[193.18,6.167],[193.572,5.97],[193.957,5.97],[194.361,5.97],[194.754,5.874],[194.926,5.88],[195.147,5.874],[195.443,5.478],[195.835,5.185],[196.228,5.088],[196.62,4.791],[197.012,4.591],[197.213,4.2],[197.509,3.81],[197.902,3.514],[198.29,3.221],[198.686,3.221],[198.887,3.221],[199.079,3.221],[199.866,2.725],[200.064,2.333],[200.457,2.138],[200.848,1.744],[201.145,1.353],[201.438,0.958],[201.537,0.565],[201.734,0.169],[202.519,-0.613],[203.11,-1.794],[203.209,-2.187],[203.602,-2.586],[203.895,-2.977],[204.391,-3.369],[204.879,-3.66],[205.176,-4.057],[205.274,-4.548],[205.467,-5.039],[205.467,-5.432],[205.566,-5.828],[205.668,-6.217],[206.158,-6.513],[206.844,-7.3],[207.338,-8.381],[207.139,-8.971],[206.844,-9.366],[206.615,-9.377],[206.452,-9.366],[205.615,-9.462],[205.566,-10.25],[205.668,-10.644],[205.615,-11.034],[206.354,-11.034],[206.354,-11.432],[206.061,-11.822],[206.061,-13.001],[206.061,-13.396],[205.668,-13.789],[205.274,-14.084],[205.371,-15.263],[205.077,-16.444],[204.483,-17.231],[203.701,-18.113],[203.306,-18.409],[203.069,-18.402],[202.816,-18.409],[202.421,-18.707],[202.421,-19.1],[202.421,-19.492],[202.616,-19.884],[203.011,-20.276],[203.405,-20.571],[203.405,-21.357],[203.405,-22.146],[204.483,-22.146],[204.879,-22.439],[205.176,-22.832],[205.371,-23.227],[205.598,-23.238],[205.762,-23.227],[206.158,-23.227],[206.55,-23.423],[206.944,-23.423],[208.124,-23.423],[208.223,-24.406],[208.124,-24.749],[206.158,-24.749],[205.96,-25.093],[205.371,-25.88],[203.895,-25.88],[203.798,-25.093],[203.798,-24.703],[203.602,-24.355],[203.209,-24.307],[202.816,-24.406],[202.374,-24.355],[202.374,-26.568],[199.889,-26.568],[199.176,-27.405],[199.277,-28.042],[199.569,-28.437],[199.965,-28.832],[200.358,-28.925],[201.537,-28.925],[201.931,-28.925],[202.324,-29.027],[202.324,-29.421],[202.616,-29.814],[202.91,-30.203],[203.405,-30.305],[203.798,-30.498],[204.251,-30.508],[204.587,-30.498],[204.978,-30.498],[205.274,-30.895],[205.668,-31.289],[205.96,-31.678],[206.452,-32.073],[206.944,-32.47],[207.139,-32.47],[207.536,-32.27],[207.634,-31.877],[207.338,-31.484],[206.944,-31.191],[206.844,-30.401],[206.158,-29.617],[205.861,-29.224],[205.467,-28.925],[205.371,-28.535],[205.467,-28.143],[205.861,-28.339],[206.158,-28.731],[208.098,-28.731],[208.616,-29.027],[209.303,-29.716],[209.598,-30.109],[209.99,-30.203],[210.386,-30.401],[211.566,-30.009],[211.754,-30.01],[211.958,-30.009],[212.746,-29.716],[213.137,-29.522],[213.334,-28.731],[213.334,-28.339],[213.137,-27.947],[212.746,-27.549],[212.746,-27.158],[212.352,-26.568],[212.452,-25.684],[213.238,-25.684],[213.629,-25.88],[214.121,-26.175],[214.512,-26.079],[215.204,-25.391],[215.301,-24.999],[215.499,-24.209],[215.598,-23.817],[215.792,-23.423],[216.186,-22.907],[216.186,-20.791],[215.792,-20.276],[215.4,-19.983],[215.301,-19.586],[215.204,-19.172],[215.204,-18.018],[217.342,-18.018],[218.545,-18.707],[218.939,-18.901],[219.43,-19.196],[219.92,-19.586],[220.314,-19.687],[220.709,-19.884],[221.102,-20.179],[221.34,-20.174],[221.592,-20.179],[221.988,-20.474],[221.988,-20.867],[221.988,-21.655],[222.085,-22.146],[222.184,-22.514],[222.184,-23.721],[221.197,-23.916],[220.902,-24.406],[220.902,-25.291],[220.902,-25.684],[220.512,-25.88],[220.116,-26.175],[219.819,-26.568],[219.43,-26.764],[219.037,-27.061],[218.939,-27.451],[218.642,-27.849],[218.642,-28.437],[218.741,-29.522],[219.037,-29.911],[219.23,-30.305],[219.332,-30.701],[219.546,-30.71],[219.723,-30.701],[220.61,-30.895],[221.006,-30.895],[221.787,-30.995],[221.787,-34.457],[221.889,-34.827],[221.988,-35.221],[222.283,-35.616],[222.465,-35.615],[222.676,-35.616],[223.066,-35.81],[223.855,-36.697],[224.15,-37.089],[224.832,-37.778],[225.228,-37.778],[225.626,-37.778],[227.196,-36.792],[227.587,-36.697],[228.379,-36.991],[228.767,-37.188],[229.061,-37.582],[229.456,-37.875],[229.665,-37.88],[229.853,-37.875],[230.146,-38.266],[230.585,-38.279],[230.931,-38.266],[231.326,-38.469],[231.719,-38.563],[232.111,-38.856],[232.111,-39.251],[233.095,-40.04],[233.488,-40.236],[233.681,-40.629],[234.077,-40.923],[235.157,-42.203],[235.551,-42.497],[236.144,-43.283],[236.238,-43.674],[236.533,-44.07],[236.633,-44.461],[236.928,-45.249],[237.225,-45.642],[238.009,-46.429],[238.405,-46.622],[238.6,-47.017],[238.809,-47.023],[238.995,-47.017],[239.684,-47.805],[240.074,-48.1],[240.27,-48.493],[240.663,-48.887],[241.055,-49.281],[241.451,-49.572],[241.451,-50.361],[241.551,-50.753],[241.551,-51.542],[241.551,-51.936],[241.842,-52.327],[242.139,-52.72],[242.238,-53.801],[242.238,-54.488],[242.139,-54.883],[242.139,-55.276],[242.139,-55.665],[242.431,-56.062],[242.431,-56.457],[242.629,-57.246],[243.027,-57.635],[243.223,-58.028],[243.517,-58.421],[243.908,-58.323],[244.107,-57.93],[244.496,-57.832],[244.894,-57.536],[245.184,-57.143],[245.092,-56.751],[244.894,-56.357],[244.793,-55.768],[245.092,-54.783],[245.092,-53.061],[245.092,-51.739],[245.092,-51.344],[244.793,-50.952],[244.4,-50.657],[244.4,-50.067],[244.4,-49.474],[244.793,-48.296],[245.092,-47.313],[244.993,-46.72],[244.598,-46.429],[244.204,-46.133],[244.254,-45.518],[244.204,-44.953],[244.301,-44.461],[244.254,-44.07],[244.993,-44.07],[245.383,-44.267],[245.482,-44.66],[245.678,-45.052],[245.973,-45.442],[246.168,-45.841],[246.568,-45.642],[246.568,-44.855],[246.954,-44.562],[248.134,-44.267],[248.134,-44.66],[247.936,-45.052],[247.84,-45.442],[247.548,-45.841],[247.055,-46.133],[246.858,-46.527],[246.464,-46.824],[246.271,-47.707],[245.973,-48.1],[245.678,-48.887],[246.366,-49.674],[246.66,-50.067],[246.66,-50.558],[246.66,-50.952],[247.055,-51.145],[247.251,-51.542],[247.548,-51.936],[248.332,-51.638],[249.118,-51.049],[249.512,-51.344],[249.512,-51.739],[249.316,-52.128],[249.316,-52.523],[249.02,-53.309],[249.02,-53.702],[248.923,-54.194],[248.628,-54.587],[248.628,-55.768],[248.628,-56.161],[248.332,-56.554],[248.134,-56.943],[247.447,-57.734],[247.251,-58.129],[247.35,-58.497],[247.251,-58.911],[247.35,-59.307],[247.35,-59.7],[247.447,-60.192],[247.35,-60.611],[247.447,-60.977],[247.251,-61.369],[247.051,-61.422],[246.858,-61.468],[246.761,-62.255],[246.568,-63.041],[246.568,-63.926],[246.464,-64.714],[245.678,-64.714],[245.678,-61.863],[244.993,-61.863],[244.598,-61.666],[244.598,-61.272],[244.696,-60.882],[244.696,-60.485],[244.894,-60.091],[244.894,-59.307],[244.204,-59.307],[244.012,-59.335],[243.813,-59.406],[243.615,-59.796],[243.714,-60.192],[243.813,-60.587],[243.908,-61.369],[243.908,-61.763],[243.615,-62.159],[243.223,-62.551],[242.824,-62.845],[242.623,-62.845],[242.431,-62.845],[241.941,-63.14],[241.746,-63.535],[241.353,-63.633],[240.173,-64.714],[238.995,-64.714],[238.995,-62.746],[237.324,-62.746],[237.324,-63.14],[237.126,-63.535],[236.34,-64.814],[235.848,-64.714],[235.947,-64.319],[235.947,-63.535],[235.848,-63.14],[235.598,-63.14],[235.355,-63.14],[234.96,-63.337],[234.96,-63.733],[235.061,-64.122],[235.254,-64.714],[234.569,-65.598],[234.178,-65.206],[233.783,-65.011],[233.34,-65.011],[232.897,-65.011],[232.504,-65.206],[232.6,-65.992],[232.897,-66.384],[233.194,-66.778],[233.408,-66.783],[233.585,-66.778],[234.373,-67.073],[234.865,-67.267],[235.157,-67.66],[235.551,-68.155],[236.043,-68.646],[236.436,-68.745],[236.829,-68.94],[237.616,-68.94],[237.712,-70.415],[237.912,-70.811],[238.306,-71.105],[238.699,-71.301],[238.894,-71.694],[239.092,-72.185],[239.486,-72.379],[239.876,-72.578],[240.173,-72.97],[240.663,-73.266],[240.858,-73.659],[241.257,-73.76],[241.459,-73.759],[241.65,-73.76],[241.842,-74.152],[242.043,-74.545],[242.139,-74.939],[242.332,-75.33],[242.629,-75.721],[242.824,-76.12],[243.615,-76.509],[244.035,-76.504],[244.496,-76.509],[245.283,-77.005],[245.579,-77.398],[245.973,-77.884],[246.761,-78.379],[247.772,-78.182],[247.936,-78.083],[248.9,-78.279],[249.118,-78.279],[249.512,-78.083],[249.907,-78.083],[250.3,-78.083],[250.887,-78.379],[251.085,-78.379],[251.477,-78.182],[252.462,-77.79],[253.051,-77.884],[253.47,-78.083],[258.358,-78.083],[258.358,-78.871],[258.556,-79.753],[258.949,-80.053],[259.444,-79.656],[260.033,-79.36],[260.816,-79.557],[261.408,-79.36],[261.803,-78.967],[262.196,-78.871],[262.587,-78.575],[262.488,-78.182],[262.098,-77.79],[262.293,-77.101],[262.712,-77.005],[264.629,-77.005],[265.439,-77.593],[265.733,-77.986],[266.126,-78.379],[267.11,-77.491],[267.504,-77.2],[267.504,-77.593],[267.699,-77.986],[268.095,-77.884],[268.512,-77.593],[269.668,-77.593],[269.668,-77.986],[269.374,-78.379],[269.272,-78.724],[268.483,-78.675],[268.095,-78.724],[268.095,-79.78],[268.683,-80.443],[268.889,-80.443],[269.077,-80.443],[269.374,-80.834],[269.571,-81.231],[269.863,-81.621],[270.158,-82.015],[270.551,-82.41],[270.723,-82.403],[270.941,-82.41],[271.337,-82.605],[271.633,-83.098],[272.42,-84.08],[273.503,-85.161],[274.483,-85.554],[275.072,-85.459],[275.662,-85.259],[275.858,-85.259],[276.251,-85.459],[276.646,-85.85],[276.848,-85.85],[277.136,-85.459],[277.433,-85.061],[277.826,-84.965],[278.029,-84.963],[278.22,-84.965],[278.613,-84.671],[278.22,-84.08],[278.22,-83.884],[278.415,-83.488],[278.806,-83.294],[278.806,-82.899],[278.806,-82.115],[279.402,-82.015],[279.795,-82.21],[280.09,-82.605],[280.973,-83.194],[281.366,-83.294],[281.754,-83.589],[282.051,-83.985],[282.447,-84.375],[282.743,-84.768],[283.529,-84.867],[283.691,-84.855],[283.92,-84.867],[284.118,-85.259],[284.314,-85.654],[284.511,-86.048],[284.511,-86.833],[284.71,-87.619],[285.496,-87.619],[286.305,-87.913],[288.245,-87.913],[288.245,-87.325],[287.855,-87.027],[287.068,-86.636],[286.673,-86.44],[286.28,-86.048],[286.085,-85.654],[285.986,-85.259],[285.986,-84.867],[285.887,-84.473],[285.496,-83.589],[285.396,-83.194],[285.298,-82.806],[285.003,-82.41],[284.608,-82.309],[284.118,-82.115],[283.725,-82.015],[283.624,-81.621],[283.529,-81.231],[282.743,-80.639],[281.564,-79.753],[280.285,-78.967],[279.103,-78.083],[278.123,-76.903],[277.826,-76.509],[277.04,-76.017],[276.944,-75.627],[276.548,-75.233],[276.35,-75.232],[276.154,-75.233],[275.908,-75.232],[275.662,-75.233],[275.272,-75.037],[274.876,-74.939],[273.993,-74.545],[273.598,-74.349],[273.423,-74.354],[273.202,-74.349],[272.814,-74.152],[272.517,-73.76],[272.814,-73.167],[272.613,-72.088],[272.223,-71.694],[271.827,-71.4],[271.73,-71.004],[271.434,-70.513],[271.434,-70.022],[271.434,-69.236],[270.941,-68.449],[270.941,-67.562],[270.845,-66.778],[271.142,-62.551],[271.142,-61.959],[270.748,-61.565],[271.777,-59.895],[271.777,-56.751],[272.223,-56.554],[272.613,-56.85],[273.007,-56.943],[273.402,-57.143],[273.796,-57.246],[274.483,-57.246],[274.483,-58.421],[274.483,-58.816],[274.775,-59.208],[275.173,-59.406],[275.465,-59.796],[275.762,-60.192],[275.957,-60.587],[276.154,-60.977],[276.646,-61.369],[276.848,-61.369],[277.236,-61.176],[277.626,-61.176],[278.022,-61.176],[278.318,-61.565],[278.516,-61.938],[278.516,-63.926],[279.202,-64.714],[279.595,-65.011],[282.447,-65.011],[282.447,-66.116],[282.051,-66.876],[281.754,-67.267],[281.754,-67.66],[281.754,-68.058],[282.051,-68.449],[282.447,-68.94],[282.642,-69.333],[283.035,-69.727],[283.624,-69.63],[283.725,-69.236],[284.118,-68.94],[284.905,-68.94],[285.003,-69.727],[284.71,-70.119],[284.017,-70.811],[284.017,-71.204],[284.017,-71.597],[283.821,-71.989],[283.725,-72.824],[283.725,-73.266],[284.118,-73.366],[284.511,-73.56],[284.511,-73.953],[284.217,-74.349],[284.04,-74.354],[283.821,-74.349],[283.504,-73.953],[282.743,-73.953],[282.743,-74.838],[283.136,-75.627],[283.232,-76.017],[283.529,-76.411],[284.314,-76.804],[284.608,-77.2],[284.71,-77.593],[284.905,-77.986],[285.003,-78.379],[285.003,-79.263],[285.102,-79.656],[285.197,-80.053],[285.496,-80.443],[285.887,-80.542],[286.28,-80.639],[287.068,-80.245],[287.267,-79.853],[287.855,-79.557],[288.447,-79.753],[288.74,-80.149],[289.035,-80.542],[289.425,-80.736],[289.819,-80.443],[289.819,-80.053],[290.115,-79.656],[290.313,-79.656],[290.508,-79.656],[290.9,-79.954],[291.296,-80.245],[291.884,-81.03],[292.178,-81.427],[292.769,-81.427],[293.36,-81.427],[293.749,-81.328],[294.168,-81.231],[296.996,-81.231],[296.996,-80.443],[296.996,-80.053],[297.589,-79.36],[297.796,-79.354],[297.98,-79.36],[298.373,-80.937],[298.767,-81.132],[299.157,-81.427],[299.454,-81.82],[300.046,-82.703],[300.441,-83.194],[300.73,-83.589],[301.517,-83.783],[302.008,-83.985],[302.503,-83.985],[303.387,-83.985],[303.78,-84.18],[304.569,-84.473],[305.059,-84.671],[305.254,-85.061],[305.647,-85.459],[306.04,-85.554],[307.22,-86.34],[307.73,-86.352],[308.107,-86.34],[308.595,-86.539],[309.09,-86.731],[309.874,-87.619],[310.269,-87.913],[311.053,-87.913],[312.236,-87.817],[312.629,-87.523],[313.022,-87.129],[313.415,-87.027],[314.421,-86.933],[314.991,-86.933],[315.478,-87.027],[315.478,-88.209],[315.085,-88.503],[314.691,-88.8],[314.594,-89.191],[314.397,-89.584],[314.103,-89.98],[313.809,-90.373],[313.71,-90.766],[313.61,-91.944],[312.527,-92.143],[312.332,-92.534],[312.236,-92.926],[312.038,-93.321],[311.521,-93.421],[309.603,-93.421],[309.09,-93.519],[308.99,-93.911],[309.287,-94.306],[309.68,-94.404],[310.069,-94.795],[310.467,-94.795],[310.86,-94.795],[311.67,-94.203],[314.079,-94.203],[314.892,-94.306],[315.676,-94.306],[316.363,-94.993],[316.758,-95.384],[317.152,-95.585],[317.152,-96.174],[317.152,-96.763],[316.949,-96.82],[316.758,-96.862],[316.658,-97.231],[316.658,-98.43],[317.62,-98.533],[318.623,-97.746],[318.623,-97.352],[318.824,-96.957],[319.41,-96.174],[322.533,-96.174],[323.048,-96.074],[323.54,-95.877],[323.931,-95.585],[323.931,-94.404],[325.777,-94.404],[326.587,-94.01],[326.884,-93.615],[327.671,-93.126],[328.163,-92.926],[328.749,-92.632],[328.947,-92.632],[329.342,-92.926],[329.241,-93.321],[329.241,-94.108],[329.342,-94.5],[329.733,-94.5],[330.42,-94.597],[330.42,-95.779],[330.324,-96.174],[330.324,-96.566],[330.42,-96.957],[330.814,-97.152],[331.6,-96.566],[331.996,-96.27],[332.392,-96.27],[332.782,-96.27],[333.175,-96.469],[333.47,-96.862],[333.866,-97.152],[334.063,-97.546],[334.249,-97.546],[334.454,-97.546],[334.845,-97.844],[335.238,-98.042],[335.337,-98.43],[334.749,-99.025],[334.355,-99.222],[334.021,-99.236],[333.569,-99.32],[333.47,-99.708],[333.175,-100.104],[332.782,-100.4],[331.897,-100.598],[331.504,-100.598],[330.863,-100.4],[329.733,-100.598],[329.342,-100.598],[329.118,-100.595],[328.85,-100.598],[328.457,-100.894],[328.064,-101.284],[327.62,-101.284],[327.178,-101.284],[326.785,-100.993],[327.079,-100.598],[327.285,-100.597],[327.472,-100.598],[327.865,-100.4],[327.865,-99.811],[327.865,-99.613],[327.865,-99.222],[327.225,-98.923],[326.293,-99.613],[326.197,-99.983],[326.197,-102.386],[325.9,-102.76],[325.41,-102.954],[325.014,-103.148],[324.623,-103.148],[324.228,-103.252],[323.344,-103.349],[322.951,-103.741],[322.559,-103.839],[322.066,-104.035],[321.378,-104.334],[320.887,-104.727],[320.493,-105.119],[320.395,-105.512],[319.999,-105.609],[319.512,-105.709],[318.623,-105.808],[318.233,-105.903],[317.348,-105.903],[317.152,-106.987],[315.972,-107.773],[315.478,-108.265],[314.691,-108.462],[314.262,-108.46],[313.809,-108.462],[313.415,-108.658],[312.92,-108.853],[312.527,-109.247],[312.332,-109.246],[312.137,-109.247],[311.741,-109.443],[311.35,-109.443],[310.957,-109.443],[310.566,-109.642],[310.069,-109.835],[309.09,-110.23],[308.694,-110.525],[307.415,-110.525],[306.925,-110.525],[306.533,-110.326],[306.04,-109.936],[305.451,-109.835],[304.368,-110.034],[303.978,-110.034],[303.483,-110.131],[303.094,-110.525],[302.894,-110.525],[302.699,-110.525],[301.814,-110.82],[301.027,-111.313],[300.634,-111.41],[300.046,-111.41],[299.454,-111.41],[299.061,-111.214],[298.668,-110.92],[298.767,-110.525],[298.47,-110.131],[298.277,-109.738],[297.883,-109.346],[298.277,-109.247],[298.668,-108.951],[299.061,-108.757],[299.258,-107.968],[299.258,-107.577],[298.866,-107.183],[298.668,-106.79],[298.251,-106.594],[296.6,-106.594],[296.6,-108.02],[294.59,-108.02],[294.59,-109.346],[294.933,-109.346],[296.111,-109.443],[296.897,-109.936],[296.798,-110.326],[296.405,-110.427],[295.988,-110.575],[293.36,-110.575],[293.36,-109.738],[293.36,-109.346],[293.163,-108.951],[292.769,-108.853],[292.079,-108.658],[291.884,-108.658],[291.491,-108.951],[290.704,-109.247],[288.493,-109.247],[286.772,-109.247],[286.28,-109.247],[285.298,-108.757],[284.71,-108.757],[284.118,-108.757],[283.624,-108.951],[283.232,-109.443],[282.811,-109.543],[282.051,-109.543],[281.952,-108.951],[282.051,-108.561],[282.051,-107.28],[281.465,-107.183],[281.071,-107.379],[281.071,-108.168],[280.973,-108.951],[280.579,-109.247],[280.184,-109.346],[279.795,-109.543],[279.402,-109.738],[279.004,-110.131],[278.71,-110.82],[279.004,-111.803],[279.103,-112.196],[278.908,-112.591],[278.613,-112.984],[278.415,-113.377],[278.022,-113.475],[277.626,-113.772],[277.53,-114.163],[277.136,-114.262],[276.949,-114.261],[276.745,-114.262],[276.348,-114.458],[275.858,-114.554],[275.465,-114.655],[274.68,-114.655],[273.796,-114.752],[273.402,-114.752],[273.007,-114.554],[272.613,-114.36],[272.324,-113.968],[271.827,-113.87],[271.408,-113.772],[270.551,-113.772],[270.059,-113.67],[268.78,-113.67],[267.798,-113.576],[267.404,-113.277],[267.009,-113.277],[266.62,-113.277],[266.225,-113.475],[265.831,-113.576],[265.439,-113.968],[264.947,-114.262],[264.556,-114.36],[263.671,-114.36],[263.178,-114.458],[262.587,-114.554],[261.998,-114.655],[261.507,-114.95],[261.9,-115.344],[261.113,-115.736],[260.719,-116.029],[260.522,-116.421],[259.736,-116.525],[258.853,-116.525],[258.756,-116.917],[259.051,-117.306],[259.832,-117.702],[259.639,-118.096],[259.436,-118.095],[259.246,-118.096],[258.728,-118.344],[253.837,-118.344],[253.741,-117.604],[253.447,-117.212],[252.756,-116.525],[252.361,-116.525],[251.973,-116.525],[251.579,-116.818],[251.772,-117.212],[251.973,-117.702],[251.973,-118.096],[252.264,-118.491],[252.658,-118.585],[252.658,-118.978],[251.873,-118.978],[251.381,-119.177],[250.986,-119.472],[250.77,-119.465],[250.498,-119.472],[249.71,-119.867],[249.316,-119.867],[248.827,-119.766],[247.936,-119.766],[247.154,-119.867],[246.568,-120.159],[246.342,-120.154],[246.071,-120.159],[245.283,-120.455],[244.616,-120.461],[244.007,-120.455],[243.223,-120.652],[242.824,-120.748],[242.431,-120.455],[242.431,-120.064],[242.332,-119.177],[240.197,-119.177],[239.288,-118.978],[239.288,-118.585],[239.486,-118.096],[239.779,-117.702],[240.173,-117.503],[240.566,-117.408],[240.759,-117.015],[241.155,-116.718],[241.257,-116.325],[241.353,-115.908],[241.257,-115.54],[240.858,-115.54],[240.074,-115.736],[239.684,-115.833],[239.428,-115.834],[239.189,-115.833],[238.798,-115.933],[238.405,-116.226],[237.983,-116.325],[237.616,-116.226],[236.633,-116.277],[236.633,-115.736],[237.024,-115.54],[237.421,-115.344],[237.814,-114.85],[237.616,-114.163],[236.733,-114.554],[236.34,-114.85],[235.947,-115.246],[235.551,-115.441],[235.254,-115.833],[235.254,-116.226],[234.865,-116.325],[234.027,-116.325],[233.585,-116.325],[233.194,-116.325],[233.194,-115.933],[232.801,-115.639],[231.572,-115.246],[230.537,-115.736],[229.556,-115.833],[229.16,-115.833],[228.866,-116.226],[228.475,-116.325],[228.082,-116.226],[227.783,-115.833],[226.702,-116.226],[226.115,-115.933],[226.214,-115.05],[226.214,-113.87],[226.115,-113.081],[224.051,-113.081],[223.855,-114.262],[223.464,-114.554],[222.969,-114.95],[222.579,-115.05],[222.184,-115.344],[221.689,-115.639],[221.296,-116.029],[220.61,-116.917],[220.61,-117.114],[220.709,-117.503],[221.102,-117.702],[220.902,-118.195],[220.902,-118.978],[220.902,-119.867],[220.806,-120.748],[220.806,-121.537],[220.61,-121.929],[220.217,-122.225],[219.723,-122.617],[219.23,-122.816],[218.545,-122.914],[217.858,-122.715],[217.66,-122.32],[217.561,-121.929],[216.921,-121.832],[215.792,-122.225],[215.694,-122.715],[215.301,-123.11],[215.006,-123.5],[214.61,-123.5],[214.23,-123.508],[213.629,-123.597],[213.334,-123.994],[212.352,-124.386],[211.66,-124.19],[211.17,-123.994],[210.681,-123.7],[210.188,-123.5],[209.696,-123.11],[210.089,-122.32],[210.386,-121.929],[210.681,-121.537],[210.778,-121.02],[210.681,-120.552],[208.147,-120.552],[207.634,-120.358],[206.503,-120.064],[205.371,-120.358],[204.783,-120.652],[203.895,-120.849],[203.504,-121.24],[202.91,-121.437],[202.519,-121.24],[202.126,-120.849],[201.537,-121.14],[201.438,-121.929],[201.438,-122.715],[200.947,-123.11],[200.556,-123.406],[200.158,-123.406],[199.767,-123.5],[199.373,-123.307],[199.129,-122.914],[198.389,-123.01],[197.998,-123.01],[197.581,-123.207],[195.639,-123.207],[194.85,-123.01],[193.772,-123.207],[193.376,-123.207],[193.277,-122.816],[192.616,-122.816],[192.004,-122.816],[191.61,-122.914],[191.163,-122.864],[191.217,-123.597],[191.113,-123.994],[191.163,-124.386],[190.525,-124.485],[190.132,-124.386],[189.939,-123.994],[188.951,-123.5],[188.365,-123.597],[187.97,-123.994],[188.068,-124.386],[188.857,-124.386],[189.246,-124.386],[189.642,-124.682],[189.835,-125.075],[190.233,-125.172],[190.624,-125.368],[190.92,-125.96],[190.92,-126.153],[190.72,-126.548],[190.132,-126.548],[189.149,-126.452],[188.758,-126.153],[188.365,-125.96],[188.167,-125.469],[187.873,-125.075],[187.478,-124.781],[186.962,-124.386],[184.53,-124.386],[184.137,-124.19],[184.233,-123.797],[184.53,-123.207],[184.53,-123.01],[184.137,-122.816],[183.839,-122.419],[183.204,-122.32],[182.956,-122.32],[182.564,-122.419],[181.777,-122.419],[181.287,-122.225],[180.889,-121.929],[180.107,-121.929],[179.318,-121.929],[178.313,-121.732],[178.137,-121.732],[177.941,-121.832],[178.532,-121.929],[178.827,-122.32],[179.22,-122.617],[179.517,-123.01],[179.908,-123.207],[180.327,-123.213],[180.693,-123.207],[181.087,-123.207],[181.287,-123.597],[181.678,-123.893],[182.467,-124.485],[182.956,-125.27],[183.743,-125.469],[184.137,-125.469],[184.53,-125.566],[184.921,-125.566],[185.313,-125.761],[185.413,-126.153],[185.71,-126.548],[186.493,-126.748],[186.887,-126.748],[187.285,-126.845],[187.772,-126.845],[188.167,-126.942],[188.559,-127.238],[188.951,-127.535],[188.951,-127.924],[189.149,-128.713],[191.113,-128.713],[191.217,-129.304],[191.217,-129.697],[191.408,-130.088],[191.607,-130.088],[191.806,-130.088],[192.004,-130.484],[191.902,-130.877],[191.806,-131.268],[191.605,-131.317],[191.408,-131.367],[191.408,-131.761],[191.217,-132.151],[191.006,-132.153],[190.822,-132.151],[190.822,-132.546],[190.624,-133.038],[190.132,-133.432],[189.741,-133.727],[189.496,-133.726],[189.246,-133.727],[188.857,-133.825],[188.806,-135.005],[185.929,-135.005],[185.118,-135.201],[184.233,-135.299],[183.839,-135.299],[183.447,-135.102],[183.154,-134.713],[182.758,-134.611],[182.072,-135.299],[181.678,-135.398],[181.064,-135.494],[180.499,-135.398],[180.499,-134.216],[179.318,-134.216],[178.925,-134.512],[179.123,-134.906],[179.517,-135.005],[179.908,-135.768],[179.809,-136.185],[177.668,-136.185],[176.863,-136.38],[175.876,-136.38],[175.485,-136.481],[175.683,-136.872],[176.368,-137.562],[176.587,-137.567],[176.764,-137.562],[177.158,-137.854],[177.158,-138.643]],\"c\":true},\"ix\":2},\"nm\":\"Path 30\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":30,\"ty\":\"sh\",\"ix\":31,\"ks\":{\"a\":0,\"k\":{\"i\":[[0,0.444],[0,0.146],[0,0.072],[0,0],[-0.149,0],[-0.03,-0.018],[0,0],[0,0]],\"o\":[[0,-0.145],[0,-0.078],[0,0],[0.147,0],[0.037,0],[0,0],[0,0],[0,-0.444]],\"v\":[[25.267,-112.787],[25.362,-113.178],[25.314,-113.377],[26.151,-113.377],[26.544,-113.475],[26.641,-113.439],[26.641,-111.654],[25.314,-111.654]],\"c\":true},\"ix\":2},\"nm\":\"Path 31\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":31,\"ty\":\"sh\",\"ix\":32,\"ks\":{\"a\":0,\"k\":{\"i\":[[0,0],[0,0],[0,0],[0.295,-0.396],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],\"o\":[[0,0],[0,0],[0,0],[-0.296,0.392],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],\"v\":[[-242.727,-137.658],[-244.988,-137.658],[-246.462,-137.757],[-247.84,-135.69],[-249.315,-134.216],[-251.082,-134.216],[-252.756,-133.531],[-252.068,-132.349],[-250.099,-131.658],[-249.315,-132.643],[-248.136,-131.859],[-247.053,-132.447],[-246.854,-133.239],[-245.578,-133.333],[-245.184,-134.512],[-244.104,-135.299],[-243.219,-134.02],[-242.234,-134.416],[-240.566,-135.005],[-240.076,-136.872],[-239.483,-138.15],[-241.646,-138.643]],\"c\":true},\"ix\":2},\"nm\":\"Path 32\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":32,\"ty\":\"sh\",\"ix\":33,\"ks\":{\"a\":0,\"k\":{\"i\":[[0,0],[0.151,-0.127],[0.368,-0.075],[0,0],[-0.171,0],[-0.27,-0.049],[-0.146,-0.026],[0,0],[-0.05,0],[0.1,0.247],[0.1,0.096],[0.248,0]],\"o\":[[-0.198,0.027],[-0.271,0.219],[0,0],[0.146,-0.045],[0.3,0],[0.146,0.022],[0,0],[0.05,0],[-0.028,-0.268],[-0.048,-0.118],[-0.174,-0.172],[0,0]],\"v\":[[158.576,-137.167],[158.28,-136.773],[157.396,-136.38],[157.396,-135.891],[157.788,-136.086],[158.576,-135.987],[158.969,-135.789],[159.363,-135.789],[159.462,-135.891],[159.363,-136.58],[159.363,-136.968],[158.772,-137.167]],\"c\":true},\"ix\":2},\"nm\":\"Path 33\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":33,\"ty\":\"sh\",\"ix\":34,\"ks\":{\"a\":0,\"k\":{\"i\":[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],\"o\":[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],\"v\":[[-203.503,-136.481],[-203.699,-135.201],[-201.929,-134.216],[-200.257,-133.333],[-198.39,-133.239],[-197.307,-134.317],[-197.406,-135.201],[-198.782,-136.284],[-200.651,-136.284],[-201.73,-136.773]],\"c\":true},\"ix\":2},\"nm\":\"Path 34\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":34,\"ty\":\"sh\",\"ix\":35,\"ks\":{\"a\":0,\"k\":{\"i\":[[0,0],[0,0],[0.146,0],[0.113,0.009],[0.15,-0.029],[0.197,-0.246],[0.077,-0.126],[0.096,-0.12],[0.171,-0.077],[0.159,0.026],[0.113,-0.008],[0.124,-0.021],[0.15,-0.069],[0.17,-0.074],[0.15,-0.03],[0.147,0],[0.298,0],[0.2,-0.05],[0.15,-0.051],[0.123,-0.047],[0.171,-0.021],[0.067,0.006],[0.069,-0.009],[0.544,0.028],[0.295,0],[0,0],[0.149,0],[0.126,0.008],[0.174,-0.026],[0.147,-0.027],[0.22,-0.196],[0.074,-0.128],[0.173,-0.295],[0,0],[0.121,-0.125],[0.122,-0.122],[0.146,-0.099],[0.122,-0.049],[0.196,-0.049],[0.101,-0.071],[0.077,-0.146],[0,-0.125],[0,-0.346],[0.222,0],[0.466,-0.023],[0.146,-0.026],[0,-0.221],[0.2,-0.27],[0.079,-0.172],[0,-0.123],[0,0],[0,0],[0.218,0],[0.155,0.008],[0.255,-0.03],[0.295,-0.145],[0.169,-0.122],[0,-0.343],[-0.047,-0.176],[-0.122,0.021],[-0.271,0],[-0.223,-0.024],[0,-0.245],[0,0],[-0.073,-0.145],[0.294,0.024],[0.296,0],[0.201,-0.028],[0,0],[0.368,-0.051],[0.295,-0.12],[0,-0.123],[0,-0.17],[0.025,-0.121],[0.075,-0.173],[0.028,-0.123],[0.027,-0.147],[0.271,-0.027],[0.124,-0.076],[0.096,-0.149],[0.071,-0.124],[0.047,-0.148],[0,-0.321],[0,-0.15],[0,-0.149],[0,-0.148],[0,0],[-0.07,0.1],[-0.124,0.099],[-0.05,-0.099],[-0.048,-0.097],[-0.073,-0.147],[-0.099,0.198],[-0.025,0.121],[-0.127,-0.075],[-0.172,-0.12],[-0.271,-0.267],[-0.1,-0.124],[0,0],[0,0],[-0.047,-0.148],[0,0],[-0.567,-0.05],[-0.169,-0.025],[-0.347,-0.049],[-0.266,0],[0,0],[-0.146,0],[-0.122,0],[0,0],[0.076,0.098],[0.049,0.148],[0,0.296],[0.061,-0.011],[0.055,0.041],[0.095,0.121],[0.048,0.124],[0.121,0.149],[0.143,0.146],[0.148,0.193],[0.076,0.099],[0.077,-0.004],[0.027,0.069],[0.027,0.122],[0,0.151],[0,0.241],[0,0],[-0.072,0.171],[-0.023,0.124],[-0.118,0.444],[-0.122,0.123],[-0.224,0.322],[-0.098,0.073],[-0.095,0.048],[-0.097,0.074],[-0.097,0.077],[-0.099,0.075],[-0.197,0.296],[-0.07,0.121],[-0.102,0.101],[-0.124,0.072],[-0.075,-0.017],[-0.046,0.023],[-0.148,0.294],[-0.048,0.121],[-0.076,0.123],[-0.097,0.144],[-0.095,0.146],[-0.019,0.121],[-0.32,0.024],[-0.07,-0.008],[-0.097,0.027],[-0.167,0.074],[-0.086,-0.016],[-0.082,0.023],[-0.12,0.178],[-0.102,0.074],[-0.122,0.022],[-0.068,-0.007],[-0.061,0.011],[-0.126,0.051],[-0.144,0.124],[-0.097,0.124],[-0.124,0.098],[0,0.221],[0.025,0.274],[-0.298,0],[-0.162,-0.009],[-0.385,0.153],[-0.148,0.121],[-0.224,0.074],[-0.067,-0.006],[-0.064,0.014],[-0.344,0],[0,0],[-0.12,0.071],[-0.196,0.074],[-0.296,0],[-0.271,0.046],[-0.395,0],[0,0],[-0.123,0.072],[-0.245,0.295],[-0.126,0.074],[-0.125,0.023],[-0.294,0],[0,0.246],[0.053,0.175],[0.075,0.119],[0.123,0.073],[0.188,-0.037],[0.127,0.008],[0.198,0]],\"o\":[[0,0],[-0.151,0],[-0.131,0.011],[-0.141,-0.011],[-0.322,0.05],[-0.068,0.099],[-0.07,0.121],[-0.098,0.122],[-0.169,0.078],[-0.099,-0.016],[-0.145,0],[-0.147,0.027],[-0.17,0.075],[-0.148,0.074],[-0.115,0.022],[-0.295,0.022],[-0.223,0],[-0.147,0.048],[-0.124,0.05],[-0.172,0.051],[-0.066,0.015],[-0.062,-0.006],[-0.543,0.079],[-0.292,-0.021],[0,0],[-0.146,0],[-0.157,0.013],[-0.151,-0.011],[-0.149,0.028],[-0.293,0.075],[-0.126,0.099],[-0.194,0.268],[0,0],[-0.124,0.1],[-0.124,0.122],[-0.122,0.126],[-0.097,0.048],[-0.197,0.076],[-0.124,0.026],[-0.121,0.101],[-0.071,0.123],[-0.05,0.314],[-0.219,-0.026],[-0.468,-0.023],[-0.148,0],[0.098,0.172],[0,0.346],[-0.101,0.148],[-0.048,0.123],[0,0],[0,0],[-0.22,0.026],[-0.2,0.009],[-0.211,-0.011],[-0.32,0.049],[-0.194,0.097],[-0.273,0.196],[0,0.197],[0.148,-0.029],[0.245,-0.079],[0.222,0],[-0.076,0.221],[0,0],[0,0.194],[-0.294,0],[-0.294,-0.028],[-0.196,0],[0,0],[-0.392,0],[-0.296,0.024],[0.026,0.15],[0.026,0.148],[0,0.15],[-0.048,0.171],[-0.048,0.124],[-0.023,0.121],[-0.292,0],[-0.121,0],[-0.147,0.094],[-0.072,0.099],[-0.072,0.147],[-0.128,0.271],[0,0.147],[0,0.144],[0,0.148],[0,0],[0.074,-0.119],[0.104,-0.121],[0.123,0.074],[0.049,0.096],[0.1,0.147],[0.146,-0.147],[0.048,-0.122],[0.149,0.073],[0.169,0.12],[0.293,0.224],[0.122,0.12],[0,0],[0,0],[0.051,0.149],[0,0],[0.567,0],[0.196,0],[0.32,0.027],[0.27,0.027],[0,0],[0.148,0],[0.123,0],[0,0],[-0.071,-0.126],[-0.074,-0.121],[-0.097,-0.267],[-0.053,-0.012],[-0.081,0.015],[-0.148,-0.124],[-0.075,-0.102],[-0.102,-0.173],[-0.124,-0.148],[-0.174,-0.172],[-0.072,-0.1],[-0.035,-0.046],[-0.089,0.003],[-0.049,-0.121],[-0.023,-0.126],[-0.023,-0.243],[0,0],[0.049,-0.17],[0.05,-0.125],[0.099,-0.442],[0.027,-0.143],[0.271,-0.267],[0.047,-0.096],[0.095,-0.074],[0.098,-0.046],[0.099,-0.074],[0.099,-0.071],[0.27,-0.217],[0.074,-0.123],[0.074,-0.124],[0.095,-0.095],[0.066,-0.04],[0.065,0.015],[0.271,-0.171],[0.049,-0.124],[0.072,-0.147],[0.096,-0.146],[0.098,-0.151],[0.077,-0.124],[0.348,0],[0.075,-0.01],[0.089,0.011],[0.172,-0.048],[0.092,-0.037],[0.075,0.014],[0.195,-0.071],[0.074,-0.095],[0.101,-0.075],[0.061,-0.013],[0.066,0.005],[0.124,-0.026],[0.172,-0.074],[0.128,-0.097],[0.1,-0.122],[0.145,-0.124],[0,-0.273],[0.293,-0.024],[0.193,-0.007],[0.351,0.02],[0.173,-0.049],[0.17,-0.148],[0.056,-0.011],[0.067,0.006],[0.322,-0.096],[0,0],[0.171,0],[0.17,-0.127],[0.272,-0.096],[0.296,0],[0.364,-0.051],[0,0],[0.173,0],[0.321,-0.222],[0.101,-0.124],[0.099,-0.049],[0.266,-0.076],[0.077,-0.224],[0,-0.197],[-0.05,-0.147],[-0.047,-0.099],[-0.17,-0.108],[-0.111,0.022],[-0.199,0],[0,0]],\"v\":[[105.484,-136.185],[105.098,-136.185],[104.703,-136.086],[104.342,-136.093],[103.915,-136.086],[103.126,-135.69],[103.027,-135.299],[102.833,-134.906],[102.441,-134.611],[101.965,-134.586],[101.652,-134.611],[101.258,-134.611],[100.866,-134.416],[100.474,-134.119],[100.078,-133.921],[99.689,-133.921],[98.9,-133.921],[98.309,-133.825],[97.918,-133.628],[97.523,-133.531],[97.132,-133.239],[96.934,-133.236],[96.74,-133.239],[95.359,-133.239],[94.574,-133.333],[94.082,-133.333],[93.69,-133.239],[93.275,-133.242],[92.806,-133.239],[92.411,-133.038],[91.626,-132.742],[91.427,-132.349],[90.938,-131.564],[88.185,-131.564],[87.793,-131.268],[87.497,-130.877],[87.203,-130.484],[86.807,-130.386],[86.22,-130.286],[85.823,-130.189],[85.432,-129.893],[85.432,-129.497],[85.432,-128.614],[84.844,-128.713],[83.661,-128.713],[83.272,-128.614],[83.565,-128.122],[83.072,-127.337],[82.678,-127.041],[82.678,-126.649],[82.678,-126.257],[82.678,-125.469],[82.091,-125.368],[81.572,-125.376],[80.909,-125.368],[80.025,-125.075],[79.536,-124.781],[79.042,-123.994],[79.237,-123.5],[79.633,-123.597],[80.246,-123.893],[80.811,-123.797],[80.615,-123.207],[80.615,-123.01],[80.909,-122.617],[79.831,-122.419],[79.042,-122.522],[78.548,-122.419],[78.548,-121.14],[77.569,-121.14],[76.78,-120.849],[76.78,-120.455],[76.98,-120.064],[76.879,-119.669],[76.484,-119.373],[76.484,-118.978],[76.387,-118.585],[75.599,-118.585],[75.207,-118.585],[74.913,-118.195],[74.913,-117.799],[74.523,-117.604],[74.473,-116.793],[74.421,-116.421],[74.523,-116.029],[74.473,-115.639],[75.503,-115.54],[75.599,-115.933],[75.993,-116.128],[76.387,-116.029],[76.484,-115.639],[76.78,-115.246],[77.174,-115.639],[77.174,-116.029],[77.569,-115.833],[77.96,-115.441],[78.846,-114.95],[79.042,-114.554],[78.353,-113.67],[78.353,-113.475],[78.548,-113.081],[80.689,-113.081],[82.091,-112.787],[82.579,-112.787],[83.467,-112.591],[84.126,-112.591],[84.743,-112.591],[85.135,-112.687],[85.432,-112.64],[85.432,-113.475],[85.333,-113.87],[84.941,-114.066],[84.941,-114.85],[84.764,-114.839],[84.548,-114.85],[84.156,-115.144],[84.156,-115.54],[83.763,-115.833],[83.37,-116.226],[82.876,-116.718],[82.777,-117.114],[82.587,-117.151],[82.384,-117.212],[82.384,-117.604],[82.384,-117.998],[82.188,-118.585],[82.188,-118.784],[82.579,-119.077],[82.678,-119.472],[82.678,-120.652],[83.072,-120.849],[83.763,-121.636],[83.861,-122.027],[84.251,-122.127],[84.645,-122.225],[84.645,-122.617],[85.04,-122.715],[85.725,-123.406],[85.725,-123.797],[86.125,-123.994],[86.316,-124.386],[86.536,-124.392],[86.71,-124.386],[87.299,-125.075],[87.397,-125.469],[87.596,-125.863],[87.988,-126.153],[88.28,-126.548],[88.28,-126.942],[89.169,-126.942],[89.385,-126.936],[89.66,-126.942],[89.954,-127.337],[90.216,-127.342],[90.448,-127.337],[90.938,-127.633],[90.938,-128.025],[91.332,-128.122],[91.53,-128.122],[91.723,-128.122],[92.118,-128.221],[92.508,-128.516],[92.706,-128.909],[93.103,-129.106],[93.493,-129.497],[93.397,-130.189],[94.184,-130.286],[94.711,-130.274],[95.755,-130.386],[96.052,-130.776],[96.546,-131.171],[96.734,-131.17],[96.935,-131.171],[97.743,-131.464],[100.057,-131.464],[100.474,-131.658],[100.866,-132.055],[101.652,-132.151],[102.441,-132.151],[103.253,-132.742],[105.165,-132.742],[105.587,-132.937],[106.273,-133.727],[106.471,-134.119],[106.867,-134.216],[107.648,-134.216],[107.846,-134.808],[107.549,-135.201],[107.354,-135.591],[107.258,-135.987],[106.73,-136.023],[106.375,-135.987],[105.879,-136.185]],\"c\":true},\"ix\":2},\"nm\":\"Path 35\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":35,\"ty\":\"sh\",\"ix\":36,\"ks\":{\"a\":0,\"k\":{\"i\":[[0.099,0.396],[0,0],[0,0],[0,0]],\"o\":[[0,0],[0,0],[0,0],[0,0]],\"v\":[[-237.518,-136.185],[-237.319,-135.398],[-235.157,-135.201],[-235.255,-136.185]],\"c\":true},\"ix\":2},\"nm\":\"Path 36\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":36,\"ty\":\"sh\",\"ix\":37,\"ks\":{\"a\":0,\"k\":{\"i\":[[0,0],[0,0],[-0.197,-0.391],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[-0.392,0.294],[0,0],[0.491,0],[0,0],[0,0],[0,0],[0,0],[-0.295,-0.591],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],\"o\":[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0.394,-0.297],[0,0],[-0.491,0],[0,0],[0,0],[0,0],[0,0],[0.295,0.588],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],\"v\":[[-218.642,-134.02],[-217.952,-133.038],[-215.593,-131.268],[-213.432,-130.583],[-212.254,-130.974],[-211.267,-131.171],[-210.481,-130.286],[-209.793,-128.516],[-208.807,-129.007],[-207.14,-129.106],[-205.96,-129.304],[-205.861,-130.386],[-205.861,-131.955],[-205.174,-132.742],[-205.566,-133.921],[-207.237,-134.713],[-208.318,-134.02],[-210.186,-135.201],[-211.758,-135.201],[-210.578,-134.216],[-209.203,-132.447],[-210.382,-132.349],[-212.35,-134.216],[-213.825,-134.216],[-213.728,-133.038],[-213.333,-131.761],[-215.102,-132.843],[-215.987,-134.808],[-218.544,-135.69]],\"c\":true},\"ix\":2},\"nm\":\"Path 37\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":37,\"ty\":\"sh\",\"ix\":38,\"ks\":{\"a\":0,\"k\":{\"i\":[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0.393,-0.094],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],\"o\":[[0,0],[0,0],[0,0],[0,0],[0,0.689],[0,0],[0,0],[-0.393,0.099],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[-0.492,0.592],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],\"v\":[[-227.882,-135.591],[-228.474,-134.906],[-229.553,-134.611],[-229.454,-133.825],[-228.278,-133.038],[-228.572,-131.564],[-227.096,-131.367],[-227.096,-130.583],[-228.278,-130.484],[-230.243,-130.484],[-231.522,-131.268],[-232.8,-132.843],[-234.371,-133.432],[-235.747,-133.432],[-237.125,-134.119],[-238.107,-134.317],[-239.975,-133.727],[-240.957,-132.349],[-241.943,-131.367],[-243.023,-130.286],[-242.826,-129.106],[-240.665,-129.007],[-238.795,-128.614],[-237.125,-128.812],[-235.65,-129.304],[-233.093,-128.909],[-231.422,-128.909],[-233.389,-128.317],[-235.255,-128.317],[-236.534,-127.728],[-236.338,-126.845],[-235.157,-126.349],[-232.7,-126.349],[-230.243,-127.238],[-228.669,-128.419],[-226.902,-128.614],[-224.54,-128.614],[-222.18,-128.614],[-221.296,-129.697],[-220.706,-131.761],[-221.492,-132.546],[-222.575,-132.546],[-222.771,-131.658],[-224.147,-132.151],[-225.817,-133.432],[-225.817,-134.416],[-226.406,-135.591]],\"c\":true},\"ix\":2},\"nm\":\"Path 38\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":38,\"ty\":\"sh\",\"ix\":39,\"ks\":{\"a\":0,\"k\":{\"i\":[[0,0],[0,0],[-0.198,-0.395],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[-0.494,-0.392],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[-0.49,0],[0,0.393],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],\"o\":[[0,0],[0,0],[0.197,0.392],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0.49,0.392],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0.491,0],[0,-0.395],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],\"v\":[[-194.753,-135.005],[-196.424,-134.808],[-195.735,-132.742],[-194.656,-130.877],[-195.538,-129.304],[-194.457,-128.122],[-192.588,-126.942],[-189.935,-127.14],[-188.656,-127.924],[-186.885,-126.649],[-184.037,-126.548],[-180.791,-126.548],[-179.317,-126.942],[-178.631,-127.633],[-177.644,-126.845],[-175.976,-126.942],[-173.124,-127.238],[-172.926,-128.317],[-171.845,-129.007],[-172.14,-130.583],[-174.699,-131.268],[-177.451,-131.859],[-179.513,-131.171],[-182.564,-130.484],[-184.525,-130.286],[-187.28,-130.776],[-189.541,-130.676],[-191.408,-132.151],[-191.607,-133.628],[-192.293,-135.005]],\"c\":true},\"ix\":2},\"nm\":\"Path 39\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":39,\"ty\":\"sh\",\"ix\":40,\"ks\":{\"a\":0,\"k\":{\"i\":[[0.164,0],[0,0],[0.146,0],[0.762,0],[0.075,-0.323],[0.125,-0.294],[0.05,-0.122],[0.024,-0.198],[0.024,-0.122],[0.026,-0.146],[0,0],[-0.124,-0.149],[-0.124,-0.1],[-0.121,-0.053],[-0.167,-0.075],[-0.124,-0.047],[-0.124,-0.194],[-0.073,-0.145],[-0.101,-0.121],[-0.269,0],[-0.39,0.025],[-0.026,0.196],[-0.026,0.126],[-0.071,0.174],[-0.496,0],[-0.466,0.023],[-0.093,-0.002],[-0.203,0.101],[-0.124,0.049],[-0.149,0],[-0.122,-0.049],[-0.176,-0.048],[-0.147,0],[-0.272,0.199],[-0.148,0.097],[-0.218,0],[0,0],[-0.17,-0.051],[-0.121,-0.026],[-0.172,0],[0,0],[-0.096,0.415],[-0.076,0.147],[-0.101,0.173],[-0.049,0.171],[-0.022,0.121],[0.12,0.023],[0.06,-0.009],[0.066,0.027],[0.145,0.045],[0.122,0],[0.216,-0.015],[0.192,0.009],[0.223,0],[0,0],[0.1,-0.094],[0.048,-0.096],[0.075,-0.198],[0.025,-0.118],[0,-0.319],[0.298,0],[0.147,0],[0,0],[-0.072,0.121],[0,0.346],[0.024,0.147],[0.291,0.024],[0.149,0],[0.293,0],[0.147,-0.024],[0,0],[0.291,0],[0.27,0.023],[0.121,0.023],[0.125,0.094],[0.099,0.124],[0.125,0.101],[0.1,0.072],[0.063,0]],\"o\":[[0,0],[-0.149,0],[-0.765,0.022],[0.027,0.344],[-0.072,0.315],[-0.047,0.126],[-0.075,0.197],[-0.029,0.123],[-0.029,0.121],[0,0],[0.098,0.147],[0.101,0.124],[0.101,0.073],[0.149,0.072],[0.126,0.049],[0.196,0.099],[0.072,0.128],[0.074,0.148],[0.145,0.172],[0.396,0],[0.027,-0.222],[0.024,-0.121],[0.024,-0.174],[0.393,0.249],[0.465,0],[0.106,-0.007],[0.205,0.005],[0.123,-0.048],[0.121,-0.049],[0.148,0],[0.173,0.049],[0.124,0.022],[0.347,0],[0.149,-0.097],[0.17,-0.122],[0,0],[0.173,0.026],[0.124,0.046],[0.149,0.048],[0,0],[0,-0.417],[0.027,-0.172],[0.098,-0.198],[0.07,-0.145],[0.025,-0.124],[-0.146,-0.024],[-0.056,-0.012],[-0.075,0.01],[-0.149,-0.053],[-0.123,-0.054],[-0.261,-0.044],[-0.152,0.011],[-0.222,0],[0,0],[-0.148,0.049],[-0.097,0.1],[-0.121,0.172],[-0.023,0.121],[-0.05,0.298],[-0.296,-0.023],[-0.146,0],[0,0],[0,-0.173],[0.145,-0.272],[0,-0.17],[-0.295,0],[-0.15,0],[-0.292,-0.025],[-0.15,0],[0,0],[-0.294,-0.024],[-0.296,0],[-0.122,0],[-0.174,-0.026],[-0.121,-0.103],[-0.097,-0.125],[-0.097,-0.074],[-0.056,-0.05],[-0.126,0]],\"v\":[[239.756,-132.643],[239.189,-132.643],[238.798,-132.546],[236.829,-132.546],[236.928,-131.658],[236.533,-130.877],[236.436,-130.484],[236.144,-129.992],[236.144,-129.598],[236.043,-129.205],[235.751,-129.497],[236.043,-129.106],[236.238,-128.713],[236.633,-128.614],[237.024,-128.317],[237.421,-128.221],[237.912,-127.831],[238.107,-127.437],[238.306,-127.041],[238.969,-126.942],[239.975,-127.041],[240.074,-127.633],[240.074,-128.025],[240.366,-128.419],[241.551,-127.924],[242.728,-128.025],[243.025,-128.029],[243.615,-128.122],[243.714,-128.516],[244.107,-128.516],[244.496,-128.516],[244.793,-128.122],[245.184,-128.025],[245.973,-128.516],[246.271,-128.909],[246.858,-129.007],[247.055,-129.007],[247.447,-128.713],[247.84,-128.614],[248.258,-128.516],[249.806,-128.516],[249.806,-129.598],[250.006,-129.992],[250.4,-130.386],[250.691,-130.776],[250.691,-131.171],[250.3,-131.268],[250.123,-131.261],[249.907,-131.268],[249.71,-131.658],[249.316,-131.658],[248.637,-131.67],[248.134,-131.658],[247.548,-131.761],[247.35,-131.761],[246.954,-131.564],[246.858,-131.171],[246.464,-130.776],[246.366,-130.386],[246.366,-129.549],[245.579,-129.598],[245.184,-129.549],[245.184,-130.705],[245.482,-131.071],[245.876,-131.859],[245.678,-132.252],[244.894,-132.252],[244.496,-132.349],[243.714,-132.349],[243.321,-132.252],[243.321,-131.171],[242.533,-131.268],[241.746,-131.268],[241.353,-131.268],[241.055,-131.658],[240.759,-132.055],[240.366,-132.252],[240.366,-132.643],[240.188,-132.709]],\"c\":true},\"ix\":2},\"nm\":\"Path 40\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":40,\"ty\":\"sh\",\"ix\":41,\"ks\":{\"a\":0,\"k\":{\"i\":[[0,0],[0,0],[0,0],[0,0]],\"o\":[[0,0],[0,0],[0,0],[0,0]],\"v\":[[-245.381,-131.955],[-246.365,-130.776],[-244.497,-130.484],[-243.515,-132.447]],\"c\":true},\"ix\":2},\"nm\":\"Path 41\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":41,\"ty\":\"sh\",\"ix\":42,\"ks\":{\"a\":0,\"k\":{\"i\":[[0.053,-0.197],[0,-0.145],[-0.022,-0.122],[-0.174,-0.097],[-0.197,0],[-0.194,0.148],[0,0.145],[-0.046,0.293],[0.197,0],[0.17,0]],\"o\":[[-0.022,0.122],[0,0.15],[0.029,0.173],[0.17,0.101],[0.243,0],[-0.02,-0.149],[0,-0.298],[-0.194,-0.027],[-0.174,0],[-0.223,0]],\"v\":[[232.402,-131.268],[232.402,-130.877],[232.402,-130.484],[232.801,-130.189],[233.194,-129.893],[233.681,-130.286],[233.585,-130.676],[233.681,-131.464],[233.194,-131.464],[232.801,-131.658]],\"c\":true},\"ix\":2},\"nm\":\"Path 42\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":42,\"ty\":\"sh\",\"ix\":43,\"ks\":{\"a\":0,\"k\":{\"i\":[[0,0],[0,0],[-0.171,-0.072],[-0.126,-0.048],[-0.125,-0.074],[-0.123,-0.096],[-0.268,0],[-0.22,0.05],[-0.343,0],[-0.272,-0.174],[-0.198,-0.095],[-0.12,-0.047],[-0.148,-0.025],[-0.297,0],[0,0],[-0.124,0.026],[-0.148,0.121],[-0.174,0.022],[-0.121,0],[-0.219,0],[0,0],[0,0.148],[0,0.051],[0.513,0],[0.149,-0.025],[0.323,0],[0,0],[0.147,0],[0,0],[0.151,0],[0,0],[0.489,0],[0.124,-0.07],[0.099,-0.048],[0.221,0],[0.198,0.076],[0.269,0.466]],\"o\":[[0,0],[0.145,0.073],[0.126,0.049],[0.145,0.077],[0.124,0.072],[0.196,0.149],[0.247,0],[0.322,-0.077],[0.343,0],[0.169,0.101],[0.122,0.051],[0.148,0.049],[0.27,0.048],[0,0],[0.122,0],[0.193,-0.047],[0.148,-0.122],[0.124,-0.026],[0.199,-0.026],[0,0],[0,-0.144],[0,-0.046],[-0.517,-0.025],[-0.173,0],[-0.293,0.051],[0,0],[-0.146,0],[0,0],[-0.145,0],[0,0],[-0.49,-0.021],[-0.175,0],[-0.099,0.051],[-0.171,0.123],[-0.223,0],[-0.467,-0.222],[0,0]],\"v\":[[252.858,-130.877],[252.858,-129.205],[252.952,-128.909],[253.348,-128.812],[253.741,-128.614],[253.936,-128.221],[254.574,-128.025],[255.214,-128.122],[256.1,-128.419],[256.886,-128.025],[257.28,-127.633],[257.673,-127.535],[258.064,-127.337],[258.853,-127.337],[259.246,-127.337],[259.639,-127.337],[260.033,-127.728],[260.329,-128.122],[260.719,-128.122],[261.308,-128.122],[261.308,-128.909],[261.21,-129.304],[261.287,-129.401],[259.96,-129.497],[259.538,-129.401],[258.728,-129.304],[258.358,-129.304],[257.969,-129.401],[257.475,-129.401],[257.082,-129.328],[257.082,-130.386],[255.831,-130.484],[255.412,-130.386],[255.313,-129.992],[254.723,-129.992],[254.133,-129.992],[253.249,-131.071]],\"c\":true},\"ix\":2},\"nm\":\"Path 43\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":43,\"ty\":\"sh\",\"ix\":44,\"ks\":{\"a\":0,\"k\":{\"i\":[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],\"o\":[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],\"v\":[[-200.847,-130.776],[-202.812,-129.992],[-203.207,-129.007],[-201.832,-127.728],[-200.355,-127.728],[-198.979,-127.14],[-197.801,-127.633],[-197.406,-129.106],[-198.782,-129.893],[-199.57,-130.974]],\"c\":true},\"ix\":2},\"nm\":\"Path 44\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":44,\"ty\":\"sh\",\"ix\":45,\"ks\":{\"a\":0,\"k\":{\"i\":[[-0.026,-0.102],[0,0],[0,0],[0,0],[0,0.393],[0.408,0]],\"o\":[[0.097,0.398],[0,0],[0,0],[0,0],[0,-0.29],[-0.142,0]],\"v\":[[-218.445,-130.189],[-219.132,-129.791],[-218.741,-128.713],[-217.462,-128.812],[-216.97,-129.697],[-218.242,-130.333]],\"c\":true},\"ix\":2},\"nm\":\"Path 45\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":45,\"ty\":\"sh\",\"ix\":46,\"ks\":{\"a\":0,\"k\":{\"i\":[[0,0],[0,0],[0,0]],\"o\":[[0,0],[0,0],[0,0]],\"v\":[[-206.255,-126.548],[-204.877,-126.548],[-205.464,-127.437]],\"c\":true},\"ix\":2},\"nm\":\"Path 46\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":46,\"ty\":\"sh\",\"ix\":47,\"ks\":{\"a\":0,\"k\":{\"i\":[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[-0.099,0.389],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],\"o\":[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0.096,-0.397],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],\"v\":[[-255.999,-126.548],[-255.999,-125.566],[-255.506,-123.797],[-256.099,-121.14],[-258.849,-117.702],[-255.407,-116.718],[-253.542,-114.163],[-251.872,-115.54],[-249.805,-115.54],[-248.526,-116.525],[-248.038,-118.391],[-246.168,-119.566],[-244.892,-120.849],[-241.349,-122.225],[-239.188,-122.914],[-239.386,-124.19],[-242.137,-125.761],[-243.709,-125.96],[-245.578,-125.172],[-247.741,-125.863],[-249.904,-126.649],[-252.556,-126.845]],\"c\":true},\"ix\":2},\"nm\":\"Path 47\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":47,\"ty\":\"sh\",\"ix\":48,\"ks\":{\"a\":0,\"k\":{\"i\":[[0,0],[0,-0.199],[-0.147,-0.123],[-0.12,-0.027],[-0.296,0],[-0.197,0],[-0.124,0.071],[-0.073,0.124],[0.147,0.028],[0.067,-0.006],[0.062,0.014],[0.344,0]],\"o\":[[0,0.193],[0,0.195],[0.1,0.071],[0.271,0.097],[0.196,0],[0.167,0],[0.122,-0.078],[-0.147,-0.049],[-0.062,-0.012],[-0.069,0.008],[-0.316,-0.072],[0,0]],\"v\":[[241.257,-126.153],[241.155,-125.664],[241.451,-125.27],[241.842,-125.172],[242.629,-124.978],[243.124,-125.075],[243.517,-125.27],[243.615,-125.664],[243.223,-125.863],[243.027,-125.863],[242.824,-125.863],[242.016,-126.153]],\"c\":true},\"ix\":2},\"nm\":\"Path 48\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":48,\"ty\":\"sh\",\"ix\":49,\"ks\":{\"a\":0,\"k\":{\"i\":[[0,0],[-0.049,-0.123],[-0.123,-0.296],[-0.027,-0.149],[0,-0.295],[0,0],[0.149,0.074],[0.148,0.075],[0.124,0.099],[0.172,0.292],[0,0],[0.1,0.146]],\"o\":[[0.053,0.122],[0.147,0.296],[0.049,0.143],[0.046,0.271],[0,0],[-0.096,-0.127],[-0.172,-0.074],[-0.127,-0.073],[-0.245,-0.197],[0,0],[-0.077,-0.171],[0,0]],\"v\":[[232.6,-126.057],[232.702,-125.664],[233.194,-124.876],[233.392,-124.485],[233.392,-123.746],[235.157,-123.746],[234.96,-124.19],[234.472,-124.289],[234.077,-124.485],[233.585,-125.27],[233.392,-125.664],[233.095,-126.057]],\"c\":true},\"ix\":2},\"nm\":\"Path 49\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":49,\"ty\":\"sh\",\"ix\":50,\"ks\":{\"a\":0,\"k\":{\"i\":[[0.394,0],[0,-0.591],[0,0],[0,0],[0,-0.39],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0.492,0],[0,0],[0,0]],\"o\":[[-0.393,0],[0,0.593],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],\"v\":[[-200.061,-125.469],[-200.158,-124.19],[-201.437,-123.207],[-201.437,-120.748],[-200.847,-118.195],[-198.979,-118.491],[-197.702,-119.373],[-197.503,-120.748],[-195.538,-120.358],[-194.36,-121.24],[-193.473,-122.816],[-192.194,-124.19],[-193.965,-124.978],[-195.735,-124.978],[-197.503,-125.566]],\"c\":true},\"ix\":2},\"nm\":\"Path 50\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":50,\"ty\":\"sh\",\"ix\":51,\"ks\":{\"a\":0,\"k\":{\"i\":[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0.395,0.196],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,-0.392],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0.391,0.492],[0,0],[0,0]],\"o\":[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[-0.393,-0.199],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0.397],[0.392,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[-0.392,-0.493],[0,0],[0,0]],\"v\":[[-208.514,-125.172],[-208.71,-124.089],[-209.402,-124.089],[-210.776,-124.585],[-212.254,-124.19],[-211.956,-123.11],[-210.677,-121.929],[-211.17,-120.552],[-212.153,-120.159],[-213.529,-121.24],[-214.709,-121.14],[-214.906,-120.064],[-213.432,-119.177],[-212.35,-118.491],[-210.677,-118.096],[-209.893,-116.525],[-207.629,-115.441],[-206.255,-116.619],[-203.994,-116.718],[-203.11,-118.29],[-203.895,-119.566],[-205.174,-120.748],[-206.548,-121.537],[-204.78,-122.32],[-204.877,-123.207],[-206.255,-124.485],[-206.942,-125.27]],\"c\":true},\"ix\":2},\"nm\":\"Path 51\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":51,\"ty\":\"sh\",\"ix\":52,\"ks\":{\"a\":0,\"k\":{\"i\":[[0.082,0],[0,0],[0.392,-0.196],[0.146,-0.095],[0.147,-0.079],[0.087,0.017],[0.082,-0.024],[0.439,-0.32],[0,0],[-0.291,-0.018],[-0.298,0],[0,0],[-0.197,0],[-0.166,-0.005],[-0.251,0.016],[-0.22,0],[0,0],[-0.174,-0.075],[-0.297,-0.074],[-0.197,0],[0,0],[0,0],[0.124,0.075],[0.124,0.076],[0.173,0.046],[0.072,-0.007],[0.057,0.01],[0.121,0.052],[0.147,0.121],[0.123,0.072],[0.045,0]],\"o\":[[0,0],[-0.471,0],[-0.174,0.075],[-0.126,0.073],[-0.079,0.036],[-0.079,-0.013],[-0.517,0.169],[0,0],[0.296,0.048],[0.296,0.028],[0,0],[0.196,0],[0.215,-0.008],[0.191,0.006],[0.221,0],[0,0],[0.172,0.048],[0.27,0.121],[0.174,0.05],[0,0],[0,0],[-0.1,-0.124],[-0.121,-0.073],[-0.147,-0.073],[-0.064,-0.016],[-0.064,0.005],[-0.122,-0.031],[-0.177,-0.097],[-0.1,-0.074],[-0.041,-0.025],[-0.09,0]],\"v\":[[245.383,-124.386],[244.993,-124.386],[243.813,-124.289],[243.418,-123.994],[243.223,-123.597],[242.972,-123.593],[242.728,-123.597],[241.551,-122.715],[241.155,-122.617],[241.941,-122.522],[242.728,-122.419],[243.124,-122.419],[243.615,-122.522],[244.165,-122.519],[244.793,-122.522],[245.383,-122.617],[245.579,-122.617],[245.973,-122.32],[246.761,-122.027],[247.277,-121.929],[247.936,-121.929],[248.037,-122.715],[247.84,-123.11],[247.447,-123.307],[247.055,-123.597],[246.845,-123.599],[246.66,-123.597],[246.271,-123.7],[245.876,-123.994],[245.777,-124.386],[245.647,-124.42]],\"c\":true},\"ix\":2},\"nm\":\"Path 52\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":52,\"ty\":\"sh\",\"ix\":53,\"ks\":{\"a\":0,\"k\":{\"i\":[[0,0],[-0.391,-0.099],[0,0],[0,0],[0,0],[0,0],[0,0]],\"o\":[[0,0],[0.395,0.095],[0,0],[0,0],[0,0],[0,0],[0,0]],\"v\":[[-222.867,-123.406],[-221.198,-122.32],[-219.723,-120.849],[-218.642,-121.636],[-218.249,-123.11],[-219.032,-123.797],[-222.082,-124.289]],\"c\":true},\"ix\":2},\"nm\":\"Path 53\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":53,\"ty\":\"sh\",\"ix\":54,\"ks\":{\"a\":0,\"k\":{\"iov\":[[-184.135,-124.19],[-186.885,-123.893],[-189.345,-121.929],[-190.818,-119.177],[-190.915,-115.736],[-188.656,-115.344],[-187.082,-115.246],[-186.395,-113.968],[-188.165,-114.262],[-190.032,-113.772],[-188.46,-112.196],[-186.298,-112.196],[-185.215,-112.591],[-183.739,-111.605],[-180.99,-110.721],[-182.66,-110.23],[-182.758,-108.853],[-181.58,-107.871],[-183.446,-105.217],[-184.333,-103.349],[-185.708,-101.876],[-186.985,-102.464],[-187.97,-104.727],[-186.985,-106.099],[-189.442,-108.265],[-191.408,-106.594],[-194.161,-109.642],[-195.142,-110.034],[-194.949,-111.605],[-195.341,-113.377],[-196.62,-113.576],[-196.717,-115.05],[-198.782,-116.718],[-201.242,-116.818],[-201.634,-115.833],[-202.715,-115.736],[-203.796,-114.163],[-203.207,-112.884],[-203.503,-111.902],[-201.534,-110.23],[-199.667,-109.148],[-200.257,-107.676],[-202.32,-108.069],[-201.73,-106.397],[-199.96,-106.494],[-197.996,-107.676],[-197.996,-105.903],[-201.437,-104.134],[-201.14,-101.579],[-203.305,-102.954],[-202.715,-104.727],[-204.091,-104.727],[-204.188,-106.397],[-202.909,-106.397],[-203.305,-108.853],[-206.452,-110.326],[-207.14,-108.561],[-208.807,-107.773],[-205.96,-105.903],[-207.336,-104.824],[-207.827,-103.448],[-213.134,-103.252],[-215.79,-104.334],[-217.758,-104.626],[-220.311,-106.099],[-222.082,-105.02],[-224.835,-103.839],[-224.147,-102.169],[-224.54,-99.613],[-226.21,-102.66],[-228.865,-103.839],[-231.816,-103.252],[-238.305,-103.839],[-238.402,-104.727],[-236.139,-105.512],[-239.386,-107.183],[-241.448,-107.083],[-247.249,-108.757],[-248.725,-110.034],[-251.376,-110.326],[-252.95,-110.23],[-253.641,-109.148],[-255.114,-108.853],[-256.589,-111.313],[-257.573,-109.148],[-259.344,-109.443],[-261.014,-112.296],[-262.979,-112.787],[-263.573,-110.92],[-264.846,-109.738],[-266.813,-109.443],[-269.37,-108.561],[-271.924,-107.28],[-269.863,-109.247],[-267.701,-109.835],[-266.125,-110.427],[-265.438,-111.41],[-266.319,-111.605],[-268.975,-110.721],[-271.924,-109.443],[-273.597,-109.346],[-275.171,-109.346],[-278.414,-107.577],[-281.461,-107.871],[-283.918,-109.738],[-288.345,-109.936],[-289.917,-110.92],[-292.176,-111.313],[-294.93,-110.721],[-296.698,-111.705],[-299.551,-111.705],[-302.597,-112.491],[-305.352,-112.491],[-307.516,-112.491],[-308.103,-113.87],[-312.43,-114.066],[-314.199,-113.87],[-313.71,-114.95],[-316.266,-115.05],[-318.523,-113.772],[-322.065,-113.772],[-324.72,-111.803],[-326.785,-111.803],[-328.551,-110.427],[-328.749,-108.658],[-330.913,-107.183],[-334.454,-107.083],[-335.139,-105.119],[-331.108,-103.349],[-329.732,-101.482],[-327.47,-100.598],[-325.997,-98.334],[-328.163,-98.042],[-330.224,-98.43],[-330.421,-100.104],[-332.878,-98.824],[-334.941,-98.629],[-337.4,-96.663],[-336.22,-95.972],[-334.941,-94.993],[-334.156,-92.831],[-327.768,-93.519],[-326.193,-94.5],[-324.521,-94.306],[-324.917,-92.437],[-324.917,-90.276],[-327.177,-90.175],[-329.436,-89.388],[-331.404,-89.584],[-331.992,-87.424],[-334.355,-85.259],[-333.86,-83.783],[-332.781,-83.589],[-332.387,-82.41],[-331.504,-80.542],[-328.845,-79.656],[-327.568,-81.132],[-326.094,-79.165],[-326.389,-76.411],[-325.016,-76.411],[-324.129,-76.903],[-322.065,-77.005],[-320.69,-76.216],[-319.9,-77.593],[-318.622,-76.509],[-317.049,-77.398],[-318.035,-74.939],[-319.706,-73.167],[-322.751,-70.811],[-323.833,-69.433],[-325.801,-69.333],[-327.768,-67.959],[-330.421,-67.366],[-332.682,-65.5],[-331.404,-64.911],[-329.143,-66.583],[-327.668,-66.68],[-325.212,-67.959],[-322.461,-69.137],[-316.854,-71.79],[-316.068,-73.463],[-310.266,-76.707],[-311.742,-78.871],[-308.792,-80.542],[-307.222,-83.194],[-304.667,-83.783],[-303.287,-83.001],[-306.336,-81.82],[-307.12,-80.245],[-306.728,-78.478],[-302.893,-80.346],[-300.141,-80.834],[-300.732,-82.115],[-301.124,-82.899],[-300.24,-83.194],[-297.784,-83.098],[-295.618,-81.621],[-293.358,-80.443],[-290.996,-79.853],[-289.03,-80.346],[-287.36,-79.656],[-285.789,-79.656],[-284.215,-78.379],[-281.758,-77.2],[-280.479,-75.823],[-278.609,-75.33],[-277.626,-75.721],[-276.152,-74.838],[-275.171,-73.463],[-272.907,-72.876],[-273.3,-71.597],[-271.141,-70.708],[-271.534,-69.532],[-270.155,-69.037],[-268.779,-68.841],[-268.68,-67.466],[-267.602,-65.992],[-267.305,-64.319],[-266.716,-62.746],[-264.945,-62.551],[-264.451,-60.683],[-262.586,-58.911],[-262.095,-57.635],[-260.227,-56.651],[-258.359,-55.964],[-256.784,-55.472],[-256.491,-54.488],[-254.524,-53.212],[-253.049,-52.128],[-252.265,-49.772],[-252.265,-47.901],[-253.347,-49.083],[-254.624,-50.657],[-254.919,-51.638],[-256.491,-52.618],[-257.573,-53.016],[-257.771,-54.587],[-259.047,-54.587],[-260.128,-55.375],[-261.112,-55.768],[-262.095,-56.062],[-263.273,-55.868],[-262.293,-54.587],[-261.014,-53.801],[-259.733,-52.72],[-257.081,-50.952],[-256.196,-49.083],[-255.214,-46.72],[-255.31,-44.855],[-255.506,-42.298],[-255.506,-39.447],[-256.394,-38.761],[-256.394,-36.895],[-255.31,-34.925],[-255.702,-33.057],[-255.407,-31.584],[-254.624,-30.305],[-254.723,-28.437],[-253.641,-26.863],[-252.166,-25.586],[-251.279,-22.933],[-250.004,-21.85],[-249.708,-20.474],[-248.526,-18.901],[-246.758,-18.901],[-245.48,-17.823],[-243.515,-16.936],[-242.137,-15.556],[-241.745,-13.886],[-241.055,-12.214],[-240.173,-9.462],[-238.991,-8.285],[-237.518,-6.908],[-237.125,-5.924],[-238.305,-5.039],[-237.518,-3.955],[-236.042,-2.879],[-234.172,-1.698],[-233.093,-0.42],[-233.29,0.665],[-232.897,1.549],[-231.422,2.138],[-230.047,3.318],[-229.062,4.299],[-228.965,5.478],[-228.177,5.088],[-227.981,3.81],[-228.572,2.333],[-229.852,1.744],[-230.047,0.466],[-231.522,-0.613],[-232.111,-2.284],[-232.7,-3.861],[-233.979,-5.039],[-234.371,-6.611],[-235.65,-7.103],[-236.435,-9.07],[-237.909,-10.74],[-238.107,-12.906],[-236.927,-13.001],[-235.255,-12.315],[-234.274,-11.13],[-234.172,-9.265],[-232.405,-6.807],[-230.535,-4.843],[-228.865,-3.465],[-227.686,-2.088],[-227.391,-0.52],[-225.623,0.466],[-224.345,1.939],[-223.36,3.514],[-221.296,5.674],[-220.509,7.546],[-219.429,8.429],[-220.509,9.119],[-220.803,10.296],[-218.544,12.065],[-216.675,13.538],[-214.411,14.23],[-212.055,15.608],[-209.303,16.783],[-206.255,18.259],[-203.796,18.948],[-202.226,18.848],[-201.73,18.06],[-199.96,17.867],[-197.996,18.848],[-195.834,20.517],[-194.656,21.899],[-192.884,21.899],[-192.194,21.899],[-191.212,22.29],[-190.131,23.764],[-187.97,24.453],[-187.87,23.469],[-186.687,24.06],[-185.511,25.732],[-183.347,27.991],[-183.543,29.759],[-182.858,30.547],[-181.969,30.154],[-180.791,30.744],[-179.121,32.318],[-177.35,32.809],[-174.403,34.281],[-172.829,34.973],[-172.926,33.399],[-172.14,32.415],[-169.388,32.611],[-169.09,33.596],[-168.208,33.5],[-167.716,32.221],[-168.7,31.038],[-171.551,31.038],[-173.417,30.939],[-176.17,30.744],[-177.451,29.858],[-179.218,27.991],[-179.121,26.517],[-179.121,24.553],[-178.532,22.094],[-178.532,20.421],[-179.415,19.145],[-181.185,18.259],[-183.839,18.456],[-185.708,18.06],[-187.773,18.848],[-189.148,17.964],[-187.87,16.981],[-187.87,15.211],[-187.379,14.131],[-186.687,12.36],[-186.687,10.392],[-185.511,9.61],[-185.313,8.135],[-186.197,7.546],[-189.148,7.741],[-191.016,8.037],[-191.804,9.411],[-192.588,11.475],[-193.473,13.341],[-195.048,13.538],[-197.307,14.131],[-199.667,14.426],[-200.748,13.049],[-202.715,12.065],[-203.404,10.493],[-204.78,8.429],[-205.566,4.889],[-205.861,2.333],[-204.877,0.37],[-204.386,-1.894],[-205.37,-4.256],[-203.599,-6.513],[-202.126,-6.611],[-200.651,-7.791],[-199.175,-9.17],[-197.111,-8.876],[-195.638,-8.381],[-194.457,-8.876],[-193.473,-7.595],[-191.705,-7.595],[-190.328,-7.696],[-190.624,-8.677],[-190.131,-10.25],[-187.97,-10.35],[-186.493,-10.544],[-183.739,-10.25],[-182.66,-8.876],[-181.775,-8.876],[-181.185,-9.658],[-180.401,-9.856],[-179.121,-8.677],[-177.939,-7.204],[-177.939,-5.531],[-177.255,-4.548],[-176.96,-3.465],[-176.072,-2.679],[-175.584,-1.5],[-174.5,-0.913],[-174.403,0.37],[-173.417,0.665],[-172.829,-0.224],[-172.336,-1.599],[-172.926,-3.268],[-173.516,-5.828],[-174.793,-8.086],[-174.793,-11.034],[-174.11,-13.1],[-173.027,-15.263],[-171.351,-15.953],[-169.388,-17.626],[-167.521,-18.901],[-165.75,-19.586],[-165.455,-20.867],[-164.081,-21.654],[-165.259,-23.817],[-166.144,-24.798],[-165.75,-25.979],[-166.538,-27.061],[-165.16,-27.747],[-163.982,-26.175],[-163.291,-27.747],[-162.508,-29.127],[-161.622,-30.009],[-160.736,-32.958],[-158.081,-32.958],[-156.409,-33.944],[-154.445,-34.141],[-154.936,-35.322],[-155.034,-37.778],[-153.66,-39.647],[-152.085,-39.647],[-151.592,-40.725],[-149.528,-40.629],[-147.662,-41.71],[-146.484,-43.185],[-144.219,-43.381],[-141.762,-42.891],[-142.352,-42.1],[-144.909,-42.1],[-146.286,-41.119],[-146.286,-39.447],[-145.203,-38.956],[-144.023,-39.941],[-143.139,-40.53],[-141.467,-41.022],[-139.697,-41.906],[-137.927,-42.298],[-136.553,-43.971],[-135.174,-45.15],[-134.979,-46.527],[-136.846,-46.034],[-138.125,-43.971],[-140.288,-43.874],[-142.059,-44.759],[-143.924,-46.234],[-144.909,-48.786],[-143.236,-50.067],[-143.337,-52.128],[-145.792,-52.327],[-148.448,-51.542],[-151.396,-49.871],[-154.248,-47.115],[-156.511,-45.542],[-155.624,-47.017],[-154.248,-48.593],[-153.362,-49.379],[-155.624,-49.967],[-152.772,-49.967],[-152.085,-51.344],[-150.512,-52.618],[-148.643,-52.72],[-147.858,-54.295],[-146.286,-54.883],[-143.826,-54.883],[-139.404,-54.979],[-137.141,-54.587],[-135.372,-54.69],[-133.603,-55.964],[-132.029,-57.734],[-129.177,-58.028],[-127.701,-58.614],[-126.917,-59.406],[-127.801,-60.192],[-127.214,-60.977],[-127.115,-62.648],[-129.177,-62.944],[-129.572,-63.926],[-131.833,-63.926],[-133.603,-62.944],[-134.781,-62.159],[-135.763,-62.551],[-135.372,-63.733],[-133.309,-64.418],[-130.85,-65.011],[-129.77,-65.992],[-131.342,-66.091],[-132.913,-66.876],[-134.979,-67.466],[-136.257,-68.646],[-137.732,-69.826],[-138.319,-70.908],[-137.436,-71.105],[-137.141,-71.889],[-138.52,-73.76],[-140.189,-75.823],[-142.547,-79.46],[-143.337,-81.132],[-145.103,-78.967],[-145.103,-77.101],[-146.974,-76.411],[-148.152,-75.134],[-149.921,-75.233],[-150.317,-76.411],[-151.493,-77.295],[-153.265,-76.903],[-152.772,-78.967],[-152.772,-81.718],[-152.871,-83.194],[-155.034,-83.294],[-156.707,-84.375],[-158.278,-85.947],[-161.03,-87.619],[-162.014,-86.833],[-164.374,-86.933],[-165.358,-87.523],[-168.009,-87.523],[-169.09,-86.44],[-168.11,-84.867],[-168.503,-82.806],[-168.208,-81.427],[-167.323,-79.557],[-168.7,-79.557],[-168.6,-77.79],[-169.485,-76.804],[-168.309,-76.017],[-166.538,-74.738],[-166.045,-72.482],[-166.045,-69.925],[-167.323,-68.155],[-169.09,-66.778],[-171.551,-66.484],[-170.175,-64.319],[-170.175,-61.565],[-169.485,-59.996],[-169.878,-58.717],[-170.959,-57.143],[-173.318,-56.85],[-174.699,-59.112],[-176.367,-61.076],[-176.367,-62.746],[-176.858,-65.108],[-176.563,-67.073],[-179.613,-67.466],[-181.872,-67.562],[-183.052,-68.254],[-185.906,-68.94],[-186.985,-70.119],[-189.442,-71.4],[-191.998,-72.775],[-195.341,-71.989],[-196.131,-73.266],[-197.503,-76.216],[-199.175,-77.005],[-200.257,-78.182],[-199.863,-81.82],[-198.192,-84.57],[-196.522,-87.027],[-194.36,-87.913],[-192.685,-89.191],[-193.376,-90.569],[-196.03,-91.158],[-199.08,-92.143],[-195.538,-91.648],[-192.685,-90.962],[-191.408,-91.255],[-191.113,-92.73],[-188.758,-91.944],[-187.379,-92.239],[-187.28,-93.421],[-186.395,-93.911],[-185.906,-95.482],[-187.577,-95.678],[-189.735,-95.877],[-190.525,-96.763],[-192.983,-97.746],[-191.312,-97.648],[-188.656,-96.957],[-186.885,-96.369],[-185.116,-96.957],[-183.936,-98.43],[-185.215,-99.613],[-183.446,-99.613],[-182.362,-98.533],[-183.248,-97.352],[-184.037,-95.191],[-184.037,-92.534],[-185.807,-91.944],[-185.313,-90.766],[-183.446,-90.667],[-183.446,-89.584],[-180.99,-89.783],[-180.3,-91.158],[-177.939,-91.059],[-176.664,-90.862],[-175.385,-90.276],[-173.516,-90.276],[-173.318,-91.751],[-175.187,-92.143],[-176.072,-94.01],[-178.331,-94.203],[-180.104,-95.678],[-181.775,-96.074],[-181.775,-97.152],[-180.202,-96.862],[-179.513,-97.648],[-179.71,-98.533],[-177.843,-98.533],[-177.154,-99.811],[-175.385,-101.088],[-174.793,-102.169],[-175.779,-103.349],[-176.664,-105.316],[-174.99,-105.609],[-174.5,-107.083],[-175.779,-108.561],[-177.547,-109.346],[-179.809,-110.525],[-177.255,-110.525],[-176.96,-111.313],[-175.09,-111.117],[-173.614,-110.23],[-171.551,-110.326],[-169.683,-110.721],[-171.256,-112.196],[-170.175,-112.491],[-168.503,-110.82],[-166.637,-110.623],[-165.848,-109.052],[-164.471,-108.757],[-163.686,-107.577],[-162.212,-106.987],[-161.423,-105.512],[-159.755,-104.923],[-158.377,-103.448],[-158.081,-101.676],[-160.049,-99.811],[-161.718,-97.945],[-160.836,-96.174],[-163.786,-95.779],[-165.358,-96.174],[-167.028,-96.174],[-169.09,-94.7],[-169.09,-93.126],[-166.637,-92.73],[-164.668,-92.831],[-164.176,-93.715],[-163.291,-94.203],[-162.014,-93.911],[-159.656,-93.225],[-157.393,-91.059],[-156.903,-89.881],[-155.525,-88.409],[-153.558,-88.409],[-151.493,-86.44],[-148.448,-86.34],[-146.484,-85.459],[-146.286,-86.636],[-149.528,-89.094],[-150.905,-90.175],[-151.592,-91.356],[-149.431,-90.276],[-145.792,-88.409],[-143.924,-87.325],[-143.924,-89.094],[-142.844,-90.667],[-144.615,-91.648],[-145.007,-94.108],[-147.463,-94.993],[-150.414,-98.141],[-149.431,-99.025],[-148.448,-99.811],[-144.516,-96.862],[-143.139,-94.993],[-141.467,-94.7],[-140.974,-96.862],[-138.913,-97.648],[-138.617,-98.533],[-137.238,-98.533],[-136.65,-99.515],[-136.749,-100.993],[-139.501,-100.993],[-139.501,-101.778],[-141.171,-103.057],[-142.352,-103.252],[-144.122,-104.035],[-145.497,-104.035],[-145.893,-105.119],[-146.383,-106.099],[-148.743,-106.099],[-149.727,-106.201],[-149.727,-107.871],[-148.055,-107.871],[-147.17,-108.658],[-149.431,-109.247],[-149.137,-109.936],[-148.055,-110.131],[-149.333,-111.313],[-151.101,-111.803],[-150.414,-112.884],[-152.283,-113.67],[-154.346,-113.576],[-154.641,-114.458],[-156.313,-114.554],[-156.999,-114.752],[-155.624,-115.639],[-157.491,-116.226],[-159.853,-115.639],[-161.423,-117.212],[-161.622,-118.096],[-163.095,-118.195],[-163.192,-119.274],[-165.554,-120.064],[-168.6,-120.064],[-168.995,-119.177],[-170.565,-118.978],[-172.04,-119.274],[-172.534,-118.195],[-174.009,-118.096],[-174.11,-119.472],[-173.221,-120.748],[-174.699,-122.522],[-175.385,-124.089],[-178.137,-124.089],[-179.415,-122.914],[-181.285,-122.816],[-182.564,-122.027],[-182.858,-120.455],[-181.676,-118.784],[-182.463,-117.702],[-180.888,-115.639],[-182.167,-115.441],[-183.936,-117.212],[-184.525,-119.566],[-184.724,-121.14],[-183.446,-122.816],[-181.58,-124.19]],\"c\":true},\"ix\":2},\"nm\":\"Path 54\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":54,\"ty\":\"sh\",\"ix\":55,\"ks\":{\"a\":0,\"k\":{\"i\":[[0,0],[0,0],[0,0],[0,0]],\"o\":[[0,0],[0,0],[0,0],[0,0]],\"v\":[[-225.131,-123.893],[-225.817,-123.207],[-224.44,-123.01],[-223.951,-123.994]],\"c\":true},\"ix\":2},\"nm\":\"Path 55\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":55,\"ty\":\"sh\",\"ix\":56,\"ks\":{\"a\":0,\"k\":{\"i\":[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],\"o\":[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],\"v\":[[-173.318,-123.893],[-172.926,-122.127],[-172.336,-120.748],[-168.404,-120.552],[-167.028,-121.537],[-164.668,-122.127],[-167.028,-123.7],[-170.764,-123.893]],\"c\":true},\"ix\":2},\"nm\":\"Path 56\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":56,\"ty\":\"sh\",\"ix\":57,\"ks\":{\"a\":0,\"k\":{\"i\":[[0.269,-0.167],[0.147,-0.118],[0.273,-0.269],[-0.218,0],[-0.194,0.028],[-0.123,0.028],[-0.146,0.027],[-0.125,-0.007],[-0.151,0.014],[0,0],[-0.171,0.073],[0.051,0.103],[0.126,0.098],[0.149,0.05],[0.122,0.024],[0.152,0]],\"o\":[[-0.174,0.098],[-0.298,0.249],[0.174,0.1],[0.222,0],[0.121,0],[0.149,-0.019],[0.131,-0.012],[0.128,0.006],[0,0],[0.171,-0.025],[-0.024,-0.122],[-0.095,-0.145],[-0.12,-0.096],[-0.121,-0.047],[-0.123,-0.024],[-0.34,0]],\"v\":[[110.111,-122.914],[109.715,-122.522],[108.927,-121.832],[109.418,-121.537],[110.009,-121.636],[110.404,-121.636],[110.796,-121.832],[111.171,-121.831],[111.582,-121.832],[111.977,-121.832],[112.368,-122.127],[112.368,-122.522],[112.072,-122.914],[111.68,-123.11],[111.287,-123.207],[110.892,-123.307]],\"c\":true},\"ix\":2},\"nm\":\"Path 57\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":57,\"ty\":\"sh\",\"ix\":58,\"ks\":{\"a\":0,\"k\":{\"i\":[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[-0.389,-0.096],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],\"o\":[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0.393,0.1],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],\"v\":[[-239.188,-122.522],[-240.369,-121.537],[-241.549,-121.045],[-243.122,-120.652],[-244.497,-119.766],[-244.203,-118.391],[-245.875,-117.408],[-245.774,-116.619],[-244.596,-116.619],[-243.808,-115.833],[-242.335,-116.325],[-240.467,-116.525],[-239.287,-115.639],[-241.155,-115.144],[-242.826,-114.752],[-243.612,-113.968],[-241.448,-113.081],[-239.287,-113.081],[-236.927,-113.277],[-234.862,-113.277],[-233.193,-112.591],[-233.389,-111.605],[-236.828,-111.705],[-239.975,-111.705],[-242.234,-110.721],[-240.86,-108.757],[-238.402,-108.658],[-236.338,-108.658],[-235.255,-106.79],[-233.882,-106.002],[-231.227,-106.002],[-228.768,-106.099],[-227.096,-106.987],[-225.328,-107.479],[-223.556,-108.462],[-222.575,-109.052],[-221.787,-108.361],[-220.706,-108.561],[-217.952,-107.183],[-216.083,-107.083],[-214.411,-107.28],[-213.728,-108.561],[-215.102,-109.642],[-214.019,-109.738],[-212.35,-110.034],[-211.956,-110.92],[-213.529,-111.902],[-216.774,-112.984],[-218.445,-114.655],[-218.15,-116.325],[-219.626,-117.408],[-219.92,-119.669],[-221.099,-121.14],[-223.26,-122.027],[-225.131,-122.027],[-225.131,-120.358],[-224.736,-119.177],[-223.85,-117.604],[-224.44,-116.917],[-225.228,-117.015],[-226.017,-117.702],[-226.21,-118.881],[-226.703,-119.867],[-228.177,-121.437],[-229.65,-121.537],[-229.257,-120.455],[-228.669,-119.566],[-230.339,-119.566],[-230.438,-118.784],[-231.816,-118.585],[-231.522,-119.472],[-231.126,-120.552],[-232.305,-120.652],[-233.78,-121.14],[-235.255,-121.045],[-235.452,-119.963],[-236.631,-120.159],[-236.338,-120.849],[-236.631,-122.225],[-237.419,-122.522]],\"c\":true},\"ix\":2},\"nm\":\"Path 58\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":58,\"ty\":\"sh\",\"ix\":59,\"ks\":{\"a\":0,\"k\":{\"i\":[[0.049,-0.018],[0.149,-0.098],[0.122,-0.051],[0.12,0],[0.194,0],[0.292,-0.025],[0.148,-0.07],[0,-0.49],[-0.195,-0.048],[-0.121,0],[-0.394,0],[-0.541,0.076],[-0.294,0.097],[-0.147,0.027],[-0.343,0],[0,0],[-0.146,0],[0,0],[-0.146,0],[0,0],[0.12,0.073],[0.171,0.078],[0.273,-0.014],[0.145,0.007],[0.123,0],[0.08,-0.006],[0.094,0.011],[0.148,0.048],[0.194,0.023],[0.175,0],[0.094,0]],\"o\":[[-0.169,0.07],[-0.097,0.074],[-0.124,0.052],[-0.171,0.023],[-0.294,0],[-0.172,0],[-0.442,0.224],[0.099,0.173],[0.122,0.027],[0.369,0.051],[0.564,0],[0.295,-0.023],[0.148,-0.05],[0.32,-0.074],[0,0],[0.15,0],[0,0],[0.148,0],[0,0],[-0.074,-0.122],[-0.15,-0.097],[-0.273,-0.133],[-0.123,0.007],[-0.147,0],[-0.09,-0.013],[-0.074,0.006],[-0.172,-0.027],[-0.196,-0.077],[-0.149,-0.026],[-0.113,0],[-0.046,0]],\"v\":[[317.051,-116.421],[316.658,-116.128],[316.561,-115.736],[316.168,-115.736],[315.676,-115.736],[314.892,-115.736],[314.496,-115.54],[314.103,-114.36],[314.397,-113.87],[314.792,-113.87],[315.822,-113.87],[317.249,-113.87],[318.037,-114.163],[318.428,-114.36],[319.288,-114.36],[320.098,-114.36],[320.493,-114.262],[320.986,-114.262],[321.378,-114.333],[321.378,-114.95],[321.184,-115.344],[320.79,-115.639],[320.009,-115.742],[319.61,-115.736],[319.215,-115.833],[318.969,-115.834],[318.723,-115.833],[318.329,-116.029],[317.939,-116.421],[317.493,-116.421],[317.193,-116.444]],\"c\":true},\"ix\":2},\"nm\":\"Path 59\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":59,\"ty\":\"sh\",\"ix\":60,\"ks\":{\"a\":0,\"k\":{\"i\":[[0,0],[0,-0.195],[-0.028,-0.147],[0,0],[0,0],[-0.121,0.097],[-0.198,0.096],[-0.038,-0.006],[-0.022,0.012],[-0.225,0.097],[-0.075,0.099],[-0.096,0.143],[-0.021,0.127],[0.118,0.049],[0.101,0.072],[0.071,0.124],[0.025,0.149]],\"o\":[[0,0.197],[0,0.174],[0,0],[0,0],[0.174,0],[0.177,-0.149],[0.025,-0.013],[0.036,0.005],[0.196,-0.1],[0.12,-0.052],[0.1,-0.148],[0.078,-0.098],[-0.118,-0.02],[-0.124,-0.048],[-0.124,-0.101],[-0.074,-0.121],[0,0]],\"v\":[[68.818,-109.148],[68.72,-108.658],[68.918,-108.265],[68.918,-106.397],[70.07,-106.397],[70.487,-106.494],[70.784,-107.083],[70.885,-107.083],[70.98,-107.083],[71.572,-107.28],[71.962,-107.379],[72.257,-107.773],[72.257,-108.168],[71.868,-108.265],[71.471,-108.361],[71.276,-108.757],[71.276,-109.148]],\"c\":true},\"ix\":2},\"nm\":\"Path 60\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":60,\"ty\":\"sh\",\"ix\":61,\"ks\":{\"a\":0,\"k\":{\"i\":[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],\"o\":[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],\"v\":[[-223.85,-106.594],[-226.406,-105.316],[-224.44,-104.923],[-222.867,-105.709],[-221.296,-106.002],[-221.198,-107.28]],\"c\":true},\"ix\":2},\"nm\":\"Path 61\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":61,\"ty\":\"sh\",\"ix\":62,\"ks\":{\"a\":0,\"k\":{\"i\":[[0.394,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],\"o\":[[-0.393,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],\"v\":[[-166.538,-104.824],[-168.11,-103.148],[-167.224,-101.876],[-165.554,-101.676],[-163.786,-102.071],[-162.898,-103.448],[-163.686,-104.923]],\"c\":true},\"ix\":2},\"nm\":\"Path 62\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":62,\"ty\":\"sh\",\"ix\":63,\"ks\":{\"a\":0,\"k\":{\"i\":[[0,0],[0,0],[0.49,0],[0.393,-0.049],[0.248,-0.049],[0.193,-0.196],[0,-0.394],[0,-0.392],[-0.128,-0.013],[-0.125,0.026],[-0.345,0],[-0.244,-0.048],[-0.199,-0.151],[-0.198,-0.241],[-0.099,-0.345],[0.293,0],[0.938,-0.052],[0.291,-0.051],[0,0],[-0.298,0],[0,0],[-0.048,0],[0,0],[0,0],[0,0],[-0.296,0],[-0.591,0],[0,0],[-0.243,-0.101],[-0.297,-0.196],[-0.297,-0.101],[-0.447,0],[-0.389,0.048],[-0.292,0.196],[-0.347,0.244],[-0.343,0.147],[-0.135,-0.025],[-0.121,0.048],[-0.341,0.149],[-0.587,0.096],[-1.13,0],[0,0],[0.295,0.146],[0,0],[0.145,-0.022],[0.129,0.022],[0,0.241],[0,0.346],[0,0.39],[0,0],[0.298,-0.097],[0.345,-0.145],[0.393,0],[0.2,0],[0.297,0],[0.589,0],[0.54,-0.102],[0.785,0],[0,0],[0,0],[0,0],[0.147,0.343]],\"o\":[[0,0],[-0.441,-0.145],[-0.441,0],[-0.244,0],[-0.296,0.098],[-0.247,0.248],[0,0.389],[0.143,-0.023],[0.132,0.011],[0.295,-0.047],[0.293,0],[0.248,0.048],[0.242,0.193],[0.196,0.249],[-0.295,-0.051],[-0.936,-0.052],[-0.296,0],[0,0],[0.291,-0.048],[0,0],[0.101,0],[0,0],[0,0],[0,0],[0.293,0],[0.586,-0.053],[0,0],[0.248,0],[0.344,0.145],[0.246,0.149],[0.392,0.145],[0.442,0],[0.349,-0.051],[0.344,-0.247],[0.294,-0.201],[0.122,-0.049],[0.135,0.024],[0.396,-0.149],[0.544,-0.294],[1.083,-0.147],[0,0],[-0.199,-0.243],[0,0],[-0.137,-0.055],[-0.116,0.017],[0.049,-0.294],[0.049,-0.297],[0,-0.394],[0,0],[-0.345,0],[-0.341,0.148],[-0.339,0.151],[-0.194,0],[-0.296,0],[-0.587,-0.052],[-0.587,0],[-0.738,0.146],[0,0],[0,0],[0,0],[-0.053,-0.345],[0,0]],\"v\":[[-63.41,-98.923],[-63.41,-98.141],[-64.589,-98.533],[-65.771,-98.334],[-66.556,-98.334],[-67.34,-97.945],[-67.928,-97.152],[-67.734,-96.174],[-67.331,-96.172],[-66.948,-96.174],[-66.161,-96.566],[-65.378,-96.566],[-64.783,-95.972],[-64,-95.585],[-64,-94.597],[-64.783,-94.795],[-67.147,-94.795],[-67.928,-94.597],[-67.734,-93.421],[-66.948,-93.615],[-65.378,-93.615],[-65.18,-93.421],[-65.18,-91.849],[-64.783,-91.059],[-64,-91.059],[-63.212,-91.255],[-61.638,-91.255],[-60.855,-91.255],[-60.068,-91.255],[-59.477,-90.471],[-58.689,-90.074],[-57.509,-90.074],[-56.335,-90.074],[-55.546,-90.667],[-54.956,-91.648],[-54.169,-92.239],[-53.775,-92.239],[-53.384,-92.239],[-52.598,-93.027],[-51.025,-93.615],[-48.073,-93.615],[-48.073,-95.191],[-48.469,-95.972],[-49.253,-96.369],[-49.671,-96.381],[-50.038,-96.369],[-50.038,-97.152],[-49.648,-97.892],[-49.84,-98.923],[-51.758,-98.923],[-52.598,-98.727],[-53.384,-98.141],[-54.365,-97.697],[-54.758,-97.352],[-55.546,-97.546],[-57.118,-97.746],[-58.689,-97.546],[-60.509,-96.763],[-62.031,-96.763],[-62.031,-97.546],[-62.031,-98.334],[-62.626,-99.12]],\"c\":true},\"ix\":2},\"nm\":\"Path 63\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":63,\"ty\":\"sh\",\"ix\":64,\"ks\":{\"a\":0,\"k\":{\"i\":[[0.026,-0.008],[-0.03,0.001],[0.012,0]],\"o\":[[0.031,-0.001],[-0.003,-0.01],[-0.017,0]],\"v\":[[52.898,-96.376],[52.991,-96.378],[52.967,-96.392]],\"c\":true},\"ix\":2},\"nm\":\"Path 64\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":64,\"ty\":\"sh\",\"ix\":65,\"ks\":{\"a\":0,\"k\":{\"i\":[[0.036,-0.004],[-0.043,0.014],[-0.002,0.001]],\"o\":[[0.013,0.024],[0.002,-0.001],[-0.034,0.002]],\"v\":[[52.793,-96.369],[52.893,-96.374],[52.898,-96.376]],\"c\":true},\"ix\":2},\"nm\":\"Path 65\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":65,\"ty\":\"sh\",\"ix\":66,\"ks\":{\"a\":0,\"k\":{\"i\":[[0.566,-0.123],[-0.171,-0.023],[-0.145,0.011],[-0.12,-0.009],[-0.119,-0.047],[-0.168,-0.076],[-0.345,0],[0,0],[-0.246,0],[-0.345,-0.149],[-0.273,0],[-0.218,0.028],[0,0],[0.121,0.025],[0.147,0.048],[0.125,0.025],[0.319,0.051],[0.271,0.047],[0.15,0.025],[0.151,0.025],[0.225,0]],\"o\":[[0.148,0.098],[0.154,0.028],[0.113,-0.008],[0.122,0],[0.173,0.05],[0.298,0.12],[0,0],[0.245,0],[0.394,0],[0.248,0.097],[0.221,0],[0,0],[-0.121,-0.023],[-0.147,-0.048],[-0.126,-0.027],[-0.318,-0.074],[-0.269,-0.051],[-0.145,-0.024],[-0.124,0],[-0.219,-0.024],[-0.588,0]],\"v\":[[331.699,-90.471],[331.798,-89.783],[332.241,-89.776],[332.587,-89.783],[332.978,-89.783],[333.271,-89.388],[334.158,-89.29],[334.65,-89.29],[335.238,-89.488],[336.222,-89.191],[336.837,-88.898],[337.4,-88.998],[337.4,-89.783],[337.009,-89.881],[336.616,-90.074],[336.222,-90.175],[335.337,-90.373],[334.551,-90.471],[334.158,-90.667],[333.762,-90.667],[333.175,-90.766]],\"c\":true},\"ix\":2},\"nm\":\"Path 66\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":66,\"ty\":\"sh\",\"ix\":67,\"ks\":{\"a\":0,\"k\":{\"i\":[[0.346,-0.148],[0.245,-0.097],[0.639,-0.348],[-0.44,0],[-0.639,0.445],[-0.196,0.246],[0,0]],\"o\":[[-0.246,0.096],[-0.689,0.296],[0.345,0.192],[0.839,0],[0.297,-0.196],[0,0],[-0.295,0.149]],\"v\":[[-177.057,-87.913],[-177.843,-87.72],[-179.613,-86.731],[-178.631,-86.144],[-176.664,-86.933],[-176.072,-87.72],[-176.268,-88.503]],\"c\":true},\"ix\":2},\"nm\":\"Path 67\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":67,\"ty\":\"sh\",\"ix\":68,\"ks\":{\"a\":0,\"k\":{\"i\":[[0,0],[0,0],[0,0],[0,0],[0,0],[0.046,0.542],[0,0]],\"o\":[[0,0],[0,0],[0,0],[0,0],[-0.048,-0.541],[0,0],[0,0]],\"v\":[[-173.516,-86.539],[-172.926,-84.57],[-170.959,-84.57],[-170.175,-84.965],[-170.175,-85.751],[-170.367,-87.129],[-171.944,-87.325]],\"c\":true},\"ix\":2},\"nm\":\"Path 68\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":68,\"ty\":\"sh\",\"ix\":69,\"ks\":{\"a\":0,\"k\":{\"i\":[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],\"o\":[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],\"v\":[[-335.828,-81.328],[-336.516,-80.834],[-336.22,-79.656],[-334.549,-79.557],[-333.763,-79.954],[-334.355,-81.328]],\"c\":true},\"ix\":2},\"nm\":\"Path 69\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":69,\"ty\":\"sh\",\"ix\":70,\"ks\":{\"a\":0,\"k\":{\"i\":[[0,0],[0.223,-0.025],[0.244,-0.127],[0,-0.343],[0,0],[-0.149,0],[-0.346,0],[-0.148,0.049],[-0.148,0.1],[-0.076,0.098],[-0.025,0.291],[0.168,0]],\"o\":[[-0.222,0],[-0.293,0.024],[-0.297,0.146],[0,0],[0.149,0],[0.343,0],[0.171,0],[0.171,-0.077],[0.099,-0.051],[0.173,-0.221],[-0.148,-0.051],[0,0]],\"v\":[[287.068,-77.69],[286.475,-77.593],[285.693,-77.491],[285.102,-76.831],[285.102,-76.067],[285.496,-76.017],[286.355,-76.067],[286.772,-76.313],[287.168,-76.609],[287.561,-76.707],[287.657,-77.491],[287.267,-77.69]],\"c\":true},\"ix\":2},\"nm\":\"Path 70\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":70,\"ty\":\"sh\",\"ix\":71,\"ks\":{\"a\":0,\"k\":{\"i\":[[0.164,0],[0,0],[0.146,0],[0.617,0.072],[0.027,-0.291],[0.052,-0.122],[0,-0.222],[0,-0.072],[0,-0.295],[0,-0.148],[0.347,0],[0.149,0.072],[0.244,0],[0.099,-0.197],[0,-0.146],[-0.171,-0.219],[-0.151,-0.079],[-0.267,-0.048],[0.029,-0.147],[0,0],[0,-0.15],[0,-0.175],[0.095,-0.123],[0.125,-0.049],[0.123,-0.05],[0,-0.222],[-0.022,-0.224],[0,0],[-0.169,0],[-0.098,-0.049],[-0.075,-0.121],[-0.099,-0.145],[0,0],[-0.027,0.145],[-0.046,0.146],[0,0],[0,-0.149],[0,-0.367],[0.049,-0.098],[0.122,-0.072],[0.147,-0.049],[-0.027,-0.122],[-0.071,-0.17],[0,0],[0,0],[-0.074,-0.124],[-0.073,-0.148],[0,-0.196],[0,-0.247],[-0.172,-0.175],[-0.295,-0.147],[0,0],[0,-0.32],[0.099,-0.125],[0.218,0],[0.197,0.02],[0.172,0.05],[0.22,0],[0,0],[0.099,-0.047],[0.12,-0.125],[0.098,-0.05],[0.079,0.01],[0.054,-0.011],[0.147,0],[0,0],[-0.196,0],[-0.393,0],[-0.223,-0.026],[0.046,-0.126],[0.073,-0.096],[0.085,0.021],[0.044,-0.022],[0.147,-0.097],[0.12,-0.074],[0.187,0.004],[0.088,-0.007],[0,0],[-0.027,-0.122],[-0.046,-0.146],[-0.061,-0.006],[-0.073,0.011],[-0.146,0.05],[-0.25,0],[-0.392,-0.098],[-0.148,0],[-0.112,0.009],[-0.154,-0.027],[-0.124,-0.025],[-0.101,-0.098],[0.174,-0.079],[0.123,-0.025],[0.346,-0.027],[0.124,-0.027],[0.145,-0.075],[0.146,-0.073],[0.075,0.01],[0.056,-0.01],[0.268,-0.047],[0.073,-0.269],[0.047,-0.1],[0.125,-0.072],[0.172,-0.072],[0.122,-0.049],[-0.196,0],[-0.147,0],[-0.127,0.022],[-0.125,0.051],[0,0],[-0.171,0],[-0.148,0],[-0.169,0],[0,0],[-0.076,0.418],[-0.296,0],[-0.151,0],[-0.174,0],[-0.296,0.024],[-0.126,0.048],[-0.146,0.103],[-0.198,0],[-0.196,-0.052],[-0.44,0],[0,0],[-0.149,0],[-0.12,-0.006],[-0.15,0.013],[-0.124,0.051],[-0.15,0.1],[-0.143,0.078],[-0.074,-0.011],[-0.057,0.013],[-0.144,0],[-0.148,0.048],[0,0],[0.075,0.154],[0,0.243],[0,0],[-0.098,0.073],[-0.124,0.048],[-0.067,-0.014],[-0.051,0.038],[-0.052,0.121],[-0.021,0.124],[0,0],[0,0],[0.124,0.147],[0.073,0.199],[0.073,0.096],[0.128,0.099],[0.147,0.097],[0,0],[0.052,-0.097],[0.097,-0.149],[0.1,-0.121],[0.075,0.096],[0.072,0.172],[0,0.146],[0.022,0.296],[0.025,0.221],[0,0],[0.077,0.391],[0.052,0.121],[0.294,0.197],[0.067,-0.018],[0.062,0.04],[0.118,0.098],[0.046,0.098],[0.046,0.125],[0.094,0.148],[0.073,0.172],[0.051,0.118],[0.07,0.172],[0.075,0.123],[0.201,0.097],[0.173,0],[0.121,-0.006],[0.149,0.013],[0.246,0.096],[0.147,0.122],[-0.079,0.124],[-0.124,0.145],[-0.118,0.072],[-0.08,-0.015],[-0.051,0.01],[-0.149,0.024],[0,0],[-0.05,0.125],[-0.102,0.147],[-0.123,0.097],[0,0.172],[0,0],[0,0],[-0.072,0.121],[-0.071,0.169],[-0.02,0.124],[-0.049,0.123],[-0.099,0.122],[-0.125,0.1],[-0.126,0.074],[0.195,0.072],[0.064,0]],\"o\":[[0,0],[-0.149,0],[-0.612,0.053],[0,0.297],[0,0.147],[-0.095,0.199],[0,0.075],[-0.024,0.293],[0,0.147],[-0.341,0.021],[-0.168,0],[-0.197,-0.099],[-0.248,0],[-0.048,0.12],[0,0.298],[0.099,0.12],[0.243,0.123],[-0.047,0.149],[0,0],[0,0.148],[0,0.171],[0,0.169],[-0.074,0.097],[-0.125,0.048],[-0.198,0.078],[0,0.22],[0,0],[0.146,-0.026],[0.149,0],[0.099,0.047],[0.099,0.15],[0,0],[0.02,-0.145],[0.02,-0.171],[0,0],[0,0.147],[0.022,0.368],[0,0.147],[-0.053,0.098],[-0.124,0.074],[0.02,0.124],[0.047,0.176],[0,0],[0,0],[0.123,0.099],[0.073,0.125],[0.073,0.173],[0,0.247],[0,0.244],[0.218,0.221],[0,0],[0.124,0.292],[0,0.196],[-0.122,0.147],[-0.224,0],[-0.169,-0.028],[-0.193,-0.047],[0,0],[-0.124,0],[-0.149,0.1],[-0.098,0.099],[-0.054,0.027],[-0.064,-0.009],[-0.124,0.023],[0,0],[0.178,0.048],[0.397,0],[0.222,0],[0,0.145],[-0.049,0.12],[-0.042,0.054],[-0.069,-0.017],[-0.145,0.097],[-0.125,0.077],[-0.172,0.102],[-0.082,-0.001],[0,0],[0.029,0.121],[0.047,0.148],[0.076,-0.012],[0.061,0.006],[0.171,-0.025],[0.223,-0.072],[0.415,0],[0.123,0.023],[0.13,0.011],[0.142,-0.01],[0.119,0],[0.147,0.023],[-0.147,0.12],[-0.121,0.044],[-0.32,0.099],[-0.147,0],[-0.147,0.048],[-0.151,0.072],[-0.069,0.026],[-0.06,-0.008],[-0.269,0.073],[0,0.299],[-0.027,0.124],[-0.077,0.124],[-0.147,0.099],[-0.124,0.052],[0.174,0.051],[0.147,0],[0.148,0],[0.119,-0.028],[0,0],[0.147,-0.073],[0.152,0],[0.168,0],[0,0],[0,-0.419],[0.294,0.026],[0.151,0],[0.171,0],[0.294,0],[0.147,0],[0.168,-0.075],[0.147,-0.1],[0.222,0],[0.416,0.148],[0,0],[0.147,0],[0.146,-0.011],[0.124,0.007],[0.147,0],[0.169,-0.075],[0.121,-0.073],[0.066,-0.026],[0.061,0.009],[0.125,-0.02],[0.174,0],[0,0],[-0.098,-0.144],[-0.097,-0.192],[0,0],[0,-0.148],[0.101,-0.076],[0.057,-0.024],[0.075,0.016],[0.103,-0.078],[0.045,-0.126],[0,0],[0,0],[-0.148,-0.101],[-0.117,-0.149],[-0.053,-0.119],[-0.074,-0.124],[-0.123,-0.097],[0,0],[-0.021,0.148],[-0.098,0.146],[-0.098,0.146],[-0.12,-0.048],[-0.099,-0.148],[-0.05,-0.122],[-0.029,-0.295],[0,-0.224],[0,0],[0.047,-0.419],[0,-0.121],[-0.122,-0.32],[-0.062,-0.033],[-0.068,0.019],[-0.146,-0.069],[-0.102,-0.071],[-0.049,-0.098],[-0.074,-0.17],[-0.124,-0.169],[-0.049,-0.122],[-0.074,-0.172],[-0.078,-0.149],[-0.099,-0.169],[-0.145,-0.072],[-0.146,-0.01],[-0.124,0.006],[-0.296,-0.023],[-0.174,-0.077],[0.073,-0.127],[0.095,-0.152],[0.075,-0.097],[0.073,-0.042],[0.056,0.011],[0.121,-0.024],[0,0],[0,-0.122],[0.073,-0.17],[0.095,-0.124],[0.123,-0.1],[0,0],[0,0],[0.071,-0.121],[0.097,-0.147],[0.049,-0.124],[0.026,-0.125],[0.075,-0.172],[0.099,-0.122],[0.119,-0.094],[-0.15,-0.148],[-0.075,-0.024],[-0.127,0]],\"v\":[[-29.025,-76.216],[-29.589,-76.216],[-29.984,-76.12],[-31.559,-76.192],[-31.559,-75.43],[-31.656,-75.037],[-32.001,-74.545],[-32.049,-74.349],[-31.951,-73.56],[-32.001,-73.167],[-32.91,-73.069],[-33.328,-73.167],[-33.818,-73.56],[-34.409,-73.266],[-34.409,-72.876],[-34.31,-72.088],[-33.915,-71.889],[-33.132,-71.694],[-33.328,-71.301],[-33.328,-70.908],[-33.423,-70.513],[-33.229,-70.119],[-33.423,-69.727],[-33.818,-69.63],[-34.211,-69.532],[-34.603,-69.137],[-34.508,-68.545],[-33.72,-68.545],[-33.328,-68.745],[-32.934,-68.646],[-32.934,-68.254],[-32.538,-67.959],[-31.751,-67.959],[-31.751,-68.352],[-31.559,-68.745],[-31.163,-68.449],[-31.259,-68.058],[-30.867,-67.173],[-30.965,-66.778],[-31.359,-66.68],[-31.751,-66.484],[-31.751,-66.091],[-31.46,-65.698],[-29.493,-65.698],[-29.294,-66.091],[-28.902,-65.895],[-28.706,-65.5],[-28.409,-65.108],[-28.607,-64.515],[-28.409,-63.926],[-27.625,-63.535],[-27.823,-62.746],[-27.529,-61.959],[-27.823,-61.565],[-28.409,-61.565],[-29.003,-61.565],[-29.396,-61.863],[-29.984,-61.863],[-30.18,-61.863],[-30.573,-61.863],[-30.867,-61.468],[-30.965,-61.076],[-31.176,-61.07],[-31.359,-61.076],[-31.751,-61.076],[-31.855,-60.683],[-31.46,-60.386],[-30.452,-60.587],[-29.884,-60.485],[-29.884,-60.091],[-29.984,-59.7],[-30.197,-59.688],[-30.379,-59.7],[-30.77,-59.406],[-30.965,-59.011],[-31.497,-58.915],[-31.751,-58.911],[-31.855,-58.518],[-31.751,-58.129],[-31.559,-57.734],[-31.359,-57.734],[-31.163,-57.734],[-30.77,-57.93],[-30.18,-58.129],[-29.197,-57.734],[-28.805,-57.734],[-28.448,-57.741],[-28.016,-57.734],[-27.625,-57.734],[-27.428,-57.34],[-27.724,-56.943],[-28.116,-56.85],[-29.003,-56.751],[-29.396,-56.751],[-29.783,-56.554],[-29.984,-56.161],[-30.203,-56.155],[-30.379,-56.161],[-31.163,-55.964],[-31.163,-55.179],[-31.259,-54.783],[-31.656,-54.587],[-32.049,-54.295],[-32.443,-54.194],[-32.049,-53.898],[-31.656,-53.998],[-31.259,-54.094],[-30.867,-54.194],[-30.474,-54.393],[-30.281,-54.783],[-29.884,-54.69],[-29.469,-54.488],[-28.31,-54.488],[-28.214,-55.547],[-27.428,-55.472],[-27.059,-55.572],[-26.641,-55.472],[-25.855,-55.472],[-25.46,-55.472],[-25.069,-55.768],[-24.773,-56.161],[-24.182,-56.062],[-23.202,-55.472],[-23.003,-55.472],[-22.611,-55.572],[-22.223,-55.572],[-21.824,-55.572],[-21.43,-55.572],[-21.038,-55.868],[-20.841,-56.262],[-20.628,-56.266],[-20.448,-56.262],[-20.057,-56.262],[-19.66,-56.457],[-19.562,-56.85],[-19.859,-57.246],[-20.155,-57.832],[-20.155,-58.028],[-20.057,-58.421],[-19.66,-58.518],[-19.467,-58.513],[-19.27,-58.518],[-19.167,-58.911],[-19.073,-59.307],[-18.285,-59.307],[-18.285,-60.091],[-18.68,-60.386],[-18.973,-60.882],[-18.973,-61.272],[-19.366,-61.468],[-19.76,-61.763],[-20.155,-61.666],[-20.057,-61.272],[-20.448,-60.977],[-20.743,-60.587],[-21.137,-60.683],[-21.43,-61.076],[-21.43,-61.468],[-21.43,-62.255],[-21.529,-62.845],[-22.708,-62.845],[-22.611,-63.926],[-22.611,-64.319],[-23.297,-65.011],[-23.492,-65.009],[-23.693,-65.011],[-23.884,-65.402],[-24.281,-65.5],[-24.281,-65.895],[-24.576,-66.288],[-25.069,-66.583],[-25.069,-66.974],[-25.361,-67.366],[-25.56,-67.763],[-25.956,-68.155],[-26.348,-68.352],[-26.736,-68.351],[-27.132,-68.352],[-27.921,-68.545],[-28.214,-68.94],[-28.016,-69.333],[-27.625,-69.63],[-27.529,-70.022],[-27.294,-70.034],[-27.132,-70.022],[-26.738,-70.119],[-26.738,-70.513],[-26.738,-70.908],[-26.443,-71.301],[-26.051,-71.497],[-25.855,-71.866],[-25.855,-73.463],[-29.688,-73.463],[-29.493,-73.855],[-29.1,-74.152],[-29.1,-74.545],[-29.1,-74.939],[-28.706,-75.233],[-28.409,-75.627],[-28.016,-75.823],[-28.409,-76.216],[-28.615,-76.249]],\"c\":true},\"ix\":2},\"nm\":\"Path 71\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":71,\"ty\":\"sh\",\"ix\":72,\"ks\":{\"a\":0,\"k\":{\"i\":[[0.121,-0.024],[0.319,-0.197],[0.124,-0.073],[0.096,-0.124],[0.124,-0.365],[0.025,-0.122],[0,0],[-0.126,0.099],[-0.122,0.103],[-0.169,0.046],[-0.062,-0.008],[-0.066,0.025],[-0.098,0.075],[-0.052,0.123],[-0.048,0.171],[-0.049,0.272]],\"o\":[[-0.369,0.126],[-0.126,0.074],[-0.123,0.074],[-0.248,0.268],[-0.025,0.126],[0,0],[0.12,-0.073],[0.149,-0.122],[0.124,-0.096],[0.058,-0.012],[0.074,0.01],[0.126,-0.054],[0.099,-0.071],[0.071,-0.172],[0.099,-0.269],[-0.122,0.024]],\"v\":[[-34.112,-75.921],[-34.898,-75.33],[-35.292,-75.233],[-35.487,-74.838],[-36.178,-74.056],[-36.178,-73.659],[-35.783,-73.463],[-35.391,-73.659],[-35.098,-74.056],[-34.805,-74.442],[-34.622,-74.437],[-34.409,-74.442],[-34.014,-74.545],[-34.014,-74.939],[-33.72,-75.33],[-33.525,-76.12]],\"c\":true},\"ix\":2},\"nm\":\"Path 72\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":72,\"ty\":\"sh\",\"ix\":73,\"ks\":{\"a\":0,\"k\":{\"i\":[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],\"o\":[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],\"v\":[[-310.169,-74.838],[-312.921,-73.266],[-312.037,-71.4],[-310.266,-72.379],[-308.792,-74.056],[-308.792,-75.823]],\"c\":true},\"ix\":2},\"nm\":\"Path 73\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":73,\"ty\":\"sh\",\"ix\":74,\"ks\":{\"a\":0,\"k\":{\"i\":[[-0.053,-0.371],[0,-0.169],[-0.022,-0.345],[-0.024,-0.293],[0,0],[0.05,0.15],[0.022,0.146],[0.047,0.343],[0.076,0.172],[0.124,0.15],[0.192,0.149]],\"o\":[[0.02,0.149],[0.025,0.345],[0,0.296],[0,0],[-0.05,-0.149],[-0.049,-0.146],[-0.072,-0.322],[-0.025,-0.196],[-0.1,-0.194],[-0.145,-0.174],[0,0.397]],\"v\":[[290.217,-66.974],[290.408,-66.583],[290.408,-65.698],[290.508,-64.959],[291.689,-64.959],[291.491,-65.402],[291.296,-65.794],[291.296,-66.68],[291.001,-67.073],[290.704,-67.562],[290.217,-67.959]],\"c\":true},\"ix\":2},\"nm\":\"Path 74\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":74,\"ty\":\"sh\",\"ix\":75,\"ks\":{\"a\":0,\"k\":{\"i\":[[0,0],[0.22,-0.099],[0.101,-0.075],[0.123,-0.099],[0.124,-0.096],[0.121,0.124],[0.123,0.124],[0.122,0.099],[0,0],[0,-0.15],[0,-0.146],[0,-0.248],[-0.047,-0.217],[0,-0.001],[0.006,0.001],[0.058,-0.009],[0.148,-0.025],[0.067,0.006],[0.062,-0.011],[0.317,0],[0.17,0.052],[0,0],[0,0],[-0.12,0],[-0.394,0.02],[0,0],[0.195,-0.048],[0.065,0.009],[0.053,-0.026],[0.079,-0.148],[0.027,-0.147],[0.097,-0.269],[0.048,-0.146],[0,-0.149],[-0.073,-0.124],[-0.147,-0.098],[-0.243,0],[-0.246,0.024],[-0.118,-0.024],[-0.148,0],[-0.099,0],[-0.194,0.171],[-0.099,0.17],[-0.049,0.117],[-0.099,0.145],[0,0],[0,0],[0,0.347],[-0.076,0.145],[-0.048,0.149],[0,0.146],[-0.026,0.298],[0,0.149],[0.027,0.295],[0,0],[-0.057,-0.009],[-0.067,0.029],[0,0.396],[0.099,0.196],[0.077,0.196],[0.051,0.126],[0.051,0.099],[0.146,0.075],[0.072,-0.017],[0.056,0.024],[0.174,0.027]],\"o\":[[-0.248,0],[-0.123,0.047],[-0.122,0.098],[-0.124,0.1],[-0.122,-0.096],[-0.124,-0.122],[-0.122,-0.123],[0,0],[0,0.149],[0,0.149],[0,0.25],[0,0.22],[0,0.001],[-0.006,-0.001],[-0.061,-0.005],[-0.149,0.027],[-0.062,0.015],[-0.067,-0.006],[-0.294,0.077],[-0.198,0],[0,0],[0,0],[0.126,0],[0.394,0],[0,0],[-0.22,0.023],[-0.058,0.014],[-0.077,-0.011],[-0.12,0.076],[-0.072,0.149],[-0.048,0.268],[-0.048,0.146],[-0.048,0.123],[0,0.146],[0.074,0.148],[0.194,0.126],[0.248,0],[0.148,0],[0.127,0.024],[0.096,0],[0.271,0],[0.125,-0.098],[0.048,-0.123],[0.098,-0.176],[0,0],[0,0],[0,-0.345],[0,-0.17],[0.074,-0.15],[0.027,-0.119],[0.027,-0.293],[0,-0.145],[0,-0.292],[0,0],[0.063,-0.009],[0.075,0.011],[0.347,-0.173],[0,-0.244],[-0.099,-0.17],[-0.022,-0.121],[-0.049,-0.119],[-0.095,-0.15],[-0.065,-0.04],[-0.063,0.015],[-0.171,-0.051],[0,0]],\"v\":[[-34.703,-67.173],[-35.292,-66.974],[-35.689,-66.876],[-35.882,-66.484],[-36.277,-66.288],[-36.667,-66.484],[-36.866,-66.876],[-37.259,-67.073],[-38.193,-66.974],[-38.146,-66.583],[-38.243,-66.191],[-38.193,-65.572],[-38.243,-65.011],[-38.243,-65.007],[-38.262,-65.009],[-38.439,-65.011],[-38.833,-64.814],[-39.031,-64.813],[-39.227,-64.814],[-40.01,-64.515],[-40.404,-64.814],[-40.848,-64.714],[-40.848,-61.91],[-40.503,-61.863],[-39.52,-61.91],[-39.52,-60.683],[-40.109,-60.587],[-40.299,-60.591],[-40.503,-60.587],[-40.702,-60.192],[-40.896,-59.796],[-40.896,-59.011],[-41.29,-58.816],[-41.389,-58.421],[-41.29,-58.028],[-40.896,-57.734],[-40.307,-57.536],[-39.716,-57.832],[-39.327,-57.832],[-38.93,-57.734],[-38.734,-57.589],[-38.146,-57.93],[-37.751,-58.225],[-37.751,-58.614],[-37.357,-58.911],[-34.014,-58.911],[-34.014,-59.479],[-34.31,-60.29],[-33.915,-60.485],[-33.72,-60.882],[-33.72,-61.272],[-33.72,-62.061],[-33.621,-62.454],[-33.72,-63.239],[-33.72,-64.025],[-33.542,-64.017],[-33.328,-64.025],[-32.637,-64.814],[-32.835,-65.402],[-33.229,-65.794],[-33.328,-66.191],[-33.328,-66.583],[-33.72,-66.876],[-33.93,-66.882],[-34.112,-66.876],[-34.508,-67.173]],\"c\":true},\"ix\":2},\"nm\":\"Path 75\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":75,\"ty\":\"sh\",\"ix\":76,\"ks\":{\"a\":0,\"k\":{\"i\":[[-0.001,0.001],[-0.012,-0.02],[0.032,0]],\"o\":[[0.043,-0.014],[-0.035,0.007],[0.001,0]],\"v\":[[-38.142,-65.003],[-38.044,-65.011],[-38.145,-65.002]],\"c\":true},\"ix\":2},\"nm\":\"Path 76\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":76,\"ty\":\"sh\",\"ix\":77,\"ks\":{\"a\":0,\"k\":{\"i\":[[0.028,-0.02],[0.047,-0.172],[0,-0.243],[0,0],[0.096,0.175],[0,0],[0.175,-0.022],[0.06,0.012],[0.039,0]],\"o\":[[-0.146,0.097],[-0.051,0.222],[0,0],[-0.024,-0.219],[0,0],[-0.072,-0.147],[-0.053,0.012],[-0.042,-0.008],[-0.036,0]],\"v\":[[293.064,-66.288],[292.969,-65.794],[292.969,-65.159],[294.147,-65.159],[294.147,-65.698],[293.947,-66.091],[293.457,-66.288],[293.283,-66.299],[293.16,-66.315]],\"c\":true},\"ix\":2},\"nm\":\"Path 77\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":77,\"ty\":\"sh\",\"ix\":78,\"ks\":{\"a\":0,\"k\":{\"i\":[[0.068,-0.04],[0.15,-0.246],[0.048,-0.249],[0.05,-0.342],[0.199,-0.296],[0.196,-0.297],[0.54,-0.538],[0,-1.182],[0,-0.34],[0,0],[-0.542,-0.54],[-0.737,-0.345],[-0.049,0.348],[0,0.589],[0,0.297],[-0.343,0.594],[0,0],[0.114,-0.018],[0.138,0.058],[0.542,0.394],[0.395,0.148],[0.245,0.049],[0.246,0],[0.294,0.097],[-0.342,0.49],[-0.147,0.297],[0,0.294],[0.049,0.296],[0.111,0.022],[0.074,0]],\"o\":[[-0.248,0.147],[-0.147,0.195],[-0.099,0.34],[-0.049,0.347],[-0.194,0.293],[-0.443,0.592],[-0.837,0.837],[0,0.342],[0,0],[0.785,0],[0.538,0.545],[0.197,-0.297],[0.098,-0.537],[0,-0.295],[0.049,-0.688],[0,0],[-0.129,-0.02],[-0.147,0.021],[-0.587,-0.242],[-0.34,-0.243],[-0.246,-0.048],[-0.244,-0.053],[-0.295,-0.053],[0.198,-0.589],[0.146,-0.246],[0.099,-0.245],[0,-0.347],[-0.125,0.022],[-0.078,-0.016],[-0.07,0]],\"v\":[[-127.507,-56.85],[-128.294,-56.457],[-128.294,-55.665],[-128.491,-54.69],[-129.082,-53.898],[-129.671,-53.115],[-131.046,-51.542],[-132.618,-48.935],[-132.423,-48.002],[-126.77,-48.002],[-125.147,-46.824],[-123.576,-45.642],[-122.79,-46.234],[-122.79,-47.805],[-122.986,-48.593],[-122.198,-50.166],[-122.398,-50.952],[-122.76,-50.937],[-123.182,-50.952],[-124.757,-51.936],[-125.542,-52.72],[-126.328,-52.916],[-127.115,-52.916],[-127.9,-53.309],[-127.312,-54.883],[-126.525,-55.276],[-126.328,-56.062],[-126.72,-56.85],[-127.072,-56.872],[-127.301,-56.904]],\"c\":true},\"ix\":2},\"nm\":\"Path 78\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":78,\"ty\":\"sh\",\"ix\":79,\"ks\":{\"a\":0,\"k\":{\"i\":[[0,0],[0.074,-0.172],[0.05,-0.171],[0.05,-0.125],[0.171,-0.226],[0,0],[-0.069,-0.012],[-0.05,0.027],[-0.124,0.147],[-0.123,0.12],[-0.073,0.122],[-0.045,0.121],[-0.026,0.145],[-0.026,0.147],[0,0]],\"o\":[[-0.048,0.172],[-0.073,0.175],[-0.022,0.121],[-0.1,0.266],[0,0],[0.058,-0.022],[0.073,0.013],[0.171,-0.122],[0.124,-0.147],[0.126,-0.124],[0.075,-0.101],[0.054,-0.15],[0.024,-0.122],[0,0],[0,0]],\"v\":[[270.65,-55.375],[270.452,-54.883],[270.158,-54.488],[270.158,-54.094],[269.668,-53.502],[269.472,-53.115],[269.671,-53.113],[269.863,-53.115],[270.158,-53.605],[270.452,-53.998],[270.845,-54.194],[270.941,-54.587],[271.142,-54.979],[271.142,-55.375],[270.748,-55.472]],\"c\":true},\"ix\":2},\"nm\":\"Path 79\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":79,\"ty\":\"sh\",\"ix\":80,\"ks\":{\"a\":0,\"k\":{\"i\":[[0.079,-0.011],[0.109,0.022],[0,0],[-0.245,-0.193],[-0.247,-0.197],[-0.243,-0.192],[-0.54,0],[-0.343,0.348],[-0.099,0.147],[0.295,0.049],[0.137,-0.012],[0.12,0.025],[0.295,0.148],[0.392,0.196],[0.07,0]],\"o\":[[-0.12,0.017],[0,0],[0.246,0.145],[0.247,0.194],[0.246,0.196],[0.394,0.348],[0.49,0],[0.149,-0.144],[-0.293,-0.095],[-0.125,-0.026],[-0.133,0.013],[-0.296,-0.053],[-0.394,-0.193],[-0.065,-0.026],[-0.079,0]],\"v\":[[-141.711,-54.106],[-142.059,-54.094],[-142.844,-53.702],[-142.059,-53.309],[-141.467,-52.523],[-140.682,-51.936],[-139.501,-51.145],[-138.52,-51.936],[-138.125,-52.523],[-138.913,-52.916],[-139.311,-52.917],[-139.697,-52.916],[-140.483,-53.309],[-141.27,-54.094],[-141.473,-54.129]],\"c\":true},\"ix\":2},\"nm\":\"Path 80\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":80,\"ty\":\"sh\",\"ix\":81,\"ks\":{\"a\":0,\"k\":{\"i\":[[0.031,-0.013],[0.171,-0.075],[0.127,-0.072],[0.172,-0.12],[0.147,-0.078],[-0.295,0],[-0.147,0.173],[-0.069,0.097],[-0.148,0.368],[0.06,0.008],[0.039,0]],\"o\":[[-0.169,0.074],[-0.15,0.075],[-0.17,0.097],[-0.126,0.073],[0.246,0.146],[0.246,0],[0.075,-0.097],[0.248,-0.296],[-0.054,0.01],[-0.04,-0.005],[-0.034,0]],\"v\":[[260.621,-44.855],[260.228,-44.562],[259.832,-44.364],[259.444,-43.971],[259.051,-43.771],[259.787,-43.481],[260.423,-43.577],[260.522,-43.971],[261.014,-44.855],[260.84,-44.861],[260.72,-44.872]],\"c\":true},\"ix\":2},\"nm\":\"Path 81\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":81,\"ty\":\"sh\",\"ix\":82,\"ks\":{\"a\":0,\"k\":{\"i\":[[0.031,-0.012],[0.197,-0.247],[0.071,-0.125],[0.096,-0.122],[0.128,-0.073],[0.32,-0.072],[0.148,0],[0.124,0.005],[0.146,-0.011],[0,0],[0.148,-0.029],[0,0],[0.098,0.018],[0.165,-0.078],[0.149,-0.077],[0.147,-0.071],[0.145,-0.048],[0.245,0],[0.222,0.076],[0.419,0.272],[0.145,0.122],[0.27,0.271],[0.148,0.098],[0.17,0.048],[0.466,0.126],[0.173,0.098],[0,-0.175],[-0.024,-0.344],[0,-0.147],[0,-0.296],[0.023,-0.124],[0.049,-0.122],[0.1,-0.148],[0.096,-0.1],[0.099,-0.123],[0.072,-0.172],[0,-0.467],[0.176,0],[0.122,0.176],[0.071,0.149],[0.097,-0.169],[0.12,-0.076],[0.067,0.018],[0.06,-0.038],[0.096,-0.119],[0,-0.42],[-0.144,-0.199],[-0.121,-0.074],[-0.075,-0.17],[-0.075,-0.101],[-0.171,-0.051],[0,0],[-0.218,0.1],[0,0],[0,0],[0,-0.297],[0,0],[0.025,-0.168],[0.029,-0.17],[0,-0.15],[0,-0.172],[0,0],[0.075,-0.321],[0.077,-0.095],[0.152,-0.076],[0.074,0.011],[0.056,-0.011],[0.099,-0.173],[0.176,-0.267],[0.171,-0.195],[0.223,-0.248],[0,0.149],[0,0.171],[0.027,0.292],[0.026,-0.096],[0.051,-0.172],[0.024,-0.292],[0,0],[0,0],[0,0],[0.075,0.146],[0.026,0.148],[-0.047,0.296],[0,0],[0.051,-0.172],[0.027,-0.168],[0.025,-0.295],[0.149,0],[0.295,0],[0,0],[0,0],[0.073,0.121],[0.101,0.072],[0.147,0.119],[0.121,0.052],[0.271,-0.173],[0.123,-0.02],[0.297,0.026],[0.491,-0.027],[0.122,-0.027],[0.147,-0.027],[0.124,0],[0.103,0.014],[0.162,-0.058],[0.169,-0.296],[0.026,-0.146],[0,-0.146],[0,-0.32],[0,0],[0,-0.169],[-0.023,-0.293],[0.32,-0.097],[0.121,-0.049],[0.099,-0.149],[0.076,-0.173],[0.049,-0.123],[0.051,-0.148],[0.027,-0.149],[-0.199,0],[-0.343,0],[-0.343,0.049],[-0.002,0],[0.016,-0.104],[0.049,-0.127],[0.072,-0.147],[0,0],[0.074,-0.174],[0,-0.225],[-0.542,0],[0,0],[-0.025,0.468],[-0.169,0.199],[-0.295,0.1],[0,0.442],[0.097,0.42],[0,0.146],[0,0.295],[0.149,0],[0.345,0.026],[-0.123,0.097],[-0.121,0.071],[-0.146,0.026],[-0.344,0],[-0.296,0.199],[-0.494,0.146],[-0.126,0],[-0.146,0],[-0.132,-0.007],[-0.139,0.01],[-0.123,0],[-0.15,0],[-0.197,-0.011],[-0.211,0.013],[-0.15,0.027],[0.175,-0.028],[0.121,0],[0.113,0.008],[0.151,-0.027],[0.685,0],[0,0],[0,0],[0,0],[-0.198,0.074],[-0.269,0.169],[-0.098,0.125],[-0.174,0.1],[-0.171,0.048],[-0.122,0.025],[-0.115,-0.022],[-0.129,0.085],[-0.077,0.122],[-0.05,0.123],[-0.099,0.093],[-0.074,-0.173],[-0.074,-0.097],[-0.145,-0.072],[-0.246,0],[-0.175,0.198],[-0.12,0.121],[-0.418,0],[0,0.148],[0,0.172],[0.023,0.151],[0.028,0.124],[0,0],[0,0],[-0.32,0.068],[-0.155,-0.041],[-0.155,0.012],[-0.15,0.217],[0,0.347],[0,0],[-0.052,0.149],[-0.021,0.125],[-0.051,0.37],[0,0],[0.02,0.295],[0,0],[-0.098,0.223],[-0.173,0.12],[-0.049,0.147],[-0.049,0.467],[-0.026,0.118],[-0.122,0.271],[-0.05,0.175],[0,0.345],[0.124,0.246],[0.096,0.146],[0.072,0.127],[0.099,0.316],[0.024,0.121],[0.097,0.322],[0.049,0.123],[0.119,0.099],[0.121,0.053],[0.27,0.05],[0,0],[0,0],[-0.222,0],[0,0],[-0.219,-0.073],[-0.146,-0.05],[-0.068,0.011],[-0.063,-0.025],[-0.144,-0.046],[-0.343,-0.024],[-0.341,-0.02],[0,0.148],[0.025,0.469],[0,0],[-0.176,0.049],[-0.123,0.051],[-0.072,0.094],[-0.024,0.123],[-0.024,0.269],[-0.047,0.121],[-0.124,0.101],[-0.124,0.048],[-0.148,0.027],[-0.118,-0.013],[-0.147,0.041],[-0.171,0.051],[-0.443,0.075],[0,0],[-0.118,0.026],[-0.096,0.096],[-0.074,0.121],[-0.049,0.099],[-0.099,0.098],[-0.098,0.124],[-0.074,0.147],[-0.049,0.126],[0,0.149],[0.06,0.009],[0.037,0]],\"o\":[[-0.295,0.124],[-0.076,0.1],[-0.074,0.119],[-0.098,0.123],[-0.267,0.197],[-0.125,0.024],[-0.149,0.012],[-0.121,-0.007],[0,0],[-0.145,0.024],[0,0],[-0.114,0.009],[-0.157,-0.026],[-0.172,0.07],[-0.123,0.072],[-0.148,0.075],[-0.223,0.099],[-0.246,0],[-0.489,-0.147],[-0.171,-0.096],[-0.296,-0.247],[-0.12,-0.122],[-0.148,-0.096],[-0.471,-0.126],[-0.199,-0.05],[-0.023,0.148],[-0.024,0.342],[0,0.147],[0.023,0.296],[0,0.146],[-0.026,0.124],[-0.074,0.173],[-0.098,0.123],[-0.099,0.095],[-0.126,0.145],[-0.197,0.391],[-0.177,0],[-0.218,0],[-0.074,-0.118],[-0.101,0.174],[-0.049,0.099],[-0.063,0.036],[-0.069,-0.019],[-0.149,0.095],[-0.245,0.297],[0,0.245],[0.077,0.123],[0.176,0.124],[0.05,0.126],[0.1,0.148],[0,0],[0.242,0],[0,0],[0,0],[-0.023,0.295],[0,0],[0,0.197],[-0.023,0.172],[-0.022,0.126],[0,0.172],[0,0],[0,0.344],[-0.022,0.119],[-0.097,0.122],[-0.065,0.027],[-0.061,-0.008],[-0.196,0.071],[-0.151,0.268],[-0.124,0.217],[-0.196,0.247],[0,-0.15],[0,-0.169],[0.028,-0.294],[-0.073,0.069],[-0.051,0.175],[-0.072,0.271],[0,0],[0,0],[0,0],[-0.127,-0.097],[-0.07,-0.151],[-0.073,-0.268],[0,0],[-0.076,0.17],[-0.048,0.172],[-0.048,0.273],[-0.147,0.025],[-0.293,0.024],[0,0],[0,0],[-0.124,-0.102],[-0.073,-0.098],[-0.119,-0.097],[-0.099,-0.077],[-0.171,0.297],[-0.096,0.048],[-0.27,0.049],[-0.494,-0.027],[-0.148,0],[-0.152,0.026],[-0.12,0.025],[-0.108,0.009],[-0.155,-0.02],[-0.32,0.12],[-0.078,0.149],[-0.023,0.126],[-0.023,0.323],[0,0],[-0.025,0.169],[0,0.298],[-0.343,0],[-0.125,0.026],[-0.176,0.074],[-0.097,0.15],[-0.048,0.122],[-0.049,0.146],[-0.045,0.147],[0.175,0.022],[0.343,0.027],[0.344,0],[0.002,0],[0.005,0.103],[-0.023,0.122],[-0.051,0.168],[0,0],[-0.074,0.148],[-0.076,0.197],[0,0.537],[0,0],[0,-0.468],[0.027,-0.291],[0.194,-0.219],[0.419,-0.148],[0,-0.418],[-0.025,-0.148],[-0.025,-0.297],[-0.146,0],[-0.345,0],[0.049,-0.15],[0.122,-0.101],[0.128,-0.073],[0.321,-0.072],[0.37,0],[0.441,-0.29],[0.12,-0.028],[0.124,0],[0.157,-0.016],[0.114,0.005],[0.147,0],[0.124,0],[0.255,-0.025],[0.161,0.008],[0.144,0],[-0.15,0.097],[-0.121,0.024],[-0.119,0.011],[-0.144,-0.011],[-0.662,0.146],[0,0],[0,0],[0,0],[0.221,0],[0.292,-0.123],[0.126,-0.078],[0.124,-0.146],[0.147,-0.096],[0.124,-0.024],[0.113,-0.021],[0.16,0.031],[0.12,-0.078],[0.072,-0.123],[0.049,-0.148],[0.076,0.17],[0.047,0.121],[0.096,0.147],[0.201,0.123],[0.267,0],[0.096,-0.121],[0.299,-0.3],[0.023,-0.148],[0,-0.178],[0,-0.173],[0,-0.122],[0,0],[0,0],[0.247,-0.246],[0.178,-0.044],[0.124,0.034],[0.297,-0.027],[0.195,-0.272],[0,0],[0,-0.173],[0.022,-0.121],[0.125,-0.368],[0,0],[0.021,-0.295],[0,0],[0,-0.245],[0.098,-0.198],[0.123,-0.076],[0.172,-0.418],[0,-0.151],[0.072,-0.299],[0.074,-0.17],[0.124,-0.322],[0,-0.294],[-0.077,-0.171],[-0.074,-0.125],[-0.174,-0.27],[-0.029,-0.125],[-0.099,-0.319],[-0.029,-0.121],[-0.05,-0.147],[-0.098,-0.072],[-0.267,-0.096],[0,0],[0,0],[0.222,0],[0,0],[0.243,0],[0.147,0.049],[0.061,0.024],[0.068,-0.012],[0.149,0.071],[0.296,0.121],[0.341,0.022],[0.027,-0.145],[0.049,-0.467],[0,0],[0.197,0],[0.12,-0.024],[0.124,-0.048],[0.076,-0.1],[0.074,-0.271],[0,-0.126],[0.051,-0.147],[0.097,-0.072],[0.147,-0.051],[0.124,-0.021],[0.14,0.017],[0.168,-0.046],[0.418,-0.147],[0,0],[0.122,0],[0.125,-0.024],[0.103,-0.101],[0.071,-0.126],[0.071,-0.122],[0.119,-0.123],[0.098,-0.121],[0.05,-0.125],[0.05,-0.121],[-0.067,0.014],[-0.038,-0.006],[-0.031,0]],\"v\":[[256.983,-42.989],[256.199,-42.497],[256.1,-42.1],[255.9,-41.71],[255.507,-41.514],[254.723,-41.022],[254.331,-41.022],[253.933,-41.021],[253.543,-41.022],[253.149,-41.022],[252.756,-40.823],[252.361,-40.823],[252.048,-40.848],[251.579,-40.823],[251.28,-40.429],[250.887,-40.236],[250.498,-40.04],[249.907,-39.843],[249.316,-40.04],[248.134,-40.629],[247.646,-40.923],[247.055,-41.71],[246.66,-42.004],[246.271,-42.298],[244.993,-42.497],[244.496,-42.792],[244.301,-42.397],[244.301,-41.514],[244.4,-41.119],[244.496,-40.333],[244.4,-39.941],[244.4,-39.548],[244.007,-39.251],[243.813,-38.856],[243.418,-38.661],[243.124,-38.266],[243.027,-37.089],[242.629,-36.895],[242.238,-37.288],[242.043,-37.679],[241.746,-37.188],[241.65,-36.792],[241.452,-36.792],[241.257,-36.792],[240.959,-36.402],[240.467,-35.418],[240.663,-34.827],[241.055,-34.63],[241.451,-34.239],[241.451,-33.843],[241.842,-33.548],[242.043,-33.548],[242.629,-33.843],[242.629,-32.861],[241.155,-32.861],[241.055,-32.073],[241.055,-31.584],[241.155,-31.092],[240.858,-30.701],[240.809,-30.329],[240.858,-29.911],[240.858,-28.635],[240.858,-27.747],[240.759,-27.356],[240.366,-27.158],[240.152,-27.152],[239.975,-27.158],[239.585,-26.764],[239.189,-25.979],[238.699,-25.489],[238.107,-24.798],[238.009,-25.195],[238.206,-25.586],[238.107,-26.371],[237.814,-26.275],[237.712,-25.783],[237.616,-24.999],[236.144,-24.999],[236.144,-23.423],[235.751,-23.326],[235.355,-23.521],[235.157,-23.916],[235.254,-24.702],[234.865,-24.798],[234.569,-24.406],[234.569,-23.916],[234.472,-23.128],[234.077,-23.028],[233.34,-23.028],[233.34,-20.669],[232.504,-20.669],[232.111,-20.867],[232.011,-21.26],[231.621,-21.553],[231.227,-21.654],[230.733,-20.867],[230.342,-20.771],[229.556,-20.867],[228.277,-20.867],[227.886,-20.867],[227.49,-20.669],[227.095,-20.571],[226.782,-20.589],[226.311,-20.571],[225.626,-19.883],[225.425,-19.492],[225.425,-19.1],[225.425,-18.263],[223.634,-18.263],[223.559,-17.823],[223.657,-17.033],[222.772,-16.936],[222.381,-16.835],[222.085,-16.444],[221.787,-16.048],[221.689,-15.656],[221.491,-15.263],[221.395,-14.82],[221.889,-14.674],[222.772,-14.674],[223.657,-14.674],[223.662,-14.674],[223.657,-14.378],[223.559,-13.982],[223.264,-13.593],[223.066,-13.2],[222.772,-12.804],[222.676,-12.214],[223.681,-11.233],[224.443,-11.233],[224.443,-12.414],[224.639,-13.2],[225.425,-13.496],[226.214,-14.279],[225.722,-15.263],[225.722,-15.656],[225.722,-16.394],[225.329,-16.348],[224.443,-16.394],[224.443,-16.835],[224.832,-17.033],[225.228,-17.231],[226.115,-17.231],[226.999,-17.626],[228.181,-18.409],[228.574,-18.409],[228.965,-18.504],[229.384,-18.506],[229.754,-18.504],[230.146,-18.608],[230.537,-18.707],[231.178,-18.711],[231.719,-18.707],[232.111,-18.804],[231.816,-18.409],[231.423,-18.409],[231.076,-18.414],[230.637,-18.409],[229.042,-17.626],[227.095,-17.626],[227.095,-14.969],[227.861,-14.969],[228.379,-15.165],[229.16,-15.556],[229.358,-15.953],[229.754,-16.348],[230.146,-16.641],[230.537,-16.738],[230.883,-16.715],[231.326,-16.738],[231.522,-17.131],[231.522,-17.525],[231.915,-17.719],[232.21,-17.326],[232.21,-16.936],[232.6,-16.641],[233.243,-16.544],[233.783,-16.936],[233.978,-17.326],[235.061,-17.525],[235.061,-17.916],[235.254,-18.311],[235.061,-18.707],[234.96,-19.1],[235.355,-19.246],[239.779,-19.196],[240.467,-19.782],[240.946,-19.743],[241.353,-19.687],[242.043,-20.079],[242.431,-20.894],[242.431,-22.807],[242.533,-23.227],[242.629,-23.621],[243.223,-24.406],[243.223,-24.798],[243.124,-25.586],[243.124,-26.227],[243.124,-26.863],[243.615,-27.158],[244.007,-27.356],[244.107,-28.535],[244.204,-28.925],[244.496,-29.716],[244.793,-30.109],[244.894,-30.995],[244.793,-31.779],[244.4,-32.073],[244.204,-32.47],[243.714,-33.253],[243.714,-33.647],[243.321,-34.435],[243.321,-34.827],[243.124,-35.221],[242.728,-35.322],[241.941,-35.517],[241.941,-36.105],[243.884,-36.105],[244.4,-36.402],[244.598,-36.402],[245.184,-36.105],[245.579,-35.909],[245.775,-35.909],[245.973,-35.909],[246.168,-35.517],[247.055,-35.418],[247.936,-35.322],[248.037,-35.711],[247.964,-36.895],[250.077,-36.895],[250.498,-37.188],[250.887,-37.288],[251.28,-37.382],[251.381,-37.778],[251.381,-38.563],[251.477,-38.956],[251.676,-39.352],[252.068,-39.447],[252.462,-39.647],[252.824,-39.64],[253.249,-39.647],[253.642,-39.941],[254.822,-40.236],[255.214,-40.236],[255.605,-40.333],[255.996,-40.429],[256.1,-40.823],[256.199,-41.218],[256.592,-41.415],[256.886,-41.808],[257.28,-42.1],[257.379,-42.497],[257.379,-42.989],[257.189,-42.993],[257.077,-43.005]],\"c\":true},\"ix\":2},\"nm\":\"Path 82\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":82,\"ty\":\"sh\",\"ix\":83,\"ks\":{\"a\":0,\"k\":{\"i\":[[-0.007,0],[-0.001,-0.012]],\"o\":[[0,0.013],[-0.006,-0.021]],\"v\":[[223.657,-14.82],[223.658,-14.783]],\"c\":true},\"ix\":2},\"nm\":\"Path 83\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":83,\"ty\":\"sh\",\"ix\":84,\"ks\":{\"a\":0,\"k\":{\"i\":[[0.294,0],[0.246,-0.048],[0.59,-0.099],[0.298,0],[0.306,0.021],[0.515,-0.085],[0.346,-0.148],[0.294,-0.196],[0.244,0.199],[0.292,0.195],[0.633,0],[0.887,-0.343],[0.149,0.021],[0.11,-0.022],[0.297,-0.296],[0,0],[0.147,-0.296],[0.147,-0.196],[0.346,-0.15],[0.296,0],[0.223,0.018],[0.303,-0.056],[0.344,0],[0,0],[0.442,0],[0.306,-0.022],[0.513,0.085],[0.246,0.098],[0.341,0.147],[0,0],[0.046,-0.344],[0.046,-0.249],[0,-0.292],[0,-0.486],[0.293,0],[0.295,0],[0.542,0],[0,0],[0,0],[0.048,-0.589],[0.048,-0.588],[0.05,-0.29],[0,-0.588],[0,0],[0,0],[0.783,-0.494],[0.195,-0.098],[0.343,-0.146],[0.25,-0.102],[0.139,0.025],[0.098,-0.051],[0.198,-0.245],[0.149,-0.293],[0.345,-0.641],[0.197,-0.392],[0.145,-0.246],[0.15,-0.345],[0.149,-0.246],[0.146,-0.248],[0.183,0.051],[0.097,-0.019],[0.543,-0.049],[0.104,-0.98],[0.05,-0.244],[0.147,-0.196],[0.29,-0.242],[0.246,-0.145],[0.197,-0.249],[0,0],[-0.589,-0.051],[-0.243,-0.051],[-0.135,0.013],[-0.121,-0.025],[-0.292,-0.195],[0,0],[0,-0.343],[0,-1.867],[0,0],[0.098,-0.24],[0.198,-0.246],[0.166,0.048],[0.047,-0.097],[0,-0.302],[-0.053,-0.293],[-0.052,-0.245],[0,-0.297],[0,0],[-0.243,-0.497],[-0.244,-0.295],[-0.244,-0.195],[-0.247,-0.149],[-0.344,-0.101],[-0.134,0.023],[-0.126,-0.051],[-0.195,-0.248],[-0.345,-0.393],[-0.247,-0.143],[-0.155,0.031],[-0.12,-0.018],[-0.148,-0.882],[-0.193,-0.294],[-0.344,-0.147],[-0.637,-0.244],[-0.688,-0.048],[0,-0.296],[-0.051,-0.25],[-0.15,-0.244],[-0.246,-0.193],[-0.248,-0.148],[-0.294,-0.198],[-0.638,-0.197],[-0.136,0.013],[-0.124,-0.023],[-0.298,-0.05],[-0.443,0],[-0.248,0.346],[-0.195,0.15],[-0.592,0],[-0.296,0],[-0.297,0],[0,0],[-0.738,-0.1],[-0.248,-0.1],[-0.295,-0.145],[-0.783,0],[-0.39,0.052],[-0.294,0.095],[-0.126,-0.029],[-0.131,0.079],[-0.248,0.196],[-0.291,0.197],[-0.342,0.051],[-0.59,0],[-0.589,0.045],[0,0],[-0.445,0.142],[-0.787,0],[-0.297,-0.344],[-0.1,-0.196],[-0.096,-0.346],[-0.099,-0.249],[-0.148,-0.195],[-0.248,-0.145],[-0.345,0],[0,0],[0,0],[0,-0.296],[0.05,-0.591],[0.05,-0.24],[0.145,-0.348],[0,-0.291],[0,-0.937],[0.195,-0.099],[0.148,0.025],[0.097,-0.049],[0.196,-0.199],[-0.295,-0.098],[-0.391,-0.491],[-0.196,-0.545],[-0.196,-0.195],[-0.198,-0.098],[-0.194,-0.194],[-0.148,-0.243],[-0.393,-0.638],[-0.149,-0.246],[-0.247,-0.592],[-0.046,-0.294],[-0.046,-0.688],[-0.147,-0.541],[-0.05,-0.346],[0,-0.295],[0,0],[-0.293,-0.491],[-0.15,-0.292],[0,-0.445],[0.051,-0.438],[0.046,-0.251],[0.145,-0.243],[0.197,-0.296],[0.146,-0.982],[0.097,-0.542],[0.043,-0.25],[0.196,-0.392],[0,-0.342],[0,-0.595],[-0.295,-0.835],[-0.243,-0.296],[-0.046,-0.347],[-0.046,-0.249],[-0.046,-0.25],[-0.147,-0.293],[-0.196,-0.248],[-0.59,-0.348],[-0.048,-0.299],[-0.047,-0.341],[-0.049,-0.242],[-0.049,-0.249],[0,-0.345],[0,0],[-0.054,-0.542],[-0.054,-0.244],[-0.344,-0.541],[-0.489,-1.033],[-0.049,-0.249],[-0.05,-0.246],[-0.1,-0.294],[-0.294,-0.544],[-0.244,-0.295],[-0.05,-0.343],[-0.149,-0.539],[-0.099,-0.296],[-0.051,-0.346],[0,0],[0.198,-0.296],[0.196,-0.293],[0.048,-0.241],[-0.295,0],[0,0],[-0.046,-0.248],[-0.099,-0.195],[-0.245,-0.198],[-0.344,0],[0,0],[-0.64,0.198],[-0.645,0],[0,0],[-0.151,0.34],[-0.199,0.154],[-0.248,0.05],[-0.297,0],[-0.54,0.151],[-0.196,0.148],[-0.196,0.297],[-0.147,0.2],[-0.244,0.201],[-0.294,0.198],[-0.293,0.296],[-0.197,0.392],[-0.293,0.541],[-0.297,0.245],[-0.395,0.642],[-0.146,0.244],[-0.295,0.295],[-0.148,0.391],[0,0.783],[0.146,0.392],[0.145,0.346],[0.1,0.244],[-0.346,0.053],[-0.244,0.053],[-0.133,-0.013],[-0.123,0.027],[-0.296,0.245],[-0.244,0.248],[-0.292,0.194],[-0.292,0.247],[-0.1,0.196],[0,0.295],[0.196,0.884],[0.144,0.539],[0.246,0.538],[0,0.692],[-0.244,0.294],[-0.244,0.292],[-0.346,0.247],[-0.194,0.096],[-0.196,0.246],[-0.246,0.346],[-0.25,0.152],[-0.638,0.146],[-0.246,0.053],[-0.134,-0.012],[-0.123,0.027],[-0.34,0.145],[-0.444,0.44],[-0.148,0.641],[-0.044,0.589],[0,0.296],[0,0],[0.05,0.441],[0,0.342],[0,0],[0.199,0.297],[0.443,0.938],[-0.049,0.589],[0,0.288],[0.049,0.294],[0.049,0.295],[0.049,0.293],[0,0],[-0.103,0.392],[-0.05,0.244],[-0.248,0.295],[-0.489,1.033],[-0.097,0.241],[-0.147,0.348],[-0.1,0.247],[-0.341,0.54],[-0.245,0.197],[-0.25,0.244],[-0.2,0.248],[-0.592,0.493],[-0.297,0.292],[-0.344,0.201],[-0.495,0.442],[-0.197,0.244],[-0.24,0.297],[-0.201,0.14],[-0.198,0.097],[-0.293,0.149],[-0.295,0.196],[-0.199,0.199],[-0.149,0.299],[-0.346,0.834],[-0.192,0.247],[-0.348,0.241],[-0.293,0.245],[-0.149,0.296],[-0.096,0.345],[0,0.59],[-0.052,0.592],[0,1.029],[0,0],[0.443,0],[0.448,-0.195],[0.296,-0.151],[1.132,0],[0.539,0.049],[0,0],[0.59,-0.047],[0.591,0],[0.294,0.048],[0,0],[0.149,0.347],[0.149,0.244],[0.146,0.3],[0,0],[0.15,0.194],[0.294,0.194],[0.143,-0.025],[0.122,0.047],[0.295,0.299],[0.296,0.247],[0.248,0.199],[0.295,0.148],[0.297,0.099],[0.136,-0.026],[0.122,0.049],[0.247,0.195],[0.149,0.642],[0,0.246],[0.246,0.488],[0.246,0.3],[0.34,0.692],[0,0.395],[0,0.293],[0,0],[0.198,0.538],[0.144,0.341],[0.343,0.538],[0.194,0.248],[0.143,0.249],[0.1,0.296],[0,0.296],[0.1,0.545],[0.049,0.242],[0.198,0.291],[0.297,0.689],[0.049,0.296],[0.101,0.546],[0.296,0.54],[0.243,0.292],[0.25,0.245],[0.244,0.246],[0.198,0.246],[0.048,0.347],[0.048,0.244],[0.146,0.247],[0.298,0.194],[0.293,0.103],[0.148,-0.021],[0.11,0.023],[0.345,0.049],[0,0],[0.784,-0.246],[0,0],[0,0],[0.59,0],[0.393,0.2],[0.296,0.248],[0.685,0.344],[1.133,0],[0.787,0],[0.44,0.098],[-0.05,-0.734],[0,-0.299],[0.047,-0.934],[0.444,0],[0,0],[0.295,0.05],[0.296,0.296],[0.344,0.147],[0.392,0],[0,0],[0.145,0.292],[0.142,0.196],[0.247,0.145],[0.346,0.148],[0.242,0.048],[0.592,0.047],[0.226,-0.017],[0.302,0.053],[0.59,0.296],[0.147,0.737],[0,0.29],[-0.151,0.298],[-0.149,0.345],[0,0.297],[0.148,0.246],[0.246,0.147],[0.298,0.196],[-0.345,0.147],[-0.247,0.101],[-0.249,0.048],[0.239,0.145],[0.248,0.096],[0.637,0]],\"o\":[[-0.3,0],[-0.587,0.099],[-0.245,0.049],[-0.389,0.021],[-0.429,-0.032],[-0.343,0.049],[-0.346,0.149],[-0.243,-0.196],[-0.246,-0.196],[-0.494,-0.343],[-0.986,0],[-0.137,0.056],[-0.12,-0.018],[-0.393,0.152],[0,0],[-0.1,0.293],[-0.099,0.249],[-0.248,0.295],[-0.245,0.098],[-0.259,0.022],[-0.284,-0.022],[-0.296,0.048],[0,0],[-0.442,0],[-0.389,-0.02],[-0.428,0.031],[-0.243,-0.05],[-0.347,-0.102],[0,0],[-0.147,0.345],[-0.048,0.246],[-0.048,0.246],[-0.05,0.49],[-0.293,0],[-0.294,0],[-0.545,0],[0,0],[0,0],[-0.052,0.593],[-0.049,0.593],[0,0.343],[-0.097,0.541],[0,0],[0,0],[-0.048,0.985],[-0.244,0.146],[-0.296,0.197],[-0.247,0.096],[-0.121,0.048],[-0.142,-0.025],[-0.245,0.148],[-0.196,0.246],[-0.341,0.645],[-0.146,0.345],[-0.098,0.248],[-0.198,0.345],[-0.148,0.294],[-0.146,0.244],[-0.09,0.149],[-0.117,-0.032],[-0.491,0.147],[0,0.981],[0,0.295],[-0.048,0.247],[-0.197,0.299],[-0.2,0.152],[-0.246,0.148],[0,0],[0.591,0.055],[0.293,0],[0.124,0.026],[0.135,-0.014],[0.343,0.052],[0,0],[-0.148,0.295],[0,1.869],[0,0],[0,0.249],[-0.147,0.348],[-0.073,0.099],[-0.165,-0.049],[-0.099,0.196],[0,0.344],[0.047,0.247],[0.051,0.248],[0,0],[0.05,0.591],[0.151,0.343],[0.198,0.242],[0.25,0.198],[0.293,0.145],[0.122,0.046],[0.137,-0.026],[0.293,0.144],[0.345,0.392],[0.194,0.25],[0.144,0.089],[0.108,-0.022],[0,0.937],[0.049,0.342],[0.201,0.292],[0.587,0.294],[0.639,0.242],[0.048,0.296],[0,0.295],[0.048,0.245],[0.147,0.247],[0.247,0.197],[0.295,0.192],[0.488,0.393],[0.123,0.026],[0.134,-0.012],[0.294,0.051],[0.39,0.1],[0.442,0],[0.147,-0.195],[0.442,-0.347],[0.297,0],[0.291,0],[0,0],[0.785,0],[0.244,0],[0.291,0.096],[0.689,0.344],[0.444,0],[0.3,-0.045],[0.115,-0.045],[0.144,0.033],[0.244,-0.147],[0.246,-0.201],[0.3,-0.197],[0.541,-0.095],[0.588,0],[0,0],[0.445,-0.102],[0.684,-0.247],[0.489,0],[0.146,0.197],[0.198,0.299],[0.1,0.244],[0.1,0.246],[0.196,0.248],[0.244,0.149],[0,0],[0,0],[0,0.297],[0,0.591],[0,0.295],[-0.098,0.347],[-0.101,0.241],[0,0.94],[-0.147,0.196],[-0.1,0.049],[-0.149,-0.024],[-0.246,0.145],[0.295,0.096],[0.59,0.199],[0.347,0.444],[0.102,0.293],[0.196,0.195],[0.244,0.149],[0.193,0.2],[0.395,0.639],[0.147,0.244],[0.292,0.538],[0.097,0.293],[0.148,0.639],[0.05,0.592],[0.097,0.348],[0.048,0.243],[0,0],[0,0.591],[0.148,0.296],[0.148,0.346],[0,0.445],[-0.05,0.297],[-0.051,0.244],[-0.152,0.295],[-0.589,0.789],[-0.049,0.542],[-0.049,0.242],[-0.152,0.391],[-0.149,0.295],[-0.051,0.589],[0,0.928],[0.149,0.396],[0.242,0.296],[0.05,0.245],[0.05,0.247],[0.05,0.296],[0.146,0.296],[0.445,0.491],[0,0.292],[0.048,0.39],[0.051,0.252],[0.05,0.245],[0.05,0.29],[0,0],[0,0.589],[0,0.244],[0.145,0.638],[0.637,0.933],[0.099,0.243],[0.048,0.247],[0.05,0.294],[0.196,0.589],[0.148,0.345],[0.249,0.294],[0.095,0.54],[0.046,0.297],[0.149,0.341],[0,0],[0,0.396],[-0.192,0.296],[-0.148,0.245],[0.295,0.051],[0,0],[0,0.3],[0.048,0.242],[0.147,0.248],[0.244,0.196],[0,0],[0.687,0],[0.588,-0.146],[0,0],[0.149,-0.346],[0.097,-0.247],[0.196,-0.143],[0.244,-0.048],[0.588,-0.048],[0.248,-0.046],[0.293,-0.245],[0.099,-0.196],[0.149,-0.242],[0.247,-0.195],[0.344,-0.245],[0.292,-0.295],[0.248,-0.538],[0.149,-0.343],[0.588,-0.494],[0.145,-0.244],[0.195,-0.345],[0.296,-0.299],[0.244,-0.738],[0,-0.449],[-0.099,-0.347],[-0.098,-0.244],[0.343,-0.149],[0.244,0],[0.124,-0.025],[0.136,0.013],[0.396,-0.098],[0.245,-0.197],[0.246,-0.248],[0.297,-0.195],[0.198,-0.144],[0.1,-0.198],[0,-0.934],[-0.1,-0.536],[-0.147,-0.588],[-0.296,-0.587],[0,-0.44],[0.246,-0.296],[0.248,-0.295],[0.2,-0.101],[0.245,-0.149],[0.249,-0.289],[0.196,-0.247],[0.539,-0.387],[0.246,-0.051],[0.121,-0.024],[0.137,0.013],[0.347,-0.097],[0.589,-0.3],[0.442,-0.443],[0.15,-0.538],[0,-0.295],[0,0],[0,-0.442],[-0.048,-0.349],[0,0],[-0.249,-0.244],[-0.539,-0.834],[0.097,-0.54],[0,-0.293],[0,-0.35],[-0.049,-0.294],[-0.049,-0.294],[0,0],[0,-0.444],[0.047,-0.246],[0.097,-0.348],[0.735,-0.891],[0.099,-0.248],[0.147,-0.348],[0.099,-0.245],[0.243,-0.591],[0.194,-0.296],[0.246,-0.196],[0.246,-0.246],[0.492,-0.542],[0.293,-0.248],[0.294,-0.3],[0.54,-0.339],[0.245,-0.196],[0.196,-0.294],[0.151,-0.196],[0.196,-0.153],[0.293,-0.196],[0.297,-0.145],[0.245,-0.144],[0.245,-0.242],[0.445,-0.783],[0.144,-0.344],[0.249,-0.292],[0.342,-0.251],[0.297,-0.246],[0.145,-0.291],[0.147,-0.544],[0,-0.588],[0.098,-1.031],[0,0],[-0.442,-0.045],[-0.539,0],[-0.341,0.149],[-0.931,0.537],[-0.544,0],[0,0],[-0.587,0],[-0.589,0.049],[-0.292,0],[0,0],[-0.146,-0.348],[-0.098,-0.243],[-0.145,-0.253],[0,0],[-0.101,-0.247],[-0.196,-0.297],[-0.1,-0.051],[-0.14,0.024],[-0.393,-0.151],[-0.246,-0.245],[-0.248,-0.194],[-0.292,-0.243],[-0.242,-0.145],[-0.124,-0.051],[-0.134,0.025],[-0.346,-0.149],[-0.49,-0.444],[-0.046,-0.244],[-0.047,-0.539],[-0.148,-0.296],[-0.49,-0.589],[-0.15,-0.342],[0,-0.293],[0,0],[0,-0.591],[-0.097,-0.345],[-0.297,-0.594],[-0.146,-0.246],[-0.196,-0.247],[-0.148,-0.243],[-0.049,-0.242],[-0.049,-0.586],[-0.049,-0.243],[-0.1,-0.346],[-0.389,-0.641],[-0.097,-0.296],[-0.147,-0.54],[-0.095,-0.634],[-0.146,-0.297],[-0.249,-0.295],[-0.244,-0.249],[-0.246,-0.244],[-0.146,-0.346],[0,-0.242],[-0.05,-0.248],[-0.145,-0.293],[-0.243,-0.15],[-0.135,-0.051],[-0.122,0.016],[-0.344,-0.094],[0,0],[-0.837,0],[0,0],[0,0],[-0.537,0.145],[-0.442,0],[-0.393,-0.193],[-0.587,-0.49],[-0.988,-0.544],[-0.788,0],[-0.443,0],[0,0.736],[0,0.296],[0.099,0.93],[-0.442,0.05],[0,0],[-0.348,0],[-0.393,-0.048],[-0.295,-0.29],[-0.346,-0.148],[0,0],[-0.098,-0.297],[-0.101,-0.252],[-0.198,-0.248],[-0.295,-0.193],[-0.244,-0.103],[-0.544,-0.151],[-0.261,-0.022],[-0.28,0.02],[-0.634,-0.147],[-0.687,-0.341],[-0.05,-0.248],[0,-0.347],[0.145,-0.343],[0.098,-0.246],[0,-0.347],[-0.146,-0.246],[-0.293,-0.196],[0.298,-0.247],[0.244,-0.095],[0.244,-0.101],[-0.149,-0.246],[-0.25,-0.147],[-0.539,-0.248],[-0.297,0]],\"v\":[[-4.814,-24.406],[-5.603,-24.406],[-7.177,-23.817],[-7.964,-23.817],[-8.978,-23.84],[-10.322,-23.817],[-11.107,-23.227],[-11.895,-22.636],[-12.681,-23.227],[-13.271,-24.012],[-14.841,-24.601],[-17.206,-23.621],[-17.641,-23.608],[-17.99,-23.621],[-18.779,-22.832],[-22.708,-22.832],[-23.103,-22.049],[-23.297,-21.26],[-24.085,-20.669],[-24.872,-20.669],[-25.583,-20.682],[-26.443,-20.669],[-27.232,-20.276],[-27.625,-20.276],[-28.805,-20.474],[-29.822,-20.45],[-31.163,-20.474],[-31.951,-20.669],[-32.736,-21.26],[-33.525,-21.654],[-34.112,-20.867],[-34.112,-20.079],[-34.31,-19.294],[-34.31,-18.018],[-35.098,-18.113],[-35.882,-17.916],[-37.259,-18.018],[-37.259,-14.775],[-40.208,-14.775],[-40.404,-13.2],[-40.404,-11.626],[-40.799,-10.84],[-40.997,-9.07],[-40.997,-7.696],[-43.353,-7.696],[-44.337,-5.334],[-45.124,-5.136],[-45.711,-4.352],[-46.503,-4.154],[-46.908,-4.155],[-47.285,-4.154],[-47.68,-3.369],[-48.272,-2.586],[-49.057,-0.812],[-49.648,0.169],[-49.84,0.958],[-50.63,1.744],[-51.025,2.531],[-51.22,3.318],[-51.674,3.364],[-52.007,3.318],[-53.384,3.514],[-53.384,6.068],[-53.579,6.856],[-53.775,7.64],[-54.559,8.23],[-55.349,8.429],[-55.742,9.218],[-55.742,10.588],[-54.169,10.788],[-53.384,10.788],[-52.988,10.789],[-52.598,10.788],[-52.007,11.574],[-52.4,12.36],[-52.988,13.096],[-52.792,17.867],[-52.792,18.651],[-52.792,19.434],[-53.384,20.225],[-53.796,20.226],[-54.169,20.225],[-54.365,21.013],[-53.971,21.798],[-53.775,22.583],[-53.579,23.374],[-53.579,24.158],[-53.384,25.732],[-52.598,26.323],[-52.204,27.105],[-51.414,27.503],[-50.63,28.092],[-50.241,28.091],[-49.84,28.092],[-49.057,28.484],[-48.663,30.055],[-47.876,30.448],[-47.432,30.473],[-47.09,30.448],[-47.09,32.809],[-46.503,33.596],[-45.516,33.987],[-43.944,34.973],[-42.176,35.167],[-41.977,35.956],[-41.977,36.743],[-41.977,37.526],[-41.191,37.921],[-40.404,38.315],[-39.815,39.102],[-38.243,40.082],[-37.848,40.083],[-37.456,40.082],[-36.667,40.477],[-35.487,40.675],[-34.703,39.885],[-34.508,39.102],[-32.934,38.904],[-32.146,39.102],[-31.359,38.904],[-30.867,38.904],[-28.805,38.904],[-28.016,38.904],[-27.625,39.69],[-25.659,39.885],[-24.482,39.885],[-23.693,39.495],[-23.324,39.507],[-22.905,39.495],[-22.512,38.708],[-21.729,38.118],[-20.939,37.526],[-19.366,37.526],[-17.794,37.728],[-17.402,37.728],[-16.415,36.94],[-14.352,36.548],[-13.073,36.743],[-12.879,37.526],[-12.29,38.315],[-12.091,39.102],[-11.895,39.885],[-11.107,40.278],[-10.272,40.477],[-3.443,40.477],[-3.443,42.882],[-3.638,43.622],[-3.638,45.197],[-3.638,45.978],[-4.225,46.772],[-4.422,47.503],[-4.62,49.917],[-4.814,50.701],[-5.21,50.701],[-5.603,50.701],[-5.996,51.487],[-5.21,51.878],[-3.638,52.469],[-3.443,54.046],[-3.047,54.829],[-2.26,55.024],[-1.473,55.418],[-1.279,56.205],[0.1,57.781],[0.493,58.568],[1.475,60.14],[1.866,60.924],[1.866,62.693],[2.262,64.266],[2.85,65.053],[2.654,65.843],[2.654,66.627],[3.046,68.201],[3.835,68.592],[3.835,69.773],[3.835,70.952],[3.639,71.741],[3.443,72.525],[2.654,73.116],[1.475,75.475],[1.475,77.05],[1.283,77.838],[0.493,78.621],[0.1,79.408],[0.1,80.983],[0.294,83.339],[1.083,84.128],[1.866,84.717],[1.866,85.503],[1.866,86.291],[2.262,87.074],[2.654,87.863],[4.424,89.044],[4.424,89.829],[4.816,90.808],[5.014,91.596],[5.014,92.387],[5.605,93.122],[5.605,97.152],[6,98.679],[6,99.463],[6.785,101.035],[8.945,103.198],[8.945,103.986],[9.142,104.771],[9.538,105.558],[10.126,107.132],[10.911,107.916],[11.702,108.507],[11.702,110.078],[12.092,110.868],[12.684,111.65],[12.684,112.043],[11.893,112.636],[11.307,113.422],[11.307,114.204],[12.092,114.402],[12.88,114.402],[12.88,115.194],[12.88,115.977],[13.665,116.373],[14.503,116.763],[18.336,116.763],[19.957,116.175],[21.583,115.782],[26.445,115.782],[27.036,114.998],[27.036,114.204],[27.823,114.011],[28.609,114.011],[30.181,113.812],[30.967,113.618],[31.557,112.832],[31.557,112.043],[32.344,111.65],[33.13,111.063],[33.917,110.276],[34.704,109.491],[35.293,107.916],[36.083,107.132],[37.656,105.753],[37.85,104.969],[38.635,104.18],[39.423,103.395],[39.621,101.432],[39.621,100.25],[39.029,99.463],[38.831,98.679],[39.621,98.084],[40.405,98.084],[40.796,98.085],[41.19,98.084],[41.98,97.3],[42.764,96.711],[43.353,95.925],[44.141,95.332],[44.928,95.136],[44.928,94.351],[44.536,91.99],[44.141,90.417],[43.552,88.846],[42.764,87.269],[43.552,86.487],[44.141,85.699],[44.928,84.914],[45.714,84.717],[46.108,83.928],[46.895,83.142],[47.29,82.352],[48.859,81.571],[49.646,81.373],[50.036,81.374],[50.432,81.373],[51.22,80.787],[52.793,79.799],[53.775,78.229],[53.775,76.654],[53.973,75.868],[53.973,74.687],[53.973,73.512],[53.581,72.675],[53.581,68.001],[52.793,67.413],[51.612,64.857],[52.005,63.285],[51.809,62.552],[52.005,61.711],[51.612,60.924],[51.22,60.14],[51.22,59.746],[51.419,58.568],[51.419,57.781],[52.204,57.191],[54.169,54.829],[54.365,54.046],[54.954,53.257],[55.154,52.469],[55.939,50.898],[56.725,50.309],[57.513,49.719],[58.104,48.931],[59.676,47.556],[60.462,46.772],[61.249,45.978],[62.823,45],[63.215,44.213],[63.997,43.622],[64.199,42.839],[64.984,42.641],[65.768,42.049],[66.557,41.456],[67.344,41.064],[67.932,40.278],[68.526,37.921],[69.307,37.33],[70.096,36.548],[71.077,35.956],[71.671,35.167],[72.257,34.384],[72.456,32.809],[72.456,31.235],[73.044,28.633],[73.044,27.105],[71.913,26.91],[70.487,27.105],[69.703,27.699],[66.951,28.876],[65.577,28.484],[64.786,28.484],[63.215,28.68],[61.639,28.68],[60.462,28.288],[60.066,27.503],[59.478,26.713],[59.478,25.929],[58.693,25.532],[58.299,24.749],[58.299,23.964],[57.513,23.374],[57.133,23.373],[56.725,23.374],[55.939,22.583],[55.35,21.798],[54.56,21.405],[53.973,20.619],[53.186,20.225],[52.79,20.225],[52.401,20.225],[51.612,19.638],[50.826,18.06],[50.63,17.277],[50.432,15.708],[49.646,15.112],[48.469,13.538],[47.876,12.753],[48.074,11.967],[48.074,11.179],[47.876,9.61],[47.29,8.824],[46.503,7.25],[46.108,6.461],[45.324,6.068],[44.928,5.281],[44.928,4.495],[44.928,2.92],[44.732,2.138],[44.141,1.353],[42.764,-0.223],[42.372,-1.01],[42.372,-2.586],[41.586,-4.154],[40.997,-4.939],[40.405,-5.726],[39.621,-6.318],[38.831,-8.086],[38.243,-8.876],[38.243,-9.658],[38.243,-10.447],[37.454,-11.034],[36.671,-11.432],[36.238,-11.442],[35.885,-11.432],[35.096,-12.019],[34.704,-12.019],[32.738,-11.233],[32.344,-11.233],[26.641,-12.607],[25.07,-12.214],[23.888,-12.414],[23.103,-13.2],[21.533,-14.378],[18.777,-15.363],[16.811,-14.969],[15.633,-15.263],[15.633,-13.396],[15.828,-12.607],[15.633,-10.25],[14.453,-10.054],[13.717,-10.054],[12.88,-10.054],[12.092,-10.84],[11.307,-11.626],[10.275,-11.822],[6.391,-11.822],[6,-12.607],[5.803,-13.396],[5.014,-13.789],[4.227,-14.378],[3.443,-14.575],[1.866,-14.969],[1.146,-14.957],[0.294,-14.969],[-1.279,-15.758],[-2.852,-17.131],[-3.047,-17.916],[-2.652,-18.707],[-1.867,-19.294],[-1.667,-20.079],[-2.064,-20.867],[-2.852,-21.26],[-3.638,-21.85],[-3.047,-22.636],[-2.26,-22.832],[-1.473,-23.028],[-1.667,-23.817],[-2.458,-24.012],[-4.029,-24.601]],\"c\":true},\"ix\":2},\"nm\":\"Path 84\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":84,\"ty\":\"sh\",\"ix\":85,\"ks\":{\"a\":0,\"k\":{\"i\":[[0.041,-0.016],[0.149,-0.103],[0.129,-0.101],[0.098,-0.145],[0.096,-0.121],[0.097,-0.128],[0.052,-0.094],[0.047,-0.121],[0,-0.293],[0,0],[0,0],[-0.027,0.347],[-0.025,0.123],[-0.05,0.122],[-0.072,0.15],[0,0],[-0.025,0.122],[-0.097,0.172],[-0.073,0.147],[-0.194,0.32],[-0.025,0.173],[0,0],[0,0],[0,0.149],[-0.023,0.222],[0.271,-0.025],[0.09,0]],\"o\":[[-0.171,0.074],[-0.146,0.097],[-0.123,0.097],[-0.099,0.147],[-0.1,0.122],[-0.075,0.094],[-0.049,0.1],[-0.1,0.272],[0,0],[0,0],[0,-0.346],[0,-0.145],[0.023,-0.121],[0.07,-0.146],[0,0],[0.05,-0.117],[0.077,-0.195],[0.078,-0.122],[0.195,-0.321],[0.075,-0.151],[0,0],[0,0],[0,-0.151],[0,-0.217],[-0.296,0],[-0.08,0],[-0.045,0]],\"v\":[[206.158,0.466],[205.861,0.861],[205.467,1.156],[205.077,1.448],[204.783,1.843],[204.587,2.239],[204.189,2.333],[204.094,2.725],[203.895,3.489],[203.895,6.856],[205.077,6.856],[205.077,5.97],[205.176,5.577],[205.274,5.185],[205.668,4.889],[205.861,4.495],[205.861,4.104],[206.254,3.71],[206.452,3.318],[207.139,2.531],[207.434,2.138],[207.434,1.744],[207.434,1.353],[207.236,1.03],[207.337,0.466],[206.55,0.466],[206.288,0.444]],\"c\":true},\"ix\":2},\"nm\":\"Path 85\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":85,\"ty\":\"sh\",\"ix\":86,\"ks\":{\"a\":0,\"k\":{\"i\":[[0.325,0],[0.488,-0.049],[0.345,0],[0.294,0],[0,0],[0.294,-0.047],[0.248,-0.101],[0,-0.489],[-0.394,-0.342],[-0.688,0],[-0.25,0.048],[-0.639,0.151],[-0.294,0],[-0.738,-0.588],[-0.242,-0.145],[-0.248,-0.098],[-0.294,-0.05],[-0.159,0.024],[-0.175,-0.048],[-0.294,-0.248],[-0.784,0],[0,0],[0.589,0.442],[0.785,0.048],[0,0],[0.27,-0.012],[0.343,0.024],[0.246,0.048],[0.246,0.148],[0.297,0.195],[0.291,0.151],[0.589,0.344],[0,0],[0.345,0.15],[0.135,0]],\"o\":[[-0.493,0],[-0.344,0.048],[-0.296,0],[0,0],[-0.346,0],[-0.244,0],[-0.392,0.197],[0,0.539],[0.491,0.393],[0.294,0],[0.636,-0.194],[0.248,-0.048],[0.984,0],[0.247,0.196],[0.198,0.152],[0.296,0.096],[0.169,0.048],[0.161,-0.024],[0.39,0.095],[0.591,0.491],[0,0],[-0.395,-0.641],[-0.592,-0.441],[0,0],[-0.345,-0.024],[-0.271,0.012],[-0.297,0],[-0.296,-0.098],[-0.294,-0.148],[-0.244,-0.147],[-0.592,-0.343],[0,0],[-0.295,-0.144],[-0.149,-0.065],[-0.27,0]],\"v\":[[-174.793,4.495],[-176.072,4.495],[-176.858,4.889],[-177.644,4.692],[-179.317,4.692],[-180.202,4.692],[-180.99,4.692],[-181.58,5.874],[-180.791,7.051],[-179.022,7.444],[-178.234,7.444],[-176.664,6.461],[-175.876,6.461],[-173.516,7.444],[-173.124,8.23],[-172.336,8.429],[-171.551,8.824],[-171.063,8.824],[-170.565,8.824],[-169.782,9.61],[-167.963,10.493],[-161.915,10.493],[-163.291,9.018],[-165.06,8.037],[-165.848,8.037],[-166.734,8.037],[-167.617,8.037],[-168.404,8.037],[-169.191,7.64],[-169.782,6.856],[-170.565,6.461],[-172.14,5.674],[-172.926,5.281],[-173.516,4.495],[-173.937,4.408]],\"c\":true},\"ix\":2},\"nm\":\"Path 86\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":86,\"ty\":\"sh\",\"ix\":87,\"ks\":{\"a\":0,\"k\":{\"i\":[[0.593,-0.097],[0,0],[-0.343,-0.194],[-0.343,-0.049],[0,0],[-0.247,0.046],[-0.389,0.149],[-0.247,0.052],[-0.293,0],[-0.294,0],[-0.295,0],[-0.591,0.052],[-0.59,0.05],[-0.293,0],[-0.296,0],[-0.59,0],[0,0],[-0.295,0.099],[0.146,0.295],[0.1,0.396],[0.933,0],[0,0],[0.49,0],[0,0],[0.342,-0.052],[0.293,0],[0.246,0.048],[0.345,0.146],[0.245,0.1],[0.346,0.099],[0.59,0],[0.639,0]],\"o\":[[0,0],[0.296,0.295],[0.296,0.151],[0,0],[0.292,0],[0.395,-0.097],[0.249,-0.053],[0.248,-0.051],[0.298,0],[0.296,0],[0.592,0],[0.591,-0.051],[0.295,0],[0.295,0],[0.588,0.05],[0,0],[0.343,0],[-0.196,-0.247],[-0.197,-0.397],[-0.936,0.197],[0,0],[-0.492,-0.049],[0,0],[-0.343,0.044],[-0.245,0.048],[-0.298,0],[-0.343,-0.099],[-0.244,-0.1],[-0.343,-0.146],[-0.54,-0.148],[-0.638,-0.048],[-0.589,0]],\"v\":[[-159.361,11.77],[-159.361,14.131],[-158.574,14.915],[-157.786,15.509],[-156.999,15.509],[-156.214,15.509],[-155.43,14.721],[-154.641,14.523],[-153.856,14.523],[-153.068,14.721],[-152.283,14.523],[-150.708,14.523],[-149.137,14.327],[-148.35,14.131],[-147.562,14.327],[-145.991,14.523],[-145.203,14.523],[-144.418,14.131],[-145.203,13.738],[-145.203,12.604],[-147.562,12.949],[-148.35,12.949],[-149.528,12.56],[-149.921,12.56],[-150.708,13.148],[-151.493,13.148],[-152.283,13.148],[-153.068,12.56],[-153.856,12.36],[-154.641,11.77],[-156.214,11.77],[-157.836,11.574]],\"c\":true},\"ix\":2},\"nm\":\"Path 87\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":87,\"ty\":\"sh\",\"ix\":88,\"ks\":{\"a\":0,\"k\":{\"i\":[[0,0],[0,-0.071],[0,-0.077],[0,-0.088],[0,-0.076],[-0.015,-0.095],[-0.015,-0.06],[-0.009,-0.074],[0,-0.148],[0.011,-0.062],[0.052,-0.1],[0.011,-0.078],[0,-0.158],[0,-0.355],[0.088,-0.06],[0.073,-0.033],[0.158,-0.072],[0.122,-0.099],[0.01,-0.111],[0,-0.099],[-0.009,-0.09],[-0.073,-0.108],[-0.112,-0.11],[-0.122,-0.088],[-0.099,-0.06],[-0.197,-0.113],[-0.09,-0.025],[-0.035,0.003],[-0.031,-0.007],[0,-0.309],[-0.034,-0.139],[-0.173,-0.085],[-0.086,-0.018],[-0.126,0],[0,0],[0,0],[0,0.188],[0,0],[-0.133,0.16],[-0.146,0.113],[-0.057,0.038],[-0.055,0.064],[-0.063,0.085],[-0.052,0.1],[-0.038,0.114],[-0.048,0.179],[-0.014,0.159],[0,0],[0,0.097],[0,0],[0.049,0.16],[0.025,0.075],[0.023,0.072],[0.008,0.061],[0.023,0.086],[0.023,0.088],[0.024,0.062],[0.052,0.072],[0.078,0.061],[0.097,0.048],[0.103,0],[0,0],[0.041,0],[0.086,0.044],[0.061,0.037],[0.075,0.053],[0.059,0.037],[0.175,0]],\"o\":[[0,0.076],[0,0.075],[0,0.085],[0,0.07],[0,0.097],[0,0.077],[0.01,0.078],[0.028,0.131],[0,0.075],[-0.024,0.107],[-0.035,0.071],[-0.024,0.145],[0,0.363],[0,0.111],[-0.074,0.051],[-0.148,0.089],[-0.146,0.073],[-0.073,0.06],[-0.009,0.097],[0,0.1],[0.01,0.124],[0.072,0.125],[0.111,0.111],[0.102,0.073],[0.187,0.122],[0.075,0.031],[0.029,0.006],[0.034,-0.003],[-0.136,0.285],[0,0.144],[0.063,0.182],[0.086,0.033],[0.108,0.023],[0,0],[0,0],[0,-0.18],[0,0],[0,-0.219],[0.124,-0.147],[0.061,-0.038],[0.064,-0.032],[0.059,-0.086],[0.057,-0.089],[0.047,-0.097],[0.06,-0.169],[0.036,-0.156],[0,0],[0,-0.101],[0,0],[0,-0.174],[-0.014,-0.074],[-0.027,-0.073],[-0.023,-0.061],[-0.032,-0.091],[-0.024,-0.086],[-0.023,-0.061],[-0.026,-0.085],[-0.05,-0.086],[-0.079,-0.077],[-0.074,-0.039],[0,0],[-0.046,-0.003],[-0.092,0],[-0.075,-0.037],[-0.072,-0.05],[-0.061,-0.034],[-0.135,-0.073],[0,0]],\"v\":[[204.365,13.441],[204.391,13.638],[204.339,13.837],[204.365,14.046],[204.339,14.23],[204.391,14.472],[204.391,14.668],[204.483,14.87],[204.535,15.26],[204.535,15.46],[204.339,15.708],[204.241,15.903],[204.189,16.316],[204.339,17.226],[204.141,17.422],[203.946,17.569],[203.504,17.767],[203.11,18.012],[202.962,18.259],[202.962,18.505],[202.962,18.752],[203.16,19.043],[203.405,19.389],[203.746,19.638],[203.993,19.833],[204.483,20.179],[204.684,20.324],[204.78,20.324],[204.879,20.324],[204.631,21.088],[204.73,21.457],[205.029,21.848],[205.274,21.899],[205.581,21.994],[206.452,21.994],[206.452,21.366],[206.353,20.9],[206.353,19.992],[206.647,19.488],[207.042,19.145],[207.236,19.043],[207.337,18.848],[207.535,18.605],[207.733,18.356],[207.829,18.06],[208.025,17.616],[208.124,17.178],[208.124,16.934],[208.173,16.686],[208.173,16.49],[208.124,16.048],[208.025,15.852],[207.926,15.655],[207.882,15.46],[207.78,15.211],[207.681,14.965],[207.634,14.77],[207.483,14.575],[207.283,14.377],[207.042,14.182],[206.793,14.08],[206.6,14.08],[206.47,14.077],[206.207,14.033],[206.011,13.934],[205.912,13.685],[205.715,13.59],[205.308,13.441]],\"c\":true},\"ix\":2},\"nm\":\"Path 88\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":88,\"ty\":\"sh\",\"ix\":89,\"ks\":{\"a\":0,\"k\":{\"i\":[[-0.011,-0.028],[0,0.024]],\"o\":[[0,-0.025],[-0.031,0.001]],\"v\":[[153.66,13.514],[153.658,13.441]],\"c\":true},\"ix\":2},\"nm\":\"Path 89\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":89,\"ty\":\"sh\",\"ix\":90,\"ks\":{\"a\":0,\"k\":{\"i\":[[0,-0.008],[0.005,0.014]],\"o\":[[0.007,0],[0,0.008]],\"v\":[[153.66,13.538],[153.66,13.514]],\"c\":true},\"ix\":2},\"nm\":\"Path 90\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":90,\"ty\":\"sh\",\"ix\":91,\"ks\":{\"a\":0,\"k\":{\"i\":[[0,0],[-0.439,-0.146],[-0.126,0.029],[-0.133,-0.077],[-0.244,-0.145],[-0.148,-0.248],[-0.122,-0.018],[-0.134,0.053],[-0.295,0.296],[0.244,0.148],[0.249,0.146],[0.343,0]],\"o\":[[0.298,0.396],[0.116,0.046],[0.145,-0.032],[0.293,0.145],[0.243,0.151],[0.11,-0.024],[0.148,0.021],[0.395,-0.199],[-0.149,-0.247],[-0.246,-0.146],[-0.295,-0.148],[0,0]],\"v\":[[-169.584,13.538],[-168.8,14.523],[-168.432,14.511],[-168.009,14.523],[-167.224,14.915],[-167.028,15.708],[-166.676,15.719],[-166.243,15.708],[-165.455,14.915],[-165.651,14.131],[-166.439,13.934],[-167.274,13.538]],\"c\":true},\"ix\":2},\"nm\":\"Path 91\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":91,\"ty\":\"sh\",\"ix\":92,\"ks\":{\"a\":0,\"k\":{\"i\":[[0.162,-0.09],[0.122,-0.072],[0.146,-0.048],[0.147,0],[0.294,0],[-0.342,-0.22],[-0.175,-0.073],[-0.151,-0.076],[-0.064,0.015],[-0.054,-0.041],[-0.075,-0.094],[-0.123,-0.117],[-0.076,-0.194],[-0.025,-0.122],[-0.05,-0.124],[-0.099,-0.125],[-0.124,-0.074],[-0.294,-0.221],[-0.078,-0.126],[-0.073,-0.172],[-0.022,-0.315],[0,0],[0,0.169],[0,0.293],[0,0.075],[0.346,0.345],[0.096,0.119],[0.073,0.123],[0.125,0.174],[0.172,0.126],[0.172,0.099],[0.069,-0.001],[0.026,0.068],[0,0],[0,0.17],[0,0],[0.147,0],[0.147,0],[0,0],[0.107,0]],\"o\":[[-0.146,0.068],[-0.123,0.072],[-0.124,0.025],[-0.294,0.025],[0.314,0.222],[0.149,0.077],[0.145,0.05],[0.055,0.021],[0.077,-0.016],[0.098,0.07],[0.098,0.126],[0.15,0.152],[0.023,0.125],[0.021,0.121],[0.049,0.145],[0.096,0.123],[0.297,0.218],[0.121,0.099],[0.095,0.145],[0.121,0.27],[0,0],[0,-0.17],[0,-0.297],[0,-0.079],[0,-0.514],[-0.1,-0.097],[-0.076,-0.097],[-0.098,-0.172],[-0.123,-0.168],[-0.174,-0.125],[-0.054,-0.031],[-0.088,0],[0,0],[-0.074,-0.144],[0,0],[-0.15,0],[-0.149,0],[0,0],[-0.129,0],[-0.157,0]],\"v\":[[209.499,22.39],[209.303,22.782],[208.91,22.979],[208.517,22.979],[207.535,23.175],[208.418,23.764],[208.814,24.06],[209.207,24.257],[209.392,24.249],[209.598,24.257],[209.598,24.647],[209.99,24.843],[210.386,25.235],[210.483,25.633],[210.483,26.028],[210.681,26.42],[211.072,26.617],[211.86,27.303],[212.257,27.503],[212.548,27.894],[212.646,28.729],[214.267,28.729],[214.217,28.288],[214.319,27.503],[214.267,27.327],[213.629,26.125],[213.238,25.929],[213.137,25.532],[212.844,25.041],[212.452,24.647],[211.957,24.354],[211.762,24.324],[211.566,24.257],[211.368,23.861],[211.467,23.448],[211.467,22.317],[211.072,22.39],[210.681,22.29],[210.309,22.29],[209.96,22.282]],\"c\":true},\"ix\":2},\"nm\":\"Path 92\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":92,\"ty\":\"sh\",\"ix\":93,\"ks\":{\"a\":0,\"k\":{\"i\":[[0,-0.243],[-0.196,-0.144],[-0.172,-0.046],[-0.148,0],[-0.27,0],[-0.071,-0.444],[-0.024,-0.147],[0,-0.369],[0.025,-0.243],[-0.024,-0.12],[0,-0.073],[-0.101,-0.074],[-0.17,-0.076],[-0.152,-0.025],[-0.294,0.052],[0.047,-0.166],[0.022,-0.12],[0,-0.17],[-0.074,-0.121],[-0.149,-0.073],[-0.15,-0.03],[-0.148,0],[-0.122,0.045],[-0.072,0.097],[-0.12,0.05],[-0.273,0],[0,0],[0.269,0.17],[0.097,0.046],[0.099,0.148],[0.046,0.126],[0.071,0.122],[0.145,0.102],[0.145,0.072],[0.097,0.074],[0.073,0.15],[0.02,0.148],[0.052,0.269],[0.098,0.145],[0.295,0.196],[0.272,0.196],[0.149,0.103],[0.148,0.099],[0.121,0.023]],\"o\":[[0,0.27],[0.149,0.124],[0.119,0.028],[0.271,0.028],[0,0.47],[0.025,0.145],[0.097,0.343],[0,0.246],[0,0.151],[0,0.056],[0,0.152],[0.145,0.119],[0.146,0.073],[0.266,0.046],[-0.077,0.177],[-0.026,0.124],[-0.026,0.149],[0,0.15],[0.073,0.124],[0.147,0.078],[0.122,0.021],[0.147,0],[0.125,-0.05],[0.074,-0.099],[0.247,-0.097],[0,0],[0,-0.343],[-0.099,-0.05],[-0.145,-0.103],[-0.049,-0.103],[-0.051,-0.124],[-0.076,-0.152],[-0.122,-0.074],[-0.12,-0.048],[-0.125,-0.098],[-0.076,-0.149],[-0.05,-0.272],[-0.027,-0.174],[-0.198,-0.297],[-0.269,-0.17],[-0.149,-0.099],[-0.148,-0.097],[-0.123,-0.076],[-0.023,0.248]],\"v\":[[204.587,24.084],[204.879,24.749],[205.274,25.041],[205.668,25.041],[206.353,25.041],[206.353,26.223],[206.55,26.617],[206.746,27.574],[206.647,28.185],[206.55,28.577],[206.647,28.777],[206.944,29.075],[207.337,29.37],[207.733,29.566],[208.517,29.465],[208.223,29.858],[208.223,30.253],[208.025,30.644],[208.124,31.038],[208.517,31.235],[208.91,31.435],[209.303,31.435],[209.696,31.435],[209.696,31.038],[210.089,30.939],[210.777,30.939],[210.777,29.786],[210.287,29.075],[209.892,28.979],[209.499,28.68],[209.404,28.288],[209.404,27.894],[209.009,27.597],[208.616,27.402],[208.223,27.303],[208.025,26.91],[207.829,26.517],[207.829,25.732],[207.535,25.338],[206.844,24.647],[206.061,24.257],[205.762,23.861],[205.371,23.568],[204.684,23.469]],\"c\":true},\"ix\":2},\"nm\":\"Path 93\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":93,\"ty\":\"sh\",\"ix\":94,\"ks\":{\"a\":0,\"k\":{\"i\":[[0.073,-0.123],[0.15,-0.391],[0.052,-0.127],[0.078,-0.15],[0.073,-0.121],[0.097,-0.151],[0.073,-0.121],[0.072,-0.123],[0.078,-0.171],[0.028,-0.126],[0,-0.123],[0.075,-0.151],[0.125,-0.147],[0.12,-0.073],[0.221,-0.171],[0.099,-0.073],[0.174,-0.1],[0.123,-0.022],[0.057,0.011],[0.073,-0.042],[0.099,-0.148],[0.099,-0.296],[-0.146,0],[-0.147,0],[-0.122,0.048],[-0.121,0.127],[-0.072,0.165],[-0.047,0.119],[-0.27,0.178],[-0.125,0.051],[-0.145,0.026],[-0.346,0],[-0.027,0.27],[-0.128,0.272],[-0.242,0.22],[-0.124,0.095],[-0.077,0.124],[-0.025,0.176],[-0.025,0.347],[0,0.147],[0,0.346]],\"o\":[[-0.243,0.369],[-0.024,0.124],[-0.073,0.173],[-0.072,0.146],[-0.097,0.146],[-0.074,0.121],[-0.072,0.124],[-0.077,0.149],[-0.048,0.121],[-0.021,0.122],[-0.021,0.172],[-0.072,0.146],[-0.095,0.123],[-0.225,0.173],[-0.099,0.078],[-0.144,0.125],[-0.122,0.046],[-0.052,0.011],[-0.078,-0.015],[-0.145,0.074],[-0.17,0.245],[0.147,0],[0.174,0],[0.124,0],[0.172,-0.073],[0.121,-0.124],[0.049,-0.124],[0.124,-0.296],[0.122,-0.071],[0.151,-0.049],[0.32,-0.074],[0,-0.295],[0.05,-0.296],[0.148,-0.29],[0.123,-0.101],[0.122,-0.103],[0.097,-0.15],[0.073,-0.316],[0,-0.148],[0.025,-0.346],[-0.072,0.148]],\"v\":[[203.602,25.338],[202.91,26.223],[202.91,26.617],[202.616,27.009],[202.421,27.402],[202.029,27.699],[201.832,28.092],[201.639,28.484],[201.24,28.777],[201.24,29.172],[201.24,29.566],[200.947,29.96],[200.65,30.351],[200.457,30.744],[199.668,30.939],[199.569,31.331],[199.176,31.631],[198.785,31.726],[198.621,31.715],[198.389,31.726],[198.095,32.121],[197.803,32.907],[198.168,33.003],[198.585,32.907],[198.98,32.907],[199.373,32.611],[199.668,32.221],[199.668,31.827],[200.258,31.135],[200.65,31.038],[201.046,30.842],[201.931,30.842],[201.931,30.055],[202.227,29.269],[202.715,28.484],[203.11,28.288],[203.504,28.092],[203.602,27.597],[203.602,26.713],[203.701,26.323],[203.798,24.942]],\"c\":true},\"ix\":2},\"nm\":\"Path 94\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":94,\"ty\":\"sh\",\"ix\":95,\"ks\":{\"a\":0,\"k\":{\"i\":[[0,0],[0.15,-0.019],[0.126,-0.051],[0.096,-0.124],[0.025,-0.124],[0,-0.347],[0,0],[0.292,-0.196],[0.174,-0.071],[0.173,-0.05],[0.172,-0.019],[0.32,-0.048],[0.149,0],[0.295,0],[0,0],[0.37,-0.068],[0.119,0],[0.294,0],[0.048,-0.194],[0.051,-0.146],[0.047,-0.144],[0.047,-0.124],[0.101,-0.126],[0.247,-0.274],[0.07,-0.169],[0.051,-0.126],[0.098,-0.198],[0.023,-0.124],[-0.125,-0.022],[-0.07,0.006],[-0.059,-0.01],[-0.198,-0.026],[-0.099,-0.586],[-0.027,-0.127],[-0.124,-0.296],[-0.023,-0.126],[0,-0.222],[0.075,-0.196],[0.127,-0.122],[0.046,-0.223],[0,-0.147],[0,-0.296],[0.095,-0.319],[0.146,-0.121],[0.172,-0.048],[0.068,0.006],[0.058,-0.011],[0.294,-0.027],[0,0],[-0.05,-0.175],[-0.025,-0.125],[0.416,-0.267],[0,0],[0.12,-0.027],[0.246,-0.195],[0.098,-0.149],[0,-0.609],[0,0],[0.052,-0.471],[0,-0.296],[0,-0.145],[0,-0.169],[0,-0.146],[-0.167,-0.295],[-0.148,0.048],[-0.248,0],[-0.345,-0.022],[0,0],[0.122,-0.076],[0.295,-0.052],[0.149,0],[0.201,-0.024],[0.076,-0.271],[0.095,-0.075],[0.123,-0.098],[0.147,-0.098],[0.074,-0.167],[0,-0.218],[-0.049,-0.202],[-0.074,-0.175],[-0.029,-0.175],[0,0],[-0.029,-0.346],[-0.05,-0.125],[-0.145,-0.121],[-0.144,-0.047],[-0.12,0],[-0.126,-0.026],[-0.149,-0.047],[-0.121,-0.074],[-0.125,-0.172],[-0.077,-0.146],[-0.099,-0.17],[-0.098,-0.121],[-0.073,-0.152],[-0.048,-0.151],[-0.025,-0.295],[-0.026,-0.127],[-0.077,-0.12],[-0.093,-0.122],[-0.098,-0.125],[-0.074,-0.145],[0,-0.293],[0,0],[-0.075,-0.127],[-0.075,-0.124],[-0.1,-0.146],[-0.025,-0.494],[-0.199,-0.438],[-0.075,-0.122],[-0.1,-0.098],[-0.124,-0.098],[-0.121,-0.071],[-0.145,-0.097],[-0.099,-0.122],[-0.049,-0.153],[0,-0.147],[-0.025,-0.393],[-0.026,-0.173],[-0.05,-0.125],[-0.073,-0.151],[-0.171,-0.295],[-0.1,-0.124],[-0.147,-0.12],[-0.148,-0.075],[-0.17,-0.102],[-0.174,-0.053],[-0.124,-0.025],[-0.128,0.012],[-0.136,-0.025],[-0.149,-0.075],[-0.144,-0.146],[-0.147,-0.101],[-0.125,-0.078],[-0.147,-0.095],[-0.345,-0.168],[-0.293,-0.101],[-0.148,-0.049],[-0.269,-0.317],[-0.099,-0.12],[-0.122,-0.151],[-0.296,-0.243],[-0.172,-0.023],[-0.121,0],[-0.292,0],[0,0],[0.025,-0.32],[0,-0.219],[0,-0.074],[0,0],[0,-0.368],[0,0],[0.025,-0.152],[0.025,-0.124],[0.022,-0.175],[0,-0.273],[0,-0.045],[0,0],[0,-0.147],[0,-0.221],[0,0],[0,0],[0.026,-0.22],[0,-0.344],[-0.025,-0.172],[0,0],[0,0],[0.022,-0.148],[0.022,-0.124],[0.026,-0.125],[0.049,-0.149],[0.073,-0.172],[0.145,-0.373],[0.022,-0.196],[0,-0.292],[0,-0.098],[-0.025,-0.392],[0,-0.146],[0,-0.175],[0,-0.195],[0.022,-0.124],[0.073,-0.197],[0.047,-0.124],[0.076,-0.148],[0.12,-0.174],[0,-0.494],[0,0],[0,-0.121],[-0.022,-0.121],[-0.073,-0.149],[-0.074,-0.15],[0,-0.644],[0.123,-0.586],[0,-0.15],[0.047,-0.442],[0.122,-0.296],[0.05,-0.123],[0.049,-0.195],[0.049,-0.171],[0.049,-0.148],[0.097,-0.15],[0.124,-0.172],[0,-0.149],[0,0],[0,-0.198],[0,-0.247],[0,-0.097],[0.022,-0.124],[0.076,-0.175],[0.075,-0.126],[0.078,-0.175],[0.026,-0.196],[0.148,-0.144],[0.074,-0.145],[0.023,-0.145],[0,-0.146],[-0.072,-0.193],[-0.026,-0.123],[-0.052,-0.3],[0,-0.148],[0,-0.148],[0,-0.317],[0.318,-0.517],[0.099,-0.147],[0.075,-0.145],[0,-0.298],[-0.025,-0.127],[-0.072,-0.173],[0,0],[0,-0.344],[0,-0.151],[0.244,-0.121],[0.099,-0.152],[0.049,-0.124],[0.049,-0.124],[0.05,-0.203],[0.026,-0.123],[0,-0.218],[-0.146,-0.167],[-0.124,-0.079],[-0.2,0],[0,0],[0,0],[0,0],[0,0],[0.146,-0.123],[0.123,-0.103],[0.126,-0.122],[0,0],[0.127,-0.145],[0.073,-0.149],[0.024,-0.122],[0,-0.151],[0,-0.49],[0.02,-0.469],[0.019,-0.148],[0,0],[0.121,0.1],[0.068,0],[0.041,0.068],[0,0.12],[0,0],[0.049,0.295],[0.049,0],[0.22,0],[0,0],[-0.099,-0.104],[-0.1,-0.123],[-0.072,-0.146],[-0.048,-0.147],[0,-0.12],[0,-0.147],[0,-0.292],[0,0],[0.099,0.072],[0.073,0.123],[0.049,0.125],[0.073,0.098],[0.197,0],[0.172,0],[0,0],[0.222,-0.147],[0.075,-0.122],[0,-0.198],[-0.469,-0.075],[-0.147,0],[-0.119,-0.03],[-0.064,0.007],[-0.064,-0.015],[-0.148,-0.098],[0.073,-0.121],[0,-0.216],[0,-0.169],[-0.027,-0.148],[-0.371,-0.146],[-0.296,-0.146],[0.024,-0.169],[0.024,-0.151],[0.292,-0.028],[0.125,-0.028],[0.297,-0.052],[0.112,0.008],[0.151,-0.029],[0.149,-0.075],[0,-0.223],[0,0],[-0.022,-0.149],[-0.022,-0.122],[-0.022,-0.121],[-0.073,-0.124],[0,-0.246],[0,0],[0.051,-0.172],[0,-0.169],[-0.196,-0.273],[0,-0.343],[0,-0.17],[-0.075,-0.126],[-0.119,-0.092],[-0.123,-0.099],[-0.049,-0.12],[0,0],[0,0],[-0.146,0],[0,0],[-0.144,-0.024],[0.147,-0.12],[0.296,-0.145],[-0.322,-0.127],[-0.072,0.01],[-0.056,-0.014],[-0.064,0.006],[-0.064,-0.015],[-0.097,-0.071],[0,0],[-0.098,-0.145],[-0.075,-0.169],[-0.052,-0.174],[-0.046,-0.127],[-0.144,-0.102],[-0.394,-0.266],[-0.099,-0.145],[-0.048,-0.12],[-0.048,-0.126],[-0.124,-0.077],[-0.047,-0.198],[-0.029,-0.123],[-0.027,-0.222],[-0.298,-0.031],[-0.126,-0.055],[-0.098,-0.073],[-0.05,-0.096],[-0.32,-0.127],[-0.141,0.021],[-0.123,-0.022],[-0.145,-0.025],[-0.121,-0.029],[-0.127,-0.025],[-0.169,-0.05],[-0.146,0.015],[-0.125,-0.012],[0,0],[-0.169,-0.048],[-0.198,0],[0,0],[-0.17,0],[-0.145,0.124],[-0.073,0.102],[-0.15,0.069],[-0.22,0],[-0.294,0.02],[0.223,0.149],[0.091,-0.021],[0.078,0.024],[0.321,0.074],[0.126,0],[0.15,0],[0.345,0],[0.145,0],[0,0],[0.295,0.024],[0.098,0.078],[0.096,0.143],[0.049,0.169],[0.022,0.296],[0.022,0.127],[0.049,0.121],[0.073,0.169],[0.047,0.144],[0,0.121],[0,0],[0.025,0.148],[0.025,0.265],[0.027,0.118],[0.074,0.15],[0,0.272],[0,0.243],[0,0],[0.048,0.15],[0,0],[-0.026,0.37],[0,0],[0.026,0.247],[0,0.142],[-0.122,0.246],[-0.147,0.093],[-0.124,0.026],[-0.273,0.073],[-0.099,0.168],[-0.196,0.61],[-0.047,0.127],[-0.122,0.126],[-0.146,0.074],[-0.171,0.072],[-0.067,-0.011],[-0.061,0.025],[-0.097,0.103],[0,0],[0.222,0],[0.318,0.1],[0.121,0.101],[0.05,0.099],[0.173,0.073],[0.122,0.049],[0.147,0.099],[0.097,0.171],[0.047,0.173],[0,0.295],[0,0],[-0.071,0.15],[-0.147,0.148],[-0.54,0],[0,0],[0,0],[-0.075,0.098],[-0.097,0.145],[-0.121,0.299],[-0.026,0.145],[0,0.146],[0,0.124],[-0.026,0.126],[-0.223,0],[-0.394,0],[-0.196,0.098],[-0.049,0.194],[0,0.145],[0,0],[0.052,0.148],[0.061,0.005],[0.074,-0.012],[0.148,-0.075],[0.199,-0.093],[0.077,0.01],[0.052,-0.009],[0.025,0.171],[0.025,0.295],[0.022,0.295],[0,0.152],[0,0],[0,0],[-0.293,-0.146],[-0.392,0],[0,0],[0,0.173],[0.027,0.175],[0,0],[-0.022,0.121],[-0.075,0.148],[-0.071,0.145],[0,0.143],[0.026,0.124],[0.071,0.294],[0,0.147],[0,0],[0,0],[-0.171,0],[0,0],[-0.268,0.073],[-0.344,0],[0,0],[-0.341,0],[-0.126,0.141],[-0.05,0.123],[-0.05,0.124],[-0.071,0.145],[-0.197,0.245],[-0.178,0.098],[-0.269,0.195],[-0.099,0.15],[-0.098,0.173],[0,0],[0,0.175],[0,0],[0,0],[0.149,0.032],[0,0],[0.025,0.125],[0.05,0.122],[0.123,0.097],[0.17,0.099],[0.297,0.222],[0.076,0.128],[0.098,0.149],[0.025,0.12],[0,0],[-0.32,-0.1],[-0.345,-0.176],[-0.174,-0.019],[-0.071,0.006],[-0.058,-0.009],[-0.467,0],[-0.127,0.025],[-0.196,0.051],[-0.3,0],[-0.271,0.078],[-0.168,0.074],[-0.097,0.073],[-0.098,0.148],[-0.147,0.293],[-0.073,0.124],[-0.173,0.102],[-0.124,0.052],[-0.123,0.169],[-0.049,0.17],[-0.022,0.122],[0,0.298],[-0.176,0.344],[-0.024,0.169],[-0.024,0.466],[0,0.126],[-0.024,0.125],[-0.073,0.119],[-0.295,0.122],[-0.172,0],[-0.172,-0.023],[0.047,-0.147],[0.027,-0.121],[0,-0.169],[-0.049,-0.168],[-0.223,0.224],[-0.072,0.122],[-0.148,0.298],[-0.074,0.122],[-0.099,0.169],[-0.073,0.145],[-0.074,0.172],[-0.025,0.124],[-0.027,0.149],[-0.027,0.123],[-0.073,0.126],[-0.147,0.097],[-0.126,0.044],[-0.126,0.025],[-0.149,0.097],[-0.099,0.197],[0,0.174],[0,0.296],[0.049,0.273],[0.048,0.293],[0,0.147],[0,0.195],[0,0.348],[-0.097,0.314],[-0.075,0.149],[-0.121,0.123],[-0.175,0.126],[-0.296,0.166],[-0.126,0.046],[-0.097,0.122],[-0.149,0.193],[-0.096,0.148],[-0.123,0.144],[-0.146,0.097],[-0.196,0],[0,0],[-0.27,0.194],[-0.122,0.148],[-0.1,0.126],[-0.124,0.127],[0,0],[-0.048,0.196],[-0.023,0.124],[-0.17,0.126],[-0.097,0.077],[-0.098,0.126],[-0.195,0.32],[-0.122,0.292],[-0.05,0.125],[-0.146,0.122],[-0.198,0.174],[-0.049,0.296],[-0.199,0.467],[-0.074,0.125],[-0.097,0.123],[-0.075,0.097],[-0.072,0.148],[-0.023,0.144],[0,0.125],[0,0.295],[-0.024,0.465],[0,0.121],[0,0],[-0.048,0.15],[-0.1,0.347],[-0.027,0.124],[0,0.121],[-0.023,0.151],[0,0.219],[0,0],[0,0.393],[0,0],[0,0.147],[0,0],[-0.122,0.029],[-0.065,-0.007],[-0.063,0.015],[-0.169,0.072],[-0.122,0.076],[-0.172,0.498],[-0.048,0.176],[-0.173,0.248],[-0.147,0.074],[-0.071,-0.016],[-0.059,0.026],[-0.121,0.025],[-0.343,0.246],[-0.097,0.095],[-0.143,0.296],[-0.317,0.639],[-0.047,0.121],[-0.1,0.119],[-0.076,0.171],[-0.053,0.125],[0,0],[-0.052,0.396],[0,0.22],[0.025,0.197],[0.074,0.174],[0.146,0.369],[0.027,0.293],[0,0.295],[0.127,0.296],[0.148,0.101],[0.347,0],[0,0],[0.148,0.027],[0.145,0.028],[0.08,-0.007],[0.086,0.014],[0.123,0.026],[0.269,0.169],[0.099,0.118],[0.049,0.123],[0.099,0.296],[0.024,0.121],[0.122,0.121],[0.17,0.125],[0.175,0.098],[0.123,0.024],[0.219,0],[0.393,0],[0,0],[0.172,0.078],[0.346,0.168],[0.148,0.047],[0.322,0],[0.37,-0.05],[0.047,-0.468],[0.221,0.024],[0.123,0],[0.122,0.027],[0.148,0.078],[0.123,0.075],[0.073,0.122],[-0.149,0.07],[-0.123,0.072],[-0.146,0.074],[0,0],[0.068,-0.006],[0.058,0.009],[0.148,0.024],[0.174,0.048],[0.148,0.098],[0.173,0.123],[0.15,0.1],[0.123,0.047],[0.223,0.017],[0.196,0],[0.121,0],[0,0],[0.145,0.048],[0.223,0.101],[0.345,0],[0.318,-0.048],[0,0],[0,0],[0,0],[-0.075,0.12],[-0.149,0.123],[-0.149,0.128],[-0.047,0.096],[-0.024,0.292],[0.27,0.102],[0.169,0.053],[0.271,0.074],[0.195,0],[0,0],[0,0],[0.197,-0.025],[0.025,-0.295],[0.025,-0.121],[0.417,0],[0.274,0.028],[0,0],[0,0.145],[0,0.148],[-0.392,0.195],[-0.097,0.073],[-0.048,0.148],[-0.021,0.293],[-0.026,0.294],[0,0.222],[0.026,0.42],[0.222,0],[0.147,0],[0.124,0],[0,0],[0.027,0.146],[0.048,0.171],[0.048,0.123],[0.072,0.197],[0.051,0.1],[0.148,0.098],[0.075,-0.017],[0.057,0.025],[0.297,0.145],[0.072,0.145],[0.221,0.193],[0.121,0.075],[0.148,0.077],[0.173,0.075],[0.174,-0.025],[0.138,0.013],[0.174,0.073],[0.173,0.074],[0,0],[0.244,0],[0.169,-0.075],[0.149,-0.1],[0.393,0],[0,0],[0.147,0],[0.271,0.073],[0.296,0.124],[0.122,0.052],[0.272,0.145],[0.294,0.248],[0.098,0.15],[0.025,0.194],[0,0.465],[0.174,0.023],[0.069,-0.007],[0.059,0.011],[0.173,0.07],[0.124,0.071],[0.146,0.145],[0.096,0.119],[0.096,0.074],[0.075,-0.016],[0.057,0.025],[0.147,0.125],[0.049,0.172],[0.023,0.122],[0,0.347],[0,0],[0.27,-0.075],[0.297,-0.025],[0.147,0],[0.05,0.174],[0.024,0.124],[0.027,0.393],[0,0],[-0.17,0.076],[0.22,0.094],[0.176,0.048],[0.148,0.053],[0.175,0.047],[0,0],[0,0],[0.147,0.051],[0.294,0],[0.145,-0.194],[0.051,-0.122],[0.048,-0.121],[0.071,-0.122],[0.344,0],[0.174,0.096],[0.097,0.127],[0.099,0.149],[0.171,0.075],[0.319,0.075],[0.196,0],[0,0],[0.145,0.021],[0.397,0.075],[0,0],[0.295,0.023],[0.148,0.053],[0.147,0.1],[0.171,0.077],[0.122,0.027],[0.54,0.102],[0.024,-0.293],[0.099,-0.122],[0.17,-0.024],[0.129,0.012],[0.135,-0.024],[0.172,-0.073],[0.147,-0.123],[0,-0.218],[0,-0.149],[-0.027,-0.121],[0,-0.122],[-0.025,-0.149],[0,-0.219],[0.025,-0.222],[0.048,-0.175],[0.123,0.124],[0.098,0.122],[0.148,0.391],[0,0.344],[-0.022,0.12],[-0.051,0.175],[-0.025,0.125],[0,0.146],[0,0.248],[-0.321,0.294],[-0.124,0.102],[-0.121,0.098],[-0.122,0.073],[0,0]],\"o\":[[-0.169,0],[-0.122,0.029],[-0.145,0.072],[-0.075,0.099],[-0.075,0.318],[0,0],[-0.37,0],[-0.148,0.099],[-0.171,0.075],[-0.17,0.05],[-0.32,0.074],[-0.124,0],[-0.291,0.022],[0,0],[-0.271,0.271],[-0.123,0.029],[-0.273,0.023],[0,0.222],[-0.048,0.151],[-0.047,0.148],[-0.051,0.124],[-0.051,0.173],[-0.244,0.266],[-0.097,0.124],[-0.05,0.123],[-0.077,0.17],[-0.049,0.117],[0,0],[0.064,0.014],[0.064,-0.007],[0.173,0.048],[0,0.612],[0,0.123],[0.096,0.315],[0.048,0.123],[0.05,0.195],[0,0.22],[-0.07,0.177],[-0.171,0.17],[-0.026,0.124],[-0.026,0.293],[0,0.343],[-0.052,0.196],[-0.147,0.122],[-0.062,0.014],[-0.067,-0.006],[-0.275,0.051],[0,0],[0.076,0.171],[0.025,0.12],[-0.467,0.222],[0,0],[-0.123,0.021],[-0.297,0.072],[-0.149,0.123],[-0.322,0.493],[0,0],[0.05,0.472],[-0.02,0.293],[0,0.148],[0,0.172],[0,0.173],[0.049,0.318],[0.149,-0.074],[0.219,-0.075],[0.341,0],[0,0],[-0.097,0.124],[-0.271,0.168],[-0.124,0.023],[-0.198,0.023],[0,0.295],[-0.02,0.123],[-0.121,0.095],[-0.147,0.126],[-0.148,0.098],[-0.072,0.176],[0,0.22],[0.05,0.169],[0.075,0.166],[0,0],[0.021,0.341],[0,0.147],[0.073,0.166],[0.121,0.096],[0.128,0.026],[0.122,0],[0.147,0.026],[0.148,0.052],[0.173,0.096],[0.073,0.124],[0.075,0.172],[0.072,0.124],[0.124,0.147],[0.073,0.117],[0.073,0.269],[0,0.148],[0.022,0.121],[0.071,0.145],[0.099,0.12],[0.1,0.123],[0.121,0.244],[0,0],[0.074,0.145],[0.074,0.123],[0.099,0.147],[0.291,0.368],[0.026,0.491],[0.046,0.148],[0.074,0.123],[0.098,0.098],[0.124,0.096],[0.146,0.099],[0.124,0.078],[0.099,0.12],[0.025,0.117],[0.025,0.396],[0,0.196],[0.025,0.125],[0.074,0.17],[0.174,0.271],[0.073,0.147],[0.096,0.125],[0.124,0.101],[0.174,0.098],[0.149,0.07],[0.122,0.024],[0.136,0.025],[0.129,-0.013],[0.17,0.022],[0.174,0.097],[0.124,0.125],[0.124,0.07],[0.148,0.097],[0.32,0.198],[0.269,0.126],[0.147,0.049],[0.367,0.174],[0.099,0.127],[0.122,0.172],[0.246,0.293],[0.147,0.128],[0.122,0.024],[0.271,0.024],[0,0],[0,0.318],[0,0.222],[0,0.074],[0,0],[0.025,0.371],[0,0],[0,0.173],[-0.025,0.122],[-0.025,0.149],[-0.027,0.269],[0,0.046],[0,0],[0,0.174],[0.025,0.198],[0,0],[0,0],[-0.025,0.196],[-0.049,0.345],[0.074,0.174],[0,0],[0,0],[-0.025,0.148],[-0.027,0.125],[-0.027,0.12],[-0.025,0.144],[-0.048,0.174],[-0.173,0.367],[-0.049,0.171],[-0.025,0.294],[0,0.104],[0,0.393],[0,0.146],[0,0.174],[0,0.194],[0,0.15],[-0.025,0.196],[-0.049,0.124],[-0.073,0.174],[-0.122,0.194],[-0.295,0.368],[0,0],[0,0.15],[0,0.126],[0.051,0.145],[0.07,0.171],[0.294,0.539],[0,0.611],[-0.023,0.127],[-0.051,0.465],[-0.051,0.32],[-0.049,0.122],[-0.073,0.198],[-0.05,0.17],[-0.05,0.148],[-0.05,0.171],[-0.124,0.172],[-0.049,0.097],[0,0],[0,0.198],[0,0.244],[0,0.097],[0,0.147],[-0.05,0.171],[-0.075,0.144],[-0.099,0.17],[-0.072,0.171],[-0.144,0.147],[-0.125,0.12],[-0.073,0.148],[-0.025,0.125],[0,0.222],[0.024,0.127],[0.098,0.294],[0.024,0.123],[0,0.145],[0.024,0.32],[0,0.64],[-0.074,0.147],[-0.095,0.149],[-0.122,0.247],[0,0.146],[0.048,0.173],[0,0],[0.15,0.296],[0,0.143],[-0.297,0.023],[-0.174,0.099],[-0.075,0.095],[-0.05,0.122],[-0.075,0.192],[-0.02,0.121],[-0.047,0.196],[0,0.249],[0.098,0.126],[0.146,0.096],[0,0],[0,0],[0,0],[0,0],[-0.126,0.125],[-0.126,0.097],[-0.147,0.119],[0,0],[-0.096,0.125],[-0.122,0.148],[-0.077,0.121],[-0.027,0.123],[0,0.492],[0,0.469],[0,0.169],[0,0],[-0.146,-0.098],[-0.045,-0.031],[-0.085,0.001],[-0.074,-0.123],[0,0],[0,-0.296],[-0.05,0.025],[-0.196,0.05],[0,0],[0.121,0.077],[0.121,0.12],[0.099,0.124],[0.076,0.126],[0.026,0.124],[0,0.122],[0.028,0.296],[0,0],[-0.12,-0.024],[-0.126,-0.072],[-0.076,-0.102],[-0.05,-0.122],[-0.125,-0.149],[-0.169,0],[0,0],[-0.274,0.049],[-0.124,0.076],[-0.097,0.153],[0,0.489],[0.121,0.022],[0.146,0],[0.059,0.011],[0.072,-0.006],[0.171,0.047],[-0.049,0.123],[-0.099,0.176],[0,0.177],[0,0.151],[0.415,0],[0.294,0.122],[-0.046,0.146],[-0.029,0.147],[-0.297,0],[-0.148,0],[-0.293,0.066],[-0.118,0.011],[-0.144,-0.012],[-0.173,0.023],[-0.173,0.099],[0,0],[0,0.168],[0,0.117],[0.026,0.125],[0.026,0.147],[0.123,0.171],[0,0],[-0.025,0.171],[-0.046,0.147],[0,0.347],[0.197,0.272],[0,0.171],[0,0.15],[0.072,0.121],[0.125,0.1],[0.098,0.073],[0,0],[0,0],[0.146,-0.024],[0,0],[0.147,0],[-0.072,0.173],[-0.246,0.198],[0.245,0.269],[0.066,0.025],[0.062,-0.009],[0.06,0.011],[0.071,-0.006],[0.102,0.022],[0,0],[0.099,0.125],[0.097,0.146],[0.072,0.172],[0.02,0.124],[0.072,0.169],[0.37,0.269],[0.148,0.102],[0.074,0.097],[0.052,0.125],[0.073,0.146],[0.17,0.122],[0.025,0.119],[0.023,0.196],[0.294,0.018],[0.148,0],[0.12,0.042],[0.099,0.075],[0.194,0.297],[0.148,0.052],[0.116,-0.017],[0.146,0.023],[0.127,0.024],[0.12,0.02],[0.168,0.049],[0.157,0.043],[0.108,-0.012],[0,0],[0.171,0.02],[0.174,0.049],[0,0],[0.173,0],[0.198,0],[0.097,-0.071],[0.126,-0.145],[0.171,-0.098],[0.294,0],[-0.047,-0.297],[-0.081,-0.05],[-0.075,0.016],[-0.296,-0.123],[-0.121,-0.027],[-0.122,0],[-0.342,-0.026],[-0.149,0],[0,0],[-0.295,0],[-0.149,0],[-0.148,-0.121],[-0.098,-0.151],[-0.077,-0.273],[0,-0.145],[-0.027,-0.121],[-0.075,-0.174],[-0.072,-0.149],[-0.023,-0.126],[0,0],[-0.023,-0.145],[-0.024,-0.268],[0,-0.127],[-0.02,-0.149],[-0.126,-0.22],[0,-0.244],[0,0],[0,-0.17],[0,0],[0,-0.368],[0,0],[0,-0.248],[0,-0.148],[0,-0.297],[0.099,-0.173],[0.099,-0.073],[0.27,-0.073],[0.196,-0.048],[0.343,-0.566],[0.026,-0.128],[0.074,-0.149],[0.099,-0.095],[0.146,-0.071],[0.061,-0.022],[0.068,0.012],[0.15,-0.073],[0,0],[-0.223,-0.023],[-0.345,0],[-0.146,-0.046],[-0.101,-0.076],[-0.121,-0.17],[-0.122,-0.048],[-0.172,-0.072],[-0.176,-0.097],[-0.099,-0.145],[-0.072,-0.266],[0,0],[0,-0.177],[0.099,-0.197],[0.37,-0.366],[0,0],[0,0],[0,-0.149],[0.096,-0.151],[0.173,-0.271],[0.05,-0.144],[0.025,-0.124],[0,-0.148],[0,-0.12],[0.05,-0.193],[0.392,0],[0.248,0],[0.172,-0.097],[0.025,-0.126],[0,0],[0,-0.169],[-0.073,0.012],[-0.06,-0.007],[-0.174,0.025],[-0.195,0.097],[-0.071,0.031],[-0.057,-0.009],[-0.099,-0.143],[-0.048,-0.272],[-0.022,-0.29],[0,-0.145],[0,0],[0,0],[0.348,0],[0.346,0.172],[0,0],[0,-0.173],[0,-0.197],[0,0],[0,-0.146],[0.051,-0.145],[0.072,-0.146],[0.051,-0.126],[0,-0.152],[-0.05,-0.296],[-0.028,-0.122],[0,0],[0,0],[0.173,0],[0,0],[0.292,0],[0.32,-0.078],[0,0],[0.343,0],[0.199,0],[0.073,-0.101],[0.049,-0.126],[0.072,-0.171],[0.174,-0.295],[0.12,-0.148],[0.293,-0.172],[0.151,-0.098],[0.098,-0.144],[0,0],[0.073,-0.142],[0,0],[0,0],[-0.147,0],[0,0],[0,-0.147],[-0.025,-0.123],[-0.049,-0.175],[-0.147,-0.126],[-0.324,-0.201],[-0.12,-0.099],[-0.097,-0.145],[-0.05,-0.098],[0,0],[0.342,0],[0.368,0.121],[0.173,0.073],[0.063,0.016],[0.064,-0.006],[0.44,0.099],[0.147,0],[0.194,-0.048],[0.271,-0.044],[0.293,0],[0.171,-0.044],[0.123,-0.047],[0.151,-0.125],[0.195,-0.269],[0.074,-0.148],[0.099,-0.173],[0.121,-0.067],[0.197,-0.095],[0.097,-0.151],[0.027,-0.122],[0.05,-0.272],[0.222,-0.293],[0.069,-0.17],[0.073,-0.444],[0,-0.151],[0,-0.122],[0.051,-0.147],[0.173,-0.273],[0.148,-0.047],[0.169,0],[-0.05,0.149],[-0.027,0.119],[-0.022,0.148],[0,0.197],[0.293,-0.144],[0.1,-0.095],[0.172,-0.273],[0.072,-0.144],[0.098,-0.173],[0.073,-0.128],[0.075,-0.177],[0.051,-0.122],[0.05,-0.149],[0.024,-0.124],[0.048,-0.149],[0.101,-0.147],[0.1,-0.075],[0.119,-0.052],[0.169,-0.048],[0.172,-0.101],[0.073,-0.148],[0.024,-0.294],[0,-0.294],[-0.05,-0.296],[-0.024,-0.123],[0,-0.195],[-0.023,-0.345],[0,-0.345],[0.027,-0.155],[0.073,-0.172],[0.149,-0.145],[0.269,-0.194],[0.124,-0.055],[0.147,-0.078],[0.147,-0.173],[0.098,-0.145],[0.098,-0.172],[0.123,-0.148],[0.146,-0.1],[0,0],[0.368,0],[0.147,-0.098],[0.099,-0.123],[0.121,-0.15],[0,0],[0.025,-0.224],[0.028,-0.125],[0.049,-0.197],[0.098,-0.047],[0.123,-0.096],[0.249,-0.297],[0.176,-0.267],[0.051,-0.125],[0.1,-0.17],[0.221,-0.172],[0.198,-0.169],[0.026,-0.539],[0.048,-0.15],[0.072,-0.118],[0.072,-0.097],[0.096,-0.125],[0.075,-0.149],[0.026,-0.126],[0.026,-0.269],[0,-0.466],[0,-0.147],[0,0],[0.026,-0.145],[0.097,-0.34],[0.022,-0.121],[0.024,-0.121],[0,-0.126],[0.027,-0.224],[0,0],[-0.023,-0.399],[0,0],[0,-0.149],[0,0],[0.145,-0.028],[0.059,-0.011],[0.07,0.006],[0.173,-0.047],[0.15,-0.073],[0.42,-0.295],[0.049,-0.172],[0.076,-0.291],[0.099,-0.146],[0.063,-0.037],[0.063,0.014],[0.124,-0.051],[0.394,-0.147],[0.097,-0.049],[0.223,-0.226],[0.324,-0.633],[0.052,-0.124],[0.077,-0.176],[0.098,-0.124],[0.045,-0.124],[0,0],[0.174,-0.34],[0.025,-0.22],[0,-0.223],[-0.022,-0.171],[-0.169,-0.342],[-0.052,-0.271],[-0.022,-0.295],[0,-0.346],[-0.071,-0.173],[-0.27,-0.171],[0,0],[-0.173,0],[-0.148,-0.023],[-0.087,-0.012],[-0.081,0.007],[-0.122,-0.026],[-0.322,-0.098],[-0.121,-0.078],[-0.07,-0.099],[-0.122,-0.267],[-0.025,-0.127],[-0.048,-0.174],[-0.147,-0.148],[-0.171,-0.122],[-0.121,-0.074],[-0.197,-0.075],[-0.397,0],[0,0],[-0.196,0],[-0.342,-0.147],[-0.147,-0.072],[-0.294,-0.098],[-0.367,0],[0,0.464],[-0.224,0],[-0.15,0],[-0.126,0],[-0.149,-0.024],[-0.149,-0.073],[-0.099,-0.075],[0.146,-0.123],[0.122,-0.075],[0.148,-0.073],[0,0],[-0.078,-0.013],[-0.061,0.005],[-0.149,-0.026],[-0.172,-0.051],[-0.171,-0.048],[-0.174,-0.1],[-0.145,-0.1],[-0.096,-0.048],[-0.196,-0.1],[-0.171,-0.028],[-0.147,0],[0,0],[-0.148,-0.03],[-0.221,-0.074],[-0.294,-0.118],[-0.321,0],[0,0],[0,0],[0,0],[0.05,-0.123],[0.097,-0.179],[0.122,-0.1],[0.099,-0.068],[0.15,-0.221],[-0.293,-0.025],[-0.171,-0.049],[-0.273,-0.099],[-0.169,-0.047],[0,0],[0,0],[-0.197,0],[0,0.294],[0,0.146],[-0.148,0.391],[-0.269,0],[0,0],[0,-0.145],[0,-0.148],[0.443,0],[0.123,-0.046],[0.125,-0.097],[0.1,-0.27],[0.025,-0.296],[0.026,-0.221],[0,-0.414],[-0.22,0],[-0.145,0],[-0.125,0],[0,0],[0,-0.176],[-0.022,-0.171],[-0.021,-0.122],[-0.074,-0.196],[-0.049,-0.123],[-0.097,-0.147],[-0.052,-0.037],[-0.067,0.014],[-0.297,-0.121],[-0.12,-0.098],[-0.146,-0.272],[-0.099,-0.076],[-0.124,-0.074],[-0.146,-0.072],[-0.177,-0.072],[-0.115,0.017],[-0.197,0],[-0.194,-0.097],[0,0],[-0.221,-0.099],[-0.219,0],[-0.172,0.075],[-0.316,0.218],[0,0],[-0.151,0],[-0.294,-0.027],[-0.316,-0.097],[-0.121,-0.05],[-0.294,-0.116],[-0.319,-0.198],[-0.15,-0.124],[-0.095,-0.169],[-0.075,-0.445],[-0.196,-0.021],[-0.062,-0.013],[-0.066,0.006],[-0.174,-0.052],[-0.147,-0.072],[-0.17,-0.096],[-0.124,-0.124],[-0.075,-0.104],[-0.054,-0.038],[-0.067,0.015],[-0.17,-0.072],[-0.12,-0.095],[-0.05,-0.124],[-0.074,-0.319],[0,0],[-0.266,0.054],[-0.296,0.096],[-0.119,0],[-0.194,0],[-0.048,-0.122],[-0.1,-0.366],[0,0],[0.169,-0.049],[-0.148,-0.197],[-0.176,-0.076],[-0.148,-0.048],[-0.168,-0.049],[0,0],[0,0],[-0.148,-0.051],[-0.27,-0.073],[-0.271,0],[-0.074,0.103],[-0.048,0.12],[-0.05,0.147],[-0.173,0.271],[-0.197,0],[-0.147,-0.074],[-0.097,-0.121],[-0.097,-0.147],[-0.297,-0.146],[-0.174,-0.024],[0,0],[-0.175,0],[-0.37,-0.1],[0,0],[-0.291,0],[-0.174,0],[-0.171,-0.049],[-0.146,-0.095],[-0.124,-0.047],[-0.494,-0.172],[0,0.294],[0,0.197],[-0.1,0.125],[-0.137,0.025],[-0.128,-0.013],[-0.174,0.026],[-0.169,0.077],[-0.148,0.125],[0,0.148],[0,0.147],[0.023,0.122],[0.023,0.15],[0.025,0.194],[0,0.224],[-0.025,0.195],[-0.124,-0.101],[-0.125,-0.124],[-0.27,-0.346],[-0.119,-0.323],[0,-0.15],[0.051,-0.173],[0.026,-0.121],[0.023,-0.123],[0,-0.245],[0,-0.465],[0.12,-0.097],[0.122,-0.095],[0.123,-0.098],[0,0],[0,0]],\"v\":[[-156.459,25.264],[-156.875,25.357],[-157.27,25.459],[-157.659,25.655],[-157.759,26.048],[-157.759,26.936],[-159.993,26.936],[-160.805,27.424],[-161.2,27.719],[-161.693,27.916],[-162.184,28.111],[-163.068,28.305],[-163.463,28.41],[-164.247,28.41],[-164.247,30.668],[-165.036,31.256],[-165.425,31.359],[-166.214,31.359],[-166.214,31.946],[-166.412,32.339],[-166.605,32.733],[-166.605,33.127],[-167.002,33.426],[-167.788,34.013],[-168.18,34.306],[-168.18,34.7],[-168.574,35.094],[-168.6,35.463],[-168.6,35.856],[-168.396,35.858],[-168.208,35.856],[-167.716,35.956],[-167.716,37.526],[-167.617,37.921],[-167.224,38.708],[-167.129,39.102],[-167.028,39.69],[-167.129,40.278],[-167.521,40.577],[-168.009,40.97],[-168.009,41.359],[-167.914,42.149],[-168.009,43.032],[-168.404,43.426],[-168.7,43.818],[-168.898,43.819],[-169.09,43.818],[-169.878,43.919],[-169.978,44.508],[-169.683,44.904],[-169.683,45.294],[-170.863,45.978],[-170.959,46.772],[-171.351,46.868],[-172.14,47.163],[-172.434,47.556],[-172.73,49.124],[-174.403,49.124],[-174.306,50.309],[-174.403,51.095],[-174.5,51.487],[-174.403,51.904],[-174.5,52.373],[-174.11,53.157],[-173.713,52.964],[-173.097,52.768],[-172.239,52.862],[-172.239,53.647],[-172.434,54.046],[-173.221,54.339],[-173.614,54.339],[-174.11,54.436],[-174.11,55.224],[-174.205,55.618],[-174.599,55.811],[-174.99,56.107],[-175.385,56.401],[-175.482,56.992],[-175.385,57.587],[-175.09,57.98],[-174.793,58.372],[-174.793,58.765],[-174.793,59.648],[-174.793,60.043],[-174.5,60.433],[-174.11,60.63],[-173.713,60.63],[-173.318,60.63],[-172.926,60.825],[-172.534,61.025],[-172.14,61.417],[-171.944,61.811],[-171.648,62.3],[-171.453,62.693],[-171.058,62.992],[-170.863,63.385],[-170.863,64.169],[-170.764,64.566],[-170.665,64.956],[-170.274,65.252],[-169.978,65.645],[-169.584,65.94],[-169.485,66.725],[-169.485,67.612],[-169.191,68.104],[-168.995,68.497],[-168.6,68.79],[-168.11,69.97],[-168.009,71.249],[-167.815,71.642],[-167.421,71.839],[-167.224,72.231],[-166.832,72.426],[-166.439,72.72],[-166.045,72.92],[-165.848,73.316],[-165.848,73.705],[-165.848,74.687],[-165.75,75.18],[-165.75,75.575],[-165.358,75.868],[-164.964,76.654],[-164.764,77.05],[-164.374,77.342],[-163.982,77.54],[-163.49,77.838],[-163.095,78.132],[-162.702,78.229],[-162.309,78.229],[-161.915,78.229],[-161.522,78.524],[-161.131,78.916],[-160.836,79.312],[-160.439,79.508],[-160.049,79.799],[-159.262,80.388],[-158.475,80.687],[-158.081,80.883],[-157.197,81.469],[-156.999,81.865],[-156.608,82.261],[-155.918,83.043],[-155.624,83.438],[-155.232,83.438],[-154.47,83.438],[-154.47,87.545],[-154.641,88.354],[-154.542,88.941],[-154.641,89.139],[-154.641,89.53],[-154.445,90.491],[-154.445,90.712],[-154.641,91.108],[-154.641,91.499],[-154.835,91.895],[-154.74,92.558],[-154.835,92.677],[-154.835,93.171],[-154.641,93.564],[-154.641,94.129],[-154.641,94.351],[-154.641,94.742],[-154.936,95.234],[-154.936,96.119],[-154.641,96.614],[-154.641,97.004],[-154.641,97.397],[-154.835,97.792],[-154.835,98.189],[-154.936,98.58],[-155.133,98.972],[-155.329,99.463],[-155.819,100.446],[-156.015,100.936],[-156.015,101.695],[-156.114,101.921],[-156.015,102.904],[-155.918,103.295],[-156.015,103.766],[-155.918,104.278],[-156.015,104.672],[-156.313,105.166],[-156.409,105.558],[-156.707,105.953],[-157.098,106.443],[-157.687,107.573],[-157.687,107.817],[-157.592,108.21],[-157.592,108.606],[-157.393,109],[-157.098,109.394],[-156.608,110.968],[-156.903,112.533],[-156.999,112.932],[-156.999,114.109],[-157.294,114.998],[-157.393,115.389],[-157.786,115.782],[-157.786,116.274],[-157.984,116.667],[-158.278,117.058],[-158.671,117.454],[-158.966,117.749],[-158.966,118.533],[-158.867,119.027],[-158.966,119.642],[-158.867,119.91],[-158.867,120.306],[-159.164,120.698],[-159.361,121.092],[-159.755,121.485],[-159.853,121.975],[-160.439,122.466],[-160.836,122.761],[-161.03,123.152],[-161.131,123.547],[-160.736,123.938],[-160.736,124.334],[-160.439,125.123],[-160.439,125.515],[-160.344,125.908],[-160.344,126.742],[-160.638,128.365],[-160.935,128.758],[-161.326,129.053],[-161.423,129.843],[-161.423,130.234],[-161.131,130.627],[-160.935,131.02],[-160.541,131.834],[-160.638,132.2],[-161.423,132.295],[-161.817,132.594],[-161.915,132.986],[-162.014,133.38],[-162.409,133.775],[-162.409,134.166],[-162.508,134.753],[-162.31,135.341],[-161.915,135.546],[-161.497,135.839],[-160.245,135.839],[-159.95,132.295],[-158.475,132.295],[-158.475,133.473],[-158.768,133.87],[-159.164,134.071],[-159.46,134.459],[-159.46,136.525],[-159.755,136.916],[-160.144,137.213],[-160.245,137.607],[-160.291,137.999],[-160.144,139.276],[-160.144,140.458],[-160.291,140.852],[-160.736,140.555],[-161.03,140.162],[-161.209,140.132],[-161.423,140.065],[-161.423,139.673],[-161.423,139.276],[-161.522,138.49],[-161.522,138.688],[-162.112,138.688],[-162.112,139.865],[-161.718,139.969],[-161.522,140.357],[-161.131,140.652],[-160.935,141.047],[-160.935,141.44],[-160.836,141.835],[-160.836,142.617],[-161.131,142.422],[-161.522,142.326],[-161.915,142.131],[-161.915,141.735],[-162.014,141.342],[-162.409,141.047],[-162.799,141.247],[-162.799,142.422],[-163.587,142.617],[-163.786,143.013],[-164.176,143.31],[-163.291,144.195],[-162.898,144.093],[-162.508,144.195],[-162.32,144.193],[-162.112,144.195],[-161.817,144.586],[-161.915,144.977],[-162.31,145.37],[-162.112,145.763],[-162.112,146.159],[-161.03,146.26],[-160.245,146.649],[-160.439,147.042],[-160.439,147.441],[-161.227,147.441],[-161.622,147.441],[-162.409,147.732],[-162.752,147.727],[-163.192,147.732],[-163.587,148.026],[-163.982,148.422],[-163.982,148.618],[-163.786,149.012],[-163.786,149.403],[-163.786,149.796],[-163.392,149.994],[-163.095,150.584],[-163.095,150.781],[-163.392,151.172],[-163.587,151.564],[-162.996,152.256],[-162.606,153.039],[-162.996,153.236],[-162.898,153.63],[-162.508,153.824],[-162.112,154.023],[-162.112,154.416],[-162.898,154.812],[-162.702,155.301],[-162.31,155.205],[-161.522,155.205],[-161.131,155.301],[-161.227,155.792],[-162.014,156.187],[-161.326,156.878],[-161.115,156.882],[-160.935,156.878],[-160.747,156.876],[-160.541,156.878],[-160.541,157.171],[-160.935,157.464],[-160.638,157.857],[-160.245,158.153],[-160.144,158.644],[-160.245,159.039],[-159.853,159.334],[-158.671,159.821],[-158.278,160.117],[-158.181,160.51],[-158.081,160.908],[-157.687,161.102],[-157.197,161.4],[-157.294,161.791],[-157.197,162.381],[-156.409,162.482],[-156.015,162.482],[-155.624,162.576],[-155.624,162.968],[-154.936,163.66],[-154.506,163.671],[-154.149,163.66],[-153.759,163.854],[-153.362,163.955],[-152.967,164.052],[-152.578,164.348],[-152.136,164.36],[-151.791,164.348],[-151.396,164.348],[-151.006,164.639],[-150.485,164.742],[-147.366,164.742],[-146.974,164.937],[-146.581,164.639],[-146.484,164.245],[-146.087,163.906],[-145.497,163.955],[-144.714,163.906],[-144.909,163.164],[-145.171,163.154],[-145.4,163.164],[-146.188,162.775],[-146.581,162.775],[-146.974,162.677],[-147.858,162.677],[-148.249,162.576],[-148.249,161.691],[-149.038,161.691],[-149.431,161.691],[-149.823,161.4],[-149.921,160.908],[-150.117,160.117],[-150.117,159.724],[-150.117,159.334],[-150.512,159.039],[-150.708,158.644],[-150.708,158.252],[-150.708,157.857],[-150.905,157.464],[-150.905,156.682],[-151.006,156.287],[-151.2,155.891],[-151.669,155.4],[-151.493,154.812],[-151.493,154.416],[-151.691,154.023],[-151.691,152.745],[-151.592,151.812],[-149.627,151.812],[-149.627,151.172],[-149.727,150.781],[-149.627,149.994],[-149.333,149.601],[-148.939,149.502],[-148.152,149.403],[-147.759,149.012],[-147.17,147.441],[-147.071,147.042],[-146.776,146.649],[-146.383,146.453],[-145.991,146.159],[-145.796,146.16],[-145.598,146.159],[-145.4,145.763],[-145.4,144.977],[-145.991,144.878],[-146.875,144.878],[-147.265,144.68],[-147.366,144.29],[-147.759,143.896],[-148.152,143.799],[-148.544,143.503],[-148.939,143.112],[-149.234,142.718],[-149.333,141.93],[-149.333,141.542],[-149.137,141.144],[-148.743,140.752],[-147.538,140.065],[-145.203,140.065],[-145.203,137.879],[-145.103,137.508],[-144.714,137.213],[-144.319,136.424],[-144.122,136.032],[-144.122,135.641],[-144.219,135.245],[-144.122,134.851],[-143.729,134.459],[-142.745,134.658],[-142.155,134.459],[-141.762,134.071],[-141.762,133.676],[-141.762,133.277],[-141.961,132.887],[-142.158,132.888],[-142.352,132.887],[-142.745,133.083],[-143.139,133.473],[-143.365,133.482],[-143.531,133.473],[-144.236,133.229],[-144.236,132.44],[-144.331,131.654],[-144.431,131.286],[-144.431,130.084],[-143.77,130.084],[-142.958,130.375],[-142.146,130.969],[-139.712,130.969],[-139.513,130.572],[-139.811,130.179],[-139.811,129.787],[-139.811,129.394],[-139.613,129.001],[-139.221,128.808],[-139.221,128.415],[-139.221,128.019],[-139.513,127.232],[-139.613,126.863],[-139.613,125.953],[-137.77,125.953],[-137.354,125.854],[-136.564,125.854],[-135.781,125.759],[-134.969,125.465],[-133.051,125.465],[-132.241,125.759],[-131.846,125.465],[-131.749,125.07],[-131.65,124.675],[-131.358,124.284],[-130.865,123.497],[-130.37,123.2],[-129.587,122.709],[-129.29,122.315],[-128.995,121.923],[-128.801,121.527],[-128.602,121.159],[-128.602,119.959],[-128.995,119.959],[-129.389,119.856],[-129.389,119.073],[-129.389,118.678],[-129.486,118.288],[-129.882,117.993],[-130.37,117.697],[-131.161,117.006],[-131.552,116.811],[-131.846,116.418],[-131.846,116.026],[-130.298,116.026],[-129.389,116.222],[-128.602,116.811],[-128.207,117.103],[-128.001,117.106],[-127.814,117.103],[-126.637,117.302],[-126.241,117.302],[-125.852,116.907],[-125.061,116.907],[-124.276,116.907],[-123.885,116.614],[-123.493,116.516],[-123.194,116.122],[-122.802,115.337],[-122.607,114.944],[-122.212,114.547],[-121.819,114.45],[-121.327,114.159],[-121.034,113.765],[-120.935,113.37],[-120.935,112.582],[-120.245,111.797],[-119.951,111.407],[-119.951,110.228],[-119.854,109.83],[-119.854,109.436],[-119.658,109.047],[-118.969,108.453],[-118.574,108.259],[-118.184,108.453],[-118.378,108.848],[-118.478,109.24],[-118.673,109.633],[-118.378,110.025],[-117.591,109.633],[-117.395,109.24],[-117.003,108.453],[-116.806,108.063],[-116.411,107.672],[-116.216,107.279],[-115.921,106.884],[-115.822,106.488],[-115.626,106.097],[-115.626,105.703],[-115.431,105.306],[-115.137,104.916],[-114.74,104.82],[-114.348,104.717],[-113.954,104.427],[-113.561,104.028],[-113.365,103.637],[-113.365,102.851],[-113.365,102.063],[-113.66,101.279],[-113.66,100.885],[-113.759,100.394],[-113.759,99.509],[-113.759,98.627],[-113.561,98.23],[-113.169,97.935],[-112.775,97.542],[-111.988,97.056],[-111.594,96.955],[-111.398,96.559],[-111.005,96.068],[-110.712,95.674],[-110.417,95.183],[-110.021,94.889],[-109.607,94.593],[-107.686,94.593],[-106.876,94.103],[-106.486,93.807],[-106.286,93.414],[-105.892,93.118],[-101.076,93.118],[-100.978,92.531],[-100.978,92.136],[-100.585,91.74],[-100.191,91.643],[-99.995,91.249],[-99.406,90.464],[-98.915,89.679],[-98.915,89.283],[-98.618,88.891],[-97.833,88.695],[-97.635,87.907],[-97.34,86.337],[-97.142,85.94],[-96.947,85.548],[-96.553,85.451],[-96.358,85.058],[-96.163,84.666],[-96.163,84.27],[-96.064,83.485],[-96.064,82.305],[-95.964,81.91],[-95.964,81.517],[-95.766,81.125],[-95.374,80.239],[-95.276,79.846],[-95.178,79.454],[-95.081,79.059],[-95.081,78.47],[-95.081,77.883],[-95.276,76.897],[-95.276,76.013],[-95.374,75.645],[-95.374,73.261],[-94.982,73.16],[-94.792,73.162],[-94.589,73.16],[-94.195,72.868],[-93.803,72.671],[-92.917,71.587],[-92.819,71.096],[-92.522,70.309],[-92.228,69.916],[-92.021,69.912],[-91.835,69.916],[-91.443,69.819],[-90.655,69.032],[-90.263,68.937],[-89.872,68.145],[-88.986,66.477],[-88.887,66.085],[-88.493,65.79],[-88.098,65.495],[-87.999,65.099],[-87.805,64.706],[-87.312,63.822],[-87.312,63.233],[-87.312,62.643],[-87.611,62.249],[-88.098,61.365],[-88.493,60.381],[-88.493,59.596],[-88.594,58.711],[-88.887,58.316],[-89.699,57.924],[-91.615,57.924],[-92.031,57.825],[-92.423,57.629],[-92.669,57.63],[-92.917,57.629],[-93.309,57.53],[-94.098,57.139],[-94.491,56.943],[-94.589,56.544],[-94.883,55.762],[-94.883,55.368],[-95.276,55.073],[-95.766,54.777],[-96.163,54.383],[-96.553,54.285],[-97.142,54.188],[-98.151,54.481],[-100.559,54.481],[-101.076,54.383],[-101.863,53.795],[-102.257,53.599],[-103.068,53.501],[-104.026,53.599],[-104.073,54.777],[-104.615,54.777],[-105.008,54.679],[-105.4,54.679],[-105.796,54.481],[-106.188,54.285],[-106.286,53.892],[-105.991,53.501],[-105.598,53.402],[-105.206,53.107],[-105.4,52.715],[-105.616,52.714],[-105.796,52.715],[-106.188,52.517],[-106.68,52.418],[-107.072,52.123],[-107.566,51.828],[-107.861,51.435],[-108.253,51.34],[-108.845,51.046],[-109.335,51.046],[-109.727,50.949],[-110.12,50.949],[-110.513,50.747],[-111.104,50.449],[-112.013,50.253],[-112.823,50.353],[-112.823,52.221],[-114.445,52.221],[-114.445,51.435],[-114.348,51.046],[-113.954,50.65],[-113.66,50.253],[-113.268,50.157],[-113.169,49.373],[-113.954,49.271],[-114.348,48.975],[-115.137,48.779],[-115.626,48.583],[-116.043,48.583],[-116.411,48.583],[-116.905,48.681],[-116.905,49.471],[-116.905,49.862],[-117.789,50.449],[-118.478,50.353],[-118.478,49.566],[-118.378,49.176],[-118.451,48.779],[-117.297,48.681],[-116.905,48.583],[-116.708,48.191],[-116.708,47.405],[-116.608,46.619],[-116.51,46.052],[-116.608,44.994],[-117.201,45.047],[-117.591,44.946],[-117.888,44.994],[-117.888,42.859],[-118.085,42.489],[-118.184,41.997],[-118.281,41.604],[-118.673,41.211],[-118.673,40.818],[-118.969,40.423],[-119.168,40.419],[-119.361,40.423],[-120.501,39.91],[-120.892,39.713],[-121.188,38.928],[-121.581,38.829],[-121.977,38.631],[-122.27,38.235],[-122.779,38.214],[-123.154,38.235],[-123.647,38.042],[-124.138,37.749],[-124.531,37.552],[-125.122,37.256],[-125.708,37.356],[-126.007,37.749],[-127.036,37.843],[-127.676,37.843],[-128.069,37.749],[-128.857,37.649],[-129.645,37.256],[-130.036,37.154],[-130.823,36.668],[-131.706,36.175],[-132.003,35.778],[-132.297,35.292],[-132.297,34.109],[-132.789,34.013],[-132.99,34.013],[-133.181,34.013],[-133.576,33.718],[-133.969,33.522],[-134.359,33.127],[-134.753,32.934],[-134.753,32.537],[-134.954,32.532],[-135.148,32.537],[-135.639,32.241],[-136.031,31.946],[-136.129,31.554],[-136.129,30.668],[-136.526,30.668],[-137.31,30.867],[-138.1,31.16],[-138.492,31.256],[-138.982,31.061],[-138.982,30.668],[-139.082,29.687],[-138.587,29.586],[-138.197,29.294],[-138.587,28.804],[-139.082,28.704],[-139.475,28.506],[-139.966,28.41],[-140.85,29.097],[-141.049,29.097],[-141.44,28.898],[-142.177,28.704],[-142.816,28.898],[-142.917,29.294],[-143.012,29.687],[-143.21,30.08],[-143.898,30.668],[-144.389,30.572],[-144.585,30.175],[-144.88,29.782],[-145.176,29.39],[-146.06,29.097],[-146.576,29.001],[-148.589,29.001],[-149.008,28.804],[-149.995,28.605],[-149.995,27.424],[-150.778,27.424],[-151.173,27.228],[-151.665,27.031],[-151.958,26.636],[-152.351,26.538],[-153.727,26.244],[-153.727,27.031],[-153.925,27.523],[-154.219,27.916],[-154.615,27.917],[-155.006,27.916],[-155.401,28.211],[-155.792,28.506],[-156.186,28.898],[-156.087,29.294],[-155.988,29.687],[-155.988,30.08],[-155.792,30.474],[-155.792,31.061],[-155.792,31.653],[-155.988,32.146],[-156.382,31.946],[-156.579,31.554],[-157.171,30.572],[-157.367,29.687],[-157.367,29.294],[-157.071,28.898],[-156.972,28.506],[-156.875,28.111],[-157.171,27.523],[-156.481,26.538],[-156.087,26.244],[-155.792,25.852],[-155.401,25.655],[-155.596,25.264]],\"c\":true},\"ix\":2},\"nm\":\"Path 95\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":95,\"ty\":\"sh\",\"ix\":96,\"ks\":{\"a\":0,\"k\":{\"i\":[[0.078,-0.171],[0,0],[0.075,-0.1],[0.318,-0.079],[0.147,0],[0.168,-0.073],[0.121,-0.17],[0.1,-0.069],[0.295,0],[0.12,0.023],[0.147,0.096],[0.273,-0.096],[0.101,-0.071],[0.101,-0.076],[0.146,-0.051],[0.122,0],[0.121,-0.024],[0.117,-0.074],[0.125,-0.147],[0,-0.172],[0,0],[0,0],[-0.023,0.172],[0,0],[0,0],[-0.045,0.098],[-0.123,0.072],[-0.171,0.051],[-0.342,0],[-0.468,-0.025],[0,0],[-0.096,-0.272],[-0.097,-0.097],[-0.15,-0.078],[-0.072,0.009],[-0.056,-0.013],[-0.176,-0.073],[-0.194,-0.075],[-0.079,0.02],[-0.057,-0.07],[-0.096,-0.126],[-0.096,-0.099],[-0.078,0.022],[-0.055,-0.022],[-0.168,-0.069],[0,0],[0,0],[0.077,0.12],[0.048,0.144],[0.024,0.12],[0.05,0.273],[-0.198,0],[-0.174,-0.022],[-0.126,-0.022],[-0.151,0],[0,0],[0,0],[0,0],[0.047,0.149],[0.069,0.125],[0.321,0]],\"o\":[[0,0],[-0.054,0.124],[-0.193,0.247],[-0.121,0.02],[-0.194,0.019],[-0.177,0.072],[-0.049,0.096],[-0.219,0.201],[-0.146,0],[-0.174,-0.025],[-0.296,0.026],[-0.122,0.051],[-0.095,0.073],[-0.123,0.098],[-0.124,0.048],[-0.122,0],[-0.147,0.048],[-0.152,0.098],[-0.096,0.125],[0,0],[0,0],[0.07,-0.175],[0,0],[0,0],[0,-0.124],[0.051,-0.096],[0.148,-0.077],[0.319,-0.101],[0.467,0],[0,0],[0,0.293],[0.051,0.148],[0.097,0.098],[0.065,0.025],[0.062,-0.009],[0.174,0.046],[0.195,0.102],[0.073,0.021],[0.104,-0.026],[0.1,0.121],[0.077,0.096],[0.055,0.054],[0.064,-0.017],[0.153,0.072],[0,0],[0,0],[0,-0.171],[-0.073,-0.126],[-0.05,-0.123],[-0.072,-0.276],[0.17,-0.046],[0.194,0],[0.123,0.024],[0.12,0.027],[0,0],[0,0],[0,0],[0,-0.168],[-0.05,-0.143],[-0.176,-0.243],[-0.219,0]],\"v\":[[214.121,30.842],[213.926,31.235],[213.822,31.631],[213.04,32.025],[212.646,31.927],[212.257,32.221],[211.86,32.611],[211.759,33.003],[210.975,33.204],[210.582,33.204],[210.483,32.611],[209.696,32.707],[209.303,32.809],[209.303,33.204],[208.91,33.399],[208.517,33.399],[208.124,33.399],[207.733,33.596],[207.434,33.987],[207.236,34.356],[207.236,36.348],[207.634,36.645],[207.926,36.251],[207.926,35.856],[207.926,35.463],[207.926,35.069],[208.321,34.973],[208.714,34.678],[209.574,34.577],[210.777,34.678],[210.777,35.463],[210.777,36.251],[210.975,36.645],[211.368,36.843],[211.579,36.848],[211.759,36.843],[212.157,37.134],[212.646,37.431],[212.879,37.413],[213.137,37.431],[213.43,37.825],[213.43,38.217],[213.639,38.229],[213.822,38.217],[214.217,38.507],[214.61,38.412],[214.61,37.649],[214.512,37.236],[214.121,37.038],[214.121,36.645],[213.926,35.856],[214.319,35.56],[214.811,35.756],[215.204,35.856],[215.598,35.856],[215.887,35.463],[215.499,34.678],[215.499,31.752],[215.4,31.331],[215.204,30.939],[214.512,30.448]],\"c\":true},\"ix\":2},\"nm\":\"Path 96\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":96,\"ty\":\"sh\",\"ix\":97,\"ks\":{\"a\":0,\"k\":{\"i\":[[0.049,-0.171],[0.026,-0.119],[0,-0.168],[0,-0.148],[0,-0.172],[0,-0.176],[0.024,-0.147],[0.049,-0.172],[0,-0.396],[-0.222,-0.517],[-0.343,-0.175],[-0.173,-0.052],[-0.322,0],[-0.439,0.028],[0,0.297],[0,0.169],[0,0.172],[0.024,0.295],[0,0],[0,0],[0.07,0.146],[0.097,0.148],[0.098,0.127],[0.1,0.124],[0.122,0.144],[0.028,0.169],[0.027,0.345],[0,0]],\"o\":[[-0.027,0.125],[-0.027,0.149],[0,0.148],[0,0.172],[0,0.171],[0,0.17],[-0.027,0.169],[-0.122,0.369],[0,0.566],[0.148,0.345],[0.173,0.072],[0.294,0.102],[0.442,0],[0,-0.291],[0,-0.173],[0,-0.173],[-0.023,-0.296],[0,0],[0,0],[-0.03,-0.17],[-0.076,-0.152],[-0.075,-0.123],[-0.101,-0.146],[-0.101,-0.122],[-0.12,-0.147],[-0.071,-0.318],[0,0],[-0.124,0.15]],\"v\":[[128.296,30.939],[128.197,31.331],[128.296,31.752],[128.197,32.121],[128.394,32.514],[128.296,32.934],[128.394,33.399],[128.098,33.792],[128.001,34.825],[128.197,36.251],[128.983,36.843],[129.376,37.134],[130.188,37.236],[131.293,37.134],[131.342,36.348],[131.293,35.883],[131.342,35.463],[131.149,34.678],[131.149,34.281],[131.149,33.888],[130.855,33.5],[130.558,33.104],[130.361,32.707],[129.967,32.415],[129.671,32.025],[129.376,31.631],[129.279,30.744],[128.691,30.644]],\"c\":true},\"ix\":2},\"nm\":\"Path 97\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":97,\"ty\":\"sh\",\"ix\":98,\"ks\":{\"a\":0,\"k\":{\"i\":[[0.074,-0.122],[0.147,-0.125],[0.174,-0.076],[0.272,-0.096],[0.143,-0.145],[0.097,-0.172],[0.073,-0.174],[0.051,-0.125],[0.072,-0.147],[0.121,-0.147],[0.102,-0.12],[0.169,-0.07],[0.147,-0.05],[0.442,-0.151],[0.145,-0.121],[0.124,-0.147],[0.096,-0.17],[0.097,-0.083],[0.125,-0.099],[0.147,-0.097],[0.119,-0.119],[0.15,-0.121],[0.175,-0.026],[0.126,0],[0.295,0],[0,0],[0.267,-0.022],[0.171,0],[0.221,0],[0.246,0.024],[0.219,0.295],[0,0],[0,0],[0.147,-0.024],[0.292,-0.515],[0.072,-0.175],[0.024,-0.124],[0,-0.345],[-0.074,-0.316],[-0.048,-0.099],[-0.146,-0.098],[-0.271,-0.199],[-0.099,-0.146],[-0.07,-0.149],[0,-0.22],[0,-0.071],[0,0],[0,-0.25],[-0.05,-0.196],[-0.048,-0.118],[-0.144,-0.126],[-0.146,-0.051],[-0.294,0],[-0.321,-0.073],[-0.099,-0.074],[-0.073,-0.098],[-0.32,-0.098],[-0.292,0],[-0.298,0.025],[-0.418,0],[-0.169,-0.098],[-0.176,-0.075],[-0.194,0],[-0.242,0],[-0.296,-0.296],[-0.199,-0.047],[-0.125,-0.024],[-0.248,0],[0,0],[-0.073,0],[0,0],[-0.099,0.072],[-0.123,0.073],[-0.119,0.097],[0,0.242],[0.056,0.201],[0.077,0.172],[0,0.196],[-0.072,0.148],[-0.1,0.123],[-0.072,0.126],[-0.048,0.198],[-0.097,0.446],[0,0],[0,0],[-0.493,0.022],[-0.172,0.053],[-0.121,0.172],[-0.072,0.148],[0.176,0.023],[0.079,-0.005],[0.086,0.012],[0.146,0],[0.296,0.022],[0,0.249],[0,0.17],[0,0],[0.052,0.197],[0.053,0.142],[0,0.317],[0,0],[-0.414,0.027],[-0.147,0],[-0.03,0.146],[-0.051,0.12],[-0.143,0.125],[-0.075,-0.017],[-0.058,0.024],[-0.174,0.075],[-0.296,0.099],[0.222,0.201],[0.299,0.025],[0.122,-0.007],[0.146,0.012],[0.169,0.046],[0.145,0.097],[0.074,0.12],[0.024,0.121],[0.047,0.124],[0.075,0.146],[0.245,0.196],[0.123,0.048],[0.123,0.024]],\"o\":[[-0.097,0.173],[-0.123,0.097],[-0.245,0.098],[-0.195,0.075],[-0.149,0.152],[-0.103,0.146],[-0.051,0.123],[-0.047,0.145],[-0.074,0.169],[-0.123,0.147],[-0.097,0.125],[-0.15,0.079],[-0.441,0.174],[-0.198,0.072],[-0.153,0.128],[-0.121,0.149],[-0.069,0.12],[-0.124,0.094],[-0.146,0.121],[-0.146,0.101],[-0.126,0.126],[-0.147,0.122],[-0.122,0.025],[-0.268,0.025],[0,0],[-0.273,-0.026],[-0.175,0.024],[-0.223,0.024],[-0.246,0],[-0.395,-0.052],[0,0],[0,0],[-0.149,0],[0,0.614],[-0.072,0.147],[-0.048,0.123],[-0.074,0.318],[0,0.342],[0.024,0.127],[0.099,0.151],[0.274,0.193],[0.147,0.1],[0.098,0.147],[0.099,0.17],[0,0.073],[0,0],[0,0.247],[0,0.219],[0.027,0.125],[0.074,0.154],[0.127,0.096],[0.273,0.097],[0.342,0],[0.121,0.023],[0.095,0.074],[0.2,0.248],[0.269,0.074],[0.296,0],[0.413,-0.05],[0.22,0],[0.174,0.101],[0.17,0.077],[0.244,0],[0.447,0],[0.144,0.146],[0.122,0.026],[0.219,0.048],[0,0],[0.071,0],[0,0],[0.073,-0.126],[0.119,-0.073],[0.124,-0.071],[0.177,-0.122],[0,-0.226],[-0.048,-0.166],[-0.071,-0.174],[0,-0.196],[0.075,-0.146],[0.096,-0.119],[0.101,-0.171],[0.15,-0.415],[0,0],[0,0],[0.492,0],[0.193,0],[0.197,-0.045],[0.076,-0.124],[-0.149,-0.096],[-0.085,-0.012],[-0.078,0.006],[-0.124,-0.024],[-0.295,0],[-0.076,-0.222],[0,-0.165],[0,0],[0,-0.222],[-0.025,-0.149],[-0.096,-0.296],[0,0],[0.414,0.028],[0.149,0],[0,-0.169],[0,-0.122],[0.071,-0.174],[0.053,-0.039],[0.066,0.014],[0.176,-0.074],[0.266,-0.143],[-0.097,-0.297],[-0.194,-0.167],[-0.148,-0.012],[-0.123,0.006],[-0.197,0],[-0.174,-0.05],[-0.124,-0.076],[-0.077,-0.126],[-0.025,-0.123],[-0.077,-0.174],[-0.171,-0.273],[-0.099,-0.073],[-0.121,-0.046],[-0.048,0.127]],\"v\":[[197.605,36.152],[197.212,36.548],[196.915,36.94],[196.129,37.134],[195.738,37.526],[195.345,37.921],[195.051,38.315],[194.949,38.708],[194.754,39.102],[194.361,39.495],[194.064,39.885],[193.772,40.278],[193.376,40.477],[192.1,40.675],[191.709,41.064],[191.311,41.359],[191.017,41.853],[190.92,42.252],[190.525,42.445],[190.132,42.738],[189.741,43.032],[189.444,43.426],[188.951,43.622],[188.559,43.723],[187.772,43.723],[187.772,45.784],[187.087,45.687],[186.693,45.883],[186.126,45.883],[185.512,45.883],[184.725,45.197],[184.332,45],[183.941,45],[183.545,45.097],[183.35,46.672],[182.956,46.968],[182.858,47.36],[182.858,48.245],[182.858,49.124],[182.956,49.52],[183.35,49.817],[184.137,50.209],[184.431,50.602],[184.822,50.898],[184.725,51.487],[184.822,51.682],[184.822,52.077],[184.629,52.67],[184.725,53.257],[184.822,53.647],[185.118,54.046],[185.512,54.242],[186.298,54.339],[187.184,54.339],[187.577,54.436],[187.673,54.829],[188.365,55.418],[189.149,55.418],[189.939,55.418],[190.92,54.926],[191.508,55.024],[191.902,55.32],[192.197,55.713],[192.785,55.418],[193.772,56.009],[194.165,56.401],[194.559,56.502],[195.171,56.502],[195.738,56.502],[195.934,56.401],[195.934,55.618],[196.033,55.224],[196.423,55.024],[196.816,54.829],[197.113,54.242],[197.012,53.647],[196.717,53.257],[196.524,52.768],[196.816,52.373],[197.212,52.077],[197.408,51.682],[197.702,51.192],[197.999,50.01],[199.176,50.01],[199.176,47.948],[200.457,47.948],[200.947,47.847],[201.34,47.457],[201.537,47.064],[201.24,46.672],[200.995,46.672],[200.751,46.672],[200.358,46.672],[199.569,46.574],[199.373,45.978],[199.569,45.588],[199.569,45],[199.569,44.409],[199.373,44.019],[199.079,43.257],[199.079,41.212],[200.158,41.263],[200.556,41.212],[200.556,40.773],[200.556,40.382],[200.848,39.984],[201.048,39.979],[201.24,39.984],[201.639,39.59],[202.421,39.297],[202.126,38.507],[201.34,38.315],[200.947,38.315],[200.556,38.315],[200.064,38.315],[199.668,38.021],[199.277,37.825],[199.277,37.431],[199.277,37.038],[198.881,36.743],[198.488,35.956],[198.095,35.856],[197.702,35.756]],\"c\":true},\"ix\":2},\"nm\":\"Path 98\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":98,\"ty\":\"sh\",\"ix\":99,\"ks\":{\"a\":0,\"k\":{\"i\":[[0.174,-0.023],[-0.025,-0.121],[-0.15,-0.268],[-0.125,-0.144],[-0.153,-0.174],[-0.146,-0.143],[-0.169,-0.071],[-0.272,-0.121],[-0.123,-0.146],[-0.123,-0.148],[-0.073,-0.172],[-0.099,-0.295],[-0.099,-0.15],[-0.15,-0.05],[-0.12,-0.027],[-0.067,0.007],[-0.063,-0.014],[-0.125,-0.053],[-0.148,-0.294],[-0.05,-0.296],[-0.027,-0.294],[0,0],[-0.074,-0.15],[-0.29,-0.222],[-0.273,-0.248],[-0.123,-0.124],[-0.249,-0.296],[-0.174,-0.345],[-0.097,-0.318],[-0.071,-0.321],[-0.051,-0.149],[-0.148,-0.269],[-0.126,-0.148],[-0.149,-0.172],[-0.123,-0.145],[-0.121,-0.122],[-0.315,-0.269],[-0.245,-0.298],[-0.127,-0.177],[-0.075,-0.126],[-0.297,-0.226],[-0.246,-0.272],[-0.099,-0.147],[-0.05,-0.124],[-0.149,0.026],[-0.122,0],[-0.344,0],[-0.272,0.049],[-0.101,0.176],[-0.028,0.175],[0,0],[-0.052,0.465],[0,0.121],[-0.027,0.292],[0,0],[-0.073,0.147],[-0.242,0],[-0.221,-0.025],[-0.172,0],[-0.17,0.048],[0.024,0.123],[0.126,0.168],[0.196,0.078],[0.064,-0.007],[0.066,0.016],[0.147,0.046],[-0.049,0.125],[-0.144,0.148],[0.125,0.075],[0.147,0.053],[0.119,0],[0.195,0],[0.173,-0.045],[0.098,-0.07],[0.047,-0.121],[0.022,-0.125],[0,0],[0,0.298],[-0.025,0.295],[0.118,0],[0,0],[0.121,-0.008],[0.179,0.027],[0.166,0.074],[0.175,0.072],[0.121,0.151],[0,0.172],[0,0],[0.396,0.097],[0.068,-0.007],[0.062,0.012],[0.121,0.145],[0.075,0.169],[0.052,0.124],[0.024,0.147],[0.024,0.126],[0,0.126],[0.072,0.169],[0.171,0],[0,0],[0.273,0.073],[0.168,0.121],[0.124,0.169],[0.073,0.1],[0.095,0.074],[0.128,0.122],[0.124,0.126],[0.122,0.101],[0.175,0.119],[0.147,0.149],[0.122,0.079],[0.271,0.127],[0.072,0.096],[0.048,0.127],[0.025,0.122],[0.094,-0.001],[0.043,0.032],[0.145,0.197],[0.144,0.369],[0.467,0.051],[0.122,0.024],[0.174,0.075],[0.121,0.052],[0.363,0.095],[0.172,0]],\"o\":[[0.025,0.147],[0.096,0.322],[0.099,0.175],[0.145,0.174],[0.116,0.148],[0.147,0.148],[0.273,0.149],[0.196,0.095],[0.125,0.147],[0.127,0.146],[0.151,0.271],[0.048,0.173],[0.071,0.121],[0.123,0.048],[0.062,0.013],[0.068,-0.007],[0.123,0.026],[0.291,0.147],[0.148,0.27],[0.023,0.272],[0,0],[0.023,0.175],[0.197,0.317],[0.296,0.221],[0.122,0.094],[0.271,0.273],[0.244,0.29],[0.149,0.294],[0.098,0.322],[0.027,0.144],[0.124,0.293],[0.101,0.17],[0.147,0.172],[0.123,0.145],[0.101,0.127],[0.294,0.295],[0.295,0.247],[0.122,0.15],[0.071,0.123],[0.219,0.297],[0.295,0.217],[0.098,0.128],[0.053,0.098],[0.148,-0.048],[0.118,-0.019],[0.32,-0.048],[0.294,0],[0.195,-0.048],[0.07,-0.145],[0,0],[0.048,-0.464],[0,-0.148],[0.024,-0.272],[0,0],[0,-0.17],[0.101,-0.199],[0.224,0],[0.174,0],[0.194,0],[-0.023,-0.123],[-0.05,-0.197],[-0.122,-0.169],[-0.059,-0.01],[-0.072,0.006],[-0.144,-0.045],[0.027,-0.124],[0.097,-0.192],[-0.096,-0.124],[-0.121,-0.073],[-0.122,-0.046],[-0.173,-0.021],[-0.202,0],[-0.123,0.028],[-0.096,0.08],[-0.05,0.124],[0,0],[-0.025,-0.297],[0,-0.295],[-0.126,-0.076],[0,0],[-0.153,-0.009],[-0.158,0.01],[-0.173,-0.022],[-0.172,-0.073],[-0.173,-0.076],[-0.097,-0.119],[0,0],[-0.418,0],[-0.059,-0.011],[-0.068,0.005],[-0.197,-0.053],[-0.098,-0.126],[-0.048,-0.124],[-0.048,-0.147],[-0.023,-0.121],[-0.023,-0.123],[-0.023,-0.173],[-0.147,0.044],[0,0],[-0.296,0],[-0.194,-0.052],[-0.176,-0.126],[-0.069,-0.099],[-0.073,-0.101],[-0.149,-0.122],[-0.12,-0.121],[-0.122,-0.119],[-0.15,-0.125],[-0.173,-0.125],[-0.1,-0.099],[-0.244,-0.166],[-0.121,-0.047],[-0.073,-0.097],[-0.047,-0.121],[-0.015,-0.067],[-0.074,0],[-0.171,-0.151],[-0.221,-0.295],[-0.468,0],[-0.148,0],[-0.174,-0.048],[-0.122,-0.05],[-0.344,-0.169],[-0.15,-0.023],[-0.17,0]],\"v\":[[156.904,38.412],[156.904,38.804],[157.296,39.59],[157.691,39.984],[158.087,40.477],[158.478,40.868],[158.868,41.263],[159.658,41.557],[160.05,41.95],[160.344,42.346],[160.736,42.738],[161.037,43.523],[161.23,44.019],[161.426,44.409],[161.818,44.508],[162.014,44.508],[162.214,44.508],[162.608,44.606],[163.196,45.294],[163.493,46.08],[163.493,46.868],[163.493,47.261],[163.787,47.653],[164.569,48.342],[165.36,49.03],[165.753,49.323],[166.342,50.113],[167.03,50.898],[167.421,51.682],[167.52,52.572],[167.719,52.964],[168.111,53.75],[168.508,54.142],[168.897,54.634],[169.29,55.024],[169.585,55.418],[170.469,56.107],[171.158,56.895],[171.553,57.29],[171.749,57.683],[172.537,58.372],[173.322,59.055],[173.712,59.352],[173.816,59.746],[174.209,59.548],[174.6,59.45],[175.485,59.45],[176.271,59.45],[176.668,59.055],[176.96,58.663],[176.96,58.269],[176.96,57.092],[177.056,56.699],[177.158,55.913],[177.158,55.517],[177.35,55.125],[177.842,54.731],[178.434,54.829],[178.827,55.024],[179.22,54.731],[179.22,54.339],[178.925,53.848],[178.533,53.451],[178.345,53.454],[178.137,53.451],[177.745,53.257],[177.745,52.862],[178.137,52.469],[177.941,52.077],[177.548,51.878],[177.158,51.78],[176.668,51.682],[176.171,51.78],[175.779,51.878],[175.683,52.273],[175.584,52.67],[174.503,52.67],[174.405,51.878],[174.503,51.095],[174.209,50.799],[173.816,50.799],[173.413,50.806],[172.93,50.799],[172.537,50.506],[172.142,50.209],[171.65,50.01],[171.553,49.547],[171.553,47.556],[170.469,47.556],[170.275,47.557],[170.077,47.556],[169.684,47.163],[169.29,46.868],[169.191,46.472],[168.996,46.08],[168.996,45.687],[168.996,45.294],[168.702,44.904],[168.306,45.097],[167.915,45.097],[167.126,45],[166.639,44.707],[166.241,44.312],[166.145,43.919],[165.753,43.818],[165.454,43.426],[165.162,43.032],[164.771,42.738],[164.376,42.346],[163.887,42.049],[163.688,41.652],[162.899,41.359],[162.507,41.263],[162.408,40.868],[162.408,40.477],[162.207,40.413],[162.016,40.382],[161.624,39.885],[161.132,39],[159.658,39.396],[159.264,39.396],[158.868,39.102],[158.478,39],[157.691,38.412],[157.296,38.217]],\"c\":true},\"ix\":2},\"nm\":\"Path 99\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":99,\"ty\":\"sh\",\"ix\":100,\"ks\":{\"a\":0,\"k\":{\"i\":[[0,-0.169],[-0.025,-0.15],[-0.049,-0.124],[-0.098,-0.075],[-0.193,0.008],[-0.096,-0.009],[0,0],[0,0.344],[0.052,0.124],[0,0]],\"o\":[[0,0.171],[0.023,0.121],[0.048,0.125],[0.132,0.115],[0.092,-0.005],[0,0],[-0.272,-0.196],[0,-0.144],[0,0],[0,0.172]],\"v\":[[158.378,43.647],[158.576,44.019],[158.673,44.409],[158.772,44.804],[159.275,44.903],[159.559,44.904],[159.658,44.508],[158.969,43.892],[158.868,43.523],[158.478,43.228]],\"c\":true},\"ix\":2},\"nm\":\"Path 100\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":100,\"ty\":\"sh\",\"ix\":101,\"ks\":{\"a\":0,\"k\":{\"i\":[[0.271,-0.27],[0.167,-0.1],[0.176,-0.072],[0.066,0.014],[0.052,-0.038],[0.027,-0.125],[0,0],[0,-0.392],[0,-0.149],[0.075,-0.275],[0.076,-0.175],[0,-0.289],[0,-0.174],[0,-0.293],[-0.069,0.007],[-0.082,-0.01],[-0.175,0],[-0.291,0.073],[0,0.365],[0.026,0.442],[-0.071,0],[-0.543,-0.027],[-0.15,-0.023],[0,0.275],[0.15,0.219],[0,0.172],[0,0.147],[0,0.199],[0.148,0],[0.292,-0.022],[0,0],[-0.054,0.15],[-0.071,0.169],[0,0.147],[0,0.194]],\"o\":[[-0.146,0.144],[-0.15,0.069],[-0.057,0.024],[-0.074,-0.016],[-0.099,0.072],[0,0],[0,0.392],[0,0.148],[0,0.295],[-0.05,0.171],[-0.1,0.269],[0,0.177],[0,0.296],[0.088,0.014],[0.066,-0.005],[0.174,0.026],[0.297,0],[0.026,-0.371],[0,-0.445],[0.077,0],[0.543,-0.027],[0.147,0],[0.025,-0.271],[0,-0.27],[-0.072,-0.127],[0,-0.149],[-0.024,-0.2],[-0.149,-0.022],[-0.294,0],[0,0],[0,-0.172],[0.072,-0.173],[0.049,-0.126],[0,-0.196],[-0.22,0.293]],\"v\":[[218.741,44.804],[218.35,45.197],[217.952,45.492],[217.761,45.487],[217.561,45.492],[217.462,45.883],[217.462,46.08],[217.66,47.064],[217.561,47.457],[217.561,48.245],[217.266,48.639],[217.021,49.395],[217.069,49.817],[217.021,50.602],[217.248,50.603],[217.462,50.602],[217.858,50.799],[218.642,50.602],[218.741,49.671],[218.642,48.538],[218.837,48.443],[220.217,48.443],[220.61,48.538],[220.709,47.874],[220.41,47.261],[220.017,47.064],[220.116,46.672],[220.116,46.179],[219.723,46.08],[218.939,46.179],[218.939,45.614],[219.037,45.197],[219.43,44.904],[219.527,44.508],[219.43,44.019]],\"c\":true},\"ix\":2},\"nm\":\"Path 101\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":101,\"ty\":\"sh\",\"ix\":102,\"ks\":{\"a\":0,\"k\":{\"i\":[[0.222,-0.089],[0.07,-0.125],[0,0],[0.394,-0.149],[0.297,-0.027],[0.395,-0.217],[0.099,-0.149],[0,-0.244],[-0.024,-0.222],[-0.444,0.22],[-0.124,0.073],[-0.149,0.096],[-0.153,0.074],[-0.147,0.05],[-0.077,-0.01],[-0.052,0.009],[-0.148,0.143],[0,0],[0,0],[-0.148,-0.049],[-0.145,-0.045],[-0.273,0],[-0.195,0.066],[-0.146,0.074],[-0.169,0.073],[-0.069,-0.013],[-0.063,0.024],[0,0],[-0.122,0.144],[-0.075,0.369],[0.122,0]],\"o\":[[-0.125,0.048],[0,0],[-0.419,0],[-0.269,0.099],[-0.47,0.021],[-0.145,0.075],[-0.121,0.196],[0,0.222],[0.467,-0.222],[0.124,-0.052],[0.148,-0.074],[0.121,-0.08],[0.149,-0.074],[0.068,-0.026],[0.058,0.008],[0.196,-0.074],[0,0],[0,0],[0.173,0],[0.15,0.051],[0.223,0.101],[0.218,0],[0.147,-0.052],[0.146,-0.074],[0.061,-0.026],[0.067,0.013],[0,0],[0.172,-0.074],[0.222,-0.273],[-0.157,0],[-0.184,0]],\"v\":[[212.352,46.179],[212.257,46.574],[205.693,46.574],[204.879,47.261],[204.094,47.36],[202.91,47.653],[202.616,48.049],[202.421,48.66],[202.519,49.226],[203.701,48.639],[204.094,48.538],[204.391,48.149],[204.783,47.948],[205.176,47.752],[205.399,47.746],[205.566,47.752],[205.96,47.36],[206.746,47.556],[209.18,47.556],[209.598,47.653],[209.99,47.847],[210.582,48.245],[211.17,48.149],[211.566,47.948],[211.86,47.556],[212.059,47.555],[212.257,47.556],[212.646,47.36],[212.939,46.968],[213.334,46.08],[212.925,46.072]],\"c\":true},\"ix\":2},\"nm\":\"Path 102\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":102,\"ty\":\"sh\",\"ix\":103,\"ks\":{\"a\":0,\"k\":{\"i\":[[0.026,-0.173],[-0.005,-0.058],[-0.266,-0.223],[-0.198,-0.148],[-0.096,-0.149],[-0.096,-0.223],[0,0.072],[0,0],[0.148,0.242],[0.102,0.123],[0.319,0.199],[0.124,0.048]],\"o\":[[-0.01,0.07],[0.161,0.286],[0.17,0.143],[0.145,0.095],[0.145,0.196],[0,-0.052],[0,0],[0,-0.317],[-0.101,-0.149],[-0.245,-0.273],[-0.127,-0.076],[-0.049,0.147]],\"v\":[[160.54,46.472],[160.54,46.659],[161.132,47.36],[161.624,47.752],[162.016,48.049],[162.309,48.639],[162.408,48.443],[162.408,48.069],[162.214,47.261],[161.818,46.968],[161.132,46.179],[160.736,46.08]],\"c\":true},\"ix\":2},\"nm\":\"Path 103\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":103,\"ty\":\"sh\",\"ix\":104,\"ks\":{\"a\":0,\"k\":{\"i\":[[0,0],[0.007,0.066],[0.033,0.067]],\"o\":[[0.014,-0.078],[-0.032,-0.058],[0,0]],\"v\":[[160.54,46.868],[160.54,46.659],[160.441,46.472]],\"c\":true},\"ix\":2},\"nm\":\"Path 104\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":104,\"ty\":\"sh\",\"ix\":105,\"ks\":{\"a\":0,\"k\":{\"i\":[[0.034,-0.026],[0.073,-0.128],[0.148,-0.295],[-0.294,-0.123],[-0.152,0.011],[-0.066,-0.011],[0,0.444],[0.198,0.097],[0.169,0],[0,0],[0.085,0]],\"o\":[[-0.097,0.071],[-0.171,0.292],[0.267,0.169],[0.068,0.027],[0.126,-0.008],[0.319,-0.324],[0,-0.248],[-0.146,-0.078],[0,0],[-0.1,0],[-0.042,0]],\"v\":[[223.066,48.049],[222.969,48.443],[222.579,49.226],[223.36,49.719],[223.736,49.725],[224.051,49.719],[224.639,48.735],[224.245,48.245],[223.855,48.049],[223.464,48.049],[223.181,48.014]],\"c\":true},\"ix\":2},\"nm\":\"Path 105\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":105,\"ty\":\"sh\",\"ix\":106,\"ks\":{\"a\":0,\"k\":{\"i\":[[0.292,-0.147],[0.172,-0.047],[0.297,0],[0.298,-0.025],[0.151,-0.1],[0.122,-0.146],[0.002,-0.002],[0,0],[0.071,0.009],[0.091,-0.026],[0.295,-0.145],[0,0],[-0.122,-0.045],[-0.145,-0.049],[-0.145,-0.023],[-0.119,0],[-0.067,0.01],[-0.098,-0.04],[-0.146,-0.1],[-0.05,-0.122],[-0.201,-0.047],[-0.148,0],[0,0],[-0.217,0],[-0.096,0],[-0.149,0],[-0.149,0],[-0.244,0],[-0.223,0.019],[-0.17,0.076],[0.073,0.099],[0.07,0.148],[0.021,0.466],[0.07,0.176],[0.147,0.12],[0.126,0.049],[0.344,0]],\"o\":[[-0.172,0.07],[-0.269,0.078],[-0.296,0],[-0.199,0],[-0.145,0.094],[-0.002,0.003],[0,0],[-0.091,0.014],[-0.082,-0.011],[-0.32,0.103],[0,0],[0.123,0.023],[0.15,0.054],[0.146,0.049],[0.126,0.026],[0.073,0.012],[0.093,-0.015],[0.175,0.077],[0.1,0.048],[0.072,0.172],[0.123,0.027],[0,0],[0.221,0],[0.1,0],[0.15,0],[0.146,0],[0.246,0.019],[0.246,0],[0.17,-0.027],[-0.072,-0.124],[-0.095,-0.119],[-0.198,-0.415],[0,-0.195],[-0.077,-0.173],[-0.097,-0.074],[-0.294,-0.147],[-0.347,0]],\"v\":[[227.295,49.719],[226.902,50.01],[226.115,50.113],[225.329,50.113],[224.832,50.309],[224.443,50.602],[224.436,50.61],[224.54,50.403],[224.303,50.399],[224.051,50.403],[223.264,50.799],[223.36,51.192],[223.756,51.288],[224.15,51.487],[224.54,51.682],[224.931,51.682],[225.142,51.672],[225.425,51.682],[225.819,51.978],[225.918,52.373],[226.214,52.862],[226.605,52.862],[226.999,52.862],[227.587,52.716],[227.783,52.572],[228.181,52.67],[228.574,52.768],[229.21,52.768],[229.853,52.768],[230.241,52.469],[230.146,52.077],[229.754,51.878],[229.754,50.701],[229.754,50.209],[229.456,49.817],[229.061,49.719],[228.181,49.52]],\"c\":true},\"ix\":2},\"nm\":\"Path 106\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":106,\"ty\":\"sh\",\"ix\":107,\"ks\":{\"a\":0,\"k\":{\"i\":[[0,0],[0.022,-0.037]],\"o\":[[-0.017,0.04],[0,0]],\"v\":[[224.301,50.881],[224.245,50.996]],\"c\":true},\"ix\":2},\"nm\":\"Path 107\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":107,\"ty\":\"sh\",\"ix\":108,\"ks\":{\"a\":0,\"k\":{\"i\":[[0.04,-0.008],[0.147,-0.074],[0.125,-0.121],[0.517,-0.073],[0.271,0.051],[0.118,0.027],[0.293,0.096],[0.124,0],[0,0],[0.126,-0.171],[0.122,-0.32],[0.022,-0.199],[0,-0.173],[0.025,-0.121],[0.072,-0.124],[0.15,-0.101],[0.07,0.014],[0.051,-0.037],[0.095,-0.143],[0,-0.247],[-0.222,-0.147],[-0.124,-0.024],[-0.144,-0.025],[-0.295,0],[0,-0.199],[0.101,-0.294],[0.025,-0.146],[0,-0.175],[-0.024,-0.15],[-0.05,-0.174],[-0.047,-0.177],[-0.049,-0.147],[-0.1,0.128],[-0.047,0.17],[0,0.343],[-0.024,0.293],[0,0.172],[0,0],[0,0],[0,0],[0,0],[0,0],[-0.122,0],[-0.122,-0.022],[-0.145,-0.024],[-0.118,-0.025],[-0.147,0],[0,0],[0.028,-0.147],[0,-0.126],[0,0],[-0.025,-0.15],[-0.124,-0.097],[-0.216,0],[0,0],[0,0.15],[0,0],[0.125,0.366],[0.124,0.097],[0.148,0.145],[0.072,0.149],[0,0.244],[-0.023,0.248],[0,0],[0.051,0.12],[0.122,0.145],[0.124,0.127],[0.149,0.097],[0.081,-0.004],[0.078,0.068],[0.078,0.094],[0,0],[-0.466,0.123],[-0.176,0.052],[-0.124,0.026],[-0.182,-0.018],[-0.225,0.039],[-0.066,-0.006],[-0.063,0.014],[0,0.222],[0.051,0.15],[0.122,0.103],[0.119,0.072],[0.145,0.072],[0.171,0.023],[0,0],[0.084,0]],\"o\":[[-0.149,0.051],[-0.17,0.074],[-0.368,0.371],[-0.268,0.051],[-0.125,-0.025],[-0.3,-0.072],[-0.099,-0.025],[0,0],[-0.219,0.024],[-0.196,0.271],[-0.074,0.195],[-0.027,0.15],[0,0.148],[-0.026,0.125],[-0.101,0.149],[-0.047,0.025],[-0.078,-0.017],[-0.146,0.095],[-0.122,0.174],[0,0.295],[0.098,0.048],[0.149,0.048],[0.269,0.05],[0,0.196],[0,0.317],[-0.048,0.148],[-0.024,0.148],[0,0.172],[0.025,0.174],[0.048,0.17],[0.052,0.146],[0.147,-0.098],[0.097,-0.12],[0.099,-0.322],[0,-0.292],[0,-0.174],[0,0],[0,0],[0,0],[0,0],[0,0],[0.145,0.027],[0.122,0],[0.147,0.027],[0.123,0.028],[0.124,0.026],[0,0],[0,0.174],[-0.022,0.123],[0,0],[0,0.171],[0.023,0.167],[0.146,0.123],[0,0],[0.025,-0.145],[0,0],[0,-0.395],[-0.05,-0.148],[-0.147,-0.121],[-0.123,-0.123],[-0.097,-0.196],[0,-0.25],[0,0],[0,-0.15],[-0.077,-0.174],[-0.127,-0.143],[-0.122,-0.123],[-0.07,-0.046],[-0.09,0.003],[-0.099,-0.074],[0,0],[0.49,0],[0.169,-0.022],[0.122,-0.021],[0.218,-0.035],[0.186,0.019],[0.06,-0.01],[0.068,0.006],[0.198,-0.048],[0,-0.173],[-0.072,-0.171],[-0.121,-0.094],[-0.15,-0.096],[-0.149,-0.079],[0,0],[-0.098,0],[-0.042,0]],\"v\":[[207.829,49.62],[207.434,49.817],[207.139,50.209],[205.96,50.996],[205.176,50.898],[204.783,50.799],[203.993,50.506],[203.701,50.309],[203.306,50.309],[202.91,50.701],[202.421,51.487],[202.421,52.077],[202.227,52.469],[202.227,52.862],[202.227,53.257],[201.832,53.552],[201.646,53.548],[201.438,53.552],[201.145,53.944],[200.947,54.534],[201.34,55.224],[201.733,55.32],[202.126,55.517],[202.91,55.517],[203.011,56.037],[202.715,56.796],[202.519,57.191],[202.519,57.633],[202.519,58.075],[202.816,58.469],[202.91,58.96],[203.11,59.352],[203.504,59.055],[203.895,58.765],[203.993,57.879],[203.993,57.092],[204.189,56.672],[204.189,54.046],[205.371,54.046],[205.371,54.926],[205.176,55.32],[205.274,55.713],[205.668,55.811],[206.061,55.811],[206.452,56.009],[206.844,56.107],[207.236,56.107],[207.236,56.918],[207.042,57.29],[206.944,57.683],[206.944,58.124],[206.944,58.568],[207.337,58.862],[207.85,59.055],[209.107,59.055],[209.207,58.663],[209.207,58.1],[209.107,57.092],[208.714,56.895],[208.321,56.502],[207.926,56.205],[207.733,55.618],[207.926,55.024],[207.926,54.634],[207.926,54.242],[207.535,53.944],[207.236,53.552],[206.844,53.257],[206.613,53.218],[206.353,53.157],[206.254,52.768],[206.353,52.077],[207.634,52.077],[208.025,51.78],[208.418,51.682],[209.001,51.684],[209.598,51.682],[209.79,51.683],[209.99,51.682],[210.287,51.192],[210.089,50.799],[209.795,50.403],[209.404,50.209],[209.009,49.917],[208.616,49.62],[208.223,49.62],[207.952,49.61]],\"c\":true},\"ix\":2},\"nm\":\"Path 108\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":108,\"ty\":\"sh\",\"ix\":109,\"ks\":{\"a\":0,\"k\":{\"i\":[[0,0],[0,-0.171],[-0.074,-0.27],[-0.172,-0.27],[-0.242,-0.295],[-0.273,-0.265],[-0.147,-0.097],[-0.098,-0.097],[-0.102,-0.149],[-0.076,-0.099],[-0.096,-0.126],[-0.089,0.02],[-0.05,-0.011],[0,0],[0.121,0.072],[0.195,0.05],[0.124,0.028],[0.087,-0.011],[0.078,0.012],[0.099,0.169],[0.048,0.169],[0.031,0.12],[0,0.292],[0.149,0.224],[0.294,0.124]],\"o\":[[0.046,0.147],[0.023,0.296],[0.072,0.321],[0.199,0.318],[0.248,0.294],[0.122,0.124],[0.099,0.048],[0.126,0.126],[0.05,0.097],[0.097,0.144],[0.042,0.057],[0.062,-0.014],[0,0],[-0.145,-0.076],[-0.17,-0.123],[-0.125,-0.022],[-0.093,-0.027],[-0.073,0.009],[-0.194,-0.051],[-0.098,-0.149],[-0.025,-0.124],[-0.047,-0.272],[0,-0.295],[-0.194,-0.269],[0,0]],\"v\":[[163.59,50.602],[163.59,50.799],[163.59,51.583],[164.081,52.373],[164.668,53.157],[165.36,53.944],[165.654,54.339],[166.046,54.436],[166.342,54.829],[166.441,55.224],[166.735,55.618],[166.952,55.635],[167.126,55.618],[167.126,54.046],[166.735,53.848],[166.342,53.451],[165.947,53.354],[165.68,53.348],[165.454,53.354],[165.063,52.964],[164.771,52.572],[164.668,52.176],[164.668,51.39],[164.569,50.602],[163.787,50.209]],\"c\":true},\"ix\":2},\"nm\":\"Path 109\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":109,\"ty\":\"sh\",\"ix\":110,\"ks\":{\"a\":0,\"k\":{\"i\":[[0.223,-0.022],[-0.023,-0.148],[0,-0.245],[0.023,-0.415],[0,0],[0,0],[0,0],[0,0.295],[0,0.197],[0,0.126],[0.23,0]],\"o\":[[0.023,0.174],[0.052,0.222],[0,0.422],[0,0],[0,0],[0,0],[0.022,-0.295],[0,-0.197],[0,-0.121],[-0.294,-0.016],[-0.177,0]],\"v\":[[232.801,50.259],[232.897,50.701],[233.095,51.313],[232.998,52.373],[234.96,52.373],[234.96,51.878],[234.129,51.878],[234.178,51.095],[234.077,50.602],[234.129,50.259],[233.384,50.229]],\"c\":true},\"ix\":2},\"nm\":\"Path 110\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":110,\"ty\":\"sh\",\"ix\":111,\"ks\":{\"a\":0,\"k\":{\"i\":[[0,0],[0.121,-0.021],[0.071,0.006],[0.06,-0.009],[0.098,-0.099],[-0.177,-0.021],[0,0],[0,0],[-0.319,0],[-0.291,0.052],[0.044,-0.014],[0,0.041],[0,0.324],[0.226,0]],\"o\":[[-0.148,0],[-0.065,0.016],[-0.065,-0.005],[-0.145,0.028],[0.173,0.075],[0,0],[0,0],[0.318,0.024],[0.296,0],[0,-0.022],[-0.052,0.017],[-0.073,-0.317],[-0.217,0],[0,0]],\"v\":[[212.646,51.583],[212.452,51.78],[212.243,51.782],[212.053,51.78],[211.86,52.176],[212.257,52.469],[212.646,52.469],[213.04,52.469],[213.848,52.572],[214.61,52.469],[214.524,52.476],[214.415,52.469],[214.415,51.634],[213.822,51.583]],\"c\":true},\"ix\":2},\"nm\":\"Path 111\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":111,\"ty\":\"sh\",\"ix\":112,\"ks\":{\"a\":0,\"k\":{\"i\":[[0.172,-0.099],[0.151,-0.124],[0.369,0],[0.296,-0.022],[0.148,-0.074],[0.049,-0.194],[0.097,-0.272],[0.096,-0.124],[0.147,-0.05],[0.297,0],[0.32,0.05],[0.223,0.195],[0.099,0.145],[0.075,0.096],[0.322,0],[0.124,-0.023],[0.171,-0.077],[0.17,0],[0,0],[0,0],[-0.12,-0.122],[-0.071,-0.147],[0,-0.126],[0,-0.294],[0,0],[-0.098,0.05],[-0.069,-0.012],[-0.063,0.026],[-0.194,0],[-0.172,0],[-0.295,-0.022],[-0.123,-0.022],[-0.295,-0.146],[-0.294,-0.199],[-0.122,-0.074],[-0.169,-0.077],[-0.076,0.01],[-0.055,-0.009],[-0.173,-0.028],[-0.146,0],[-0.176,0.017],[-0.262,-0.056],[-0.145,-0.05],[-0.271,-0.145],[-0.12,-0.076],[-0.148,-0.149],[-0.198,-0.32],[-0.072,-0.125],[0,-0.541],[0,-0.144],[0.049,-0.168],[0.298,-0.146],[0.075,0.011],[0.056,-0.01],[0.121,-0.027],[0.151,-0.101],[0.079,-0.195],[0,-0.169],[0,-0.148],[-0.396,0],[-0.318,0.218],[-0.124,0.103],[-0.047,0.098],[-0.244,0],[-0.365,-0.248],[-0.144,-0.128],[-0.146,-0.126],[-0.194,-0.097],[-0.12,-0.051],[-0.147,-0.052],[-0.3,-0.149],[-0.171,-0.075],[-0.172,-0.028],[-0.272,-0.026],[-0.32,0],[-0.296,0.075],[-0.148,0.098],[-0.073,0.123],[-0.023,0.124],[0,0.291],[-0.194,0.048],[-0.27,0.148],[-0.12,0.145],[-0.445,0],[0,0],[-0.147,-0.051],[-0.123,-0.048],[-0.147,-0.05],[-0.295,-0.169],[-0.121,-0.098],[-0.171,-0.269],[-0.07,-0.121],[-0.271,-0.272],[-0.099,-0.147],[-0.174,-0.297],[-0.099,-0.173],[-0.171,-0.048],[-0.25,0],[-0.565,0.043],[-0.295,0],[-0.347,-0.347],[-0.343,-0.125],[-0.246,0],[-0.222,0.021],[0,0],[0.244,0.122],[0.123,0.047],[0.101,0.076],[0.097,0.125],[0.124,0.147],[0.198,0.027],[0.125,0.027],[0.067,-0.006],[0.062,0.014],[0.172,0.047],[0.122,0.026],[0.149,0],[0.296,0],[0,0],[0.665,-0.048],[0,0],[-0.588,-0.051],[0,0],[0.128,0.096],[0.122,0.097],[0.123,0.098],[0,0],[0.126,0.147],[0.074,0.15],[0.095,0.272],[0.071,0.101],[0.124,0.098],[0.146,0.101],[0.147,0.121],[0.12,0.121],[0.395,0.169],[0.148,0.027],[0.343,0],[0.271,0.247],[0.147,0.075],[0.074,-0.009],[0.055,0.013],[0.17,0.027],[0.269,0.121],[0.297,0.118],[0.149,0.024],[0.149,0],[0.197,-0.007],[0.246,0.012],[0.194,0],[0.12,-0.004],[0.288,0.122],[0.272,0.146],[0.297,0.117],[0.122,0.02],[0.169,0.075],[0.292,0]],\"o\":[[-0.146,0.075],[-0.27,0.222],[-0.292,0],[-0.171,0],[-0.197,0.096],[-0.048,0.274],[-0.048,0.145],[-0.099,0.124],[-0.271,0.124],[-0.342,0],[-0.27,-0.025],[-0.147,-0.124],[-0.072,-0.124],[-0.196,-0.243],[-0.148,0],[-0.173,0.053],[-0.149,0.047],[0,0],[0,0],[0.152,0.073],[0.124,0.126],[0.074,0.123],[0.027,0.271],[0,0],[0.047,-0.12],[0.048,-0.023],[0.071,0.012],[0.171,-0.072],[0.169,0],[0.295,0],[0.149,0],[0.322,0.078],[0.345,0.174],[0.123,0.072],[0.149,0.1],[0.071,0.028],[0.06,-0.008],[0.172,0.028],[0.121,0],[0.215,0.021],[0.226,-0.021],[0.15,0.021],[0.298,0.12],[0.123,0.073],[0.171,0.099],[0.272,0.271],[0.073,0.147],[0.298,0.442],[0,0.146],[0,0.198],[-0.099,0.321],[-0.07,0.027],[-0.059,-0.008],[-0.121,0.023],[-0.174,0.049],[-0.171,0.093],[-0.047,0.145],[0,0.146],[0.05,0.392],[0.391,0],[0.151,-0.099],[0.099,-0.072],[0.121,-0.197],[0.44,0],[0.175,0.098],[0.146,0.12],[0.153,0.121],[0.122,0.048],[0.147,0.049],[0.318,0.1],[0.167,0.073],[0.168,0.07],[0.248,0.051],[0.319,0.027],[0.318,0],[0.172,-0.05],[0.122,-0.075],[0.048,-0.097],[0.074,-0.271],[0.221,0],[0.323,-0.103],[0.172,-0.098],[0.271,-0.324],[0,0],[0.171,0],[0.12,0.023],[0.147,0.045],[0.298,0.125],[0.147,0.073],[0.245,0.222],[0.075,0.121],[0.2,0.32],[0.123,0.121],[0.196,0.275],[0.098,0.175],[0.096,0.145],[0.223,0.077],[0.565,0],[0.294,-0.029],[0.491,0],[0.267,0.268],[0.221,0.072],[0.222,0],[0,0],[0,-0.296],[-0.124,-0.047],[-0.119,-0.055],[-0.12,-0.073],[-0.124,-0.145],[-0.127,-0.144],[-0.125,0],[-0.061,-0.012],[-0.068,0.007],[-0.173,-0.046],[-0.12,-0.029],[-0.123,-0.024],[-0.294,-0.025],[0,0],[-0.663,-0.03],[0,0],[0.587,-0.025],[0,0],[-0.121,-0.073],[-0.121,-0.099],[-0.12,-0.102],[0,0],[-0.103,-0.124],[-0.124,-0.147],[-0.145,-0.242],[-0.051,-0.123],[-0.075,-0.123],[-0.144,-0.126],[-0.169,-0.122],[-0.146,-0.124],[-0.294,-0.298],[-0.147,-0.051],[-0.319,-0.074],[-0.366,0],[-0.122,-0.096],[-0.066,-0.025],[-0.061,0.009],[-0.174,-0.047],[-0.297,-0.05],[-0.297,-0.147],[-0.145,-0.052],[-0.122,-0.025],[-0.248,-0.013],[-0.195,0.006],[-0.198,0],[-0.144,-0.008],[-0.269,0.009],[-0.296,-0.118],[-0.268,-0.145],[-0.125,-0.053],[-0.174,-0.051],[-0.248,-0.122],[-0.223,0]],\"v\":[[237.225,52.077],[236.928,52.469],[236.043,52.862],[235.254,52.862],[234.865,53.061],[234.472,53.451],[234.472,54.242],[234.277,54.634],[233.879,54.829],[233.095,54.926],[232.21,54.829],[231.423,54.634],[231.128,54.242],[231.128,53.848],[230.342,53.552],[229.947,53.552],[229.556,53.848],[229.139,53.944],[226.702,53.944],[226.702,54.731],[227.095,54.926],[227.49,55.224],[227.49,55.618],[227.49,56.401],[228.082,56.401],[228.082,56.009],[228.266,56.01],[228.475,56.009],[228.767,55.618],[229.16,55.811],[229.947,55.811],[230.342,55.811],[231.128,56.205],[231.915,56.796],[232.306,56.992],[232.6,57.385],[232.824,57.392],[232.998,57.385],[233.488,57.486],[233.879,57.587],[234.454,57.574],[235.157,57.587],[235.551,57.781],[236.34,58.269],[236.733,58.469],[237.126,58.862],[237.814,59.648],[238.009,60.043],[238.798,61.219],[238.699,61.613],[238.699,62.103],[238.107,62.793],[237.887,62.799],[237.712,62.793],[237.324,62.895],[236.928,63.192],[236.533,63.58],[236.34,63.973],[236.436,64.37],[237.225,65.053],[238.206,64.762],[238.6,64.463],[238.699,64.071],[239.189,63.678],[240.27,63.973],[240.663,64.37],[241.055,64.663],[241.451,65.053],[241.842,65.152],[242.238,65.348],[243.124,65.645],[243.517,65.94],[244.007,66.038],[244.696,66.234],[245.532,66.234],[246.366,66.234],[246.761,65.94],[247.154,65.742],[247.251,65.348],[247.251,64.566],[247.84,64.566],[248.628,64.169],[249.02,63.78],[249.907,63.091],[250.103,63.091],[250.498,63.285],[250.887,63.385],[251.28,63.58],[252.068,63.973],[252.462,64.169],[252.952,64.956],[253.149,65.348],[253.936,65.94],[254.232,66.331],[254.723,67.119],[255.02,67.612],[255.313,68.001],[255.952,68.001],[257.379,67.91],[258.116,67.807],[259.15,68.497],[259.934,69.086],[260.548,69.282],[261.113,69.185],[261.113,67.977],[260.621,67.413],[260.228,67.319],[259.832,67.218],[259.639,66.822],[259.344,66.432],[258.853,66.135],[258.457,66.135],[258.264,66.135],[258.064,66.135],[257.673,65.843],[257.28,65.742],[256.886,65.645],[256.1,65.645],[256.1,63.139],[254.379,63.139],[254.379,61.27],[255.9,61.27],[255.9,60.63],[255.507,60.433],[255.214,60.043],[254.822,59.746],[252.858,59.746],[252.559,59.352],[252.167,59.055],[251.973,58.269],[251.873,57.879],[251.477,57.683],[251.085,57.385],[250.691,56.992],[250.3,56.699],[249.512,55.913],[249.118,55.713],[248.233,55.713],[247.35,55.32],[247.154,54.926],[246.939,54.921],[246.761,54.926],[246.271,54.829],[245.482,54.534],[244.696,54.046],[244.301,53.848],[243.908,53.848],[243.267,53.848],[242.629,53.848],[242.139,53.75],[241.746,53.751],[240.959,53.647],[240.173,53.157],[239.387,52.67],[238.995,52.572],[238.504,52.373],[237.814,51.978]],\"c\":true},\"ix\":2},\"nm\":\"Path 112\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":112,\"ty\":\"sh\",\"ix\":113,\"ks\":{\"a\":0,\"k\":{\"i\":[[0,0],[0,0],[0,0],[0,0],[-0.026,-0.243],[-0.49,-0.05],[0,0]],\"o\":[[0,0],[0,0],[0,0],[0.026,0.243],[0.492,-0.025],[0,0],[0,0]],\"v\":[[222.283,51.978],[222.283,52.572],[222.085,52.176],[222.085,52.572],[222.184,53.207],[223.41,53.207],[223.41,51.978]],\"c\":true},\"ix\":2},\"nm\":\"Path 113\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":113,\"ty\":\"sh\",\"ix\":114,\"ks\":{\"a\":0,\"k\":{\"i\":[[0.088,-0.092],[0.077,-0.122],[0.05,-0.149],[0,0],[0,-0.149],[-0.025,-0.147],[0,0],[-0.321,0],[-0.152,0],[0,0],[-0.12,-0.024],[-0.126,-0.021],[-0.127,-0.025],[-0.171,-0.046],[-0.347,0],[-0.046,0.463],[0.395,0.047],[0.295,0.026],[0.146,0],[0,0],[0.273,0.049],[0.39,0],[0.083,0]],\"o\":[[-0.097,0.096],[-0.073,0.126],[0,0],[0,0.145],[0,0.172],[0,0],[0.319,0],[0.147,0],[0,0],[0.124,0],[0.126,0.027],[0.12,0.025],[0.166,0.05],[0.32,0.078],[-0.054,-0.464],[-0.392,-0.053],[-0.296,-0.024],[-0.151,0],[0,0],[-0.269,-0.025],[-0.368,-0.074],[-0.086,0],[-0.128,0]],\"v\":[[218.837,54.046],[218.741,54.436],[218.545,54.829],[218.545,54.436],[218.449,54.829],[218.642,55.224],[219.798,55.224],[220.61,55.125],[221.006,55.224],[221.395,55.224],[221.787,55.32],[222.184,55.418],[222.579,55.517],[222.969,55.811],[223.855,55.811],[223.801,54.634],[222.772,54.534],[221.988,54.436],[221.592,54.339],[221.197,54.339],[220.41,54.142],[219.43,53.944],[219.173,53.937]],\"c\":true},\"ix\":2},\"nm\":\"Path 114\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":114,\"ty\":\"sh\",\"ix\":115,\"ks\":{\"a\":0,\"k\":{\"i\":[[0,0],[-0.151,-0.074],[0,0],[-0.173,0],[0,0],[0,0],[0.145,0.073],[0.269,0.047],[0.27,0.048]],\"o\":[[0.123,0.12],[0,0],[0.147,0.076],[0,0],[0,0],[-0.097,-0.124],[-0.248,-0.123],[-0.268,-0.05],[0,0]],\"v\":[[215.301,55.125],[215.598,55.517],[215.991,55.713],[216.405,55.811],[217.165,55.811],[217.165,55.125],[216.973,54.731],[216.186,54.534],[215.4,54.339]],\"c\":true},\"ix\":2},\"nm\":\"Path 115\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":115,\"ty\":\"sh\",\"ix\":116,\"ks\":{\"a\":0,\"k\":{\"i\":[[0.118,0],[0.123,-0.022],[0.145,-0.074],[0.073,-0.123],[0.073,-0.275],[0.073,-0.15],[0.098,-0.052],[0.122,0],[0.688,0],[0,0],[0,0],[0.49,0.018],[0.15,0],[0,-0.147],[0,-0.296],[0,-0.07],[-0.663,-0.07],[-0.294,-0.021],[-0.293,0],[-0.295,0.028],[-0.147,0.075],[-0.198,0.055],[-0.058,-0.009],[-0.071,0.031],[-0.121,0.025],[-0.096,0.172],[-0.078,0.322],[-0.097,0.267],[-0.049,0.171],[0,0.148],[0.021,0.145]],\"o\":[[-0.122,0],[-0.146,0.024],[-0.148,0.076],[-0.145,0.242],[-0.048,0.166],[-0.076,0.119],[-0.1,0.048],[-0.661,0.097],[0,0],[0,0],[-0.495,0],[-0.147,0],[0,0.15],[0.025,0.296],[0,0.069],[0.664,0],[0.293,0.026],[0.299,0.028],[0.296,0],[0.172,0],[0.194,-0.097],[0.052,-0.009],[0.076,0.012],[0.125,-0.045],[0.198,-0.073],[0.178,-0.267],[0.044,-0.27],[0.048,-0.174],[0.025,-0.124],[0,-0.174],[-0.148,0.022]],\"v\":[[263.671,56.796],[263.275,56.796],[262.882,56.992],[262.488,57.191],[262.488,57.98],[262.196,58.372],[262.098,58.765],[261.702,58.765],[259.96,58.765],[259.538,58.765],[259.15,58.765],[257.868,58.765],[257.475,58.663],[257.28,59.352],[257.379,60.14],[257.329,60.334],[259.051,60.334],[259.832,60.529],[260.621,60.529],[261.408,60.529],[261.803,60.334],[262.196,59.941],[262.363,59.949],[262.587,59.941],[262.98,59.844],[263.371,59.45],[263.771,58.663],[263.868,57.879],[264.16,57.486],[264.259,57.092],[264.064,56.699]],\"c\":true},\"ix\":2},\"nm\":\"Path 116\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":116,\"ty\":\"sh\",\"ix\":117,\"ks\":{\"a\":0,\"k\":{\"i\":[[0.051,-0.176],[0.026,-0.12],[0,0],[0,0],[0,0.12],[0,0]],\"o\":[[-0.024,0.12],[0,0],[0,0],[0,-0.12],[0,0],[-0.072,0.169]],\"v\":[[170.077,58.765],[170.077,59.154],[170.469,59.45],[170.469,59.055],[170.373,58.765],[170.373,58.372]],\"c\":true},\"ix\":2},\"nm\":\"Path 117\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":117,\"ty\":\"sh\",\"ix\":118,\"ks\":{\"a\":0,\"k\":{\"i\":[[0.148,-0.099],[0.097,-0.122],[0.046,-0.172],[0.021,-0.126],[0.027,-0.12],[0,-0.146],[0,-0.175],[-0.219,0.024],[-0.121,0.024],[-0.121,0.149],[-0.049,0.125],[0,0.566],[0,0],[0.121,0.123]],\"o\":[[-0.147,0.1],[-0.098,0.124],[-0.028,0.123],[-0.028,0.124],[-0.024,0.127],[0,0.176],[0,0.219],[0.145,0],[0.171,-0.052],[0.076,-0.096],[0.248,-0.491],[0,0],[-0.027,-0.169],[-0.148,0.098]],\"v\":[[230.832,59.154],[230.439,59.45],[230.051,59.746],[230.051,60.14],[229.947,60.529],[229.853,60.924],[229.652,61.322],[230.241,61.417],[230.637,61.417],[231.029,61.121],[231.128,60.728],[231.621,59.352],[231.621,59.154],[231.227,58.862]],\"c\":true},\"ix\":2},\"nm\":\"Path 118\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":118,\"ty\":\"sh\",\"ix\":119,\"ks\":{\"a\":0,\"k\":{\"i\":[[0,0],[0.15,-0.023],[-0.026,-0.149],[-0.024,-0.168],[0,-0.144],[-0.07,-0.146],[-0.247,-0.296],[-0.097,-0.123],[-0.198,-0.072],[-0.172,0],[-0.169,0.027],[0.054,0.124],[0.047,0.173],[0.047,0.124],[0.099,0.149],[0.268,0.245],[0.074,0.122],[0.024,0.126],[0,0.148]],\"o\":[[-0.146,0],[0.048,0.148],[0.048,0.172],[0,0.148],[0,0.199],[0.175,0.321],[0.099,0.122],[0.123,0.168],[0.146,0.051],[0.172,0],[-0.045,-0.12],[-0.07,-0.175],[-0.048,-0.121],[-0.072,-0.17],[-0.195,-0.319],[-0.125,-0.097],[-0.075,-0.121],[-0.025,-0.121],[0,0]],\"v\":[[268.78,59.154],[268.387,59.254],[268.585,59.648],[268.683,60.164],[268.585,60.529],[268.876,60.924],[269.668,61.515],[269.863,61.91],[270.257,62.3],[270.65,62.496],[271.04,62.3],[270.941,61.91],[270.65,61.515],[270.65,61.121],[270.353,60.728],[269.571,60.14],[269.176,59.941],[269.176,59.548],[269.176,59.154]],\"c\":true},\"ix\":2},\"nm\":\"Path 119\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":119,\"ty\":\"sh\",\"ix\":120,\"ks\":{\"a\":0,\"k\":{\"i\":[[0,0],[0,0],[0,0],[0,0],[-0.295,-0.023],[-0.12,-0.043],[0,0],[-0.122,-0.127],[-0.194,-0.096],[-0.226,0],[-0.395,0.1],[-0.147,0],[-0.296,0],[-0.318,0],[-0.27,-0.146],[-0.126,-0.072],[-0.169,0],[-0.146,0],[-0.316,0],[-0.346,-0.074],[-0.34,-0.175],[-0.171,-0.021],[-0.082,0.007],[-0.083,-0.009],[-0.342,-0.024],[-0.024,0.141],[-0.053,0.148],[-0.067,0.006],[-0.061,-0.012],[-0.173,-0.024],[-0.148,0],[0,0],[-0.244,0],[-0.223,-0.093],[-0.124,-0.076],[-0.146,-0.099],[-0.317,-0.1],[-0.321,0],[0,0],[-0.149,0.024],[0.145,0.27],[0.198,0.073],[0.066,-0.013],[0.061,0.027],[0.195,0.32],[0,0],[-0.075,0.147],[-0.122,0.098],[-0.12,0.025],[-0.134,-0.016],[-0.131,0.027],[-0.293,0.175],[0.271,0.051],[0.146,0.024],[0.069,-0.006],[0.062,0.012],[0.344,0],[0.295,0],[0.198,0],[0.115,-0.003],[0.307,0.105],[0.315,0.098],[0.323,0.049]],\"o\":[[0,0],[0,0],[0,0],[0.293,0],[0.149,0],[0,0],[0.17,0.075],[0.151,0.145],[0.201,0.098],[0.415,0],[0.12,-0.024],[0.296,-0.024],[0.318,-0.024],[0.323,0],[0.148,0.072],[0.122,0.072],[0.151,0],[0.319,0],[0.368,0],[0.367,0.098],[0.175,0.066],[0.086,0.014],[0.077,-0.005],[0.322,0.048],[0.024,-0.146],[0.024,-0.175],[0.059,0.012],[0.068,-0.006],[0.173,0.053],[0.125,0.027],[0,0],[0.244,-0.024],[0.27,0],[0.122,0.051],[0.149,0.066],[0.272,0.196],[0.297,0.1],[0,0],[0.172,0],[-0.149,-0.295],[-0.103,-0.175],[-0.061,-0.024],[-0.067,0.013],[-0.348,-0.147],[0,0],[0.022,-0.169],[0.072,-0.152],[0.096,-0.074],[0.142,-0.037],[0.123,0.016],[0.32,-0.049],[-0.293,-0.047],[-0.15,-0.022],[-0.062,-0.012],[-0.068,0.006],[-0.316,-0.049],[-0.293,0],[-0.198,0],[-0.141,-0.006],[-0.267,0.005],[-0.321,-0.098],[-0.323,-0.096],[0,0]],\"v\":[[176.368,61.219],[176.368,61.711],[177.548,61.711],[177.548,62.595],[178.335,62.595],[178.728,62.595],[179.123,62.793],[179.415,63.192],[179.809,63.58],[180.402,63.678],[181.386,63.285],[181.777,63.285],[182.564,63.285],[183.397,63.192],[184.233,63.285],[184.431,63.678],[184.822,63.899],[185.217,63.973],[186.027,63.874],[186.986,63.973],[187.772,64.566],[188.167,64.857],[188.418,64.858],[188.655,64.857],[189.543,64.956],[189.543,64.566],[189.741,64.169],[189.936,64.169],[190.132,64.169],[190.525,64.463],[190.92,64.463],[191.311,64.463],[191.902,64.266],[192.59,64.463],[192.983,64.566],[193.277,64.956],[194.064,65.448],[194.902,65.548],[195.345,65.548],[195.738,65.348],[195.345,64.566],[194.949,64.169],[194.754,64.17],[194.559,64.169],[193.868,63.43],[190.822,63.43],[190.822,62.992],[191.017,62.595],[191.408,62.496],[191.819,62.492],[192.197,62.496],[192.983,62.103],[192.197,62.005],[191.806,61.811],[191.607,61.811],[191.408,61.811],[190.525,61.613],[189.741,61.711],[189.246,61.613],[188.868,61.611],[188.068,61.515],[187.285,61.121],[186.395,60.924]],\"c\":true},\"ix\":2},\"nm\":\"Path 120\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":120,\"ty\":\"sh\",\"ix\":121,\"ks\":{\"a\":0,\"k\":{\"i\":[[0.489,-0.376],[0,-0.293],[-0.025,-0.149],[0,0],[-0.094,0.144],[0,0.242],[0.124,0.368],[0.075,0.155]],\"o\":[[-0.048,0.292],[0,0.15],[0,0],[0.144,-0.097],[0.151,-0.201],[0,-0.395],[-0.048,-0.173],[-0.564,0.223]],\"v\":[[224.443,63.192],[224.344,64.266],[224.443,64.663],[225.626,64.663],[226.012,64.37],[226.311,63.78],[226.115,62.793],[225.819,62.397]],\"c\":true},\"ix\":2},\"nm\":\"Path 121\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":121,\"ty\":\"sh\",\"ix\":122,\"ks\":{\"a\":0,\"k\":{\"i\":[[0,0],[-0.018,-0.147],[-0.051,-0.149],[-0.066,-0.007],[-0.063,0.013],[-0.199,0],[-0.241,0],[0,0],[-0.148,0.072],[0,0]],\"o\":[[0.027,0.143],[0.027,0.17],[0.06,-0.011],[0.07,0.006],[0.171,-0.024],[0.242,0],[0,0],[0.195,0],[0,0],[0,0]],\"v\":[[214.217,63.091],[214.217,63.484],[214.415,63.874],[214.608,63.875],[214.811,63.874],[215.204,63.58],[215.792,63.78],[215.991,63.78],[216.381,63.484],[216.085,63.091]],\"c\":true},\"ix\":2},\"nm\":\"Path 122\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":122,\"ty\":\"sh\",\"ix\":123,\"ks\":{\"a\":0,\"k\":{\"i\":[[0.025,-0.005],[0.172,-0.032],[0.22,0.021],[0.223,-0.024],[0.271,-0.029],[0,0],[0.147,0],[0.146,-0.031],[0.244,0],[0.194,0.074],[0.22,0.069],[0.293,0.028],[0.22,0],[0.2,-0.044],[0.172,-0.072],[0.225,0],[0,0],[0,0],[-0.393,-0.052],[-0.836,0],[0,0],[-0.687,0.047],[-0.147,0],[-0.123,0.024],[-0.123,0.024],[-0.145,0.075],[-0.198,0.048],[-0.126,0],[-0.129,-0.005],[-0.144,0.011],[-0.198,0.022],[-0.173,0.074],[0,0],[0.07,0.006],[0.039,0]],\"o\":[[-0.171,0.048],[-0.257,0.051],[-0.181,-0.017],[-0.294,0.021],[0,0],[-0.15,0],[-0.149,0],[-0.243,0.024],[-0.221,0],[-0.219,-0.075],[-0.269,-0.076],[-0.221,-0.024],[-0.222,0],[-0.168,0.028],[-0.196,0.074],[0,0],[0,0],[0.271,0.271],[0.839,0.097],[0,0],[0.687,0],[0.148,0],[0.147,0],[0.125,-0.024],[0.15,-0.023],[0.173,-0.075],[0.122,-0.026],[0.137,-0.013],[0.123,0.006],[0.194,0],[0.199,-0.026],[0,0],[-0.063,0.014],[-0.039,-0.004],[-0.026,0]],\"v\":[[211.759,64.071],[211.368,64.37],[210.681,64.38],[210.089,64.37],[209.303,64.566],[208.91,64.566],[208.517,64.663],[208.124,64.663],[207.535,64.857],[206.944,64.762],[206.452,64.37],[205.668,64.266],[205.077,64.169],[204.483,64.266],[203.993,64.463],[203.475,64.762],[203.011,64.762],[203.306,64.956],[204.094,65.548],[206.207,65.548],[206.55,65.548],[208.321,65.548],[208.714,65.448],[209.107,65.448],[209.499,65.348],[209.892,65.152],[210.287,64.762],[210.681,64.762],[211.074,64.761],[211.467,64.762],[211.957,64.762],[212.352,64.463],[212.157,64.071],[211.956,64.072],[211.837,64.064]],\"c\":true},\"ix\":2},\"nm\":\"Path 123\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":123,\"ty\":\"sh\",\"ix\":124,\"ks\":{\"a\":0,\"k\":{\"i\":[[0.222,-0.071],[0.146,-0.053],[0.147,0],[0.297,-0.052],[0,-0.269],[-0.099,-0.147],[-0.465,0],[-0.27,0.072],[-0.146,0.076],[-0.174,0.05],[-0.343,-0.023],[-0.345,0],[-0.146,0],[0.046,-0.013],[0,0.025],[0.023,0.2],[0.272,0.051],[0.175,0.028],[0.063,-0.006],[0.061,0.014],[0.274,0]],\"o\":[[-0.147,0.053],[-0.122,0.046],[-0.294,0],[-0.27,0.02],[0,0.196],[0.272,0.37],[0.295,0],[0.149,-0.052],[0.17,-0.069],[0.316,-0.099],[0.344,0.024],[0.15,0],[-0.013,-0.025],[-0.046,0.012],[-0.047,-0.172],[-0.295,0],[-0.145,-0.024],[-0.071,-0.012],[-0.067,0.007],[-0.248,-0.044],[-0.244,0]],\"v\":[[199.176,64.169],[198.785,64.37],[198.488,64.663],[197.702,64.566],[197.113,64.956],[197.408,65.348],[198.585,65.548],[199.373,65.548],[199.767,65.348],[200.064,64.956],[200.947,65.053],[201.832,65.053],[202.227,64.956],[202.118,64.956],[202.029,64.956],[202.029,64.463],[201.24,64.463],[200.848,64.266],[200.649,64.267],[200.457,64.266],[199.814,64.071]],\"c\":true},\"ix\":2},\"nm\":\"Path 124\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":124,\"ty\":\"sh\",\"ix\":125,\"ks\":{\"a\":0,\"k\":{\"i\":[[0.041,-0.011],[0.123,-0.024],[0.198,-0.073],[0.124,-0.051],[0.123,-0.023],[0.17,-0.052],[0.169,-0.076],[0.125,-0.076],[0.119,-0.075],[0.168,0.004],[0.099,-0.017],[0.065,0.01],[0.101,-0.043],[0.147,-0.101],[0.123,-0.119],[0,-0.248],[0,0],[-0.004,-0.021],[0,0],[0,-0.15],[-0.295,-0.097],[-0.146,0],[-0.147,0],[-0.203,0.267],[-0.294,0.243],[-0.22,0.1],[-0.127,0],[-0.269,0.05],[-0.343,0.169],[-0.293,0.024],[-0.112,-0.008],[-0.149,0.027],[-0.12,0.024],[-0.099,0.099],[0.124,0.075],[0.193,0.074],[0.295,0],[0.083,0]],\"o\":[[-0.125,0.021],[-0.195,0.074],[-0.122,0.048],[-0.121,0.05],[-0.175,0.048],[-0.173,0.051],[-0.124,0.048],[-0.123,0.072],[-0.157,0.094],[-0.098,-0.002],[-0.071,0.01],[-0.094,-0.016],[-0.172,0.071],[-0.145,0.095],[-0.171,0.175],[0,0],[-0.004,0.025],[0,0],[0,0.144],[0,0.321],[0.122,0.026],[0.15,0],[0.346,0],[0.219,-0.297],[0.198,-0.17],[0.125,-0.045],[0.273,-0.051],[0.37,-0.07],[0.244,-0.125],[0.131,-0.01],[0.141,0.011],[0.124,0],[0.147,-0.024],[-0.149,-0.073],[-0.172,-0.121],[-0.271,-0.093],[-0.099,0],[-0.041,0]],\"v\":[[215.694,64.37],[215.301,64.463],[214.908,64.857],[214.512,64.956],[214.121,65.053],[213.728,65.348],[213.238,65.448],[212.844,65.548],[212.746,65.94],[212.254,66.026],[211.957,66.038],[211.756,66.027],[211.467,66.038],[211.17,66.432],[210.777,66.725],[210.386,67.218],[210.386,67.413],[210.386,67.482],[210.287,67.319],[210.188,67.71],[210.878,68.201],[211.27,68.3],[211.66,68.395],[212.257,67.71],[213.04,67.021],[213.53,66.527],[213.926,66.432],[214.709,66.331],[215.499,65.645],[216.283,65.448],[216.644,65.454],[217.069,65.448],[217.462,65.448],[217.66,65.053],[217.266,64.857],[216.876,64.463],[216.085,64.37],[215.816,64.356]],\"c\":true},\"ix\":2},\"nm\":\"Path 125\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":125,\"ty\":\"sh\",\"ix\":126,\"ks\":{\"a\":0,\"k\":{\"i\":[[0,0],[-0.016,-0.047]],\"o\":[[0.03,0.037],[0,0]],\"v\":[[210.508,67.683],[210.582,67.807]],\"c\":true},\"ix\":2},\"nm\":\"Path 126\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":126,\"ty\":\"sh\",\"ix\":127,\"ks\":{\"a\":0,\"k\":{\"i\":[[0.006,-0.001],[0.294,-0.145],[-0.097,-0.121],[-0.097,-0.151],[-0.097,-0.122],[-0.145,-0.073],[-0.173,-0.023],[-0.348,0],[-0.469,0.028],[0,0],[0.123,0.023],[0.127,0.122],[0.093,0.05],[0.127,0.078],[0.124,0.052],[0.147,0.123],[0.138,0.056],[0.069,0]],\"o\":[[-0.317,0.097],[0.073,0.124],[0.122,0.147],[0.073,0.12],[0.099,0.122],[0.15,0.074],[0.321,0.073],[0.462,0],[0,0],[-0.123,-0.029],[-0.174,-0.052],[-0.093,-0.094],[-0.104,-0.051],[-0.122,-0.071],[-0.174,-0.071],[-0.073,0.013],[-0.126,-0.05],[-0.007,0]],\"v\":[[202.616,66.234],[201.832,66.627],[202.029,67.021],[202.421,67.319],[202.616,67.71],[202.91,68.104],[203.405,68.201],[204.267,68.201],[205.467,68.15],[205.371,67.71],[204.978,67.612],[204.483,67.413],[204.391,67.021],[203.993,66.922],[203.602,66.822],[203.306,66.432],[202.954,66.333],[202.636,66.233]],\"c\":true},\"ix\":2},\"nm\":\"Path 127\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":127,\"ty\":\"sh\",\"ix\":128,\"ks\":{\"a\":0,\"k\":{\"i\":[[0.218,-0.029],[-0.048,-0.098],[-0.149,-0.126],[-0.298,0],[0,0],[-0.176,0.073],[0.072,0.124],[0.068,0.124],[0.121,0.052],[0.294,0]],\"o\":[[0.023,0.123],[0.097,0.145],[0.221,0.194],[0,0],[0.168,-0.029],[-0.054,-0.149],[-0.074,-0.121],[-0.076,-0.122],[-0.25,-0.095],[-0.223,0]],\"v\":[[278.123,66.432],[278.22,67.119],[278.516,67.516],[279.301,67.71],[279.694,67.71],[280.09,67.413],[279.889,67.021],[279.795,66.627],[279.402,66.527],[278.688,66.331]],\"c\":true},\"ix\":2},\"nm\":\"Path 128\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":128,\"ty\":\"sh\",\"ix\":129,\"ks\":{\"a\":0,\"k\":{\"i\":[[0.125,-0.05],[0.296,-0.15],[-0.05,-0.248],[0,0],[0,0],[0,0]],\"o\":[[-0.291,0.118],[0.073,0.221],[0,0],[0,0],[0,0],[-0.123,0.021]],\"v\":[[209.499,68.988],[208.714,69.382],[208.91,69.97],[210.089,69.97],[210.089,69.282],[209.892,68.889]],\"c\":true},\"ix\":2},\"nm\":\"Path 129\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":129,\"ty\":\"sh\",\"ix\":130,\"ks\":{\"a\":0,\"k\":{\"i\":[[0.115,0],[0,0],[0.146,0],[0.149,0],[0,0],[-0.123,-0.045],[-0.27,-0.076],[-0.144,-0.075],[-0.12,-0.07],[-0.05,-0.125],[0.176,0],[0.341,0],[0.297,-0.024],[0.149,-0.046],[0.172,-0.122],[0.368,-0.249],[0.169,-0.1],[0.147,-0.124],[0,-0.245],[0,0],[0,-0.145],[0.024,-0.293],[0,-0.122],[0.048,-0.173],[0.169,-0.048],[0.242,0],[0.517,0.324],[0.147,0.051],[0.123,0],[0.39,0],[0.026,0.293],[0,0],[0.323,-0.026],[0.112,0.009],[0.149,-0.028],[0.268,-0.2],[0.099,-0.123],[0.148,-0.122],[0.17,-0.021],[0.116,0.016],[0.148,-0.052],[0.121,-0.467],[0.023,-0.121],[0.221,-0.047],[0.064,0.006],[0.064,-0.013],[0.294,0],[0,0],[-0.097,-0.119],[-0.121,-0.141],[0,-0.172],[0,0],[0,0],[0,0.05],[0,0.292],[0,0.153],[0,0],[0.148,-0.072],[0.124,-0.101],[0.07,-0.171],[0,-0.294],[0.098,-0.464],[0.028,-0.118],[0.126,-0.147],[0.124,-0.199],[0.075,-0.147],[0.078,-0.121],[0.125,-0.094],[0.217,-0.295],[0.123,-0.1],[0.123,-0.073],[0.149,-0.046],[0.148,-0.025],[0.122,0],[0.199,0],[0.311,0.011],[0.294,-0.008],[0.197,-0.022],[0.347,-0.199],[0.196,-0.027],[0.174,0.021],[0.23,-0.052],[0.193,-0.126],[0.367,-0.145],[0.47,-0.194],[0.147,-0.098],[0.072,-0.318],[0.025,-0.297],[0.05,-0.144],[0.062,-0.005],[0.06,0.013],[0.148,0.025],[0.123,0.054],[0.097,0.096],[0.049,0.124],[0.074,0.171],[0.145,-0.244],[0.074,-0.145],[0,-0.147],[0,0],[0,-0.145],[0.022,-0.342],[0,0],[0.077,-0.148],[0.048,-0.194],[0,-0.147],[-0.122,-0.249],[-0.095,-0.15],[-0.099,-0.151],[-0.127,-0.268],[-0.291,-0.422],[0,0],[0.174,0.045],[0.08,-0.012],[0.084,0.023],[0.173,0.021],[0.147,0],[0.147,-0.027],[0,0],[-0.124,-0.149],[-0.248,-0.293],[-0.124,-0.123],[-0.122,-0.097],[-0.099,-0.203],[0,-0.173],[-0.026,-0.318],[-0.144,-0.293],[-0.074,-0.194],[-0.052,-0.395],[-0.022,-0.197],[-0.022,-0.194],[-0.175,-0.299],[-0.077,-0.146],[-0.171,-0.394],[-0.024,-0.153],[0,-0.125],[-0.05,-0.465],[-0.1,-0.319],[-0.024,-0.144],[0,-0.194],[0,0],[0.275,-0.071],[0.271,-0.147],[0.125,-0.075],[0.144,-0.196],[0,0],[-0.34,-0.271],[-0.246,-0.223],[-0.122,-0.074],[-0.149,-0.077],[-0.294,-0.121],[-0.124,-0.047],[-0.32,-0.098],[-0.246,0],[-0.245,0.023],[-0.27,0.049],[-0.125,0.025],[-0.197,0.149],[-0.072,0.124],[-0.098,0.146],[-0.049,0.099],[-0.124,0.127],[-0.143,0.072],[-0.295,0.022],[-0.27,0.099],[-0.196,0.071],[-0.294,0],[-0.661,-0.172],[-0.345,-0.097],[-0.197,-0.029],[-0.272,0],[-0.197,0.073],[-0.147,0.144],[-0.124,0.167],[-0.171,0.273],[-0.171,0.17],[-0.813,0.273],[-0.124,0.053],[-0.145,0.051],[-0.148,0.027],[-0.151,0],[-0.125,-0.022],[-0.143,-0.05],[-0.168,-0.047],[-0.296,0],[-0.27,0.053],[-0.152,0.071],[-0.37,0.271],[-0.145,0.126],[-0.121,0.095],[-0.171,0.05],[-0.068,-0.006],[-0.061,0.012],[-0.395,0],[-0.295,-0.025],[-0.198,0.015],[-0.275,-0.039],[-0.271,-0.12],[0,0],[-0.146,-0.077],[-0.293,0],[-0.243,0],[-0.148,0],[0,0],[-0.294,-0.026],[-0.123,-0.026],[-0.148,-0.072],[-0.1,-0.124],[-0.072,-0.22],[0,-0.144],[0,-0.466],[-0.444,-0.37],[-0.075,-0.147],[0,-0.292],[-0.12,-0.465],[-0.074,-0.12],[-0.147,-0.072],[-0.144,0],[-0.245,0.437],[-0.075,0.127],[-0.244,0.296],[-0.096,0.122],[-0.096,0.144],[-0.075,0.153],[-0.101,0.295],[-0.048,0.148],[-0.222,-0.221],[0,-0.195],[0.272,-0.273],[0,-0.518],[-0.047,-0.292],[-0.072,0.096],[-0.095,0.047],[-0.195,0],[-0.174,0],[-0.147,-0.025],[0,0],[0.025,-0.197],[0,0],[0.026,-0.466],[-0.059,-0.009],[-0.069,0.029],[-0.149,0.144],[-0.272,0],[-0.124,-0.198],[-0.072,-0.323],[-0.271,-0.271],[-0.1,-0.099],[0,-0.224],[0,0],[0,-0.149],[-0.025,-0.292],[-0.025,-0.12],[-0.247,-0.196],[-0.29,-0.176],[-0.173,-0.049],[-0.294,0],[-0.419,-0.193],[-0.149,-0.072],[-0.121,-0.076],[-0.151,-0.073],[-0.177,-0.05],[-0.393,0],[-0.445,0.441],[0,0.589],[0,0],[-0.17,-0.439],[-0.024,-0.119],[-0.247,-0.196],[-0.343,0],[-0.395,0.344],[-0.143,0.097],[-0.345,0.193],[-0.15,0.073],[-0.392,0],[-0.221,0],[-0.833,0],[-0.126,0.098],[-0.076,0.122],[-0.049,0.12],[-0.073,0.317],[-0.271,0.391],[-0.27,0.198],[0,0.272],[0,0],[0.051,0.196],[0,0.245],[-0.17,0.563],[-0.051,0.147],[-0.052,0.121],[-0.074,0.152],[-0.294,0.244],[-0.124,0.096],[-0.098,0.149],[-0.073,0.146],[-0.026,0.148],[-0.026,0.125],[-0.029,0.121],[-0.097,0.155],[-0.198,0.1],[-0.123,0.073],[-0.075,-0.004],[-0.073,0.085],[-0.048,0.173],[0,0.121],[0,0.146],[0,0.343],[-0.221,0.345],[-0.074,0.372],[-0.098,0.441],[-0.027,0.119],[0,0.144],[0,0],[0.072,0.147],[0.07,0.122],[0.1,0.174],[0.025,0.173],[0,0],[-0.022,0.118],[-0.075,0.319],[0,0.294],[0,0],[0,0],[0.024,0.122],[0.145,0.194],[0.172,0.348],[0.049,0.17],[0.023,0.124],[0.073,0.145],[0.075,0.126],[0.099,0.124],[0.274,0.219],[0.174,0.07],[0.147,0.119],[0,0.224],[0,0],[0.296,0],[0.466,0.052],[0.172,0.071],[0.122,0.069],[0.052,0.365],[0,0],[0,0.15],[0,0.342],[0.056,-0.011],[0.068,0.041],[0.073,0.121],[0.145,0.225],[0.12,0.079],[0.15,0.05],[0.269,0.196],[0.125,0.121],[0.099,0.121],[0.099,0.123],[0.198,0.076],[0.466,0.15],[0.152,0.099],[0.046,0.195],[0.073,0.269],[0.097,0.321],[0.025,0.171],[0.027,0.124],[0.021,0.145],[0,0.147],[0,0],[0.022,0.295],[0.022,0.126],[0.247,0.221],[0.097,0.195],[0,0.219],[0,0.296],[0.37,0.123],[0.124,0],[0.125,0.02],[0.15,0.025],[0.298,0.148],[0.074,0.12],[0.029,0.124],[0,0.125],[0.023,0.146],[0,0],[0.097,0.441],[0.097,0.172],[0.074,0.125],[0.051,0.196],[0.026,0.123],[0.045,0.272],[0.049,0.125],[0.294,0.197],[0.077,-0.015],[0.052,0.013],[0,0],[0.027,-0.295],[0,0],[0.072,-0.171],[0.097,-0.148],[0.17,-0.297],[0.047,-0.177],[0,-0.297],[-0.029,-0.123],[-0.025,-0.172],[0,-0.293],[0,0],[0.049,-0.197],[0.073,-0.172],[0,-0.193],[0,0],[0.123,-0.17],[0.123,-0.1],[0.198,-0.091],[0.224,0],[0.372,0.074],[0.069,-0.006],[0.061,0.01],[0.148,0.096],[0.095,0.177],[0.046,0.123],[0.127,0.148],[0.565,0.295],[0.395,0.121],[0.149,0.1],[0.247,0.314],[0.122,0.072],[0.081,-0.011],[0.054,0.01],[0.124,0],[0.072,-0.009],[0.094,0.026],[0.125,0.07],[0.077,0.174],[0,0.147],[0,0.175],[0,0.394],[0,0],[0.024,0.144],[0,0.169],[-0.074,0.149],[-0.074,0.126],[-0.07,0.122],[-0.075,0.146],[-0.12,0.148],[-0.2,0.32],[-0.048,0.121],[0,0],[0.27,0.047],[0.344,0.024],[0,0],[0.49,0.044],[0.17,0.047],[0.173,0],[0.127,0.024],[0.067,-0.005],[0.062,0.013],[0.194,0.098],[0.146,0.023],[0.068,-0.006],[0.061,0.012],[0.147,0.052],[0.12,0.053],[0.321,0.075],[0.043,0]],\"o\":[[0,0],[-0.148,0],[-0.147,0],[0,0],[0.075,0.125],[0.245,0.12],[0.152,0.049],[0.124,0.047],[0.125,0.078],[-0.146,0.049],[-0.343,0.023],[-0.295,0],[-0.17,0],[-0.219,0.098],[-0.343,0.273],[-0.174,0.1],[-0.176,0.096],[-0.174,0.149],[0,0],[0,0.146],[0.024,0.297],[0,0.15],[-0.024,0.174],[-0.051,0.17],[-0.222,0.079],[-0.615,0],[-0.147,-0.077],[-0.123,-0.047],[-0.367,-0.047],[-0.053,-0.29],[0,0],[-0.317,0],[-0.131,0.011],[-0.14,-0.01],[-0.324,0.043],[-0.124,0.07],[-0.118,0.172],[-0.146,0.127],[-0.121,0.023],[-0.143,-0.02],[-0.441,0.147],[-0.027,0.122],[-0.074,0.217],[-0.058,0.01],[-0.07,-0.006],[-0.271,0.049],[0,0],[0.073,0.126],[0.124,0.154],[0.098,0.129],[0,0],[0,0],[0,-0.046],[0,-0.295],[0,-0.149],[0,0],[-0.174,0],[-0.147,0.075],[-0.147,0.121],[-0.125,0.245],[0,0.487],[-0.027,0.124],[-0.073,0.202],[-0.146,0.173],[-0.072,0.144],[-0.071,0.125],[-0.072,0.124],[-0.266,0.242],[-0.074,0.123],[-0.123,0.096],[-0.124,0.072],[-0.147,0.05],[-0.123,0.023],[-0.173,0.023],[-0.39,0.03],[-0.233,-0.008],[-0.197,0],[-0.418,0.05],[-0.175,0.098],[-0.21,0.035],[-0.194,-0.023],[-0.223,0.046],[-0.347,0.22],[-0.491,0.198],[-0.171,0.079],[-0.273,0.17],[-0.052,0.269],[0,0.173],[-0.073,-0.01],[-0.066,0.007],[-0.152,-0.02],[-0.123,-0.022],[-0.124,-0.046],[-0.099,-0.098],[-0.075,-0.171],[-0.097,0.292],[-0.073,0.121],[-0.049,0.123],[0,0],[0,0.145],[0.022,0.348],[0,0],[-0.028,0.171],[-0.095,0.169],[-0.025,0.126],[0,0.294],[0.076,0.17],[0.097,0.145],[0.168,0.243],[0.219,0.49],[0,0],[-0.172,-0.076],[-0.087,-0.025],[-0.079,0.011],[-0.174,-0.049],[-0.12,-0.025],[-0.172,0],[0,0],[0,0.194],[0.244,0.296],[0.117,0.148],[0.124,0.124],[0.147,0.123],[0.071,0.146],[0.022,0.343],[0.022,0.317],[0.098,0.193],[0.146,0.345],[0.022,0.192],[0.026,0.196],[0.047,0.368],[0.072,0.146],[0.219,0.368],[0.05,0.149],[0.021,0.117],[0.075,0.465],[0.048,0.323],[0.047,0.147],[0.048,0.175],[0,0],[-0.294,0],[-0.319,0.098],[-0.123,0.08],[-0.195,0.149],[0,0],[0.466,0],[0.248,0.195],[0.123,0.098],[0.125,0.074],[0.296,0.145],[0.128,0.051],[0.294,0.125],[0.224,0.049],[0.248,0],[0.295,-0.029],[0.122,0],[0.225,-0.051],[0.123,-0.072],[0.102,-0.147],[0.073,-0.098],[0.097,-0.146],[0.119,-0.121],[0.248,-0.122],[0.296,-0.025],[0.201,-0.074],[0.269,-0.096],[0.689,0],[0.345,0.1],[0.172,0.048],[0.269,0.021],[0.217,0],[0.195,-0.072],[0.148,-0.151],[0.195,-0.275],[0.147,-0.221],[0.613,-0.612],[0.121,-0.026],[0.144,-0.045],[0.146,-0.05],[0.124,-0.022],[0.147,0],[0.146,0.027],[0.173,0.051],[0.272,0.076],[0.29,0],[0.171,-0.026],[0.394,-0.223],[0.17,-0.121],[0.147,-0.12],[0.123,-0.099],[0.061,-0.012],[0.068,0.006],[0.371,-0.123],[0.292,0],[0.255,0.024],[0.225,-0.016],[0.296,0.05],[0,0],[0.172,0.071],[0.249,0.149],[0.248,0],[0.149,0],[0,0],[0.299,0],[0.148,0],[0.151,0.046],[0.175,0.074],[0.148,0.171],[0.027,0.125],[0.021,0.47],[0.586,0],[0.145,0.125],[0.145,0.249],[0.028,0.493],[0.025,0.124],[0.072,0.145],[0.123,0.073],[0.517,0],[0.074,-0.122],[0.167,-0.319],[0.1,-0.122],[0.098,-0.125],[0.101,-0.15],[0.147,-0.243],[0.049,-0.145],[0.293,0.097],[0.119,0.125],[0,0.393],[-0.343,0.341],[0,0.294],[0.125,-0.073],[0.075,-0.098],[0.151,-0.099],[0.171,0],[0.147,0],[0,0],[0,0.22],[0,0],[-0.072,0.444],[0.054,-0.01],[0.075,0.011],[0.199,-0.096],[0.172,-0.17],[0.243,0],[0.17,0.274],[0.098,0.366],[0.096,0.095],[0.149,0.148],[0,0],[0,0.146],[-0.025,0.296],[0,0.15],[0.096,0.324],[0.245,0.198],[0.149,0.073],[0.271,0.096],[0.49,0],[0.172,0.079],[0.12,0.074],[0.145,0.073],[0.147,0.072],[0.342,0.123],[0.641,0],[0.416,-0.413],[0,0],[0.49,0],[0.025,0.127],[0.075,0.321],[0.244,0.197],[0.537,0],[0.147,-0.124],[0.32,-0.247],[0.147,-0.073],[0.321,-0.197],[0.223,0],[0.835,0.021],[0.177,0],[0.122,-0.094],[0.073,-0.098],[0.121,-0.293],[0.099,-0.468],[0.17,-0.275],[0.195,-0.147],[0,0],[0,-0.225],[-0.047,-0.218],[0,-0.587],[0.025,-0.15],[0.026,-0.124],[0.048,-0.147],[0.174,-0.343],[0.147,-0.125],[0.124,-0.1],[0.075,-0.121],[0.075,-0.146],[0.02,-0.125],[0.02,-0.118],[0.047,-0.171],[0.099,-0.166],[0.147,-0.073],[0.062,-0.03],[0.102,0.005],[0.121,-0.149],[0.019,-0.122],[0,-0.126],[0.025,-0.343],[0.219,-0.322],[0.217,-0.316],[0.098,-0.44],[0.026,-0.123],[0.02,-0.126],[0,0],[0,-0.174],[-0.074,-0.147],[-0.1,-0.175],[-0.072,-0.149],[0,0],[0,-0.149],[0.078,-0.323],[0.047,-0.27],[0,0],[0,0],[0,-0.149],[-0.054,-0.217],[-0.221,-0.295],[-0.075,-0.17],[-0.024,-0.126],[-0.05,-0.149],[-0.076,-0.149],[-0.098,-0.144],[-0.223,-0.243],[-0.146,-0.126],[-0.169,-0.078],[-0.175,-0.122],[0,0],[-0.294,-0.024],[-0.465,0],[-0.198,0],[-0.148,-0.049],[-0.296,-0.223],[0,0],[0,-0.124],[-0.023,-0.339],[-0.064,-0.012],[-0.073,0.015],[-0.124,-0.074],[-0.147,-0.224],[-0.074,-0.096],[-0.146,-0.074],[-0.295,-0.121],[-0.151,-0.101],[-0.121,-0.128],[-0.095,-0.127],[-0.123,-0.146],[-0.443,-0.196],[-0.171,-0.045],[-0.171,-0.097],[-0.049,-0.267],[-0.098,-0.319],[-0.05,-0.169],[-0.024,-0.124],[-0.024,-0.145],[-0.029,-0.121],[0,0],[-0.029,-0.296],[0,-0.146],[-0.1,-0.318],[-0.169,-0.147],[-0.099,-0.174],[0,-0.294],[0,-0.396],[-0.122,-0.026],[-0.12,0],[-0.146,-0.026],[-0.318,-0.073],[-0.146,-0.073],[-0.073,-0.103],[-0.024,-0.125],[-0.024,-0.149],[0,0],[-0.027,-0.467],[-0.051,-0.199],[-0.073,-0.122],[-0.1,-0.169],[-0.021,-0.122],[-0.048,-0.272],[-0.029,-0.122],[-0.147,-0.322],[-0.072,-0.04],[-0.058,0.011],[0,0],[0.048,0.296],[0,0],[-0.022,0.177],[-0.075,0.172],[-0.175,0.27],[-0.076,0.148],[-0.099,0.268],[0,0.144],[0.024,0.17],[0.051,0.272],[0,0],[0,0.225],[-0.024,0.172],[-0.075,0.174],[0,0],[0,0.218],[-0.098,0.122],[-0.145,0.123],[-0.193,0.103],[-0.392,0],[-0.061,-0.014],[-0.065,0.006],[-0.171,-0.027],[-0.15,-0.1],[-0.055,-0.12],[-0.099,-0.172],[-0.417,-0.496],[-0.346,-0.172],[-0.171,-0.049],[-0.322,-0.246],[-0.098,-0.127],[-0.057,-0.029],[-0.063,0.008],[-0.119,-0.028],[-0.079,-0.011],[-0.087,0.01],[-0.147,-0.027],[-0.146,-0.102],[-0.049,-0.122],[0,-0.175],[0,-0.392],[0,0],[-0.027,-0.151],[-0.022,-0.149],[0,-0.172],[0.077,-0.148],[0.074,-0.096],[0.074,-0.147],[0.099,-0.178],[0.242,-0.297],[0.071,-0.124],[0,0],[-0.265,-0.049],[-0.321,-0.072],[0,0],[-0.494,0],[-0.195,0],[-0.147,-0.049],[-0.149,0],[-0.061,-0.012],[-0.067,0.006],[-0.198,-0.048],[-0.151,-0.071],[-0.063,-0.013],[-0.066,0.006],[-0.146,-0.025],[-0.126,-0.021],[-0.295,-0.145],[-0.048,-0.008],[-0.085,0]],\"v\":[[226.975,69.674],[226.605,69.674],[226.214,69.773],[225.819,69.722],[225.819,70.461],[225.918,70.856],[226.702,71.052],[227.095,71.249],[227.49,71.343],[227.49,71.741],[227.095,71.937],[226.214,71.937],[225.425,71.937],[225.032,72.133],[224.54,72.525],[223.657,73.216],[223.168,73.512],[222.676,73.804],[222.283,74.294],[222.283,74.493],[222.381,74.883],[222.381,75.672],[222.283,76.062],[222.184,76.557],[221.889,76.946],[221.249,76.946],[219.723,76.654],[219.527,76.261],[219.134,76.261],[218.155,76.261],[217.952,75.379],[217.193,75.379],[216.381,75.575],[216.022,75.568],[215.598,75.575],[214.811,75.971],[214.61,76.359],[214.217,76.751],[213.926,77.145],[213.572,77.134],[213.137,77.145],[212.452,78.229],[212.352,78.621],[211.957,79.113],[211.772,79.112],[211.566,79.113],[210.777,79.113],[210.777,79.799],[210.975,80.192],[211.368,80.487],[211.566,80.908],[211.566,81.667],[209.845,81.667],[209.892,81.571],[209.795,80.787],[209.845,80.388],[208.741,80.388],[208.321,80.487],[207.926,80.687],[207.634,81.079],[207.535,81.865],[207.535,83.142],[207.434,83.533],[207.042,83.928],[206.647,84.424],[206.353,84.813],[206.254,85.206],[205.861,85.404],[205.176,86.191],[204.978,86.587],[204.587,86.781],[204.189,86.978],[203.798,87.174],[203.405,87.174],[202.91,87.269],[201.913,87.277],[201.145,87.269],[200.65,87.37],[199.668,87.765],[199.176,88.061],[198.615,88.055],[197.999,88.061],[197.509,88.455],[196.524,88.941],[195.243,89.53],[194.754,89.731],[194.262,90.516],[194.262,91.304],[194.064,91.695],[193.863,91.696],[193.676,91.695],[193.277,91.499],[192.884,91.4],[192.493,91.304],[192.493,90.91],[192.197,90.516],[191.902,91.304],[191.508,91.499],[191.508,91.895],[191.508,92.285],[191.61,92.677],[191.61,93.564],[191.61,93.958],[191.311,94.351],[190.92,94.742],[190.92,95.136],[191.017,95.925],[191.311,96.318],[191.709,96.614],[192.004,97.397],[192.785,98.58],[192.689,98.972],[192.295,98.679],[192.046,98.679],[191.806,98.679],[191.408,98.383],[191.017,98.282],[190.624,98.482],[190.624,99.243],[190.92,99.66],[191.61,100.446],[191.902,100.839],[192.295,101.132],[192.689,101.53],[192.884,101.921],[192.884,102.805],[193.18,103.688],[193.475,104.18],[193.772,105.166],[193.868,105.658],[193.868,106.147],[194.262,107.032],[194.559,107.425],[195.147,108.406],[195.345,108.806],[195.443,109.198],[195.443,110.47],[195.738,111.357],[195.934,111.747],[196.033,112.264],[196.033,113.913],[195.243,113.913],[194.457,114.402],[194.064,114.602],[193.676,115.094],[193.772,115.486],[194.949,115.682],[195.443,116.471],[195.835,116.667],[196.228,116.866],[197.012,117.255],[197.408,117.353],[198.194,117.749],[198.832,117.749],[199.473,117.749],[200.258,117.551],[200.65,117.551],[201.145,117.157],[201.537,116.961],[201.832,116.569],[201.931,116.175],[202.324,115.877],[202.616,115.486],[203.405,115.389],[204.189,115.29],[204.587,114.898],[205.371,114.802],[207.139,115.094],[208.025,115.486],[208.517,115.587],[209.207,115.682],[209.795,115.587],[210.188,115.194],[210.582,114.802],[211.072,114.011],[211.566,113.521],[213.334,112.143],[213.728,112.043],[214.121,111.851],[214.512,111.65],[214.908,111.65],[215.301,111.65],[215.694,111.851],[216.085,112.143],[216.876,112.143],[217.66,112.143],[218.056,111.851],[218.939,111.063],[219.43,110.766],[219.723,110.375],[220.017,109.981],[220.214,109.981],[220.41,109.981],[221.447,109.786],[222.184,109.883],[222.84,109.877],[223.559,109.883],[224.344,110.177],[224.74,110.375],[225.129,110.669],[225.819,111.063],[226.433,110.912],[226.803,110.968],[227.587,110.968],[228.475,110.968],[228.866,110.968],[229.261,111.161],[229.556,111.555],[229.947,112.043],[230.051,112.439],[230.051,113.618],[231.522,113.913],[231.816,114.306],[232.011,115.094],[232.111,116.373],[232.21,116.763],[232.504,117.157],[232.897,117.157],[234.077,116.471],[234.178,116.075],[234.96,115.486],[235.157,115.094],[235.551,114.802],[235.848,114.402],[236.144,113.618],[236.34,113.225],[237.126,113.521],[237.421,113.913],[236.829,114.702],[236.436,116.004],[236.533,116.763],[236.928,116.667],[237.024,116.274],[237.421,115.977],[237.814,116.175],[238.206,116.175],[238.206,117.331],[238.009,117.848],[238.009,118.237],[237.814,119.419],[237.986,119.426],[238.206,119.419],[238.6,119.027],[239.092,118.533],[239.684,118.731],[239.779,119.617],[240.566,120.306],[240.959,120.5],[241.055,121.092],[241.055,121.287],[240.959,121.679],[240.959,122.466],[240.959,122.859],[241.551,123.547],[242.332,124.041],[242.728,124.334],[243.517,124.43],[244.793,124.527],[245.092,124.925],[245.482,125.022],[245.876,125.319],[246.271,125.613],[247.251,125.711],[248.827,125.219],[249.219,123.745],[249.98,123.745],[250.986,124.527],[250.986,124.925],[251.381,125.711],[252.264,126.005],[253.447,125.219],[253.837,124.925],[254.723,124.334],[255.116,124.041],[256.123,123.745],[256.689,123.844],[258.827,123.769],[259.246,123.547],[259.639,123.351],[259.639,122.959],[260.033,122.174],[260.132,120.896],[260.918,120.5],[261.308,119.91],[261.308,119.718],[261.014,119.223],[261.014,118.584],[261.21,117.058],[261.408,116.667],[261.507,116.274],[261.702,115.877],[262.392,115.094],[262.783,114.802],[263.178,114.503],[263.371,114.109],[263.576,113.718],[263.576,113.322],[263.671,112.932],[263.965,112.533],[264.358,112.143],[264.751,111.947],[264.964,111.925],[265.243,111.851],[265.243,111.357],[265.342,110.968],[265.439,110.572],[265.439,109.688],[266.03,108.702],[266.522,107.817],[266.816,106.638],[266.917,106.248],[267.009,105.879],[267.009,103.862],[266.717,103.492],[266.522,103.101],[266.126,102.708],[265.831,102.314],[265.831,101.921],[265.831,101.53],[266.225,100.74],[266.225,99.956],[266.03,99.857],[266.03,98.679],[266.03,98.282],[265.637,97.792],[265.045,97.004],[264.751,96.614],[264.751,96.219],[264.556,95.825],[264.358,95.43],[263.965,95.136],[263.275,94.45],[262.882,94.155],[262.392,93.958],[262.098,93.49],[262.098,91.596],[261.308,91.499],[260.132,91.499],[259.639,91.304],[259.246,91.108],[258.655,90.322],[258.655,89.929],[258.556,89.53],[258.556,88.65],[258.376,88.661],[258.167,88.65],[257.772,88.455],[257.772,87.662],[257.379,87.566],[256.983,87.37],[256.199,86.978],[255.9,86.587],[255.507,86.291],[255.313,85.896],[254.822,85.6],[253.642,85.206],[253.149,85.011],[252.756,84.618],[252.756,83.832],[252.264,83.043],[252.264,82.554],[252.167,82.159],[251.973,81.766],[251.973,81.373],[251.973,80.983],[251.873,80.192],[251.873,79.799],[251.28,79.113],[250.79,78.721],[250.691,78.132],[250.887,77.342],[250.199,76.557],[249.806,76.557],[249.413,76.557],[249.02,76.359],[248.134,76.164],[247.743,75.971],[247.743,75.575],[247.743,75.18],[247.548,74.789],[247.548,74.393],[247.548,73.216],[247.154,72.82],[247.055,72.426],[246.66,72.035],[246.66,71.642],[246.568,70.856],[246.464,70.461],[245.777,69.773],[245.55,69.763],[245.383,69.773],[245.283,70.165],[245.184,70.952],[245.184,71.343],[244.894,71.741],[244.598,72.133],[244.107,72.92],[243.813,73.316],[243.714,74.101],[243.714,74.493],[244.007,74.883],[244.007,75.672],[244.007,76.455],[243.908,77.05],[243.714,77.54],[243.418,77.955],[243.418,81.251],[243.223,81.766],[242.824,81.965],[242.431,82.352],[241.842,82.455],[240.858,82.261],[240.658,82.26],[240.467,82.261],[240.074,81.965],[239.684,81.667],[239.684,81.276],[239.288,80.983],[237.912,79.997],[236.928,79.605],[236.436,79.408],[235.848,78.524],[235.652,78.132],[235.436,78.125],[235.254,78.132],[234.865,78.033],[234.641,78.039],[234.373,78.033],[233.978,77.838],[233.585,77.54],[233.681,77.175],[233.585,76.751],[233.783,75.745],[233.783,75.575],[233.585,75.18],[233.392,74.789],[233.585,74.393],[233.978,74.197],[234.077,73.804],[234.373,73.412],[234.668,72.92],[235.454,72.231],[235.551,71.839],[235.157,71.839],[234.373,71.642],[233.488,71.446],[233.095,71.446],[231.816,71.446],[231.326,71.249],[230.931,71.052],[230.537,71.052],[230.342,71.052],[230.146,71.052],[229.754,70.657],[229.358,70.461],[229.158,70.461],[228.965,70.461],[228.574,70.263],[228.181,70.165],[227.392,69.674],[227.258,69.663]],\"c\":true},\"ix\":2},\"nm\":\"Path 130\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":130,\"ty\":\"sh\",\"ix\":131,\"ks\":{\"a\":0,\"k\":{\"i\":[[0.338,-0.023],[0.34,0],[0,-0.245],[-0.197,-0.12],[-0.146,0],[-0.149,0.024],[-0.296,0.024],[0,0],[-0.297,0.022],[0,0],[0,0]],\"o\":[[-0.347,0.029],[-0.199,0.153],[0,0.251],[0.121,0.074],[0.171,0],[0.268,-0.048],[0,0],[0.295,-0.023],[0,0],[0,0],[-0.319,0.075]],\"v\":[[223.464,70.065],[222.579,70.065],[222.184,70.56],[222.381,71.148],[222.772,71.249],[223.168,71.052],[223.952,70.952],[224.344,70.952],[225.129,70.856],[225.129,70.065],[224.344,69.869]],\"c\":true},\"ix\":2},\"nm\":\"Path 131\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":131,\"ty\":\"sh\",\"ix\":132,\"ks\":{\"a\":0,\"k\":{\"i\":[[0.096,-0.07],[0,0]],\"o\":[[0,0],[-0.146,0.025]],\"v\":[[222.579,70.065],[222.969,69.97]],\"c\":true},\"ix\":2},\"nm\":\"Path 132\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":132,\"ty\":\"sh\",\"ix\":133,\"ks\":{\"a\":0,\"k\":{\"i\":[[0.046,-0.244],[0.098,-0.248],[0.244,-0.296],[0.197,-0.248],[0.147,-0.293],[0.099,-0.242],[0.099,-0.248],[0.167,0.013],[0.073,-0.121],[0.492,-0.341],[0.25,0],[0.282,0.023],[0.262,-0.021],[0.494,-0.293],[0.148,-0.246],[0.048,-0.246],[0.048,-0.247],[0,-0.687],[0,-0.289],[-0.099,-0.541],[-0.049,-0.347],[0,-0.293],[0.148,-0.248],[0.165,0.058],[0.07,-0.097],[0.147,-0.296],[0.048,-0.295],[0.147,-0.54],[0.048,-0.339],[0,0],[-0.098,-0.442],[0,-0.296],[0,0],[0,-0.3],[0,-0.588],[-0.295,0],[-0.591,0],[-0.248,-0.049],[-0.136,0.013],[-0.122,-0.024],[-0.3,0],[-0.294,0],[-0.171,-0.003],[-0.305,0.204],[-0.194,0.292],[-0.047,0.292],[0,0.298],[-0.148,0.886],[-0.048,0.241],[-0.149,0.348],[-0.051,0.341],[0,0.589],[-0.1,0.544],[-0.246,0.248],[-0.244,0.296],[0,0.392],[0,0.786],[-0.146,0.442],[0,0.344],[0,0],[0,0.295],[0,0],[-0.147,0.345],[-0.052,0.244],[0,0],[0.047,0.791],[0.047,0.538],[0.047,0.248],[0.296,0.244],[0.347,0.15],[0.249,0.099]],\"o\":[[-0.048,0.244],[-0.147,0.34],[-0.248,0.296],[-0.202,0.244],[-0.096,0.248],[-0.1,0.244],[-0.05,0.124],[-0.165,-0.013],[-0.295,0.494],[-0.196,0.101],[-0.3,0.057],[-0.224,-0.017],[-0.589,0.05],[-0.292,0.146],[-0.148,0.242],[-0.049,0.241],[-0.148,0.639],[0,0.296],[0,0.593],[0.052,0.341],[0.048,0.243],[0,0.296],[-0.076,0.126],[-0.155,-0.054],[-0.196,0.244],[-0.146,0.291],[-0.1,0.54],[-0.049,0.347],[0,0],[0,0.488],[0.047,0.245],[0,0],[0,0.296],[0.05,0.588],[0.294,0],[0.593,0],[0.297,0],[0.123,0.027],[0.133,-0.012],[0.246,0.054],[0.293,0],[0.181,-0.015],[0.384,0.008],[0.292,-0.195],[0.147,-0.249],[0.05,-0.245],[0.05,-0.931],[0.05,-0.244],[0.097,-0.348],[0.145,-0.34],[0.096,-0.541],[0,-0.589],[0.046,-0.34],[0.296,-0.29],[0.2,-0.25],[0,-0.785],[0,-0.496],[0.098,-0.293],[0,0],[0,-0.296],[0,0],[0,-0.391],[0.099,-0.245],[0,0],[0,-0.79],[0,-0.587],[0,-0.248],[-0.049,-0.345],[-0.295,-0.244],[-0.242,-0.099],[0,0.296]],\"v\":[[69.703,73.116],[69.703,73.905],[68.918,74.493],[68.329,75.279],[67.539,75.868],[67.344,76.654],[67.344,77.443],[66.966,77.542],[66.557,77.638],[65.965,79.211],[65.178,79.211],[64.326,79.224],[63.607,79.211],[62.034,79.605],[61.249,79.997],[61.249,80.787],[61.249,81.571],[60.462,83.142],[60.656,83.928],[60.656,85.503],[61.249,86.291],[61.249,87.074],[61.249,87.863],[60.84,87.874],[60.462,87.863],[60.066,88.65],[59.676,89.434],[59.676,91.007],[59.083,91.793],[59.083,92.189],[59.478,93.368],[59.676,94.155],[59.676,94.938],[59.871,95.73],[59.871,97.202],[60.656,97.3],[62.23,97.202],[62.626,97.887],[63.022,97.888],[63.411,97.887],[64.199,98.084],[64.984,97.887],[65.514,97.879],[66.557,97.692],[67.145,96.91],[67.539,96.119],[67.539,95.332],[67.539,92.973],[67.734,92.189],[68.329,91.4],[68.918,90.615],[68.918,89.044],[68.918,87.465],[69.703,86.877],[70.682,86.291],[71.471,85.699],[70.883,83.735],[71.276,82.554],[71.671,81.766],[71.671,80.983],[71.471,80.192],[71.471,79.799],[72.257,79.211],[72.456,78.425],[72.456,78.033],[72.062,76.062],[72.062,74.493],[72.062,73.705],[71.276,73.116],[70.487,72.525],[69.703,72.327]],\"c\":true},\"ix\":2},\"nm\":\"Path 133\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":133,\"ty\":\"sh\",\"ix\":134,\"ks\":{\"a\":0,\"k\":{\"i\":[[0.039,-0.004],[0.063,0.014],[0,0],[-0.095,-0.15],[-0.075,-0.124],[-0.127,-0.101],[-0.049,-0.196],[-0.049,-0.273],[-0.095,-0.145],[-0.144,-0.095],[-0.124,-0.072],[-0.466,-0.223],[-0.296,-0.119],[-0.147,-0.045],[-0.172,0],[0,0],[0.027,0.124],[0.1,0.148],[0.147,0.102],[0.122,0.05],[0.197,0.124],[0.22,0.123],[0.121,0.074],[0.073,0.201],[0.024,0.125],[0.296,0.222],[0.37,0.248],[0.196,0.05],[0.025,0]],\"o\":[[-0.069,0.006],[0,0],[0.097,0.15],[0.076,0.123],[0.073,0.12],[0.146,0.121],[0.05,0.271],[0.023,0.172],[0.101,0.145],[0.124,0.074],[0.439,0.295],[0.297,0.148],[0.146,0.052],[0.147,0.048],[0,0],[-0.02,-0.123],[-0.048,-0.171],[-0.099,-0.146],[-0.096,-0.046],[-0.221,-0.097],[-0.224,-0.122],[-0.124,-0.076],[-0.175,-0.1],[-0.024,-0.117],[-0.121,-0.367],[-0.343,-0.247],[-0.17,-0.096],[-0.025,-0.004],[-0.038,0]],\"v\":[[287.269,87.372],[287.068,87.37],[286.379,87.465],[286.673,87.863],[286.87,88.259],[287.267,88.455],[287.657,88.846],[287.657,89.633],[287.949,90.026],[288.245,90.417],[288.641,90.615],[289.92,91.206],[290.704,91.596],[291.097,91.793],[291.514,91.99],[292.374,91.99],[292.374,91.596],[292.079,91.206],[291.785,90.808],[291.392,90.712],[290.803,90.516],[290.311,90.026],[289.92,89.929],[289.525,89.53],[289.525,89.139],[288.835,88.354],[287.949,87.662],[287.46,87.37],[287.386,87.365]],\"c\":true},\"ix\":2},\"nm\":\"Path 134\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":134,\"ty\":\"sh\",\"ix\":135,\"ks\":{\"a\":0,\"k\":{\"i\":[[0,-0.244],[-0.124,-0.272],[-0.07,-0.145],[-0.219,-0.294],[-0.341,-0.268],[-0.099,-0.124],[-0.073,-0.147],[-0.051,-0.124],[-0.076,-0.149],[0,-0.295],[-0.047,-0.145],[-0.049,-0.145],[0,-0.194],[0,0],[0,0],[-0.05,-0.392],[0,-0.15],[0,0],[0,0],[0,0],[0,0],[-0.173,0.393],[-0.126,0.118],[-0.121,0.125],[-0.07,0.175],[-0.044,0.122],[-0.126,0.295],[-0.026,0.146],[0,0.291],[0,0],[-0.049,0.174],[-0.048,0.145],[-0.075,0.172],[-0.075,0.123],[-0.12,0.124],[-0.078,-0.025],[-0.036,0.047],[0,0.173],[0,0.15],[0.074,0.171],[0.271,0],[0.174,-0.121],[0.075,-0.098],[0.246,0],[0.393,0.027],[0,0],[0.144,0],[0.147,-0.024],[0,0],[0,0.323],[0.222,0.244],[0.196,0.118],[0.073,-0.017],[0.057,0.022],[0.046,-0.171],[0.023,-0.122],[0.074,-0.168],[0.126,0.1],[0.095,0.145],[0,0.242],[-0.023,0.217],[0,0.147],[0.049,0.099],[0.084,-0.023],[0.047,0.035],[0.098,0.1],[0.122,0.145],[0.098,0.125],[0.124,0.176],[0.096,0.169],[0.104,0.149],[0.169,0.075],[0.22,0]],\"o\":[[0,0.324],[0.05,0.149],[0.173,0.347],[0.273,0.346],[0.119,0.073],[0.097,0.125],[0.048,0.121],[0.075,0.172],[0,0.295],[0,0.177],[0.05,0.148],[0.072,0.177],[0,0],[0,0],[-0.02,0.392],[0,0.148],[0,0],[0,0],[0,0],[0,0],[0.024,-0.443],[0.074,-0.175],[0.122,-0.126],[0.123,-0.121],[0.054,-0.119],[0.15,-0.294],[0.046,-0.15],[0.047,-0.268],[0,0],[0.027,-0.201],[0.051,-0.151],[0.051,-0.172],[0.045,-0.124],[0.074,-0.147],[0.051,-0.05],[0.075,0.024],[0.101,-0.123],[0,-0.146],[0,-0.193],[-0.097,-0.228],[-0.246,0],[-0.099,0.076],[-0.147,0.176],[-0.391,0],[0,0],[-0.146,0],[-0.172,0],[0,0],[0.119,-0.295],[0,-0.344],[-0.147,-0.173],[-0.065,-0.041],[-0.062,0.014],[-0.075,0.172],[-0.024,0.124],[-0.049,0.171],[-0.12,-0.072],[-0.145,-0.121],[-0.151,-0.198],[0,-0.221],[0,-0.147],[0,-0.144],[-0.027,-0.051],[-0.076,0.02],[-0.126,-0.099],[-0.124,-0.118],[-0.099,-0.123],[-0.123,-0.171],[-0.124,-0.17],[-0.099,-0.147],[-0.096,-0.146],[-0.174,-0.073],[-0.242,0]],\"v\":[[303.094,117.058],[303.387,117.848],[303.582,118.237],[304.072,119.123],[304.96,119.91],[305.353,120.107],[305.548,120.5],[305.647,120.896],[305.943,121.287],[305.845,122.342],[305.943,122.761],[306.139,123.152],[306.434,123.573],[306.434,126.053],[304.465,126.053],[304.368,127.086],[304.465,127.482],[304.465,127.923],[306.999,127.923],[306.999,131.167],[308.694,131.167],[308.892,130.038],[309.287,129.745],[309.68,129.445],[310.069,129.149],[310.168,128.758],[310.566,127.973],[310.762,127.578],[310.762,126.795],[312.137,126.795],[312.137,126.3],[312.332,125.908],[312.629,125.515],[312.629,125.123],[312.92,124.729],[313.131,124.728],[313.314,124.729],[313.514,124.334],[313.415,123.938],[313.314,123.453],[312.725,123.055],[312.137,123.253],[312.137,123.645],[311.496,123.745],[310.467,123.645],[309.973,123.645],[309.581,123.547],[309.188,123.721],[309.09,122.859],[309.384,122.071],[308.793,121.386],[308.4,120.896],[308.189,120.89],[308.008,120.896],[307.714,121.287],[307.714,121.679],[307.415,122.071],[307.022,121.875],[306.73,121.485],[306.533,120.896],[306.632,120.306],[306.73,119.91],[306.632,119.518],[306.441,119.512],[306.238,119.518],[306.04,119.123],[305.647,118.829],[305.451,118.436],[305.059,118.041],[304.764,117.551],[304.465,117.157],[304.176,116.763],[303.582,116.667]],\"c\":true},\"ix\":2},\"nm\":\"Path 135\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":135,\"ty\":\"sh\",\"ix\":136,\"ks\":{\"a\":0,\"k\":{\"i\":[[0.017,-0.008],[0.124,-0.12],[0,-0.175],[-0.271,-0.413],[0,0],[0,0],[0.103,0]],\"o\":[[-0.151,0.075],[-0.119,0.124],[0,0.515],[0,0],[0,0],[-0.125,0],[-0.019,0]],\"v\":[[248.727,127.187],[248.332,127.382],[248.134,127.777],[248.727,128.954],[249.118,128.856],[249.118,127.282],[248.78,127.176]],\"c\":true},\"ix\":2},\"nm\":\"Path 136\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":136,\"ty\":\"sh\",\"ix\":137,\"ks\":{\"a\":0,\"k\":{\"i\":[[0.042,-0.006],[0.054,0.013],[0.147,0],[-0.022,-0.126],[-0.07,-0.125],[-0.149,-0.099],[-0.069,0.021],[-0.051,-0.051],[-0.049,-0.119],[-0.025,-0.12],[0,0],[0,0],[0.099,0.122],[0.075,0.125],[0.122,0.146],[0.099,0.048],[0.033,0]],\"o\":[[-0.063,0.009],[-0.128,-0.026],[0,0.147],[0.029,0.116],[0.096,0.147],[0.046,0.036],[0.076,-0.024],[0.099,0.097],[0.05,0.125],[0,0],[0,0],[0,-0.172],[-0.096,-0.125],[-0.098,-0.147],[-0.077,-0.101],[-0.025,-0.012],[-0.037,0]],\"v\":[[256.48,127.377],[256.298,127.382],[255.9,127.676],[255.9,128.073],[255.9,128.464],[256.298,128.758],[256.483,128.753],[256.689,128.758],[256.788,129.149],[256.886,129.545],[257.574,129.545],[257.574,128.784],[257.475,128.365],[257.082,128.167],[256.788,127.777],[256.689,127.382],[256.6,127.365]],\"c\":true},\"ix\":2},\"nm\":\"Path 137\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":137,\"ty\":\"sh\",\"ix\":138,\"ks\":{\"a\":0,\"k\":{\"i\":[[0.248,-0.076],[0.151,-0.126],[0.072,-0.097],[-0.019,-0.121],[-0.072,-0.32],[0,-0.121],[0,0],[-0.079,-0.146],[-0.173,-0.096],[-0.122,-0.097],[-0.173,-0.302],[-0.051,-0.123],[-0.071,-0.148],[-0.173,-0.339],[-0.198,-0.273],[-0.172,0],[0,0],[0.019,0.468],[0,0.079],[0,0],[0,0],[0,0.319],[-0.103,0.123],[-0.097,0.051],[-0.025,0.194],[0,0.143],[0,0.177],[0,0.148],[0,0.151],[0,0],[0.148,-0.024],[0.08,0.006],[0.084,-0.012],[0.168,0],[0.119,0.05],[0.126,0.099],[0.123,0.122],[0.121,0.12],[0.244,0]],\"o\":[[-0.17,0.049],[-0.096,0.07],[0.024,0.144],[0.101,0.321],[0.027,0.124],[0,0],[0,0.172],[0.097,0.195],[0.125,0.073],[0.271,0.194],[0.071,0.121],[0.068,0.171],[0.197,0.321],[0.145,0.301],[0.07,0.12],[0,0],[0.024,-0.471],[0,-0.07],[0,0],[0,0],[0,-0.32],[0,-0.171],[0.071,-0.095],[0.173,-0.124],[0.024,-0.123],[0,-0.177],[0,-0.147],[0,-0.148],[0,0],[-0.171,0],[-0.087,0.013],[-0.08,-0.006],[-0.148,0.026],[-0.151,0],[-0.173,-0.072],[-0.124,-0.097],[-0.126,-0.127],[-0.173,-0.177],[-0.269,0]],\"v\":[[250.691,129.545],[250.199,129.645],[250.103,130.038],[249.806,130.528],[250.199,131.316],[250.199,131.709],[250.199,132.101],[250.4,132.494],[250.79,132.887],[251.184,133.083],[251.873,133.775],[251.973,134.166],[252.264,134.557],[252.858,135.341],[253.249,136.135],[253.665,136.231],[254.574,136.231],[254.626,135.047],[254.574,134.851],[256.199,134.851],[256.199,133.847],[255.9,133.083],[256.1,132.689],[256.493,132.594],[256.886,132.2],[256.837,131.834],[256.886,131.411],[256.788,131.02],[256.837,130.627],[254.55,130.627],[254.133,130.823],[253.884,130.824],[253.642,130.823],[253.249,131.02],[252.858,130.921],[252.559,130.528],[252.167,130.234],[251.873,129.843],[251.381,129.445]],\"c\":true},\"ix\":2},\"nm\":\"Path 138\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":138,\"ty\":\"sh\",\"ix\":139,\"ks\":{\"a\":0,\"k\":{\"i\":[[0.369,-0.026],[0,0],[0,0],[0.123,-0.099],[0.074,-0.146],[0,-0.146],[0.023,-0.464],[0.269,-0.268],[0.345,-0.173],[0.296,-0.176],[0.347,-0.169],[0,0],[0.101,-0.05],[0.118,-0.096],[0.123,-0.101],[0.147,-0.075],[0.123,-0.052],[0.244,-0.199],[0.077,-0.12],[0.219,-0.242],[0.147,-0.099],[0.144,-0.072],[0.175,-0.048],[0.068,0.006],[0.061,-0.011],[0.146,-0.027],[0.022,-0.121],[0.027,-0.123],[0,-0.193],[-0.268,-0.177],[-0.146,-0.025],[-0.489,0],[-0.246,-0.121],[-0.149,-0.1],[-0.149,-0.099],[-0.318,0],[-0.151,0.021],[-0.075,0.022],[-0.122,0.096],[-0.117,0.077],[-0.148,0.047],[-0.465,0],[-0.102,0.366],[-0.099,0.144],[-0.296,0.248],[-0.075,0.2],[-0.052,0.275],[-0.077,0.269],[-0.047,0.146],[-0.051,0.118],[-0.146,0.098],[-0.319,0.048],[-0.146,0],[-0.464,0.025],[-0.145,0.029],[0.074,0.124],[0,0.242],[-0.221,0.318],[-0.346,0.171],[-0.126,0.046],[-0.122,0.099],[-0.05,0.196],[-0.026,0.121],[0,0.151],[0,0.165],[0,0],[0.421,0.023],[0.224,0.173],[0.049,0.097],[0.074,0.144],[0.147,0.098],[0.248,0]],\"o\":[[0,0],[0,0],[-0.147,0.074],[-0.146,0.099],[-0.075,0.126],[-0.05,0.465],[-0.026,0.394],[-0.269,0.274],[-0.319,0.17],[-0.321,0.193],[0,0],[-0.122,0.052],[-0.147,0.095],[-0.123,0.098],[-0.124,0.097],[-0.12,0.074],[-0.318,0.127],[-0.122,0.097],[-0.171,0.273],[-0.098,0.128],[-0.125,0.072],[-0.176,0.077],[-0.059,0.012],[-0.067,-0.005],[-0.124,0.024],[0,0.148],[-0.025,0.126],[-0.052,0.172],[0,0.32],[0.122,0.071],[0.469,0.126],[0.296,0],[0.175,0.072],[0.146,0.096],[0.248,0.15],[0.171,0],[0.072,0],[0.126,-0.072],[0.126,-0.103],[0.127,-0.068],[0.417,-0.17],[0,-0.39],[0.023,-0.178],[0.197,-0.321],[0.145,-0.123],[0.097,-0.268],[0.05,-0.27],[0.047,-0.153],[0.051,-0.124],[0.069,-0.174],[0.247,-0.199],[0.122,-0.03],[0.468,0],[0.152,0],[-0.07,-0.147],[-0.124,-0.199],[0,-0.42],[0.222,-0.294],[0.124,-0.049],[0.172,-0.079],[0.148,-0.125],[0.025,-0.118],[0.025,-0.125],[0,-0.168],[0,0],[-0.416,0],[-0.288,0],[-0.1,-0.075],[-0.07,-0.122],[-0.074,-0.148],[-0.196,-0.126],[-0.37,0]],\"v\":[[301.42,129.645],[301.42,131.512],[300.634,131.903],[300.24,132.101],[299.848,132.394],[299.848,132.791],[299.947,133.968],[299.357,134.753],[298.569,135.443],[297.684,135.839],[296.897,136.424],[296.504,136.62],[296.111,136.723],[295.819,137.115],[295.423,137.412],[295.126,137.805],[294.736,137.9],[293.85,138.198],[293.65,138.587],[293.261,139.373],[292.868,139.673],[292.478,139.865],[292.079,140.162],[291.887,140.162],[291.689,140.162],[291.296,140.262],[291.296,140.652],[291.197,141.047],[290.9,141.44],[291.392,142.131],[291.785,142.326],[293.064,142.326],[293.85,142.422],[294.243,142.718],[294.538,143.112],[295.374,143.31],[295.819,143.31],[296.012,143.112],[296.405,142.917],[296.6,142.52],[296.996,142.326],[298.175,142.225],[298.277,141.247],[298.569,140.852],[299.357,140.162],[299.751,139.769],[299.947,138.98],[300.145,138.198],[300.339,137.805],[300.441,137.412],[300.829,137.115],[301.618,136.723],[302.008,136.723],[303.188,136.723],[303.582,136.62],[303.387,136.231],[302.993,135.742],[303.483,134.753],[304.272,134.166],[304.665,134.071],[304.96,133.676],[305.353,133.277],[305.353,132.887],[305.353,132.494],[305.548,132.13],[305.548,130.921],[304.465,130.921],[303.681,130.823],[303.582,130.43],[303.387,130.038],[302.993,129.745],[302.378,129.545]],\"c\":true},\"ix\":2},\"nm\":\"Path 139\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ind\":139,\"ty\":\"sh\",\"ix\":140,\"ks\":{\"a\":0,\"k\":{\"i\":[[0.176,0.003],[0.056,-0.045],[0.125,-0.095],[0.081,0.017],[0.045,-0.02],[0.048,-0.073],[0,0],[0,0],[0,0.146]],\"o\":[[-0.157,-0.003],[-0.124,0.099],[-0.055,0.044],[-0.066,-0.014],[-0.097,0.052],[0,0],[0,0],[0,-0.145],[-0.065,0.064]],\"v\":[[293.723,144.252],[293.36,144.29],[293.163,144.68],[292.944,144.69],[292.769,144.68],[292.671,145.028],[294.243,145.028],[294.243,144.586],[294.147,144.195]],\"c\":true},\"ix\":2},\"nm\":\"Path 140\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ty\":\"fl\",\"c\":{\"a\":0,\"k\":[0,0.641469717026,0.868382334709,1],\"ix\":4},\"o\":{\"a\":0,\"k\":50,\"ix\":5},\"r\":1,\"bm\":0,\"nm\":\"Fill 1\",\"mn\":\"ADBE Vector Graphic - Fill\",\"hd\":false},{\"ty\":\"tr\",\"p\":{\"a\":0,\"k\":[337.65,165.187],\"ix\":2},\"a\":{\"a\":0,\"k\":[0,0],\"ix\":1},\"s\":{\"a\":0,\"k\":[100,100],\"ix\":3},\"r\":{\"a\":0,\"k\":0,\"ix\":6},\"o\":{\"a\":0,\"k\":100,\"ix\":7},\"sk\":{\"a\":0,\"k\":0,\"ix\":4},\"sa\":{\"a\":0,\"k\":0,\"ix\":5},\"nm\":\"Transform\"}],\"nm\":\"Group 1\",\"np\":142,\"cix\":2,\"bm\":0,\"ix\":3,\"mn\":\"ADBE Vector Group\",\"hd\":false},{\"ty\":\"tr\",\"p\":{\"a\":0,\"k\":[0,0],\"ix\":2},\"a\":{\"a\":0,\"k\":[0,0],\"ix\":1},\"s\":{\"a\":0,\"k\":[100,100],\"ix\":3},\"r\":{\"a\":0,\"k\":0,\"ix\":6},\"o\":{\"a\":0,\"k\":100,\"ix\":7},\"sk\":{\"a\":0,\"k\":0,\"ix\":4},\"sa\":{\"a\":0,\"k\":0,\"ix\":5},\"nm\":\"Transform\"}],\"nm\":\"Group 3\",\"np\":3,\"cix\":2,\"bm\":0,\"ix\":2,\"mn\":\"ADBE Vector Group\",\"hd\":false}],\"ip\":0,\"op\":1800,\"st\":0,\"bm\":0},{\"ddd\":0,\"ind\":7,\"ty\":3,\"nm\":\"Null 1\",\"parent\":8,\"sr\":1,\"ks\":{\"o\":{\"a\":0,\"k\":0,\"ix\":11},\"r\":{\"a\":1,\"k\":[{\"i\":{\"x\":[0.667],\"y\":[1]},\"o\":{\"x\":[0.333],\"y\":[0]},\"t\":0,\"s\":[-5]},{\"i\":{\"x\":[0.667],\"y\":[1]},\"o\":{\"x\":[0.333],\"y\":[0]},\"t\":900,\"s\":[5]},{\"t\":1800,\"s\":[-5]}],\"ix\":10},\"p\":{\"a\":0,\"k\":[0,0,0],\"ix\":2},\"a\":{\"a\":0,\"k\":[0,0,0],\"ix\":1},\"s\":{\"a\":0,\"k\":[100,100,100],\"ix\":6}},\"ao\":0,\"ip\":0,\"op\":1800,\"st\":0,\"bm\":0},{\"ddd\":0,\"ind\":8,\"ty\":4,\"nm\":\"Shape Layer 2\",\"sr\":1,\"ks\":{\"o\":{\"a\":0,\"k\":100,\"ix\":11},\"r\":{\"a\":0,\"k\":0,\"ix\":10},\"p\":{\"a\":0,\"k\":[960,544,0],\"ix\":2},\"a\":{\"a\":0,\"k\":[0,0,0],\"ix\":1},\"s\":{\"a\":0,\"k\":[200,200,100],\"ix\":6}},\"ao\":0,\"shapes\":[{\"ty\":\"gr\",\"it\":[{\"d\":1,\"ty\":\"el\",\"s\":{\"a\":0,\"k\":[426.211,426.211],\"ix\":2},\"p\":{\"a\":0,\"k\":[0,0],\"ix\":3},\"nm\":\"Ellipse Path 1\",\"mn\":\"ADBE Vector Shape - Ellipse\",\"hd\":false},{\"ty\":\"gf\",\"o\":{\"a\":0,\"k\":15,\"ix\":10},\"r\":1,\"bm\":0,\"g\":{\"p\":2,\"k\":{\"a\":0,\"k\":[0,1,1,1,1,0,0,0],\"ix\":9}},\"s\":{\"a\":0,\"k\":[0,-100],\"ix\":5},\"e\":{\"a\":0,\"k\":[0,100],\"ix\":6},\"t\":1,\"nm\":\"Gradient Fill 1\",\"mn\":\"ADBE Vector Graphic - G-Fill\",\"hd\":false},{\"ty\":\"tr\",\"p\":{\"a\":0,\"k\":[0,0],\"ix\":2},\"a\":{\"a\":0,\"k\":[0,0],\"ix\":1},\"s\":{\"a\":0,\"k\":[100,100],\"ix\":3},\"r\":{\"a\":0,\"k\":0,\"ix\":6},\"o\":{\"a\":0,\"k\":100,\"ix\":7},\"sk\":{\"a\":0,\"k\":0,\"ix\":4},\"sa\":{\"a\":0,\"k\":0,\"ix\":5},\"nm\":\"Transform\"}],\"nm\":\"Ellipse 2\",\"np\":2,\"cix\":2,\"bm\":0,\"ix\":1,\"mn\":\"ADBE Vector Group\",\"hd\":false}],\"ip\":0,\"op\":1800,\"st\":0,\"bm\":0},{\"ddd\":0,\"ind\":9,\"ty\":4,\"nm\":\"Shape Layer 3\",\"sr\":1,\"ks\":{\"o\":{\"a\":0,\"k\":100,\"ix\":11},\"r\":{\"a\":0,\"k\":0,\"ix\":10},\"p\":{\"a\":0,\"k\":[960,544,0],\"ix\":2},\"a\":{\"a\":0,\"k\":[0,0,0],\"ix\":1},\"s\":{\"a\":0,\"k\":[230,230,100],\"ix\":6}},\"ao\":0,\"shapes\":[{\"ty\":\"gr\",\"it\":[{\"d\":1,\"ty\":\"el\",\"s\":{\"a\":0,\"k\":[426.211,426.211],\"ix\":2},\"p\":{\"a\":0,\"k\":[0,0],\"ix\":3},\"nm\":\"Ellipse Path 1\",\"mn\":\"ADBE Vector Shape - Ellipse\",\"hd\":false},{\"ty\":\"gf\",\"o\":{\"a\":0,\"k\":5,\"ix\":10},\"r\":1,\"bm\":0,\"g\":{\"p\":5,\"k\":{\"a\":0,\"k\":[0,0,0,0,0.433,0.5,0.5,0.5,0.866,1,1,1,0.916,0.5,0.5,0.5,1,0,0,0],\"ix\":9}},\"s\":{\"a\":0,\"k\":[0,0],\"ix\":5},\"e\":{\"a\":0,\"k\":[0,214],\"ix\":6},\"t\":2,\"h\":{\"a\":0,\"k\":0,\"ix\":7},\"a\":{\"a\":0,\"k\":0,\"ix\":8},\"nm\":\"Gradient Fill 1\",\"mn\":\"ADBE Vector Graphic - G-Fill\",\"hd\":false},{\"ty\":\"tr\",\"p\":{\"a\":0,\"k\":[0,0],\"ix\":2},\"a\":{\"a\":0,\"k\":[0,0],\"ix\":1},\"s\":{\"a\":0,\"k\":[100,100],\"ix\":3},\"r\":{\"a\":0,\"k\":0,\"ix\":6},\"o\":{\"a\":0,\"k\":100,\"ix\":7},\"sk\":{\"a\":0,\"k\":0,\"ix\":4},\"sa\":{\"a\":0,\"k\":0,\"ix\":5},\"nm\":\"Transform\"}],\"nm\":\"Ellipse 2\",\"np\":2,\"cix\":2,\"bm\":0,\"ix\":1,\"mn\":\"ADBE Vector Group\",\"hd\":false}],\"ip\":0,\"op\":1800,\"st\":0,\"bm\":0}],\"markers\":[]}");

/***/ }),

/***/ "./constants/colors.js":
/*!*****************************!*\
  !*** ./constants/colors.js ***!
  \*****************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = ({
  blueShade: '#507CE2',
  lightBlueShade: '#42A5F5',
  findMeBlue: '#4284F3',
  purpleShade: '#8C6AEB',
  middleShade: '#6D73E6',
  lightGrey: '#ECEFF1',
  steelGrey: '#B0BEC5',
  darkGrey: '#263238',
  darkPurple: '#4527A0',
  linkColor: '#2980b9',
  transparentWhite: 'rgba(255,255,255,0.5)',
  translucentWhite: 'rgba(255,255,255,0.2)',
  transparentBlack: 'rgba(0,0,0,0.72)',
  googleGrey: 'rgb(106, 107, 111)',
  footerGrey: 'rgb(233, 234, 234)',
  //finMe_color_palette
  fmBackGround: '#F3F3F3',
  fmTextSelected: '#804284F3',
  fmGreenPrimary: '#0F9D58',
  fmRedPrimary: '#DB4437',
  fmBlueTransparent: 'rgba(66, 132, 243, 0.3)',
  fmBlueExtraTransparent: 'rgba(66, 132, 243, 0.1)'
});

/***/ }),

/***/ "./constants/pages.js":
/*!****************************!*\
  !*** ./constants/pages.js ***!
  \****************************/
/*! exports provided: HOME, PRODUCTS, BLOG */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "HOME", function() { return HOME; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "PRODUCTS", function() { return PRODUCTS; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "BLOG", function() { return BLOG; });
var HOME = 'HOME';
var PRODUCTS = 'PRODUCTS';
var BLOG = 'BLOG';

/***/ }),

/***/ "./node_modules/@babel/runtime/helpers/arrayWithHoles.js":
/*!***************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/arrayWithHoles.js ***!
  \***************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

function _arrayWithHoles(arr) {
  if (Array.isArray(arr)) return arr;
}

module.exports = _arrayWithHoles;

/***/ }),

/***/ "./node_modules/@babel/runtime/helpers/arrayWithoutHoles.js":
/*!******************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/arrayWithoutHoles.js ***!
  \******************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

function _arrayWithoutHoles(arr) {
  if (Array.isArray(arr)) {
    for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) {
      arr2[i] = arr[i];
    }

    return arr2;
  }
}

module.exports = _arrayWithoutHoles;

/***/ }),

/***/ "./node_modules/@babel/runtime/helpers/assertThisInitialized.js":
/*!**********************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/assertThisInitialized.js ***!
  \**********************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

function _assertThisInitialized(self) {
  if (self === void 0) {
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  }

  return self;
}

module.exports = _assertThisInitialized;

/***/ }),

/***/ "./node_modules/@babel/runtime/helpers/classCallCheck.js":
/*!***************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/classCallCheck.js ***!
  \***************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

function _classCallCheck(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}

module.exports = _classCallCheck;

/***/ }),

/***/ "./node_modules/@babel/runtime/helpers/construct.js":
/*!**********************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/construct.js ***!
  \**********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var setPrototypeOf = __webpack_require__(/*! ./setPrototypeOf */ "./node_modules/@babel/runtime/helpers/setPrototypeOf.js");

function isNativeReflectConstruct() {
  if (typeof Reflect === "undefined" || !Reflect.construct) return false;
  if (Reflect.construct.sham) return false;
  if (typeof Proxy === "function") return true;

  try {
    Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));
    return true;
  } catch (e) {
    return false;
  }
}

function _construct(Parent, args, Class) {
  if (isNativeReflectConstruct()) {
    module.exports = _construct = Reflect.construct;
  } else {
    module.exports = _construct = function _construct(Parent, args, Class) {
      var a = [null];
      a.push.apply(a, args);
      var Constructor = Function.bind.apply(Parent, a);
      var instance = new Constructor();
      if (Class) setPrototypeOf(instance, Class.prototype);
      return instance;
    };
  }

  return _construct.apply(null, arguments);
}

module.exports = _construct;

/***/ }),

/***/ "./node_modules/@babel/runtime/helpers/createClass.js":
/*!************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/createClass.js ***!
  \************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

function _defineProperties(target, props) {
  for (var i = 0; i < props.length; i++) {
    var descriptor = props[i];
    descriptor.enumerable = descriptor.enumerable || false;
    descriptor.configurable = true;
    if ("value" in descriptor) descriptor.writable = true;
    Object.defineProperty(target, descriptor.key, descriptor);
  }
}

function _createClass(Constructor, protoProps, staticProps) {
  if (protoProps) _defineProperties(Constructor.prototype, protoProps);
  if (staticProps) _defineProperties(Constructor, staticProps);
  return Constructor;
}

module.exports = _createClass;

/***/ }),

/***/ "./node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js":
/*!**************************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js ***!
  \**************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return _assertThisInitialized; });
function _assertThisInitialized(self) {
  if (self === void 0) {
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  }

  return self;
}

/***/ }),

/***/ "./node_modules/@babel/runtime/helpers/esm/classCallCheck.js":
/*!*******************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/esm/classCallCheck.js ***!
  \*******************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return _classCallCheck; });
function _classCallCheck(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}

/***/ }),

/***/ "./node_modules/@babel/runtime/helpers/esm/createClass.js":
/*!****************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/esm/createClass.js ***!
  \****************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return _createClass; });
function _defineProperties(target, props) {
  for (var i = 0; i < props.length; i++) {
    var descriptor = props[i];
    descriptor.enumerable = descriptor.enumerable || false;
    descriptor.configurable = true;
    if ("value" in descriptor) descriptor.writable = true;
    Object.defineProperty(target, descriptor.key, descriptor);
  }
}

function _createClass(Constructor, protoProps, staticProps) {
  if (protoProps) _defineProperties(Constructor.prototype, protoProps);
  if (staticProps) _defineProperties(Constructor, staticProps);
  return Constructor;
}

/***/ }),

/***/ "./node_modules/@babel/runtime/helpers/esm/extends.js":
/*!************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/esm/extends.js ***!
  \************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return _extends; });
function _extends() {
  _extends = Object.assign || function (target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];

      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }

    return target;
  };

  return _extends.apply(this, arguments);
}

/***/ }),

/***/ "./node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js":
/*!*******************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js ***!
  \*******************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return _getPrototypeOf; });
function _getPrototypeOf(o) {
  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {
    return o.__proto__ || Object.getPrototypeOf(o);
  };
  return _getPrototypeOf(o);
}

/***/ }),

/***/ "./node_modules/@babel/runtime/helpers/esm/inherits.js":
/*!*************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/esm/inherits.js ***!
  \*************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return _inherits; });
/* harmony import */ var _setPrototypeOf__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./setPrototypeOf */ "./node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js");

function _inherits(subClass, superClass) {
  if (typeof superClass !== "function" && superClass !== null) {
    throw new TypeError("Super expression must either be null or a function");
  }

  subClass.prototype = Object.create(superClass && superClass.prototype, {
    constructor: {
      value: subClass,
      writable: true,
      configurable: true
    }
  });
  if (superClass) Object(_setPrototypeOf__WEBPACK_IMPORTED_MODULE_0__["default"])(subClass, superClass);
}

/***/ }),

/***/ "./node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js ***!
  \*********************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return _objectWithoutPropertiesLoose; });
function _objectWithoutPropertiesLoose(source, excluded) {
  if (source == null) return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i;

  for (i = 0; i < sourceKeys.length; i++) {
    key = sourceKeys[i];
    if (excluded.indexOf(key) >= 0) continue;
    target[key] = source[key];
  }

  return target;
}

/***/ }),

/***/ "./node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn.js":
/*!******************************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn.js ***!
  \******************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return _possibleConstructorReturn; });
/* harmony import */ var _helpers_esm_typeof__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../helpers/esm/typeof */ "./node_modules/@babel/runtime/helpers/esm/typeof.js");
/* harmony import */ var _assertThisInitialized__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./assertThisInitialized */ "./node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js");


function _possibleConstructorReturn(self, call) {
  if (call && (Object(_helpers_esm_typeof__WEBPACK_IMPORTED_MODULE_0__["default"])(call) === "object" || typeof call === "function")) {
    return call;
  }

  return Object(_assertThisInitialized__WEBPACK_IMPORTED_MODULE_1__["default"])(self);
}

/***/ }),

/***/ "./node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js":
/*!*******************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js ***!
  \*******************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return _setPrototypeOf; });
function _setPrototypeOf(o, p) {
  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {
    o.__proto__ = p;
    return o;
  };

  return _setPrototypeOf(o, p);
}

/***/ }),

/***/ "./node_modules/@babel/runtime/helpers/esm/typeof.js":
/*!***********************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/esm/typeof.js ***!
  \***********************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return _typeof; });
function _typeof2(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof2 = function _typeof2(obj) { return typeof obj; }; } else { _typeof2 = function _typeof2(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof2(obj); }

function _typeof(obj) {
  if (typeof Symbol === "function" && _typeof2(Symbol.iterator) === "symbol") {
    _typeof = function _typeof(obj) {
      return _typeof2(obj);
    };
  } else {
    _typeof = function _typeof(obj) {
      return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : _typeof2(obj);
    };
  }

  return _typeof(obj);
}

/***/ }),

/***/ "./node_modules/@babel/runtime/helpers/getPrototypeOf.js":
/*!***************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/getPrototypeOf.js ***!
  \***************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

function _getPrototypeOf(o) {
  module.exports = _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {
    return o.__proto__ || Object.getPrototypeOf(o);
  };
  return _getPrototypeOf(o);
}

module.exports = _getPrototypeOf;

/***/ }),

/***/ "./node_modules/@babel/runtime/helpers/inherits.js":
/*!*********************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/inherits.js ***!
  \*********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var setPrototypeOf = __webpack_require__(/*! ./setPrototypeOf */ "./node_modules/@babel/runtime/helpers/setPrototypeOf.js");

function _inherits(subClass, superClass) {
  if (typeof superClass !== "function" && superClass !== null) {
    throw new TypeError("Super expression must either be null or a function");
  }

  subClass.prototype = Object.create(superClass && superClass.prototype, {
    constructor: {
      value: subClass,
      writable: true,
      configurable: true
    }
  });
  if (superClass) setPrototypeOf(subClass, superClass);
}

module.exports = _inherits;

/***/ }),

/***/ "./node_modules/@babel/runtime/helpers/interopRequireDefault.js":
/*!**********************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/interopRequireDefault.js ***!
  \**********************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : {
    "default": obj
  };
}

module.exports = _interopRequireDefault;

/***/ }),

/***/ "./node_modules/@babel/runtime/helpers/interopRequireWildcard.js":
/*!***********************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/interopRequireWildcard.js ***!
  \***********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var _typeof = __webpack_require__(/*! ../helpers/typeof */ "./node_modules/@babel/runtime/helpers/typeof.js");

function _getRequireWildcardCache() {
  if (typeof WeakMap !== "function") return null;
  var cache = new WeakMap();

  _getRequireWildcardCache = function _getRequireWildcardCache() {
    return cache;
  };

  return cache;
}

function _interopRequireWildcard(obj) {
  if (obj && obj.__esModule) {
    return obj;
  }

  if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") {
    return {
      "default": obj
    };
  }

  var cache = _getRequireWildcardCache();

  if (cache && cache.has(obj)) {
    return cache.get(obj);
  }

  var newObj = {};
  var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;

  for (var key in obj) {
    if (Object.prototype.hasOwnProperty.call(obj, key)) {
      var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;

      if (desc && (desc.get || desc.set)) {
        Object.defineProperty(newObj, key, desc);
      } else {
        newObj[key] = obj[key];
      }
    }
  }

  newObj["default"] = obj;

  if (cache) {
    cache.set(obj, newObj);
  }

  return newObj;
}

module.exports = _interopRequireWildcard;

/***/ }),

/***/ "./node_modules/@babel/runtime/helpers/iterableToArray.js":
/*!****************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/iterableToArray.js ***!
  \****************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

function _iterableToArray(iter) {
  if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === "[object Arguments]") return Array.from(iter);
}

module.exports = _iterableToArray;

/***/ }),

/***/ "./node_modules/@babel/runtime/helpers/iterableToArrayLimit.js":
/*!*********************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/iterableToArrayLimit.js ***!
  \*********************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

function _iterableToArrayLimit(arr, i) {
  if (!(Symbol.iterator in Object(arr) || Object.prototype.toString.call(arr) === "[object Arguments]")) {
    return;
  }

  var _arr = [];
  var _n = true;
  var _d = false;
  var _e = undefined;

  try {
    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {
      _arr.push(_s.value);

      if (i && _arr.length === i) break;
    }
  } catch (err) {
    _d = true;
    _e = err;
  } finally {
    try {
      if (!_n && _i["return"] != null) _i["return"]();
    } finally {
      if (_d) throw _e;
    }
  }

  return _arr;
}

module.exports = _iterableToArrayLimit;

/***/ }),

/***/ "./node_modules/@babel/runtime/helpers/nonIterableRest.js":
/*!****************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/nonIterableRest.js ***!
  \****************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

function _nonIterableRest() {
  throw new TypeError("Invalid attempt to destructure non-iterable instance");
}

module.exports = _nonIterableRest;

/***/ }),

/***/ "./node_modules/@babel/runtime/helpers/nonIterableSpread.js":
/*!******************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/nonIterableSpread.js ***!
  \******************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

function _nonIterableSpread() {
  throw new TypeError("Invalid attempt to spread non-iterable instance");
}

module.exports = _nonIterableSpread;

/***/ }),

/***/ "./node_modules/@babel/runtime/helpers/possibleConstructorReturn.js":
/*!**************************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/possibleConstructorReturn.js ***!
  \**************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var _typeof = __webpack_require__(/*! ../helpers/typeof */ "./node_modules/@babel/runtime/helpers/typeof.js");

var assertThisInitialized = __webpack_require__(/*! ./assertThisInitialized */ "./node_modules/@babel/runtime/helpers/assertThisInitialized.js");

function _possibleConstructorReturn(self, call) {
  if (call && (_typeof(call) === "object" || typeof call === "function")) {
    return call;
  }

  return assertThisInitialized(self);
}

module.exports = _possibleConstructorReturn;

/***/ }),

/***/ "./node_modules/@babel/runtime/helpers/setPrototypeOf.js":
/*!***************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/setPrototypeOf.js ***!
  \***************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

function _setPrototypeOf(o, p) {
  module.exports = _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {
    o.__proto__ = p;
    return o;
  };

  return _setPrototypeOf(o, p);
}

module.exports = _setPrototypeOf;

/***/ }),

/***/ "./node_modules/@babel/runtime/helpers/slicedToArray.js":
/*!**************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/slicedToArray.js ***!
  \**************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var arrayWithHoles = __webpack_require__(/*! ./arrayWithHoles */ "./node_modules/@babel/runtime/helpers/arrayWithHoles.js");

var iterableToArrayLimit = __webpack_require__(/*! ./iterableToArrayLimit */ "./node_modules/@babel/runtime/helpers/iterableToArrayLimit.js");

var nonIterableRest = __webpack_require__(/*! ./nonIterableRest */ "./node_modules/@babel/runtime/helpers/nonIterableRest.js");

function _slicedToArray(arr, i) {
  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || nonIterableRest();
}

module.exports = _slicedToArray;

/***/ }),

/***/ "./node_modules/@babel/runtime/helpers/toConsumableArray.js":
/*!******************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/toConsumableArray.js ***!
  \******************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var arrayWithoutHoles = __webpack_require__(/*! ./arrayWithoutHoles */ "./node_modules/@babel/runtime/helpers/arrayWithoutHoles.js");

var iterableToArray = __webpack_require__(/*! ./iterableToArray */ "./node_modules/@babel/runtime/helpers/iterableToArray.js");

var nonIterableSpread = __webpack_require__(/*! ./nonIterableSpread */ "./node_modules/@babel/runtime/helpers/nonIterableSpread.js");

function _toConsumableArray(arr) {
  return arrayWithoutHoles(arr) || iterableToArray(arr) || nonIterableSpread();
}

module.exports = _toConsumableArray;

/***/ }),

/***/ "./node_modules/@babel/runtime/helpers/typeof.js":
/*!*******************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/typeof.js ***!
  \*******************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

function _typeof2(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof2 = function _typeof2(obj) { return typeof obj; }; } else { _typeof2 = function _typeof2(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof2(obj); }

function _typeof(obj) {
  if (typeof Symbol === "function" && _typeof2(Symbol.iterator) === "symbol") {
    module.exports = _typeof = function _typeof(obj) {
      return _typeof2(obj);
    };
  } else {
    module.exports = _typeof = function _typeof(obj) {
      return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : _typeof2(obj);
    };
  }

  return _typeof(obj);
}

module.exports = _typeof;

/***/ }),

/***/ "./node_modules/@babel/runtime/regenerator/index.js":
/*!**********************************************************!*\
  !*** ./node_modules/@babel/runtime/regenerator/index.js ***!
  \**********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__(/*! regenerator-runtime */ "./node_modules/regenerator-runtime/runtime.js");


/***/ }),

/***/ "./node_modules/@emotion/is-prop-valid/dist/is-prop-valid.browser.esm.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/@emotion/is-prop-valid/dist/is-prop-valid.browser.esm.js ***!
  \*******************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _emotion_memoize__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @emotion/memoize */ "./node_modules/@emotion/memoize/dist/memoize.browser.esm.js");


var reactPropsRegex = /^((children|dangerouslySetInnerHTML|key|ref|autoFocus|defaultValue|defaultChecked|innerHTML|suppressContentEditableWarning|suppressHydrationWarning|valueLink|accept|acceptCharset|accessKey|action|allow|allowUserMedia|allowPaymentRequest|allowFullScreen|allowTransparency|alt|async|autoComplete|autoPlay|capture|cellPadding|cellSpacing|challenge|charSet|checked|cite|classID|className|cols|colSpan|content|contentEditable|contextMenu|controls|controlsList|coords|crossOrigin|data|dateTime|decoding|default|defer|dir|disabled|disablePictureInPicture|download|draggable|encType|form|formAction|formEncType|formMethod|formNoValidate|formTarget|frameBorder|headers|height|hidden|high|href|hrefLang|htmlFor|httpEquiv|id|inputMode|integrity|is|keyParams|keyType|kind|label|lang|list|loading|loop|low|marginHeight|marginWidth|max|maxLength|media|mediaGroup|method|min|minLength|multiple|muted|name|nonce|noValidate|open|optimum|pattern|placeholder|playsInline|poster|preload|profile|radioGroup|readOnly|referrerPolicy|rel|required|reversed|role|rows|rowSpan|sandbox|scope|scoped|scrolling|seamless|selected|shape|size|sizes|slot|span|spellCheck|src|srcDoc|srcLang|srcSet|start|step|style|summary|tabIndex|target|title|type|useMap|value|width|wmode|wrap|about|datatype|inlist|prefix|property|resource|typeof|vocab|autoCapitalize|autoCorrect|autoSave|color|inert|itemProp|itemScope|itemType|itemID|itemRef|on|results|security|unselectable|accentHeight|accumulate|additive|alignmentBaseline|allowReorder|alphabetic|amplitude|arabicForm|ascent|attributeName|attributeType|autoReverse|azimuth|baseFrequency|baselineShift|baseProfile|bbox|begin|bias|by|calcMode|capHeight|clip|clipPathUnits|clipPath|clipRule|colorInterpolation|colorInterpolationFilters|colorProfile|colorRendering|contentScriptType|contentStyleType|cursor|cx|cy|d|decelerate|descent|diffuseConstant|direction|display|divisor|dominantBaseline|dur|dx|dy|edgeMode|elevation|enableBackground|end|exponent|externalResourcesRequired|fill|fillOpacity|fillRule|filter|filterRes|filterUnits|floodColor|floodOpacity|focusable|fontFamily|fontSize|fontSizeAdjust|fontStretch|fontStyle|fontVariant|fontWeight|format|from|fr|fx|fy|g1|g2|glyphName|glyphOrientationHorizontal|glyphOrientationVertical|glyphRef|gradientTransform|gradientUnits|hanging|horizAdvX|horizOriginX|ideographic|imageRendering|in|in2|intercept|k|k1|k2|k3|k4|kernelMatrix|kernelUnitLength|kerning|keyPoints|keySplines|keyTimes|lengthAdjust|letterSpacing|lightingColor|limitingConeAngle|local|markerEnd|markerMid|markerStart|markerHeight|markerUnits|markerWidth|mask|maskContentUnits|maskUnits|mathematical|mode|numOctaves|offset|opacity|operator|order|orient|orientation|origin|overflow|overlinePosition|overlineThickness|panose1|paintOrder|pathLength|patternContentUnits|patternTransform|patternUnits|pointerEvents|points|pointsAtX|pointsAtY|pointsAtZ|preserveAlpha|preserveAspectRatio|primitiveUnits|r|radius|refX|refY|renderingIntent|repeatCount|repeatDur|requiredExtensions|requiredFeatures|restart|result|rotate|rx|ry|scale|seed|shapeRendering|slope|spacing|specularConstant|specularExponent|speed|spreadMethod|startOffset|stdDeviation|stemh|stemv|stitchTiles|stopColor|stopOpacity|strikethroughPosition|strikethroughThickness|string|stroke|strokeDasharray|strokeDashoffset|strokeLinecap|strokeLinejoin|strokeMiterlimit|strokeOpacity|strokeWidth|surfaceScale|systemLanguage|tableValues|targetX|targetY|textAnchor|textDecoration|textRendering|textLength|to|transform|u1|u2|underlinePosition|underlineThickness|unicode|unicodeBidi|unicodeRange|unitsPerEm|vAlphabetic|vHanging|vIdeographic|vMathematical|values|vectorEffect|version|vertAdvY|vertOriginX|vertOriginY|viewBox|viewTarget|visibility|widths|wordSpacing|writingMode|x|xHeight|x1|x2|xChannelSelector|xlinkActuate|xlinkArcrole|xlinkHref|xlinkRole|xlinkShow|xlinkTitle|xlinkType|xmlBase|xmlns|xmlnsXlink|xmlLang|xmlSpace|y|y1|y2|yChannelSelector|z|zoomAndPan|for|class|autofocus)|(([Dd][Aa][Tt][Aa]|[Aa][Rr][Ii][Aa]|x)-.*))$/; // https://esbench.com/bench/5bfee68a4cd7e6009ef61d23

var index = Object(_emotion_memoize__WEBPACK_IMPORTED_MODULE_0__["default"])(function (prop) {
  return reactPropsRegex.test(prop) || prop.charCodeAt(0) === 111
  /* o */
  && prop.charCodeAt(1) === 110
  /* n */
  && prop.charCodeAt(2) < 91;
}
/* Z+1 */
);

/* harmony default export */ __webpack_exports__["default"] = (index);


/***/ }),

/***/ "./node_modules/@emotion/memoize/dist/memoize.browser.esm.js":
/*!*******************************************************************!*\
  !*** ./node_modules/@emotion/memoize/dist/memoize.browser.esm.js ***!
  \*******************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
function memoize(fn) {
  var cache = {};
  return function (arg) {
    if (cache[arg] === undefined) cache[arg] = fn(arg);
    return cache[arg];
  };
}

/* harmony default export */ __webpack_exports__["default"] = (memoize);


/***/ }),

/***/ "./node_modules/@emotion/stylis/dist/stylis.browser.esm.js":
/*!*****************************************************************!*\
  !*** ./node_modules/@emotion/stylis/dist/stylis.browser.esm.js ***!
  \*****************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
function stylis_min (W) {
  function M(d, c, e, h, a) {
    for (var m = 0, b = 0, v = 0, n = 0, q, g, x = 0, K = 0, k, u = k = q = 0, l = 0, r = 0, I = 0, t = 0, B = e.length, J = B - 1, y, f = '', p = '', F = '', G = '', C; l < B;) {
      g = e.charCodeAt(l);
      l === J && 0 !== b + n + v + m && (0 !== b && (g = 47 === b ? 10 : 47), n = v = m = 0, B++, J++);

      if (0 === b + n + v + m) {
        if (l === J && (0 < r && (f = f.replace(N, '')), 0 < f.trim().length)) {
          switch (g) {
            case 32:
            case 9:
            case 59:
            case 13:
            case 10:
              break;

            default:
              f += e.charAt(l);
          }

          g = 59;
        }

        switch (g) {
          case 123:
            f = f.trim();
            q = f.charCodeAt(0);
            k = 1;

            for (t = ++l; l < B;) {
              switch (g = e.charCodeAt(l)) {
                case 123:
                  k++;
                  break;

                case 125:
                  k--;
                  break;

                case 47:
                  switch (g = e.charCodeAt(l + 1)) {
                    case 42:
                    case 47:
                      a: {
                        for (u = l + 1; u < J; ++u) {
                          switch (e.charCodeAt(u)) {
                            case 47:
                              if (42 === g && 42 === e.charCodeAt(u - 1) && l + 2 !== u) {
                                l = u + 1;
                                break a;
                              }

                              break;

                            case 10:
                              if (47 === g) {
                                l = u + 1;
                                break a;
                              }

                          }
                        }

                        l = u;
                      }

                  }

                  break;

                case 91:
                  g++;

                case 40:
                  g++;

                case 34:
                case 39:
                  for (; l++ < J && e.charCodeAt(l) !== g;) {
                  }

              }

              if (0 === k) break;
              l++;
            }

            k = e.substring(t, l);
            0 === q && (q = (f = f.replace(ca, '').trim()).charCodeAt(0));

            switch (q) {
              case 64:
                0 < r && (f = f.replace(N, ''));
                g = f.charCodeAt(1);

                switch (g) {
                  case 100:
                  case 109:
                  case 115:
                  case 45:
                    r = c;
                    break;

                  default:
                    r = O;
                }

                k = M(c, r, k, g, a + 1);
                t = k.length;
                0 < A && (r = X(O, f, I), C = H(3, k, r, c, D, z, t, g, a, h), f = r.join(''), void 0 !== C && 0 === (t = (k = C.trim()).length) && (g = 0, k = ''));
                if (0 < t) switch (g) {
                  case 115:
                    f = f.replace(da, ea);

                  case 100:
                  case 109:
                  case 45:
                    k = f + '{' + k + '}';
                    break;

                  case 107:
                    f = f.replace(fa, '$1 $2');
                    k = f + '{' + k + '}';
                    k = 1 === w || 2 === w && L('@' + k, 3) ? '@-webkit-' + k + '@' + k : '@' + k;
                    break;

                  default:
                    k = f + k, 112 === h && (k = (p += k, ''));
                } else k = '';
                break;

              default:
                k = M(c, X(c, f, I), k, h, a + 1);
            }

            F += k;
            k = I = r = u = q = 0;
            f = '';
            g = e.charCodeAt(++l);
            break;

          case 125:
          case 59:
            f = (0 < r ? f.replace(N, '') : f).trim();
            if (1 < (t = f.length)) switch (0 === u && (q = f.charCodeAt(0), 45 === q || 96 < q && 123 > q) && (t = (f = f.replace(' ', ':')).length), 0 < A && void 0 !== (C = H(1, f, c, d, D, z, p.length, h, a, h)) && 0 === (t = (f = C.trim()).length) && (f = '\x00\x00'), q = f.charCodeAt(0), g = f.charCodeAt(1), q) {
              case 0:
                break;

              case 64:
                if (105 === g || 99 === g) {
                  G += f + e.charAt(l);
                  break;
                }

              default:
                58 !== f.charCodeAt(t - 1) && (p += P(f, q, g, f.charCodeAt(2)));
            }
            I = r = u = q = 0;
            f = '';
            g = e.charCodeAt(++l);
        }
      }

      switch (g) {
        case 13:
        case 10:
          47 === b ? b = 0 : 0 === 1 + q && 107 !== h && 0 < f.length && (r = 1, f += '\x00');
          0 < A * Y && H(0, f, c, d, D, z, p.length, h, a, h);
          z = 1;
          D++;
          break;

        case 59:
        case 125:
          if (0 === b + n + v + m) {
            z++;
            break;
          }

        default:
          z++;
          y = e.charAt(l);

          switch (g) {
            case 9:
            case 32:
              if (0 === n + m + b) switch (x) {
                case 44:
                case 58:
                case 9:
                case 32:
                  y = '';
                  break;

                default:
                  32 !== g && (y = ' ');
              }
              break;

            case 0:
              y = '\\0';
              break;

            case 12:
              y = '\\f';
              break;

            case 11:
              y = '\\v';
              break;

            case 38:
              0 === n + b + m && (r = I = 1, y = '\f' + y);
              break;

            case 108:
              if (0 === n + b + m + E && 0 < u) switch (l - u) {
                case 2:
                  112 === x && 58 === e.charCodeAt(l - 3) && (E = x);

                case 8:
                  111 === K && (E = K);
              }
              break;

            case 58:
              0 === n + b + m && (u = l);
              break;

            case 44:
              0 === b + v + n + m && (r = 1, y += '\r');
              break;

            case 34:
            case 39:
              0 === b && (n = n === g ? 0 : 0 === n ? g : n);
              break;

            case 91:
              0 === n + b + v && m++;
              break;

            case 93:
              0 === n + b + v && m--;
              break;

            case 41:
              0 === n + b + m && v--;
              break;

            case 40:
              if (0 === n + b + m) {
                if (0 === q) switch (2 * x + 3 * K) {
                  case 533:
                    break;

                  default:
                    q = 1;
                }
                v++;
              }

              break;

            case 64:
              0 === b + v + n + m + u + k && (k = 1);
              break;

            case 42:
            case 47:
              if (!(0 < n + m + v)) switch (b) {
                case 0:
                  switch (2 * g + 3 * e.charCodeAt(l + 1)) {
                    case 235:
                      b = 47;
                      break;

                    case 220:
                      t = l, b = 42;
                  }

                  break;

                case 42:
                  47 === g && 42 === x && t + 2 !== l && (33 === e.charCodeAt(t + 2) && (p += e.substring(t, l + 1)), y = '', b = 0);
              }
          }

          0 === b && (f += y);
      }

      K = x;
      x = g;
      l++;
    }

    t = p.length;

    if (0 < t) {
      r = c;
      if (0 < A && (C = H(2, p, r, d, D, z, t, h, a, h), void 0 !== C && 0 === (p = C).length)) return G + p + F;
      p = r.join(',') + '{' + p + '}';

      if (0 !== w * E) {
        2 !== w || L(p, 2) || (E = 0);

        switch (E) {
          case 111:
            p = p.replace(ha, ':-moz-$1') + p;
            break;

          case 112:
            p = p.replace(Q, '::-webkit-input-$1') + p.replace(Q, '::-moz-$1') + p.replace(Q, ':-ms-input-$1') + p;
        }

        E = 0;
      }
    }

    return G + p + F;
  }

  function X(d, c, e) {
    var h = c.trim().split(ia);
    c = h;
    var a = h.length,
        m = d.length;

    switch (m) {
      case 0:
      case 1:
        var b = 0;

        for (d = 0 === m ? '' : d[0] + ' '; b < a; ++b) {
          c[b] = Z(d, c[b], e).trim();
        }

        break;

      default:
        var v = b = 0;

        for (c = []; b < a; ++b) {
          for (var n = 0; n < m; ++n) {
            c[v++] = Z(d[n] + ' ', h[b], e).trim();
          }
        }

    }

    return c;
  }

  function Z(d, c, e) {
    var h = c.charCodeAt(0);
    33 > h && (h = (c = c.trim()).charCodeAt(0));

    switch (h) {
      case 38:
        return c.replace(F, '$1' + d.trim());

      case 58:
        return d.trim() + c.replace(F, '$1' + d.trim());

      default:
        if (0 < 1 * e && 0 < c.indexOf('\f')) return c.replace(F, (58 === d.charCodeAt(0) ? '' : '$1') + d.trim());
    }

    return d + c;
  }

  function P(d, c, e, h) {
    var a = d + ';',
        m = 2 * c + 3 * e + 4 * h;

    if (944 === m) {
      d = a.indexOf(':', 9) + 1;
      var b = a.substring(d, a.length - 1).trim();
      b = a.substring(0, d).trim() + b + ';';
      return 1 === w || 2 === w && L(b, 1) ? '-webkit-' + b + b : b;
    }

    if (0 === w || 2 === w && !L(a, 1)) return a;

    switch (m) {
      case 1015:
        return 97 === a.charCodeAt(10) ? '-webkit-' + a + a : a;

      case 951:
        return 116 === a.charCodeAt(3) ? '-webkit-' + a + a : a;

      case 963:
        return 110 === a.charCodeAt(5) ? '-webkit-' + a + a : a;

      case 1009:
        if (100 !== a.charCodeAt(4)) break;

      case 969:
      case 942:
        return '-webkit-' + a + a;

      case 978:
        return '-webkit-' + a + '-moz-' + a + a;

      case 1019:
      case 983:
        return '-webkit-' + a + '-moz-' + a + '-ms-' + a + a;

      case 883:
        if (45 === a.charCodeAt(8)) return '-webkit-' + a + a;
        if (0 < a.indexOf('image-set(', 11)) return a.replace(ja, '$1-webkit-$2') + a;
        break;

      case 932:
        if (45 === a.charCodeAt(4)) switch (a.charCodeAt(5)) {
          case 103:
            return '-webkit-box-' + a.replace('-grow', '') + '-webkit-' + a + '-ms-' + a.replace('grow', 'positive') + a;

          case 115:
            return '-webkit-' + a + '-ms-' + a.replace('shrink', 'negative') + a;

          case 98:
            return '-webkit-' + a + '-ms-' + a.replace('basis', 'preferred-size') + a;
        }
        return '-webkit-' + a + '-ms-' + a + a;

      case 964:
        return '-webkit-' + a + '-ms-flex-' + a + a;

      case 1023:
        if (99 !== a.charCodeAt(8)) break;
        b = a.substring(a.indexOf(':', 15)).replace('flex-', '').replace('space-between', 'justify');
        return '-webkit-box-pack' + b + '-webkit-' + a + '-ms-flex-pack' + b + a;

      case 1005:
        return ka.test(a) ? a.replace(aa, ':-webkit-') + a.replace(aa, ':-moz-') + a : a;

      case 1e3:
        b = a.substring(13).trim();
        c = b.indexOf('-') + 1;

        switch (b.charCodeAt(0) + b.charCodeAt(c)) {
          case 226:
            b = a.replace(G, 'tb');
            break;

          case 232:
            b = a.replace(G, 'tb-rl');
            break;

          case 220:
            b = a.replace(G, 'lr');
            break;

          default:
            return a;
        }

        return '-webkit-' + a + '-ms-' + b + a;

      case 1017:
        if (-1 === a.indexOf('sticky', 9)) break;

      case 975:
        c = (a = d).length - 10;
        b = (33 === a.charCodeAt(c) ? a.substring(0, c) : a).substring(d.indexOf(':', 7) + 1).trim();

        switch (m = b.charCodeAt(0) + (b.charCodeAt(7) | 0)) {
          case 203:
            if (111 > b.charCodeAt(8)) break;

          case 115:
            a = a.replace(b, '-webkit-' + b) + ';' + a;
            break;

          case 207:
          case 102:
            a = a.replace(b, '-webkit-' + (102 < m ? 'inline-' : '') + 'box') + ';' + a.replace(b, '-webkit-' + b) + ';' + a.replace(b, '-ms-' + b + 'box') + ';' + a;
        }

        return a + ';';

      case 938:
        if (45 === a.charCodeAt(5)) switch (a.charCodeAt(6)) {
          case 105:
            return b = a.replace('-items', ''), '-webkit-' + a + '-webkit-box-' + b + '-ms-flex-' + b + a;

          case 115:
            return '-webkit-' + a + '-ms-flex-item-' + a.replace(ba, '') + a;

          default:
            return '-webkit-' + a + '-ms-flex-line-pack' + a.replace('align-content', '').replace(ba, '') + a;
        }
        break;

      case 973:
      case 989:
        if (45 !== a.charCodeAt(3) || 122 === a.charCodeAt(4)) break;

      case 931:
      case 953:
        if (!0 === la.test(d)) return 115 === (b = d.substring(d.indexOf(':') + 1)).charCodeAt(0) ? P(d.replace('stretch', 'fill-available'), c, e, h).replace(':fill-available', ':stretch') : a.replace(b, '-webkit-' + b) + a.replace(b, '-moz-' + b.replace('fill-', '')) + a;
        break;

      case 962:
        if (a = '-webkit-' + a + (102 === a.charCodeAt(5) ? '-ms-' + a : '') + a, 211 === e + h && 105 === a.charCodeAt(13) && 0 < a.indexOf('transform', 10)) return a.substring(0, a.indexOf(';', 27) + 1).replace(ma, '$1-webkit-$2') + a;
    }

    return a;
  }

  function L(d, c) {
    var e = d.indexOf(1 === c ? ':' : '{'),
        h = d.substring(0, 3 !== c ? e : 10);
    e = d.substring(e + 1, d.length - 1);
    return R(2 !== c ? h : h.replace(na, '$1'), e, c);
  }

  function ea(d, c) {
    var e = P(c, c.charCodeAt(0), c.charCodeAt(1), c.charCodeAt(2));
    return e !== c + ';' ? e.replace(oa, ' or ($1)').substring(4) : '(' + c + ')';
  }

  function H(d, c, e, h, a, m, b, v, n, q) {
    for (var g = 0, x = c, w; g < A; ++g) {
      switch (w = S[g].call(B, d, x, e, h, a, m, b, v, n, q)) {
        case void 0:
        case !1:
        case !0:
        case null:
          break;

        default:
          x = w;
      }
    }

    if (x !== c) return x;
  }

  function T(d) {
    switch (d) {
      case void 0:
      case null:
        A = S.length = 0;
        break;

      default:
        if ('function' === typeof d) S[A++] = d;else if ('object' === typeof d) for (var c = 0, e = d.length; c < e; ++c) {
          T(d[c]);
        } else Y = !!d | 0;
    }

    return T;
  }

  function U(d) {
    d = d.prefix;
    void 0 !== d && (R = null, d ? 'function' !== typeof d ? w = 1 : (w = 2, R = d) : w = 0);
    return U;
  }

  function B(d, c) {
    var e = d;
    33 > e.charCodeAt(0) && (e = e.trim());
    V = e;
    e = [V];

    if (0 < A) {
      var h = H(-1, c, e, e, D, z, 0, 0, 0, 0);
      void 0 !== h && 'string' === typeof h && (c = h);
    }

    var a = M(O, e, c, 0, 0);
    0 < A && (h = H(-2, a, e, e, D, z, a.length, 0, 0, 0), void 0 !== h && (a = h));
    V = '';
    E = 0;
    z = D = 1;
    return a;
  }

  var ca = /^\0+/g,
      N = /[\0\r\f]/g,
      aa = /: */g,
      ka = /zoo|gra/,
      ma = /([,: ])(transform)/g,
      ia = /,\r+?/g,
      F = /([\t\r\n ])*\f?&/g,
      fa = /@(k\w+)\s*(\S*)\s*/,
      Q = /::(place)/g,
      ha = /:(read-only)/g,
      G = /[svh]\w+-[tblr]{2}/,
      da = /\(\s*(.*)\s*\)/g,
      oa = /([\s\S]*?);/g,
      ba = /-self|flex-/g,
      na = /[^]*?(:[rp][el]a[\w-]+)[^]*/,
      la = /stretch|:\s*\w+\-(?:conte|avail)/,
      ja = /([^-])(image-set\()/,
      z = 1,
      D = 1,
      E = 0,
      w = 1,
      O = [],
      S = [],
      A = 0,
      R = null,
      Y = 0,
      V = '';
  B.use = T;
  B.set = U;
  void 0 !== W && U(W);
  return B;
}

/* harmony default export */ __webpack_exports__["default"] = (stylis_min);


/***/ }),

/***/ "./node_modules/@emotion/unitless/dist/unitless.browser.esm.js":
/*!*********************************************************************!*\
  !*** ./node_modules/@emotion/unitless/dist/unitless.browser.esm.js ***!
  \*********************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
var unitlessKeys = {
  animationIterationCount: 1,
  borderImageOutset: 1,
  borderImageSlice: 1,
  borderImageWidth: 1,
  boxFlex: 1,
  boxFlexGroup: 1,
  boxOrdinalGroup: 1,
  columnCount: 1,
  columns: 1,
  flex: 1,
  flexGrow: 1,
  flexPositive: 1,
  flexShrink: 1,
  flexNegative: 1,
  flexOrder: 1,
  gridRow: 1,
  gridRowEnd: 1,
  gridRowSpan: 1,
  gridRowStart: 1,
  gridColumn: 1,
  gridColumnEnd: 1,
  gridColumnSpan: 1,
  gridColumnStart: 1,
  msGridRow: 1,
  msGridRowSpan: 1,
  msGridColumn: 1,
  msGridColumnSpan: 1,
  fontWeight: 1,
  lineHeight: 1,
  opacity: 1,
  order: 1,
  orphans: 1,
  tabSize: 1,
  widows: 1,
  zIndex: 1,
  zoom: 1,
  WebkitLineClamp: 1,
  // SVG-related properties
  fillOpacity: 1,
  floodOpacity: 1,
  stopOpacity: 1,
  strokeDasharray: 1,
  strokeDashoffset: 1,
  strokeMiterlimit: 1,
  strokeOpacity: 1,
  strokeWidth: 1
};

/* harmony default export */ __webpack_exports__["default"] = (unitlessKeys);


/***/ }),

/***/ "./node_modules/babel-runtime/core-js/object/assign.js":
/*!*************************************************************!*\
  !*** ./node_modules/babel-runtime/core-js/object/assign.js ***!
  \*************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

module.exports = { "default": __webpack_require__(/*! core-js/library/fn/object/assign */ "./node_modules/core-js/library/fn/object/assign.js"), __esModule: true };

/***/ }),

/***/ "./node_modules/babel-runtime/core-js/object/create.js":
/*!*************************************************************!*\
  !*** ./node_modules/babel-runtime/core-js/object/create.js ***!
  \*************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

module.exports = { "default": __webpack_require__(/*! core-js/library/fn/object/create */ "./node_modules/core-js/library/fn/object/create.js"), __esModule: true };

/***/ }),

/***/ "./node_modules/babel-runtime/core-js/object/define-property.js":
/*!**********************************************************************!*\
  !*** ./node_modules/babel-runtime/core-js/object/define-property.js ***!
  \**********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

module.exports = { "default": __webpack_require__(/*! core-js/library/fn/object/define-property */ "./node_modules/core-js/library/fn/object/define-property.js"), __esModule: true };

/***/ }),

/***/ "./node_modules/babel-runtime/core-js/object/get-prototype-of.js":
/*!***********************************************************************!*\
  !*** ./node_modules/babel-runtime/core-js/object/get-prototype-of.js ***!
  \***********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

module.exports = { "default": __webpack_require__(/*! core-js/library/fn/object/get-prototype-of */ "./node_modules/core-js/library/fn/object/get-prototype-of.js"), __esModule: true };

/***/ }),

/***/ "./node_modules/babel-runtime/core-js/object/set-prototype-of.js":
/*!***********************************************************************!*\
  !*** ./node_modules/babel-runtime/core-js/object/set-prototype-of.js ***!
  \***********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

module.exports = { "default": __webpack_require__(/*! core-js/library/fn/object/set-prototype-of */ "./node_modules/core-js/library/fn/object/set-prototype-of.js"), __esModule: true };

/***/ }),

/***/ "./node_modules/babel-runtime/core-js/symbol.js":
/*!******************************************************!*\
  !*** ./node_modules/babel-runtime/core-js/symbol.js ***!
  \******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

module.exports = { "default": __webpack_require__(/*! core-js/library/fn/symbol */ "./node_modules/core-js/library/fn/symbol/index.js"), __esModule: true };

/***/ }),

/***/ "./node_modules/babel-runtime/core-js/symbol/iterator.js":
/*!***************************************************************!*\
  !*** ./node_modules/babel-runtime/core-js/symbol/iterator.js ***!
  \***************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

module.exports = { "default": __webpack_require__(/*! core-js/library/fn/symbol/iterator */ "./node_modules/core-js/library/fn/symbol/iterator.js"), __esModule: true };

/***/ }),

/***/ "./node_modules/babel-runtime/helpers/classCallCheck.js":
/*!**************************************************************!*\
  !*** ./node_modules/babel-runtime/helpers/classCallCheck.js ***!
  \**************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;

exports.default = function (instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
};

/***/ }),

/***/ "./node_modules/babel-runtime/helpers/createClass.js":
/*!***********************************************************!*\
  !*** ./node_modules/babel-runtime/helpers/createClass.js ***!
  \***********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;

var _defineProperty = __webpack_require__(/*! ../core-js/object/define-property */ "./node_modules/babel-runtime/core-js/object/define-property.js");

var _defineProperty2 = _interopRequireDefault(_defineProperty);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

exports.default = function () {
  function defineProperties(target, props) {
    for (var i = 0; i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor) descriptor.writable = true;
      (0, _defineProperty2.default)(target, descriptor.key, descriptor);
    }
  }

  return function (Constructor, protoProps, staticProps) {
    if (protoProps) defineProperties(Constructor.prototype, protoProps);
    if (staticProps) defineProperties(Constructor, staticProps);
    return Constructor;
  };
}();

/***/ }),

/***/ "./node_modules/babel-runtime/helpers/extends.js":
/*!*******************************************************!*\
  !*** ./node_modules/babel-runtime/helpers/extends.js ***!
  \*******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;

var _assign = __webpack_require__(/*! ../core-js/object/assign */ "./node_modules/babel-runtime/core-js/object/assign.js");

var _assign2 = _interopRequireDefault(_assign);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

exports.default = _assign2.default || function (target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i];

    for (var key in source) {
      if (Object.prototype.hasOwnProperty.call(source, key)) {
        target[key] = source[key];
      }
    }
  }

  return target;
};

/***/ }),

/***/ "./node_modules/babel-runtime/helpers/inherits.js":
/*!********************************************************!*\
  !*** ./node_modules/babel-runtime/helpers/inherits.js ***!
  \********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;

var _setPrototypeOf = __webpack_require__(/*! ../core-js/object/set-prototype-of */ "./node_modules/babel-runtime/core-js/object/set-prototype-of.js");

var _setPrototypeOf2 = _interopRequireDefault(_setPrototypeOf);

var _create = __webpack_require__(/*! ../core-js/object/create */ "./node_modules/babel-runtime/core-js/object/create.js");

var _create2 = _interopRequireDefault(_create);

var _typeof2 = __webpack_require__(/*! ../helpers/typeof */ "./node_modules/babel-runtime/helpers/typeof.js");

var _typeof3 = _interopRequireDefault(_typeof2);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

exports.default = function (subClass, superClass) {
  if (typeof superClass !== "function" && superClass !== null) {
    throw new TypeError("Super expression must either be null or a function, not " + (typeof superClass === "undefined" ? "undefined" : (0, _typeof3.default)(superClass)));
  }

  subClass.prototype = (0, _create2.default)(superClass && superClass.prototype, {
    constructor: {
      value: subClass,
      enumerable: false,
      writable: true,
      configurable: true
    }
  });
  if (superClass) _setPrototypeOf2.default ? (0, _setPrototypeOf2.default)(subClass, superClass) : subClass.__proto__ = superClass;
};

/***/ }),

/***/ "./node_modules/babel-runtime/helpers/possibleConstructorReturn.js":
/*!*************************************************************************!*\
  !*** ./node_modules/babel-runtime/helpers/possibleConstructorReturn.js ***!
  \*************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;

var _typeof2 = __webpack_require__(/*! ../helpers/typeof */ "./node_modules/babel-runtime/helpers/typeof.js");

var _typeof3 = _interopRequireDefault(_typeof2);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

exports.default = function (self, call) {
  if (!self) {
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  }

  return call && ((typeof call === "undefined" ? "undefined" : (0, _typeof3.default)(call)) === "object" || typeof call === "function") ? call : self;
};

/***/ }),

/***/ "./node_modules/babel-runtime/helpers/typeof.js":
/*!******************************************************!*\
  !*** ./node_modules/babel-runtime/helpers/typeof.js ***!
  \******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;

var _iterator = __webpack_require__(/*! ../core-js/symbol/iterator */ "./node_modules/babel-runtime/core-js/symbol/iterator.js");

var _iterator2 = _interopRequireDefault(_iterator);

var _symbol = __webpack_require__(/*! ../core-js/symbol */ "./node_modules/babel-runtime/core-js/symbol.js");

var _symbol2 = _interopRequireDefault(_symbol);

var _typeof = typeof _symbol2.default === "function" && typeof _iterator2.default === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof _symbol2.default === "function" && obj.constructor === _symbol2.default && obj !== _symbol2.default.prototype ? "symbol" : typeof obj; };

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

exports.default = typeof _symbol2.default === "function" && _typeof(_iterator2.default) === "symbol" ? function (obj) {
  return typeof obj === "undefined" ? "undefined" : _typeof(obj);
} : function (obj) {
  return obj && typeof _symbol2.default === "function" && obj.constructor === _symbol2.default && obj !== _symbol2.default.prototype ? "symbol" : typeof obj === "undefined" ? "undefined" : _typeof(obj);
};

/***/ }),

/***/ "./node_modules/core-js/library/fn/object/assign.js":
/*!**********************************************************!*\
  !*** ./node_modules/core-js/library/fn/object/assign.js ***!
  \**********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__(/*! ../../modules/es6.object.assign */ "./node_modules/core-js/library/modules/es6.object.assign.js");
module.exports = __webpack_require__(/*! ../../modules/_core */ "./node_modules/core-js/library/modules/_core.js").Object.assign;


/***/ }),

/***/ "./node_modules/core-js/library/fn/object/create.js":
/*!**********************************************************!*\
  !*** ./node_modules/core-js/library/fn/object/create.js ***!
  \**********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__(/*! ../../modules/es6.object.create */ "./node_modules/core-js/library/modules/es6.object.create.js");
var $Object = __webpack_require__(/*! ../../modules/_core */ "./node_modules/core-js/library/modules/_core.js").Object;
module.exports = function create(P, D) {
  return $Object.create(P, D);
};


/***/ }),

/***/ "./node_modules/core-js/library/fn/object/define-property.js":
/*!*******************************************************************!*\
  !*** ./node_modules/core-js/library/fn/object/define-property.js ***!
  \*******************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__(/*! ../../modules/es6.object.define-property */ "./node_modules/core-js/library/modules/es6.object.define-property.js");
var $Object = __webpack_require__(/*! ../../modules/_core */ "./node_modules/core-js/library/modules/_core.js").Object;
module.exports = function defineProperty(it, key, desc) {
  return $Object.defineProperty(it, key, desc);
};


/***/ }),

/***/ "./node_modules/core-js/library/fn/object/get-prototype-of.js":
/*!********************************************************************!*\
  !*** ./node_modules/core-js/library/fn/object/get-prototype-of.js ***!
  \********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__(/*! ../../modules/es6.object.get-prototype-of */ "./node_modules/core-js/library/modules/es6.object.get-prototype-of.js");
module.exports = __webpack_require__(/*! ../../modules/_core */ "./node_modules/core-js/library/modules/_core.js").Object.getPrototypeOf;


/***/ }),

/***/ "./node_modules/core-js/library/fn/object/set-prototype-of.js":
/*!********************************************************************!*\
  !*** ./node_modules/core-js/library/fn/object/set-prototype-of.js ***!
  \********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__(/*! ../../modules/es6.object.set-prototype-of */ "./node_modules/core-js/library/modules/es6.object.set-prototype-of.js");
module.exports = __webpack_require__(/*! ../../modules/_core */ "./node_modules/core-js/library/modules/_core.js").Object.setPrototypeOf;


/***/ }),

/***/ "./node_modules/core-js/library/fn/symbol/index.js":
/*!*********************************************************!*\
  !*** ./node_modules/core-js/library/fn/symbol/index.js ***!
  \*********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__(/*! ../../modules/es6.symbol */ "./node_modules/core-js/library/modules/es6.symbol.js");
__webpack_require__(/*! ../../modules/es6.object.to-string */ "./node_modules/core-js/library/modules/es6.object.to-string.js");
__webpack_require__(/*! ../../modules/es7.symbol.async-iterator */ "./node_modules/core-js/library/modules/es7.symbol.async-iterator.js");
__webpack_require__(/*! ../../modules/es7.symbol.observable */ "./node_modules/core-js/library/modules/es7.symbol.observable.js");
module.exports = __webpack_require__(/*! ../../modules/_core */ "./node_modules/core-js/library/modules/_core.js").Symbol;


/***/ }),

/***/ "./node_modules/core-js/library/fn/symbol/iterator.js":
/*!************************************************************!*\
  !*** ./node_modules/core-js/library/fn/symbol/iterator.js ***!
  \************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__(/*! ../../modules/es6.string.iterator */ "./node_modules/core-js/library/modules/es6.string.iterator.js");
__webpack_require__(/*! ../../modules/web.dom.iterable */ "./node_modules/core-js/library/modules/web.dom.iterable.js");
module.exports = __webpack_require__(/*! ../../modules/_wks-ext */ "./node_modules/core-js/library/modules/_wks-ext.js").f('iterator');


/***/ }),

/***/ "./node_modules/core-js/library/modules/_a-function.js":
/*!*************************************************************!*\
  !*** ./node_modules/core-js/library/modules/_a-function.js ***!
  \*************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = function (it) {
  if (typeof it != 'function') throw TypeError(it + ' is not a function!');
  return it;
};


/***/ }),

/***/ "./node_modules/core-js/library/modules/_add-to-unscopables.js":
/*!*********************************************************************!*\
  !*** ./node_modules/core-js/library/modules/_add-to-unscopables.js ***!
  \*********************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = function () { /* empty */ };


/***/ }),

/***/ "./node_modules/core-js/library/modules/_an-object.js":
/*!************************************************************!*\
  !*** ./node_modules/core-js/library/modules/_an-object.js ***!
  \************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var isObject = __webpack_require__(/*! ./_is-object */ "./node_modules/core-js/library/modules/_is-object.js");
module.exports = function (it) {
  if (!isObject(it)) throw TypeError(it + ' is not an object!');
  return it;
};


/***/ }),

/***/ "./node_modules/core-js/library/modules/_array-includes.js":
/*!*****************************************************************!*\
  !*** ./node_modules/core-js/library/modules/_array-includes.js ***!
  \*****************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// false -> Array#indexOf
// true  -> Array#includes
var toIObject = __webpack_require__(/*! ./_to-iobject */ "./node_modules/core-js/library/modules/_to-iobject.js");
var toLength = __webpack_require__(/*! ./_to-length */ "./node_modules/core-js/library/modules/_to-length.js");
var toAbsoluteIndex = __webpack_require__(/*! ./_to-absolute-index */ "./node_modules/core-js/library/modules/_to-absolute-index.js");
module.exports = function (IS_INCLUDES) {
  return function ($this, el, fromIndex) {
    var O = toIObject($this);
    var length = toLength(O.length);
    var index = toAbsoluteIndex(fromIndex, length);
    var value;
    // Array#includes uses SameValueZero equality algorithm
    // eslint-disable-next-line no-self-compare
    if (IS_INCLUDES && el != el) while (length > index) {
      value = O[index++];
      // eslint-disable-next-line no-self-compare
      if (value != value) return true;
    // Array#indexOf ignores holes, Array#includes - not
    } else for (;length > index; index++) if (IS_INCLUDES || index in O) {
      if (O[index] === el) return IS_INCLUDES || index || 0;
    } return !IS_INCLUDES && -1;
  };
};


/***/ }),

/***/ "./node_modules/core-js/library/modules/_cof.js":
/*!******************************************************!*\
  !*** ./node_modules/core-js/library/modules/_cof.js ***!
  \******************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

var toString = {}.toString;

module.exports = function (it) {
  return toString.call(it).slice(8, -1);
};


/***/ }),

/***/ "./node_modules/core-js/library/modules/_core.js":
/*!*******************************************************!*\
  !*** ./node_modules/core-js/library/modules/_core.js ***!
  \*******************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

var core = module.exports = { version: '2.6.11' };
if (typeof __e == 'number') __e = core; // eslint-disable-line no-undef


/***/ }),

/***/ "./node_modules/core-js/library/modules/_ctx.js":
/*!******************************************************!*\
  !*** ./node_modules/core-js/library/modules/_ctx.js ***!
  \******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// optional / simple context binding
var aFunction = __webpack_require__(/*! ./_a-function */ "./node_modules/core-js/library/modules/_a-function.js");
module.exports = function (fn, that, length) {
  aFunction(fn);
  if (that === undefined) return fn;
  switch (length) {
    case 1: return function (a) {
      return fn.call(that, a);
    };
    case 2: return function (a, b) {
      return fn.call(that, a, b);
    };
    case 3: return function (a, b, c) {
      return fn.call(that, a, b, c);
    };
  }
  return function (/* ...args */) {
    return fn.apply(that, arguments);
  };
};


/***/ }),

/***/ "./node_modules/core-js/library/modules/_defined.js":
/*!**********************************************************!*\
  !*** ./node_modules/core-js/library/modules/_defined.js ***!
  \**********************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

// 7.2.1 RequireObjectCoercible(argument)
module.exports = function (it) {
  if (it == undefined) throw TypeError("Can't call method on  " + it);
  return it;
};


/***/ }),

/***/ "./node_modules/core-js/library/modules/_descriptors.js":
/*!**************************************************************!*\
  !*** ./node_modules/core-js/library/modules/_descriptors.js ***!
  \**************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// Thank's IE8 for his funny defineProperty
module.exports = !__webpack_require__(/*! ./_fails */ "./node_modules/core-js/library/modules/_fails.js")(function () {
  return Object.defineProperty({}, 'a', { get: function () { return 7; } }).a != 7;
});


/***/ }),

/***/ "./node_modules/core-js/library/modules/_dom-create.js":
/*!*************************************************************!*\
  !*** ./node_modules/core-js/library/modules/_dom-create.js ***!
  \*************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var isObject = __webpack_require__(/*! ./_is-object */ "./node_modules/core-js/library/modules/_is-object.js");
var document = __webpack_require__(/*! ./_global */ "./node_modules/core-js/library/modules/_global.js").document;
// typeof document.createElement is 'object' in old IE
var is = isObject(document) && isObject(document.createElement);
module.exports = function (it) {
  return is ? document.createElement(it) : {};
};


/***/ }),

/***/ "./node_modules/core-js/library/modules/_enum-bug-keys.js":
/*!****************************************************************!*\
  !*** ./node_modules/core-js/library/modules/_enum-bug-keys.js ***!
  \****************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

// IE 8- don't enum bug keys
module.exports = (
  'constructor,hasOwnProperty,isPrototypeOf,propertyIsEnumerable,toLocaleString,toString,valueOf'
).split(',');


/***/ }),

/***/ "./node_modules/core-js/library/modules/_enum-keys.js":
/*!************************************************************!*\
  !*** ./node_modules/core-js/library/modules/_enum-keys.js ***!
  \************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// all enumerable object keys, includes symbols
var getKeys = __webpack_require__(/*! ./_object-keys */ "./node_modules/core-js/library/modules/_object-keys.js");
var gOPS = __webpack_require__(/*! ./_object-gops */ "./node_modules/core-js/library/modules/_object-gops.js");
var pIE = __webpack_require__(/*! ./_object-pie */ "./node_modules/core-js/library/modules/_object-pie.js");
module.exports = function (it) {
  var result = getKeys(it);
  var getSymbols = gOPS.f;
  if (getSymbols) {
    var symbols = getSymbols(it);
    var isEnum = pIE.f;
    var i = 0;
    var key;
    while (symbols.length > i) if (isEnum.call(it, key = symbols[i++])) result.push(key);
  } return result;
};


/***/ }),

/***/ "./node_modules/core-js/library/modules/_export.js":
/*!*********************************************************!*\
  !*** ./node_modules/core-js/library/modules/_export.js ***!
  \*********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var global = __webpack_require__(/*! ./_global */ "./node_modules/core-js/library/modules/_global.js");
var core = __webpack_require__(/*! ./_core */ "./node_modules/core-js/library/modules/_core.js");
var ctx = __webpack_require__(/*! ./_ctx */ "./node_modules/core-js/library/modules/_ctx.js");
var hide = __webpack_require__(/*! ./_hide */ "./node_modules/core-js/library/modules/_hide.js");
var has = __webpack_require__(/*! ./_has */ "./node_modules/core-js/library/modules/_has.js");
var PROTOTYPE = 'prototype';

var $export = function (type, name, source) {
  var IS_FORCED = type & $export.F;
  var IS_GLOBAL = type & $export.G;
  var IS_STATIC = type & $export.S;
  var IS_PROTO = type & $export.P;
  var IS_BIND = type & $export.B;
  var IS_WRAP = type & $export.W;
  var exports = IS_GLOBAL ? core : core[name] || (core[name] = {});
  var expProto = exports[PROTOTYPE];
  var target = IS_GLOBAL ? global : IS_STATIC ? global[name] : (global[name] || {})[PROTOTYPE];
  var key, own, out;
  if (IS_GLOBAL) source = name;
  for (key in source) {
    // contains in native
    own = !IS_FORCED && target && target[key] !== undefined;
    if (own && has(exports, key)) continue;
    // export native or passed
    out = own ? target[key] : source[key];
    // prevent global pollution for namespaces
    exports[key] = IS_GLOBAL && typeof target[key] != 'function' ? source[key]
    // bind timers to global for call from export context
    : IS_BIND && own ? ctx(out, global)
    // wrap global constructors for prevent change them in library
    : IS_WRAP && target[key] == out ? (function (C) {
      var F = function (a, b, c) {
        if (this instanceof C) {
          switch (arguments.length) {
            case 0: return new C();
            case 1: return new C(a);
            case 2: return new C(a, b);
          } return new C(a, b, c);
        } return C.apply(this, arguments);
      };
      F[PROTOTYPE] = C[PROTOTYPE];
      return F;
    // make static versions for prototype methods
    })(out) : IS_PROTO && typeof out == 'function' ? ctx(Function.call, out) : out;
    // export proto methods to core.%CONSTRUCTOR%.methods.%NAME%
    if (IS_PROTO) {
      (exports.virtual || (exports.virtual = {}))[key] = out;
      // export proto methods to core.%CONSTRUCTOR%.prototype.%NAME%
      if (type & $export.R && expProto && !expProto[key]) hide(expProto, key, out);
    }
  }
};
// type bitmap
$export.F = 1;   // forced
$export.G = 2;   // global
$export.S = 4;   // static
$export.P = 8;   // proto
$export.B = 16;  // bind
$export.W = 32;  // wrap
$export.U = 64;  // safe
$export.R = 128; // real proto method for `library`
module.exports = $export;


/***/ }),

/***/ "./node_modules/core-js/library/modules/_fails.js":
/*!********************************************************!*\
  !*** ./node_modules/core-js/library/modules/_fails.js ***!
  \********************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = function (exec) {
  try {
    return !!exec();
  } catch (e) {
    return true;
  }
};


/***/ }),

/***/ "./node_modules/core-js/library/modules/_global.js":
/*!*********************************************************!*\
  !*** ./node_modules/core-js/library/modules/_global.js ***!
  \*********************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

// https://github.com/zloirock/core-js/issues/86#issuecomment-115759028
var global = module.exports = typeof window != 'undefined' && window.Math == Math
  ? window : typeof self != 'undefined' && self.Math == Math ? self
  // eslint-disable-next-line no-new-func
  : Function('return this')();
if (typeof __g == 'number') __g = global; // eslint-disable-line no-undef


/***/ }),

/***/ "./node_modules/core-js/library/modules/_has.js":
/*!******************************************************!*\
  !*** ./node_modules/core-js/library/modules/_has.js ***!
  \******************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

var hasOwnProperty = {}.hasOwnProperty;
module.exports = function (it, key) {
  return hasOwnProperty.call(it, key);
};


/***/ }),

/***/ "./node_modules/core-js/library/modules/_hide.js":
/*!*******************************************************!*\
  !*** ./node_modules/core-js/library/modules/_hide.js ***!
  \*******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var dP = __webpack_require__(/*! ./_object-dp */ "./node_modules/core-js/library/modules/_object-dp.js");
var createDesc = __webpack_require__(/*! ./_property-desc */ "./node_modules/core-js/library/modules/_property-desc.js");
module.exports = __webpack_require__(/*! ./_descriptors */ "./node_modules/core-js/library/modules/_descriptors.js") ? function (object, key, value) {
  return dP.f(object, key, createDesc(1, value));
} : function (object, key, value) {
  object[key] = value;
  return object;
};


/***/ }),

/***/ "./node_modules/core-js/library/modules/_html.js":
/*!*******************************************************!*\
  !*** ./node_modules/core-js/library/modules/_html.js ***!
  \*******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var document = __webpack_require__(/*! ./_global */ "./node_modules/core-js/library/modules/_global.js").document;
module.exports = document && document.documentElement;


/***/ }),

/***/ "./node_modules/core-js/library/modules/_ie8-dom-define.js":
/*!*****************************************************************!*\
  !*** ./node_modules/core-js/library/modules/_ie8-dom-define.js ***!
  \*****************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

module.exports = !__webpack_require__(/*! ./_descriptors */ "./node_modules/core-js/library/modules/_descriptors.js") && !__webpack_require__(/*! ./_fails */ "./node_modules/core-js/library/modules/_fails.js")(function () {
  return Object.defineProperty(__webpack_require__(/*! ./_dom-create */ "./node_modules/core-js/library/modules/_dom-create.js")('div'), 'a', { get: function () { return 7; } }).a != 7;
});


/***/ }),

/***/ "./node_modules/core-js/library/modules/_iobject.js":
/*!**********************************************************!*\
  !*** ./node_modules/core-js/library/modules/_iobject.js ***!
  \**********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// fallback for non-array-like ES3 and non-enumerable old V8 strings
var cof = __webpack_require__(/*! ./_cof */ "./node_modules/core-js/library/modules/_cof.js");
// eslint-disable-next-line no-prototype-builtins
module.exports = Object('z').propertyIsEnumerable(0) ? Object : function (it) {
  return cof(it) == 'String' ? it.split('') : Object(it);
};


/***/ }),

/***/ "./node_modules/core-js/library/modules/_is-array.js":
/*!***********************************************************!*\
  !*** ./node_modules/core-js/library/modules/_is-array.js ***!
  \***********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// 7.2.2 IsArray(argument)
var cof = __webpack_require__(/*! ./_cof */ "./node_modules/core-js/library/modules/_cof.js");
module.exports = Array.isArray || function isArray(arg) {
  return cof(arg) == 'Array';
};


/***/ }),

/***/ "./node_modules/core-js/library/modules/_is-object.js":
/*!************************************************************!*\
  !*** ./node_modules/core-js/library/modules/_is-object.js ***!
  \************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = function (it) {
  return typeof it === 'object' ? it !== null : typeof it === 'function';
};


/***/ }),

/***/ "./node_modules/core-js/library/modules/_iter-create.js":
/*!**************************************************************!*\
  !*** ./node_modules/core-js/library/modules/_iter-create.js ***!
  \**************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var create = __webpack_require__(/*! ./_object-create */ "./node_modules/core-js/library/modules/_object-create.js");
var descriptor = __webpack_require__(/*! ./_property-desc */ "./node_modules/core-js/library/modules/_property-desc.js");
var setToStringTag = __webpack_require__(/*! ./_set-to-string-tag */ "./node_modules/core-js/library/modules/_set-to-string-tag.js");
var IteratorPrototype = {};

// 25.1.2.1.1 %IteratorPrototype%[@@iterator]()
__webpack_require__(/*! ./_hide */ "./node_modules/core-js/library/modules/_hide.js")(IteratorPrototype, __webpack_require__(/*! ./_wks */ "./node_modules/core-js/library/modules/_wks.js")('iterator'), function () { return this; });

module.exports = function (Constructor, NAME, next) {
  Constructor.prototype = create(IteratorPrototype, { next: descriptor(1, next) });
  setToStringTag(Constructor, NAME + ' Iterator');
};


/***/ }),

/***/ "./node_modules/core-js/library/modules/_iter-define.js":
/*!**************************************************************!*\
  !*** ./node_modules/core-js/library/modules/_iter-define.js ***!
  \**************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var LIBRARY = __webpack_require__(/*! ./_library */ "./node_modules/core-js/library/modules/_library.js");
var $export = __webpack_require__(/*! ./_export */ "./node_modules/core-js/library/modules/_export.js");
var redefine = __webpack_require__(/*! ./_redefine */ "./node_modules/core-js/library/modules/_redefine.js");
var hide = __webpack_require__(/*! ./_hide */ "./node_modules/core-js/library/modules/_hide.js");
var Iterators = __webpack_require__(/*! ./_iterators */ "./node_modules/core-js/library/modules/_iterators.js");
var $iterCreate = __webpack_require__(/*! ./_iter-create */ "./node_modules/core-js/library/modules/_iter-create.js");
var setToStringTag = __webpack_require__(/*! ./_set-to-string-tag */ "./node_modules/core-js/library/modules/_set-to-string-tag.js");
var getPrototypeOf = __webpack_require__(/*! ./_object-gpo */ "./node_modules/core-js/library/modules/_object-gpo.js");
var ITERATOR = __webpack_require__(/*! ./_wks */ "./node_modules/core-js/library/modules/_wks.js")('iterator');
var BUGGY = !([].keys && 'next' in [].keys()); // Safari has buggy iterators w/o `next`
var FF_ITERATOR = '@@iterator';
var KEYS = 'keys';
var VALUES = 'values';

var returnThis = function () { return this; };

module.exports = function (Base, NAME, Constructor, next, DEFAULT, IS_SET, FORCED) {
  $iterCreate(Constructor, NAME, next);
  var getMethod = function (kind) {
    if (!BUGGY && kind in proto) return proto[kind];
    switch (kind) {
      case KEYS: return function keys() { return new Constructor(this, kind); };
      case VALUES: return function values() { return new Constructor(this, kind); };
    } return function entries() { return new Constructor(this, kind); };
  };
  var TAG = NAME + ' Iterator';
  var DEF_VALUES = DEFAULT == VALUES;
  var VALUES_BUG = false;
  var proto = Base.prototype;
  var $native = proto[ITERATOR] || proto[FF_ITERATOR] || DEFAULT && proto[DEFAULT];
  var $default = $native || getMethod(DEFAULT);
  var $entries = DEFAULT ? !DEF_VALUES ? $default : getMethod('entries') : undefined;
  var $anyNative = NAME == 'Array' ? proto.entries || $native : $native;
  var methods, key, IteratorPrototype;
  // Fix native
  if ($anyNative) {
    IteratorPrototype = getPrototypeOf($anyNative.call(new Base()));
    if (IteratorPrototype !== Object.prototype && IteratorPrototype.next) {
      // Set @@toStringTag to native iterators
      setToStringTag(IteratorPrototype, TAG, true);
      // fix for some old engines
      if (!LIBRARY && typeof IteratorPrototype[ITERATOR] != 'function') hide(IteratorPrototype, ITERATOR, returnThis);
    }
  }
  // fix Array#{values, @@iterator}.name in V8 / FF
  if (DEF_VALUES && $native && $native.name !== VALUES) {
    VALUES_BUG = true;
    $default = function values() { return $native.call(this); };
  }
  // Define iterator
  if ((!LIBRARY || FORCED) && (BUGGY || VALUES_BUG || !proto[ITERATOR])) {
    hide(proto, ITERATOR, $default);
  }
  // Plug for library
  Iterators[NAME] = $default;
  Iterators[TAG] = returnThis;
  if (DEFAULT) {
    methods = {
      values: DEF_VALUES ? $default : getMethod(VALUES),
      keys: IS_SET ? $default : getMethod(KEYS),
      entries: $entries
    };
    if (FORCED) for (key in methods) {
      if (!(key in proto)) redefine(proto, key, methods[key]);
    } else $export($export.P + $export.F * (BUGGY || VALUES_BUG), NAME, methods);
  }
  return methods;
};


/***/ }),

/***/ "./node_modules/core-js/library/modules/_iter-step.js":
/*!************************************************************!*\
  !*** ./node_modules/core-js/library/modules/_iter-step.js ***!
  \************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = function (done, value) {
  return { value: value, done: !!done };
};


/***/ }),

/***/ "./node_modules/core-js/library/modules/_iterators.js":
/*!************************************************************!*\
  !*** ./node_modules/core-js/library/modules/_iterators.js ***!
  \************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = {};


/***/ }),

/***/ "./node_modules/core-js/library/modules/_library.js":
/*!**********************************************************!*\
  !*** ./node_modules/core-js/library/modules/_library.js ***!
  \**********************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = true;


/***/ }),

/***/ "./node_modules/core-js/library/modules/_meta.js":
/*!*******************************************************!*\
  !*** ./node_modules/core-js/library/modules/_meta.js ***!
  \*******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var META = __webpack_require__(/*! ./_uid */ "./node_modules/core-js/library/modules/_uid.js")('meta');
var isObject = __webpack_require__(/*! ./_is-object */ "./node_modules/core-js/library/modules/_is-object.js");
var has = __webpack_require__(/*! ./_has */ "./node_modules/core-js/library/modules/_has.js");
var setDesc = __webpack_require__(/*! ./_object-dp */ "./node_modules/core-js/library/modules/_object-dp.js").f;
var id = 0;
var isExtensible = Object.isExtensible || function () {
  return true;
};
var FREEZE = !__webpack_require__(/*! ./_fails */ "./node_modules/core-js/library/modules/_fails.js")(function () {
  return isExtensible(Object.preventExtensions({}));
});
var setMeta = function (it) {
  setDesc(it, META, { value: {
    i: 'O' + ++id, // object ID
    w: {}          // weak collections IDs
  } });
};
var fastKey = function (it, create) {
  // return primitive with prefix
  if (!isObject(it)) return typeof it == 'symbol' ? it : (typeof it == 'string' ? 'S' : 'P') + it;
  if (!has(it, META)) {
    // can't set metadata to uncaught frozen object
    if (!isExtensible(it)) return 'F';
    // not necessary to add metadata
    if (!create) return 'E';
    // add missing metadata
    setMeta(it);
  // return object ID
  } return it[META].i;
};
var getWeak = function (it, create) {
  if (!has(it, META)) {
    // can't set metadata to uncaught frozen object
    if (!isExtensible(it)) return true;
    // not necessary to add metadata
    if (!create) return false;
    // add missing metadata
    setMeta(it);
  // return hash weak collections IDs
  } return it[META].w;
};
// add metadata on freeze-family methods calling
var onFreeze = function (it) {
  if (FREEZE && meta.NEED && isExtensible(it) && !has(it, META)) setMeta(it);
  return it;
};
var meta = module.exports = {
  KEY: META,
  NEED: false,
  fastKey: fastKey,
  getWeak: getWeak,
  onFreeze: onFreeze
};


/***/ }),

/***/ "./node_modules/core-js/library/modules/_object-assign.js":
/*!****************************************************************!*\
  !*** ./node_modules/core-js/library/modules/_object-assign.js ***!
  \****************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

// 19.1.2.1 Object.assign(target, source, ...)
var DESCRIPTORS = __webpack_require__(/*! ./_descriptors */ "./node_modules/core-js/library/modules/_descriptors.js");
var getKeys = __webpack_require__(/*! ./_object-keys */ "./node_modules/core-js/library/modules/_object-keys.js");
var gOPS = __webpack_require__(/*! ./_object-gops */ "./node_modules/core-js/library/modules/_object-gops.js");
var pIE = __webpack_require__(/*! ./_object-pie */ "./node_modules/core-js/library/modules/_object-pie.js");
var toObject = __webpack_require__(/*! ./_to-object */ "./node_modules/core-js/library/modules/_to-object.js");
var IObject = __webpack_require__(/*! ./_iobject */ "./node_modules/core-js/library/modules/_iobject.js");
var $assign = Object.assign;

// should work with symbols and should have deterministic property order (V8 bug)
module.exports = !$assign || __webpack_require__(/*! ./_fails */ "./node_modules/core-js/library/modules/_fails.js")(function () {
  var A = {};
  var B = {};
  // eslint-disable-next-line no-undef
  var S = Symbol();
  var K = 'abcdefghijklmnopqrst';
  A[S] = 7;
  K.split('').forEach(function (k) { B[k] = k; });
  return $assign({}, A)[S] != 7 || Object.keys($assign({}, B)).join('') != K;
}) ? function assign(target, source) { // eslint-disable-line no-unused-vars
  var T = toObject(target);
  var aLen = arguments.length;
  var index = 1;
  var getSymbols = gOPS.f;
  var isEnum = pIE.f;
  while (aLen > index) {
    var S = IObject(arguments[index++]);
    var keys = getSymbols ? getKeys(S).concat(getSymbols(S)) : getKeys(S);
    var length = keys.length;
    var j = 0;
    var key;
    while (length > j) {
      key = keys[j++];
      if (!DESCRIPTORS || isEnum.call(S, key)) T[key] = S[key];
    }
  } return T;
} : $assign;


/***/ }),

/***/ "./node_modules/core-js/library/modules/_object-create.js":
/*!****************************************************************!*\
  !*** ./node_modules/core-js/library/modules/_object-create.js ***!
  \****************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// 19.1.2.2 / 15.2.3.5 Object.create(O [, Properties])
var anObject = __webpack_require__(/*! ./_an-object */ "./node_modules/core-js/library/modules/_an-object.js");
var dPs = __webpack_require__(/*! ./_object-dps */ "./node_modules/core-js/library/modules/_object-dps.js");
var enumBugKeys = __webpack_require__(/*! ./_enum-bug-keys */ "./node_modules/core-js/library/modules/_enum-bug-keys.js");
var IE_PROTO = __webpack_require__(/*! ./_shared-key */ "./node_modules/core-js/library/modules/_shared-key.js")('IE_PROTO');
var Empty = function () { /* empty */ };
var PROTOTYPE = 'prototype';

// Create object with fake `null` prototype: use iframe Object with cleared prototype
var createDict = function () {
  // Thrash, waste and sodomy: IE GC bug
  var iframe = __webpack_require__(/*! ./_dom-create */ "./node_modules/core-js/library/modules/_dom-create.js")('iframe');
  var i = enumBugKeys.length;
  var lt = '<';
  var gt = '>';
  var iframeDocument;
  iframe.style.display = 'none';
  __webpack_require__(/*! ./_html */ "./node_modules/core-js/library/modules/_html.js").appendChild(iframe);
  iframe.src = 'javascript:'; // eslint-disable-line no-script-url
  // createDict = iframe.contentWindow.Object;
  // html.removeChild(iframe);
  iframeDocument = iframe.contentWindow.document;
  iframeDocument.open();
  iframeDocument.write(lt + 'script' + gt + 'document.F=Object' + lt + '/script' + gt);
  iframeDocument.close();
  createDict = iframeDocument.F;
  while (i--) delete createDict[PROTOTYPE][enumBugKeys[i]];
  return createDict();
};

module.exports = Object.create || function create(O, Properties) {
  var result;
  if (O !== null) {
    Empty[PROTOTYPE] = anObject(O);
    result = new Empty();
    Empty[PROTOTYPE] = null;
    // add "__proto__" for Object.getPrototypeOf polyfill
    result[IE_PROTO] = O;
  } else result = createDict();
  return Properties === undefined ? result : dPs(result, Properties);
};


/***/ }),

/***/ "./node_modules/core-js/library/modules/_object-dp.js":
/*!************************************************************!*\
  !*** ./node_modules/core-js/library/modules/_object-dp.js ***!
  \************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var anObject = __webpack_require__(/*! ./_an-object */ "./node_modules/core-js/library/modules/_an-object.js");
var IE8_DOM_DEFINE = __webpack_require__(/*! ./_ie8-dom-define */ "./node_modules/core-js/library/modules/_ie8-dom-define.js");
var toPrimitive = __webpack_require__(/*! ./_to-primitive */ "./node_modules/core-js/library/modules/_to-primitive.js");
var dP = Object.defineProperty;

exports.f = __webpack_require__(/*! ./_descriptors */ "./node_modules/core-js/library/modules/_descriptors.js") ? Object.defineProperty : function defineProperty(O, P, Attributes) {
  anObject(O);
  P = toPrimitive(P, true);
  anObject(Attributes);
  if (IE8_DOM_DEFINE) try {
    return dP(O, P, Attributes);
  } catch (e) { /* empty */ }
  if ('get' in Attributes || 'set' in Attributes) throw TypeError('Accessors not supported!');
  if ('value' in Attributes) O[P] = Attributes.value;
  return O;
};


/***/ }),

/***/ "./node_modules/core-js/library/modules/_object-dps.js":
/*!*************************************************************!*\
  !*** ./node_modules/core-js/library/modules/_object-dps.js ***!
  \*************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var dP = __webpack_require__(/*! ./_object-dp */ "./node_modules/core-js/library/modules/_object-dp.js");
var anObject = __webpack_require__(/*! ./_an-object */ "./node_modules/core-js/library/modules/_an-object.js");
var getKeys = __webpack_require__(/*! ./_object-keys */ "./node_modules/core-js/library/modules/_object-keys.js");

module.exports = __webpack_require__(/*! ./_descriptors */ "./node_modules/core-js/library/modules/_descriptors.js") ? Object.defineProperties : function defineProperties(O, Properties) {
  anObject(O);
  var keys = getKeys(Properties);
  var length = keys.length;
  var i = 0;
  var P;
  while (length > i) dP.f(O, P = keys[i++], Properties[P]);
  return O;
};


/***/ }),

/***/ "./node_modules/core-js/library/modules/_object-gopd.js":
/*!**************************************************************!*\
  !*** ./node_modules/core-js/library/modules/_object-gopd.js ***!
  \**************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var pIE = __webpack_require__(/*! ./_object-pie */ "./node_modules/core-js/library/modules/_object-pie.js");
var createDesc = __webpack_require__(/*! ./_property-desc */ "./node_modules/core-js/library/modules/_property-desc.js");
var toIObject = __webpack_require__(/*! ./_to-iobject */ "./node_modules/core-js/library/modules/_to-iobject.js");
var toPrimitive = __webpack_require__(/*! ./_to-primitive */ "./node_modules/core-js/library/modules/_to-primitive.js");
var has = __webpack_require__(/*! ./_has */ "./node_modules/core-js/library/modules/_has.js");
var IE8_DOM_DEFINE = __webpack_require__(/*! ./_ie8-dom-define */ "./node_modules/core-js/library/modules/_ie8-dom-define.js");
var gOPD = Object.getOwnPropertyDescriptor;

exports.f = __webpack_require__(/*! ./_descriptors */ "./node_modules/core-js/library/modules/_descriptors.js") ? gOPD : function getOwnPropertyDescriptor(O, P) {
  O = toIObject(O);
  P = toPrimitive(P, true);
  if (IE8_DOM_DEFINE) try {
    return gOPD(O, P);
  } catch (e) { /* empty */ }
  if (has(O, P)) return createDesc(!pIE.f.call(O, P), O[P]);
};


/***/ }),

/***/ "./node_modules/core-js/library/modules/_object-gopn-ext.js":
/*!******************************************************************!*\
  !*** ./node_modules/core-js/library/modules/_object-gopn-ext.js ***!
  \******************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// fallback for IE11 buggy Object.getOwnPropertyNames with iframe and window
var toIObject = __webpack_require__(/*! ./_to-iobject */ "./node_modules/core-js/library/modules/_to-iobject.js");
var gOPN = __webpack_require__(/*! ./_object-gopn */ "./node_modules/core-js/library/modules/_object-gopn.js").f;
var toString = {}.toString;

var windowNames = typeof window == 'object' && window && Object.getOwnPropertyNames
  ? Object.getOwnPropertyNames(window) : [];

var getWindowNames = function (it) {
  try {
    return gOPN(it);
  } catch (e) {
    return windowNames.slice();
  }
};

module.exports.f = function getOwnPropertyNames(it) {
  return windowNames && toString.call(it) == '[object Window]' ? getWindowNames(it) : gOPN(toIObject(it));
};


/***/ }),

/***/ "./node_modules/core-js/library/modules/_object-gopn.js":
/*!**************************************************************!*\
  !*** ./node_modules/core-js/library/modules/_object-gopn.js ***!
  \**************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// 19.1.2.7 / 15.2.3.4 Object.getOwnPropertyNames(O)
var $keys = __webpack_require__(/*! ./_object-keys-internal */ "./node_modules/core-js/library/modules/_object-keys-internal.js");
var hiddenKeys = __webpack_require__(/*! ./_enum-bug-keys */ "./node_modules/core-js/library/modules/_enum-bug-keys.js").concat('length', 'prototype');

exports.f = Object.getOwnPropertyNames || function getOwnPropertyNames(O) {
  return $keys(O, hiddenKeys);
};


/***/ }),

/***/ "./node_modules/core-js/library/modules/_object-gops.js":
/*!**************************************************************!*\
  !*** ./node_modules/core-js/library/modules/_object-gops.js ***!
  \**************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

exports.f = Object.getOwnPropertySymbols;


/***/ }),

/***/ "./node_modules/core-js/library/modules/_object-gpo.js":
/*!*************************************************************!*\
  !*** ./node_modules/core-js/library/modules/_object-gpo.js ***!
  \*************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// 19.1.2.9 / 15.2.3.2 Object.getPrototypeOf(O)
var has = __webpack_require__(/*! ./_has */ "./node_modules/core-js/library/modules/_has.js");
var toObject = __webpack_require__(/*! ./_to-object */ "./node_modules/core-js/library/modules/_to-object.js");
var IE_PROTO = __webpack_require__(/*! ./_shared-key */ "./node_modules/core-js/library/modules/_shared-key.js")('IE_PROTO');
var ObjectProto = Object.prototype;

module.exports = Object.getPrototypeOf || function (O) {
  O = toObject(O);
  if (has(O, IE_PROTO)) return O[IE_PROTO];
  if (typeof O.constructor == 'function' && O instanceof O.constructor) {
    return O.constructor.prototype;
  } return O instanceof Object ? ObjectProto : null;
};


/***/ }),

/***/ "./node_modules/core-js/library/modules/_object-keys-internal.js":
/*!***********************************************************************!*\
  !*** ./node_modules/core-js/library/modules/_object-keys-internal.js ***!
  \***********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var has = __webpack_require__(/*! ./_has */ "./node_modules/core-js/library/modules/_has.js");
var toIObject = __webpack_require__(/*! ./_to-iobject */ "./node_modules/core-js/library/modules/_to-iobject.js");
var arrayIndexOf = __webpack_require__(/*! ./_array-includes */ "./node_modules/core-js/library/modules/_array-includes.js")(false);
var IE_PROTO = __webpack_require__(/*! ./_shared-key */ "./node_modules/core-js/library/modules/_shared-key.js")('IE_PROTO');

module.exports = function (object, names) {
  var O = toIObject(object);
  var i = 0;
  var result = [];
  var key;
  for (key in O) if (key != IE_PROTO) has(O, key) && result.push(key);
  // Don't enum bug & hidden keys
  while (names.length > i) if (has(O, key = names[i++])) {
    ~arrayIndexOf(result, key) || result.push(key);
  }
  return result;
};


/***/ }),

/***/ "./node_modules/core-js/library/modules/_object-keys.js":
/*!**************************************************************!*\
  !*** ./node_modules/core-js/library/modules/_object-keys.js ***!
  \**************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// 19.1.2.14 / 15.2.3.14 Object.keys(O)
var $keys = __webpack_require__(/*! ./_object-keys-internal */ "./node_modules/core-js/library/modules/_object-keys-internal.js");
var enumBugKeys = __webpack_require__(/*! ./_enum-bug-keys */ "./node_modules/core-js/library/modules/_enum-bug-keys.js");

module.exports = Object.keys || function keys(O) {
  return $keys(O, enumBugKeys);
};


/***/ }),

/***/ "./node_modules/core-js/library/modules/_object-pie.js":
/*!*************************************************************!*\
  !*** ./node_modules/core-js/library/modules/_object-pie.js ***!
  \*************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

exports.f = {}.propertyIsEnumerable;


/***/ }),

/***/ "./node_modules/core-js/library/modules/_object-sap.js":
/*!*************************************************************!*\
  !*** ./node_modules/core-js/library/modules/_object-sap.js ***!
  \*************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// most Object methods by ES6 should accept primitives
var $export = __webpack_require__(/*! ./_export */ "./node_modules/core-js/library/modules/_export.js");
var core = __webpack_require__(/*! ./_core */ "./node_modules/core-js/library/modules/_core.js");
var fails = __webpack_require__(/*! ./_fails */ "./node_modules/core-js/library/modules/_fails.js");
module.exports = function (KEY, exec) {
  var fn = (core.Object || {})[KEY] || Object[KEY];
  var exp = {};
  exp[KEY] = exec(fn);
  $export($export.S + $export.F * fails(function () { fn(1); }), 'Object', exp);
};


/***/ }),

/***/ "./node_modules/core-js/library/modules/_property-desc.js":
/*!****************************************************************!*\
  !*** ./node_modules/core-js/library/modules/_property-desc.js ***!
  \****************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = function (bitmap, value) {
  return {
    enumerable: !(bitmap & 1),
    configurable: !(bitmap & 2),
    writable: !(bitmap & 4),
    value: value
  };
};


/***/ }),

/***/ "./node_modules/core-js/library/modules/_redefine.js":
/*!***********************************************************!*\
  !*** ./node_modules/core-js/library/modules/_redefine.js ***!
  \***********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__(/*! ./_hide */ "./node_modules/core-js/library/modules/_hide.js");


/***/ }),

/***/ "./node_modules/core-js/library/modules/_set-proto.js":
/*!************************************************************!*\
  !*** ./node_modules/core-js/library/modules/_set-proto.js ***!
  \************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// Works with __proto__ only. Old v8 can't work with null proto objects.
/* eslint-disable no-proto */
var isObject = __webpack_require__(/*! ./_is-object */ "./node_modules/core-js/library/modules/_is-object.js");
var anObject = __webpack_require__(/*! ./_an-object */ "./node_modules/core-js/library/modules/_an-object.js");
var check = function (O, proto) {
  anObject(O);
  if (!isObject(proto) && proto !== null) throw TypeError(proto + ": can't set as prototype!");
};
module.exports = {
  set: Object.setPrototypeOf || ('__proto__' in {} ? // eslint-disable-line
    function (test, buggy, set) {
      try {
        set = __webpack_require__(/*! ./_ctx */ "./node_modules/core-js/library/modules/_ctx.js")(Function.call, __webpack_require__(/*! ./_object-gopd */ "./node_modules/core-js/library/modules/_object-gopd.js").f(Object.prototype, '__proto__').set, 2);
        set(test, []);
        buggy = !(test instanceof Array);
      } catch (e) { buggy = true; }
      return function setPrototypeOf(O, proto) {
        check(O, proto);
        if (buggy) O.__proto__ = proto;
        else set(O, proto);
        return O;
      };
    }({}, false) : undefined),
  check: check
};


/***/ }),

/***/ "./node_modules/core-js/library/modules/_set-to-string-tag.js":
/*!********************************************************************!*\
  !*** ./node_modules/core-js/library/modules/_set-to-string-tag.js ***!
  \********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var def = __webpack_require__(/*! ./_object-dp */ "./node_modules/core-js/library/modules/_object-dp.js").f;
var has = __webpack_require__(/*! ./_has */ "./node_modules/core-js/library/modules/_has.js");
var TAG = __webpack_require__(/*! ./_wks */ "./node_modules/core-js/library/modules/_wks.js")('toStringTag');

module.exports = function (it, tag, stat) {
  if (it && !has(it = stat ? it : it.prototype, TAG)) def(it, TAG, { configurable: true, value: tag });
};


/***/ }),

/***/ "./node_modules/core-js/library/modules/_shared-key.js":
/*!*************************************************************!*\
  !*** ./node_modules/core-js/library/modules/_shared-key.js ***!
  \*************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var shared = __webpack_require__(/*! ./_shared */ "./node_modules/core-js/library/modules/_shared.js")('keys');
var uid = __webpack_require__(/*! ./_uid */ "./node_modules/core-js/library/modules/_uid.js");
module.exports = function (key) {
  return shared[key] || (shared[key] = uid(key));
};


/***/ }),

/***/ "./node_modules/core-js/library/modules/_shared.js":
/*!*********************************************************!*\
  !*** ./node_modules/core-js/library/modules/_shared.js ***!
  \*********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var core = __webpack_require__(/*! ./_core */ "./node_modules/core-js/library/modules/_core.js");
var global = __webpack_require__(/*! ./_global */ "./node_modules/core-js/library/modules/_global.js");
var SHARED = '__core-js_shared__';
var store = global[SHARED] || (global[SHARED] = {});

(module.exports = function (key, value) {
  return store[key] || (store[key] = value !== undefined ? value : {});
})('versions', []).push({
  version: core.version,
  mode: __webpack_require__(/*! ./_library */ "./node_modules/core-js/library/modules/_library.js") ? 'pure' : 'global',
  copyright: '© 2019 Denis Pushkarev (zloirock.ru)'
});


/***/ }),

/***/ "./node_modules/core-js/library/modules/_string-at.js":
/*!************************************************************!*\
  !*** ./node_modules/core-js/library/modules/_string-at.js ***!
  \************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var toInteger = __webpack_require__(/*! ./_to-integer */ "./node_modules/core-js/library/modules/_to-integer.js");
var defined = __webpack_require__(/*! ./_defined */ "./node_modules/core-js/library/modules/_defined.js");
// true  -> String#at
// false -> String#codePointAt
module.exports = function (TO_STRING) {
  return function (that, pos) {
    var s = String(defined(that));
    var i = toInteger(pos);
    var l = s.length;
    var a, b;
    if (i < 0 || i >= l) return TO_STRING ? '' : undefined;
    a = s.charCodeAt(i);
    return a < 0xd800 || a > 0xdbff || i + 1 === l || (b = s.charCodeAt(i + 1)) < 0xdc00 || b > 0xdfff
      ? TO_STRING ? s.charAt(i) : a
      : TO_STRING ? s.slice(i, i + 2) : (a - 0xd800 << 10) + (b - 0xdc00) + 0x10000;
  };
};


/***/ }),

/***/ "./node_modules/core-js/library/modules/_to-absolute-index.js":
/*!********************************************************************!*\
  !*** ./node_modules/core-js/library/modules/_to-absolute-index.js ***!
  \********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var toInteger = __webpack_require__(/*! ./_to-integer */ "./node_modules/core-js/library/modules/_to-integer.js");
var max = Math.max;
var min = Math.min;
module.exports = function (index, length) {
  index = toInteger(index);
  return index < 0 ? max(index + length, 0) : min(index, length);
};


/***/ }),

/***/ "./node_modules/core-js/library/modules/_to-integer.js":
/*!*************************************************************!*\
  !*** ./node_modules/core-js/library/modules/_to-integer.js ***!
  \*************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

// 7.1.4 ToInteger
var ceil = Math.ceil;
var floor = Math.floor;
module.exports = function (it) {
  return isNaN(it = +it) ? 0 : (it > 0 ? floor : ceil)(it);
};


/***/ }),

/***/ "./node_modules/core-js/library/modules/_to-iobject.js":
/*!*************************************************************!*\
  !*** ./node_modules/core-js/library/modules/_to-iobject.js ***!
  \*************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// to indexed object, toObject with fallback for non-array-like ES3 strings
var IObject = __webpack_require__(/*! ./_iobject */ "./node_modules/core-js/library/modules/_iobject.js");
var defined = __webpack_require__(/*! ./_defined */ "./node_modules/core-js/library/modules/_defined.js");
module.exports = function (it) {
  return IObject(defined(it));
};


/***/ }),

/***/ "./node_modules/core-js/library/modules/_to-length.js":
/*!************************************************************!*\
  !*** ./node_modules/core-js/library/modules/_to-length.js ***!
  \************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// 7.1.15 ToLength
var toInteger = __webpack_require__(/*! ./_to-integer */ "./node_modules/core-js/library/modules/_to-integer.js");
var min = Math.min;
module.exports = function (it) {
  return it > 0 ? min(toInteger(it), 0x1fffffffffffff) : 0; // pow(2, 53) - 1 == 9007199254740991
};


/***/ }),

/***/ "./node_modules/core-js/library/modules/_to-object.js":
/*!************************************************************!*\
  !*** ./node_modules/core-js/library/modules/_to-object.js ***!
  \************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// 7.1.13 ToObject(argument)
var defined = __webpack_require__(/*! ./_defined */ "./node_modules/core-js/library/modules/_defined.js");
module.exports = function (it) {
  return Object(defined(it));
};


/***/ }),

/***/ "./node_modules/core-js/library/modules/_to-primitive.js":
/*!***************************************************************!*\
  !*** ./node_modules/core-js/library/modules/_to-primitive.js ***!
  \***************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// 7.1.1 ToPrimitive(input [, PreferredType])
var isObject = __webpack_require__(/*! ./_is-object */ "./node_modules/core-js/library/modules/_is-object.js");
// instead of the ES6 spec version, we didn't implement @@toPrimitive case
// and the second argument - flag - preferred type is a string
module.exports = function (it, S) {
  if (!isObject(it)) return it;
  var fn, val;
  if (S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it))) return val;
  if (typeof (fn = it.valueOf) == 'function' && !isObject(val = fn.call(it))) return val;
  if (!S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it))) return val;
  throw TypeError("Can't convert object to primitive value");
};


/***/ }),

/***/ "./node_modules/core-js/library/modules/_uid.js":
/*!******************************************************!*\
  !*** ./node_modules/core-js/library/modules/_uid.js ***!
  \******************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

var id = 0;
var px = Math.random();
module.exports = function (key) {
  return 'Symbol('.concat(key === undefined ? '' : key, ')_', (++id + px).toString(36));
};


/***/ }),

/***/ "./node_modules/core-js/library/modules/_wks-define.js":
/*!*************************************************************!*\
  !*** ./node_modules/core-js/library/modules/_wks-define.js ***!
  \*************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var global = __webpack_require__(/*! ./_global */ "./node_modules/core-js/library/modules/_global.js");
var core = __webpack_require__(/*! ./_core */ "./node_modules/core-js/library/modules/_core.js");
var LIBRARY = __webpack_require__(/*! ./_library */ "./node_modules/core-js/library/modules/_library.js");
var wksExt = __webpack_require__(/*! ./_wks-ext */ "./node_modules/core-js/library/modules/_wks-ext.js");
var defineProperty = __webpack_require__(/*! ./_object-dp */ "./node_modules/core-js/library/modules/_object-dp.js").f;
module.exports = function (name) {
  var $Symbol = core.Symbol || (core.Symbol = LIBRARY ? {} : global.Symbol || {});
  if (name.charAt(0) != '_' && !(name in $Symbol)) defineProperty($Symbol, name, { value: wksExt.f(name) });
};


/***/ }),

/***/ "./node_modules/core-js/library/modules/_wks-ext.js":
/*!**********************************************************!*\
  !*** ./node_modules/core-js/library/modules/_wks-ext.js ***!
  \**********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

exports.f = __webpack_require__(/*! ./_wks */ "./node_modules/core-js/library/modules/_wks.js");


/***/ }),

/***/ "./node_modules/core-js/library/modules/_wks.js":
/*!******************************************************!*\
  !*** ./node_modules/core-js/library/modules/_wks.js ***!
  \******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var store = __webpack_require__(/*! ./_shared */ "./node_modules/core-js/library/modules/_shared.js")('wks');
var uid = __webpack_require__(/*! ./_uid */ "./node_modules/core-js/library/modules/_uid.js");
var Symbol = __webpack_require__(/*! ./_global */ "./node_modules/core-js/library/modules/_global.js").Symbol;
var USE_SYMBOL = typeof Symbol == 'function';

var $exports = module.exports = function (name) {
  return store[name] || (store[name] =
    USE_SYMBOL && Symbol[name] || (USE_SYMBOL ? Symbol : uid)('Symbol.' + name));
};

$exports.store = store;


/***/ }),

/***/ "./node_modules/core-js/library/modules/es6.array.iterator.js":
/*!********************************************************************!*\
  !*** ./node_modules/core-js/library/modules/es6.array.iterator.js ***!
  \********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var addToUnscopables = __webpack_require__(/*! ./_add-to-unscopables */ "./node_modules/core-js/library/modules/_add-to-unscopables.js");
var step = __webpack_require__(/*! ./_iter-step */ "./node_modules/core-js/library/modules/_iter-step.js");
var Iterators = __webpack_require__(/*! ./_iterators */ "./node_modules/core-js/library/modules/_iterators.js");
var toIObject = __webpack_require__(/*! ./_to-iobject */ "./node_modules/core-js/library/modules/_to-iobject.js");

// 22.1.3.4 Array.prototype.entries()
// 22.1.3.13 Array.prototype.keys()
// 22.1.3.29 Array.prototype.values()
// 22.1.3.30 Array.prototype[@@iterator]()
module.exports = __webpack_require__(/*! ./_iter-define */ "./node_modules/core-js/library/modules/_iter-define.js")(Array, 'Array', function (iterated, kind) {
  this._t = toIObject(iterated); // target
  this._i = 0;                   // next index
  this._k = kind;                // kind
// 22.1.5.2.1 %ArrayIteratorPrototype%.next()
}, function () {
  var O = this._t;
  var kind = this._k;
  var index = this._i++;
  if (!O || index >= O.length) {
    this._t = undefined;
    return step(1);
  }
  if (kind == 'keys') return step(0, index);
  if (kind == 'values') return step(0, O[index]);
  return step(0, [index, O[index]]);
}, 'values');

// argumentsList[@@iterator] is %ArrayProto_values% (9.4.4.6, 9.4.4.7)
Iterators.Arguments = Iterators.Array;

addToUnscopables('keys');
addToUnscopables('values');
addToUnscopables('entries');


/***/ }),

/***/ "./node_modules/core-js/library/modules/es6.object.assign.js":
/*!*******************************************************************!*\
  !*** ./node_modules/core-js/library/modules/es6.object.assign.js ***!
  \*******************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// 19.1.3.1 Object.assign(target, source)
var $export = __webpack_require__(/*! ./_export */ "./node_modules/core-js/library/modules/_export.js");

$export($export.S + $export.F, 'Object', { assign: __webpack_require__(/*! ./_object-assign */ "./node_modules/core-js/library/modules/_object-assign.js") });


/***/ }),

/***/ "./node_modules/core-js/library/modules/es6.object.create.js":
/*!*******************************************************************!*\
  !*** ./node_modules/core-js/library/modules/es6.object.create.js ***!
  \*******************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var $export = __webpack_require__(/*! ./_export */ "./node_modules/core-js/library/modules/_export.js");
// 19.1.2.2 / 15.2.3.5 Object.create(O [, Properties])
$export($export.S, 'Object', { create: __webpack_require__(/*! ./_object-create */ "./node_modules/core-js/library/modules/_object-create.js") });


/***/ }),

/***/ "./node_modules/core-js/library/modules/es6.object.define-property.js":
/*!****************************************************************************!*\
  !*** ./node_modules/core-js/library/modules/es6.object.define-property.js ***!
  \****************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var $export = __webpack_require__(/*! ./_export */ "./node_modules/core-js/library/modules/_export.js");
// 19.1.2.4 / 15.2.3.6 Object.defineProperty(O, P, Attributes)
$export($export.S + $export.F * !__webpack_require__(/*! ./_descriptors */ "./node_modules/core-js/library/modules/_descriptors.js"), 'Object', { defineProperty: __webpack_require__(/*! ./_object-dp */ "./node_modules/core-js/library/modules/_object-dp.js").f });


/***/ }),

/***/ "./node_modules/core-js/library/modules/es6.object.get-prototype-of.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/core-js/library/modules/es6.object.get-prototype-of.js ***!
  \*****************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// 19.1.2.9 Object.getPrototypeOf(O)
var toObject = __webpack_require__(/*! ./_to-object */ "./node_modules/core-js/library/modules/_to-object.js");
var $getPrototypeOf = __webpack_require__(/*! ./_object-gpo */ "./node_modules/core-js/library/modules/_object-gpo.js");

__webpack_require__(/*! ./_object-sap */ "./node_modules/core-js/library/modules/_object-sap.js")('getPrototypeOf', function () {
  return function getPrototypeOf(it) {
    return $getPrototypeOf(toObject(it));
  };
});


/***/ }),

/***/ "./node_modules/core-js/library/modules/es6.object.set-prototype-of.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/core-js/library/modules/es6.object.set-prototype-of.js ***!
  \*****************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// 19.1.3.19 Object.setPrototypeOf(O, proto)
var $export = __webpack_require__(/*! ./_export */ "./node_modules/core-js/library/modules/_export.js");
$export($export.S, 'Object', { setPrototypeOf: __webpack_require__(/*! ./_set-proto */ "./node_modules/core-js/library/modules/_set-proto.js").set });


/***/ }),

/***/ "./node_modules/core-js/library/modules/es6.object.to-string.js":
/*!**********************************************************************!*\
  !*** ./node_modules/core-js/library/modules/es6.object.to-string.js ***!
  \**********************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {



/***/ }),

/***/ "./node_modules/core-js/library/modules/es6.string.iterator.js":
/*!*********************************************************************!*\
  !*** ./node_modules/core-js/library/modules/es6.string.iterator.js ***!
  \*********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var $at = __webpack_require__(/*! ./_string-at */ "./node_modules/core-js/library/modules/_string-at.js")(true);

// 21.1.3.27 String.prototype[@@iterator]()
__webpack_require__(/*! ./_iter-define */ "./node_modules/core-js/library/modules/_iter-define.js")(String, 'String', function (iterated) {
  this._t = String(iterated); // target
  this._i = 0;                // next index
// 21.1.5.2.1 %StringIteratorPrototype%.next()
}, function () {
  var O = this._t;
  var index = this._i;
  var point;
  if (index >= O.length) return { value: undefined, done: true };
  point = $at(O, index);
  this._i += point.length;
  return { value: point, done: false };
});


/***/ }),

/***/ "./node_modules/core-js/library/modules/es6.symbol.js":
/*!************************************************************!*\
  !*** ./node_modules/core-js/library/modules/es6.symbol.js ***!
  \************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

// ECMAScript 6 symbols shim
var global = __webpack_require__(/*! ./_global */ "./node_modules/core-js/library/modules/_global.js");
var has = __webpack_require__(/*! ./_has */ "./node_modules/core-js/library/modules/_has.js");
var DESCRIPTORS = __webpack_require__(/*! ./_descriptors */ "./node_modules/core-js/library/modules/_descriptors.js");
var $export = __webpack_require__(/*! ./_export */ "./node_modules/core-js/library/modules/_export.js");
var redefine = __webpack_require__(/*! ./_redefine */ "./node_modules/core-js/library/modules/_redefine.js");
var META = __webpack_require__(/*! ./_meta */ "./node_modules/core-js/library/modules/_meta.js").KEY;
var $fails = __webpack_require__(/*! ./_fails */ "./node_modules/core-js/library/modules/_fails.js");
var shared = __webpack_require__(/*! ./_shared */ "./node_modules/core-js/library/modules/_shared.js");
var setToStringTag = __webpack_require__(/*! ./_set-to-string-tag */ "./node_modules/core-js/library/modules/_set-to-string-tag.js");
var uid = __webpack_require__(/*! ./_uid */ "./node_modules/core-js/library/modules/_uid.js");
var wks = __webpack_require__(/*! ./_wks */ "./node_modules/core-js/library/modules/_wks.js");
var wksExt = __webpack_require__(/*! ./_wks-ext */ "./node_modules/core-js/library/modules/_wks-ext.js");
var wksDefine = __webpack_require__(/*! ./_wks-define */ "./node_modules/core-js/library/modules/_wks-define.js");
var enumKeys = __webpack_require__(/*! ./_enum-keys */ "./node_modules/core-js/library/modules/_enum-keys.js");
var isArray = __webpack_require__(/*! ./_is-array */ "./node_modules/core-js/library/modules/_is-array.js");
var anObject = __webpack_require__(/*! ./_an-object */ "./node_modules/core-js/library/modules/_an-object.js");
var isObject = __webpack_require__(/*! ./_is-object */ "./node_modules/core-js/library/modules/_is-object.js");
var toObject = __webpack_require__(/*! ./_to-object */ "./node_modules/core-js/library/modules/_to-object.js");
var toIObject = __webpack_require__(/*! ./_to-iobject */ "./node_modules/core-js/library/modules/_to-iobject.js");
var toPrimitive = __webpack_require__(/*! ./_to-primitive */ "./node_modules/core-js/library/modules/_to-primitive.js");
var createDesc = __webpack_require__(/*! ./_property-desc */ "./node_modules/core-js/library/modules/_property-desc.js");
var _create = __webpack_require__(/*! ./_object-create */ "./node_modules/core-js/library/modules/_object-create.js");
var gOPNExt = __webpack_require__(/*! ./_object-gopn-ext */ "./node_modules/core-js/library/modules/_object-gopn-ext.js");
var $GOPD = __webpack_require__(/*! ./_object-gopd */ "./node_modules/core-js/library/modules/_object-gopd.js");
var $GOPS = __webpack_require__(/*! ./_object-gops */ "./node_modules/core-js/library/modules/_object-gops.js");
var $DP = __webpack_require__(/*! ./_object-dp */ "./node_modules/core-js/library/modules/_object-dp.js");
var $keys = __webpack_require__(/*! ./_object-keys */ "./node_modules/core-js/library/modules/_object-keys.js");
var gOPD = $GOPD.f;
var dP = $DP.f;
var gOPN = gOPNExt.f;
var $Symbol = global.Symbol;
var $JSON = global.JSON;
var _stringify = $JSON && $JSON.stringify;
var PROTOTYPE = 'prototype';
var HIDDEN = wks('_hidden');
var TO_PRIMITIVE = wks('toPrimitive');
var isEnum = {}.propertyIsEnumerable;
var SymbolRegistry = shared('symbol-registry');
var AllSymbols = shared('symbols');
var OPSymbols = shared('op-symbols');
var ObjectProto = Object[PROTOTYPE];
var USE_NATIVE = typeof $Symbol == 'function' && !!$GOPS.f;
var QObject = global.QObject;
// Don't use setters in Qt Script, https://github.com/zloirock/core-js/issues/173
var setter = !QObject || !QObject[PROTOTYPE] || !QObject[PROTOTYPE].findChild;

// fallback for old Android, https://code.google.com/p/v8/issues/detail?id=687
var setSymbolDesc = DESCRIPTORS && $fails(function () {
  return _create(dP({}, 'a', {
    get: function () { return dP(this, 'a', { value: 7 }).a; }
  })).a != 7;
}) ? function (it, key, D) {
  var protoDesc = gOPD(ObjectProto, key);
  if (protoDesc) delete ObjectProto[key];
  dP(it, key, D);
  if (protoDesc && it !== ObjectProto) dP(ObjectProto, key, protoDesc);
} : dP;

var wrap = function (tag) {
  var sym = AllSymbols[tag] = _create($Symbol[PROTOTYPE]);
  sym._k = tag;
  return sym;
};

var isSymbol = USE_NATIVE && typeof $Symbol.iterator == 'symbol' ? function (it) {
  return typeof it == 'symbol';
} : function (it) {
  return it instanceof $Symbol;
};

var $defineProperty = function defineProperty(it, key, D) {
  if (it === ObjectProto) $defineProperty(OPSymbols, key, D);
  anObject(it);
  key = toPrimitive(key, true);
  anObject(D);
  if (has(AllSymbols, key)) {
    if (!D.enumerable) {
      if (!has(it, HIDDEN)) dP(it, HIDDEN, createDesc(1, {}));
      it[HIDDEN][key] = true;
    } else {
      if (has(it, HIDDEN) && it[HIDDEN][key]) it[HIDDEN][key] = false;
      D = _create(D, { enumerable: createDesc(0, false) });
    } return setSymbolDesc(it, key, D);
  } return dP(it, key, D);
};
var $defineProperties = function defineProperties(it, P) {
  anObject(it);
  var keys = enumKeys(P = toIObject(P));
  var i = 0;
  var l = keys.length;
  var key;
  while (l > i) $defineProperty(it, key = keys[i++], P[key]);
  return it;
};
var $create = function create(it, P) {
  return P === undefined ? _create(it) : $defineProperties(_create(it), P);
};
var $propertyIsEnumerable = function propertyIsEnumerable(key) {
  var E = isEnum.call(this, key = toPrimitive(key, true));
  if (this === ObjectProto && has(AllSymbols, key) && !has(OPSymbols, key)) return false;
  return E || !has(this, key) || !has(AllSymbols, key) || has(this, HIDDEN) && this[HIDDEN][key] ? E : true;
};
var $getOwnPropertyDescriptor = function getOwnPropertyDescriptor(it, key) {
  it = toIObject(it);
  key = toPrimitive(key, true);
  if (it === ObjectProto && has(AllSymbols, key) && !has(OPSymbols, key)) return;
  var D = gOPD(it, key);
  if (D && has(AllSymbols, key) && !(has(it, HIDDEN) && it[HIDDEN][key])) D.enumerable = true;
  return D;
};
var $getOwnPropertyNames = function getOwnPropertyNames(it) {
  var names = gOPN(toIObject(it));
  var result = [];
  var i = 0;
  var key;
  while (names.length > i) {
    if (!has(AllSymbols, key = names[i++]) && key != HIDDEN && key != META) result.push(key);
  } return result;
};
var $getOwnPropertySymbols = function getOwnPropertySymbols(it) {
  var IS_OP = it === ObjectProto;
  var names = gOPN(IS_OP ? OPSymbols : toIObject(it));
  var result = [];
  var i = 0;
  var key;
  while (names.length > i) {
    if (has(AllSymbols, key = names[i++]) && (IS_OP ? has(ObjectProto, key) : true)) result.push(AllSymbols[key]);
  } return result;
};

// 19.4.1.1 Symbol([description])
if (!USE_NATIVE) {
  $Symbol = function Symbol() {
    if (this instanceof $Symbol) throw TypeError('Symbol is not a constructor!');
    var tag = uid(arguments.length > 0 ? arguments[0] : undefined);
    var $set = function (value) {
      if (this === ObjectProto) $set.call(OPSymbols, value);
      if (has(this, HIDDEN) && has(this[HIDDEN], tag)) this[HIDDEN][tag] = false;
      setSymbolDesc(this, tag, createDesc(1, value));
    };
    if (DESCRIPTORS && setter) setSymbolDesc(ObjectProto, tag, { configurable: true, set: $set });
    return wrap(tag);
  };
  redefine($Symbol[PROTOTYPE], 'toString', function toString() {
    return this._k;
  });

  $GOPD.f = $getOwnPropertyDescriptor;
  $DP.f = $defineProperty;
  __webpack_require__(/*! ./_object-gopn */ "./node_modules/core-js/library/modules/_object-gopn.js").f = gOPNExt.f = $getOwnPropertyNames;
  __webpack_require__(/*! ./_object-pie */ "./node_modules/core-js/library/modules/_object-pie.js").f = $propertyIsEnumerable;
  $GOPS.f = $getOwnPropertySymbols;

  if (DESCRIPTORS && !__webpack_require__(/*! ./_library */ "./node_modules/core-js/library/modules/_library.js")) {
    redefine(ObjectProto, 'propertyIsEnumerable', $propertyIsEnumerable, true);
  }

  wksExt.f = function (name) {
    return wrap(wks(name));
  };
}

$export($export.G + $export.W + $export.F * !USE_NATIVE, { Symbol: $Symbol });

for (var es6Symbols = (
  // 19.4.2.2, 19.4.2.3, 19.4.2.4, 19.4.2.6, 19.4.2.8, 19.4.2.9, 19.4.2.10, 19.4.2.11, 19.4.2.12, 19.4.2.13, 19.4.2.14
  'hasInstance,isConcatSpreadable,iterator,match,replace,search,species,split,toPrimitive,toStringTag,unscopables'
).split(','), j = 0; es6Symbols.length > j;)wks(es6Symbols[j++]);

for (var wellKnownSymbols = $keys(wks.store), k = 0; wellKnownSymbols.length > k;) wksDefine(wellKnownSymbols[k++]);

$export($export.S + $export.F * !USE_NATIVE, 'Symbol', {
  // 19.4.2.1 Symbol.for(key)
  'for': function (key) {
    return has(SymbolRegistry, key += '')
      ? SymbolRegistry[key]
      : SymbolRegistry[key] = $Symbol(key);
  },
  // 19.4.2.5 Symbol.keyFor(sym)
  keyFor: function keyFor(sym) {
    if (!isSymbol(sym)) throw TypeError(sym + ' is not a symbol!');
    for (var key in SymbolRegistry) if (SymbolRegistry[key] === sym) return key;
  },
  useSetter: function () { setter = true; },
  useSimple: function () { setter = false; }
});

$export($export.S + $export.F * !USE_NATIVE, 'Object', {
  // 19.1.2.2 Object.create(O [, Properties])
  create: $create,
  // 19.1.2.4 Object.defineProperty(O, P, Attributes)
  defineProperty: $defineProperty,
  // 19.1.2.3 Object.defineProperties(O, Properties)
  defineProperties: $defineProperties,
  // 19.1.2.6 Object.getOwnPropertyDescriptor(O, P)
  getOwnPropertyDescriptor: $getOwnPropertyDescriptor,
  // 19.1.2.7 Object.getOwnPropertyNames(O)
  getOwnPropertyNames: $getOwnPropertyNames,
  // 19.1.2.8 Object.getOwnPropertySymbols(O)
  getOwnPropertySymbols: $getOwnPropertySymbols
});

// Chrome 38 and 39 `Object.getOwnPropertySymbols` fails on primitives
// https://bugs.chromium.org/p/v8/issues/detail?id=3443
var FAILS_ON_PRIMITIVES = $fails(function () { $GOPS.f(1); });

$export($export.S + $export.F * FAILS_ON_PRIMITIVES, 'Object', {
  getOwnPropertySymbols: function getOwnPropertySymbols(it) {
    return $GOPS.f(toObject(it));
  }
});

// 24.3.2 JSON.stringify(value [, replacer [, space]])
$JSON && $export($export.S + $export.F * (!USE_NATIVE || $fails(function () {
  var S = $Symbol();
  // MS Edge converts symbol values to JSON as {}
  // WebKit converts symbol values to JSON as null
  // V8 throws on boxed symbols
  return _stringify([S]) != '[null]' || _stringify({ a: S }) != '{}' || _stringify(Object(S)) != '{}';
})), 'JSON', {
  stringify: function stringify(it) {
    var args = [it];
    var i = 1;
    var replacer, $replacer;
    while (arguments.length > i) args.push(arguments[i++]);
    $replacer = replacer = args[1];
    if (!isObject(replacer) && it === undefined || isSymbol(it)) return; // IE8 returns string on undefined
    if (!isArray(replacer)) replacer = function (key, value) {
      if (typeof $replacer == 'function') value = $replacer.call(this, key, value);
      if (!isSymbol(value)) return value;
    };
    args[1] = replacer;
    return _stringify.apply($JSON, args);
  }
});

// 19.4.3.4 Symbol.prototype[@@toPrimitive](hint)
$Symbol[PROTOTYPE][TO_PRIMITIVE] || __webpack_require__(/*! ./_hide */ "./node_modules/core-js/library/modules/_hide.js")($Symbol[PROTOTYPE], TO_PRIMITIVE, $Symbol[PROTOTYPE].valueOf);
// 19.4.3.5 Symbol.prototype[@@toStringTag]
setToStringTag($Symbol, 'Symbol');
// 20.2.1.9 Math[@@toStringTag]
setToStringTag(Math, 'Math', true);
// 24.3.3 JSON[@@toStringTag]
setToStringTag(global.JSON, 'JSON', true);


/***/ }),

/***/ "./node_modules/core-js/library/modules/es7.symbol.async-iterator.js":
/*!***************************************************************************!*\
  !*** ./node_modules/core-js/library/modules/es7.symbol.async-iterator.js ***!
  \***************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__(/*! ./_wks-define */ "./node_modules/core-js/library/modules/_wks-define.js")('asyncIterator');


/***/ }),

/***/ "./node_modules/core-js/library/modules/es7.symbol.observable.js":
/*!***********************************************************************!*\
  !*** ./node_modules/core-js/library/modules/es7.symbol.observable.js ***!
  \***********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__(/*! ./_wks-define */ "./node_modules/core-js/library/modules/_wks-define.js")('observable');


/***/ }),

/***/ "./node_modules/core-js/library/modules/web.dom.iterable.js":
/*!******************************************************************!*\
  !*** ./node_modules/core-js/library/modules/web.dom.iterable.js ***!
  \******************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__(/*! ./es6.array.iterator */ "./node_modules/core-js/library/modules/es6.array.iterator.js");
var global = __webpack_require__(/*! ./_global */ "./node_modules/core-js/library/modules/_global.js");
var hide = __webpack_require__(/*! ./_hide */ "./node_modules/core-js/library/modules/_hide.js");
var Iterators = __webpack_require__(/*! ./_iterators */ "./node_modules/core-js/library/modules/_iterators.js");
var TO_STRING_TAG = __webpack_require__(/*! ./_wks */ "./node_modules/core-js/library/modules/_wks.js")('toStringTag');

var DOMIterables = ('CSSRuleList,CSSStyleDeclaration,CSSValueList,ClientRectList,DOMRectList,DOMStringList,' +
  'DOMTokenList,DataTransferItemList,FileList,HTMLAllCollection,HTMLCollection,HTMLFormElement,HTMLSelectElement,' +
  'MediaList,MimeTypeArray,NamedNodeMap,NodeList,PaintRequestList,Plugin,PluginArray,SVGLengthList,SVGNumberList,' +
  'SVGPathSegList,SVGPointList,SVGStringList,SVGTransformList,SourceBufferList,StyleSheetList,TextTrackCueList,' +
  'TextTrackList,TouchList').split(',');

for (var i = 0; i < DOMIterables.length; i++) {
  var NAME = DOMIterables[i];
  var Collection = global[NAME];
  var proto = Collection && Collection.prototype;
  if (proto && !proto[TO_STRING_TAG]) hide(proto, TO_STRING_TAG, NAME);
  Iterators[NAME] = Iterators.Array;
}


/***/ }),

/***/ "./node_modules/function-bind/implementation.js":
/*!******************************************************!*\
  !*** ./node_modules/function-bind/implementation.js ***!
  \******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


/* eslint no-invalid-this: 1 */

var ERROR_MESSAGE = 'Function.prototype.bind called on incompatible ';
var slice = Array.prototype.slice;
var toStr = Object.prototype.toString;
var funcType = '[object Function]';

module.exports = function bind(that) {
    var target = this;
    if (typeof target !== 'function' || toStr.call(target) !== funcType) {
        throw new TypeError(ERROR_MESSAGE + target);
    }
    var args = slice.call(arguments, 1);

    var bound;
    var binder = function () {
        if (this instanceof bound) {
            var result = target.apply(
                this,
                args.concat(slice.call(arguments))
            );
            if (Object(result) === result) {
                return result;
            }
            return this;
        } else {
            return target.apply(
                that,
                args.concat(slice.call(arguments))
            );
        }
    };

    var boundLength = Math.max(0, target.length - args.length);
    var boundArgs = [];
    for (var i = 0; i < boundLength; i++) {
        boundArgs.push('$' + i);
    }

    bound = Function('binder', 'return function (' + boundArgs.join(',') + '){ return binder.apply(this,arguments); }')(binder);

    if (target.prototype) {
        var Empty = function Empty() {};
        Empty.prototype = target.prototype;
        bound.prototype = new Empty();
        Empty.prototype = null;
    }

    return bound;
};


/***/ }),

/***/ "./node_modules/function-bind/index.js":
/*!*********************************************!*\
  !*** ./node_modules/function-bind/index.js ***!
  \*********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var implementation = __webpack_require__(/*! ./implementation */ "./node_modules/function-bind/implementation.js");

module.exports = Function.prototype.bind || implementation;


/***/ }),

/***/ "./node_modules/has/src/index.js":
/*!***************************************!*\
  !*** ./node_modules/has/src/index.js ***!
  \***************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var bind = __webpack_require__(/*! function-bind */ "./node_modules/function-bind/index.js");

module.exports = bind.call(Function.call, Object.prototype.hasOwnProperty);


/***/ }),

/***/ "./node_modules/hoist-non-react-statics/dist/hoist-non-react-statics.cjs.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/hoist-non-react-statics/dist/hoist-non-react-statics.cjs.js ***!
  \**********************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var reactIs = __webpack_require__(/*! react-is */ "./node_modules/react-is/index.js");

/**
 * Copyright 2015, Yahoo! Inc.
 * Copyrights licensed under the New BSD License. See the accompanying LICENSE file for terms.
 */
var REACT_STATICS = {
  childContextTypes: true,
  contextType: true,
  contextTypes: true,
  defaultProps: true,
  displayName: true,
  getDefaultProps: true,
  getDerivedStateFromError: true,
  getDerivedStateFromProps: true,
  mixins: true,
  propTypes: true,
  type: true
};
var KNOWN_STATICS = {
  name: true,
  length: true,
  prototype: true,
  caller: true,
  callee: true,
  arguments: true,
  arity: true
};
var FORWARD_REF_STATICS = {
  '$$typeof': true,
  render: true,
  defaultProps: true,
  displayName: true,
  propTypes: true
};
var MEMO_STATICS = {
  '$$typeof': true,
  compare: true,
  defaultProps: true,
  displayName: true,
  propTypes: true,
  type: true
};
var TYPE_STATICS = {};
TYPE_STATICS[reactIs.ForwardRef] = FORWARD_REF_STATICS;
TYPE_STATICS[reactIs.Memo] = MEMO_STATICS;

function getStatics(component) {
  // React v16.11 and below
  if (reactIs.isMemo(component)) {
    return MEMO_STATICS;
  } // React v16.12 and above


  return TYPE_STATICS[component['$$typeof']] || REACT_STATICS;
}

var defineProperty = Object.defineProperty;
var getOwnPropertyNames = Object.getOwnPropertyNames;
var getOwnPropertySymbols = Object.getOwnPropertySymbols;
var getOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;
var getPrototypeOf = Object.getPrototypeOf;
var objectPrototype = Object.prototype;
function hoistNonReactStatics(targetComponent, sourceComponent, blacklist) {
  if (typeof sourceComponent !== 'string') {
    // don't hoist over string (html) components
    if (objectPrototype) {
      var inheritedComponent = getPrototypeOf(sourceComponent);

      if (inheritedComponent && inheritedComponent !== objectPrototype) {
        hoistNonReactStatics(targetComponent, inheritedComponent, blacklist);
      }
    }

    var keys = getOwnPropertyNames(sourceComponent);

    if (getOwnPropertySymbols) {
      keys = keys.concat(getOwnPropertySymbols(sourceComponent));
    }

    var targetStatics = getStatics(targetComponent);
    var sourceStatics = getStatics(sourceComponent);

    for (var i = 0; i < keys.length; ++i) {
      var key = keys[i];

      if (!KNOWN_STATICS[key] && !(blacklist && blacklist[key]) && !(sourceStatics && sourceStatics[key]) && !(targetStatics && targetStatics[key])) {
        var descriptor = getOwnPropertyDescriptor(sourceComponent, key);

        try {
          // Avoid failures from read-only properties
          defineProperty(targetComponent, key, descriptor);
        } catch (e) {}
      }
    }
  }

  return targetComponent;
}

module.exports = hoistNonReactStatics;


/***/ }),

/***/ "./node_modules/lottie-web/build/player/lottie.js":
/*!********************************************************!*\
  !*** ./node_modules/lottie-web/build/player/lottie.js ***!
  \********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var __WEBPACK_AMD_DEFINE_RESULT__;(typeof navigator !== "undefined") && (function(root, factory) {
    if (true) {
        !(__WEBPACK_AMD_DEFINE_RESULT__ = (function() {
            return factory(root);
        }).call(exports, __webpack_require__, exports, module),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
    } else {}
}((window || {}), function(window) {
	"use strict";
var svgNS = "http://www.w3.org/2000/svg";

var locationHref = '';

var initialDefaultFrame = -999999;

var subframeEnabled = true;
var expressionsPlugin;
var isSafari = /^((?!chrome|android).)*safari/i.test(navigator.userAgent);
var cachedColors = {};
var bm_rounder = Math.round;
var bm_rnd;
var bm_pow = Math.pow;
var bm_sqrt = Math.sqrt;
var bm_abs = Math.abs;
var bm_floor = Math.floor;
var bm_max = Math.max;
var bm_min = Math.min;
var blitter = 10;

var BMMath = {};
(function(){
    var propertyNames = ["abs", "acos", "acosh", "asin", "asinh", "atan", "atanh", "atan2", "ceil", "cbrt", "expm1", "clz32", "cos", "cosh", "exp", "floor", "fround", "hypot", "imul", "log", "log1p", "log2", "log10", "max", "min", "pow", "random", "round", "sign", "sin", "sinh", "sqrt", "tan", "tanh", "trunc", "E", "LN10", "LN2", "LOG10E", "LOG2E", "PI", "SQRT1_2", "SQRT2"];
    var i, len = propertyNames.length;
    for(i=0;i<len;i+=1){
        BMMath[propertyNames[i]] = Math[propertyNames[i]];
    }
}());

function ProjectInterface(){return {};}

BMMath.random = Math.random;
BMMath.abs = function(val){
    var tOfVal = typeof val;
    if(tOfVal === 'object' && val.length){
        var absArr = createSizedArray(val.length);
        var i, len = val.length;
        for(i=0;i<len;i+=1){
            absArr[i] = Math.abs(val[i]);
        }
        return absArr;
    }
    return Math.abs(val);

};
var defaultCurveSegments = 150;
var degToRads = Math.PI/180;
var roundCorner = 0.5519;

function roundValues(flag){
    if(flag){
        bm_rnd = Math.round;
    }else{
        bm_rnd = function(val){
            return val;
        };
    }
}
roundValues(false);

function styleDiv(element){
    element.style.position = 'absolute';
    element.style.top = 0;
    element.style.left = 0;
    element.style.display = 'block';
    element.style.transformOrigin = element.style.webkitTransformOrigin = '0 0';
    element.style.backfaceVisibility  = element.style.webkitBackfaceVisibility = 'visible';
    element.style.transformStyle = element.style.webkitTransformStyle = element.style.mozTransformStyle = "preserve-3d";
}

function BMEnterFrameEvent(type, currentTime, totalTime, frameMultiplier){
    this.type = type;
    this.currentTime = currentTime;
    this.totalTime = totalTime;
    this.direction = frameMultiplier < 0 ? -1 : 1;
}

function BMCompleteEvent(type, frameMultiplier){
    this.type = type;
    this.direction = frameMultiplier < 0 ? -1 : 1;
}

function BMCompleteLoopEvent(type, totalLoops, currentLoop, frameMultiplier){
    this.type = type;
    this.currentLoop = currentLoop;
    this.totalLoops = totalLoops;
    this.direction = frameMultiplier < 0 ? -1 : 1;
}

function BMSegmentStartEvent(type, firstFrame, totalFrames){
    this.type = type;
    this.firstFrame = firstFrame;
    this.totalFrames = totalFrames;
}

function BMDestroyEvent(type, target){
    this.type = type;
    this.target = target;
}

function BMRenderFrameErrorEvent(nativeError, currentTime) {
    this.type = 'renderFrameError';
    this.nativeError = nativeError;
    this.currentTime = currentTime;
}

function BMConfigErrorEvent(nativeError) {
    this.type = 'configError';
    this.nativeError = nativeError;
}

function BMAnimationConfigErrorEvent(type, nativeError) {
    this.type = type;
    this.nativeError = nativeError;
    this.currentTime = currentTime;
}

var createElementID = (function(){
    var _count = 0;
    return function createID() {
        return '__lottie_element_' + ++_count
    }
}())

function HSVtoRGB(h, s, v) {
    var r, g, b, i, f, p, q, t;
    i = Math.floor(h * 6);
    f = h * 6 - i;
    p = v * (1 - s);
    q = v * (1 - f * s);
    t = v * (1 - (1 - f) * s);
    switch (i % 6) {
        case 0: r = v; g = t; b = p; break;
        case 1: r = q; g = v; b = p; break;
        case 2: r = p; g = v; b = t; break;
        case 3: r = p; g = q; b = v; break;
        case 4: r = t; g = p; b = v; break;
        case 5: r = v; g = p; b = q; break;
    }
    return [ r,
        g,
         b ];
}

function RGBtoHSV(r, g, b) {
    var max = Math.max(r, g, b), min = Math.min(r, g, b),
        d = max - min,
        h,
        s = (max === 0 ? 0 : d / max),
        v = max / 255;

    switch (max) {
        case min: h = 0; break;
        case r: h = (g - b) + d * (g < b ? 6: 0); h /= 6 * d; break;
        case g: h = (b - r) + d * 2; h /= 6 * d; break;
        case b: h = (r - g) + d * 4; h /= 6 * d; break;
    }

    return [
         h,
         s,
         v
    ];
}

function addSaturationToRGB(color,offset){
    var hsv = RGBtoHSV(color[0]*255,color[1]*255,color[2]*255);
    hsv[1] += offset;
    if (hsv[1] > 1) {
        hsv[1] = 1;
    }
    else if (hsv[1] <= 0) {
        hsv[1] = 0;
    }
    return HSVtoRGB(hsv[0],hsv[1],hsv[2]);
}

function addBrightnessToRGB(color,offset){
    var hsv = RGBtoHSV(color[0]*255,color[1]*255,color[2]*255);
    hsv[2] += offset;
    if (hsv[2] > 1) {
        hsv[2] = 1;
    }
    else if (hsv[2] < 0) {
        hsv[2] = 0;
    }
    return HSVtoRGB(hsv[0],hsv[1],hsv[2]);
}

function addHueToRGB(color,offset) {
    var hsv = RGBtoHSV(color[0]*255,color[1]*255,color[2]*255);
    hsv[0] += offset/360;
    if (hsv[0] > 1) {
        hsv[0] -= 1;
    }
    else if (hsv[0] < 0) {
        hsv[0] += 1;
    }
    return HSVtoRGB(hsv[0],hsv[1],hsv[2]);
}

var rgbToHex = (function(){
    var colorMap = [];
    var i;
    var hex;
    for(i=0;i<256;i+=1){
        hex = i.toString(16);
        colorMap[i] = hex.length == 1 ? '0' + hex : hex;
    }

    return function(r, g, b) {
        if(r<0){
            r = 0;
        }
        if(g<0){
            g = 0;
        }
        if(b<0){
            b = 0;
        }
        return '#' + colorMap[r] + colorMap[g] + colorMap[b];
    };
}());
function BaseEvent(){}
BaseEvent.prototype = {
	triggerEvent: function (eventName, args) {
	    if (this._cbs[eventName]) {
	        var len = this._cbs[eventName].length;
	        for (var i = 0; i < len; i++){
	            this._cbs[eventName][i](args);
	        }
	    }
	},
	addEventListener: function (eventName, callback) {
	    if (!this._cbs[eventName]){
	        this._cbs[eventName] = [];
	    }
	    this._cbs[eventName].push(callback);

		return function() {
			this.removeEventListener(eventName, callback);
		}.bind(this);
	},
	removeEventListener: function (eventName,callback){
	    if (!callback){
	        this._cbs[eventName] = null;
	    }else if(this._cbs[eventName]){
	        var i = 0, len = this._cbs[eventName].length;
	        while(i<len){
	            if(this._cbs[eventName][i] === callback){
	                this._cbs[eventName].splice(i,1);
	                i -=1;
	                len -= 1;
	            }
	            i += 1;
	        }
	        if(!this._cbs[eventName].length){
	            this._cbs[eventName] = null;
	        }
	    }
	}
};
var createTypedArray = (function(){
	function createRegularArray(type, len){
		var i = 0, arr = [], value;
		switch(type) {
			case 'int16':
			case 'uint8c':
				value = 1;
				break;
			default:
				value = 1.1;
				break;
		}
		for(i = 0; i < len; i += 1) {
			arr.push(value);
		}
		return arr;
	}
	function createTypedArray(type, len){
		if(type === 'float32') {
			return new Float32Array(len);
		} else if(type === 'int16') {
			return new Int16Array(len);
		} else if(type === 'uint8c') {
			return new Uint8ClampedArray(len);
		}
	}
	if(typeof Uint8ClampedArray === 'function' && typeof Float32Array === 'function') {
		return createTypedArray;
	} else {
		return createRegularArray;
	}
}());

function createSizedArray(len) {
	return Array.apply(null,{length:len});
}
function createNS(type) {
	//return {appendChild:function(){},setAttribute:function(){},style:{}}
	return document.createElementNS(svgNS, type);
}
function createTag(type) {
	//return {appendChild:function(){},setAttribute:function(){},style:{}}
	return document.createElement(type);
}
function DynamicPropertyContainer(){};
DynamicPropertyContainer.prototype = {
	addDynamicProperty: function(prop) {
		if(this.dynamicProperties.indexOf(prop) === -1) {
	        this.dynamicProperties.push(prop);
	        this.container.addDynamicProperty(this);
	    	this._isAnimated = true;
	    }
	},
	iterateDynamicProperties: function(){
	    this._mdf = false;
	    var i, len = this.dynamicProperties.length;
	    for(i=0;i<len;i+=1){
	        this.dynamicProperties[i].getValue();
	        if(this.dynamicProperties[i]._mdf) {
	            this._mdf = true;
	        }
	    }
	},
	initDynamicPropertyContainer: function(container){
	    this.container = container;
	    this.dynamicProperties = [];
	    this._mdf = false;
	    this._isAnimated = false;
	}
}
var getBlendMode = (function() {

	var blendModeEnums = {
        0:'source-over',
        1:'multiply',
        2:'screen',
        3:'overlay',
        4:'darken',
        5:'lighten',
        6:'color-dodge',
        7:'color-burn',
        8:'hard-light',
        9:'soft-light',
        10:'difference',
        11:'exclusion',
        12:'hue',
        13:'saturation',
        14:'color',
        15:'luminosity'
    }

	return function(mode) {
		return blendModeEnums[mode] || '';
	}
}())
/*!
 Transformation Matrix v2.0
 (c) Epistemex 2014-2015
 www.epistemex.com
 By Ken Fyrstenberg
 Contributions by leeoniya.
 License: MIT, header required.
 */

/**
 * 2D transformation matrix object initialized with identity matrix.
 *
 * The matrix can synchronize a canvas context by supplying the context
 * as an argument, or later apply current absolute transform to an
 * existing context.
 *
 * All values are handled as floating point values.
 *
 * @param {CanvasRenderingContext2D} [context] - Optional context to sync with Matrix
 * @prop {number} a - scale x
 * @prop {number} b - shear y
 * @prop {number} c - shear x
 * @prop {number} d - scale y
 * @prop {number} e - translate x
 * @prop {number} f - translate y
 * @prop {CanvasRenderingContext2D|null} [context=null] - set or get current canvas context
 * @constructor
 */

var Matrix = (function(){

    var _cos = Math.cos;
    var _sin = Math.sin;
    var _tan = Math.tan;
    var _rnd = Math.round;

    function reset(){
        this.props[0] = 1;
        this.props[1] = 0;
        this.props[2] = 0;
        this.props[3] = 0;
        this.props[4] = 0;
        this.props[5] = 1;
        this.props[6] = 0;
        this.props[7] = 0;
        this.props[8] = 0;
        this.props[9] = 0;
        this.props[10] = 1;
        this.props[11] = 0;
        this.props[12] = 0;
        this.props[13] = 0;
        this.props[14] = 0;
        this.props[15] = 1;
        return this;
    }

    function rotate(angle) {
        if(angle === 0){
            return this;
        }
        var mCos = _cos(angle);
        var mSin = _sin(angle);
        return this._t(mCos, -mSin,  0, 0, mSin,  mCos, 0, 0, 0,  0,  1, 0, 0, 0, 0, 1);
    }

    function rotateX(angle){
        if(angle === 0){
            return this;
        }
        var mCos = _cos(angle);
        var mSin = _sin(angle);
        return this._t(1, 0, 0, 0, 0, mCos, -mSin, 0, 0, mSin,  mCos, 0, 0, 0, 0, 1);
    }

    function rotateY(angle){
        if(angle === 0){
            return this;
        }
        var mCos = _cos(angle);
        var mSin = _sin(angle);
        return this._t(mCos,  0,  mSin, 0, 0, 1, 0, 0, -mSin,  0,  mCos, 0, 0, 0, 0, 1);
    }

    function rotateZ(angle){
        if(angle === 0){
            return this;
        }
        var mCos = _cos(angle);
        var mSin = _sin(angle);
        return this._t(mCos, -mSin,  0, 0, mSin,  mCos, 0, 0, 0,  0,  1, 0, 0, 0, 0, 1);
    }

    function shear(sx,sy){
        return this._t(1, sy, sx, 1, 0, 0);
    }

    function skew(ax, ay){
        return this.shear(_tan(ax), _tan(ay));
    }

    function skewFromAxis(ax, angle){
        var mCos = _cos(angle);
        var mSin = _sin(angle);
        return this._t(mCos, mSin,  0, 0, -mSin,  mCos, 0, 0, 0,  0,  1, 0, 0, 0, 0, 1)
            ._t(1, 0,  0, 0, _tan(ax),  1, 0, 0, 0,  0,  1, 0, 0, 0, 0, 1)
            ._t(mCos, -mSin,  0, 0, mSin,  mCos, 0, 0, 0,  0,  1, 0, 0, 0, 0, 1);
        //return this._t(mCos, mSin, -mSin, mCos, 0, 0)._t(1, 0, _tan(ax), 1, 0, 0)._t(mCos, -mSin, mSin, mCos, 0, 0);
    }

    function scale(sx, sy, sz) {
        if(!sz && sz !== 0) {
            sz = 1;
        }
        if(sx === 1 && sy === 1 && sz === 1){
            return this;
        }
        return this._t(sx, 0, 0, 0, 0, sy, 0, 0, 0, 0, sz, 0, 0, 0, 0, 1);
    }

    function setTransform(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {
        this.props[0] = a;
        this.props[1] = b;
        this.props[2] = c;
        this.props[3] = d;
        this.props[4] = e;
        this.props[5] = f;
        this.props[6] = g;
        this.props[7] = h;
        this.props[8] = i;
        this.props[9] = j;
        this.props[10] = k;
        this.props[11] = l;
        this.props[12] = m;
        this.props[13] = n;
        this.props[14] = o;
        this.props[15] = p;
        return this;
    }

    function translate(tx, ty, tz) {
        tz = tz || 0;
        if(tx !== 0 || ty !== 0 || tz !== 0){
            return this._t(1,0,0,0,0,1,0,0,0,0,1,0,tx,ty,tz,1);
        }
        return this;
    }

    function transform(a2, b2, c2, d2, e2, f2, g2, h2, i2, j2, k2, l2, m2, n2, o2, p2) {

        var _p = this.props;

        if(a2 === 1 && b2 === 0 && c2 === 0 && d2 === 0 && e2 === 0 && f2 === 1 && g2 === 0 && h2 === 0 && i2 === 0 && j2 === 0 && k2 === 1 && l2 === 0){
            //NOTE: commenting this condition because TurboFan deoptimizes code when present
            //if(m2 !== 0 || n2 !== 0 || o2 !== 0){
                _p[12] = _p[12] * a2 + _p[15] * m2;
                _p[13] = _p[13] * f2 + _p[15] * n2;
                _p[14] = _p[14] * k2 + _p[15] * o2;
                _p[15] = _p[15] * p2;
            //}
            this._identityCalculated = false;
            return this;
        }

        var a1 = _p[0];
        var b1 = _p[1];
        var c1 = _p[2];
        var d1 = _p[3];
        var e1 = _p[4];
        var f1 = _p[5];
        var g1 = _p[6];
        var h1 = _p[7];
        var i1 = _p[8];
        var j1 = _p[9];
        var k1 = _p[10];
        var l1 = _p[11];
        var m1 = _p[12];
        var n1 = _p[13];
        var o1 = _p[14];
        var p1 = _p[15];

        /* matrix order (canvas compatible):
         * ace
         * bdf
         * 001
         */
        _p[0] = a1 * a2 + b1 * e2 + c1 * i2 + d1 * m2;
        _p[1] = a1 * b2 + b1 * f2 + c1 * j2 + d1 * n2 ;
        _p[2] = a1 * c2 + b1 * g2 + c1 * k2 + d1 * o2 ;
        _p[3] = a1 * d2 + b1 * h2 + c1 * l2 + d1 * p2 ;

        _p[4] = e1 * a2 + f1 * e2 + g1 * i2 + h1 * m2 ;
        _p[5] = e1 * b2 + f1 * f2 + g1 * j2 + h1 * n2 ;
        _p[6] = e1 * c2 + f1 * g2 + g1 * k2 + h1 * o2 ;
        _p[7] = e1 * d2 + f1 * h2 + g1 * l2 + h1 * p2 ;

        _p[8] = i1 * a2 + j1 * e2 + k1 * i2 + l1 * m2 ;
        _p[9] = i1 * b2 + j1 * f2 + k1 * j2 + l1 * n2 ;
        _p[10] = i1 * c2 + j1 * g2 + k1 * k2 + l1 * o2 ;
        _p[11] = i1 * d2 + j1 * h2 + k1 * l2 + l1 * p2 ;

        _p[12] = m1 * a2 + n1 * e2 + o1 * i2 + p1 * m2 ;
        _p[13] = m1 * b2 + n1 * f2 + o1 * j2 + p1 * n2 ;
        _p[14] = m1 * c2 + n1 * g2 + o1 * k2 + p1 * o2 ;
        _p[15] = m1 * d2 + n1 * h2 + o1 * l2 + p1 * p2 ;

        this._identityCalculated = false;
        return this;
    }

    function isIdentity() {
        if(!this._identityCalculated){
            this._identity = !(this.props[0] !== 1 || this.props[1] !== 0 || this.props[2] !== 0 || this.props[3] !== 0 || this.props[4] !== 0 || this.props[5] !== 1 || this.props[6] !== 0 || this.props[7] !== 0 || this.props[8] !== 0 || this.props[9] !== 0 || this.props[10] !== 1 || this.props[11] !== 0 || this.props[12] !== 0 || this.props[13] !== 0 || this.props[14] !== 0 || this.props[15] !== 1);
            this._identityCalculated = true;
        }
        return this._identity;
    }

    function equals(matr){
        var i = 0;
        while (i < 16) {
            if(matr.props[i] !== this.props[i]) {
                return false;
            }
            i+=1;
        }
        return true;
    }

    function clone(matr){
        var i;
        for(i=0;i<16;i+=1){
            matr.props[i] = this.props[i];
        }
    }

    function cloneFromProps(props){
        var i;
        for(i=0;i<16;i+=1){
            this.props[i] = props[i];
        }
    }

    function applyToPoint(x, y, z) {

        return {
            x: x * this.props[0] + y * this.props[4] + z * this.props[8] + this.props[12],
            y: x * this.props[1] + y * this.props[5] + z * this.props[9] + this.props[13],
            z: x * this.props[2] + y * this.props[6] + z * this.props[10] + this.props[14]
        };
        /*return {
         x: x * me.a + y * me.c + me.e,
         y: x * me.b + y * me.d + me.f
         };*/
    }
    function applyToX(x, y, z) {
        return x * this.props[0] + y * this.props[4] + z * this.props[8] + this.props[12];
    }
    function applyToY(x, y, z) {
        return x * this.props[1] + y * this.props[5] + z * this.props[9] + this.props[13];
    }
    function applyToZ(x, y, z) {
        return x * this.props[2] + y * this.props[6] + z * this.props[10] + this.props[14];
    }

    function getInverseMatrix() {
        var determinant = this.props[0] * this.props[5] - this.props[1] * this.props[4];
        var a = this.props[5]/determinant;
        var b = - this.props[1]/determinant;
        var c = - this.props[4]/determinant;
        var d = this.props[0]/determinant;
        var e = (this.props[4] * this.props[13] - this.props[5] * this.props[12])/determinant;
        var f = - (this.props[0] * this.props[13] - this.props[1] * this.props[12])/determinant;
        var inverseMatrix = new Matrix();
        inverseMatrix.props[0] = a;
        inverseMatrix.props[1] = b;
        inverseMatrix.props[4] = c;
        inverseMatrix.props[5] = d;
        inverseMatrix.props[12] = e;
        inverseMatrix.props[13] = f;
        return inverseMatrix;
    }

    function inversePoint(pt) {
        var inverseMatrix = this.getInverseMatrix();
        return inverseMatrix.applyToPointArray(pt[0], pt[1], pt[2] || 0)
    }

    function inversePoints(pts){
        var i, len = pts.length, retPts = [];
        for(i=0;i<len;i+=1){
            retPts[i] = inversePoint(pts[i]);
        }
        return retPts;
    }

    function applyToTriplePoints(pt1, pt2, pt3) {
        var arr = createTypedArray('float32', 6);
        if(this.isIdentity()) {
            arr[0] = pt1[0];
            arr[1] = pt1[1];
            arr[2] = pt2[0];
            arr[3] = pt2[1];
            arr[4] = pt3[0];
            arr[5] = pt3[1];
        } else {
            var p0 = this.props[0], p1 = this.props[1], p4 = this.props[4], p5 = this.props[5], p12 = this.props[12], p13 = this.props[13];
            arr[0] = pt1[0] * p0 + pt1[1] * p4 + p12;
            arr[1] = pt1[0] * p1 + pt1[1] * p5 + p13;
            arr[2] = pt2[0] * p0 + pt2[1] * p4 + p12;
            arr[3] = pt2[0] * p1 + pt2[1] * p5 + p13;
            arr[4] = pt3[0] * p0 + pt3[1] * p4 + p12;
            arr[5] = pt3[0] * p1 + pt3[1] * p5 + p13;
        }
        return arr;
    }

    function applyToPointArray(x,y,z){
        var arr;
        if(this.isIdentity()) {
            arr = [x,y,z];
        } else {
            arr = [x * this.props[0] + y * this.props[4] + z * this.props[8] + this.props[12],x * this.props[1] + y * this.props[5] + z * this.props[9] + this.props[13],x * this.props[2] + y * this.props[6] + z * this.props[10] + this.props[14]];
        }
        return arr;
    }

    function applyToPointStringified(x, y) {
        if(this.isIdentity()) {
            return x + ',' + y;
        }
        var _p = this.props;
        return Math.round((x * _p[0] + y * _p[4] + _p[12]) * 100) / 100+','+ Math.round((x * _p[1] + y * _p[5] + _p[13]) * 100) / 100;
    }

    function toCSS() {
        //Doesn't make much sense to add this optimization. If it is an identity matrix, it's very likely this will get called only once since it won't be keyframed.
        /*if(this.isIdentity()) {
            return '';
        }*/
        var i = 0;
        var props = this.props;
        var cssValue = 'matrix3d(';
        var v = 10000;
        while(i<16){
            cssValue += _rnd(props[i]*v)/v;
            cssValue += i === 15 ? ')':',';
            i += 1;
        }
        return cssValue;
    }

    function roundMatrixProperty(val) {
        var v = 10000;
        if((val < 0.000001 && val > 0) || (val > -0.000001 && val < 0)) {
            return _rnd(val * v) / v;
        }
        return val;
    }

    function to2dCSS() {
        //Doesn't make much sense to add this optimization. If it is an identity matrix, it's very likely this will get called only once since it won't be keyframed.
        /*if(this.isIdentity()) {
            return '';
        }*/
        var props = this.props;
        var _a = roundMatrixProperty(props[0]);
        var _b = roundMatrixProperty(props[1]);
        var _c = roundMatrixProperty(props[4]);
        var _d = roundMatrixProperty(props[5]);
        var _e = roundMatrixProperty(props[12]);
        var _f = roundMatrixProperty(props[13]);
        return "matrix(" + _a + ',' + _b + ',' + _c + ',' + _d + ',' + _e + ',' + _f + ")";
    }

    return function(){
        this.reset = reset;
        this.rotate = rotate;
        this.rotateX = rotateX;
        this.rotateY = rotateY;
        this.rotateZ = rotateZ;
        this.skew = skew;
        this.skewFromAxis = skewFromAxis;
        this.shear = shear;
        this.scale = scale;
        this.setTransform = setTransform;
        this.translate = translate;
        this.transform = transform;
        this.applyToPoint = applyToPoint;
        this.applyToX = applyToX;
        this.applyToY = applyToY;
        this.applyToZ = applyToZ;
        this.applyToPointArray = applyToPointArray;
        this.applyToTriplePoints = applyToTriplePoints;
        this.applyToPointStringified = applyToPointStringified;
        this.toCSS = toCSS;
        this.to2dCSS = to2dCSS;
        this.clone = clone;
        this.cloneFromProps = cloneFromProps;
        this.equals = equals;
        this.inversePoints = inversePoints;
        this.inversePoint = inversePoint;
        this.getInverseMatrix = getInverseMatrix;
        this._t = this.transform;
        this.isIdentity = isIdentity;
        this._identity = true;
        this._identityCalculated = false;

        this.props = createTypedArray('float32', 16);
        this.reset();
    };
}());

/*
 Copyright 2014 David Bau.

 Permission is hereby granted, free of charge, to any person obtaining
 a copy of this software and associated documentation files (the
 "Software"), to deal in the Software without restriction, including
 without limitation the rights to use, copy, modify, merge, publish,
 distribute, sublicense, and/or sell copies of the Software, and to
 permit persons to whom the Software is furnished to do so, subject to
 the following conditions:

 The above copyright notice and this permission notice shall be
 included in all copies or substantial portions of the Software.

 THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
 EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
 MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
 IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY
 CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,
 TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE
 SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.

 */

(function (pool, math) {
//
// The following constants are related to IEEE 754 limits.
//
    var global = this,
        width = 256,        // each RC4 output is 0 <= x < 256
        chunks = 6,         // at least six RC4 outputs for each double
        digits = 52,        // there are 52 significant digits in a double
        rngname = 'random', // rngname: name for Math.random and Math.seedrandom
        startdenom = math.pow(width, chunks),
        significance = math.pow(2, digits),
        overflow = significance * 2,
        mask = width - 1,
        nodecrypto;         // node.js crypto module, initialized at the bottom.

//
// seedrandom()
// This is the seedrandom function described above.
//
    function seedrandom(seed, options, callback) {
        var key = [];
        options = (options === true) ? { entropy: true } : (options || {});

        // Flatten the seed string or build one from local entropy if needed.
        var shortseed = mixkey(flatten(
            options.entropy ? [seed, tostring(pool)] :
                (seed === null) ? autoseed() : seed, 3), key);

        // Use the seed to initialize an ARC4 generator.
        var arc4 = new ARC4(key);

        // This function returns a random double in [0, 1) that contains
        // randomness in every bit of the mantissa of the IEEE 754 value.
        var prng = function() {
            var n = arc4.g(chunks),             // Start with a numerator n < 2 ^ 48
                d = startdenom,                 //   and denominator d = 2 ^ 48.
                x = 0;                          //   and no 'extra last byte'.
            while (n < significance) {          // Fill up all significant digits by
                n = (n + x) * width;              //   shifting numerator and
                d *= width;                       //   denominator and generating a
                x = arc4.g(1);                    //   new least-significant-byte.
            }
            while (n >= overflow) {             // To avoid rounding up, before adding
                n /= 2;                           //   last byte, shift everything
                d /= 2;                           //   right using integer math until
                x >>>= 1;                         //   we have exactly the desired bits.
            }
            return (n + x) / d;                 // Form the number within [0, 1).
        };

        prng.int32 = function() { return arc4.g(4) | 0; };
        prng.quick = function() { return arc4.g(4) / 0x100000000; };
        prng.double = prng;

        // Mix the randomness into accumulated entropy.
        mixkey(tostring(arc4.S), pool);

        // Calling convention: what to return as a function of prng, seed, is_math.
        return (options.pass || callback ||
        function(prng, seed, is_math_call, state) {
            if (state) {
                // Load the arc4 state from the given state if it has an S array.
                if (state.S) { copy(state, arc4); }
                // Only provide the .state method if requested via options.state.
                prng.state = function() { return copy(arc4, {}); };
            }

            // If called as a method of Math (Math.seedrandom()), mutate
            // Math.random because that is how seedrandom.js has worked since v1.0.
            if (is_math_call) { math[rngname] = prng; return seed; }

            // Otherwise, it is a newer calling convention, so return the
            // prng directly.
            else return prng;
        })(
            prng,
            shortseed,
            'global' in options ? options.global : (this == math),
            options.state);
    }
    math['seed' + rngname] = seedrandom;

//
// ARC4
//
// An ARC4 implementation.  The constructor takes a key in the form of
// an array of at most (width) integers that should be 0 <= x < (width).
//
// The g(count) method returns a pseudorandom integer that concatenates
// the next (count) outputs from ARC4.  Its return value is a number x
// that is in the range 0 <= x < (width ^ count).
//
    function ARC4(key) {
        var t, keylen = key.length,
            me = this, i = 0, j = me.i = me.j = 0, s = me.S = [];

        // The empty key [] is treated as [0].
        if (!keylen) { key = [keylen++]; }

        // Set up S using the standard key scheduling algorithm.
        while (i < width) {
            s[i] = i++;
        }
        for (i = 0; i < width; i++) {
            s[i] = s[j = mask & (j + key[i % keylen] + (t = s[i]))];
            s[j] = t;
        }

        // The "g" method returns the next (count) outputs as one number.
        me.g = function(count) {
            // Using instance members instead of closure state nearly doubles speed.
            var t, r = 0,
                i = me.i, j = me.j, s = me.S;
            while (count--) {
                t = s[i = mask & (i + 1)];
                r = r * width + s[mask & ((s[i] = s[j = mask & (j + t)]) + (s[j] = t))];
            }
            me.i = i; me.j = j;
            return r;
            // For robust unpredictability, the function call below automatically
            // discards an initial batch of values.  This is called RC4-drop[256].
            // See http://google.com/search?q=rsa+fluhrer+response&btnI
        };
    }

//
// copy()
// Copies internal state of ARC4 to or from a plain object.
//
    function copy(f, t) {
        t.i = f.i;
        t.j = f.j;
        t.S = f.S.slice();
        return t;
    }

//
// flatten()
// Converts an object tree to nested arrays of strings.
//
    function flatten(obj, depth) {
        var result = [], typ = (typeof obj), prop;
        if (depth && typ == 'object') {
            for (prop in obj) {
                try { result.push(flatten(obj[prop], depth - 1)); } catch (e) {}
            }
        }
        return (result.length ? result : typ == 'string' ? obj : obj + '\0');
    }

//
// mixkey()
// Mixes a string seed into a key that is an array of integers, and
// returns a shortened string seed that is equivalent to the result key.
//
    function mixkey(seed, key) {
        var stringseed = seed + '', smear, j = 0;
        while (j < stringseed.length) {
            key[mask & j] =
                mask & ((smear ^= key[mask & j] * 19) + stringseed.charCodeAt(j++));
        }
        return tostring(key);
    }

//
// autoseed()
// Returns an object for autoseeding, using window.crypto and Node crypto
// module if available.
//
    function autoseed() {
        try {
            if (nodecrypto) { return tostring(nodecrypto.randomBytes(width)); }
            var out = new Uint8Array(width);
            (global.crypto || global.msCrypto).getRandomValues(out);
            return tostring(out);
        } catch (e) {
            var browser = global.navigator,
                plugins = browser && browser.plugins;
            return [+new Date(), global, plugins, global.screen, tostring(pool)];
        }
    }

//
// tostring()
// Converts an array of charcodes to a string
//
    function tostring(a) {
        return String.fromCharCode.apply(0, a);
    }

//
// When seedrandom.js is loaded, we immediately mix a few bits
// from the built-in RNG into the entropy pool.  Because we do
// not want to interfere with deterministic PRNG state later,
// seedrandom will not call math.random on its own again after
// initialization.
//
    mixkey(math.random(), pool);

//
// Nodejs and AMD support: export the implementation as a module using
// either convention.
//

// End anonymous scope, and pass initial values.
})(
    [],     // pool: entropy pool starts empty
    BMMath    // math: package containing random, pow, and seedrandom
);
var BezierFactory = (function(){
    /**
     * BezierEasing - use bezier curve for transition easing function
     * by Gaëtan Renaudeau 2014 - 2015 – MIT License
     *
     * Credits: is based on Firefox's nsSMILKeySpline.cpp
     * Usage:
     * var spline = BezierEasing([ 0.25, 0.1, 0.25, 1.0 ])
     * spline.get(x) => returns the easing value | x must be in [0, 1] range
     *
     */

        var ob = {};
    ob.getBezierEasing = getBezierEasing;
    var beziers = {};

    function getBezierEasing(a,b,c,d,nm){
        var str = nm || ('bez_' + a+'_'+b+'_'+c+'_'+d).replace(/\./g, 'p');
        if(beziers[str]){
            return beziers[str];
        }
        var bezEasing = new BezierEasing([a,b,c,d]);
        beziers[str] = bezEasing;
        return bezEasing;
    }

// These values are established by empiricism with tests (tradeoff: performance VS precision)
    var NEWTON_ITERATIONS = 4;
    var NEWTON_MIN_SLOPE = 0.001;
    var SUBDIVISION_PRECISION = 0.0000001;
    var SUBDIVISION_MAX_ITERATIONS = 10;

    var kSplineTableSize = 11;
    var kSampleStepSize = 1.0 / (kSplineTableSize - 1.0);

    var float32ArraySupported = typeof Float32Array === "function";

    function A (aA1, aA2) { return 1.0 - 3.0 * aA2 + 3.0 * aA1; }
    function B (aA1, aA2) { return 3.0 * aA2 - 6.0 * aA1; }
    function C (aA1)      { return 3.0 * aA1; }

// Returns x(t) given t, x1, and x2, or y(t) given t, y1, and y2.
    function calcBezier (aT, aA1, aA2) {
        return ((A(aA1, aA2)*aT + B(aA1, aA2))*aT + C(aA1))*aT;
    }

// Returns dx/dt given t, x1, and x2, or dy/dt given t, y1, and y2.
    function getSlope (aT, aA1, aA2) {
        return 3.0 * A(aA1, aA2)*aT*aT + 2.0 * B(aA1, aA2) * aT + C(aA1);
    }

    function binarySubdivide (aX, aA, aB, mX1, mX2) {
        var currentX, currentT, i = 0;
        do {
            currentT = aA + (aB - aA) / 2.0;
            currentX = calcBezier(currentT, mX1, mX2) - aX;
            if (currentX > 0.0) {
                aB = currentT;
            } else {
                aA = currentT;
            }
        } while (Math.abs(currentX) > SUBDIVISION_PRECISION && ++i < SUBDIVISION_MAX_ITERATIONS);
        return currentT;
    }

    function newtonRaphsonIterate (aX, aGuessT, mX1, mX2) {
        for (var i = 0; i < NEWTON_ITERATIONS; ++i) {
            var currentSlope = getSlope(aGuessT, mX1, mX2);
            if (currentSlope === 0.0) return aGuessT;
            var currentX = calcBezier(aGuessT, mX1, mX2) - aX;
            aGuessT -= currentX / currentSlope;
        }
        return aGuessT;
    }

    /**
     * points is an array of [ mX1, mY1, mX2, mY2 ]
     */
    function BezierEasing (points) {
        this._p = points;
        this._mSampleValues = float32ArraySupported ? new Float32Array(kSplineTableSize) : new Array(kSplineTableSize);
        this._precomputed = false;

        this.get = this.get.bind(this);
    }

    BezierEasing.prototype = {

        get: function (x) {
            var mX1 = this._p[0],
                mY1 = this._p[1],
                mX2 = this._p[2],
                mY2 = this._p[3];
            if (!this._precomputed) this._precompute();
            if (mX1 === mY1 && mX2 === mY2) return x; // linear
            // Because JavaScript number are imprecise, we should guarantee the extremes are right.
            if (x === 0) return 0;
            if (x === 1) return 1;
            return calcBezier(this._getTForX(x), mY1, mY2);
        },

        // Private part

        _precompute: function () {
            var mX1 = this._p[0],
                mY1 = this._p[1],
                mX2 = this._p[2],
                mY2 = this._p[3];
            this._precomputed = true;
            if (mX1 !== mY1 || mX2 !== mY2)
                this._calcSampleValues();
        },

        _calcSampleValues: function () {
            var mX1 = this._p[0],
                mX2 = this._p[2];
            for (var i = 0; i < kSplineTableSize; ++i) {
                this._mSampleValues[i] = calcBezier(i * kSampleStepSize, mX1, mX2);
            }
        },

        /**
         * getTForX chose the fastest heuristic to determine the percentage value precisely from a given X projection.
         */
        _getTForX: function (aX) {
            var mX1 = this._p[0],
                mX2 = this._p[2],
                mSampleValues = this._mSampleValues;

            var intervalStart = 0.0;
            var currentSample = 1;
            var lastSample = kSplineTableSize - 1;

            for (; currentSample !== lastSample && mSampleValues[currentSample] <= aX; ++currentSample) {
                intervalStart += kSampleStepSize;
            }
            --currentSample;

            // Interpolate to provide an initial guess for t
            var dist = (aX - mSampleValues[currentSample]) / (mSampleValues[currentSample+1] - mSampleValues[currentSample]);
            var guessForT = intervalStart + dist * kSampleStepSize;

            var initialSlope = getSlope(guessForT, mX1, mX2);
            if (initialSlope >= NEWTON_MIN_SLOPE) {
                return newtonRaphsonIterate(aX, guessForT, mX1, mX2);
            } else if (initialSlope === 0.0) {
                return guessForT;
            } else {
                return binarySubdivide(aX, intervalStart, intervalStart + kSampleStepSize, mX1, mX2);
            }
        }
    };

    return ob;

}());
(function () {
    var lastTime = 0;
    var vendors = ['ms', 'moz', 'webkit', 'o'];
    for(var x = 0; x < vendors.length && !window.requestAnimationFrame; ++x) {
        window.requestAnimationFrame = window[vendors[x] + 'RequestAnimationFrame'];
        window.cancelAnimationFrame = window[vendors[x] + 'CancelAnimationFrame'] || window[vendors[x] + 'CancelRequestAnimationFrame'];
    }
    if(!window.requestAnimationFrame)
        window.requestAnimationFrame = function (callback, element) {
            var currTime = new Date().getTime();
            var timeToCall = Math.max(0, 16 - (currTime - lastTime));
            var id = setTimeout(function () {
                    callback(currTime + timeToCall);
                },
                timeToCall);
            lastTime = currTime + timeToCall;
            return id;
        };
    if(!window.cancelAnimationFrame)
        window.cancelAnimationFrame = function (id) {
            clearTimeout(id);
        };
}());

function extendPrototype(sources,destination){
    var i, len = sources.length, sourcePrototype;
    for (i = 0;i < len;i += 1) {
        sourcePrototype = sources[i].prototype;
        for (var attr in sourcePrototype) {
            if (sourcePrototype.hasOwnProperty(attr)) destination.prototype[attr] = sourcePrototype[attr];
        }
    }
}

function getDescriptor(object, prop) {
    return Object.getOwnPropertyDescriptor(object, prop);
}

function createProxyFunction(prototype) {
	function ProxyFunction(){}
	ProxyFunction.prototype = prototype;
	return ProxyFunction;
}
function bezFunction(){

    var easingFunctions = [];
    var math = Math;

    function pointOnLine2D(x1,y1, x2,y2, x3,y3){
        var det1 = (x1*y2) + (y1*x3) + (x2*y3) - (x3*y2) - (y3*x1) - (x2*y1);
        return det1 > -0.001 && det1 < 0.001;
    }

    function pointOnLine3D(x1,y1,z1, x2,y2,z2, x3,y3,z3){
        if(z1 === 0 && z2 === 0 && z3 === 0) {
            return pointOnLine2D(x1,y1, x2,y2, x3,y3);
        }
        var dist1 = Math.sqrt(Math.pow(x2 - x1, 2) + Math.pow(y2 - y1, 2) + Math.pow(z2 - z1, 2));
        var dist2 = Math.sqrt(Math.pow(x3 - x1, 2) + Math.pow(y3 - y1, 2) + Math.pow(z3 - z1, 2));
        var dist3 = Math.sqrt(Math.pow(x3 - x2, 2) + Math.pow(y3 - y2, 2) + Math.pow(z3 - z2, 2));
        var diffDist;
        if(dist1 > dist2){
            if(dist1 > dist3){
                diffDist = dist1 - dist2 - dist3;
            } else {
                diffDist = dist3 - dist2 - dist1;
            }
        } else if(dist3 > dist2){
            diffDist = dist3 - dist2 - dist1;
        } else {
            diffDist = dist2 - dist1 - dist3;
        }
        return diffDist > -0.0001 && diffDist < 0.0001;
    }

    var getBezierLength = (function(){

        return function(pt1,pt2,pt3,pt4){
            var curveSegments = defaultCurveSegments;
            var k;
            var i, len;
            var ptCoord,perc,addedLength = 0;
            var ptDistance;
            var point = [],lastPoint = [];
            var lengthData = bezier_length_pool.newElement();
            len = pt3.length;
            for(k=0;k<curveSegments;k+=1){
                perc = k/(curveSegments-1);
                ptDistance = 0;
                for(i=0;i<len;i+=1){
                    ptCoord = bm_pow(1-perc,3)*pt1[i]+3*bm_pow(1-perc,2)*perc*pt3[i]+3*(1-perc)*bm_pow(perc,2)*pt4[i]+bm_pow(perc,3)*pt2[i];
                    point[i] = ptCoord;
                    if(lastPoint[i] !== null){
                        ptDistance += bm_pow(point[i] - lastPoint[i],2);
                    }
                    lastPoint[i] = point[i];
                }
                if(ptDistance){
                    ptDistance = bm_sqrt(ptDistance);
                    addedLength += ptDistance;
                }
                lengthData.percents[k] = perc;
                lengthData.lengths[k] = addedLength;
            }
            lengthData.addedLength = addedLength;
            return lengthData;
        };
    }());

    function getSegmentsLength(shapeData) {
        var segmentsLength = segments_length_pool.newElement();
        var closed = shapeData.c;
        var pathV = shapeData.v;
        var pathO = shapeData.o;
        var pathI = shapeData.i;
        var i, len = shapeData._length;
        var lengths = segmentsLength.lengths;
        var totalLength = 0;
        for(i=0;i<len-1;i+=1){
            lengths[i] = getBezierLength(pathV[i],pathV[i+1],pathO[i],pathI[i+1]);
            totalLength += lengths[i].addedLength;
        }
        if(closed && len){
            lengths[i] = getBezierLength(pathV[i],pathV[0],pathO[i],pathI[0]);
            totalLength += lengths[i].addedLength;
        }
        segmentsLength.totalLength = totalLength;
        return segmentsLength;
    }

    function BezierData(length){
        this.segmentLength = 0;
        this.points = new Array(length);
    }

    function PointData(partial,point){
        this.partialLength = partial;
        this.point = point;
    }

    var buildBezierData = (function(){

        var storedData = {};

        return function (pt1, pt2, pt3, pt4){
            var bezierName = (pt1[0]+'_'+pt1[1]+'_'+pt2[0]+'_'+pt2[1]+'_'+pt3[0]+'_'+pt3[1]+'_'+pt4[0]+'_'+pt4[1]).replace(/\./g, 'p');
            if(!storedData[bezierName]){
                var curveSegments = defaultCurveSegments;
                var k, i, len;
                var ptCoord,perc,addedLength = 0;
                var ptDistance;
                var point,lastPoint = null;
                if (pt1.length === 2 && (pt1[0] != pt2[0] || pt1[1] != pt2[1]) && pointOnLine2D(pt1[0],pt1[1],pt2[0],pt2[1],pt1[0]+pt3[0],pt1[1]+pt3[1]) && pointOnLine2D(pt1[0],pt1[1],pt2[0],pt2[1],pt2[0]+pt4[0],pt2[1]+pt4[1])){
                    curveSegments = 2;
                }
                var bezierData = new BezierData(curveSegments);
                len = pt3.length;
                for (k = 0; k < curveSegments; k += 1) {
                    point = createSizedArray(len);
                    perc = k / (curveSegments - 1);
                    ptDistance = 0;
                    for (i = 0; i < len; i += 1){
                        ptCoord = bm_pow(1-perc,3)*pt1[i]+3*bm_pow(1-perc,2)*perc*(pt1[i] + pt3[i])+3*(1-perc)*bm_pow(perc,2)*(pt2[i] + pt4[i])+bm_pow(perc,3)*pt2[i];
                        point[i] = ptCoord;
                        if(lastPoint !== null){
                            ptDistance += bm_pow(point[i] - lastPoint[i],2);
                        }
                    }
                    ptDistance = bm_sqrt(ptDistance);
                    addedLength += ptDistance;
                    bezierData.points[k] = new PointData(ptDistance, point);
                    lastPoint = point;
                }
                bezierData.segmentLength = addedLength;
                storedData[bezierName] = bezierData;
            }
            return storedData[bezierName];
        };
    }());

    function getDistancePerc(perc,bezierData){
        var percents = bezierData.percents;
        var lengths = bezierData.lengths;
        var len = percents.length;
        var initPos = bm_floor((len-1)*perc);
        var lengthPos = perc*bezierData.addedLength;
        var lPerc = 0;
        if(initPos === len - 1 || initPos === 0 || lengthPos === lengths[initPos]){
            return percents[initPos];
        }else{
            var dir = lengths[initPos] > lengthPos ? -1 : 1;
            var flag = true;
            while(flag){
                if(lengths[initPos] <= lengthPos && lengths[initPos+1] > lengthPos){
                    lPerc = (lengthPos - lengths[initPos]) / (lengths[initPos+1] - lengths[initPos]);
                    flag = false;
                }else{
                    initPos += dir;
                }
                if(initPos < 0 || initPos >= len - 1){
                    //FIX for TypedArrays that don't store floating point values with enough accuracy
                    if(initPos === len - 1) {
                        return percents[initPos];
                    }
                    flag = false;
                }
            }
            return percents[initPos] + (percents[initPos+1] - percents[initPos])*lPerc;
        }
    }

    function getPointInSegment(pt1, pt2, pt3, pt4, percent, bezierData) {
        var t1 = getDistancePerc(percent,bezierData);
        var u0 = 1;
        var u1 = 1 - t1;
        var ptX = Math.round((u1*u1*u1* pt1[0] + (t1*u1*u1 + u1*t1*u1 + u1*u1*t1)* pt3[0] + (t1*t1*u1 + u1*t1*t1 + t1*u1*t1)*pt4[0] + t1*t1*t1* pt2[0])* 1000) / 1000;
        var ptY = Math.round((u1*u1*u1* pt1[1] + (t1*u1*u1 + u1*t1*u1 + u1*u1*t1)* pt3[1] + (t1*t1*u1 + u1*t1*t1 + t1*u1*t1)*pt4[1] + t1*t1*t1* pt2[1])* 1000) / 1000;
        return [ptX, ptY];
    }

    function getSegmentArray() {

    }

    var bezier_segment_points = createTypedArray('float32', 8);

    function getNewSegment(pt1,pt2,pt3,pt4,startPerc,endPerc, bezierData){

        startPerc = startPerc < 0 ? 0 : startPerc > 1 ? 1 : startPerc;
        var t0 = getDistancePerc(startPerc,bezierData);
        endPerc = endPerc > 1 ? 1 : endPerc;
        var t1 = getDistancePerc(endPerc,bezierData);
        var i, len = pt1.length;
        var u0 = 1 - t0;
        var u1 = 1 - t1;
        var u0u0u0 = u0*u0*u0;
        var t0u0u0_3 = t0*u0*u0*3;
        var t0t0u0_3 = t0*t0*u0*3;
        var t0t0t0 = t0*t0*t0;
        //
        var u0u0u1 = u0*u0*u1;
        var t0u0u1_3 = t0*u0*u1 + u0*t0*u1 + u0*u0*t1;
        var t0t0u1_3 = t0*t0*u1 + u0*t0*t1 + t0*u0*t1;
        var t0t0t1 = t0*t0*t1;
        //
        var u0u1u1 = u0*u1*u1;
        var t0u1u1_3 = t0*u1*u1 + u0*t1*u1 + u0*u1*t1;
        var t0t1u1_3 = t0*t1*u1 + u0*t1*t1 + t0*u1*t1;
        var t0t1t1 = t0*t1*t1;
        //
        var u1u1u1 = u1*u1*u1;
        var t1u1u1_3 = t1*u1*u1 + u1*t1*u1 + u1*u1*t1;
        var t1t1u1_3 = t1*t1*u1 + u1*t1*t1 + t1*u1*t1;
        var t1t1t1 = t1*t1*t1;
        for(i=0;i<len;i+=1){
            bezier_segment_points[i * 4] = Math.round((u0u0u0 * pt1[i] + t0u0u0_3 * pt3[i] + t0t0u0_3 * pt4[i] + t0t0t0 * pt2[i]) * 1000) / 1000;
            bezier_segment_points[i * 4 + 1] = Math.round((u0u0u1 * pt1[i] + t0u0u1_3 * pt3[i] + t0t0u1_3 * pt4[i] + t0t0t1 * pt2[i]) * 1000) / 1000;
            bezier_segment_points[i * 4 + 2] = Math.round((u0u1u1 * pt1[i] + t0u1u1_3 * pt3[i] + t0t1u1_3 * pt4[i] + t0t1t1 * pt2[i]) * 1000) / 1000;
            bezier_segment_points[i * 4 + 3] = Math.round((u1u1u1 * pt1[i] + t1u1u1_3 * pt3[i] + t1t1u1_3 * pt4[i] + t1t1t1 * pt2[i]) * 1000) / 1000;
        }

        return bezier_segment_points;
    }

    return {
        getSegmentsLength : getSegmentsLength,
        getNewSegment : getNewSegment,
        getPointInSegment : getPointInSegment,
        buildBezierData : buildBezierData,
        pointOnLine2D : pointOnLine2D,
        pointOnLine3D : pointOnLine3D
    };
}

var bez = bezFunction();
function dataFunctionManager(){

    //var tCanvasHelper = createTag('canvas').getContext('2d');

    function completeLayers(layers, comps, fontManager){
        var layerData;
        var animArray, lastFrame;
        var i, len = layers.length;
        var j, jLen, k, kLen;
        for(i=0;i<len;i+=1){
            layerData = layers[i];
            if(!('ks' in layerData) || layerData.completed){
                continue;
            }
            layerData.completed = true;
            if(layerData.tt){
                layers[i-1].td = layerData.tt;
            }
            animArray = [];
            lastFrame = -1;
            if(layerData.hasMask){
                var maskProps = layerData.masksProperties;
                jLen = maskProps.length;
                for(j=0;j<jLen;j+=1){
                    if(maskProps[j].pt.k.i){
                        convertPathsToAbsoluteValues(maskProps[j].pt.k);
                    }else{
                        kLen = maskProps[j].pt.k.length;
                        for(k=0;k<kLen;k+=1){
                            if(maskProps[j].pt.k[k].s){
                                convertPathsToAbsoluteValues(maskProps[j].pt.k[k].s[0]);
                            }
                            if(maskProps[j].pt.k[k].e){
                                convertPathsToAbsoluteValues(maskProps[j].pt.k[k].e[0]);
                            }
                        }
                    }
                }
            }
            if(layerData.ty===0){
                layerData.layers = findCompLayers(layerData.refId, comps);
                completeLayers(layerData.layers,comps, fontManager);
            }else if(layerData.ty === 4){
                completeShapes(layerData.shapes);
            }else if(layerData.ty == 5){
                completeText(layerData, fontManager);
            }
        }
    }

    function findCompLayers(id,comps){
        var i = 0, len = comps.length;
        while(i<len){
            if(comps[i].id === id){
                if(!comps[i].layers.__used) {
                    comps[i].layers.__used = true;
                    return comps[i].layers;
                }
                return JSON.parse(JSON.stringify(comps[i].layers));
            }
            i += 1;
        }
    }

    function completeShapes(arr){
        var i, len = arr.length;
        var j, jLen;
        var hasPaths = false;
        for(i=len-1;i>=0;i-=1){
            if(arr[i].ty == 'sh'){
                if(arr[i].ks.k.i){
                    convertPathsToAbsoluteValues(arr[i].ks.k);
                }else{
                    jLen = arr[i].ks.k.length;
                    for(j=0;j<jLen;j+=1){
                        if(arr[i].ks.k[j].s){
                            convertPathsToAbsoluteValues(arr[i].ks.k[j].s[0]);
                        }
                        if(arr[i].ks.k[j].e){
                            convertPathsToAbsoluteValues(arr[i].ks.k[j].e[0]);
                        }
                    }
                }
                hasPaths = true;
            }else if(arr[i].ty == 'gr'){
                completeShapes(arr[i].it);
            }
        }
        /*if(hasPaths){
            //mx: distance
            //ss: sensitivity
            //dc: decay
            arr.splice(arr.length-1,0,{
                "ty": "ms",
                "mx":20,
                "ss":10,
                 "dc":0.001,
                "maxDist":200
            });
        }*/
    }

    function convertPathsToAbsoluteValues(path){
        var i, len = path.i.length;
        for(i=0;i<len;i+=1){
            path.i[i][0] += path.v[i][0];
            path.i[i][1] += path.v[i][1];
            path.o[i][0] += path.v[i][0];
            path.o[i][1] += path.v[i][1];
        }
    }

    function checkVersion(minimum,animVersionString){
        var animVersion = animVersionString ? animVersionString.split('.') : [100,100,100];
        if(minimum[0]>animVersion[0]){
            return true;
        } else if(animVersion[0] > minimum[0]){
            return false;
        }
        if(minimum[1]>animVersion[1]){
            return true;
        } else if(animVersion[1] > minimum[1]){
            return false;
        }
        if(minimum[2]>animVersion[2]){
            return true;
        } else if(animVersion[2] > minimum[2]){
            return false;
        }
    }

    var checkText = (function(){
        var minimumVersion = [4,4,14];

        function updateTextLayer(textLayer){
            var documentData = textLayer.t.d;
            textLayer.t.d = {
                k: [
                    {
                        s:documentData,
                        t:0
                    }
                ]
            };
        }

        function iterateLayers(layers){
            var i, len = layers.length;
            for(i=0;i<len;i+=1){
                if(layers[i].ty === 5){
                    updateTextLayer(layers[i]);
                }
            }
        }

        return function (animationData){
            if(checkVersion(minimumVersion,animationData.v)){
                iterateLayers(animationData.layers);
                if(animationData.assets){
                    var i, len = animationData.assets.length;
                    for(i=0;i<len;i+=1){
                        if(animationData.assets[i].layers){
                            iterateLayers(animationData.assets[i].layers);

                        }
                    }
                }
            }
        };
    }());

    var checkChars = (function() {
        var minimumVersion = [4,7,99];
        return function (animationData){
            if(animationData.chars && !checkVersion(minimumVersion,animationData.v)){
                var i, len = animationData.chars.length, j, jLen, k, kLen;
                var pathData, paths;
                for(i = 0; i < len; i += 1) {
                    if(animationData.chars[i].data && animationData.chars[i].data.shapes) {
                        paths = animationData.chars[i].data.shapes[0].it;
                        jLen = paths.length;

                        for(j = 0; j < jLen; j += 1) {
                            pathData = paths[j].ks.k;
                            if(!pathData.__converted) {
                                convertPathsToAbsoluteValues(paths[j].ks.k);
                                pathData.__converted = true;
                            }
                        }
                    }
                }
            }
        };
    }());

    var checkColors = (function(){
        var minimumVersion = [4,1,9];

        function iterateShapes(shapes){
            var i, len = shapes.length;
            var j, jLen;
            for(i=0;i<len;i+=1){
                if(shapes[i].ty === 'gr'){
                    iterateShapes(shapes[i].it);
                }else if(shapes[i].ty === 'fl' || shapes[i].ty === 'st'){
                    if(shapes[i].c.k && shapes[i].c.k[0].i){
                        jLen = shapes[i].c.k.length;
                        for(j=0;j<jLen;j+=1){
                            if(shapes[i].c.k[j].s){
                                shapes[i].c.k[j].s[0] /= 255;
                                shapes[i].c.k[j].s[1] /= 255;
                                shapes[i].c.k[j].s[2] /= 255;
                                shapes[i].c.k[j].s[3] /= 255;
                            }
                            if(shapes[i].c.k[j].e){
                                shapes[i].c.k[j].e[0] /= 255;
                                shapes[i].c.k[j].e[1] /= 255;
                                shapes[i].c.k[j].e[2] /= 255;
                                shapes[i].c.k[j].e[3] /= 255;
                            }
                        }
                    } else {
                        shapes[i].c.k[0] /= 255;
                        shapes[i].c.k[1] /= 255;
                        shapes[i].c.k[2] /= 255;
                        shapes[i].c.k[3] /= 255;
                    }
                }
            }
        }

        function iterateLayers(layers){
            var i, len = layers.length;
            for(i=0;i<len;i+=1){
                if(layers[i].ty === 4){
                    iterateShapes(layers[i].shapes);
                }
            }
        }

        return function (animationData){
            if(checkVersion(minimumVersion,animationData.v)){
                iterateLayers(animationData.layers);
                if(animationData.assets){
                    var i, len = animationData.assets.length;
                    for(i=0;i<len;i+=1){
                        if(animationData.assets[i].layers){
                            iterateLayers(animationData.assets[i].layers);

                        }
                    }
                }
            }
        };
    }());

    var checkShapes = (function(){
        var minimumVersion = [4,4,18];



        function completeShapes(arr){
            var i, len = arr.length;
            var j, jLen;
            var hasPaths = false;
            for(i=len-1;i>=0;i-=1){
                if(arr[i].ty == 'sh'){
                    if(arr[i].ks.k.i){
                        arr[i].ks.k.c = arr[i].closed;
                    }else{
                        jLen = arr[i].ks.k.length;
                        for(j=0;j<jLen;j+=1){
                            if(arr[i].ks.k[j].s){
                                arr[i].ks.k[j].s[0].c = arr[i].closed;
                            }
                            if(arr[i].ks.k[j].e){
                                arr[i].ks.k[j].e[0].c = arr[i].closed;
                            }
                        }
                    }
                    hasPaths = true;
                }else if(arr[i].ty == 'gr'){
                    completeShapes(arr[i].it);
                }
            }
        }

        function iterateLayers(layers){
            var layerData;
            var i, len = layers.length;
            var j, jLen, k, kLen;
            for(i=0;i<len;i+=1){
                layerData = layers[i];
                if(layerData.hasMask){
                    var maskProps = layerData.masksProperties;
                    jLen = maskProps.length;
                    for(j=0;j<jLen;j+=1){
                        if(maskProps[j].pt.k.i){
                            maskProps[j].pt.k.c = maskProps[j].cl;
                        }else{
                            kLen = maskProps[j].pt.k.length;
                            for(k=0;k<kLen;k+=1){
                                if(maskProps[j].pt.k[k].s){
                                    maskProps[j].pt.k[k].s[0].c = maskProps[j].cl;
                                }
                                if(maskProps[j].pt.k[k].e){
                                    maskProps[j].pt.k[k].e[0].c = maskProps[j].cl;
                                }
                            }
                        }
                    }
                }
                if(layerData.ty === 4){
                    completeShapes(layerData.shapes);
                }
            }
        }

        return function (animationData){
            if(checkVersion(minimumVersion,animationData.v)){
                iterateLayers(animationData.layers);
                if(animationData.assets){
                    var i, len = animationData.assets.length;
                    for(i=0;i<len;i+=1){
                        if(animationData.assets[i].layers){
                            iterateLayers(animationData.assets[i].layers);

                        }
                    }
                }
            }
        };
    }());

    function completeData(animationData, fontManager){
        if(animationData.__complete){
            return;
        }
        checkColors(animationData);
        checkText(animationData);
        checkChars(animationData);
        checkShapes(animationData);
        completeLayers(animationData.layers, animationData.assets, fontManager);
        animationData.__complete = true;
        //blitAnimation(animationData, animationData.assets, fontManager);
    }

    function completeText(data, fontManager){
        if(data.t.a.length === 0 && !('m' in data.t.p)){
            data.singleShape = true;
        }
    }

    var moduleOb = {};
    moduleOb.completeData = completeData;
    moduleOb.checkColors = checkColors;
    moduleOb.checkChars = checkChars;
    moduleOb.checkShapes = checkShapes;
    moduleOb.completeLayers = completeLayers;

    return moduleOb;
}

var dataManager = dataFunctionManager();

var FontManager = (function(){

    var maxWaitingTime = 5000;
    var emptyChar = {
        w: 0,
        size:0,
        shapes:[]
    };
    var combinedCharacters = [];
    //Hindi characters
    combinedCharacters = combinedCharacters.concat([2304, 2305, 2306, 2307, 2362, 2363, 2364, 2364, 2366
    , 2367, 2368, 2369, 2370, 2371, 2372, 2373, 2374, 2375, 2376, 2377, 2378, 2379
    , 2380, 2381, 2382, 2383, 2387, 2388, 2389, 2390, 2391, 2402, 2403]);

    function setUpNode(font, family){
        var parentNode = createTag('span');
        parentNode.style.fontFamily    = family;
        var node = createTag('span');
        // Characters that vary significantly among different fonts
        node.innerHTML = 'giItT1WQy@!-/#';
        // Visible - so we can measure it - but not on the screen
        parentNode.style.position      = 'absolute';
        parentNode.style.left          = '-10000px';
        parentNode.style.top           = '-10000px';
        // Large font size makes even subtle changes obvious
        parentNode.style.fontSize      = '300px';
        // Reset any font properties
        parentNode.style.fontVariant   = 'normal';
        parentNode.style.fontStyle     = 'normal';
        parentNode.style.fontWeight    = 'normal';
        parentNode.style.letterSpacing = '0';
        parentNode.appendChild(node);
        document.body.appendChild(parentNode);

        // Remember width with no applied web font
        var width = node.offsetWidth;
        node.style.fontFamily = font + ', '+family;
        return {node:node, w:width, parent:parentNode};
    }

    function checkLoadedFonts() {
        var i, len = this.fonts.length;
        var node, w;
        var loadedCount = len;
        for(i=0;i<len; i+= 1){
            if(this.fonts[i].loaded){
                loadedCount -= 1;
                continue;
            }
            if(this.fonts[i].fOrigin === 'n' || this.fonts[i].origin === 0){
                this.fonts[i].loaded = true;
            } else{
                node = this.fonts[i].monoCase.node;
                w = this.fonts[i].monoCase.w;
                if(node.offsetWidth !== w){
                    loadedCount -= 1;
                    this.fonts[i].loaded = true;
                }else{
                    node = this.fonts[i].sansCase.node;
                    w = this.fonts[i].sansCase.w;
                    if(node.offsetWidth !== w){
                        loadedCount -= 1;
                        this.fonts[i].loaded = true;
                    }
                }
                if(this.fonts[i].loaded){
                    this.fonts[i].sansCase.parent.parentNode.removeChild(this.fonts[i].sansCase.parent);
                    this.fonts[i].monoCase.parent.parentNode.removeChild(this.fonts[i].monoCase.parent);
                }
            }
        }

        if(loadedCount !== 0 && Date.now() - this.initTime < maxWaitingTime){
            setTimeout(this.checkLoadedFonts.bind(this),20);
        }else{
            setTimeout(function(){this.isLoaded = true;}.bind(this),0);

        }
    }

    function createHelper(def, fontData){
        var tHelper = createNS('text');
        tHelper.style.fontSize = '100px';
        //tHelper.style.fontFamily = fontData.fFamily;
        tHelper.setAttribute('font-family', fontData.fFamily);
        tHelper.setAttribute('font-style', fontData.fStyle);
        tHelper.setAttribute('font-weight', fontData.fWeight);
        tHelper.textContent = '1';
        if(fontData.fClass){
            tHelper.style.fontFamily = 'inherit';
            tHelper.setAttribute('class', fontData.fClass);
        } else {
            tHelper.style.fontFamily = fontData.fFamily;
        }
        def.appendChild(tHelper);
        var tCanvasHelper = createTag('canvas').getContext('2d');
        tCanvasHelper.font = fontData.fWeight + ' ' + fontData.fStyle + ' 100px '+ fontData.fFamily;
        //tCanvasHelper.font = ' 100px '+ fontData.fFamily;
        return tHelper;
    }

    function addFonts(fontData, defs){
        if(!fontData){
            this.isLoaded = true;
            return;
        }
        if(this.chars){
            this.isLoaded = true;
            this.fonts = fontData.list;
            return;
        }


        var fontArr = fontData.list;
        var i, len = fontArr.length;
        var _pendingFonts = len;
        for(i=0; i<len; i+= 1){
            var shouldLoadFont = true;
            var loadedSelector;
            var j;
            fontArr[i].loaded = false;
            fontArr[i].monoCase = setUpNode(fontArr[i].fFamily,'monospace');
            fontArr[i].sansCase = setUpNode(fontArr[i].fFamily,'sans-serif');
            if(!fontArr[i].fPath) {
                fontArr[i].loaded = true;
                _pendingFonts -= 1;
            }else if(fontArr[i].fOrigin === 'p' || fontArr[i].origin === 3){
                loadedSelector = document.querySelectorAll('style[f-forigin="p"][f-family="'+ fontArr[i].fFamily +'"], style[f-origin="3"][f-family="'+ fontArr[i].fFamily +'"]');

                if (loadedSelector.length > 0) {
                    shouldLoadFont = false;
                }

                if (shouldLoadFont) {
                    var s = createTag('style');
                    s.setAttribute('f-forigin', fontArr[i].fOrigin);
                    s.setAttribute('f-origin', fontArr[i].origin);
                    s.setAttribute('f-family', fontArr[i].fFamily);
                    s.type = "text/css";
                    s.innerHTML = "@font-face {" + "font-family: "+fontArr[i].fFamily+"; font-style: normal; src: url('"+fontArr[i].fPath+"');}";
                    defs.appendChild(s);
                }
            } else if(fontArr[i].fOrigin === 'g' || fontArr[i].origin === 1){
                loadedSelector = document.querySelectorAll('link[f-forigin="g"], link[f-origin="1"]');

                for (j = 0; j < loadedSelector.length; j++) {
                    if (loadedSelector[j].href.indexOf(fontArr[i].fPath) !== -1) {
                        // Font is already loaded
                        shouldLoadFont = false;
                    }
                }

                if (shouldLoadFont) {
                    var l = createTag('link');
                    l.setAttribute('f-forigin', fontArr[i].fOrigin);
                    l.setAttribute('f-origin', fontArr[i].origin);
                    l.type = "text/css";
                    l.rel = "stylesheet";
                    l.href = fontArr[i].fPath;
                    document.body.appendChild(l);
                }
            } else if(fontArr[i].fOrigin === 't' || fontArr[i].origin === 2){
                loadedSelector = document.querySelectorAll('script[f-forigin="t"], script[f-origin="2"]');

                for (j = 0; j < loadedSelector.length; j++) {
                    if (fontArr[i].fPath === loadedSelector[j].src) {
                        // Font is already loaded
                        shouldLoadFont = false;
                    }
                }

                if (shouldLoadFont) {
                    var sc = createTag('link');
                    sc.setAttribute('f-forigin', fontArr[i].fOrigin);
                    sc.setAttribute('f-origin', fontArr[i].origin);
                    sc.setAttribute('rel','stylesheet');
                    sc.setAttribute('href',fontArr[i].fPath);
                    defs.appendChild(sc);
                }
            }
            fontArr[i].helper = createHelper(defs,fontArr[i]);
            fontArr[i].cache = {};
            this.fonts.push(fontArr[i]);
        }
        if (_pendingFonts === 0) {
            this.isLoaded = true;
        } else {
            //On some cases even if the font is loaded, it won't load correctly when measuring text on canvas.
            //Adding this timeout seems to fix it
           setTimeout(this.checkLoadedFonts.bind(this), 100);
        }
    }

    function addChars(chars){
        if(!chars){
            return;
        }
        if(!this.chars){
            this.chars = [];
        }
        var i, len = chars.length;
        var j, jLen = this.chars.length, found;
        for(i=0;i<len;i+=1){
            j = 0;
            found = false;
            while(j<jLen){
                if(this.chars[j].style === chars[i].style && this.chars[j].fFamily === chars[i].fFamily && this.chars[j].ch === chars[i].ch){
                    found = true;
                }
                j += 1;
            }
            if(!found){
                this.chars.push(chars[i]);
                jLen += 1;
            }
        }
    }

    function getCharData(char, style, font){
        var i = 0, len = this.chars.length;
        while( i < len) {
            if(this.chars[i].ch === char && this.chars[i].style === style && this.chars[i].fFamily === font){

                return this.chars[i];
            }
            i+= 1;
        }
        if((typeof char === 'string' && char.charCodeAt(0) !== 13 || !char) && console && console.warn) {
            console.warn('Missing character from exported characters list: ', char, style, font);
        }
        return emptyChar;
    }

    function measureText(char, fontName, size) {
        var fontData = this.getFontByName(fontName);
        var index = char.charCodeAt(0);
        if(!fontData.cache[index + 1]) {
            var tHelper = fontData.helper;
            //Canvas version
            //fontData.cache[index] = tHelper.measureText(char).width / 100;
            //SVG version
            //console.log(tHelper.getBBox().width)
            if (char === ' ') {
                tHelper.textContent = '|' + char + '|';
                var doubleSize = tHelper.getComputedTextLength();
                tHelper.textContent = '||';
                var singleSize = tHelper.getComputedTextLength();
                fontData.cache[index + 1] = (doubleSize - singleSize)/100;
            } else {
                tHelper.textContent = char;
                fontData.cache[index + 1] = (tHelper.getComputedTextLength())/100;
            }
        }
        return fontData.cache[index + 1] * size;
    }

    function getFontByName(name){
        var i = 0, len = this.fonts.length;
        while(i<len){
            if(this.fonts[i].fName === name) {
                return this.fonts[i];
            }
            i += 1;
        }
        return this.fonts[0];
    }

    function getCombinedCharacterCodes() {
        return combinedCharacters;
    }

    function loaded() {
        return this.isLoaded;
    }

    var Font = function(){
        this.fonts = [];
        this.chars = null;
        this.typekitLoaded = 0;
        this.isLoaded = false;
        this.initTime = Date.now();
    };
    //TODO: for now I'm adding these methods to the Class and not the prototype. Think of a better way to implement it. 
    Font.getCombinedCharacterCodes = getCombinedCharacterCodes;

    Font.prototype.addChars = addChars;
    Font.prototype.addFonts = addFonts;
    Font.prototype.getCharData = getCharData;
    Font.prototype.getFontByName = getFontByName;
    Font.prototype.measureText = measureText;
    Font.prototype.checkLoadedFonts = checkLoadedFonts;
    Font.prototype.loaded = loaded;

    return Font;

}());
var PropertyFactory = (function(){

    var initFrame = initialDefaultFrame;
    var math_abs = Math.abs;

    function interpolateValue(frameNum, caching) {
        var offsetTime = this.offsetTime;
        var newValue;
        if (this.propType === 'multidimensional') {
            newValue = createTypedArray('float32', this.pv.length);
        }
        var iterationIndex = caching.lastIndex;
        var i = iterationIndex;
        var len = this.keyframes.length - 1, flag = true;
        var keyData, nextKeyData;

        while (flag) {
            keyData = this.keyframes[i];
            nextKeyData = this.keyframes[i + 1];
            if (i === len - 1 && frameNum >= nextKeyData.t - offsetTime){
                if(keyData.h){
                    keyData = nextKeyData;
                }
                iterationIndex = 0;
                break;
            }
            if ((nextKeyData.t - offsetTime) > frameNum){
                iterationIndex = i;
                break;
            }
            if (i < len - 1){
                i += 1;
            } else {
                iterationIndex = 0;
                flag = false;
            }
        }

        var k, kLen, perc, jLen, j, fnc;
        var nextKeyTime = nextKeyData.t - offsetTime;
        var keyTime = keyData.t - offsetTime;
        var endValue;
        if (keyData.to) {
            if (!keyData.bezierData) {
                keyData.bezierData = bez.buildBezierData(keyData.s, nextKeyData.s || keyData.e, keyData.to, keyData.ti);
            }
            var bezierData = keyData.bezierData;
            if (frameNum >= nextKeyTime || frameNum < keyTime) {
                var ind = frameNum >= nextKeyTime ? bezierData.points.length - 1 : 0;
                kLen = bezierData.points[ind].point.length;
                for (k = 0; k < kLen; k += 1) {
                    newValue[k] = bezierData.points[ind].point[k];
                }
                // caching._lastKeyframeIndex = -1;
            } else {
                if (keyData.__fnct) {
                    fnc = keyData.__fnct;
                } else {
                    fnc = BezierFactory.getBezierEasing(keyData.o.x, keyData.o.y, keyData.i.x, keyData.i.y, keyData.n).get;
                    keyData.__fnct = fnc;
                }
                perc = fnc((frameNum - keyTime) / (nextKeyTime - keyTime));
                var distanceInLine = bezierData.segmentLength*perc;

                var segmentPerc;
                var addedLength =  (caching.lastFrame < frameNum && caching._lastKeyframeIndex === i) ? caching._lastAddedLength : 0;
                j =  (caching.lastFrame < frameNum && caching._lastKeyframeIndex === i) ? caching._lastPoint : 0;
                flag = true;
                jLen = bezierData.points.length;
                while (flag) {
                    addedLength += bezierData.points[j].partialLength;
                    if (distanceInLine === 0 || perc === 0 || j === bezierData.points.length - 1) {
                        kLen = bezierData.points[j].point.length;
                        for (k = 0; k < kLen; k += 1) {
                            newValue[k] = bezierData.points[j].point[k];
                        }
                        break;
                    } else if (distanceInLine >= addedLength && distanceInLine < addedLength + bezierData.points[j + 1].partialLength) {
                        segmentPerc = (distanceInLine - addedLength) / bezierData.points[j + 1].partialLength;
                        kLen = bezierData.points[j].point.length;
                        for (k = 0; k < kLen; k += 1) {
                            newValue[k] = bezierData.points[j].point[k] + (bezierData.points[j + 1].point[k] - bezierData.points[j].point[k]) * segmentPerc;
                        }
                        break;
                    }
                    if (j < jLen - 1){
                        j += 1;
                    } else {
                        flag = false;
                    }
                }
                caching._lastPoint = j;
                caching._lastAddedLength = addedLength - bezierData.points[j].partialLength;
                caching._lastKeyframeIndex = i;
            }
        } else {
            var outX, outY, inX, inY, keyValue;
            len = keyData.s.length;
            endValue = nextKeyData.s || keyData.e;
            if (this.sh && keyData.h !== 1) {
                if (frameNum >= nextKeyTime) {
                    newValue[0] = endValue[0];
                    newValue[1] = endValue[1];
                    newValue[2] = endValue[2];
                } else if (frameNum <= keyTime) {
                    newValue[0] = keyData.s[0];
                    newValue[1] = keyData.s[1];
                    newValue[2] = keyData.s[2];
                } else {
                    var quatStart = createQuaternion(keyData.s);
                    var quatEnd = createQuaternion(endValue);
                    var time = (frameNum - keyTime) / (nextKeyTime - keyTime);
                    quaternionToEuler(newValue, slerp(quatStart, quatEnd, time));
                }
                
            } else {
                for(i = 0; i < len; i += 1) {
                    if (keyData.h !== 1) {
                        if (frameNum >= nextKeyTime) {
                            perc = 1;
                        } else if(frameNum < keyTime) {
                            perc = 0;
                        } else {
                            if(keyData.o.x.constructor === Array) {
                                if (!keyData.__fnct) {
                                    keyData.__fnct = [];
                                }
                                if (!keyData.__fnct[i]) {
                                    outX = (typeof keyData.o.x[i] === 'undefined') ? keyData.o.x[0] : keyData.o.x[i];
                                    outY = (typeof keyData.o.y[i] === 'undefined') ? keyData.o.y[0] : keyData.o.y[i];
                                    inX = (typeof keyData.i.x[i] === 'undefined') ? keyData.i.x[0] : keyData.i.x[i];
                                    inY = (typeof keyData.i.y[i] === 'undefined') ? keyData.i.y[0] : keyData.i.y[i];
                                    fnc = BezierFactory.getBezierEasing(outX, outY, inX, inY).get;
                                    keyData.__fnct[i] = fnc;
                                } else {
                                    fnc = keyData.__fnct[i];
                                }
                            } else {
                                if (!keyData.__fnct) {
                                    outX = keyData.o.x;
                                    outY = keyData.o.y;
                                    inX = keyData.i.x;
                                    inY = keyData.i.y;
                                    fnc = BezierFactory.getBezierEasing(outX, outY, inX, inY).get;
                                    keyData.__fnct = fnc;
                                } else {
                                    fnc = keyData.__fnct;
                                }
                            }
                            perc = fnc((frameNum - keyTime) / (nextKeyTime - keyTime ));
                        }
                    }

                    endValue = nextKeyData.s || keyData.e;
                    keyValue = keyData.h === 1 ? keyData.s[i] : keyData.s[i] + (endValue[i] - keyData.s[i]) * perc;

                    if (this.propType === 'multidimensional') {
                        newValue[i] = keyValue;
                    } else {
                        newValue = keyValue;
                    }
                }
            }
        }
        caching.lastIndex = iterationIndex;
        return newValue;
    }

    //based on @Toji's https://github.com/toji/gl-matrix/
    function slerp(a, b, t) {
        var out = [];
        var ax = a[0], ay = a[1], az = a[2], aw = a[3],
        bx = b[0], by = b[1], bz = b[2], bw = b[3]

        var omega, cosom, sinom, scale0, scale1;

        cosom = ax * bx + ay * by + az * bz + aw * bw;
        if (cosom < 0.0) {
            cosom = -cosom;
            bx = -bx;
            by = -by;
            bz = -bz;
            bw = -bw;
        }
        if ((1.0 - cosom) > 0.000001) {
            omega = Math.acos(cosom);
            sinom = Math.sin(omega);
            scale0 = Math.sin((1.0 - t) * omega) / sinom;
            scale1 = Math.sin(t * omega) / sinom;
        } else {
            scale0 = 1.0 - t;
            scale1 = t;
        }
        out[0] = scale0 * ax + scale1 * bx;
        out[1] = scale0 * ay + scale1 * by;
        out[2] = scale0 * az + scale1 * bz;
        out[3] = scale0 * aw + scale1 * bw;

        return out;
    }

    function quaternionToEuler(out, quat) {
        var qx = quat[0];
        var qy = quat[1];
        var qz = quat[2];
        var qw = quat[3];
        var heading = Math.atan2(2*qy*qw-2*qx*qz , 1 - 2*qy*qy - 2*qz*qz)
        var attitude = Math.asin(2*qx*qy + 2*qz*qw) 
        var bank = Math.atan2(2*qx*qw-2*qy*qz , 1 - 2*qx*qx - 2*qz*qz);
        out[0] = heading/degToRads;
        out[1] = attitude/degToRads;
        out[2] = bank/degToRads;
    }

    function createQuaternion(values) {
        var heading = values[0] * degToRads;
        var attitude = values[1] * degToRads;
        var bank = values[2] * degToRads;
        var c1 = Math.cos(heading / 2);
        var c2 = Math.cos(attitude / 2);
        var c3 = Math.cos(bank / 2);
        var s1 = Math.sin(heading / 2);
        var s2 = Math.sin(attitude / 2);
        var s3 = Math.sin(bank / 2);
        var w = c1 * c2 * c3 - s1 * s2 * s3;
        var x = s1 * s2 * c3 + c1 * c2 * s3;
        var y = s1 * c2 * c3 + c1 * s2 * s3;
        var z = c1 * s2 * c3 - s1 * c2 * s3;

        return [x,y,z,w];
    }

    function getValueAtCurrentTime(){
        var frameNum = this.comp.renderedFrame - this.offsetTime;
        var initTime = this.keyframes[0].t - this.offsetTime;
        var endTime = this.keyframes[this.keyframes.length- 1].t-this.offsetTime;
        if(!(frameNum === this._caching.lastFrame || (this._caching.lastFrame !== initFrame && ((this._caching.lastFrame >= endTime && frameNum >= endTime) || (this._caching.lastFrame < initTime && frameNum < initTime))))){
            if(this._caching.lastFrame >= frameNum) {
                this._caching._lastKeyframeIndex = -1;
                this._caching.lastIndex = 0;
            }

            var renderResult = this.interpolateValue(frameNum, this._caching);
            this.pv = renderResult;
        }
        this._caching.lastFrame = frameNum;
        return this.pv;
    }

    function setVValue(val) {
        var multipliedValue;
        if(this.propType === 'unidimensional') {
            multipliedValue = val * this.mult;
            if(math_abs(this.v - multipliedValue) > 0.00001) {
                this.v = multipliedValue;
                this._mdf = true;
            }
        } else {
            var i = 0, len = this.v.length;
            while (i < len) {
                multipliedValue = val[i] * this.mult;
                if (math_abs(this.v[i] - multipliedValue) > 0.00001) {
                    this.v[i] = multipliedValue;
                    this._mdf = true;
                }
                i += 1;
            }
        }
    }

    function processEffectsSequence() {
        if (this.elem.globalData.frameId === this.frameId || !this.effectsSequence.length) {
            return;
        }
        if(this.lock) {
            this.setVValue(this.pv);
            return;
        }
        this.lock = true;
        this._mdf = this._isFirstFrame;
        var multipliedValue;
        var i, len = this.effectsSequence.length;
        var finalValue = this.kf ? this.pv : this.data.k;
        for(i = 0; i < len; i += 1) {
            finalValue = this.effectsSequence[i](finalValue);
        }
        this.setVValue(finalValue);
        this._isFirstFrame = false;
        this.lock = false;
        this.frameId = this.elem.globalData.frameId;
    }

    function addEffect(effectFunction) {
        this.effectsSequence.push(effectFunction);
        this.container.addDynamicProperty(this);
    }

    function ValueProperty(elem, data, mult, container){
        this.propType = 'unidimensional';
        this.mult = mult || 1;
        this.data = data;
        this.v = mult ? data.k * mult : data.k;
        this.pv = data.k;
        this._mdf = false;
        this.elem = elem;
        this.container = container;
        this.comp = elem.comp;
        this.k = false;
        this.kf = false;
        this.vel = 0;
        this.effectsSequence = [];
        this._isFirstFrame = true;
        this.getValue = processEffectsSequence;
        this.setVValue = setVValue;
        this.addEffect = addEffect;
    }

    function MultiDimensionalProperty(elem, data, mult, container) {
        this.propType = 'multidimensional';
        this.mult = mult || 1;
        this.data = data;
        this._mdf = false;
        this.elem = elem;
        this.container = container;
        this.comp = elem.comp;
        this.k = false;
        this.kf = false;
        this.frameId = -1;
        var i, len = data.k.length;
        this.v = createTypedArray('float32', len);
        this.pv = createTypedArray('float32', len);
        var arr = createTypedArray('float32', len);
        this.vel = createTypedArray('float32', len);
        for (i = 0; i < len; i += 1) {
            this.v[i] = data.k[i] * this.mult;
            this.pv[i] = data.k[i];
        }
        this._isFirstFrame = true;
        this.effectsSequence = [];
        this.getValue = processEffectsSequence;
        this.setVValue = setVValue;
        this.addEffect = addEffect;
    }

    function KeyframedValueProperty(elem, data, mult, container) {
        this.propType = 'unidimensional';
        this.keyframes = data.k;
        this.offsetTime = elem.data.st;
        this.frameId = -1;
        this._caching = {lastFrame: initFrame, lastIndex: 0, value: 0, _lastKeyframeIndex: -1};
        this.k = true;
        this.kf = true;
        this.data = data;
        this.mult = mult || 1;
        this.elem = elem;
        this.container = container;
        this.comp = elem.comp;
        this.v = initFrame;
        this.pv = initFrame;
        this._isFirstFrame = true;
        this.getValue = processEffectsSequence;
        this.setVValue = setVValue;
        this.interpolateValue = interpolateValue;
        this.effectsSequence = [getValueAtCurrentTime.bind(this)];
        this.addEffect = addEffect;
    }

    function KeyframedMultidimensionalProperty(elem, data, mult, container){
        this.propType = 'multidimensional';
        var i, len = data.k.length;
        var s, e,to,ti;
        for (i = 0; i < len - 1; i += 1) {
            if (data.k[i].to && data.k[i].s && data.k[i + 1] && data.k[i + 1].s) {
                s = data.k[i].s;
                e = data.k[i + 1].s;
                to = data.k[i].to;
                ti = data.k[i].ti;
                if((s.length === 2 && !(s[0] === e[0] && s[1] === e[1]) && bez.pointOnLine2D(s[0],s[1],e[0],e[1],s[0] + to[0],s[1] + to[1]) && bez.pointOnLine2D(s[0],s[1],e[0],e[1],e[0] + ti[0],e[1] + ti[1])) || (s.length === 3 && !(s[0] === e[0] && s[1] === e[1] && s[2] === e[2]) && bez.pointOnLine3D(s[0],s[1],s[2],e[0],e[1],e[2],s[0] + to[0],s[1] + to[1],s[2] + to[2]) && bez.pointOnLine3D(s[0],s[1],s[2],e[0],e[1],e[2],e[0] + ti[0],e[1] + ti[1],e[2] + ti[2]))){
                    data.k[i].to = null;
                    data.k[i].ti = null;
                }
                if(s[0] === e[0] && s[1] === e[1] && to[0] === 0 && to[1] === 0 && ti[0] === 0 && ti[1] === 0) {
                    if(s.length === 2 || (s[2] === e[2] && to[2] === 0 && ti[2] === 0)) {
                        data.k[i].to = null;
                        data.k[i].ti = null;
                    }
                }
            }
        }
        this.effectsSequence = [getValueAtCurrentTime.bind(this)];
        this.keyframes = data.k;
        this.offsetTime = elem.data.st;
        this.k = true;
        this.kf = true;
        this._isFirstFrame = true;
        this.mult = mult || 1;
        this.elem = elem;
        this.container = container;
        this.comp = elem.comp;
        this.getValue = processEffectsSequence;
        this.setVValue = setVValue;
        this.interpolateValue = interpolateValue;
        this.frameId = -1;
        var arrLen = data.k[0].s.length;
        this.v = createTypedArray('float32', arrLen);
        this.pv = createTypedArray('float32', arrLen);
        for (i = 0; i < arrLen; i += 1) {
            this.v[i] = initFrame;
            this.pv[i] = initFrame;
        }
        this._caching={lastFrame:initFrame,lastIndex:0,value:createTypedArray('float32', arrLen)};
        this.addEffect = addEffect;
    }

    function getProp(elem,data,type, mult, container) {
        var p;
        if(!data.k.length){
            p = new ValueProperty(elem,data, mult, container);
        }else if(typeof(data.k[0]) === 'number'){
            p = new MultiDimensionalProperty(elem,data, mult, container);
        }else{
            switch(type){
                case 0:
                    p = new KeyframedValueProperty(elem,data,mult, container);
                    break;
                case 1:
                    p = new KeyframedMultidimensionalProperty(elem,data,mult, container);
                    break;
            }
        }
        if(p.effectsSequence.length){
            container.addDynamicProperty(p);
        }
        return p;
    }

    var ob = {
        getProp: getProp
    };
    return ob;
}());
var TransformPropertyFactory = (function() {

    var defaultVector = [0,0]

    function applyToMatrix(mat) {
        var _mdf = this._mdf;
        this.iterateDynamicProperties();
        this._mdf = this._mdf || _mdf;
        if (this.a) {
            mat.translate(-this.a.v[0], -this.a.v[1], this.a.v[2]);
        }
        if (this.s) {
            mat.scale(this.s.v[0], this.s.v[1], this.s.v[2]);
        }
        if (this.sk) {
            mat.skewFromAxis(-this.sk.v, this.sa.v);
        }
        if (this.r) {
            mat.rotate(-this.r.v);
        } else {
            mat.rotateZ(-this.rz.v).rotateY(this.ry.v).rotateX(this.rx.v).rotateZ(-this.or.v[2]).rotateY(this.or.v[1]).rotateX(this.or.v[0]);
        }
        if (this.data.p.s) {
            if (this.data.p.z) {
                mat.translate(this.px.v, this.py.v, -this.pz.v);
            } else {
                mat.translate(this.px.v, this.py.v, 0);
            }
        } else {
            mat.translate(this.p.v[0], this.p.v[1], -this.p.v[2]);
        }
    }
    function processKeys(forceRender){
        if (this.elem.globalData.frameId === this.frameId) {
            return;
        }
        if(this._isDirty) {
            this.precalculateMatrix();
            this._isDirty = false;
        }

        this.iterateDynamicProperties();

        if (this._mdf || forceRender) {
            this.v.cloneFromProps(this.pre.props);
            if (this.appliedTransformations < 1) {
                this.v.translate(-this.a.v[0], -this.a.v[1], this.a.v[2]);
            }
            if(this.appliedTransformations < 2) {
                this.v.scale(this.s.v[0], this.s.v[1], this.s.v[2]);
            }
            if (this.sk && this.appliedTransformations < 3) {
                this.v.skewFromAxis(-this.sk.v, this.sa.v);
            }
            if (this.r && this.appliedTransformations < 4) {
                this.v.rotate(-this.r.v);
            } else if (!this.r && this.appliedTransformations < 4){
                this.v.rotateZ(-this.rz.v).rotateY(this.ry.v).rotateX(this.rx.v).rotateZ(-this.or.v[2]).rotateY(this.or.v[1]).rotateX(this.or.v[0]);
            }
            if (this.autoOriented) {
                var v1,v2, frameRate = this.elem.globalData.frameRate;
                if(this.p && this.p.keyframes && this.p.getValueAtTime) {
                    if (this.p._caching.lastFrame+this.p.offsetTime <= this.p.keyframes[0].t) {
                        v1 = this.p.getValueAtTime((this.p.keyframes[0].t + 0.01) / frameRate,0);
                        v2 = this.p.getValueAtTime(this.p.keyframes[0].t / frameRate, 0);
                    } else if(this.p._caching.lastFrame+this.p.offsetTime >= this.p.keyframes[this.p.keyframes.length - 1].t) {
                        v1 = this.p.getValueAtTime((this.p.keyframes[this.p.keyframes.length - 1].t / frameRate), 0);
                        v2 = this.p.getValueAtTime((this.p.keyframes[this.p.keyframes.length - 1].t - 0.05) / frameRate, 0);
                    } else {
                        v1 = this.p.pv;
                        v2 = this.p.getValueAtTime((this.p._caching.lastFrame+this.p.offsetTime - 0.01) / frameRate, this.p.offsetTime);
                    }
                } else if(this.px && this.px.keyframes && this.py.keyframes && this.px.getValueAtTime && this.py.getValueAtTime) {
                    v1 = [];
                    v2 = [];
                    var px = this.px, py = this.py, frameRate;
                    if (px._caching.lastFrame+px.offsetTime <= px.keyframes[0].t) {
                        v1[0] = px.getValueAtTime((px.keyframes[0].t + 0.01) / frameRate,0);
                        v1[1] = py.getValueAtTime((py.keyframes[0].t + 0.01) / frameRate,0);
                        v2[0] = px.getValueAtTime((px.keyframes[0].t) / frameRate,0);
                        v2[1] = py.getValueAtTime((py.keyframes[0].t) / frameRate,0);
                    } else if(px._caching.lastFrame+px.offsetTime >= px.keyframes[px.keyframes.length - 1].t) {
                        v1[0] = px.getValueAtTime((px.keyframes[px.keyframes.length - 1].t / frameRate),0);
                        v1[1] = py.getValueAtTime((py.keyframes[py.keyframes.length - 1].t / frameRate),0);
                        v2[0] = px.getValueAtTime((px.keyframes[px.keyframes.length - 1].t - 0.01) / frameRate,0);
                        v2[1] = py.getValueAtTime((py.keyframes[py.keyframes.length - 1].t - 0.01) / frameRate,0);
                    } else {
                        v1 = [px.pv, py.pv];
                        v2[0] = px.getValueAtTime((px._caching.lastFrame+px.offsetTime - 0.01) / frameRate,px.offsetTime);
                        v2[1] = py.getValueAtTime((py._caching.lastFrame+py.offsetTime - 0.01) / frameRate,py.offsetTime);
                    }
                } else {
                    v1 = v2 = defaultVector
                }
                this.v.rotate(-Math.atan2(v1[1] - v2[1], v1[0] - v2[0]));
            }
            if(this.data.p && this.data.p.s){
                if(this.data.p.z) {
                    this.v.translate(this.px.v, this.py.v, -this.pz.v);
                } else {
                    this.v.translate(this.px.v, this.py.v, 0);
                }
            }else{
                this.v.translate(this.p.v[0],this.p.v[1],-this.p.v[2]);
            }
        }
        this.frameId = this.elem.globalData.frameId;
    }

    function precalculateMatrix() {
        if(!this.a.k) {
            this.pre.translate(-this.a.v[0], -this.a.v[1], this.a.v[2]);
            this.appliedTransformations = 1;
        } else {
            return;
        }
        if(!this.s.effectsSequence.length) {
            this.pre.scale(this.s.v[0], this.s.v[1], this.s.v[2]);
            this.appliedTransformations = 2;
        } else {
            return;
        }
        if(this.sk) {
            if(!this.sk.effectsSequence.length && !this.sa.effectsSequence.length) {
                this.pre.skewFromAxis(-this.sk.v, this.sa.v);
            this.appliedTransformations = 3;
            } else {
                return;
            }
        }
        if (this.r) {
            if(!this.r.effectsSequence.length) {
                this.pre.rotate(-this.r.v);
                this.appliedTransformations = 4;
            } else {
                return;
            }
        } else if(!this.rz.effectsSequence.length && !this.ry.effectsSequence.length && !this.rx.effectsSequence.length && !this.or.effectsSequence.length) {
            this.pre.rotateZ(-this.rz.v).rotateY(this.ry.v).rotateX(this.rx.v).rotateZ(-this.or.v[2]).rotateY(this.or.v[1]).rotateX(this.or.v[0]);
            this.appliedTransformations = 4;
        }
    }

    function autoOrient(){
        //
        //var prevP = this.getValueAtTime();
    }

    function addDynamicProperty(prop) {
        this._addDynamicProperty(prop);
        this.elem.addDynamicProperty(prop);
        this._isDirty = true;
    }

    function TransformProperty(elem,data,container){
        this.elem = elem;
        this.frameId = -1;
        this.propType = 'transform';
        this.data = data;
        this.v = new Matrix();
        //Precalculated matrix with non animated properties
        this.pre = new Matrix();
        this.appliedTransformations = 0;
        this.initDynamicPropertyContainer(container || elem);
        if(data.p && data.p.s){
            this.px = PropertyFactory.getProp(elem,data.p.x,0,0,this);
            this.py = PropertyFactory.getProp(elem,data.p.y,0,0,this);
            if(data.p.z){
                this.pz = PropertyFactory.getProp(elem,data.p.z,0,0,this);
            }
        }else{
            this.p = PropertyFactory.getProp(elem,data.p || {k:[0,0,0]},1,0,this);
        }
        if(data.rx) {
            this.rx = PropertyFactory.getProp(elem, data.rx, 0, degToRads, this);
            this.ry = PropertyFactory.getProp(elem, data.ry, 0, degToRads, this);
            this.rz = PropertyFactory.getProp(elem, data.rz, 0, degToRads, this);
            if(data.or.k[0].ti) {
                var i, len = data.or.k.length;
                for(i=0;i<len;i+=1) {
                    data.or.k[i].to = data.or.k[i].ti = null;
                }
            }
            this.or = PropertyFactory.getProp(elem, data.or, 1, degToRads, this);
            //sh Indicates it needs to be capped between -180 and 180
            this.or.sh = true;
        } else {
            this.r = PropertyFactory.getProp(elem, data.r || {k: 0}, 0, degToRads, this);
        }
        if(data.sk){
            this.sk = PropertyFactory.getProp(elem, data.sk, 0, degToRads, this);
            this.sa = PropertyFactory.getProp(elem, data.sa, 0, degToRads, this);
        }
        this.a = PropertyFactory.getProp(elem,data.a || {k:[0,0,0]},1,0,this);
        this.s = PropertyFactory.getProp(elem,data.s || {k:[100,100,100]},1,0.01,this);
        // Opacity is not part of the transform properties, that's why it won't use this.dynamicProperties. That way transforms won't get updated if opacity changes.
        if(data.o){
            this.o = PropertyFactory.getProp(elem,data.o,0,0.01,elem);
        } else {
            this.o = {_mdf:false,v:1};
        }
        this._isDirty = true;
        if(!this.dynamicProperties.length){
            this.getValue(true);
        }
    }

    TransformProperty.prototype = {
        applyToMatrix: applyToMatrix,
        getValue: processKeys,
        precalculateMatrix: precalculateMatrix,
        autoOrient: autoOrient
    }

    extendPrototype([DynamicPropertyContainer], TransformProperty);
    TransformProperty.prototype.addDynamicProperty = addDynamicProperty;
    TransformProperty.prototype._addDynamicProperty = DynamicPropertyContainer.prototype.addDynamicProperty;

    function getTransformProperty(elem,data,container){
        return new TransformProperty(elem,data,container);
    }

    return {
        getTransformProperty: getTransformProperty
    };

}());
function ShapePath(){
	this.c = false;
	this._length = 0;
	this._maxLength = 8;
	this.v = createSizedArray(this._maxLength);
	this.o = createSizedArray(this._maxLength);
	this.i = createSizedArray(this._maxLength);
}

ShapePath.prototype.setPathData = function(closed, len) {
	this.c = closed;
	this.setLength(len);
	var i = 0;
	while(i < len){
		this.v[i] = point_pool.newElement();
		this.o[i] = point_pool.newElement();
		this.i[i] = point_pool.newElement();
		i += 1;
	}
};

ShapePath.prototype.setLength = function(len) {
	while(this._maxLength < len) {
		this.doubleArrayLength();
	}
	this._length = len;
};

ShapePath.prototype.doubleArrayLength = function() {
	this.v = this.v.concat(createSizedArray(this._maxLength));
	this.i = this.i.concat(createSizedArray(this._maxLength));
	this.o = this.o.concat(createSizedArray(this._maxLength));
	this._maxLength *= 2;
};

ShapePath.prototype.setXYAt = function(x, y, type, pos, replace) {
	var arr;
	this._length = Math.max(this._length, pos + 1);
	if(this._length >= this._maxLength) {
		this.doubleArrayLength();
	}
	switch(type){
		case 'v':
			arr = this.v;
			break;
		case 'i':
			arr = this.i;
			break;
		case 'o':
			arr = this.o;
			break;
	}
	if(!arr[pos] || (arr[pos] && !replace)){
		arr[pos] = point_pool.newElement();
	}
	arr[pos][0] = x;
	arr[pos][1] = y;
};

ShapePath.prototype.setTripleAt = function(vX,vY,oX,oY,iX,iY,pos, replace) {
	this.setXYAt(vX,vY,'v',pos, replace);
	this.setXYAt(oX,oY,'o',pos, replace);
	this.setXYAt(iX,iY,'i',pos, replace);
};

ShapePath.prototype.reverse = function() {
	var newPath = new ShapePath();
	newPath.setPathData(this.c, this._length);
	var vertices = this.v, outPoints = this.o, inPoints = this.i;
	var init = 0;
	if (this.c) {
		newPath.setTripleAt(vertices[0][0], vertices[0][1], inPoints[0][0], inPoints[0][1], outPoints[0][0], outPoints[0][1], 0, false);
        init = 1;
    }
    var cnt = this._length - 1;
    var len = this._length;

    var i;
    for (i = init; i < len; i += 1) {
    	newPath.setTripleAt(vertices[cnt][0], vertices[cnt][1], inPoints[cnt][0], inPoints[cnt][1], outPoints[cnt][0], outPoints[cnt][1], i, false);
        cnt -= 1;
    }
    return newPath;
};
var ShapePropertyFactory = (function(){

    var initFrame = -999999;

    function interpolateShape(frameNum, previousValue, caching) {
        var iterationIndex = caching.lastIndex;
        var keyPropS,keyPropE,isHold, j, k, jLen, kLen, perc, vertexValue;
        var kf = this.keyframes;
        if(frameNum < kf[0].t-this.offsetTime){
            keyPropS = kf[0].s[0];
            isHold = true;
            iterationIndex = 0;
        }else if(frameNum >= kf[kf.length - 1].t-this.offsetTime){
            keyPropS = kf[kf.length - 1].s ? kf[kf.length - 1].s[0] : kf[kf.length - 2].e[0];
            /*if(kf[kf.length - 1].s){
                keyPropS = kf[kf.length - 1].s[0];
            }else{
                keyPropS = kf[kf.length - 2].e[0];
            }*/
            isHold = true;
        }else{
            var i = iterationIndex;
            var len = kf.length- 1,flag = true,keyData,nextKeyData;
            while(flag){
                keyData = kf[i];
                nextKeyData = kf[i+1];
                if((nextKeyData.t - this.offsetTime) > frameNum){
                    break;
                }
                if(i < len - 1){
                    i += 1;
                }else{
                    flag = false;
                }
            }
            isHold = keyData.h === 1;
            iterationIndex = i;
            if(!isHold){
                if(frameNum >= nextKeyData.t-this.offsetTime){
                    perc = 1;
                }else if(frameNum < keyData.t-this.offsetTime){
                    perc = 0;
                }else{
                    var fnc;
                    if(keyData.__fnct){
                        fnc = keyData.__fnct;
                    }else{
                        fnc = BezierFactory.getBezierEasing(keyData.o.x,keyData.o.y,keyData.i.x,keyData.i.y).get;
                        keyData.__fnct = fnc;
                    }
                    perc = fnc((frameNum-(keyData.t-this.offsetTime))/((nextKeyData.t-this.offsetTime)-(keyData.t-this.offsetTime)));
                }
                keyPropE = nextKeyData.s ? nextKeyData.s[0] : keyData.e[0];
            }
            keyPropS = keyData.s[0];
        }
        jLen = previousValue._length;
        kLen = keyPropS.i[0].length;
        caching.lastIndex = iterationIndex;

        for(j=0;j<jLen;j+=1){
            for(k=0;k<kLen;k+=1){
                vertexValue = isHold ? keyPropS.i[j][k] :  keyPropS.i[j][k]+(keyPropE.i[j][k]-keyPropS.i[j][k])*perc;
                previousValue.i[j][k] = vertexValue;
                vertexValue = isHold ? keyPropS.o[j][k] :  keyPropS.o[j][k]+(keyPropE.o[j][k]-keyPropS.o[j][k])*perc;
                previousValue.o[j][k] = vertexValue;
                vertexValue = isHold ? keyPropS.v[j][k] :  keyPropS.v[j][k]+(keyPropE.v[j][k]-keyPropS.v[j][k])*perc;
                previousValue.v[j][k] = vertexValue;
            }
        }
    }

    function interpolateShapeCurrentTime(){
        var frameNum = this.comp.renderedFrame - this.offsetTime;
        var initTime = this.keyframes[0].t - this.offsetTime;
        var endTime = this.keyframes[this.keyframes.length - 1].t - this.offsetTime;
        var lastFrame = this._caching.lastFrame;
        if(!(lastFrame !== initFrame && ((lastFrame < initTime && frameNum < initTime) || (lastFrame > endTime && frameNum > endTime)))){
            ////
            this._caching.lastIndex = lastFrame < frameNum ? this._caching.lastIndex : 0;
            this.interpolateShape(frameNum, this.pv, this._caching);
            ////
        }
        this._caching.lastFrame = frameNum;
        return this.pv;
    }

    function resetShape(){
        this.paths = this.localShapeCollection;
    }

    function shapesEqual(shape1, shape2) {
        if(shape1._length !== shape2._length || shape1.c !== shape2.c){
            return false;
        }
        var i, len = shape1._length;
        for(i = 0; i < len; i += 1) {
            if(shape1.v[i][0] !== shape2.v[i][0] 
            || shape1.v[i][1] !== shape2.v[i][1] 
            || shape1.o[i][0] !== shape2.o[i][0] 
            || shape1.o[i][1] !== shape2.o[i][1] 
            || shape1.i[i][0] !== shape2.i[i][0] 
            || shape1.i[i][1] !== shape2.i[i][1]) {
                return false;
            }
        }
        return true;
    }

    function setVValue(newPath) {
        if(!shapesEqual(this.v, newPath)) {
            this.v = shape_pool.clone(newPath);
            this.localShapeCollection.releaseShapes();
            this.localShapeCollection.addShape(this.v);
            this._mdf = true;
            this.paths = this.localShapeCollection;
        }
    }

    function processEffectsSequence() {
        if (this.elem.globalData.frameId === this.frameId) {
            return;
        } else if (!this.effectsSequence.length) {
            this._mdf = false;
            return;
        }
        if (this.lock) {
            this.setVValue(this.pv);
            return;
        }
        this.lock = true;
        this._mdf = false;
        var finalValue = this.kf ? this.pv : this.data.ks ? this.data.ks.k : this.data.pt.k;
        var i, len = this.effectsSequence.length;
        for(i = 0; i < len; i += 1) {
            finalValue = this.effectsSequence[i](finalValue);
        }
        this.setVValue(finalValue);
        this.lock = false;
        this.frameId = this.elem.globalData.frameId;
    };

    function ShapeProperty(elem, data, type){
        this.propType = 'shape';
        this.comp = elem.comp;
        this.container = elem;
        this.elem = elem;
        this.data = data;
        this.k = false;
        this.kf = false;
        this._mdf = false;
        var pathData = type === 3 ? data.pt.k : data.ks.k;
        this.v = shape_pool.clone(pathData);
        this.pv = shape_pool.clone(this.v);
        this.localShapeCollection = shapeCollection_pool.newShapeCollection();
        this.paths = this.localShapeCollection;
        this.paths.addShape(this.v);
        this.reset = resetShape;
        this.effectsSequence = [];
    }

    function addEffect(effectFunction) {
        this.effectsSequence.push(effectFunction);
        this.container.addDynamicProperty(this);
    }

    ShapeProperty.prototype.interpolateShape = interpolateShape;
    ShapeProperty.prototype.getValue = processEffectsSequence;
    ShapeProperty.prototype.setVValue = setVValue;
    ShapeProperty.prototype.addEffect = addEffect;

    function KeyframedShapeProperty(elem,data,type){
        this.propType = 'shape';
        this.comp = elem.comp;
        this.elem = elem;
        this.container = elem;
        this.offsetTime = elem.data.st;
        this.keyframes = type === 3 ? data.pt.k : data.ks.k;
        this.k = true;
        this.kf = true;
        var i, len = this.keyframes[0].s[0].i.length;
        var jLen = this.keyframes[0].s[0].i[0].length;
        this.v = shape_pool.newElement();
        this.v.setPathData(this.keyframes[0].s[0].c, len);
        this.pv = shape_pool.clone(this.v);
        this.localShapeCollection = shapeCollection_pool.newShapeCollection();
        this.paths = this.localShapeCollection;
        this.paths.addShape(this.v);
        this.lastFrame = initFrame;
        this.reset = resetShape;
        this._caching = {lastFrame: initFrame, lastIndex: 0};
        this.effectsSequence = [interpolateShapeCurrentTime.bind(this)];
    }
    KeyframedShapeProperty.prototype.getValue = processEffectsSequence;
    KeyframedShapeProperty.prototype.interpolateShape = interpolateShape;
    KeyframedShapeProperty.prototype.setVValue = setVValue;
    KeyframedShapeProperty.prototype.addEffect = addEffect;

    var EllShapeProperty = (function(){

        var cPoint = roundCorner;

        function EllShapeProperty(elem,data) {
            /*this.v = {
                v: createSizedArray(4),
                i: createSizedArray(4),
                o: createSizedArray(4),
                c: true
            };*/
            this.v = shape_pool.newElement();
            this.v.setPathData(true, 4);
            this.localShapeCollection = shapeCollection_pool.newShapeCollection();
            this.paths = this.localShapeCollection;
            this.localShapeCollection.addShape(this.v);
            this.d = data.d;
            this.elem = elem;
            this.comp = elem.comp;
            this.frameId = -1;
            this.initDynamicPropertyContainer(elem);
            this.p = PropertyFactory.getProp(elem,data.p,1,0,this);
            this.s = PropertyFactory.getProp(elem,data.s,1,0,this);
            if(this.dynamicProperties.length){
                this.k = true;
            }else{
                this.k = false;
                this.convertEllToPath();
            }
        };

        EllShapeProperty.prototype = {
            reset: resetShape,
            getValue: function (){
                if(this.elem.globalData.frameId === this.frameId){
                    return;
                }
                this.frameId = this.elem.globalData.frameId;
                this.iterateDynamicProperties();

                if(this._mdf){
                    this.convertEllToPath();
                }
            },
            convertEllToPath: function() {
                var p0 = this.p.v[0], p1 = this.p.v[1], s0 = this.s.v[0]/2, s1 = this.s.v[1]/2;
                var _cw = this.d !== 3;
                var _v = this.v;
                _v.v[0][0] = p0;
                _v.v[0][1] = p1 - s1;
                _v.v[1][0] = _cw ? p0 + s0 : p0 - s0;
                _v.v[1][1] = p1;
                _v.v[2][0] = p0;
                _v.v[2][1] = p1 + s1;
                _v.v[3][0] = _cw ? p0 - s0 : p0 + s0;
                _v.v[3][1] = p1;
                _v.i[0][0] = _cw ? p0 - s0 * cPoint : p0 + s0 * cPoint;
                _v.i[0][1] = p1 - s1;
                _v.i[1][0] = _cw ? p0 + s0 : p0 - s0;
                _v.i[1][1] = p1 - s1 * cPoint;
                _v.i[2][0] = _cw ? p0 + s0 * cPoint : p0 - s0 * cPoint;
                _v.i[2][1] = p1 + s1;
                _v.i[3][0] = _cw ? p0 - s0 : p0 + s0;
                _v.i[3][1] = p1 + s1 * cPoint;
                _v.o[0][0] = _cw ? p0 + s0 * cPoint : p0 - s0 * cPoint;
                _v.o[0][1] = p1 - s1;
                _v.o[1][0] = _cw ? p0 + s0 : p0 - s0;
                _v.o[1][1] = p1 + s1 * cPoint;
                _v.o[2][0] = _cw ? p0 - s0 * cPoint : p0 + s0 * cPoint;
                _v.o[2][1] = p1 + s1;
                _v.o[3][0] = _cw ? p0 - s0 : p0 + s0;
                _v.o[3][1] = p1 - s1 * cPoint;
            }
        }

        extendPrototype([DynamicPropertyContainer], EllShapeProperty);

        return EllShapeProperty;
    }());

    var StarShapeProperty = (function() {

        function StarShapeProperty(elem,data) {
            this.v = shape_pool.newElement();
            this.v.setPathData(true, 0);
            this.elem = elem;
            this.comp = elem.comp;
            this.data = data;
            this.frameId = -1;
            this.d = data.d;
            this.initDynamicPropertyContainer(elem);
            if(data.sy === 1){
                this.ir = PropertyFactory.getProp(elem,data.ir,0,0,this);
                this.is = PropertyFactory.getProp(elem,data.is,0,0.01,this);
                this.convertToPath = this.convertStarToPath;
            } else {
                this.convertToPath = this.convertPolygonToPath;
            }
            this.pt = PropertyFactory.getProp(elem,data.pt,0,0,this);
            this.p = PropertyFactory.getProp(elem,data.p,1,0,this);
            this.r = PropertyFactory.getProp(elem,data.r,0,degToRads,this);
            this.or = PropertyFactory.getProp(elem,data.or,0,0,this);
            this.os = PropertyFactory.getProp(elem,data.os,0,0.01,this);
            this.localShapeCollection = shapeCollection_pool.newShapeCollection();
            this.localShapeCollection.addShape(this.v);
            this.paths = this.localShapeCollection;
            if(this.dynamicProperties.length){
                this.k = true;
            }else{
                this.k = false;
                this.convertToPath();
            }
        };

        StarShapeProperty.prototype = {
            reset: resetShape,
            getValue: function() {
                if(this.elem.globalData.frameId === this.frameId){
                    return;
                }
                this.frameId = this.elem.globalData.frameId;
                this.iterateDynamicProperties();
                if(this._mdf){
                    this.convertToPath();
                }
            },
            convertStarToPath: function() {
                var numPts = Math.floor(this.pt.v)*2;
                var angle = Math.PI*2/numPts;
                /*this.v.v.length = numPts;
                this.v.i.length = numPts;
                this.v.o.length = numPts;*/
                var longFlag = true;
                var longRad = this.or.v;
                var shortRad = this.ir.v;
                var longRound = this.os.v;
                var shortRound = this.is.v;
                var longPerimSegment = 2*Math.PI*longRad/(numPts*2);
                var shortPerimSegment = 2*Math.PI*shortRad/(numPts*2);
                var i, rad,roundness,perimSegment, currentAng = -Math.PI/ 2;
                currentAng += this.r.v;
                var dir = this.data.d === 3 ? -1 : 1;
                this.v._length = 0;
                for(i=0;i<numPts;i+=1){
                    rad = longFlag ? longRad : shortRad;
                    roundness = longFlag ? longRound : shortRound;
                    perimSegment = longFlag ? longPerimSegment : shortPerimSegment;
                    var x = rad * Math.cos(currentAng);
                    var y = rad * Math.sin(currentAng);
                    var ox = x === 0 && y === 0 ? 0 : y/Math.sqrt(x*x + y*y);
                    var oy = x === 0 && y === 0 ? 0 : -x/Math.sqrt(x*x + y*y);
                    x +=  + this.p.v[0];
                    y +=  + this.p.v[1];
                    this.v.setTripleAt(x,y,x-ox*perimSegment*roundness*dir,y-oy*perimSegment*roundness*dir,x+ox*perimSegment*roundness*dir,y+oy*perimSegment*roundness*dir, i, true);

                    /*this.v.v[i] = [x,y];
                    this.v.i[i] = [x+ox*perimSegment*roundness*dir,y+oy*perimSegment*roundness*dir];
                    this.v.o[i] = [x-ox*perimSegment*roundness*dir,y-oy*perimSegment*roundness*dir];
                    this.v._length = numPts;*/
                    longFlag = !longFlag;
                    currentAng += angle*dir;
                }
            },
            convertPolygonToPath: function() {
                var numPts = Math.floor(this.pt.v);
                var angle = Math.PI*2/numPts;
                var rad = this.or.v;
                var roundness = this.os.v;
                var perimSegment = 2*Math.PI*rad/(numPts*4);
                var i, currentAng = -Math.PI/ 2;
                var dir = this.data.d === 3 ? -1 : 1;
                currentAng += this.r.v;
                this.v._length = 0;
                for(i=0;i<numPts;i+=1){
                    var x = rad * Math.cos(currentAng);
                    var y = rad * Math.sin(currentAng);
                    var ox = x === 0 && y === 0 ? 0 : y/Math.sqrt(x*x + y*y);
                    var oy = x === 0 && y === 0 ? 0 : -x/Math.sqrt(x*x + y*y);
                    x +=  + this.p.v[0];
                    y +=  + this.p.v[1];
                    this.v.setTripleAt(x,y,x-ox*perimSegment*roundness*dir,y-oy*perimSegment*roundness*dir,x+ox*perimSegment*roundness*dir,y+oy*perimSegment*roundness*dir, i, true);
                    currentAng += angle*dir;
                }
                this.paths.length = 0;
                this.paths[0] = this.v;
            }

        }
        extendPrototype([DynamicPropertyContainer], StarShapeProperty);

        return StarShapeProperty;
    }());

    var RectShapeProperty = (function() {

         function RectShapeProperty(elem,data) {
            this.v = shape_pool.newElement();
            this.v.c = true;
            this.localShapeCollection = shapeCollection_pool.newShapeCollection();
            this.localShapeCollection.addShape(this.v);
            this.paths = this.localShapeCollection;
            this.elem = elem;
            this.comp = elem.comp;
            this.frameId = -1;
            this.d = data.d;
            this.initDynamicPropertyContainer(elem);
            this.p = PropertyFactory.getProp(elem,data.p,1,0,this);
            this.s = PropertyFactory.getProp(elem,data.s,1,0,this);
            this.r = PropertyFactory.getProp(elem,data.r,0,0,this);
            if(this.dynamicProperties.length){
                this.k = true;
            }else{
                this.k = false;
                this.convertRectToPath();
            }
        };

        RectShapeProperty.prototype = {
            convertRectToPath: function (){
                var p0 = this.p.v[0], p1 = this.p.v[1], v0 = this.s.v[0]/2, v1 = this.s.v[1]/2;
                var round = bm_min(v0,v1,this.r.v);
                var cPoint = round*(1-roundCorner);
                this.v._length = 0;

                if(this.d === 2 || this.d === 1) {
                    this.v.setTripleAt(p0+v0, p1-v1+round,p0+v0, p1-v1+round,p0+v0,p1-v1+cPoint,0, true);
                    this.v.setTripleAt(p0+v0, p1+v1-round,p0+v0, p1+v1-cPoint,p0+v0, p1+v1-round,1, true);
                    if(round!== 0){
                        this.v.setTripleAt(p0+v0-round, p1+v1,p0+v0-round,p1+v1,p0+v0-cPoint,p1+v1,2, true);
                        this.v.setTripleAt(p0-v0+round,p1+v1,p0-v0+cPoint,p1+v1,p0-v0+round,p1+v1,3, true);
                        this.v.setTripleAt(p0-v0,p1+v1-round,p0-v0,p1+v1-round,p0-v0,p1+v1-cPoint,4, true);
                        this.v.setTripleAt(p0-v0,p1-v1+round,p0-v0,p1-v1+cPoint,p0-v0,p1-v1+round,5, true);
                        this.v.setTripleAt(p0-v0+round,p1-v1,p0-v0+round,p1-v1,p0-v0+cPoint,p1-v1,6, true);
                        this.v.setTripleAt(p0+v0-round,p1-v1,p0+v0-cPoint,p1-v1,p0+v0-round,p1-v1,7, true);
                    } else {
                        this.v.setTripleAt(p0-v0,p1+v1,p0-v0+cPoint,p1+v1,p0-v0,p1+v1,2);
                        this.v.setTripleAt(p0-v0,p1-v1,p0-v0,p1-v1+cPoint,p0-v0,p1-v1,3);
                    }
                }else{
                    this.v.setTripleAt(p0+v0,p1-v1+round,p0+v0,p1-v1+cPoint,p0+v0,p1-v1+round,0, true);
                    if(round!== 0){
                        this.v.setTripleAt(p0+v0-round,p1-v1,p0+v0-round,p1-v1,p0+v0-cPoint,p1-v1,1, true);
                        this.v.setTripleAt(p0-v0+round,p1-v1,p0-v0+cPoint,p1-v1,p0-v0+round,p1-v1,2, true);
                        this.v.setTripleAt(p0-v0,p1-v1+round,p0-v0,p1-v1+round,p0-v0,p1-v1+cPoint,3, true);
                        this.v.setTripleAt(p0-v0,p1+v1-round,p0-v0,p1+v1-cPoint,p0-v0,p1+v1-round,4, true);
                        this.v.setTripleAt(p0-v0+round,p1+v1,p0-v0+round,p1+v1,p0-v0+cPoint,p1+v1,5, true);
                        this.v.setTripleAt(p0+v0-round,p1+v1,p0+v0-cPoint,p1+v1,p0+v0-round,p1+v1,6, true);
                        this.v.setTripleAt(p0+v0,p1+v1-round,p0+v0,p1+v1-round,p0+v0,p1+v1-cPoint,7, true);
                    } else {
                        this.v.setTripleAt(p0-v0,p1-v1,p0-v0+cPoint,p1-v1,p0-v0,p1-v1,1, true);
                        this.v.setTripleAt(p0-v0,p1+v1,p0-v0,p1+v1-cPoint,p0-v0,p1+v1,2, true);
                        this.v.setTripleAt(p0+v0,p1+v1,p0+v0-cPoint,p1+v1,p0+v0,p1+v1,3, true);

                    }
                }
            },
            getValue: function(frameNum){
                if(this.elem.globalData.frameId === this.frameId){
                    return;
                }
                this.frameId = this.elem.globalData.frameId;
                this.iterateDynamicProperties();
                if(this._mdf){
                    this.convertRectToPath();
                }

            },
            reset: resetShape
        }
        extendPrototype([DynamicPropertyContainer], RectShapeProperty);

        return RectShapeProperty;
    }());

    function getShapeProp(elem,data,type){
        var prop;
        if(type === 3 || type === 4){
            var dataProp = type === 3 ? data.pt : data.ks;
            var keys = dataProp.k;
            if(keys.length){
                prop = new KeyframedShapeProperty(elem, data, type);
            }else{
                prop = new ShapeProperty(elem, data, type);
            }
        }else if(type === 5){
            prop = new RectShapeProperty(elem, data);
        }else if(type === 6){
            prop = new EllShapeProperty(elem, data);
        }else if(type === 7){
            prop = new StarShapeProperty(elem, data);
        }
        if(prop.k){
            elem.addDynamicProperty(prop);
        }
        return prop;
    }

    function getConstructorFunction() {
        return ShapeProperty;
    }

    function getKeyframedConstructorFunction() {
        return KeyframedShapeProperty;
    }

    var ob = {};
    ob.getShapeProp = getShapeProp;
    ob.getConstructorFunction = getConstructorFunction;
    ob.getKeyframedConstructorFunction = getKeyframedConstructorFunction;
    return ob;
}());
var ShapeModifiers = (function(){
    var ob = {};
    var modifiers = {};
    ob.registerModifier = registerModifier;
    ob.getModifier = getModifier;

    function registerModifier(nm,factory){
        if(!modifiers[nm]){
            modifiers[nm] = factory;
        }
    }

    function getModifier(nm,elem, data){
        return new modifiers[nm](elem, data);
    }

    return ob;
}());

function ShapeModifier(){}
ShapeModifier.prototype.initModifierProperties = function(){};
ShapeModifier.prototype.addShapeToModifier = function(){};
ShapeModifier.prototype.addShape = function(data){
    if (!this.closed) {
        // Adding shape to dynamic properties. It covers the case where a shape has no effects applied, to reset it's _mdf state on every tick.
        data.sh.container.addDynamicProperty(data.sh);
        var shapeData = {shape:data.sh, data: data, localShapeCollection:shapeCollection_pool.newShapeCollection()};
        this.shapes.push(shapeData);
        this.addShapeToModifier(shapeData);
        if (this._isAnimated) {
            data.setAsAnimated();
        }
    }
};
ShapeModifier.prototype.init = function(elem,data){
    this.shapes = [];
    this.elem = elem;
    this.initDynamicPropertyContainer(elem);
    this.initModifierProperties(elem,data);
    this.frameId = initialDefaultFrame;
    this.closed = false;
    this.k = false;
    if(this.dynamicProperties.length){
        this.k = true;
    }else{
        this.getValue(true);
    }
};
ShapeModifier.prototype.processKeys = function(){
    if(this.elem.globalData.frameId === this.frameId){
        return;
    }
    this.frameId = this.elem.globalData.frameId;
    this.iterateDynamicProperties();
};

extendPrototype([DynamicPropertyContainer], ShapeModifier);
function TrimModifier(){
}
extendPrototype([ShapeModifier], TrimModifier);
TrimModifier.prototype.initModifierProperties = function(elem, data) {
    this.s = PropertyFactory.getProp(elem, data.s, 0, 0.01, this);
    this.e = PropertyFactory.getProp(elem, data.e, 0, 0.01, this);
    this.o = PropertyFactory.getProp(elem, data.o, 0, 0, this);
    this.sValue = 0;
    this.eValue = 0;
    this.getValue = this.processKeys;
    this.m = data.m;
    this._isAnimated = !!this.s.effectsSequence.length || !!this.e.effectsSequence.length || !!this.o.effectsSequence.length;
};

TrimModifier.prototype.addShapeToModifier = function(shapeData){
    shapeData.pathsData = [];
};

TrimModifier.prototype.calculateShapeEdges = function(s, e, shapeLength, addedLength, totalModifierLength) {
    var segments = [];
    if (e <= 1) {
        segments.push({
            s: s,
            e: e
        });
    } else if (s >= 1) {
        segments.push({
            s: s - 1,
            e: e - 1
        });
    } else {
        segments.push({
            s: s,
            e: 1
        });
        segments.push({
            s: 0,
            e: e - 1
        });
    }
    var shapeSegments = [];
    var i, len = segments.length, segmentOb;
    for (i = 0; i < len; i += 1) {
        segmentOb = segments[i];
        if (segmentOb.e * totalModifierLength < addedLength || segmentOb.s * totalModifierLength > addedLength + shapeLength) {
            
        } else {
            var shapeS, shapeE;
            if (segmentOb.s * totalModifierLength <= addedLength) {
                shapeS = 0;
            } else {
                shapeS = (segmentOb.s * totalModifierLength - addedLength) / shapeLength;
            }
            if(segmentOb.e * totalModifierLength >= addedLength + shapeLength) {
                shapeE = 1;
            } else {
                shapeE = ((segmentOb.e * totalModifierLength - addedLength) / shapeLength);
            }
            shapeSegments.push([shapeS, shapeE]);
        }
    }
    if (!shapeSegments.length) {
        shapeSegments.push([0, 0]);
    }
    return shapeSegments;
};

TrimModifier.prototype.releasePathsData = function(pathsData) {
    var i, len = pathsData.length;
    for (i = 0; i < len; i += 1) {
        segments_length_pool.release(pathsData[i]);
    }
    pathsData.length = 0;
    return pathsData;
};

TrimModifier.prototype.processShapes = function(_isFirstFrame) {
    var s, e;
    if (this._mdf || _isFirstFrame) {
        var o = (this.o.v % 360) / 360;
        if (o < 0) {
            o += 1;
        }
        s = (this.s.v > 1 ? 1 : this.s.v < 0 ? 0 : this.s.v) + o;
        e = (this.e.v > 1 ? 1 : this.e.v < 0 ? 0 : this.e.v) + o;
        if (s === e) {

        }
        if (s > e) {
            var _s = s;
            s = e;
            e = _s;
        }
        s = Math.round(s * 10000) * 0.0001;
        e = Math.round(e * 10000) * 0.0001;
        this.sValue = s;
        this.eValue = e;
    } else {
        s = this.sValue;
        e = this.eValue;
    }
    var shapePaths;
    var i, len = this.shapes.length, j, jLen;
    var pathsData, pathData, totalShapeLength, totalModifierLength = 0;

    if (e === s) {
        for (i = 0; i < len; i += 1) {
            this.shapes[i].localShapeCollection.releaseShapes();
            this.shapes[i].shape._mdf = true;
            this.shapes[i].shape.paths = this.shapes[i].localShapeCollection;
        }
    } else if (!((e === 1 && s === 0) || (e===0 && s === 1))){
        var segments = [], shapeData, localShapeCollection;
        for (i = 0; i < len; i += 1) {
            shapeData = this.shapes[i];
            // if shape hasn't changed and trim properties haven't changed, cached previous path can be used
            if (!shapeData.shape._mdf && !this._mdf && !_isFirstFrame && this.m !== 2) {
                shapeData.shape.paths = shapeData.localShapeCollection;
            } else {
                shapePaths = shapeData.shape.paths;
                jLen = shapePaths._length;
                totalShapeLength = 0;
                if (!shapeData.shape._mdf && shapeData.pathsData.length) {
                    totalShapeLength = shapeData.totalShapeLength;
                } else {
                    pathsData = this.releasePathsData(shapeData.pathsData);
                    for (j = 0; j < jLen; j += 1) {
                        pathData = bez.getSegmentsLength(shapePaths.shapes[j]);
                        pathsData.push(pathData);
                        totalShapeLength += pathData.totalLength;
                    }
                    shapeData.totalShapeLength = totalShapeLength;
                    shapeData.pathsData = pathsData;
                }

                totalModifierLength += totalShapeLength;
                shapeData.shape._mdf = true;
            }
        }
        var shapeS = s, shapeE = e, addedLength = 0, edges;
        for (i = len - 1; i >= 0; i -= 1) {
            shapeData = this.shapes[i];
            if (shapeData.shape._mdf) {
                localShapeCollection = shapeData.localShapeCollection;
                localShapeCollection.releaseShapes();
                //if m === 2 means paths are trimmed individually so edges need to be found for this specific shape relative to whoel group
                if (this.m === 2 && len > 1) {
                    edges = this.calculateShapeEdges(s, e, shapeData.totalShapeLength, addedLength, totalModifierLength);
                    addedLength += shapeData.totalShapeLength;
                } else {
                    edges = [[shapeS, shapeE]];
                }
                jLen = edges.length;
                for (j = 0; j < jLen; j += 1) {
                    shapeS = edges[j][0];
                    shapeE = edges[j][1];
                    segments.length = 0;
                    if (shapeE <= 1) {
                        segments.push({
                            s:shapeData.totalShapeLength * shapeS,
                            e:shapeData.totalShapeLength * shapeE
                        });
                    } else if (shapeS >= 1) {
                        segments.push({
                            s:shapeData.totalShapeLength * (shapeS - 1),
                            e:shapeData.totalShapeLength * (shapeE - 1)
                        });
                    } else {
                        segments.push({
                            s:shapeData.totalShapeLength * shapeS,
                            e:shapeData.totalShapeLength
                        });
                        segments.push({
                            s:0,
                            e:shapeData.totalShapeLength * (shapeE - 1)
                        });
                    }
                    var newShapesData = this.addShapes(shapeData,segments[0]);
                    if (segments[0].s !== segments[0].e) {
                        if (segments.length > 1) {
                            var lastShapeInCollection = shapeData.shape.paths.shapes[shapeData.shape.paths._length - 1];
                            if (lastShapeInCollection.c) {
                                var lastShape = newShapesData.pop();
                                this.addPaths(newShapesData, localShapeCollection);
                                newShapesData = this.addShapes(shapeData, segments[1], lastShape);
                            } else {
                                this.addPaths(newShapesData, localShapeCollection);
                                newShapesData = this.addShapes(shapeData, segments[1]);
                            }
                        } 
                        this.addPaths(newShapesData, localShapeCollection);
                    }
                    
                }
                shapeData.shape.paths = localShapeCollection;
            }
        }
    } else if (this._mdf) {
        for (i = 0; i < len; i += 1) {
            //Releasign Trim Cached paths data when no trim applied in case shapes are modified inbetween.
            //Don't remove this even if it's losing cached info.
            this.shapes[i].pathsData.length = 0;
            this.shapes[i].shape._mdf = true;
        }
    }
};

TrimModifier.prototype.addPaths = function(newPaths, localShapeCollection) {
    var i, len = newPaths.length;
    for (i = 0; i < len; i += 1) {
        localShapeCollection.addShape(newPaths[i]);
    }
};

TrimModifier.prototype.addSegment = function(pt1, pt2, pt3, pt4, shapePath, pos, newShape) {
    shapePath.setXYAt(pt2[0], pt2[1], 'o', pos);
    shapePath.setXYAt(pt3[0], pt3[1], 'i', pos + 1);
    if(newShape){
        shapePath.setXYAt(pt1[0], pt1[1], 'v', pos);
    }
    shapePath.setXYAt(pt4[0], pt4[1], 'v', pos + 1);
};

TrimModifier.prototype.addSegmentFromArray = function(points, shapePath, pos, newShape) {
    shapePath.setXYAt(points[1], points[5], 'o', pos);
    shapePath.setXYAt(points[2], points[6], 'i', pos + 1);
    if(newShape){
        shapePath.setXYAt(points[0], points[4], 'v', pos);
    }
    shapePath.setXYAt(points[3], points[7], 'v', pos + 1);
};

TrimModifier.prototype.addShapes = function(shapeData, shapeSegment, shapePath) {
    var pathsData = shapeData.pathsData;
    var shapePaths = shapeData.shape.paths.shapes;
    var i, len = shapeData.shape.paths._length, j, jLen;
    var addedLength = 0;
    var currentLengthData,segmentCount;
    var lengths;
    var segment;
    var shapes = [];
    var initPos;
    var newShape = true;
    if (!shapePath) {
        shapePath = shape_pool.newElement();
        segmentCount = 0;
        initPos = 0;
    } else {
        segmentCount = shapePath._length;
        initPos = shapePath._length;
    }
    shapes.push(shapePath);
    for (i = 0; i < len; i += 1) {
        lengths = pathsData[i].lengths;
        shapePath.c = shapePaths[i].c;
        jLen = shapePaths[i].c ? lengths.length : lengths.length + 1;
        for (j = 1; j < jLen; j +=1) {
            currentLengthData = lengths[j-1];
            if (addedLength + currentLengthData.addedLength < shapeSegment.s) {
                addedLength += currentLengthData.addedLength;
                shapePath.c = false;
            } else if(addedLength > shapeSegment.e) {
                shapePath.c = false;
                break;
            } else {
                if (shapeSegment.s <= addedLength && shapeSegment.e >= addedLength + currentLengthData.addedLength) {
                    this.addSegment(shapePaths[i].v[j - 1], shapePaths[i].o[j - 1], shapePaths[i].i[j], shapePaths[i].v[j], shapePath, segmentCount, newShape);
                    newShape = false;
                } else {
                    segment = bez.getNewSegment(shapePaths[i].v[j - 1], shapePaths[i].v[j], shapePaths[i].o[j - 1], shapePaths[i].i[j], (shapeSegment.s - addedLength)/currentLengthData.addedLength,(shapeSegment.e - addedLength)/currentLengthData.addedLength, lengths[j-1]);
                    this.addSegmentFromArray(segment, shapePath, segmentCount, newShape);
                    // this.addSegment(segment.pt1, segment.pt3, segment.pt4, segment.pt2, shapePath, segmentCount, newShape);
                    newShape = false;
                    shapePath.c = false;
                }
                addedLength += currentLengthData.addedLength;
                segmentCount += 1;
            }
        }
        if (shapePaths[i].c && lengths.length) {
            currentLengthData = lengths[j - 1];
            if (addedLength <= shapeSegment.e) {
                var segmentLength = lengths[j - 1].addedLength;
                if (shapeSegment.s <= addedLength && shapeSegment.e >= addedLength + segmentLength) {
                    this.addSegment(shapePaths[i].v[j - 1], shapePaths[i].o[j - 1], shapePaths[i].i[0], shapePaths[i].v[0], shapePath, segmentCount, newShape);
                    newShape = false;
                } else {
                    segment = bez.getNewSegment(shapePaths[i].v[j - 1], shapePaths[i].v[0], shapePaths[i].o[j - 1], shapePaths[i].i[0], (shapeSegment.s - addedLength) / segmentLength, (shapeSegment.e - addedLength) / segmentLength, lengths[j - 1]);
                    this.addSegmentFromArray(segment, shapePath, segmentCount, newShape);
                    // this.addSegment(segment.pt1, segment.pt3, segment.pt4, segment.pt2, shapePath, segmentCount, newShape);
                    newShape = false;
                    shapePath.c = false;
                }
            } else {
                shapePath.c = false;
            }
            addedLength += currentLengthData.addedLength;
            segmentCount += 1;
        }
        if (shapePath._length) {
            shapePath.setXYAt(shapePath.v[initPos][0], shapePath.v[initPos][1], 'i', initPos);
            shapePath.setXYAt(shapePath.v[shapePath._length - 1][0], shapePath.v[shapePath._length - 1][1],'o', shapePath._length - 1);
        }
        if (addedLength > shapeSegment.e) {
            break;
        }
        if (i < len - 1) {
            shapePath = shape_pool.newElement();
            newShape = true;
            shapes.push(shapePath);
            segmentCount = 0;
        }
    }
    return shapes;
};


ShapeModifiers.registerModifier('tm', TrimModifier);
function RoundCornersModifier(){}
extendPrototype([ShapeModifier],RoundCornersModifier);
RoundCornersModifier.prototype.initModifierProperties = function(elem,data){
    this.getValue = this.processKeys;
    this.rd = PropertyFactory.getProp(elem,data.r,0,null,this);
    this._isAnimated = !!this.rd.effectsSequence.length;
};

RoundCornersModifier.prototype.processPath = function(path, round){
    var cloned_path = shape_pool.newElement();
    cloned_path.c = path.c;
    var i, len = path._length;
    var currentV,currentI,currentO,closerV, newV,newO,newI,distance,newPosPerc,index = 0;
    var vX,vY,oX,oY,iX,iY;
    for(i=0;i<len;i+=1){
        currentV = path.v[i];
        currentO = path.o[i];
        currentI = path.i[i];
        if(currentV[0]===currentO[0] && currentV[1]===currentO[1] && currentV[0]===currentI[0] && currentV[1]===currentI[1]){
            if((i===0 || i === len - 1) && !path.c){
                cloned_path.setTripleAt(currentV[0],currentV[1],currentO[0],currentO[1],currentI[0],currentI[1],index);
                /*cloned_path.v[index] = currentV;
                cloned_path.o[index] = currentO;
                cloned_path.i[index] = currentI;*/
                index += 1;
            } else {
                if(i===0){
                    closerV = path.v[len-1];
                } else {
                    closerV = path.v[i-1];
                }
                distance = Math.sqrt(Math.pow(currentV[0]-closerV[0],2)+Math.pow(currentV[1]-closerV[1],2));
                newPosPerc = distance ? Math.min(distance/2,round)/distance : 0;
                vX = iX = currentV[0]+(closerV[0]-currentV[0])*newPosPerc;
                vY = iY = currentV[1]-(currentV[1]-closerV[1])*newPosPerc;
                oX = vX-(vX-currentV[0])*roundCorner;
                oY = vY-(vY-currentV[1])*roundCorner;
                cloned_path.setTripleAt(vX,vY,oX,oY,iX,iY,index);
                index += 1;

                if(i === len - 1){
                    closerV = path.v[0];
                } else {
                    closerV = path.v[i+1];
                }
                distance = Math.sqrt(Math.pow(currentV[0]-closerV[0],2)+Math.pow(currentV[1]-closerV[1],2));
                newPosPerc = distance ? Math.min(distance/2,round)/distance : 0;
                vX = oX = currentV[0]+(closerV[0]-currentV[0])*newPosPerc;
                vY = oY = currentV[1]+(closerV[1]-currentV[1])*newPosPerc;
                iX = vX-(vX-currentV[0])*roundCorner;
                iY = vY-(vY-currentV[1])*roundCorner;
                cloned_path.setTripleAt(vX,vY,oX,oY,iX,iY,index);
                index += 1;
            }
        } else {
            cloned_path.setTripleAt(path.v[i][0],path.v[i][1],path.o[i][0],path.o[i][1],path.i[i][0],path.i[i][1],index);
            index += 1;
        }
    }
    return cloned_path;
};

RoundCornersModifier.prototype.processShapes = function(_isFirstFrame){
    var shapePaths;
    var i, len = this.shapes.length;
    var j, jLen;
    var rd = this.rd.v;

    if(rd !== 0){
        var shapeData, newPaths, localShapeCollection;
        for(i=0;i<len;i+=1){
            shapeData = this.shapes[i];
            newPaths = shapeData.shape.paths;
            localShapeCollection = shapeData.localShapeCollection;
            if(!(!shapeData.shape._mdf && !this._mdf && !_isFirstFrame)){
                localShapeCollection.releaseShapes();
                shapeData.shape._mdf = true;
                shapePaths = shapeData.shape.paths.shapes;
                jLen = shapeData.shape.paths._length;
                for(j=0;j<jLen;j+=1){
                    localShapeCollection.addShape(this.processPath(shapePaths[j],rd));
                }
            }
            shapeData.shape.paths = shapeData.localShapeCollection;
        }

    }
    if(!this.dynamicProperties.length){
        this._mdf = false;
    }
};

ShapeModifiers.registerModifier('rd',RoundCornersModifier);
function RepeaterModifier(){}
extendPrototype([ShapeModifier], RepeaterModifier);

RepeaterModifier.prototype.initModifierProperties = function(elem,data){
    this.getValue = this.processKeys;
    this.c = PropertyFactory.getProp(elem,data.c,0,null,this);
    this.o = PropertyFactory.getProp(elem,data.o,0,null,this);
    this.tr = TransformPropertyFactory.getTransformProperty(elem,data.tr,this);
    this.so = PropertyFactory.getProp(elem,data.tr.so,0,0.01,this);
    this.eo = PropertyFactory.getProp(elem,data.tr.eo,0,0.01,this);
    this.data = data;
    if(!this.dynamicProperties.length){
        this.getValue(true);
    }
    this._isAnimated = !!this.dynamicProperties.length;
    this.pMatrix = new Matrix();
    this.rMatrix = new Matrix();
    this.sMatrix = new Matrix();
    this.tMatrix = new Matrix();
    this.matrix = new Matrix();
};

RepeaterModifier.prototype.applyTransforms = function(pMatrix, rMatrix, sMatrix, transform, perc, inv){
    var dir = inv ? -1 : 1;
    var scaleX = transform.s.v[0] + (1 - transform.s.v[0]) * (1 - perc);
    var scaleY = transform.s.v[1] + (1 - transform.s.v[1]) * (1 - perc);
    pMatrix.translate(transform.p.v[0] * dir * perc, transform.p.v[1] * dir * perc, transform.p.v[2]);
    rMatrix.translate(-transform.a.v[0], -transform.a.v[1], transform.a.v[2]);
    rMatrix.rotate(-transform.r.v * dir * perc);
    rMatrix.translate(transform.a.v[0], transform.a.v[1], transform.a.v[2]);
    sMatrix.translate(-transform.a.v[0], -transform.a.v[1], transform.a.v[2]);
    sMatrix.scale(inv ? 1/scaleX : scaleX, inv ? 1/scaleY : scaleY);
    sMatrix.translate(transform.a.v[0], transform.a.v[1], transform.a.v[2]);
};

RepeaterModifier.prototype.init = function(elem, arr, pos, elemsData) {
    this.elem = elem;
    this.arr = arr;
    this.pos = pos;
    this.elemsData = elemsData;
    this._currentCopies = 0;
    this._elements = [];
    this._groups = [];
    this.frameId = -1;
    this.initDynamicPropertyContainer(elem);
    this.initModifierProperties(elem,arr[pos]);
    var cont = 0;
    while(pos>0){
        pos -= 1;
        //this._elements.unshift(arr.splice(pos,1)[0]);
        this._elements.unshift(arr[pos]);
        cont += 1;
    }
    if(this.dynamicProperties.length){
        this.k = true;
    }else{
        this.getValue(true);
    }
};

RepeaterModifier.prototype.resetElements = function(elements){
    var i, len = elements.length;
    for(i = 0; i < len; i += 1) {
        elements[i]._processed = false;
        if(elements[i].ty === 'gr'){
            this.resetElements(elements[i].it);
        }
    }
};

RepeaterModifier.prototype.cloneElements = function(elements){
    var i, len = elements.length;
    var newElements = JSON.parse(JSON.stringify(elements));
    this.resetElements(newElements);
    return newElements;
};

RepeaterModifier.prototype.changeGroupRender = function(elements, renderFlag) {
    var i, len = elements.length;
    for(i = 0; i < len; i += 1) {
        elements[i]._render = renderFlag;
        if(elements[i].ty === 'gr') {
            this.changeGroupRender(elements[i].it, renderFlag);
        }
    }
};

RepeaterModifier.prototype.processShapes = function(_isFirstFrame) {
    var items, itemsTransform, i, dir, cont;
    if(this._mdf || _isFirstFrame){
        var copies = Math.ceil(this.c.v);
        if(this._groups.length < copies){
            while(this._groups.length < copies){
                var group = {
                    it:this.cloneElements(this._elements),
                    ty:'gr'
                };
                group.it.push({"a":{"a":0,"ix":1,"k":[0,0]},"nm":"Transform","o":{"a":0,"ix":7,"k":100},"p":{"a":0,"ix":2,"k":[0,0]},"r":{"a":1,"ix":6,"k":[{s:0,e:0,t:0},{s:0,e:0,t:1}]},"s":{"a":0,"ix":3,"k":[100,100]},"sa":{"a":0,"ix":5,"k":0},"sk":{"a":0,"ix":4,"k":0},"ty":"tr"});
                
                this.arr.splice(0,0,group);
                this._groups.splice(0,0,group);
                this._currentCopies += 1;
            }
            this.elem.reloadShapes();
        }
        cont = 0;
        var renderFlag;
        for(i = 0; i  <= this._groups.length - 1; i += 1){
            renderFlag = cont < copies;
            this._groups[i]._render = renderFlag;
            this.changeGroupRender(this._groups[i].it, renderFlag);
            cont += 1;
        }
        
        this._currentCopies = copies;
        ////

        var offset = this.o.v;
        var offsetModulo = offset%1;
        var roundOffset = offset > 0 ? Math.floor(offset) : Math.ceil(offset);
        var k;
        var tMat = this.tr.v.props;
        var pProps = this.pMatrix.props;
        var rProps = this.rMatrix.props;
        var sProps = this.sMatrix.props;
        this.pMatrix.reset();
        this.rMatrix.reset();
        this.sMatrix.reset();
        this.tMatrix.reset();
        this.matrix.reset();
        var iteration = 0;

        if(offset > 0) {
            while(iteration<roundOffset){
                this.applyTransforms(this.pMatrix, this.rMatrix, this.sMatrix, this.tr, 1, false);
                iteration += 1;
            }
            if(offsetModulo){
                this.applyTransforms(this.pMatrix, this.rMatrix, this.sMatrix, this.tr, offsetModulo, false);
                iteration += offsetModulo;
            }
        } else if(offset < 0) {
            while(iteration>roundOffset){
                this.applyTransforms(this.pMatrix, this.rMatrix, this.sMatrix, this.tr, 1, true);
                iteration -= 1;
            }
            if(offsetModulo){
                this.applyTransforms(this.pMatrix, this.rMatrix, this.sMatrix, this.tr, - offsetModulo, true);
                iteration -= offsetModulo;
            }
        }
        i = this.data.m === 1 ? 0 : this._currentCopies - 1;
        dir = this.data.m === 1 ? 1 : -1;
        cont = this._currentCopies;
        var j, jLen;
        while(cont){
            items = this.elemsData[i].it;
            itemsTransform = items[items.length - 1].transform.mProps.v.props;
            jLen = itemsTransform.length;
            items[items.length - 1].transform.mProps._mdf = true;
            items[items.length - 1].transform.op._mdf = true;
            items[items.length - 1].transform.op.v = this.so.v + (this.eo.v - this.so.v) * (i / (this._currentCopies - 1));
            if(iteration !== 0){
                if((i !== 0 && dir === 1) || (i !== this._currentCopies - 1 && dir === -1)){
                    this.applyTransforms(this.pMatrix, this.rMatrix, this.sMatrix, this.tr, 1, false);
                }
                this.matrix.transform(rProps[0],rProps[1],rProps[2],rProps[3],rProps[4],rProps[5],rProps[6],rProps[7],rProps[8],rProps[9],rProps[10],rProps[11],rProps[12],rProps[13],rProps[14],rProps[15]);
                this.matrix.transform(sProps[0],sProps[1],sProps[2],sProps[3],sProps[4],sProps[5],sProps[6],sProps[7],sProps[8],sProps[9],sProps[10],sProps[11],sProps[12],sProps[13],sProps[14],sProps[15]);
                this.matrix.transform(pProps[0],pProps[1],pProps[2],pProps[3],pProps[4],pProps[5],pProps[6],pProps[7],pProps[8],pProps[9],pProps[10],pProps[11],pProps[12],pProps[13],pProps[14],pProps[15]);
                
                for(j=0;j<jLen;j+=1) {
                    itemsTransform[j] = this.matrix.props[j];
                }
                this.matrix.reset();
            } else {
                this.matrix.reset();
                for(j=0;j<jLen;j+=1) {
                    itemsTransform[j] = this.matrix.props[j];
                }
            }
            iteration += 1;
            cont -= 1;
            i += dir;
        }
    } else {
        cont = this._currentCopies;
        i = 0;
        dir = 1;
        while(cont){
            items = this.elemsData[i].it;
            itemsTransform = items[items.length - 1].transform.mProps.v.props;
            items[items.length - 1].transform.mProps._mdf = false;
            items[items.length - 1].transform.op._mdf = false;
            cont -= 1;
            i += dir;
        }
    }
};

RepeaterModifier.prototype.addShape = function(){};

ShapeModifiers.registerModifier('rp',RepeaterModifier);
function ShapeCollection(){
	this._length = 0;
	this._maxLength = 4;
	this.shapes = createSizedArray(this._maxLength);
}

ShapeCollection.prototype.addShape = function(shapeData){
	if(this._length === this._maxLength){
		this.shapes = this.shapes.concat(createSizedArray(this._maxLength));
		this._maxLength *= 2;
	}
	this.shapes[this._length] = shapeData;
	this._length += 1;
};

ShapeCollection.prototype.releaseShapes = function(){
	var i;
	for(i = 0; i < this._length; i += 1) {
		shape_pool.release(this.shapes[i]);
	}
	this._length = 0;
};
function DashProperty(elem, data, renderer, container) {
    this.elem = elem;
    this.frameId = -1;
    this.dataProps = createSizedArray(data.length);
    this.renderer = renderer;
    this.k = false;
    this.dashStr = '';
    this.dashArray = createTypedArray('float32',  data.length ? data.length - 1 : 0);
    this.dashoffset = createTypedArray('float32',  1);
    this.initDynamicPropertyContainer(container);
    var i, len = data.length || 0, prop;
    for(i = 0; i < len; i += 1) {
        prop = PropertyFactory.getProp(elem,data[i].v,0, 0, this);
        this.k = prop.k || this.k;
        this.dataProps[i] = {n:data[i].n,p:prop};
    }
    if(!this.k){
        this.getValue(true);
    }
    this._isAnimated = this.k;
}

DashProperty.prototype.getValue = function(forceRender) {
    if(this.elem.globalData.frameId === this.frameId && !forceRender){
        return;
    }
    this.frameId = this.elem.globalData.frameId;
    this.iterateDynamicProperties();
    this._mdf = this._mdf || forceRender;
    if (this._mdf) {
        var i = 0, len = this.dataProps.length;
        if(this.renderer === 'svg') {
            this.dashStr = '';
        }
        for(i=0;i<len;i+=1){
            if(this.dataProps[i].n != 'o'){
                if(this.renderer === 'svg') {
                    this.dashStr += ' ' + this.dataProps[i].p.v;
                }else{
                    this.dashArray[i] = this.dataProps[i].p.v;
                }
            }else{
                this.dashoffset[0] = this.dataProps[i].p.v;
            }
        }
    }
};
extendPrototype([DynamicPropertyContainer], DashProperty);
function GradientProperty(elem,data,container){
    this.data = data;
    this.c = createTypedArray('uint8c', data.p*4);
    var cLength = data.k.k[0].s ? (data.k.k[0].s.length - data.p*4) : data.k.k.length - data.p*4;
    this.o = createTypedArray('float32', cLength);
    this._cmdf = false;
    this._omdf = false;
    this._collapsable = this.checkCollapsable();
    this._hasOpacity = cLength;
    this.initDynamicPropertyContainer(container);
    this.prop = PropertyFactory.getProp(elem,data.k,1,null,this);
    this.k = this.prop.k;
    this.getValue(true);
}

GradientProperty.prototype.comparePoints = function(values, points) {
    var i = 0, len = this.o.length/2, diff;
    while(i < len) {
        diff = Math.abs(values[i*4] - values[points*4 + i*2]);
        if(diff > 0.01){
            return false;
        }
        i += 1;
    }
    return true;
};

GradientProperty.prototype.checkCollapsable = function() {
    if (this.o.length/2 !== this.c.length/4) {
        return false;
    }
    if (this.data.k.k[0].s) {
        var i = 0, len = this.data.k.k.length;
        while (i < len) {
            if (!this.comparePoints(this.data.k.k[i].s, this.data.p)) {
                return false;
            }
            i += 1;
        }
    } else if(!this.comparePoints(this.data.k.k, this.data.p)) {
        return false;
    }
    return true;
};

GradientProperty.prototype.getValue = function(forceRender){
    this.prop.getValue();
    this._mdf = false;
    this._cmdf = false;
    this._omdf = false;
    if(this.prop._mdf || forceRender){
        var i, len = this.data.p*4;
        var mult, val;
        for(i=0;i<len;i+=1){
            mult = i%4 === 0 ? 100 : 255;
            val = Math.round(this.prop.v[i]*mult);
            if(this.c[i] !== val){
                this.c[i] = val;
                this._cmdf = !forceRender;
            }
        }
        if(this.o.length){
            len = this.prop.v.length;
            for(i=this.data.p*4;i<len;i+=1){
                mult = i%2 === 0 ? 100 : 1;
                val = i%2 === 0 ?  Math.round(this.prop.v[i]*100):this.prop.v[i];
                if(this.o[i-this.data.p*4] !== val){
                    this.o[i-this.data.p*4] = val;
                    this._omdf = !forceRender;
                }
            }
        }
        this._mdf = !forceRender;
    }
};

extendPrototype([DynamicPropertyContainer], GradientProperty);
var buildShapeString = function(pathNodes, length, closed, mat) {
	if(length === 0) {
            return '';
        }
        var _o = pathNodes.o;
        var _i = pathNodes.i;
        var _v = pathNodes.v;
        var i, shapeString = " M" + mat.applyToPointStringified(_v[0][0], _v[0][1]);
        for(i = 1; i < length; i += 1) {
            shapeString += " C" + mat.applyToPointStringified(_o[i - 1][0], _o[i - 1][1]) + " " + mat.applyToPointStringified(_i[i][0], _i[i][1]) + " " + mat.applyToPointStringified(_v[i][0], _v[i][1]);
        }
        if (closed && length) {
            shapeString += " C" + mat.applyToPointStringified(_o[i - 1][0], _o[i - 1][1]) + " " + mat.applyToPointStringified(_i[0][0], _i[0][1]) + " " + mat.applyToPointStringified(_v[0][0], _v[0][1]);
            shapeString += 'z';
        }
        return shapeString;
}
var ImagePreloader = (function(){

    var proxyImage = (function(){
        var canvas = createTag('canvas');
        canvas.width = 1;
        canvas.height = 1;
        var ctx = canvas.getContext('2d');
        ctx.fillStyle = 'rgba(0,0,0,0)';
        ctx.fillRect(0, 0, 1, 1);
        return canvas;
    }())

    function imageLoaded(){
        this.loadedAssets += 1;
        if(this.loadedAssets === this.totalImages){
            if(this.imagesLoadedCb) {
                this.imagesLoadedCb(null);
            }
        }
    }

    function getAssetsPath(assetData, assetsPath, original_path) {
        var path = '';
        if (assetData.e) {
            path = assetData.p;
        } else if(assetsPath) {
            var imagePath = assetData.p;
            if (imagePath.indexOf('images/') !== -1) {
                imagePath = imagePath.split('/')[1];
            }
            path = assetsPath + imagePath;
        } else {
            path = original_path;
            path += assetData.u ? assetData.u : '';
            path += assetData.p;
        }
        return path;
    }

    function createImageData(assetData) {
        var path = getAssetsPath(assetData, this.assetsPath, this.path);
        var img = createTag('img');
        img.crossOrigin = 'anonymous';
        img.addEventListener('load', this._imageLoaded.bind(this), false);
        img.addEventListener('error', function() {
            ob.img = proxyImage;
            this._imageLoaded();
        }.bind(this), false);
        img.src = path;
        var ob = {
            img: img,
            assetData: assetData
        }
        return ob;
    }

    function loadAssets(assets, cb){
        this.imagesLoadedCb = cb;
        var i, len = assets.length;
        for (i = 0; i < len; i += 1) {
            if(!assets[i].layers){
                this.totalImages += 1;
                this.images.push(this._createImageData(assets[i]));
            }
        }
    }

    function setPath(path){
        this.path = path || '';
    }

    function setAssetsPath(path){
        this.assetsPath = path || '';
    }

    function getImage(assetData) {
        var i = 0, len = this.images.length;
        while (i < len) {
            if (this.images[i].assetData === assetData) {
                return this.images[i].img;
            }
            i += 1;
        }
    }

    function destroy() {
        this.imagesLoadedCb = null;
        this.images.length = 0;
    }

    function loaded() {
        return this.totalImages === this.loadedAssets;
    }

    return function ImagePreloader(){
        this.loadAssets = loadAssets;
        this.setAssetsPath = setAssetsPath;
        this.setPath = setPath;
        this.loaded = loaded;
        this.destroy = destroy;
        this.getImage = getImage;
        this._createImageData = createImageData;
        this._imageLoaded = imageLoaded;
        this.assetsPath = '';
        this.path = '';
        this.totalImages = 0;
        this.loadedAssets = 0;
        this.imagesLoadedCb = null;
        this.images = [];
    };
}());
var featureSupport = (function(){
	var ob = {
		maskType: true
	};
	if (/MSIE 10/i.test(navigator.userAgent) || /MSIE 9/i.test(navigator.userAgent) || /rv:11.0/i.test(navigator.userAgent) || /Edge\/\d./i.test(navigator.userAgent)) {
	   ob.maskType = false;
	}
	return ob;
}());
var filtersFactory = (function(){
	var ob = {};
	ob.createFilter = createFilter;
	ob.createAlphaToLuminanceFilter = createAlphaToLuminanceFilter;

	function createFilter(filId){
        	var fil = createNS('filter');
        	fil.setAttribute('id',filId);
                fil.setAttribute('filterUnits','objectBoundingBox');
                fil.setAttribute('x','0%');
                fil.setAttribute('y','0%');
                fil.setAttribute('width','100%');
                fil.setAttribute('height','100%');
                return fil;
	}

	function createAlphaToLuminanceFilter(){
                var feColorMatrix = createNS('feColorMatrix');
                feColorMatrix.setAttribute('type','matrix');
                feColorMatrix.setAttribute('color-interpolation-filters','sRGB');
                feColorMatrix.setAttribute('values','0 0 0 1 0  0 0 0 1 0  0 0 0 1 0  0 0 0 1 1');
                return feColorMatrix;
	}

	return ob;
}());
var assetLoader = (function(){

	function formatResponse(xhr) {
		if(xhr.response && typeof xhr.response === 'object') {
			return xhr.response;
		} else if(xhr.response && typeof xhr.response === 'string') {
			return JSON.parse(xhr.response);
		} else if(xhr.responseText) {
			return JSON.parse(xhr.responseText);
		}
	}

	function loadAsset(path, callback, errorCallback) {
		var response;
		var xhr = new XMLHttpRequest();
		xhr.open('GET', path, true);
		// set responseType after calling open or IE will break.
		try {
		    // This crashes on Android WebView prior to KitKat
		    xhr.responseType = "json";
		} catch (err) {}
	    xhr.send();
	    xhr.onreadystatechange = function () {
	        if (xhr.readyState == 4) {
	            if(xhr.status == 200){
	            	response = formatResponse(xhr);
	            	callback(response);
	            }else{
	                try{
	            		response = formatResponse(xhr);
	            		callback(response);
	                }catch(err){
	                	if(errorCallback) {
	                		errorCallback(err);
	                	}
	                }
	            }
	        }
	    };
	}
	return {
		load: loadAsset
	}
}())

function TextAnimatorProperty(textData, renderType, elem){
    this._isFirstFrame = true;
	this._hasMaskedPath = false;
	this._frameId = -1;
	this._textData = textData;
	this._renderType = renderType;
    this._elem = elem;
	this._animatorsData = createSizedArray(this._textData.a.length);
	this._pathData = {};
	this._moreOptions = {
		alignment: {}
	};
	this.renderedLetters = [];
    this.lettersChangedFlag = false;
    this.initDynamicPropertyContainer(elem);

}

TextAnimatorProperty.prototype.searchProperties = function(){
    var i, len = this._textData.a.length, animatorProps;
    var getProp = PropertyFactory.getProp;
    for(i=0;i<len;i+=1){
        animatorProps = this._textData.a[i];
        this._animatorsData[i] = new TextAnimatorDataProperty(this._elem, animatorProps, this);
    }
    if(this._textData.p && 'm' in this._textData.p){
        this._pathData = {
            f: getProp(this._elem,this._textData.p.f,0,0,this),
            l: getProp(this._elem,this._textData.p.l,0,0,this),
            r: this._textData.p.r,
            m: this._elem.maskManager.getMaskProperty(this._textData.p.m)
        };
        this._hasMaskedPath = true;
    } else {
        this._hasMaskedPath = false;
    }
    this._moreOptions.alignment = getProp(this._elem,this._textData.m.a,1,0,this);
};

TextAnimatorProperty.prototype.getMeasures = function(documentData, lettersChangedFlag){
    this.lettersChangedFlag = lettersChangedFlag;
    if(!this._mdf && !this._isFirstFrame && !lettersChangedFlag && (!this._hasMaskedPath || !this._pathData.m._mdf)) {
        return;
    }
    this._isFirstFrame = false;
    var alignment = this._moreOptions.alignment.v;
    var animators = this._animatorsData;
    var textData = this._textData;
    var matrixHelper = this.mHelper;
    var renderType = this._renderType;
    var renderedLettersCount = this.renderedLetters.length;
    var data = this.data;
    var xPos,yPos;
    var i, len;
    var letters = documentData.l, pathInfo, currentLength, currentPoint, segmentLength, flag, pointInd, segmentInd, prevPoint, points, segments, partialLength, totalLength, perc, tanAngle, mask;
    if(this._hasMaskedPath) {
        mask = this._pathData.m;
        if(!this._pathData.n || this._pathData._mdf){
            var paths = mask.v;
            if(this._pathData.r){
                paths = paths.reverse();
            }
            // TODO: release bezier data cached from previous pathInfo: this._pathData.pi
            pathInfo = {
                tLength: 0,
                segments: []
            };
            len = paths._length - 1;
            var bezierData;
            totalLength = 0;
            for (i = 0; i < len; i += 1) {
                bezierData = bez.buildBezierData(paths.v[i]
                    , paths.v[i + 1]
                    , [paths.o[i][0] - paths.v[i][0], paths.o[i][1] - paths.v[i][1]]
                    , [paths.i[i + 1][0] - paths.v[i + 1][0], paths.i[i + 1][1] - paths.v[i + 1][1]]);
                pathInfo.tLength += bezierData.segmentLength;
                pathInfo.segments.push(bezierData);
                totalLength += bezierData.segmentLength;
            }
            i = len;
            if (mask.v.c) {
                bezierData = bez.buildBezierData(paths.v[i]
                    , paths.v[0]
                    , [paths.o[i][0] - paths.v[i][0], paths.o[i][1] - paths.v[i][1]]
                    , [paths.i[0][0] - paths.v[0][0], paths.i[0][1] - paths.v[0][1]]);
                pathInfo.tLength += bezierData.segmentLength;
                pathInfo.segments.push(bezierData);
                totalLength += bezierData.segmentLength;
            }
            this._pathData.pi = pathInfo;
        }
        pathInfo = this._pathData.pi;

        currentLength = this._pathData.f.v;
        segmentInd = 0;
        pointInd = 1;
        segmentLength = 0;
        flag = true;
        segments = pathInfo.segments;
        if (currentLength < 0 && mask.v.c) {
            if (pathInfo.tLength < Math.abs(currentLength)) {
                currentLength = -Math.abs(currentLength) % pathInfo.tLength;
            }
            segmentInd = segments.length - 1;
            points = segments[segmentInd].points;
            pointInd = points.length - 1;
            while (currentLength < 0) {
                currentLength += points[pointInd].partialLength;
                pointInd -= 1;
                if (pointInd < 0) {
                    segmentInd -= 1;
                    points = segments[segmentInd].points;
                    pointInd = points.length - 1;
                }
            }

        }
        points = segments[segmentInd].points;
        prevPoint = points[pointInd - 1];
        currentPoint = points[pointInd];
        partialLength = currentPoint.partialLength;
    }


    len = letters.length;
    xPos = 0;
    yPos = 0;
    var yOff = documentData.finalSize * 1.2 * 0.714;
    var firstLine = true;
    var animatorProps, animatorSelector;
    var j, jLen;
    var letterValue;

    jLen = animators.length;
    var lastLetter;

    var mult, ind = -1, offf, xPathPos, yPathPos;
    var initPathPos = currentLength,initSegmentInd = segmentInd, initPointInd = pointInd, currentLine = -1;
    var elemOpacity;
    var sc,sw,fc,k;
    var lineLength = 0;
    var letterSw, letterSc, letterFc, letterM = '', letterP = this.defaultPropsArray, letterO;

    //
    if(documentData.j === 2 || documentData.j === 1) {
        var animatorJustifyOffset = 0;
        var animatorFirstCharOffset = 0;
        var justifyOffsetMult = documentData.j === 2 ? -0.5 : -1;
        var lastIndex = 0;
        var isNewLine = true;

        for (i = 0; i < len; i += 1) {
            if (letters[i].n) {
                if(animatorJustifyOffset) {
                    animatorJustifyOffset += animatorFirstCharOffset;
                }
                while (lastIndex < i) {
                    letters[lastIndex].animatorJustifyOffset = animatorJustifyOffset;
                    lastIndex += 1;
                }
                animatorJustifyOffset = 0;
                isNewLine = true;
            } else {
                for (j = 0; j < jLen; j += 1) {
                    animatorProps = animators[j].a;
                    if (animatorProps.t.propType) {
                        if (isNewLine && documentData.j === 2) {
                            animatorFirstCharOffset += animatorProps.t.v * justifyOffsetMult;
                        }
                        animatorSelector = animators[j].s;
                        mult = animatorSelector.getMult(letters[i].anIndexes[j], textData.a[j].s.totalChars);
                        if (mult.length) {
                            animatorJustifyOffset += animatorProps.t.v*mult[0] * justifyOffsetMult;
                        } else {
                            animatorJustifyOffset += animatorProps.t.v*mult * justifyOffsetMult;
                        }
                    }
                }
                isNewLine = false;
            }
        }
        if(animatorJustifyOffset) {
            animatorJustifyOffset += animatorFirstCharOffset;
        }
        while(lastIndex < i) {
            letters[lastIndex].animatorJustifyOffset = animatorJustifyOffset;
            lastIndex += 1;
        }
    }
    //

    for( i = 0; i < len; i += 1) {

        matrixHelper.reset();
        elemOpacity = 1;
        if(letters[i].n) {
            xPos = 0;
            yPos += documentData.yOffset;
            yPos += firstLine ? 1 : 0;
            currentLength = initPathPos ;
            firstLine = false;
            lineLength = 0;
            if(this._hasMaskedPath) {
                segmentInd = initSegmentInd;
                pointInd = initPointInd;
                points = segments[segmentInd].points;
                prevPoint = points[pointInd - 1];
                currentPoint = points[pointInd];
                partialLength = currentPoint.partialLength;
                segmentLength = 0;
            }
            letterO = letterSw = letterFc = letterM = '';
            letterP = this.defaultPropsArray;
        }else{
            if(this._hasMaskedPath) {
                if(currentLine !== letters[i].line){
                    switch(documentData.j){
                        case 1:
                            currentLength += totalLength - documentData.lineWidths[letters[i].line];
                            break;
                        case 2:
                            currentLength += (totalLength - documentData.lineWidths[letters[i].line])/2;
                            break;
                    }
                    currentLine = letters[i].line;
                }
                if (ind !== letters[i].ind) {
                    if (letters[ind]) {
                        currentLength += letters[ind].extra;
                    }
                    currentLength += letters[i].an / 2;
                    ind = letters[i].ind;
                }
                currentLength += alignment[0] * letters[i].an / 200;
                var animatorOffset = 0;
                for (j = 0; j < jLen; j += 1) {
                    animatorProps = animators[j].a;
                    if (animatorProps.p.propType) {
                        animatorSelector = animators[j].s;
                        mult = animatorSelector.getMult(letters[i].anIndexes[j],textData.a[j].s.totalChars);
                        if(mult.length){
                            animatorOffset += animatorProps.p.v[0] * mult[0];
                        } else{
                            animatorOffset += animatorProps.p.v[0] * mult;
                        }

                    }
                    if (animatorProps.a.propType) {
                        animatorSelector = animators[j].s;
                        mult = animatorSelector.getMult(letters[i].anIndexes[j],textData.a[j].s.totalChars);
                        if(mult.length){
                            animatorOffset += animatorProps.a.v[0] * mult[0];
                        } else{
                            animatorOffset += animatorProps.a.v[0] * mult;
                        }

                    }
                }
                flag = true;
                while (flag) {
                    if (segmentLength + partialLength >= currentLength + animatorOffset || !points) {
                        perc = (currentLength + animatorOffset - segmentLength) / currentPoint.partialLength;
                        xPathPos = prevPoint.point[0] + (currentPoint.point[0] - prevPoint.point[0]) * perc;
                        yPathPos = prevPoint.point[1] + (currentPoint.point[1] - prevPoint.point[1]) * perc;
                        matrixHelper.translate(-alignment[0]*letters[i].an/200, -(alignment[1] * yOff / 100));
                        flag = false;
                    } else if (points) {
                        segmentLength += currentPoint.partialLength;
                        pointInd += 1;
                        if (pointInd >= points.length) {
                            pointInd = 0;
                            segmentInd += 1;
                            if (!segments[segmentInd]) {
                                if (mask.v.c) {
                                    pointInd = 0;
                                    segmentInd = 0;
                                    points = segments[segmentInd].points;
                                } else {
                                    segmentLength -= currentPoint.partialLength;
                                    points = null;
                                }
                            } else {
                                points = segments[segmentInd].points;
                            }
                        }
                        if (points) {
                            prevPoint = currentPoint;
                            currentPoint = points[pointInd];
                            partialLength = currentPoint.partialLength;
                        }
                    }
                }
                offf = letters[i].an / 2 - letters[i].add;
                matrixHelper.translate(-offf, 0, 0);
            } else {
                offf = letters[i].an/2 - letters[i].add;
                matrixHelper.translate(-offf,0,0);

                // Grouping alignment
                matrixHelper.translate(-alignment[0]*letters[i].an/200, -alignment[1]*yOff/100, 0);
            }

            lineLength += letters[i].l/2;
            for(j=0;j<jLen;j+=1){
                animatorProps = animators[j].a;
                if (animatorProps.t.propType) {
                    animatorSelector = animators[j].s;
                    mult = animatorSelector.getMult(letters[i].anIndexes[j],textData.a[j].s.totalChars);
                    //This condition is to prevent applying tracking to first character in each line. Might be better to use a boolean "isNewLine"
                    if(xPos !== 0 || documentData.j !== 0) {
                        if(this._hasMaskedPath) {
                            if(mult.length) {
                                currentLength += animatorProps.t.v*mult[0];
                            } else {
                                currentLength += animatorProps.t.v*mult;
                            }
                        }else{
                            if(mult.length) {
                                xPos += animatorProps.t.v*mult[0];
                            } else {
                                xPos += animatorProps.t.v*mult;
                            }
                        }
                    }
                }
            }
            lineLength += letters[i].l/2;
            if(documentData.strokeWidthAnim) {
                sw = documentData.sw || 0;
            }
            if(documentData.strokeColorAnim) {
                if(documentData.sc){
                    sc = [documentData.sc[0], documentData.sc[1], documentData.sc[2]];
                }else{
                    sc = [0,0,0];
                }
            }
            if(documentData.fillColorAnim && documentData.fc) {
                fc = [documentData.fc[0], documentData.fc[1], documentData.fc[2]];
            }
            for(j=0;j<jLen;j+=1){
                animatorProps = animators[j].a;
                if (animatorProps.a.propType) {
                    animatorSelector = animators[j].s;
                    mult = animatorSelector.getMult(letters[i].anIndexes[j],textData.a[j].s.totalChars);

                    if(mult.length){
                        matrixHelper.translate(-animatorProps.a.v[0]*mult[0], -animatorProps.a.v[1]*mult[1], animatorProps.a.v[2]*mult[2]);
                    } else {
                        matrixHelper.translate(-animatorProps.a.v[0]*mult, -animatorProps.a.v[1]*mult, animatorProps.a.v[2]*mult);
                    }
                }
            }
            for(j=0;j<jLen;j+=1){
                animatorProps = animators[j].a;
                if (animatorProps.s.propType) {
                    animatorSelector = animators[j].s;
                    mult = animatorSelector.getMult(letters[i].anIndexes[j],textData.a[j].s.totalChars);
                    if(mult.length){
                        matrixHelper.scale(1+((animatorProps.s.v[0]-1)*mult[0]),1+((animatorProps.s.v[1]-1)*mult[1]),1);
                    } else {
                        matrixHelper.scale(1+((animatorProps.s.v[0]-1)*mult),1+((animatorProps.s.v[1]-1)*mult),1);
                    }
                }
            }
            for(j=0;j<jLen;j+=1) {
                animatorProps = animators[j].a;
                animatorSelector = animators[j].s;
                mult = animatorSelector.getMult(letters[i].anIndexes[j],textData.a[j].s.totalChars);
                if (animatorProps.sk.propType) {
                    if(mult.length) {
                        matrixHelper.skewFromAxis(-animatorProps.sk.v * mult[0], animatorProps.sa.v * mult[1]);
                    } else {
                        matrixHelper.skewFromAxis(-animatorProps.sk.v * mult, animatorProps.sa.v * mult);
                    }
                }
                if (animatorProps.r.propType) {
                    if(mult.length) {
                        matrixHelper.rotateZ(-animatorProps.r.v * mult[2]);
                    } else {
                        matrixHelper.rotateZ(-animatorProps.r.v * mult);
                    }
                }
                if (animatorProps.ry.propType) {

                    if(mult.length) {
                        matrixHelper.rotateY(animatorProps.ry.v*mult[1]);
                    }else{
                        matrixHelper.rotateY(animatorProps.ry.v*mult);
                    }
                }
                if (animatorProps.rx.propType) {
                    if(mult.length) {
                        matrixHelper.rotateX(animatorProps.rx.v*mult[0]);
                    } else {
                        matrixHelper.rotateX(animatorProps.rx.v*mult);
                    }
                }
                if (animatorProps.o.propType) {
                    if(mult.length) {
                        elemOpacity += ((animatorProps.o.v)*mult[0] - elemOpacity)*mult[0];
                    } else {
                        elemOpacity += ((animatorProps.o.v)*mult - elemOpacity)*mult;
                    }
                }
                if (documentData.strokeWidthAnim && animatorProps.sw.propType) {
                    if(mult.length) {
                        sw += animatorProps.sw.v*mult[0];
                    } else {
                        sw += animatorProps.sw.v*mult;
                    }
                }
                if (documentData.strokeColorAnim && animatorProps.sc.propType) {
                    for(k=0;k<3;k+=1){
                        if(mult.length) {
                            sc[k] = sc[k] + (animatorProps.sc.v[k] - sc[k])*mult[0];
                        } else {
                            sc[k] = sc[k] + (animatorProps.sc.v[k] - sc[k])*mult;
                        }
                    }
                }
                if (documentData.fillColorAnim && documentData.fc) {
                    if(animatorProps.fc.propType){
                        for(k=0;k<3;k+=1){
                            if(mult.length) {
                                fc[k] = fc[k] + (animatorProps.fc.v[k] - fc[k])*mult[0];
                            } else {
                                fc[k] = fc[k] + (animatorProps.fc.v[k] - fc[k])*mult;
                            }
                        }
                    }
                    if(animatorProps.fh.propType){
                        if(mult.length) {
                            fc = addHueToRGB(fc,animatorProps.fh.v*mult[0]);
                        } else {
                            fc = addHueToRGB(fc,animatorProps.fh.v*mult);
                        }
                    }
                    if(animatorProps.fs.propType){
                        if(mult.length) {
                            fc = addSaturationToRGB(fc,animatorProps.fs.v*mult[0]);
                        } else {
                            fc = addSaturationToRGB(fc,animatorProps.fs.v*mult);
                        }
                    }
                    if(animatorProps.fb.propType){
                        if(mult.length) {
                            fc = addBrightnessToRGB(fc,animatorProps.fb.v*mult[0]);
                        } else {
                            fc = addBrightnessToRGB(fc,animatorProps.fb.v*mult);
                        }
                    }
                }
            }

            for(j=0;j<jLen;j+=1){
                animatorProps = animators[j].a;

                if (animatorProps.p.propType) {
                    animatorSelector = animators[j].s;
                    mult = animatorSelector.getMult(letters[i].anIndexes[j],textData.a[j].s.totalChars);
                    if(this._hasMaskedPath) {
                        if(mult.length) {
                            matrixHelper.translate(0, animatorProps.p.v[1] * mult[0], -animatorProps.p.v[2] * mult[1]);
                        } else {
                            matrixHelper.translate(0, animatorProps.p.v[1] * mult, -animatorProps.p.v[2] * mult);
                        }
                    }else{
                        if(mult.length) {
                            matrixHelper.translate(animatorProps.p.v[0] * mult[0], animatorProps.p.v[1] * mult[1], -animatorProps.p.v[2] * mult[2]);
                        } else {
                            matrixHelper.translate(animatorProps.p.v[0] * mult, animatorProps.p.v[1] * mult, -animatorProps.p.v[2] * mult);
                        
                        }
                    }
                }
            }
            if(documentData.strokeWidthAnim){
                letterSw = sw < 0 ? 0 : sw;
            }
            if(documentData.strokeColorAnim){
                letterSc = 'rgb('+Math.round(sc[0]*255)+','+Math.round(sc[1]*255)+','+Math.round(sc[2]*255)+')';
            }
            if(documentData.fillColorAnim && documentData.fc){
                letterFc = 'rgb('+Math.round(fc[0]*255)+','+Math.round(fc[1]*255)+','+Math.round(fc[2]*255)+')';
            }

            if(this._hasMaskedPath) {
                matrixHelper.translate(0,-documentData.ls);

                matrixHelper.translate(0, alignment[1]*yOff/100 + yPos,0);
                if (textData.p.p) {
                    tanAngle = (currentPoint.point[1] - prevPoint.point[1]) / (currentPoint.point[0] - prevPoint.point[0]);
                    var rot = Math.atan(tanAngle) * 180 / Math.PI;
                    if (currentPoint.point[0] < prevPoint.point[0]) {
                        rot += 180;
                    }
                    matrixHelper.rotate(-rot * Math.PI / 180);
                }
                matrixHelper.translate(xPathPos, yPathPos, 0);
                currentLength -= alignment[0]*letters[i].an/200;
                if(letters[i+1] && ind !== letters[i+1].ind){
                    currentLength += letters[i].an / 2;
                    currentLength += documentData.tr/1000*documentData.finalSize;
                }
            }else{

                matrixHelper.translate(xPos,yPos,0);

                if(documentData.ps){
                    //matrixHelper.translate(documentData.ps[0],documentData.ps[1],0);
                    matrixHelper.translate(documentData.ps[0],documentData.ps[1] + documentData.ascent,0);
                }
                switch(documentData.j){
                    case 1:
                        matrixHelper.translate(letters[i].animatorJustifyOffset + documentData.justifyOffset + (documentData.boxWidth - documentData.lineWidths[letters[i].line]),0,0);
                        break;
                    case 2:
                        matrixHelper.translate(letters[i].animatorJustifyOffset + documentData.justifyOffset + (documentData.boxWidth - documentData.lineWidths[letters[i].line])/2,0,0);
                        break;
                }
                matrixHelper.translate(0,-documentData.ls);
                matrixHelper.translate(offf,0,0);
                matrixHelper.translate(alignment[0]*letters[i].an/200,alignment[1]*yOff/100,0);
                xPos += letters[i].l + documentData.tr/1000*documentData.finalSize;
            }
            if(renderType === 'html'){
                letterM = matrixHelper.toCSS();
            }else if(renderType === 'svg'){
                letterM = matrixHelper.to2dCSS();
            }else{
                letterP = [matrixHelper.props[0],matrixHelper.props[1],matrixHelper.props[2],matrixHelper.props[3],matrixHelper.props[4],matrixHelper.props[5],matrixHelper.props[6],matrixHelper.props[7],matrixHelper.props[8],matrixHelper.props[9],matrixHelper.props[10],matrixHelper.props[11],matrixHelper.props[12],matrixHelper.props[13],matrixHelper.props[14],matrixHelper.props[15]];
            }
            letterO = elemOpacity;
        }

        if(renderedLettersCount <= i) {
            letterValue = new LetterProps(letterO,letterSw,letterSc,letterFc,letterM,letterP);
            this.renderedLetters.push(letterValue);
            renderedLettersCount += 1;
            this.lettersChangedFlag = true;
        } else {
            letterValue = this.renderedLetters[i];
            this.lettersChangedFlag = letterValue.update(letterO, letterSw, letterSc, letterFc, letterM, letterP) || this.lettersChangedFlag;
        }
    }
};

TextAnimatorProperty.prototype.getValue = function(){
	if(this._elem.globalData.frameId === this._frameId){
        return;
    }
    this._frameId = this._elem.globalData.frameId;
    this.iterateDynamicProperties();
};

TextAnimatorProperty.prototype.mHelper = new Matrix();
TextAnimatorProperty.prototype.defaultPropsArray = [];
extendPrototype([DynamicPropertyContainer], TextAnimatorProperty);
function TextAnimatorDataProperty(elem, animatorProps, container) {
	var defaultData = {propType:false};
	var getProp = PropertyFactory.getProp;
	var textAnimator_animatables = animatorProps.a;
	this.a = {
		r: textAnimator_animatables.r ? getProp(elem, textAnimator_animatables.r, 0, degToRads, container) : defaultData,
		rx: textAnimator_animatables.rx ? getProp(elem, textAnimator_animatables.rx, 0, degToRads, container) : defaultData,
		ry: textAnimator_animatables.ry ? getProp(elem, textAnimator_animatables.ry, 0, degToRads, container) : defaultData,
		sk: textAnimator_animatables.sk ? getProp(elem, textAnimator_animatables.sk, 0, degToRads, container) : defaultData,
		sa: textAnimator_animatables.sa ? getProp(elem, textAnimator_animatables.sa, 0, degToRads, container) : defaultData,
		s: textAnimator_animatables.s ? getProp(elem, textAnimator_animatables.s, 1, 0.01, container) : defaultData,
		a: textAnimator_animatables.a ? getProp(elem, textAnimator_animatables.a, 1, 0, container) : defaultData,
		o: textAnimator_animatables.o ? getProp(elem, textAnimator_animatables.o, 0, 0.01, container) : defaultData,
		p: textAnimator_animatables.p ? getProp(elem,textAnimator_animatables.p, 1, 0, container) : defaultData,
		sw: textAnimator_animatables.sw ? getProp(elem, textAnimator_animatables.sw, 0, 0, container) : defaultData,
		sc: textAnimator_animatables.sc ? getProp(elem, textAnimator_animatables.sc, 1, 0, container) : defaultData,
		fc: textAnimator_animatables.fc ? getProp(elem, textAnimator_animatables.fc, 1, 0, container) : defaultData,
		fh: textAnimator_animatables.fh ? getProp(elem, textAnimator_animatables.fh, 0, 0, container) : defaultData,
		fs: textAnimator_animatables.fs ? getProp(elem, textAnimator_animatables.fs, 0, 0.01, container) : defaultData,
		fb: textAnimator_animatables.fb ? getProp(elem, textAnimator_animatables.fb, 0, 0.01, container) : defaultData,
		t: textAnimator_animatables.t ? getProp(elem, textAnimator_animatables.t, 0, 0, container) : defaultData
	};

	this.s = TextSelectorProp.getTextSelectorProp(elem,animatorProps.s, container);
    this.s.t = animatorProps.s.t;
}
function LetterProps(o, sw, sc, fc, m, p){
    this.o = o;
    this.sw = sw;
    this.sc = sc;
    this.fc = fc;
    this.m = m;
    this.p = p;
    this._mdf = {
    	o: true,
    	sw: !!sw,
    	sc: !!sc,
    	fc: !!fc,
    	m: true,
    	p: true
    };
}

LetterProps.prototype.update = function(o, sw, sc, fc, m, p) {
	this._mdf.o = false;
	this._mdf.sw = false;
	this._mdf.sc = false;
	this._mdf.fc = false;
	this._mdf.m = false;
	this._mdf.p = false;
	var updated = false;

	if(this.o !== o) {
		this.o = o;
		this._mdf.o = true;
		updated = true;
	}
	if(this.sw !== sw) {
		this.sw = sw;
		this._mdf.sw = true;
		updated = true;
	}
	if(this.sc !== sc) {
		this.sc = sc;
		this._mdf.sc = true;
		updated = true;
	}
	if(this.fc !== fc) {
		this.fc = fc;
		this._mdf.fc = true;
		updated = true;
	}
	if(this.m !== m) {
		this.m = m;
		this._mdf.m = true;
		updated = true;
	}
	if(p.length && (this.p[0] !== p[0] || this.p[1] !== p[1] || this.p[4] !== p[4] || this.p[5] !== p[5] || this.p[12] !== p[12] || this.p[13] !== p[13])) {
		this.p = p;
		this._mdf.p = true;
		updated = true;
	}
	return updated;
};
function TextProperty(elem, data){
	this._frameId = initialDefaultFrame;
	this.pv = '';
	this.v = '';
	this.kf = false;
	this._isFirstFrame = true;
	this._mdf = false;
    this.data = data;
	this.elem = elem;
    this.comp = this.elem.comp;
	this.keysIndex = 0;
    this.canResize = false;
    this.minimumFontSize = 1;
    this.effectsSequence = [];
	this.currentData = {
		ascent: 0,
        boxWidth: this.defaultBoxWidth,
        f: '',
        fStyle: '',
        fWeight: '',
        fc: '',
        j: '',
        justifyOffset: '',
        l: [],
        lh: 0,
        lineWidths: [],
        ls: '',
        of: '',
        s: '',
        sc: '',
        sw: 0,
        t: 0,
        tr: 0,
        sz:0,
        ps:null,
        fillColorAnim: false,
        strokeColorAnim: false,
        strokeWidthAnim: false,
        yOffset: 0,
        finalSize:0,
        finalText:[],
        finalLineHeight: 0,
        __complete: false

	};
    this.copyData(this.currentData, this.data.d.k[0].s);

    if(!this.searchProperty()) {
        this.completeTextData(this.currentData);
    }
}

TextProperty.prototype.defaultBoxWidth = [0,0];

TextProperty.prototype.copyData = function(obj, data) {
    for(var s in data) {
        if(data.hasOwnProperty(s)) {
            obj[s] = data[s];
        }
    }
    return obj;
}

TextProperty.prototype.setCurrentData = function(data){
    if(!data.__complete) {
        this.completeTextData(data);
    }
    this.currentData = data;
    this.currentData.boxWidth = this.currentData.boxWidth || this.defaultBoxWidth;
    this._mdf = true;
};

TextProperty.prototype.searchProperty = function() {
    return this.searchKeyframes();
};

TextProperty.prototype.searchKeyframes = function() {
    this.kf = this.data.d.k.length > 1;
    if(this.kf) {
        this.addEffect(this.getKeyframeValue.bind(this));
    }
    return this.kf;
}

TextProperty.prototype.addEffect = function(effectFunction) {
	this.effectsSequence.push(effectFunction);
    this.elem.addDynamicProperty(this);
};

TextProperty.prototype.getValue = function(_finalValue) {
    if((this.elem.globalData.frameId === this.frameId || !this.effectsSequence.length) && !_finalValue) {
        return;
    }
    this.currentData.t = this.data.d.k[this.keysIndex].s.t;
    var currentValue = this.currentData;
    var currentIndex = this.keysIndex;
    if(this.lock) {
        this.setCurrentData(this.currentData);
        return;
    }
    this.lock = true;
    this._mdf = false;
    var multipliedValue;
    var i, len = this.effectsSequence.length;
    var finalValue = _finalValue || this.data.d.k[this.keysIndex].s;
    for(i = 0; i < len; i += 1) {
        //Checking if index changed to prevent creating a new object every time the expression updates.
        if(currentIndex !== this.keysIndex) {
            finalValue = this.effectsSequence[i](finalValue, finalValue.t);
        } else {
            finalValue = this.effectsSequence[i](this.currentData, finalValue.t);
        }
    }
    if(currentValue !== finalValue) {
        this.setCurrentData(finalValue);
    }
    this.pv = this.v = this.currentData;
    this.lock = false;
    this.frameId = this.elem.globalData.frameId;
}

TextProperty.prototype.getKeyframeValue = function() {
    var textKeys = this.data.d.k, textDocumentData;
    var frameNum = this.elem.comp.renderedFrame;
    var i = 0, len = textKeys.length;
    while(i <= len - 1) {
        textDocumentData = textKeys[i].s;
        if(i === len - 1 || textKeys[i+1].t > frameNum){
            break;
        }
        i += 1;
    }
    if(this.keysIndex !== i) {
        this.keysIndex = i;
    }
    return this.data.d.k[this.keysIndex].s;
};

TextProperty.prototype.buildFinalText = function(text) {
    var combinedCharacters = FontManager.getCombinedCharacterCodes();
    var charactersArray = [];
    var i = 0, len = text.length;
    var charCode;
    while (i < len) {
        charCode = text.charCodeAt(i);
        if (combinedCharacters.indexOf(charCode) !== -1) {
            charactersArray[charactersArray.length - 1] += text.charAt(i);
        } else {
            if (charCode >= 0xD800 && charCode <= 0xDBFF) {
                charCode = text.charCodeAt(i + 1);
                if (charCode >= 0xDC00 && charCode <= 0xDFFF) {
                    charactersArray.push(text.substr(i, 2));
                    ++i;
                } else {
                    charactersArray.push(text.charAt(i));
                }
            } else {
                charactersArray.push(text.charAt(i));
            }
        }
        i += 1;
    }
    return charactersArray;
}

TextProperty.prototype.completeTextData = function(documentData) {
    documentData.__complete = true;
    var fontManager = this.elem.globalData.fontManager;
    var data = this.data;
    var letters = [];
    var i, len;
    var newLineFlag, index = 0, val;
    var anchorGrouping = data.m.g;
    var currentSize = 0, currentPos = 0, currentLine = 0, lineWidths = [];
    var lineWidth = 0;
    var maxLineWidth = 0;
    var j, jLen;
    var fontData = fontManager.getFontByName(documentData.f);
    var charData, cLength = 0;
    var styles = fontData.fStyle ? fontData.fStyle.split(' ') : [];

    var fWeight = 'normal', fStyle = 'normal';
    len = styles.length;
    var styleName;
    for(i=0;i<len;i+=1){
        styleName = styles[i].toLowerCase();
        switch(styleName) {
            case 'italic':
            fStyle = 'italic';
            break;
            case 'bold':
            fWeight = '700';
            break;
            case 'black':
            fWeight = '900';
            break;
            case 'medium':
            fWeight = '500';
            break;
            case 'regular':
            case 'normal':
            fWeight = '400';
            break;
            case 'light':
            case 'thin':
            fWeight = '200';
            break;
        }
    }
    documentData.fWeight = fontData.fWeight || fWeight;
    documentData.fStyle = fStyle;
    documentData.finalSize = documentData.s;
    documentData.finalText = this.buildFinalText(documentData.t);
    len = documentData.finalText.length;
    documentData.finalLineHeight = documentData.lh;
    var trackingOffset = documentData.tr/1000*documentData.finalSize;
    var charCode;
    if(documentData.sz){
        var flag = true;
        var boxWidth = documentData.sz[0];
        var boxHeight = documentData.sz[1];
        var currentHeight, finalText;
        while(flag) {
            finalText = this.buildFinalText(documentData.t);
            currentHeight = 0;
            lineWidth = 0;
            len = finalText.length;
            trackingOffset = documentData.tr/1000*documentData.finalSize;
            var lastSpaceIndex = -1;
            for(i=0;i<len;i+=1){
                charCode = finalText[i].charCodeAt(0);
                newLineFlag = false;
                if(finalText[i] === ' '){
                    lastSpaceIndex = i;
                }else if(charCode === 13 || charCode === 3){
                    lineWidth = 0;
                    newLineFlag = true;
                    currentHeight += documentData.finalLineHeight || documentData.finalSize*1.2;
                }
                if(fontManager.chars){
                    charData = fontManager.getCharData(finalText[i], fontData.fStyle, fontData.fFamily);
                    cLength = newLineFlag ? 0 : charData.w*documentData.finalSize/100;
                }else{
                    //tCanvasHelper.font = documentData.s + 'px '+ fontData.fFamily;
                    cLength = fontManager.measureText(finalText[i], documentData.f, documentData.finalSize);
                }
                if(lineWidth + cLength > boxWidth && finalText[i] !== ' '){
                    if(lastSpaceIndex === -1){
                        len += 1;
                    } else {
                        i = lastSpaceIndex;
                    }
                    currentHeight += documentData.finalLineHeight || documentData.finalSize*1.2;
                    finalText.splice(i, lastSpaceIndex === i ? 1 : 0,"\r");
                    //finalText = finalText.substr(0,i) + "\r" + finalText.substr(i === lastSpaceIndex ? i + 1 : i);
                    lastSpaceIndex = -1;
                    lineWidth = 0;
                }else {
                    lineWidth += cLength;
                    lineWidth += trackingOffset;
                }
            }
            currentHeight += fontData.ascent*documentData.finalSize/100;
            if(this.canResize && documentData.finalSize > this.minimumFontSize && boxHeight < currentHeight) {
                documentData.finalSize -= 1;
                documentData.finalLineHeight = documentData.finalSize * documentData.lh / documentData.s;
            } else {
                documentData.finalText = finalText;
                len = documentData.finalText.length;
                flag = false;
            }
        }

    }
    lineWidth = - trackingOffset;
    cLength = 0;
    var uncollapsedSpaces = 0;
    var currentChar;
    for (i = 0;i < len ;i += 1) {
        newLineFlag = false;
        currentChar = documentData.finalText[i];
        charCode = currentChar.charCodeAt(0);
        if (charCode === 13 || charCode === 3) {
            uncollapsedSpaces = 0;
            lineWidths.push(lineWidth);
            maxLineWidth = lineWidth > maxLineWidth ? lineWidth : maxLineWidth;
            lineWidth = - 2 * trackingOffset;
            val = '';
            newLineFlag = true;
            currentLine += 1;
        }else{
            val = currentChar;
        }
        if(fontManager.chars){
            charData = fontManager.getCharData(currentChar, fontData.fStyle, fontManager.getFontByName(documentData.f).fFamily);
            cLength = newLineFlag ? 0 : charData.w*documentData.finalSize/100;
        }else{
            //var charWidth = fontManager.measureText(val, documentData.f, documentData.finalSize);
            //tCanvasHelper.font = documentData.finalSize + 'px '+ fontManager.getFontByName(documentData.f).fFamily;
            cLength = fontManager.measureText(val, documentData.f, documentData.finalSize);
        }

        //
        if(currentChar === ' '){
            uncollapsedSpaces += cLength + trackingOffset;
        } else {
            lineWidth += cLength + trackingOffset + uncollapsedSpaces;
            uncollapsedSpaces = 0;
        }
        letters.push({l:cLength,an:cLength,add:currentSize,n:newLineFlag, anIndexes:[], val: val, line: currentLine, animatorJustifyOffset: 0});
        if(anchorGrouping == 2){
            currentSize += cLength;
            if(val === '' || val === ' ' || i === len - 1){
                if(val === '' || val === ' '){
                    currentSize -= cLength;
                }
                while(currentPos<=i){
                    letters[currentPos].an = currentSize;
                    letters[currentPos].ind = index;
                    letters[currentPos].extra = cLength;
                    currentPos += 1;
                }
                index += 1;
                currentSize = 0;
            }
        }else if(anchorGrouping == 3){
            currentSize += cLength;
            if(val === '' || i === len - 1){
                if(val === ''){
                    currentSize -= cLength;
                }
                while(currentPos<=i){
                    letters[currentPos].an = currentSize;
                    letters[currentPos].ind = index;
                    letters[currentPos].extra = cLength;
                    currentPos += 1;
                }
                currentSize = 0;
                index += 1;
            }
        }else{
            letters[index].ind = index;
            letters[index].extra = 0;
            index += 1;
        }
    }
    documentData.l = letters;
    maxLineWidth = lineWidth > maxLineWidth ? lineWidth : maxLineWidth;
    lineWidths.push(lineWidth);
    if(documentData.sz){
        documentData.boxWidth = documentData.sz[0];
        documentData.justifyOffset = 0;
    }else{
        documentData.boxWidth = maxLineWidth;
        switch(documentData.j){
            case 1:
                documentData.justifyOffset = - documentData.boxWidth;
                break;
            case 2:
                documentData.justifyOffset = - documentData.boxWidth/2;
                break;
            default:
                documentData.justifyOffset = 0;
        }
    }
    documentData.lineWidths = lineWidths;

    var animators = data.a, animatorData, letterData;
    jLen = animators.length;
    var based, ind, indexes = [];
    for(j=0;j<jLen;j+=1){
        animatorData = animators[j];
        if(animatorData.a.sc){
            documentData.strokeColorAnim = true;
        }
        if(animatorData.a.sw){
            documentData.strokeWidthAnim = true;
        }
        if(animatorData.a.fc || animatorData.a.fh || animatorData.a.fs || animatorData.a.fb){
            documentData.fillColorAnim = true;
        }
        ind = 0;
        based = animatorData.s.b;
        for(i=0;i<len;i+=1){
            letterData = letters[i];
            letterData.anIndexes[j] = ind;
            if((based == 1 && letterData.val !== '') || (based == 2 && letterData.val !== '' && letterData.val !== ' ') || (based == 3 && (letterData.n || letterData.val == ' ' || i == len - 1)) || (based == 4 && (letterData.n || i == len - 1))){
                if(animatorData.s.rn === 1){
                    indexes.push(ind);
                }
                ind += 1;
            }
        }
        data.a[j].s.totalChars = ind;
        var currentInd = -1, newInd;
        if(animatorData.s.rn === 1){
            for(i = 0; i < len; i += 1){
                letterData = letters[i];
                if(currentInd != letterData.anIndexes[j]){
                    currentInd = letterData.anIndexes[j];
                    newInd = indexes.splice(Math.floor(Math.random()*indexes.length),1)[0];
                }
                letterData.anIndexes[j] = newInd;
            }
        }
    }
    documentData.yOffset = documentData.finalLineHeight || documentData.finalSize*1.2;
    documentData.ls = documentData.ls || 0;
    documentData.ascent = fontData.ascent*documentData.finalSize/100;
};

TextProperty.prototype.updateDocumentData = function(newData, index) {
	index = index === undefined ? this.keysIndex : index;
    var dData = this.copyData({}, this.data.d.k[index].s);
    dData = this.copyData(dData, newData);
    this.data.d.k[index].s = dData;
    this.recalculate(index);
    this.elem.addDynamicProperty(this);
};

TextProperty.prototype.recalculate = function(index) {
    var dData = this.data.d.k[index].s;
    dData.__complete = false;
    this.keysIndex = 0;
    this._isFirstFrame = true;
    this.getValue(dData);
}

TextProperty.prototype.canResizeFont = function(_canResize) {
    this.canResize = _canResize;
    this.recalculate(this.keysIndex);
    this.elem.addDynamicProperty(this);
};

TextProperty.prototype.setMinimumFontSize = function(_fontValue) {
    this.minimumFontSize = Math.floor(_fontValue) || 1;
    this.recalculate(this.keysIndex);
    this.elem.addDynamicProperty(this);
};

var TextSelectorProp = (function(){
    var max = Math.max;
    var min = Math.min;
    var floor = Math.floor;

    function TextSelectorProp(elem,data){
        this._currentTextLength = -1;
        this.k = false;
        this.data = data;
        this.elem = elem;
        this.comp = elem.comp;
        this.finalS = 0;
        this.finalE = 0;
        this.initDynamicPropertyContainer(elem);
        this.s = PropertyFactory.getProp(elem,data.s || {k:0},0,0,this);
        if('e' in data){
            this.e = PropertyFactory.getProp(elem,data.e,0,0,this);
        }else{
            this.e = {v:100};
        }
        this.o = PropertyFactory.getProp(elem,data.o || {k:0},0,0,this);
        this.xe = PropertyFactory.getProp(elem,data.xe || {k:0},0,0,this);
        this.ne = PropertyFactory.getProp(elem,data.ne || {k:0},0,0,this);
        this.a = PropertyFactory.getProp(elem,data.a,0,0.01,this);
        if(!this.dynamicProperties.length){
            this.getValue();
        }
    }

    TextSelectorProp.prototype = {
        getMult: function(ind) {
            if(this._currentTextLength !== this.elem.textProperty.currentData.l.length) {
                this.getValue();
            }
            //var easer = bez.getEasingCurve(this.ne.v/100,0,1-this.xe.v/100,1);
            var x1 = 0;
            var y1 = 0;
            var x2 = 1;
            var y2 = 1;
            if(this.ne.v > 0) {
                x1 = this.ne.v / 100.0;
            }
            else {
                y1 = -this.ne.v / 100.0;
            }
            if(this.xe.v > 0) {
                x2 = 1.0 - this.xe.v / 100.0;
            }
            else {
                y2 = 1.0 + this.xe.v / 100.0;
            }
            var easer = BezierFactory.getBezierEasing(x1, y1, x2, y2).get;

            var mult = 0;
            var s = this.finalS;
            var e = this.finalE;
            var type = this.data.sh;
            if (type === 2){
                if (e === s) {
                    mult = ind >= e ? 1 : 0;
                } else {
                    mult = max(0, min(0.5 / (e - s) + (ind - s) / (e - s), 1));
                }
                mult = easer(mult);
            } else if(type === 3) {
                if (e === s) {
                    mult = ind >= e ? 0 : 1;
                }else{
                    mult = 1 - max(0, min(0.5 / (e - s) + (ind - s) / (e - s),1));
                }

                mult = easer(mult);
            } else if (type === 4) {
                if (e === s) {
                    mult = 0;
                } else {
                    mult = max(0, min(0.5 / (e - s) + (ind - s) / (e - s), 1));
                    if (mult < 0.5) {
                        mult *= 2;
                    } else {
                        mult = 1 - 2 * (mult - 0.5);
                    }
                }
                mult = easer(mult);
            } else if (type === 5) {
                if (e === s){
                    mult = 0;
                } else {
                    var tot = e - s;
                    /*ind += 0.5;
                    mult = -4/(tot*tot)*(ind*ind)+(4/tot)*ind;*/
                    ind = min(max(0, ind + 0.5 - s), e - s);
                    var x = -tot/2+ind;
                    var a = tot/2;
                    mult = Math.sqrt(1 - (x * x) / (a * a));
                }
                mult = easer(mult);
            } else if (type === 6) {
                if (e === s){
                    mult = 0;
                } else {
                    ind = min(max(0, ind + 0.5 - s), e - s);
                    mult = (1 + (Math.cos((Math.PI + Math.PI * 2 * (ind) / (e - s))))) / 2;
                }
                mult = easer(mult);
            } else {
                if (ind >= floor(s)) {
                    if (ind - s < 0) {
                        mult = max(0, min(min(e, 1) - (s - ind), 1));
                    } else {
                        mult = max(0, min(e - ind, 1));
                    }
                }
                mult = easer(mult);
            }
            return mult*this.a.v;
        },
        getValue: function(newCharsFlag) {
            this.iterateDynamicProperties();
            this._mdf = newCharsFlag || this._mdf;
            this._currentTextLength = this.elem.textProperty.currentData.l.length || 0;
            if(newCharsFlag && this.data.r === 2) {
                this.e.v = this._currentTextLength;
            }
            var divisor = this.data.r === 2 ? 1 : 100 / this.data.totalChars;
            var o = this.o.v/divisor;
            var s = this.s.v/divisor + o;
            var e = (this.e.v/divisor) + o;
            if(s>e){
                var _s = s;
                s = e;
                e = _s;
            }
            this.finalS = s;
            this.finalE = e;
        }
    }
    extendPrototype([DynamicPropertyContainer], TextSelectorProp);

    function getTextSelectorProp(elem, data,arr) {
        return new TextSelectorProp(elem, data, arr);
    }

    return {
        getTextSelectorProp: getTextSelectorProp
    };
}());

    
var pool_factory = (function() {
	return function(initialLength, _create, _release, _clone) {

		var _length = 0;
		var _maxLength = initialLength;
		var pool = createSizedArray(_maxLength);

		var ob = {
			newElement: newElement,
			release: release
		};

		function newElement(){
			var element;
			if(_length){
				_length -= 1;
				element = pool[_length];
			} else {
				element = _create();
			}
			return element;
		}

		function release(element) {
			if(_length === _maxLength) {
				pool = pooling.double(pool);
				_maxLength = _maxLength*2;
			}
			if (_release) {
				_release(element);
			}
			pool[_length] = element;
			_length += 1;
		}

		function clone() {
			var clonedElement = newElement();
			return _clone(clonedElement);
		}

		return ob;
	};
}());

var pooling = (function(){

	function double(arr){
		return arr.concat(createSizedArray(arr.length));
	}

	return {
		double: double
	};
}());
var point_pool = (function(){

	function create() {
		return createTypedArray('float32', 2);
	}
	return pool_factory(8, create);
}());
var shape_pool = (function(){

	function create() {
		return new ShapePath();
	}

	function release(shapePath) {
		var len = shapePath._length, i;
		for(i = 0; i < len; i += 1) {
			point_pool.release(shapePath.v[i]);
			point_pool.release(shapePath.i[i]);
			point_pool.release(shapePath.o[i]);
			shapePath.v[i] = null;
			shapePath.i[i] = null;
			shapePath.o[i] = null;
		}
		shapePath._length = 0;
		shapePath.c = false;
	}

	function clone(shape) {
		var cloned = factory.newElement();
		var i, len = shape._length === undefined ? shape.v.length : shape._length;
		cloned.setLength(len);
		cloned.c = shape.c;
		var pt;
		
		for(i = 0; i < len; i += 1) {
			cloned.setTripleAt(shape.v[i][0],shape.v[i][1],shape.o[i][0],shape.o[i][1],shape.i[i][0],shape.i[i][1], i);
		}
		return cloned;
	}

	var factory = pool_factory(4, create, release);
	factory.clone = clone;

	return factory;
}());
var shapeCollection_pool = (function(){
	var ob = {
		newShapeCollection: newShapeCollection,
		release: release
	};

	var _length = 0;
	var _maxLength = 4;
	var pool = createSizedArray(_maxLength);

	function newShapeCollection(){
		var shapeCollection;
		if(_length){
			_length -= 1;
			shapeCollection = pool[_length];
		} else {
			shapeCollection = new ShapeCollection();
		}
		return shapeCollection;
	}

	function release(shapeCollection) {
		var i, len = shapeCollection._length;
		for(i = 0; i < len; i += 1) {
			shape_pool.release(shapeCollection.shapes[i]);
		}
		shapeCollection._length = 0;

		if(_length === _maxLength) {
			pool = pooling.double(pool);
			_maxLength = _maxLength*2;
		}
		pool[_length] = shapeCollection;
		_length += 1;
	}

	return ob;
}());
var segments_length_pool = (function(){

	function create() {
		return {
			lengths: [],
			totalLength: 0
		};
	}

	function release(element) {
		var i, len = element.lengths.length;
		for(i=0;i<len;i+=1) {
			bezier_length_pool.release(element.lengths[i]);
		}
		element.lengths.length = 0;
	}

	return pool_factory(8, create, release);
}());
var bezier_length_pool = (function(){

	function create() {
		return {
            addedLength: 0,
            percents: createTypedArray('float32', defaultCurveSegments),
            lengths: createTypedArray('float32', defaultCurveSegments),
        };
	}
	return pool_factory(8, create);
}());
function BaseRenderer(){}
BaseRenderer.prototype.checkLayers = function(num){
    var i, len = this.layers.length, data;
    this.completeLayers = true;
    for (i = len - 1; i >= 0; i--) {
        if (!this.elements[i]) {
            data = this.layers[i];
            if(data.ip - data.st <= (num - this.layers[i].st) && data.op - data.st > (num - this.layers[i].st))
            {
                this.buildItem(i);
            }
        }
        this.completeLayers = this.elements[i] ? this.completeLayers:false;
    }
    this.checkPendingElements();
};

BaseRenderer.prototype.createItem = function(layer){
    switch(layer.ty){
        case 2:
            return this.createImage(layer);
        case 0:
            return this.createComp(layer);
        case 1:
            return this.createSolid(layer);
        case 3:
            return this.createNull(layer);
        case 4:
            return this.createShape(layer);
        case 5:
            return this.createText(layer);
        case 13:
            return this.createCamera(layer);
    }
    return this.createNull(layer);
};

BaseRenderer.prototype.createCamera = function(){
    throw new Error('You\'re using a 3d camera. Try the html renderer.');
};

BaseRenderer.prototype.buildAllItems = function(){
    var i, len = this.layers.length;
    for(i=0;i<len;i+=1){
        this.buildItem(i);
    }
    this.checkPendingElements();
};

BaseRenderer.prototype.includeLayers = function(newLayers){
    this.completeLayers = false;
    var i, len = newLayers.length;
    var j, jLen = this.layers.length;
    for(i=0;i<len;i+=1){
        j = 0;
        while(j<jLen){
            if(this.layers[j].id == newLayers[i].id){
                this.layers[j] = newLayers[i];
                break;
            }
            j += 1;
        }
    }
};

BaseRenderer.prototype.setProjectInterface = function(pInterface){
    this.globalData.projectInterface = pInterface;
};

BaseRenderer.prototype.initItems = function(){
    if(!this.globalData.progressiveLoad){
        this.buildAllItems();
    }
};
BaseRenderer.prototype.buildElementParenting = function(element, parentName, hierarchy) {
    var elements = this.elements;
    var layers = this.layers;
    var i=0, len = layers.length;
    while (i < len) {
        if (layers[i].ind == parentName) {
            if (!elements[i] || elements[i] === true) {
                this.buildItem(i);
                this.addPendingElement(element);
            } else {
                hierarchy.push(elements[i]);
                elements[i].setAsParent();
                if(layers[i].parent !== undefined) {
                    this.buildElementParenting(element, layers[i].parent, hierarchy);
                } else {
                    element.setHierarchy(hierarchy);
                }
            }
        }
        i += 1;
    }
};

BaseRenderer.prototype.addPendingElement = function(element){
    this.pendingElements.push(element);
};

BaseRenderer.prototype.searchExtraCompositions = function(assets){
    var i, len = assets.length;
    for(i=0;i<len;i+=1){
        if(assets[i].xt){
            var comp = this.createComp(assets[i]);
            comp.initExpressions();
            this.globalData.projectInterface.registerComposition(comp);
        }
    }
};

BaseRenderer.prototype.setupGlobalData = function(animData, fontsContainer) {
    this.globalData.fontManager = new FontManager();
    this.globalData.fontManager.addChars(animData.chars);
    this.globalData.fontManager.addFonts(animData.fonts, fontsContainer);
    this.globalData.getAssetData = this.animationItem.getAssetData.bind(this.animationItem);
    this.globalData.getAssetsPath = this.animationItem.getAssetsPath.bind(this.animationItem);
    this.globalData.imageLoader = this.animationItem.imagePreloader;
    this.globalData.frameId = 0;
    this.globalData.frameRate = animData.fr;
    this.globalData.nm = animData.nm;
    this.globalData.compSize = {
        w: animData.w,
        h: animData.h
    }
}
function SVGRenderer(animationItem, config){
    this.animationItem = animationItem;
    this.layers = null;
    this.renderedFrame = -1;
    this.svgElement = createNS('svg');
    var ariaLabel = '';
    if (config && config.title) {
        var titleElement = createNS('title');
        var titleId = createElementID();
        titleElement.setAttribute('id', titleId);
        titleElement.textContent = config.title;
        this.svgElement.appendChild(titleElement);
        ariaLabel += titleId;
    }
    if (config && config.description) {
        var descElement = createNS('desc');
        var descId = createElementID();
        descElement.setAttribute('id', descId);
        descElement.textContent = config.description;
        this.svgElement.appendChild(descElement);
        ariaLabel += ' ' + descId;
    }
    if (ariaLabel) {
        this.svgElement.setAttribute('aria-labelledby', ariaLabel)
    }
    var defs = createNS( 'defs');
    this.svgElement.appendChild(defs);
    var maskElement = createNS('g');
    this.svgElement.appendChild(maskElement);
    this.layerElement = maskElement;
    this.renderConfig = {
        preserveAspectRatio: (config && config.preserveAspectRatio) || 'xMidYMid meet',
        imagePreserveAspectRatio: (config && config.imagePreserveAspectRatio) || 'xMidYMid slice',
        progressiveLoad: (config && config.progressiveLoad) || false,
        hideOnTransparent: (config && config.hideOnTransparent === false) ? false : true,
        viewBoxOnly: (config && config.viewBoxOnly) || false,
        viewBoxSize: (config && config.viewBoxSize) || false,
        className: (config && config.className) || '',
        id: (config && config.id) || '',
        focusable: config && config.focusable,
        filterSize: {
            width: config && config.filterSize && config.filterSize.width || '100%',
            height: config && config.filterSize && config.filterSize.height || '100%',
            x: config && config.filterSize && config.filterSize.x || '0%',
            y: config && config.filterSize && config.filterSize.y || '0%',
        }
    };

    this.globalData = {
        _mdf: false,
        frameNum: -1,
        defs: defs,
        renderConfig: this.renderConfig
    };
    this.elements = [];
    this.pendingElements = [];
    this.destroyed = false;
    this.rendererType = 'svg';

}

extendPrototype([BaseRenderer],SVGRenderer);

SVGRenderer.prototype.createNull = function (data) {
    return new NullElement(data,this.globalData,this);
};

SVGRenderer.prototype.createShape = function (data) {
    return new SVGShapeElement(data,this.globalData,this);
};

SVGRenderer.prototype.createText = function (data) {
    return new SVGTextElement(data,this.globalData,this);

};

SVGRenderer.prototype.createImage = function (data) {
    return new IImageElement(data,this.globalData,this);
};

SVGRenderer.prototype.createComp = function (data) {
    return new SVGCompElement(data,this.globalData,this);

};

SVGRenderer.prototype.createSolid = function (data) {
    return new ISolidElement(data,this.globalData,this);
};

SVGRenderer.prototype.configAnimation = function(animData){
    this.svgElement.setAttribute('xmlns','http://www.w3.org/2000/svg');
    if(this.renderConfig.viewBoxSize) {
        this.svgElement.setAttribute('viewBox',this.renderConfig.viewBoxSize);
    } else {
        this.svgElement.setAttribute('viewBox','0 0 '+animData.w+' '+animData.h);
    }

    if(!this.renderConfig.viewBoxOnly) {
        this.svgElement.setAttribute('width',animData.w);
        this.svgElement.setAttribute('height',animData.h);
        this.svgElement.style.width = '100%';
        this.svgElement.style.height = '100%';
        this.svgElement.style.transform = 'translate3d(0,0,0)';
    }
    if (this.renderConfig.className) {
        this.svgElement.setAttribute('class', this.renderConfig.className);
    }
    if (this.renderConfig.id) {
        this.svgElement.setAttribute('id', this.renderConfig.id);
    }
    if (this.renderConfig.focusable !== undefined) {
        this.svgElement.setAttribute('focusable', this.renderConfig.focusable);
    }
    this.svgElement.setAttribute('preserveAspectRatio',this.renderConfig.preserveAspectRatio);
    //this.layerElement.style.transform = 'translate3d(0,0,0)';
    //this.layerElement.style.transformOrigin = this.layerElement.style.mozTransformOrigin = this.layerElement.style.webkitTransformOrigin = this.layerElement.style['-webkit-transform'] = "0px 0px 0px";
    this.animationItem.wrapper.appendChild(this.svgElement);
    //Mask animation
    var defs = this.globalData.defs;

    this.setupGlobalData(animData, defs);
    this.globalData.progressiveLoad = this.renderConfig.progressiveLoad;
    this.data = animData;

    var maskElement = createNS( 'clipPath');
    var rect = createNS('rect');
    rect.setAttribute('width',animData.w);
    rect.setAttribute('height',animData.h);
    rect.setAttribute('x',0);
    rect.setAttribute('y',0);
    var maskId = createElementID();
    maskElement.setAttribute('id', maskId);
    maskElement.appendChild(rect);
    this.layerElement.setAttribute("clip-path", "url(" + locationHref + "#"+maskId+")");

    defs.appendChild(maskElement);
    this.layers = animData.layers;
    this.elements = createSizedArray(animData.layers.length);
};


SVGRenderer.prototype.destroy = function () {
    this.animationItem.wrapper.innerHTML = '';
    this.layerElement = null;
    this.globalData.defs = null;
    var i, len = this.layers ? this.layers.length : 0;
    for (i = 0; i < len; i++) {
        if(this.elements[i]){
            this.elements[i].destroy();
        }
    }
    this.elements.length = 0;
    this.destroyed = true;
    this.animationItem = null;
};

SVGRenderer.prototype.updateContainerSize = function () {
};

SVGRenderer.prototype.buildItem  = function(pos){
    var elements = this.elements;
    if(elements[pos] || this.layers[pos].ty == 99){
        return;
    }
    elements[pos] = true;
    var element = this.createItem(this.layers[pos]);

    elements[pos] = element;
    if(expressionsPlugin){
        if(this.layers[pos].ty === 0){
            this.globalData.projectInterface.registerComposition(element);
        }
        element.initExpressions();
    }
    this.appendElementInPos(element,pos);
    if(this.layers[pos].tt){
        if(!this.elements[pos - 1] || this.elements[pos - 1] === true){
            this.buildItem(pos - 1);
            this.addPendingElement(element);
        } else {
            element.setMatte(elements[pos - 1].layerId);
        }
    }
};

SVGRenderer.prototype.checkPendingElements  = function(){
    while(this.pendingElements.length){
        var element = this.pendingElements.pop();
        element.checkParenting();
        if(element.data.tt){
            var i = 0, len = this.elements.length;
            while(i<len){
                if(this.elements[i] === element){
                    element.setMatte(this.elements[i - 1].layerId);
                    break;
                }
                i += 1;
            }
        }
    }
};

SVGRenderer.prototype.renderFrame = function(num){
    if(this.renderedFrame === num || this.destroyed){
        return;
    }
    if(num === null){
        num = this.renderedFrame;
    }else{
        this.renderedFrame = num;
    }
    // console.log('-------');
    // console.log('FRAME ',num);
    this.globalData.frameNum = num;
    this.globalData.frameId += 1;
    this.globalData.projectInterface.currentFrame = num;
    this.globalData._mdf = false;
    var i, len = this.layers.length;
    if(!this.completeLayers){
        this.checkLayers(num);
    }
    for (i = len - 1; i >= 0; i--) {
        if(this.completeLayers || this.elements[i]){
            this.elements[i].prepareFrame(num - this.layers[i].st);
        }
    }
    if(this.globalData._mdf) {
        for (i = 0; i < len; i += 1) {
            if(this.completeLayers || this.elements[i]){
                this.elements[i].renderFrame();
            }
        }
    }
};

SVGRenderer.prototype.appendElementInPos = function(element, pos){
    var newElement = element.getBaseElement();
    if(!newElement){
        return;
    }
    var i = 0;
    var nextElement;
    while(i<pos){
        if(this.elements[i] && this.elements[i]!== true && this.elements[i].getBaseElement()){
            nextElement = this.elements[i].getBaseElement();
        }
        i += 1;
    }
    if(nextElement){
        this.layerElement.insertBefore(newElement, nextElement);
    } else {
        this.layerElement.appendChild(newElement);
    }
};

SVGRenderer.prototype.hide = function(){
    this.layerElement.style.display = 'none';
};

SVGRenderer.prototype.show = function(){
    this.layerElement.style.display = 'block';
};

function CanvasRenderer(animationItem, config){
    this.animationItem = animationItem;
    this.renderConfig = {
        clearCanvas: (config && config.clearCanvas !== undefined) ? config.clearCanvas : true,
        context: (config && config.context) || null,
        progressiveLoad: (config && config.progressiveLoad) || false,
        preserveAspectRatio: (config && config.preserveAspectRatio) || 'xMidYMid meet',
        imagePreserveAspectRatio: (config && config.imagePreserveAspectRatio) || 'xMidYMid slice',
        className: (config && config.className) || '',
        id: (config && config.id) || '',
    };
    this.renderConfig.dpr = (config && config.dpr) || 1;
    if (this.animationItem.wrapper) {
        this.renderConfig.dpr = (config && config.dpr) || window.devicePixelRatio || 1;
    }
    this.renderedFrame = -1;
    this.globalData = {
        frameNum: -1,
        _mdf: false,
        renderConfig: this.renderConfig,
        currentGlobalAlpha: -1
    };
    this.contextData = new CVContextData();
    this.elements = [];
    this.pendingElements = [];
    this.transformMat = new Matrix();
    this.completeLayers = false;
    this.rendererType = 'canvas';
}
extendPrototype([BaseRenderer],CanvasRenderer);

CanvasRenderer.prototype.createShape = function (data) {
    return new CVShapeElement(data, this.globalData, this);
};

CanvasRenderer.prototype.createText = function (data) {
    return new CVTextElement(data, this.globalData, this);
};

CanvasRenderer.prototype.createImage = function (data) {
    return new CVImageElement(data, this.globalData, this);
};

CanvasRenderer.prototype.createComp = function (data) {
    return new CVCompElement(data, this.globalData, this);
};

CanvasRenderer.prototype.createSolid = function (data) {
    return new CVSolidElement(data, this.globalData, this);
};

CanvasRenderer.prototype.createNull = SVGRenderer.prototype.createNull;

CanvasRenderer.prototype.ctxTransform = function(props){
    if(props[0] === 1 && props[1] === 0 && props[4] === 0 && props[5] === 1 && props[12] === 0 && props[13] === 0){
        return;
    }
    if(!this.renderConfig.clearCanvas){
        this.canvasContext.transform(props[0],props[1],props[4],props[5],props[12],props[13]);
        return;
    }
    this.transformMat.cloneFromProps(props);
    var cProps = this.contextData.cTr.props;
    this.transformMat.transform(cProps[0],cProps[1],cProps[2],cProps[3],cProps[4],cProps[5],cProps[6],cProps[7],cProps[8],cProps[9],cProps[10],cProps[11],cProps[12],cProps[13],cProps[14],cProps[15]);
    //this.contextData.cTr.transform(props[0],props[1],props[2],props[3],props[4],props[5],props[6],props[7],props[8],props[9],props[10],props[11],props[12],props[13],props[14],props[15]);
    this.contextData.cTr.cloneFromProps(this.transformMat.props);
    var trProps = this.contextData.cTr.props;
    this.canvasContext.setTransform(trProps[0],trProps[1],trProps[4],trProps[5],trProps[12],trProps[13]);
};

CanvasRenderer.prototype.ctxOpacity = function(op){
    /*if(op === 1){
        return;
    }*/
    if(!this.renderConfig.clearCanvas){
        this.canvasContext.globalAlpha *= op < 0 ? 0 : op;
        this.globalData.currentGlobalAlpha = this.contextData.cO;
        return;
    }
    this.contextData.cO *= op < 0 ? 0 : op;
    if(this.globalData.currentGlobalAlpha !== this.contextData.cO) {
        this.canvasContext.globalAlpha = this.contextData.cO;
        this.globalData.currentGlobalAlpha = this.contextData.cO;
    }
};

CanvasRenderer.prototype.reset = function(){
    if(!this.renderConfig.clearCanvas){
        this.canvasContext.restore();
        return;
    }
    this.contextData.reset();
};

CanvasRenderer.prototype.save = function(actionFlag){
    if(!this.renderConfig.clearCanvas){
        this.canvasContext.save();
        return;
    }
    if(actionFlag){
        this.canvasContext.save();
    }
    var props = this.contextData.cTr.props;
    if(this.contextData._length <= this.contextData.cArrPos) {
        this.contextData.duplicate();
    }
    var i, arr = this.contextData.saved[this.contextData.cArrPos];
    for (i = 0; i < 16; i += 1) {
        arr[i] = props[i];
    }
    this.contextData.savedOp[this.contextData.cArrPos] = this.contextData.cO;
    this.contextData.cArrPos += 1;
};

CanvasRenderer.prototype.restore = function(actionFlag){
    if(!this.renderConfig.clearCanvas){
        this.canvasContext.restore();
        return;
    }
    if(actionFlag){
        this.canvasContext.restore();
        this.globalData.blendMode = 'source-over';
    }
    this.contextData.cArrPos -= 1;
    var popped = this.contextData.saved[this.contextData.cArrPos];
    var i,arr = this.contextData.cTr.props;
    for(i=0;i<16;i+=1){
        arr[i] = popped[i];
    }
    this.canvasContext.setTransform(popped[0],popped[1],popped[4],popped[5],popped[12],popped[13]);
    popped = this.contextData.savedOp[this.contextData.cArrPos];
    this.contextData.cO = popped;
    if(this.globalData.currentGlobalAlpha !== popped) {
        this.canvasContext.globalAlpha = popped;
        this.globalData.currentGlobalAlpha = popped;
    }
};

CanvasRenderer.prototype.configAnimation = function(animData){
    if(this.animationItem.wrapper){
        this.animationItem.container = createTag('canvas');
        this.animationItem.container.style.width = '100%';
        this.animationItem.container.style.height = '100%';
        //this.animationItem.container.style.transform = 'translate3d(0,0,0)';
        //this.animationItem.container.style.webkitTransform = 'translate3d(0,0,0)';
        this.animationItem.container.style.transformOrigin = this.animationItem.container.style.mozTransformOrigin = this.animationItem.container.style.webkitTransformOrigin = this.animationItem.container.style['-webkit-transform'] = "0px 0px 0px";
        this.animationItem.wrapper.appendChild(this.animationItem.container);
        this.canvasContext = this.animationItem.container.getContext('2d');
        if(this.renderConfig.className) {
            this.animationItem.container.setAttribute('class', this.renderConfig.className);
        }
        if(this.renderConfig.id) {
            this.animationItem.container.setAttribute('id', this.renderConfig.id);
        }
    }else{
        this.canvasContext = this.renderConfig.context;
    }
    this.data = animData;
    this.layers = animData.layers;
    this.transformCanvas = {
        w: animData.w,
        h:animData.h,
        sx:0,
        sy:0,
        tx:0,
        ty:0
    };
    this.setupGlobalData(animData, document.body);
    this.globalData.canvasContext = this.canvasContext;
    this.globalData.renderer = this;
    this.globalData.isDashed = false;
    this.globalData.progressiveLoad = this.renderConfig.progressiveLoad;
    this.globalData.transformCanvas = this.transformCanvas;
    this.elements = createSizedArray(animData.layers.length);

    this.updateContainerSize();
};

CanvasRenderer.prototype.updateContainerSize = function () {
    this.reset();
    var elementWidth,elementHeight;
    if(this.animationItem.wrapper && this.animationItem.container){
        elementWidth = this.animationItem.wrapper.offsetWidth;
        elementHeight = this.animationItem.wrapper.offsetHeight;
        this.animationItem.container.setAttribute('width',elementWidth * this.renderConfig.dpr );
        this.animationItem.container.setAttribute('height',elementHeight * this.renderConfig.dpr);
    }else{
        elementWidth = this.canvasContext.canvas.width * this.renderConfig.dpr;
        elementHeight = this.canvasContext.canvas.height * this.renderConfig.dpr;
    }
    var elementRel,animationRel;
    if(this.renderConfig.preserveAspectRatio.indexOf('meet') !== -1 || this.renderConfig.preserveAspectRatio.indexOf('slice') !== -1){
        var par = this.renderConfig.preserveAspectRatio.split(' ');
        var fillType = par[1] || 'meet';
        var pos = par[0] || 'xMidYMid';
        var xPos = pos.substr(0,4);
        var yPos = pos.substr(4);
        elementRel = elementWidth/elementHeight;
        animationRel = this.transformCanvas.w/this.transformCanvas.h;
        if(animationRel>elementRel && fillType === 'meet' || animationRel<elementRel && fillType === 'slice'){
            this.transformCanvas.sx = elementWidth/(this.transformCanvas.w/this.renderConfig.dpr);
            this.transformCanvas.sy = elementWidth/(this.transformCanvas.w/this.renderConfig.dpr);
        }else{
            this.transformCanvas.sx = elementHeight/(this.transformCanvas.h / this.renderConfig.dpr);
            this.transformCanvas.sy = elementHeight/(this.transformCanvas.h / this.renderConfig.dpr);
        }

        if(xPos === 'xMid' && ((animationRel<elementRel && fillType==='meet') || (animationRel>elementRel && fillType === 'slice'))){
            this.transformCanvas.tx = (elementWidth-this.transformCanvas.w*(elementHeight/this.transformCanvas.h))/2*this.renderConfig.dpr;
        } else if(xPos === 'xMax' && ((animationRel<elementRel && fillType==='meet') || (animationRel>elementRel && fillType === 'slice'))){
            this.transformCanvas.tx = (elementWidth-this.transformCanvas.w*(elementHeight/this.transformCanvas.h))*this.renderConfig.dpr;
        } else {
            this.transformCanvas.tx = 0;
        }
        if(yPos === 'YMid' && ((animationRel>elementRel && fillType==='meet') || (animationRel<elementRel && fillType === 'slice'))){
            this.transformCanvas.ty = ((elementHeight-this.transformCanvas.h*(elementWidth/this.transformCanvas.w))/2)*this.renderConfig.dpr;
        } else if(yPos === 'YMax' && ((animationRel>elementRel && fillType==='meet') || (animationRel<elementRel && fillType === 'slice'))){
            this.transformCanvas.ty = ((elementHeight-this.transformCanvas.h*(elementWidth/this.transformCanvas.w)))*this.renderConfig.dpr;
        } else {
            this.transformCanvas.ty = 0;
        }

    }else if(this.renderConfig.preserveAspectRatio == 'none'){
        this.transformCanvas.sx = elementWidth/(this.transformCanvas.w/this.renderConfig.dpr);
        this.transformCanvas.sy = elementHeight/(this.transformCanvas.h/this.renderConfig.dpr);
        this.transformCanvas.tx = 0;
        this.transformCanvas.ty = 0;
    }else{
        this.transformCanvas.sx = this.renderConfig.dpr;
        this.transformCanvas.sy = this.renderConfig.dpr;
        this.transformCanvas.tx = 0;
        this.transformCanvas.ty = 0;
    }
    this.transformCanvas.props = [this.transformCanvas.sx,0,0,0,0,this.transformCanvas.sy,0,0,0,0,1,0,this.transformCanvas.tx,this.transformCanvas.ty,0,1];
    /*var i, len = this.elements.length;
    for(i=0;i<len;i+=1){
        if(this.elements[i] && this.elements[i].data.ty === 0){
            this.elements[i].resize(this.globalData.transformCanvas);
        }
    }*/
    this.ctxTransform(this.transformCanvas.props);
    this.canvasContext.beginPath();
    this.canvasContext.rect(0,0,this.transformCanvas.w,this.transformCanvas.h);
    this.canvasContext.closePath();
    this.canvasContext.clip();

    this.renderFrame(this.renderedFrame, true);
};

CanvasRenderer.prototype.destroy = function () {
    if(this.renderConfig.clearCanvas) {
        this.animationItem.wrapper.innerHTML = '';
    }
    var i, len = this.layers ? this.layers.length : 0;
    for (i = len - 1; i >= 0; i-=1) {
        if(this.elements[i]) {
            this.elements[i].destroy();
        }
    }
    this.elements.length = 0;
    this.globalData.canvasContext = null;
    this.animationItem.container = null;
    this.destroyed = true;
};

CanvasRenderer.prototype.renderFrame = function(num, forceRender){
    if((this.renderedFrame === num && this.renderConfig.clearCanvas === true && !forceRender) || this.destroyed || num === -1){
        return;
    }
    this.renderedFrame = num;
    this.globalData.frameNum = num - this.animationItem._isFirstFrame;
    this.globalData.frameId += 1;
    this.globalData._mdf = !this.renderConfig.clearCanvas || forceRender;
    this.globalData.projectInterface.currentFrame = num;

     // console.log('--------');
     // console.log('NEW: ',num);
    var i, len = this.layers.length;
    if(!this.completeLayers){
        this.checkLayers(num);
    }

    for (i = 0; i < len; i++) {
        if(this.completeLayers || this.elements[i]){
            this.elements[i].prepareFrame(num - this.layers[i].st);
        }
    }
    if(this.globalData._mdf) {
        if(this.renderConfig.clearCanvas === true){
            this.canvasContext.clearRect(0, 0, this.transformCanvas.w, this.transformCanvas.h);
        }else{
            this.save();
        }
        for (i = len - 1; i >= 0; i-=1) {
            if(this.completeLayers || this.elements[i]){
                this.elements[i].renderFrame();
            }
        }
        if(this.renderConfig.clearCanvas !== true){
            this.restore();
        }
    }
};

CanvasRenderer.prototype.buildItem = function(pos){
    var elements = this.elements;
    if(elements[pos] || this.layers[pos].ty == 99){
        return;
    }
    var element = this.createItem(this.layers[pos], this,this.globalData);
    elements[pos] = element;
    element.initExpressions();
    /*if(this.layers[pos].ty === 0){
        element.resize(this.globalData.transformCanvas);
    }*/
};

CanvasRenderer.prototype.checkPendingElements  = function(){
    while(this.pendingElements.length){
        var element = this.pendingElements.pop();
        element.checkParenting();
    }
};

CanvasRenderer.prototype.hide = function(){
    this.animationItem.container.style.display = 'none';
};

CanvasRenderer.prototype.show = function(){
    this.animationItem.container.style.display = 'block';
};

function HybridRenderer(animationItem, config){
    this.animationItem = animationItem;
    this.layers = null;
    this.renderedFrame = -1;
    this.renderConfig = {
        className: (config && config.className) || '',
        imagePreserveAspectRatio: (config && config.imagePreserveAspectRatio) || 'xMidYMid slice',
        hideOnTransparent: (config && config.hideOnTransparent === false) ? false : true,
        filterSize: {
            width: config && config.filterSize && config.filterSize.width || '400%',
            height: config && config.filterSize && config.filterSize.height || '400%',
            x: config && config.filterSize && config.filterSize.x || '-100%',
            y: config && config.filterSize && config.filterSize.y || '-100%',
        }
    };
    this.globalData = {
        _mdf: false,
        frameNum: -1,
        renderConfig: this.renderConfig
    };
    this.pendingElements = [];
    this.elements = [];
    this.threeDElements = [];
    this.destroyed = false;
    this.camera = null;
    this.supports3d = true;
    this.rendererType = 'html';

}

extendPrototype([BaseRenderer],HybridRenderer);

HybridRenderer.prototype.buildItem = SVGRenderer.prototype.buildItem;

HybridRenderer.prototype.checkPendingElements  = function(){
    while(this.pendingElements.length){
        var element = this.pendingElements.pop();
        element.checkParenting();
    }
};

HybridRenderer.prototype.appendElementInPos = function(element, pos){
    var newDOMElement = element.getBaseElement();
    if(!newDOMElement){
        return;
    }
    var layer = this.layers[pos];
    if(!layer.ddd || !this.supports3d){
        if(this.threeDElements) {
            this.addTo3dContainer(newDOMElement,pos);
        } else {
            var i = 0;
            var nextDOMElement, nextLayer, tmpDOMElement;
            while(i<pos){
                if(this.elements[i] && this.elements[i]!== true && this.elements[i].getBaseElement){
                    nextLayer = this.elements[i];
                    tmpDOMElement = this.layers[i].ddd ? this.getThreeDContainerByPos(i) : nextLayer.getBaseElement();
                    nextDOMElement = tmpDOMElement || nextDOMElement;
                }
                i += 1;
            }
            if(nextDOMElement){
                if(!layer.ddd || !this.supports3d){
                    this.layerElement.insertBefore(newDOMElement, nextDOMElement);
                }
            } else {
                if(!layer.ddd || !this.supports3d){
                    this.layerElement.appendChild(newDOMElement);
                }
            }
        }
        
    } else {
        this.addTo3dContainer(newDOMElement,pos);
    }
};

HybridRenderer.prototype.createShape = function (data) {
    if(!this.supports3d){
        return new SVGShapeElement(data, this.globalData, this);
    }
    return new HShapeElement(data, this.globalData, this);
};

HybridRenderer.prototype.createText = function (data) {
    if(!this.supports3d){
        return new SVGTextElement(data, this.globalData, this);
    }
    return new HTextElement(data, this.globalData, this);
};

HybridRenderer.prototype.createCamera = function (data) {
    this.camera = new HCameraElement(data, this.globalData, this);
    return this.camera;
};

HybridRenderer.prototype.createImage = function (data) {
    if(!this.supports3d){
        return new IImageElement(data, this.globalData, this);
    }
    return new HImageElement(data, this.globalData, this);
};

HybridRenderer.prototype.createComp = function (data) {
    if(!this.supports3d){
        return new SVGCompElement(data, this.globalData, this);
    }
    return new HCompElement(data, this.globalData, this);

};

HybridRenderer.prototype.createSolid = function (data) {
    if(!this.supports3d){
        return new ISolidElement(data, this.globalData, this);
    }
    return new HSolidElement(data, this.globalData, this);
};

HybridRenderer.prototype.createNull = SVGRenderer.prototype.createNull;

HybridRenderer.prototype.getThreeDContainerByPos = function(pos){
    var i = 0, len = this.threeDElements.length;
    while(i<len) {
        if(this.threeDElements[i].startPos <= pos && this.threeDElements[i].endPos >= pos) {
            return this.threeDElements[i].perspectiveElem;
        }
        i += 1;
    }
};

HybridRenderer.prototype.createThreeDContainer = function(pos, type){
    var perspectiveElem = createTag('div');
    styleDiv(perspectiveElem);
    var container = createTag('div');
    styleDiv(container);
    if(type === '3d') {
        perspectiveElem.style.width = this.globalData.compSize.w+'px';
        perspectiveElem.style.height = this.globalData.compSize.h+'px';
        perspectiveElem.style.transformOrigin = perspectiveElem.style.mozTransformOrigin = perspectiveElem.style.webkitTransformOrigin = "50% 50%";
        container.style.transform = container.style.webkitTransform = 'matrix3d(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1)';
    }
    
    perspectiveElem.appendChild(container);
    //this.resizerElem.appendChild(perspectiveElem);
    var threeDContainerData = {
        container:container,
        perspectiveElem:perspectiveElem,
        startPos: pos,
        endPos: pos,
        type: type
    };
    this.threeDElements.push(threeDContainerData);
    return threeDContainerData;
};

HybridRenderer.prototype.build3dContainers = function(){
    var i, len = this.layers.length;
    var lastThreeDContainerData;
    var currentContainer = '';
    for(i=0;i<len;i+=1){
        if(this.layers[i].ddd && this.layers[i].ty !== 3){
            if(currentContainer !== '3d'){
                currentContainer = '3d';
                lastThreeDContainerData = this.createThreeDContainer(i,'3d');
            }
            lastThreeDContainerData.endPos = Math.max(lastThreeDContainerData.endPos,i);
        } else {
            if(currentContainer !== '2d'){
                currentContainer = '2d';
                lastThreeDContainerData = this.createThreeDContainer(i,'2d');
            }
            lastThreeDContainerData.endPos = Math.max(lastThreeDContainerData.endPos,i);
        }
    }
    len = this.threeDElements.length;
    for(i = len - 1; i >= 0; i --) {
        this.resizerElem.appendChild(this.threeDElements[i].perspectiveElem);
    }
};

HybridRenderer.prototype.addTo3dContainer = function(elem,pos){
    var i = 0, len = this.threeDElements.length;
    while(i<len){
        if(pos <= this.threeDElements[i].endPos){
            var j = this.threeDElements[i].startPos;
            var nextElement;
            while(j<pos){
                if(this.elements[j] && this.elements[j].getBaseElement){
                    nextElement = this.elements[j].getBaseElement();
                }
                j += 1;
            }
            if(nextElement){
                this.threeDElements[i].container.insertBefore(elem, nextElement);
            } else {
                this.threeDElements[i].container.appendChild(elem);
            }
            break;
        }
        i += 1;
    }
};

HybridRenderer.prototype.configAnimation = function(animData){
    var resizerElem = createTag('div');
    var wrapper = this.animationItem.wrapper;
    resizerElem.style.width = animData.w+'px';
    resizerElem.style.height = animData.h+'px';
    this.resizerElem = resizerElem;
    styleDiv(resizerElem);
    resizerElem.style.transformStyle = resizerElem.style.webkitTransformStyle = resizerElem.style.mozTransformStyle = "flat";
    if(this.renderConfig.className) {
      resizerElem.setAttribute('class', this.renderConfig.className);
    }
    wrapper.appendChild(resizerElem);

    resizerElem.style.overflow = 'hidden';
    var svg = createNS('svg');
    svg.setAttribute('width','1');
    svg.setAttribute('height','1');
    styleDiv(svg);
    this.resizerElem.appendChild(svg);
    var defs = createNS('defs');
    svg.appendChild(defs);
    this.data = animData;
    //Mask animation
    this.setupGlobalData(animData, svg);
    this.globalData.defs = defs;
    this.layers = animData.layers;
    this.layerElement = this.resizerElem;
    this.build3dContainers();
    this.updateContainerSize();
};

HybridRenderer.prototype.destroy = function () {
    this.animationItem.wrapper.innerHTML = '';
    this.animationItem.container = null;
    this.globalData.defs = null;
    var i, len = this.layers ? this.layers.length : 0;
    for (i = 0; i < len; i++) {
        this.elements[i].destroy();
    }
    this.elements.length = 0;
    this.destroyed = true;
    this.animationItem = null;
};

HybridRenderer.prototype.updateContainerSize = function () {
    var elementWidth = this.animationItem.wrapper.offsetWidth;
    var elementHeight = this.animationItem.wrapper.offsetHeight;
    var elementRel = elementWidth/elementHeight;
    var animationRel = this.globalData.compSize.w/this.globalData.compSize.h;
    var sx,sy,tx,ty;
    if(animationRel>elementRel){
        sx = elementWidth/(this.globalData.compSize.w);
        sy = elementWidth/(this.globalData.compSize.w);
        tx = 0;
        ty = ((elementHeight-this.globalData.compSize.h*(elementWidth/this.globalData.compSize.w))/2);
    }else{
        sx = elementHeight/(this.globalData.compSize.h);
        sy = elementHeight/(this.globalData.compSize.h);
        tx = (elementWidth-this.globalData.compSize.w*(elementHeight/this.globalData.compSize.h))/2;
        ty = 0;
    }
    this.resizerElem.style.transform = this.resizerElem.style.webkitTransform = 'matrix3d(' + sx + ',0,0,0,0,'+sy+',0,0,0,0,1,0,'+tx+','+ty+',0,1)';
};

HybridRenderer.prototype.renderFrame = SVGRenderer.prototype.renderFrame;

HybridRenderer.prototype.hide = function(){
    this.resizerElem.style.display = 'none';
};

HybridRenderer.prototype.show = function(){
    this.resizerElem.style.display = 'block';
};

HybridRenderer.prototype.initItems = function(){
    this.buildAllItems();
    if(this.camera){
        this.camera.setup();
    } else {
        var cWidth = this.globalData.compSize.w;
        var cHeight = this.globalData.compSize.h;
        var i, len = this.threeDElements.length;
        for(i=0;i<len;i+=1){
            this.threeDElements[i].perspectiveElem.style.perspective = this.threeDElements[i].perspectiveElem.style.webkitPerspective = Math.sqrt(Math.pow(cWidth,2) + Math.pow(cHeight,2)) + 'px';
        }
    }
};

HybridRenderer.prototype.searchExtraCompositions = function(assets){
    var i, len = assets.length;
    var floatingContainer = createTag('div');
    for(i=0;i<len;i+=1){
        if(assets[i].xt){
            var comp = this.createComp(assets[i],floatingContainer,this.globalData.comp,null);
            comp.initExpressions();
            this.globalData.projectInterface.registerComposition(comp);
        }
    }
};

function MaskElement(data,element,globalData) {
    this.data = data;
    this.element = element;
    this.globalData = globalData;
    this.storedData = [];
    this.masksProperties = this.data.masksProperties || [];
    this.maskElement = null;
    var defs = this.globalData.defs;
    var i, len = this.masksProperties ? this.masksProperties.length : 0;
    this.viewData = createSizedArray(len);
    this.solidPath = '';


    var path, properties = this.masksProperties;
    var count = 0;
    var currentMasks = [];
    var j, jLen;
    var layerId = createElementID();
    var rect, expansor, feMorph,x;
    var maskType = 'clipPath', maskRef = 'clip-path';
    for (i = 0; i < len; i++) {
        if((properties[i].mode !== 'a' && properties[i].mode !== 'n')|| properties[i].inv || properties[i].o.k !== 100 || properties[i].o.x){
            maskType = 'mask';
            maskRef = 'mask';
        }

        if((properties[i].mode == 's' || properties[i].mode == 'i') && count === 0){
            rect = createNS( 'rect');
            rect.setAttribute('fill', '#ffffff');
            rect.setAttribute('width', this.element.comp.data.w || 0);
            rect.setAttribute('height', this.element.comp.data.h || 0);
            currentMasks.push(rect);
        } else {
            rect = null;
        }

        path = createNS( 'path');
        if(properties[i].mode == 'n') {
            // TODO move this to a factory or to a constructor
            this.viewData[i] = {
                op: PropertyFactory.getProp(this.element,properties[i].o,0,0.01,this.element),
                prop: ShapePropertyFactory.getShapeProp(this.element,properties[i],3),
                elem: path,
                lastPath: ''
            };
            defs.appendChild(path);
            continue;
        }
        count += 1;

        path.setAttribute('fill', properties[i].mode === 's' ? '#000000':'#ffffff');
        path.setAttribute('clip-rule','nonzero');
        var filterID;

        if (properties[i].x.k !== 0) {
            maskType = 'mask';
            maskRef = 'mask';
            x = PropertyFactory.getProp(this.element,properties[i].x,0,null,this.element);
            filterID = createElementID();
            expansor = createNS('filter');
            expansor.setAttribute('id',filterID);
            feMorph = createNS('feMorphology');
            feMorph.setAttribute('operator','erode');
            feMorph.setAttribute('in','SourceGraphic');
            feMorph.setAttribute('radius','0');
            expansor.appendChild(feMorph);
            defs.appendChild(expansor);
            path.setAttribute('stroke', properties[i].mode === 's' ? '#000000':'#ffffff');
        } else {
            feMorph = null;
            x = null;
        }

        // TODO move this to a factory or to a constructor
        this.storedData[i] = {
             elem: path,
             x: x,
             expan: feMorph,
            lastPath: '',
            lastOperator:'',
            filterId:filterID,
            lastRadius:0
        };
        if(properties[i].mode == 'i'){
            jLen = currentMasks.length;
            var g = createNS('g');
            for(j=0;j<jLen;j+=1){
                g.appendChild(currentMasks[j]);
            }
            var mask = createNS('mask');
            mask.setAttribute('mask-type','alpha');
            mask.setAttribute('id',layerId+'_'+count);
            mask.appendChild(path);
            defs.appendChild(mask);
            g.setAttribute('mask','url(' + locationHref + '#'+layerId+'_'+count+')');

            currentMasks.length = 0;
            currentMasks.push(g);
        }else{
            currentMasks.push(path);
        }
        if(properties[i].inv && !this.solidPath){
            this.solidPath = this.createLayerSolidPath();
        }
        // TODO move this to a factory or to a constructor
        this.viewData[i] = {
            elem: path,
            lastPath: '',
            op: PropertyFactory.getProp(this.element,properties[i].o,0,0.01,this.element),
            prop:ShapePropertyFactory.getShapeProp(this.element,properties[i],3),
            invRect: rect
        };
        if(!this.viewData[i].prop.k){
            this.drawPath(properties[i],this.viewData[i].prop.v,this.viewData[i]);
        }
    }

    this.maskElement = createNS( maskType);

    len = currentMasks.length;
    for(i=0;i<len;i+=1){
        this.maskElement.appendChild(currentMasks[i]);
    }

    if(count > 0){
        this.maskElement.setAttribute('id', layerId);
        this.element.maskedElement.setAttribute(maskRef, "url(" + locationHref + "#" + layerId + ")");
        defs.appendChild(this.maskElement);
    }
    if (this.viewData.length) {
        this.element.addRenderableComponent(this);
    }

}

MaskElement.prototype.getMaskProperty = function(pos){
    return this.viewData[pos].prop;
};

MaskElement.prototype.renderFrame = function (isFirstFrame) {
    var finalMat = this.element.finalTransform.mat;
    var i, len = this.masksProperties.length;
    for (i = 0; i < len; i++) {
        if(this.viewData[i].prop._mdf || isFirstFrame){
            this.drawPath(this.masksProperties[i],this.viewData[i].prop.v,this.viewData[i]);
        }
        if(this.viewData[i].op._mdf || isFirstFrame){
            this.viewData[i].elem.setAttribute('fill-opacity',this.viewData[i].op.v);
        }
        if(this.masksProperties[i].mode !== 'n'){
            if(this.viewData[i].invRect && (this.element.finalTransform.mProp._mdf || isFirstFrame)){
                this.viewData[i].invRect.setAttribute('transform', finalMat.getInverseMatrix().to2dCSS())
            }
            if(this.storedData[i].x && (this.storedData[i].x._mdf || isFirstFrame)){
                var feMorph = this.storedData[i].expan;
                if(this.storedData[i].x.v < 0){
                    if(this.storedData[i].lastOperator !== 'erode'){
                        this.storedData[i].lastOperator = 'erode';
                        this.storedData[i].elem.setAttribute('filter','url(' + locationHref + '#'+this.storedData[i].filterId+')');
                    }
                    feMorph.setAttribute('radius',-this.storedData[i].x.v);
                }else{
                    if(this.storedData[i].lastOperator !== 'dilate'){
                        this.storedData[i].lastOperator = 'dilate';
                        this.storedData[i].elem.setAttribute('filter',null);
                    }
                    this.storedData[i].elem.setAttribute('stroke-width', this.storedData[i].x.v*2);

                }
            }
        }
    }
};

MaskElement.prototype.getMaskelement = function () {
    return this.maskElement;
};

MaskElement.prototype.createLayerSolidPath = function(){
    var path = 'M0,0 ';
    path += ' h' + this.globalData.compSize.w ;
    path += ' v' + this.globalData.compSize.h ;
    path += ' h-' + this.globalData.compSize.w ;
    path += ' v-' + this.globalData.compSize.h + ' ';
    return path;
};

MaskElement.prototype.drawPath = function(pathData,pathNodes,viewData){
    var pathString = " M"+pathNodes.v[0][0]+','+pathNodes.v[0][1];
    var i, len;
    len = pathNodes._length;
    for(i=1;i<len;i+=1){
        //pathString += " C"+pathNodes.o[i-1][0]+','+pathNodes.o[i-1][1] + " "+pathNodes.i[i][0]+','+pathNodes.i[i][1] + " "+pathNodes.v[i][0]+','+pathNodes.v[i][1];
        pathString += " C"+pathNodes.o[i-1][0]+','+pathNodes.o[i-1][1] + " "+pathNodes.i[i][0]+','+pathNodes.i[i][1] + " "+pathNodes.v[i][0]+','+pathNodes.v[i][1];
    }
        //pathString += " C"+pathNodes.o[i-1][0]+','+pathNodes.o[i-1][1] + " "+pathNodes.i[0][0]+','+pathNodes.i[0][1] + " "+pathNodes.v[0][0]+','+pathNodes.v[0][1];
    if(pathNodes.c && len > 1){
        pathString += " C"+pathNodes.o[i-1][0]+','+pathNodes.o[i-1][1] + " "+pathNodes.i[0][0]+','+pathNodes.i[0][1] + " "+pathNodes.v[0][0]+','+pathNodes.v[0][1];
    }
    //pathNodes.__renderedString = pathString;

    if(viewData.lastPath !== pathString){
        var pathShapeValue = '';
        if(viewData.elem){
            if(pathNodes.c){
                pathShapeValue = pathData.inv ? this.solidPath + pathString : pathString;
            }
            viewData.elem.setAttribute('d',pathShapeValue);
        }
        viewData.lastPath = pathString;
    }
};

MaskElement.prototype.destroy = function(){
    this.element = null;
    this.globalData = null;
    this.maskElement = null;
    this.data = null;
    this.masksProperties = null;
};

/**
 * @file 
 * Handles AE's layer parenting property.
 *
 */

function HierarchyElement(){}

HierarchyElement.prototype = {
	/**
     * @function 
     * Initializes hierarchy properties
     *
     */
	initHierarchy: function() {
		//element's parent list
	    this.hierarchy = [];
	    //if element is parent of another layer _isParent will be true
	    this._isParent = false;
	    this.checkParenting();
	},
	/**
     * @function 
     * Sets layer's hierarchy.
     * @param {array} hierarch
     * layer's parent list
     *
     */ 
	setHierarchy: function(hierarchy){
	    this.hierarchy = hierarchy;
	},
	/**
     * @function 
     * Sets layer as parent.
     *
     */ 
	setAsParent: function() {
	    this._isParent = true;
	},
	/**
     * @function 
     * Searches layer's parenting chain
     *
     */ 
	checkParenting: function(){
	    if (this.data.parent !== undefined){
	        this.comp.buildElementParenting(this, this.data.parent, []);
	    }
	}
};
/**
 * @file 
 * Handles element's layer frame update.
 * Checks layer in point and out point
 *
 */

function FrameElement(){}

FrameElement.prototype = {
    /**
     * @function 
     * Initializes frame related properties.
     *
     */
    initFrame: function(){
        //set to true when inpoint is rendered
        this._isFirstFrame = false;
        //list of animated properties
        this.dynamicProperties = [];
        // If layer has been modified in current tick this will be true
        this._mdf = false;
    },
    /**
     * @function 
     * Calculates all dynamic values
     *
     * @param {number} num
     * current frame number in Layer's time
     * @param {boolean} isVisible
     * if layers is currently in range
     * 
     */
    prepareProperties: function(num, isVisible) {
        var i, len = this.dynamicProperties.length;
        for (i = 0;i < len; i += 1) {
            if (isVisible || (this._isParent && this.dynamicProperties[i].propType === 'transform')) {
                this.dynamicProperties[i].getValue();
                if (this.dynamicProperties[i]._mdf) {
                    this.globalData._mdf = true;
                    this._mdf = true;
                }
            }
        }
    },
    addDynamicProperty: function(prop) {
        if(this.dynamicProperties.indexOf(prop) === -1) {
            this.dynamicProperties.push(prop);
        }
    }
};
function TransformElement(){}

TransformElement.prototype = {
    initTransform: function() {
        this.finalTransform = {
            mProp: this.data.ks ? TransformPropertyFactory.getTransformProperty(this, this.data.ks, this) : {o:0},
            _matMdf: false,
            _opMdf: false,
            mat: new Matrix()
        };
        if (this.data.ao) {
            this.finalTransform.mProp.autoOriented = true;
        }

        //TODO: check TYPE 11: Guided elements
        if (this.data.ty !== 11) {
            //this.createElements();
        }
    },
    renderTransform: function() {

        this.finalTransform._opMdf = this.finalTransform.mProp.o._mdf || this._isFirstFrame;
        this.finalTransform._matMdf = this.finalTransform.mProp._mdf || this._isFirstFrame;

        if (this.hierarchy) {
            var mat;
            var finalMat = this.finalTransform.mat;
            var i = 0, len = this.hierarchy.length;
            //Checking if any of the transformation matrices in the hierarchy chain has changed.
            if (!this.finalTransform._matMdf) {
                while (i < len) {
                    if (this.hierarchy[i].finalTransform.mProp._mdf) {
                        this.finalTransform._matMdf = true;
                        break;
                    }
                    i += 1;
                }
            }
            
            if (this.finalTransform._matMdf) {
                mat = this.finalTransform.mProp.v.props;
                finalMat.cloneFromProps(mat);
                for (i = 0; i < len; i += 1) {
                    mat = this.hierarchy[i].finalTransform.mProp.v.props;
                    finalMat.transform(mat[0], mat[1], mat[2], mat[3], mat[4], mat[5], mat[6], mat[7], mat[8], mat[9], mat[10], mat[11], mat[12], mat[13], mat[14], mat[15]);
                }
            }
        }
    },
    globalToLocal: function(pt) {
        var transforms = [];
        transforms.push(this.finalTransform);
        var flag = true;
        var comp = this.comp;
        while (flag) {
            if (comp.finalTransform) {
                if (comp.data.hasMask) {
                    transforms.splice(0, 0, comp.finalTransform);
                }
                comp = comp.comp;
            } else {
                flag = false;
            }
        }
        var i, len = transforms.length,ptNew;
        for (i = 0; i < len; i += 1) {
            ptNew = transforms[i].mat.applyToPointArray(0, 0, 0);
            //ptNew = transforms[i].mat.applyToPointArray(pt[0],pt[1],pt[2]);
            pt = [pt[0] - ptNew[0], pt[1] - ptNew[1], 0];
        }
        return pt;
    },
    mHelper: new Matrix()
};
function RenderableElement(){

}

RenderableElement.prototype = {
    initRenderable: function() {
        //layer's visibility related to inpoint and outpoint. Rename isVisible to isInRange
        this.isInRange = false;
        //layer's display state
        this.hidden = false;
        // If layer's transparency equals 0, it can be hidden
        this.isTransparent = false;
        //list of animated components
        this.renderableComponents = [];
    },
    addRenderableComponent: function(component) {
        if(this.renderableComponents.indexOf(component) === -1) {
            this.renderableComponents.push(component);
        }
    },
    removeRenderableComponent: function(component) {
        if(this.renderableComponents.indexOf(component) !== -1) {
            this.renderableComponents.splice(this.renderableComponents.indexOf(component), 1);
        }
    },
    prepareRenderableFrame: function(num) {
        this.checkLayerLimits(num);
    },
    checkTransparency: function(){
        if(this.finalTransform.mProp.o.v <= 0) {
            if(!this.isTransparent && this.globalData.renderConfig.hideOnTransparent){
                this.isTransparent = true;
                this.hide();
            }
        } else if(this.isTransparent) {
            this.isTransparent = false;
            this.show();
        }
    },
    /**
     * @function 
     * Initializes frame related properties.
     *
     * @param {number} num
     * current frame number in Layer's time
     * 
     */
    checkLayerLimits: function(num) {
        if(this.data.ip - this.data.st <= num && this.data.op - this.data.st > num)
        {
            if(this.isInRange !== true){
                this.globalData._mdf = true;
                this._mdf = true;
                this.isInRange = true;
                this.show();
            }
        } else {
            if(this.isInRange !== false){
                this.globalData._mdf = true;
                this.isInRange = false;
                this.hide();
            }
        }
    },
    renderRenderable: function() {
        var i, len = this.renderableComponents.length;
        for(i = 0; i < len; i += 1) {
            this.renderableComponents[i].renderFrame(this._isFirstFrame);
        }
        /*this.maskManager.renderFrame(this.finalTransform.mat);
        this.renderableEffectsManager.renderFrame(this._isFirstFrame);*/
    },
    sourceRectAtTime: function(){
        return {
            top:0,
            left:0,
            width:100,
            height:100
        };
    },
    getLayerSize: function(){
        if(this.data.ty === 5){
            return {w:this.data.textData.width,h:this.data.textData.height};
        }else{
            return {w:this.data.width,h:this.data.height};
        }
    }
};
function RenderableDOMElement() {}

(function(){
    var _prototype = {
        initElement: function(data,globalData,comp) {
            this.initFrame();
            this.initBaseData(data, globalData, comp);
            this.initTransform(data, globalData, comp);
            this.initHierarchy();
            this.initRenderable();
            this.initRendererElement();
            this.createContainerElements();
            this.createRenderableComponents();
            this.createContent();
            this.hide();
        },
        hide: function(){
            if (!this.hidden && (!this.isInRange || this.isTransparent)) {
                var elem = this.baseElement || this.layerElement;
                elem.style.display = 'none';
                this.hidden = true;
            }
        },
        show: function(){
            if (this.isInRange && !this.isTransparent){
                if (!this.data.hd) {
                    var elem = this.baseElement || this.layerElement;
                    elem.style.display = 'block';
                }
                this.hidden = false;
                this._isFirstFrame = true;
            }
        },
        renderFrame: function() {
            //If it is exported as hidden (data.hd === true) no need to render
            //If it is not visible no need to render
            if (this.data.hd || this.hidden) {
                return;
            }
            this.renderTransform();
            this.renderRenderable();
            this.renderElement();
            this.renderInnerContent();
            if (this._isFirstFrame) {
                this._isFirstFrame = false;
            }
        },
        renderInnerContent: function() {},
        prepareFrame: function(num) {
            this._mdf = false;
            this.prepareRenderableFrame(num);
            this.prepareProperties(num, this.isInRange);
            this.checkTransparency();
        },
        destroy: function(){
            this.innerElem =  null;
            this.destroyBaseElement();
        }
    };
    extendPrototype([RenderableElement, createProxyFunction(_prototype)], RenderableDOMElement);
}());
function ProcessedElement(element, position) {
	this.elem = element;
	this.pos = position;
}
function SVGStyleData(data, level) {
	this.data = data;
	this.type = data.ty;
	this.d = '';
	this.lvl = level;
	this._mdf = false;
	this.closed = data.hd === true;
	this.pElem = createNS('path');
	this.msElem = null;
}

SVGStyleData.prototype.reset = function() {
	this.d = '';
	this._mdf = false;
};
function SVGShapeData(transformers, level, shape) {
    this.caches = [];
    this.styles = [];
    this.transformers = transformers;
    this.lStr = '';
    this.sh = shape;
    this.lvl = level;
    //TODO find if there are some cases where _isAnimated can be false. 
    // For now, since shapes add up with other shapes. They have to be calculated every time.
    // One way of finding out is checking if all styles associated to this shape depend only of this shape
    this._isAnimated = !!shape.k;
    // TODO: commenting this for now since all shapes are animated
    var i = 0, len = transformers.length;
    while(i < len) {
    	if(transformers[i].mProps.dynamicProperties.length) {
    		this._isAnimated = true;
    		break;
    	}
    	i += 1;
    }
}

SVGShapeData.prototype.setAsAnimated = function() {
    this._isAnimated = true;
}
function SVGTransformData(mProps, op, container) {
	this.transform = {
		mProps: mProps,
		op: op,
		container: container
	};
	this.elements = [];
    this._isAnimated = this.transform.mProps.dynamicProperties.length || this.transform.op.effectsSequence.length;
}
function SVGStrokeStyleData(elem, data, styleOb){
	this.initDynamicPropertyContainer(elem);
	this.getValue = this.iterateDynamicProperties;
	this.o = PropertyFactory.getProp(elem,data.o,0,0.01,this);
	this.w = PropertyFactory.getProp(elem,data.w,0,null,this);
	this.d = new DashProperty(elem,data.d||{},'svg',this);
	this.c = PropertyFactory.getProp(elem,data.c,1,255,this);
	this.style = styleOb;
    this._isAnimated = !!this._isAnimated;
}

extendPrototype([DynamicPropertyContainer], SVGStrokeStyleData);
function SVGFillStyleData(elem, data, styleOb){
	this.initDynamicPropertyContainer(elem);
	this.getValue = this.iterateDynamicProperties;
	this.o = PropertyFactory.getProp(elem,data.o,0,0.01,this);
	this.c = PropertyFactory.getProp(elem,data.c,1,255,this);
	this.style = styleOb;
}

extendPrototype([DynamicPropertyContainer], SVGFillStyleData);
function SVGGradientFillStyleData(elem, data, styleOb){
    this.initDynamicPropertyContainer(elem);
    this.getValue = this.iterateDynamicProperties;
    this.initGradientData(elem, data, styleOb);
}

SVGGradientFillStyleData.prototype.initGradientData = function(elem, data, styleOb){
    this.o = PropertyFactory.getProp(elem,data.o,0,0.01,this);
    this.s = PropertyFactory.getProp(elem,data.s,1,null,this);
    this.e = PropertyFactory.getProp(elem,data.e,1,null,this);
    this.h = PropertyFactory.getProp(elem,data.h||{k:0},0,0.01,this);
    this.a = PropertyFactory.getProp(elem,data.a||{k:0},0,degToRads,this);
    this.g = new GradientProperty(elem,data.g,this);
    this.style = styleOb;
    this.stops = [];
    this.setGradientData(styleOb.pElem, data);
    this.setGradientOpacity(data, styleOb);
    this._isAnimated = !!this._isAnimated;

};

SVGGradientFillStyleData.prototype.setGradientData = function(pathElement,data){

    var gradientId = createElementID();
    var gfill = createNS(data.t === 1 ? 'linearGradient' : 'radialGradient');
    gfill.setAttribute('id',gradientId);
    gfill.setAttribute('spreadMethod','pad');
    gfill.setAttribute('gradientUnits','userSpaceOnUse');
    var stops = [];
    var stop, j, jLen;
    jLen = data.g.p*4;
    for(j=0;j<jLen;j+=4){
        stop = createNS('stop');
        gfill.appendChild(stop);
        stops.push(stop);
    }
    pathElement.setAttribute( data.ty === 'gf' ? 'fill':'stroke','url(' + locationHref + '#'+gradientId+')');
    
    this.gf = gfill;
    this.cst = stops;
};

SVGGradientFillStyleData.prototype.setGradientOpacity = function(data, styleOb){
    if(this.g._hasOpacity && !this.g._collapsable){
        var stop, j, jLen;
        var mask = createNS("mask");
        var maskElement = createNS( 'path');
        mask.appendChild(maskElement);
        var opacityId = createElementID();
        var maskId = createElementID();
        mask.setAttribute('id',maskId);
        var opFill = createNS(data.t === 1 ? 'linearGradient' : 'radialGradient');
        opFill.setAttribute('id',opacityId);
        opFill.setAttribute('spreadMethod','pad');
        opFill.setAttribute('gradientUnits','userSpaceOnUse');
        jLen = data.g.k.k[0].s ? data.g.k.k[0].s.length : data.g.k.k.length;
        var stops = this.stops;
        for(j=data.g.p*4;j<jLen;j+=2){
            stop = createNS('stop');
            stop.setAttribute('stop-color','rgb(255,255,255)');
            opFill.appendChild(stop);
            stops.push(stop);
        }
        maskElement.setAttribute( data.ty === 'gf' ? 'fill':'stroke','url(' + locationHref + '#'+opacityId+')');
        this.of = opFill;
        this.ms = mask;
        this.ost = stops;
        this.maskId = maskId;
        styleOb.msElem = maskElement;
    }
};

extendPrototype([DynamicPropertyContainer], SVGGradientFillStyleData);
function SVGGradientStrokeStyleData(elem, data, styleOb){
	this.initDynamicPropertyContainer(elem);
	this.getValue = this.iterateDynamicProperties;
	this.w = PropertyFactory.getProp(elem,data.w,0,null,this);
	this.d = new DashProperty(elem,data.d||{},'svg',this);
    this.initGradientData(elem, data, styleOb);
    this._isAnimated = !!this._isAnimated;
}

extendPrototype([SVGGradientFillStyleData, DynamicPropertyContainer], SVGGradientStrokeStyleData);
function ShapeGroupData() {
	this.it = [];
    this.prevViewData = [];
    this.gr = createNS('g');
}
var SVGElementsRenderer = (function() {
	var _identityMatrix = new Matrix();
	var _matrixHelper = new Matrix();

	var ob = {
		createRenderFunction: createRenderFunction
	}

	function createRenderFunction(data) {
	    var ty = data.ty;
	    switch(data.ty) {
	        case 'fl':
	        return renderFill;
	        case 'gf':
	        return renderGradient;
	        case 'gs':
	        return renderGradientStroke;
	        case 'st':
	        return renderStroke;
	        case 'sh':
	        case 'el':
	        case 'rc':
	        case 'sr':
	        return renderPath;
	        case 'tr':
	        return renderContentTransform;
	    }
	}

	function renderContentTransform(styleData, itemData, isFirstFrame) {
	    if(isFirstFrame || itemData.transform.op._mdf){
	        itemData.transform.container.setAttribute('opacity',itemData.transform.op.v);
	    }
	    if(isFirstFrame || itemData.transform.mProps._mdf){
	        itemData.transform.container.setAttribute('transform',itemData.transform.mProps.v.to2dCSS());
	    }
	}

	function renderPath(styleData, itemData, isFirstFrame) {
	    var j, jLen,pathStringTransformed,redraw,pathNodes,l, lLen = itemData.styles.length;
	    var lvl = itemData.lvl;
	    var paths, mat, props, iterations, k;
	    for(l=0;l<lLen;l+=1){
	        redraw = itemData.sh._mdf || isFirstFrame;
	        if(itemData.styles[l].lvl < lvl){
	            mat = _matrixHelper.reset();
	            iterations = lvl - itemData.styles[l].lvl;
	            k = itemData.transformers.length-1;
	            while(!redraw && iterations > 0) {
	                redraw = itemData.transformers[k].mProps._mdf || redraw;
	                iterations --;
	                k --;
	            }
	            if(redraw) {
	                iterations = lvl - itemData.styles[l].lvl;
	                k = itemData.transformers.length-1;
	                while(iterations > 0) {
	                    props = itemData.transformers[k].mProps.v.props;
	                    mat.transform(props[0],props[1],props[2],props[3],props[4],props[5],props[6],props[7],props[8],props[9],props[10],props[11],props[12],props[13],props[14],props[15]);
	                    iterations --;
	                    k --;
	                }
	            }
	        } else {
	            mat = _identityMatrix;
	        }
	        paths = itemData.sh.paths;
	        jLen = paths._length;
	        if(redraw){
	            pathStringTransformed = '';
	            for(j=0;j<jLen;j+=1){
	                pathNodes = paths.shapes[j];
	                if(pathNodes && pathNodes._length){
	                    pathStringTransformed += buildShapeString(pathNodes, pathNodes._length, pathNodes.c, mat);
	                }
	            }
	            itemData.caches[l] = pathStringTransformed;
	        } else {
	            pathStringTransformed = itemData.caches[l];
	        }
	        itemData.styles[l].d += styleData.hd === true ? '' : pathStringTransformed;
	        itemData.styles[l]._mdf = redraw || itemData.styles[l]._mdf;
	    }
	}

	function renderFill (styleData,itemData, isFirstFrame){
	    var styleElem = itemData.style;

	    if(itemData.c._mdf || isFirstFrame){
	        styleElem.pElem.setAttribute('fill','rgb('+bm_floor(itemData.c.v[0])+','+bm_floor(itemData.c.v[1])+','+bm_floor(itemData.c.v[2])+')');
	    }
	    if(itemData.o._mdf || isFirstFrame){
	        styleElem.pElem.setAttribute('fill-opacity',itemData.o.v);
	    }
	};

	function renderGradientStroke (styleData, itemData, isFirstFrame) {
	    renderGradient(styleData, itemData, isFirstFrame);
	    renderStroke(styleData, itemData, isFirstFrame);
	}

	function renderGradient(styleData, itemData, isFirstFrame) {
	    var gfill = itemData.gf;
	    var hasOpacity = itemData.g._hasOpacity;
	    var pt1 = itemData.s.v, pt2 = itemData.e.v;

	    if (itemData.o._mdf || isFirstFrame) {
	        var attr = styleData.ty === 'gf' ? 'fill-opacity' : 'stroke-opacity';
	        itemData.style.pElem.setAttribute(attr, itemData.o.v);
	    }
	    if (itemData.s._mdf || isFirstFrame) {
	        var attr1 = styleData.t === 1 ? 'x1' : 'cx';
	        var attr2 = attr1 === 'x1' ? 'y1' : 'cy';
	        gfill.setAttribute(attr1, pt1[0]);
	        gfill.setAttribute(attr2, pt1[1]);
	        if (hasOpacity && !itemData.g._collapsable) {
	            itemData.of.setAttribute(attr1, pt1[0]);
	            itemData.of.setAttribute(attr2, pt1[1]);
	        }
	    }
	    var stops, i, len, stop;
	    if (itemData.g._cmdf || isFirstFrame) {
	        stops = itemData.cst;
	        var cValues = itemData.g.c;
	        len = stops.length;
	        for (i = 0; i < len; i += 1){
	            stop = stops[i];
	            stop.setAttribute('offset', cValues[i * 4] + '%');
	            stop.setAttribute('stop-color','rgb('+ cValues[i * 4 + 1] + ',' + cValues[i * 4 + 2] + ','+cValues[i * 4 + 3] + ')');
	        }
	    }
	    if (hasOpacity && (itemData.g._omdf || isFirstFrame)) {
	        var oValues = itemData.g.o;
	        if(itemData.g._collapsable) {
	            stops = itemData.cst;
	        } else {
	            stops = itemData.ost;
	        }
	        len = stops.length;
	        for (i = 0; i < len; i += 1) {
	            stop = stops[i];
	            if(!itemData.g._collapsable) {
	                stop.setAttribute('offset', oValues[i * 2] + '%');
	            }
	            stop.setAttribute('stop-opacity', oValues[i * 2 + 1]);
	        }
	    }
	    if (styleData.t === 1) {
	        if (itemData.e._mdf  || isFirstFrame) {
	            gfill.setAttribute('x2', pt2[0]);
	            gfill.setAttribute('y2', pt2[1]);
	            if (hasOpacity && !itemData.g._collapsable) {
	                itemData.of.setAttribute('x2', pt2[0]);
	                itemData.of.setAttribute('y2', pt2[1]);
	            }
	        }
	    } else {
	        var rad;
	        if (itemData.s._mdf || itemData.e._mdf || isFirstFrame) {
	            rad = Math.sqrt(Math.pow(pt1[0] - pt2[0], 2) + Math.pow(pt1[1] - pt2[1], 2));
	            gfill.setAttribute('r', rad);
	            if(hasOpacity && !itemData.g._collapsable){
	                itemData.of.setAttribute('r', rad);
	            }
	        }
	        if (itemData.e._mdf || itemData.h._mdf || itemData.a._mdf || isFirstFrame) {
	            if (!rad) {
	                rad = Math.sqrt(Math.pow(pt1[0] - pt2[0], 2) + Math.pow(pt1[1] - pt2[1], 2));
	            }
	            var ang = Math.atan2(pt2[1] - pt1[1], pt2[0] - pt1[0]);

	            var percent = itemData.h.v >= 1 ? 0.99 : itemData.h.v <= -1 ? -0.99: itemData.h.v;
	            var dist = rad * percent;
	            var x = Math.cos(ang + itemData.a.v) * dist + pt1[0];
	            var y = Math.sin(ang + itemData.a.v) * dist + pt1[1];
	            gfill.setAttribute('fx', x);
	            gfill.setAttribute('fy', y);
	            if (hasOpacity && !itemData.g._collapsable) {
	                itemData.of.setAttribute('fx', x);
	                itemData.of.setAttribute('fy', y);
	            }
	        }
	        //gfill.setAttribute('fy','200');
	    }
	};

	function renderStroke(styleData, itemData, isFirstFrame) {
	    var styleElem = itemData.style;
	    var d = itemData.d;
	    if (d && (d._mdf || isFirstFrame) && d.dashStr) {
	        styleElem.pElem.setAttribute('stroke-dasharray', d.dashStr);
	        styleElem.pElem.setAttribute('stroke-dashoffset', d.dashoffset[0]);
	    }
	    if(itemData.c && (itemData.c._mdf || isFirstFrame)){
	        styleElem.pElem.setAttribute('stroke','rgb(' + bm_floor(itemData.c.v[0]) + ',' + bm_floor(itemData.c.v[1]) + ',' + bm_floor(itemData.c.v[2]) + ')');
	    }
	    if(itemData.o._mdf || isFirstFrame){
	        styleElem.pElem.setAttribute('stroke-opacity', itemData.o.v);
	    }
	    if(itemData.w._mdf || isFirstFrame){
	        styleElem.pElem.setAttribute('stroke-width', itemData.w.v);
	        if(styleElem.msElem){
	            styleElem.msElem.setAttribute('stroke-width', itemData.w.v);
	        }
	    }
	};

	return ob;
}())
function ShapeTransformManager() {
	this.sequences = {};
	this.sequenceList = [];
    this.transform_key_count = 0;
}

ShapeTransformManager.prototype = {
	addTransformSequence: function(transforms) {
		var i, len = transforms.length;
		var key = '_';
		for(i = 0; i < len; i += 1) {
			key += transforms[i].transform.key + '_';
		}
		var sequence = this.sequences[key];
		if(!sequence) {
			sequence = {
				transforms: [].concat(transforms),
				finalTransform: new Matrix(),
				_mdf: false
			};
			this.sequences[key] = sequence;
			this.sequenceList.push(sequence);
		}
		return sequence;
	},
	processSequence: function(sequence, isFirstFrame) {
		var i = 0, len = sequence.transforms.length, _mdf = isFirstFrame;
		while (i < len && !isFirstFrame) {
			if (sequence.transforms[i].transform.mProps._mdf) {
				_mdf = true;
				break;
			}
			i += 1
		}
		if (_mdf) {
			var props;
			sequence.finalTransform.reset();
			for (i = len - 1; i >= 0; i -= 1) {
		        props = sequence.transforms[i].transform.mProps.v.props;
		        sequence.finalTransform.transform(props[0],props[1],props[2],props[3],props[4],props[5],props[6],props[7],props[8],props[9],props[10],props[11],props[12],props[13],props[14],props[15]);
			}
		}
		sequence._mdf = _mdf;
		
	},
	processSequences: function(isFirstFrame) {
		var i, len = this.sequenceList.length;
		for (i = 0; i < len; i += 1) {
			this.processSequence(this.sequenceList[i], isFirstFrame);
		}

	},
	getNewKey: function() {
		return '_' + this.transform_key_count++;
	}
}
function CVShapeData(element, data, styles, transformsManager) {
    this.styledShapes = [];
    this.tr = [0,0,0,0,0,0];
    var ty = 4;
    if(data.ty == 'rc'){
        ty = 5;
    }else if(data.ty == 'el'){
        ty = 6;
    }else if(data.ty == 'sr'){
        ty = 7;
    }
    this.sh = ShapePropertyFactory.getShapeProp(element,data,ty,element);
    var i , len = styles.length,styledShape;
    for (i = 0; i < len; i += 1) {
        if (!styles[i].closed) {
            styledShape = {
                transforms: transformsManager.addTransformSequence(styles[i].transforms),
                trNodes: []
            }
            this.styledShapes.push(styledShape);
            styles[i].elements.push(styledShape);
        }
    }
}

CVShapeData.prototype.setAsAnimated = SVGShapeData.prototype.setAsAnimated;
function BaseElement(){
}

BaseElement.prototype = {
    checkMasks: function(){
        if(!this.data.hasMask){
            return false;
        }
        var i = 0, len = this.data.masksProperties.length;
        while(i<len) {
            if((this.data.masksProperties[i].mode !== 'n' && this.data.masksProperties[i].cl !== false)) {
                return true;
            }
            i += 1;
        }
        return false;
    },
    initExpressions: function(){
        this.layerInterface = LayerExpressionInterface(this);
        if(this.data.hasMask && this.maskManager) {
            this.layerInterface.registerMaskInterface(this.maskManager);
        }
        var effectsInterface = EffectsExpressionInterface.createEffectsInterface(this,this.layerInterface);
        this.layerInterface.registerEffectsInterface(effectsInterface);

        if(this.data.ty === 0 || this.data.xt){
            this.compInterface = CompExpressionInterface(this);
        } else if(this.data.ty === 4){
            this.layerInterface.shapeInterface = ShapeExpressionInterface(this.shapesData,this.itemsData,this.layerInterface);
            this.layerInterface.content = this.layerInterface.shapeInterface;
        } else if(this.data.ty === 5){
            this.layerInterface.textInterface = TextExpressionInterface(this);
            this.layerInterface.text = this.layerInterface.textInterface;
        }
    },
    setBlendMode: function(){
        var blendModeValue = getBlendMode(this.data.bm);
        var elem = this.baseElement || this.layerElement;

        elem.style['mix-blend-mode'] = blendModeValue;
    },
    initBaseData: function(data, globalData, comp){
        this.globalData = globalData;
        this.comp = comp;
        this.data = data;
        this.layerId = createElementID();
        
        //Stretch factor for old animations missing this property.
        if(!this.data.sr){
            this.data.sr = 1;
        }
        // effects manager
        this.effectsManager = new EffectsManager(this.data,this,this.dynamicProperties);
        
    },
    getType: function(){
        return this.type;
    }
    ,sourceRectAtTime: function(){}
}
function NullElement(data,globalData,comp){
    this.initFrame();
	this.initBaseData(data, globalData, comp);
    this.initFrame();
    this.initTransform(data, globalData, comp);
    this.initHierarchy();
}

NullElement.prototype.prepareFrame = function(num) {
    this.prepareProperties(num, true);
};

NullElement.prototype.renderFrame = function() {
};

NullElement.prototype.getBaseElement = function() {
	return null;
};

NullElement.prototype.destroy = function() {
};

NullElement.prototype.sourceRectAtTime = function() {
};

NullElement.prototype.hide = function() {
};

extendPrototype([BaseElement,TransformElement,HierarchyElement,FrameElement], NullElement);

function SVGBaseElement(){
}

SVGBaseElement.prototype = {
    initRendererElement: function() {
        this.layerElement = createNS('g');
    },
    createContainerElements: function(){
        this.matteElement = createNS('g');
        this.transformedElement = this.layerElement;
        this.maskedElement = this.layerElement;
        this._sizeChanged = false;
        var layerElementParent = null;
        //If this layer acts as a mask for the following layer
        var filId, fil, gg;
        if (this.data.td) {
            if (this.data.td == 3 || this.data.td == 1) {
                var masker = createNS('mask');
                masker.setAttribute('id', this.layerId);
                masker.setAttribute('mask-type', this.data.td == 3 ? 'luminance' : 'alpha');
                masker.appendChild(this.layerElement);
                layerElementParent = masker;
                this.globalData.defs.appendChild(masker);
                // This is only for IE and Edge when mask if of type alpha
                if (!featureSupport.maskType && this.data.td == 1) {
                    masker.setAttribute('mask-type', 'luminance');
                    filId = createElementID();
                    fil = filtersFactory.createFilter(filId);
                    this.globalData.defs.appendChild(fil);
                    fil.appendChild(filtersFactory.createAlphaToLuminanceFilter());
                    gg = createNS('g');
                    gg.appendChild(this.layerElement);
                    layerElementParent = gg;
                    masker.appendChild(gg);
                    gg.setAttribute('filter','url(' + locationHref + '#' + filId + ')');
                }
            } else if(this.data.td == 2) {
                var maskGroup = createNS('mask');
                maskGroup.setAttribute('id', this.layerId);
                maskGroup.setAttribute('mask-type','alpha');
                var maskGrouper = createNS('g');
                maskGroup.appendChild(maskGrouper);
                filId = createElementID();
                fil = filtersFactory.createFilter(filId);
                ////

                // This solution doesn't work on Android when meta tag with viewport attribute is set
                /*var feColorMatrix = createNS('feColorMatrix');
                feColorMatrix.setAttribute('type', 'matrix');
                feColorMatrix.setAttribute('color-interpolation-filters', 'sRGB');
                feColorMatrix.setAttribute('values','1 0 0 0 0 0 1 0 0 0 0 0 1 0 0 0 0 0 -1 1');
                fil.appendChild(feColorMatrix);*/
                ////
                var feCTr = createNS('feComponentTransfer');
                feCTr.setAttribute('in','SourceGraphic');
                fil.appendChild(feCTr);
                var feFunc = createNS('feFuncA');
                feFunc.setAttribute('type','table');
                feFunc.setAttribute('tableValues','1.0 0.0');
                feCTr.appendChild(feFunc);
                ////
                this.globalData.defs.appendChild(fil);
                var alphaRect = createNS('rect');
                alphaRect.setAttribute('width',  this.comp.data.w);
                alphaRect.setAttribute('height', this.comp.data.h);
                alphaRect.setAttribute('x','0');
                alphaRect.setAttribute('y','0');
                alphaRect.setAttribute('fill','#ffffff');
                alphaRect.setAttribute('opacity','0');
                maskGrouper.setAttribute('filter', 'url(' + locationHref + '#'+filId+')');
                maskGrouper.appendChild(alphaRect);
                maskGrouper.appendChild(this.layerElement);
                layerElementParent = maskGrouper;
                if (!featureSupport.maskType) {
                    maskGroup.setAttribute('mask-type', 'luminance');
                    fil.appendChild(filtersFactory.createAlphaToLuminanceFilter());
                    gg = createNS('g');
                    maskGrouper.appendChild(alphaRect);
                    gg.appendChild(this.layerElement);
                    layerElementParent = gg;
                    maskGrouper.appendChild(gg);
                }
                this.globalData.defs.appendChild(maskGroup);
            }
        } else if (this.data.tt) {
            this.matteElement.appendChild(this.layerElement);
            layerElementParent = this.matteElement;
            this.baseElement = this.matteElement;
        } else {
            this.baseElement = this.layerElement;
        }
        if (this.data.ln) {
            this.layerElement.setAttribute('id', this.data.ln);
        }
        if (this.data.cl) {
            this.layerElement.setAttribute('class', this.data.cl);
        }
        //Clipping compositions to hide content that exceeds boundaries. If collapsed transformations is on, component should not be clipped
        if (this.data.ty === 0 && !this.data.hd) {
            var cp = createNS( 'clipPath');
            var pt = createNS('path');
            pt.setAttribute('d','M0,0 L' + this.data.w + ',0' + ' L' + this.data.w + ',' + this.data.h + ' L0,' + this.data.h + 'z');
            var clipId = createElementID();
            cp.setAttribute('id',clipId);
            cp.appendChild(pt);
            this.globalData.defs.appendChild(cp);

            if (this.checkMasks()) {
                var cpGroup = createNS('g');
                cpGroup.setAttribute('clip-path','url(' + locationHref + '#'+clipId + ')');
                cpGroup.appendChild(this.layerElement);
                this.transformedElement = cpGroup;
                if (layerElementParent) {
                    layerElementParent.appendChild(this.transformedElement);
                } else {
                    this.baseElement = this.transformedElement;
                }
            } else {
                this.layerElement.setAttribute('clip-path','url(' + locationHref + '#'+clipId+')');
            }
            
        }
        if (this.data.bm !== 0) {
            this.setBlendMode();
        }

    },
    renderElement: function() {
        if (this.finalTransform._matMdf) {
            this.transformedElement.setAttribute('transform', this.finalTransform.mat.to2dCSS());
        }
        if (this.finalTransform._opMdf) {
            this.transformedElement.setAttribute('opacity', this.finalTransform.mProp.o.v);
        }
    },
    destroyBaseElement: function() {
        this.layerElement = null;
        this.matteElement = null;
        this.maskManager.destroy();
    },
    getBaseElement: function() {
        if (this.data.hd) {
            return null;
        }
        return this.baseElement;
    },
    createRenderableComponents: function() {
        this.maskManager = new MaskElement(this.data, this, this.globalData);
        this.renderableEffectsManager = new SVGEffects(this);
    },
    setMatte: function(id) {
        if (!this.matteElement) {
            return;
        }
        this.matteElement.setAttribute("mask", "url(" + locationHref + "#" + id + ")");
    }
};
function IShapeElement(){
}

IShapeElement.prototype = {
    addShapeToModifiers: function(data) {
        var i, len = this.shapeModifiers.length;
        for(i=0;i<len;i+=1){
            this.shapeModifiers[i].addShape(data);
        }
    },
    isShapeInAnimatedModifiers: function(data) {
        var i = 0, len = this.shapeModifiers.length;
        while(i < len) {
            if(this.shapeModifiers[i].isAnimatedWithShape(data)) {
                return true;
            }
        }
        return false;
    },
    renderModifiers: function() {
        if(!this.shapeModifiers.length){
            return;
        }
        var i, len = this.shapes.length;
        for(i=0;i<len;i+=1){
            this.shapes[i].sh.reset();
        }

        len = this.shapeModifiers.length;
        for(i=len-1;i>=0;i-=1){
            this.shapeModifiers[i].processShapes(this._isFirstFrame);
        }
    },
    lcEnum: {
        '1': 'butt',
        '2': 'round',
        '3': 'square'
    },
    ljEnum: {
        '1': 'miter',
        '2': 'round',
        '3': 'bevel'
    },
    searchProcessedElement: function(elem){
        var elements = this.processedElements;
        var i = 0, len = elements.length;
        while (i < len) {
            if (elements[i].elem === elem) {
                return elements[i].pos;
            }
            i += 1;
        }
        return 0;
    },
    addProcessedElement: function(elem, pos){
        var elements = this.processedElements;
        var i = elements.length;
        while(i) {
            i -= 1;
            if (elements[i].elem === elem) {
                elements[i].pos = pos;
                return;
            }
        }
        elements.push(new ProcessedElement(elem, pos));
    },
    prepareFrame: function(num) {
        this.prepareRenderableFrame(num);
        this.prepareProperties(num, this.isInRange);
    }
};
function ITextElement(){
}

ITextElement.prototype.initElement = function(data,globalData,comp){
    this.lettersChangedFlag = true;
    this.initFrame();
    this.initBaseData(data, globalData, comp);
    this.textProperty = new TextProperty(this, data.t, this.dynamicProperties);
    this.textAnimator = new TextAnimatorProperty(data.t, this.renderType, this);
    this.initTransform(data, globalData, comp);
    this.initHierarchy();
    this.initRenderable();
    this.initRendererElement();
    this.createContainerElements();
    this.createRenderableComponents();
    this.createContent();
    this.hide();
    this.textAnimator.searchProperties(this.dynamicProperties);
};

ITextElement.prototype.prepareFrame = function(num) {
    this._mdf = false;
    this.prepareRenderableFrame(num);
    this.prepareProperties(num, this.isInRange);
    if(this.textProperty._mdf || this.textProperty._isFirstFrame) {
        this.buildNewText();
        this.textProperty._isFirstFrame = false;
        this.textProperty._mdf = false;
    }
};

ITextElement.prototype.createPathShape = function(matrixHelper, shapes) {
    var j,jLen = shapes.length;
    var k, kLen, pathNodes;
    var shapeStr = '';
    for(j=0;j<jLen;j+=1){
        pathNodes = shapes[j].ks.k;
        shapeStr += buildShapeString(pathNodes, pathNodes.i.length, true, matrixHelper);
    }
    return shapeStr;
};

ITextElement.prototype.updateDocumentData = function(newData, index) {
    this.textProperty.updateDocumentData(newData, index);
};

ITextElement.prototype.canResizeFont = function(_canResize) {
    this.textProperty.canResizeFont(_canResize);
};

ITextElement.prototype.setMinimumFontSize = function(_fontSize) {
    this.textProperty.setMinimumFontSize(_fontSize);
};

ITextElement.prototype.applyTextPropertiesToMatrix = function(documentData, matrixHelper, lineNumber, xPos, yPos) {
    if(documentData.ps){
        matrixHelper.translate(documentData.ps[0],documentData.ps[1] + documentData.ascent,0);
    }
    matrixHelper.translate(0,-documentData.ls,0);
    switch(documentData.j){
        case 1:
            matrixHelper.translate(documentData.justifyOffset + (documentData.boxWidth - documentData.lineWidths[lineNumber]),0,0);
            break;
        case 2:
            matrixHelper.translate(documentData.justifyOffset + (documentData.boxWidth - documentData.lineWidths[lineNumber] )/2,0,0);
            break;
    }
    matrixHelper.translate(xPos, yPos, 0);
};


ITextElement.prototype.buildColor = function(colorData) {
    return 'rgb(' + Math.round(colorData[0]*255) + ',' + Math.round(colorData[1]*255) + ',' + Math.round(colorData[2]*255) + ')';
};

ITextElement.prototype.emptyProp = new LetterProps();

ITextElement.prototype.destroy = function(){
    
};
function ICompElement(){}

extendPrototype([BaseElement, TransformElement, HierarchyElement, FrameElement, RenderableDOMElement], ICompElement);

ICompElement.prototype.initElement = function(data,globalData,comp) {
    this.initFrame();
    this.initBaseData(data, globalData, comp);
    this.initTransform(data, globalData, comp);
    this.initRenderable();
    this.initHierarchy();
    this.initRendererElement();
    this.createContainerElements();
    this.createRenderableComponents();
    if(this.data.xt || !globalData.progressiveLoad){
        this.buildAllItems();
    }
    this.hide();
};

/*ICompElement.prototype.hide = function(){
    if(!this.hidden){
        this.hideElement();
        var i,len = this.elements.length;
        for( i = 0; i < len; i+=1 ){
            if(this.elements[i]){
                this.elements[i].hide();
            }
        }
    }
};*/

ICompElement.prototype.prepareFrame = function(num){
    this._mdf = false;
    this.prepareRenderableFrame(num);
    this.prepareProperties(num, this.isInRange);
    if(!this.isInRange && !this.data.xt){
        return;
    }

    if (!this.tm._placeholder) {
        var timeRemapped = this.tm.v;
        if(timeRemapped === this.data.op){
            timeRemapped = this.data.op - 1;
        }
        this.renderedFrame = timeRemapped;
    } else {
        this.renderedFrame = num/this.data.sr;
    }
    var i,len = this.elements.length;
    if(!this.completeLayers){
        this.checkLayers(this.renderedFrame);
    }
    //This iteration needs to be backwards because of how expressions connect between each other
    for( i = len - 1; i >= 0; i -= 1 ){
        if(this.completeLayers || this.elements[i]){
            this.elements[i].prepareFrame(this.renderedFrame - this.layers[i].st);
            if(this.elements[i]._mdf) {
                this._mdf = true;
            }
        }
    }
};

ICompElement.prototype.renderInnerContent = function() {
    var i,len = this.layers.length;
    for( i = 0; i < len; i += 1 ){
        if(this.completeLayers || this.elements[i]){
            this.elements[i].renderFrame();
        }
    }
};

ICompElement.prototype.setElements = function(elems){
    this.elements = elems;
};

ICompElement.prototype.getElements = function(){
    return this.elements;
};

ICompElement.prototype.destroyElements = function(){
    var i,len = this.layers.length;
    for( i = 0; i < len; i+=1 ){
        if(this.elements[i]){
            this.elements[i].destroy();
        }
    }
};

ICompElement.prototype.destroy = function(){
    this.destroyElements();
    this.destroyBaseElement();
};

function IImageElement(data,globalData,comp){
    this.assetData = globalData.getAssetData(data.refId);
    this.initElement(data,globalData,comp);
    this.sourceRect = {top:0,left:0,width:this.assetData.w,height:this.assetData.h};
}

extendPrototype([BaseElement,TransformElement,SVGBaseElement,HierarchyElement,FrameElement,RenderableDOMElement], IImageElement);

IImageElement.prototype.createContent = function(){

    var assetPath = this.globalData.getAssetsPath(this.assetData);

    this.innerElem = createNS('image');
    this.innerElem.setAttribute('width',this.assetData.w+"px");
    this.innerElem.setAttribute('height',this.assetData.h+"px");
    this.innerElem.setAttribute('preserveAspectRatio',this.assetData.pr || this.globalData.renderConfig.imagePreserveAspectRatio);
    this.innerElem.setAttributeNS('http://www.w3.org/1999/xlink','href',assetPath);
    
    this.layerElement.appendChild(this.innerElem);
};

IImageElement.prototype.sourceRectAtTime = function() {
	return this.sourceRect;
}
function ISolidElement(data,globalData,comp){
    this.initElement(data,globalData,comp);
}
extendPrototype([IImageElement], ISolidElement);

ISolidElement.prototype.createContent = function(){

    var rect = createNS('rect');
    ////rect.style.width = this.data.sw;
    ////rect.style.height = this.data.sh;
    ////rect.style.fill = this.data.sc;
    rect.setAttribute('width',this.data.sw);
    rect.setAttribute('height',this.data.sh);
    rect.setAttribute('fill',this.data.sc);
    this.layerElement.appendChild(rect);
};
function SVGCompElement(data,globalData,comp){
    this.layers = data.layers;
    this.supports3d = true;
    this.completeLayers = false;
    this.pendingElements = [];
    this.elements = this.layers ? createSizedArray(this.layers.length) : [];
    //this.layerElement = createNS('g');
    this.initElement(data,globalData,comp);
    this.tm = data.tm ? PropertyFactory.getProp(this,data.tm,0,globalData.frameRate,this) : {_placeholder:true};
}

extendPrototype([SVGRenderer, ICompElement, SVGBaseElement], SVGCompElement);
function SVGTextElement(data,globalData,comp){
    this.textSpans = [];
    this.renderType = 'svg';
    this.initElement(data,globalData,comp);
}

extendPrototype([BaseElement,TransformElement,SVGBaseElement,HierarchyElement,FrameElement,RenderableDOMElement,ITextElement], SVGTextElement);

SVGTextElement.prototype.createContent = function(){

    if (this.data.singleShape && !this.globalData.fontManager.chars) {
        this.textContainer = createNS('text');
    }
};

SVGTextElement.prototype.buildTextContents = function(textArray) {
    var i = 0, len = textArray.length;
    var textContents = [], currentTextContent = '';
    while (i < len) {
        if(textArray[i] === String.fromCharCode(13) || textArray[i] === String.fromCharCode(3)) {
            textContents.push(currentTextContent);
            currentTextContent = '';
        } else {
            currentTextContent += textArray[i];
        }
        i += 1;
    }
    textContents.push(currentTextContent);
    return textContents;
}

SVGTextElement.prototype.buildNewText = function(){
    var i, len;

    var documentData = this.textProperty.currentData;
    this.renderedLetters = createSizedArray(documentData ? documentData.l.length : 0);
    if(documentData.fc) {
        this.layerElement.setAttribute('fill', this.buildColor(documentData.fc));
    }else{
        this.layerElement.setAttribute('fill', 'rgba(0,0,0,0)');
    }
    if(documentData.sc){
        this.layerElement.setAttribute('stroke', this.buildColor(documentData.sc));
        this.layerElement.setAttribute('stroke-width', documentData.sw);
    }
    this.layerElement.setAttribute('font-size', documentData.finalSize);
    var fontData = this.globalData.fontManager.getFontByName(documentData.f);
    if(fontData.fClass){
        this.layerElement.setAttribute('class',fontData.fClass);
    } else {
        this.layerElement.setAttribute('font-family', fontData.fFamily);
        var fWeight = documentData.fWeight, fStyle = documentData.fStyle;
        this.layerElement.setAttribute('font-style', fStyle);
        this.layerElement.setAttribute('font-weight', fWeight);
    }
    this.layerElement.setAttribute('aria-label', documentData.t);

    var letters = documentData.l || [];
    var usesGlyphs = !!this.globalData.fontManager.chars;
    len = letters.length;

    var tSpan;
    var matrixHelper = this.mHelper;
    var shapes, shapeStr = '', singleShape = this.data.singleShape;
    var xPos = 0, yPos = 0, firstLine = true;
    var trackingOffset = documentData.tr/1000*documentData.finalSize;
    if(singleShape && !usesGlyphs && !documentData.sz) {
        var tElement = this.textContainer;
        var justify = 'start';
        switch(documentData.j) {
            case 1:
                justify = 'end';
                break;
            case 2:
                justify = 'middle';
                break;
        }
        tElement.setAttribute('text-anchor',justify);
        tElement.setAttribute('letter-spacing',trackingOffset);
        var textContent = this.buildTextContents(documentData.finalText);
        len = textContent.length;
        yPos = documentData.ps ? documentData.ps[1] + documentData.ascent : 0;
        for ( i = 0; i < len; i += 1) {
            tSpan = this.textSpans[i] || createNS('tspan');
            tSpan.textContent = textContent[i];
            tSpan.setAttribute('x', 0);
            tSpan.setAttribute('y', yPos);
            tSpan.style.display = 'inherit';
            tElement.appendChild(tSpan);
            this.textSpans[i] = tSpan;
            yPos += documentData.finalLineHeight;
        }
        
        this.layerElement.appendChild(tElement);
    } else {
        var cachedSpansLength = this.textSpans.length;
        var shapeData, charData;
        for (i = 0; i < len; i += 1) {
            if(!usesGlyphs || !singleShape || i === 0){
                tSpan = cachedSpansLength > i ? this.textSpans[i] : createNS(usesGlyphs?'path':'text');
                if (cachedSpansLength <= i) {
                    tSpan.setAttribute('stroke-linecap', 'butt');
                    tSpan.setAttribute('stroke-linejoin','round');
                    tSpan.setAttribute('stroke-miterlimit','4');
                    this.textSpans[i] = tSpan;
                    this.layerElement.appendChild(tSpan);
                }
                tSpan.style.display = 'inherit';
            }
            
            matrixHelper.reset();
            matrixHelper.scale(documentData.finalSize / 100, documentData.finalSize / 100);
            if (singleShape) {
                if(letters[i].n) {
                    xPos = -trackingOffset;
                    yPos += documentData.yOffset;
                    yPos += firstLine ? 1 : 0;
                    firstLine = false;
                }
                this.applyTextPropertiesToMatrix(documentData, matrixHelper, letters[i].line, xPos, yPos);
                xPos += letters[i].l || 0;
                //xPos += letters[i].val === ' ' ? 0 : trackingOffset;
                xPos += trackingOffset;
            }
            if(usesGlyphs) {
                charData = this.globalData.fontManager.getCharData(documentData.finalText[i], fontData.fStyle, this.globalData.fontManager.getFontByName(documentData.f).fFamily);
                shapeData = charData && charData.data || {};
                shapes = shapeData.shapes ? shapeData.shapes[0].it : [];
                if(!singleShape){
                    tSpan.setAttribute('d',this.createPathShape(matrixHelper,shapes));
                } else {
                    shapeStr += this.createPathShape(matrixHelper,shapes);
                }
            } else {
                if(singleShape) {
                    tSpan.setAttribute("transform", "translate(" + matrixHelper.props[12] + "," + matrixHelper.props[13] + ")");
                }
                tSpan.textContent = letters[i].val;
                tSpan.setAttributeNS("http://www.w3.org/XML/1998/namespace", "xml:space","preserve");
            }
            //
        }
        if (singleShape && tSpan) {
            tSpan.setAttribute('d',shapeStr);
        }
    }
    while (i < this.textSpans.length){
        this.textSpans[i].style.display = 'none';
        i += 1;
    }
    
    this._sizeChanged = true;
};

SVGTextElement.prototype.sourceRectAtTime = function(time){
    this.prepareFrame(this.comp.renderedFrame - this.data.st);
    this.renderInnerContent();
    if(this._sizeChanged){
        this._sizeChanged = false;
        var textBox = this.layerElement.getBBox();
        this.bbox = {
            top: textBox.y,
            left: textBox.x,
            width: textBox.width,
            height: textBox.height
        };
    }
    return this.bbox;
};

SVGTextElement.prototype.renderInnerContent = function(){

    if(!this.data.singleShape){
        this.textAnimator.getMeasures(this.textProperty.currentData, this.lettersChangedFlag);
        if(this.lettersChangedFlag || this.textAnimator.lettersChangedFlag){
            this._sizeChanged = true;
            var  i,len;
            var renderedLetters = this.textAnimator.renderedLetters;

            var letters = this.textProperty.currentData.l;

            len = letters.length;
            var renderedLetter, textSpan;
            for(i=0;i<len;i+=1){
                if(letters[i].n){
                    continue;
                }
                renderedLetter = renderedLetters[i];
                textSpan = this.textSpans[i];
                if(renderedLetter._mdf.m) {
                    textSpan.setAttribute('transform',renderedLetter.m);
                }
                if(renderedLetter._mdf.o) {
                    textSpan.setAttribute('opacity',renderedLetter.o);
                }
                if(renderedLetter._mdf.sw){
                    textSpan.setAttribute('stroke-width',renderedLetter.sw);
                }
                if(renderedLetter._mdf.sc){
                    textSpan.setAttribute('stroke',renderedLetter.sc);
                }
                if(renderedLetter._mdf.fc){
                    textSpan.setAttribute('fill',renderedLetter.fc);
                }
            }
        }
    }
};

function SVGShapeElement(data,globalData,comp){
    //List of drawable elements
    this.shapes = [];
    // Full shape data
    this.shapesData = data.shapes;
    //List of styles that will be applied to shapes
    this.stylesList = [];
    //List of modifiers that will be applied to shapes
    this.shapeModifiers = [];
    //List of items in shape tree
    this.itemsData = [];
    //List of items in previous shape tree
    this.processedElements = [];
    // List of animated components
    this.animatedContents = [];
    this.initElement(data,globalData,comp);
    //Moving any property that doesn't get too much access after initialization because of v8 way of handling more than 10 properties.
    // List of elements that have been created
    this.prevViewData = [];
    //Moving any property that doesn't get too much access after initialization because of v8 way of handling more than 10 properties.
}

extendPrototype([BaseElement,TransformElement,SVGBaseElement,IShapeElement,HierarchyElement,FrameElement,RenderableDOMElement], SVGShapeElement);

SVGShapeElement.prototype.initSecondaryElement = function() {
};

SVGShapeElement.prototype.identityMatrix = new Matrix();

SVGShapeElement.prototype.buildExpressionInterface = function(){};

SVGShapeElement.prototype.createContent = function(){
    this.searchShapes(this.shapesData,this.itemsData,this.prevViewData,this.layerElement, 0, [], true);
    this.filterUniqueShapes();
};

/*
This method searches for multiple shapes that affect a single element and one of them is animated
*/
SVGShapeElement.prototype.filterUniqueShapes = function(){
    var i, len = this.shapes.length, shape;
    var j, jLen = this.stylesList.length;
    var style, count = 0;
    var tempShapes = [];
    var areAnimated = false;
    for(j = 0; j < jLen; j += 1) {
        style = this.stylesList[j];
        areAnimated = false;
        tempShapes.length = 0;
        for(i = 0; i < len; i += 1) {
            shape = this.shapes[i];
            if(shape.styles.indexOf(style) !== -1) {
                tempShapes.push(shape);
                areAnimated = shape._isAnimated || areAnimated;
            }
        }
        if(tempShapes.length > 1 && areAnimated) {
            this.setShapesAsAnimated(tempShapes);
        }
    }
}

SVGShapeElement.prototype.setShapesAsAnimated = function(shapes){
    var i, len = shapes.length;
    for(i = 0; i < len; i += 1) {
        shapes[i].setAsAnimated();
    }
}

SVGShapeElement.prototype.createStyleElement = function(data, level){
    //TODO: prevent drawing of hidden styles
    var elementData;
    var styleOb = new SVGStyleData(data, level);

    var pathElement = styleOb.pElem;
    if(data.ty === 'st') {
        elementData = new SVGStrokeStyleData(this, data, styleOb);
    } else if(data.ty === 'fl') {
        elementData = new SVGFillStyleData(this, data, styleOb);
    } else if(data.ty === 'gf' || data.ty === 'gs') {
        var gradientConstructor = data.ty === 'gf' ? SVGGradientFillStyleData : SVGGradientStrokeStyleData;
        elementData = new gradientConstructor(this, data, styleOb);
        this.globalData.defs.appendChild(elementData.gf);
        if (elementData.maskId) {
            this.globalData.defs.appendChild(elementData.ms);
            this.globalData.defs.appendChild(elementData.of);
            pathElement.setAttribute('mask','url(' + locationHref + '#' + elementData.maskId + ')');
        }
    }
    
    if(data.ty === 'st' || data.ty === 'gs') {
        pathElement.setAttribute('stroke-linecap', this.lcEnum[data.lc] || 'round');
        pathElement.setAttribute('stroke-linejoin',this.ljEnum[data.lj] || 'round');
        pathElement.setAttribute('fill-opacity','0');
        if(data.lj === 1) {
            pathElement.setAttribute('stroke-miterlimit',data.ml);
        }
    }

    if(data.r === 2) {
        pathElement.setAttribute('fill-rule', 'evenodd');
    }

    if(data.ln){
        pathElement.setAttribute('id',data.ln);
    }
    if(data.cl){
        pathElement.setAttribute('class',data.cl);
    }
    if(data.bm){
        pathElement.style['mix-blend-mode'] = getBlendMode(data.bm);
    }
    this.stylesList.push(styleOb);
    this.addToAnimatedContents(data, elementData);
    return elementData;
};

SVGShapeElement.prototype.createGroupElement = function(data) {
    var elementData = new ShapeGroupData();
    if(data.ln){
        elementData.gr.setAttribute('id',data.ln);
    }
    if(data.cl){
        elementData.gr.setAttribute('class',data.cl);
    }
    if(data.bm){
        elementData.gr.style['mix-blend-mode'] = getBlendMode(data.bm);
    }
    return elementData;
};

SVGShapeElement.prototype.createTransformElement = function(data, container) {
    var transformProperty = TransformPropertyFactory.getTransformProperty(this,data,this);
    var elementData = new SVGTransformData(transformProperty, transformProperty.o, container);
    this.addToAnimatedContents(data, elementData);
    return elementData;
};

SVGShapeElement.prototype.createShapeElement = function(data, ownTransformers, level) {
    var ty = 4;
    if(data.ty === 'rc'){
        ty = 5;
    }else if(data.ty === 'el'){
        ty = 6;
    }else if(data.ty === 'sr'){
        ty = 7;
    }
    var shapeProperty = ShapePropertyFactory.getShapeProp(this,data,ty,this);
    var elementData = new SVGShapeData(ownTransformers, level, shapeProperty);
    this.shapes.push(elementData);
    this.addShapeToModifiers(elementData);
    this.addToAnimatedContents(data, elementData);
    return elementData;
};

SVGShapeElement.prototype.addToAnimatedContents = function(data, element) {
    var i = 0, len = this.animatedContents.length;
    while(i < len) {
        if(this.animatedContents[i].element === element) {
            return;
        }
        i += 1;
    }
    this.animatedContents.push({
        fn: SVGElementsRenderer.createRenderFunction(data),
        element: element,
        data: data
    });
};

SVGShapeElement.prototype.setElementStyles = function(elementData){
    var arr = elementData.styles;
    var j, jLen = this.stylesList.length;
    for (j = 0; j < jLen; j += 1) {
        if (!this.stylesList[j].closed) {
            arr.push(this.stylesList[j]);
        }
    }
};

SVGShapeElement.prototype.reloadShapes = function(){
    this._isFirstFrame = true;
    var i, len = this.itemsData.length;
    for( i = 0; i < len; i += 1) {
        this.prevViewData[i] = this.itemsData[i];
    }
    this.searchShapes(this.shapesData,this.itemsData,this.prevViewData,this.layerElement, 0, [], true);
    this.filterUniqueShapes();
    len = this.dynamicProperties.length;
    for(i = 0; i < len; i += 1) {
        this.dynamicProperties[i].getValue();
    }
    this.renderModifiers();
};

SVGShapeElement.prototype.searchShapes = function(arr,itemsData,prevViewData,container, level, transformers, render){
    var ownTransformers = [].concat(transformers);
    var i, len = arr.length - 1;
    var j, jLen;
    var ownStyles = [], ownModifiers = [], styleOb, currentTransform, modifier, processedPos;
    for(i=len;i>=0;i-=1){
        processedPos = this.searchProcessedElement(arr[i]);
        if(!processedPos){
            arr[i]._render = render;
        } else {
            itemsData[i] = prevViewData[processedPos - 1];
        }
        if(arr[i].ty == 'fl' || arr[i].ty == 'st' || arr[i].ty == 'gf' || arr[i].ty == 'gs'){
            if(!processedPos){
                itemsData[i] = this.createStyleElement(arr[i], level);
            } else {
                itemsData[i].style.closed = false;
            }
            if(arr[i]._render){
                container.appendChild(itemsData[i].style.pElem);
            }
            ownStyles.push(itemsData[i].style);
        }else if(arr[i].ty == 'gr'){
            if(!processedPos){
                itemsData[i] = this.createGroupElement(arr[i]);
            } else {
                jLen = itemsData[i].it.length;
                for(j=0;j<jLen;j+=1){
                    itemsData[i].prevViewData[j] = itemsData[i].it[j];
                }
            }
            this.searchShapes(arr[i].it,itemsData[i].it,itemsData[i].prevViewData,itemsData[i].gr, level + 1, ownTransformers, render);
            if(arr[i]._render){
                container.appendChild(itemsData[i].gr);
            }
        }else if(arr[i].ty == 'tr'){
            if(!processedPos){
                itemsData[i] = this.createTransformElement(arr[i], container);
            }
            currentTransform = itemsData[i].transform;
            ownTransformers.push(currentTransform);
        }else if(arr[i].ty == 'sh' || arr[i].ty == 'rc' || arr[i].ty == 'el' || arr[i].ty == 'sr'){
            if(!processedPos){
                itemsData[i] = this.createShapeElement(arr[i], ownTransformers, level);
            }
            this.setElementStyles(itemsData[i]);

        }else if(arr[i].ty == 'tm' || arr[i].ty == 'rd' || arr[i].ty == 'ms'){
            if(!processedPos){
                modifier = ShapeModifiers.getModifier(arr[i].ty);
                modifier.init(this,arr[i]);
                itemsData[i] = modifier;
                this.shapeModifiers.push(modifier);
            } else {
                modifier = itemsData[i];
                modifier.closed = false;
            }
            ownModifiers.push(modifier);
        }else if(arr[i].ty == 'rp'){
            if(!processedPos){
                modifier = ShapeModifiers.getModifier(arr[i].ty);
                itemsData[i] = modifier;
                modifier.init(this,arr,i,itemsData);
                this.shapeModifiers.push(modifier);
                render = false;
            }else{
                modifier = itemsData[i];
                modifier.closed = true;
            }
            ownModifiers.push(modifier);
        }
        this.addProcessedElement(arr[i], i + 1);
    }
    len = ownStyles.length;
    for(i=0;i<len;i+=1){
        ownStyles[i].closed = true;
    }
    len = ownModifiers.length;
    for(i=0;i<len;i+=1){
        ownModifiers[i].closed = true;
    }
};

SVGShapeElement.prototype.renderInnerContent = function() {
    this.renderModifiers();
    var i, len = this.stylesList.length;
    for(i=0;i<len;i+=1){
        this.stylesList[i].reset();
    }
    this.renderShape();

    for (i = 0; i < len; i += 1) {
        if (this.stylesList[i]._mdf || this._isFirstFrame) {
            if(this.stylesList[i].msElem){
                this.stylesList[i].msElem.setAttribute('d', this.stylesList[i].d);
                //Adding M0 0 fixes same mask bug on all browsers
                this.stylesList[i].d = 'M0 0' + this.stylesList[i].d;
            }
            this.stylesList[i].pElem.setAttribute('d', this.stylesList[i].d || 'M0 0');
        }
    }
};

SVGShapeElement.prototype.renderShape = function() {
    var i, len = this.animatedContents.length;
    var animatedContent;
    for(i = 0; i < len; i += 1) {
        animatedContent = this.animatedContents[i];
        if((this._isFirstFrame || animatedContent.element._isAnimated) && animatedContent.data !== true) {
            animatedContent.fn(animatedContent.data, animatedContent.element, this._isFirstFrame);
        }
    }
}

SVGShapeElement.prototype.destroy = function(){
    this.destroyBaseElement();
    this.shapesData = null;
    this.itemsData = null;
};

function SVGTintFilter(filter, filterManager){
    this.filterManager = filterManager;
    var feColorMatrix = createNS('feColorMatrix');
    feColorMatrix.setAttribute('type','matrix');
    feColorMatrix.setAttribute('color-interpolation-filters','linearRGB');
    feColorMatrix.setAttribute('values','0.3333 0.3333 0.3333 0 0 0.3333 0.3333 0.3333 0 0 0.3333 0.3333 0.3333 0 0 0 0 0 1 0');
    feColorMatrix.setAttribute('result','f1');
    filter.appendChild(feColorMatrix);
    feColorMatrix = createNS('feColorMatrix');
    feColorMatrix.setAttribute('type','matrix');
    feColorMatrix.setAttribute('color-interpolation-filters','sRGB');
    feColorMatrix.setAttribute('values','1 0 0 0 0 0 1 0 0 0 0 0 1 0 0 0 0 0 1 0');
    feColorMatrix.setAttribute('result','f2');
    filter.appendChild(feColorMatrix);
    this.matrixFilter = feColorMatrix;
    if(filterManager.effectElements[2].p.v !== 100 || filterManager.effectElements[2].p.k){
        var feMerge = createNS('feMerge');
        filter.appendChild(feMerge);
        var feMergeNode;
        feMergeNode = createNS('feMergeNode');
        feMergeNode.setAttribute('in','SourceGraphic');
        feMerge.appendChild(feMergeNode);
        feMergeNode = createNS('feMergeNode');
        feMergeNode.setAttribute('in','f2');
        feMerge.appendChild(feMergeNode);
    }
}

SVGTintFilter.prototype.renderFrame = function(forceRender){
    if(forceRender || this.filterManager._mdf){
        var colorBlack = this.filterManager.effectElements[0].p.v;
        var colorWhite = this.filterManager.effectElements[1].p.v;
        var opacity = this.filterManager.effectElements[2].p.v/100;
        this.matrixFilter.setAttribute('values',(colorWhite[0]- colorBlack[0])+' 0 0 0 '+ colorBlack[0] +' '+ (colorWhite[1]- colorBlack[1]) +' 0 0 0 '+ colorBlack[1] +' '+ (colorWhite[2]- colorBlack[2]) +' 0 0 0 '+ colorBlack[2] +' 0 0 0 ' + opacity + ' 0');
    }
};
function SVGFillFilter(filter, filterManager){
    this.filterManager = filterManager;
    var feColorMatrix = createNS('feColorMatrix');
    feColorMatrix.setAttribute('type','matrix');
    feColorMatrix.setAttribute('color-interpolation-filters','sRGB');
    feColorMatrix.setAttribute('values','1 0 0 0 0 0 1 0 0 0 0 0 1 0 0 0 0 0 1 0');
    filter.appendChild(feColorMatrix);
    this.matrixFilter = feColorMatrix;
}
SVGFillFilter.prototype.renderFrame = function(forceRender){
    if(forceRender || this.filterManager._mdf){
        var color = this.filterManager.effectElements[2].p.v;
        var opacity = this.filterManager.effectElements[6].p.v;
        this.matrixFilter.setAttribute('values','0 0 0 0 '+color[0]+' 0 0 0 0 '+color[1]+' 0 0 0 0 '+color[2]+' 0 0 0 '+opacity+' 0');
    }
};
function SVGGaussianBlurEffect(filter, filterManager){
    // Outset the filter region by 100% on all sides to accommodate blur expansion.
    filter.setAttribute('x','-100%');
    filter.setAttribute('y','-100%');
    filter.setAttribute('width','300%');
    filter.setAttribute('height','300%');

    this.filterManager = filterManager;
    var feGaussianBlur = createNS('feGaussianBlur');
    filter.appendChild(feGaussianBlur);
    this.feGaussianBlur = feGaussianBlur;
}

SVGGaussianBlurEffect.prototype.renderFrame = function(forceRender){
    if(forceRender || this.filterManager._mdf){
        // Empirical value, matching AE's blur appearance.
        var kBlurrinessToSigma = 0.3;
        var sigma = this.filterManager.effectElements[0].p.v * kBlurrinessToSigma;

        // Dimensions mapping:
        //
        //   1 -> horizontal & vertical
        //   2 -> horizontal only
        //   3 -> vertical only
        //
        var dimensions = this.filterManager.effectElements[1].p.v;
        var sigmaX = (dimensions == 3) ? 0 : sigma;
        var sigmaY = (dimensions == 2) ? 0 : sigma;

        this.feGaussianBlur.setAttribute('stdDeviation', sigmaX + " " + sigmaY);

        // Repeat edges mapping:
        //
        //   0 -> off -> duplicate
        //   1 -> on  -> wrap
        var edgeMode = (this.filterManager.effectElements[2].p.v == 1) ? 'wrap' : 'duplicate';
        this.feGaussianBlur.setAttribute('edgeMode', edgeMode);
    }
}
function SVGStrokeEffect(elem, filterManager){
    this.initialized = false;
    this.filterManager = filterManager;
    this.elem = elem;
    this.paths = [];
}

SVGStrokeEffect.prototype.initialize = function(){

    var elemChildren = this.elem.layerElement.children || this.elem.layerElement.childNodes;
    var path,groupPath, i, len;
    if(this.filterManager.effectElements[1].p.v === 1){
        len = this.elem.maskManager.masksProperties.length;
        i = 0;
    } else {
        i = this.filterManager.effectElements[0].p.v - 1;
        len = i + 1;
    }
    groupPath = createNS('g'); 
    groupPath.setAttribute('fill','none');
    groupPath.setAttribute('stroke-linecap','round');
    groupPath.setAttribute('stroke-dashoffset',1);
    for(i;i<len;i+=1){
        path = createNS('path');
        groupPath.appendChild(path);
        this.paths.push({p:path,m:i});
    }
    if(this.filterManager.effectElements[10].p.v === 3){
        var mask = createNS('mask');
        var id = createElementID();
        mask.setAttribute('id',id);
        mask.setAttribute('mask-type','alpha');
        mask.appendChild(groupPath);
        this.elem.globalData.defs.appendChild(mask);
        var g = createNS('g');
        g.setAttribute('mask','url(' + locationHref + '#'+id+')');
        while (elemChildren[0]) {
            g.appendChild(elemChildren[0]);
        }
        this.elem.layerElement.appendChild(g);
        this.masker = mask;
        groupPath.setAttribute('stroke','#fff');
    } else if(this.filterManager.effectElements[10].p.v === 1 || this.filterManager.effectElements[10].p.v === 2){
        if(this.filterManager.effectElements[10].p.v === 2){
            elemChildren = this.elem.layerElement.children || this.elem.layerElement.childNodes;
            while(elemChildren.length){
                this.elem.layerElement.removeChild(elemChildren[0]);
            }
        }
        this.elem.layerElement.appendChild(groupPath);
        this.elem.layerElement.removeAttribute('mask');
        groupPath.setAttribute('stroke','#fff');
    }
    this.initialized = true;
    this.pathMasker = groupPath;
};

SVGStrokeEffect.prototype.renderFrame = function(forceRender){
    if(!this.initialized){
        this.initialize();
    }
    var i, len = this.paths.length;
    var mask, path;
    for(i=0;i<len;i+=1){
        if(this.paths[i].m === -1) {
            continue;
        }
        mask = this.elem.maskManager.viewData[this.paths[i].m];
        path = this.paths[i].p;
        if(forceRender || this.filterManager._mdf || mask.prop._mdf){
            path.setAttribute('d',mask.lastPath);
        }
        if(forceRender || this.filterManager.effectElements[9].p._mdf || this.filterManager.effectElements[4].p._mdf || this.filterManager.effectElements[7].p._mdf || this.filterManager.effectElements[8].p._mdf || mask.prop._mdf){
            var dasharrayValue;
            if(this.filterManager.effectElements[7].p.v !== 0 || this.filterManager.effectElements[8].p.v !== 100){
                var s = Math.min(this.filterManager.effectElements[7].p.v,this.filterManager.effectElements[8].p.v)/100;
                var e = Math.max(this.filterManager.effectElements[7].p.v,this.filterManager.effectElements[8].p.v)/100;
                var l = path.getTotalLength();
                dasharrayValue = '0 0 0 ' + l*s + ' ';
                var lineLength = l*(e-s);
                var segment = 1+this.filterManager.effectElements[4].p.v*2*this.filterManager.effectElements[9].p.v/100;
                var units = Math.floor(lineLength/segment);
                var j;
                for(j=0;j<units;j+=1){
                    dasharrayValue += '1 ' + this.filterManager.effectElements[4].p.v*2*this.filterManager.effectElements[9].p.v/100 + ' ';
                }
                dasharrayValue += '0 ' + l*10 + ' 0 0';
            } else {
                dasharrayValue = '1 ' + this.filterManager.effectElements[4].p.v*2*this.filterManager.effectElements[9].p.v/100;
            }
            path.setAttribute('stroke-dasharray',dasharrayValue);
        }
    }
    if(forceRender || this.filterManager.effectElements[4].p._mdf){
        this.pathMasker.setAttribute('stroke-width',this.filterManager.effectElements[4].p.v*2);
    }
    
    if(forceRender || this.filterManager.effectElements[6].p._mdf){
        this.pathMasker.setAttribute('opacity',this.filterManager.effectElements[6].p.v);
    }
    if(this.filterManager.effectElements[10].p.v === 1 || this.filterManager.effectElements[10].p.v === 2){
        if(forceRender || this.filterManager.effectElements[3].p._mdf){
            var color = this.filterManager.effectElements[3].p.v;
            this.pathMasker.setAttribute('stroke','rgb('+bm_floor(color[0]*255)+','+bm_floor(color[1]*255)+','+bm_floor(color[2]*255)+')');
        }
    }
};
function SVGTritoneFilter(filter, filterManager){
    this.filterManager = filterManager;
    var feColorMatrix = createNS('feColorMatrix');
    feColorMatrix.setAttribute('type','matrix');
    feColorMatrix.setAttribute('color-interpolation-filters','linearRGB');
    feColorMatrix.setAttribute('values','0.3333 0.3333 0.3333 0 0 0.3333 0.3333 0.3333 0 0 0.3333 0.3333 0.3333 0 0 0 0 0 1 0');
    feColorMatrix.setAttribute('result','f1');
    filter.appendChild(feColorMatrix);
    var feComponentTransfer = createNS('feComponentTransfer');
    feComponentTransfer.setAttribute('color-interpolation-filters','sRGB');
    filter.appendChild(feComponentTransfer);
    this.matrixFilter = feComponentTransfer;
    var feFuncR = createNS('feFuncR');
    feFuncR.setAttribute('type','table');
    feComponentTransfer.appendChild(feFuncR);
    this.feFuncR = feFuncR;
    var feFuncG = createNS('feFuncG');
    feFuncG.setAttribute('type','table');
    feComponentTransfer.appendChild(feFuncG);
    this.feFuncG = feFuncG;
    var feFuncB = createNS('feFuncB');
    feFuncB.setAttribute('type','table');
    feComponentTransfer.appendChild(feFuncB);
    this.feFuncB = feFuncB;
}

SVGTritoneFilter.prototype.renderFrame = function(forceRender){
    if(forceRender || this.filterManager._mdf){
        var color1 = this.filterManager.effectElements[0].p.v;
        var color2 = this.filterManager.effectElements[1].p.v;
        var color3 = this.filterManager.effectElements[2].p.v;
        var tableR = color3[0] + ' ' + color2[0] + ' ' + color1[0];
        var tableG = color3[1] + ' ' + color2[1] + ' ' + color1[1];
        var tableB = color3[2] + ' ' + color2[2] + ' ' + color1[2];
        this.feFuncR.setAttribute('tableValues', tableR);
        this.feFuncG.setAttribute('tableValues', tableG);
        this.feFuncB.setAttribute('tableValues', tableB);
        //var opacity = this.filterManager.effectElements[2].p.v/100;
        //this.matrixFilter.setAttribute('values',(colorWhite[0]- colorBlack[0])+' 0 0 0 '+ colorBlack[0] +' '+ (colorWhite[1]- colorBlack[1]) +' 0 0 0 '+ colorBlack[1] +' '+ (colorWhite[2]- colorBlack[2]) +' 0 0 0 '+ colorBlack[2] +' 0 0 0 ' + opacity + ' 0');
    }
};
function SVGProLevelsFilter(filter, filterManager){
    this.filterManager = filterManager;
    var effectElements = this.filterManager.effectElements;
    var feComponentTransfer = createNS('feComponentTransfer');
    var feFuncR, feFuncG, feFuncB;
    
    if(effectElements[10].p.k || effectElements[10].p.v !== 0 || effectElements[11].p.k || effectElements[11].p.v !== 1 || effectElements[12].p.k || effectElements[12].p.v !== 1 || effectElements[13].p.k || effectElements[13].p.v !== 0 || effectElements[14].p.k || effectElements[14].p.v !== 1){
        this.feFuncR = this.createFeFunc('feFuncR', feComponentTransfer);
    }
    if(effectElements[17].p.k || effectElements[17].p.v !== 0 || effectElements[18].p.k || effectElements[18].p.v !== 1 || effectElements[19].p.k || effectElements[19].p.v !== 1 || effectElements[20].p.k || effectElements[20].p.v !== 0 || effectElements[21].p.k || effectElements[21].p.v !== 1){
        this.feFuncG = this.createFeFunc('feFuncG', feComponentTransfer);
    }
    if(effectElements[24].p.k || effectElements[24].p.v !== 0 || effectElements[25].p.k || effectElements[25].p.v !== 1 || effectElements[26].p.k || effectElements[26].p.v !== 1 || effectElements[27].p.k || effectElements[27].p.v !== 0 || effectElements[28].p.k || effectElements[28].p.v !== 1){
        this.feFuncB = this.createFeFunc('feFuncB', feComponentTransfer);
    }
    if(effectElements[31].p.k || effectElements[31].p.v !== 0 || effectElements[32].p.k || effectElements[32].p.v !== 1 || effectElements[33].p.k || effectElements[33].p.v !== 1 || effectElements[34].p.k || effectElements[34].p.v !== 0 || effectElements[35].p.k || effectElements[35].p.v !== 1){
        this.feFuncA = this.createFeFunc('feFuncA', feComponentTransfer);
    }
    
    if(this.feFuncR || this.feFuncG || this.feFuncB || this.feFuncA){
        feComponentTransfer.setAttribute('color-interpolation-filters','sRGB');
        filter.appendChild(feComponentTransfer);
        feComponentTransfer = createNS('feComponentTransfer');
    }

    if(effectElements[3].p.k || effectElements[3].p.v !== 0 || effectElements[4].p.k || effectElements[4].p.v !== 1 || effectElements[5].p.k || effectElements[5].p.v !== 1 || effectElements[6].p.k || effectElements[6].p.v !== 0 || effectElements[7].p.k || effectElements[7].p.v !== 1){

        feComponentTransfer.setAttribute('color-interpolation-filters','sRGB');
        filter.appendChild(feComponentTransfer);
        this.feFuncRComposed = this.createFeFunc('feFuncR', feComponentTransfer);
        this.feFuncGComposed = this.createFeFunc('feFuncG', feComponentTransfer);
        this.feFuncBComposed = this.createFeFunc('feFuncB', feComponentTransfer);
    }
}

SVGProLevelsFilter.prototype.createFeFunc = function(type, feComponentTransfer) {
    var feFunc = createNS(type);
    feFunc.setAttribute('type','table');
    feComponentTransfer.appendChild(feFunc);
    return feFunc;
};

SVGProLevelsFilter.prototype.getTableValue = function(inputBlack, inputWhite, gamma, outputBlack, outputWhite) {
    var cnt = 0;
    var segments = 256;
    var perc;
    var min = Math.min(inputBlack, inputWhite);
    var max = Math.max(inputBlack, inputWhite);
    var table = Array.call(null,{length:segments});
    var colorValue;
    var pos = 0;
    var outputDelta = outputWhite - outputBlack; 
    var inputDelta = inputWhite - inputBlack; 
    while(cnt <= 256) {
        perc = cnt/256;
        if(perc <= min){
            colorValue = inputDelta < 0 ? outputWhite : outputBlack;
        } else if(perc >= max){
            colorValue = inputDelta < 0 ? outputBlack : outputWhite;
        } else {
            colorValue = (outputBlack + outputDelta * Math.pow((perc - inputBlack) / inputDelta, 1 / gamma));
        }
        table[pos++] = colorValue;
        cnt += 256/(segments-1);
    }
    return table.join(' ');
};

SVGProLevelsFilter.prototype.renderFrame = function(forceRender){
    if(forceRender || this.filterManager._mdf){
        var val, cnt, perc, bezier;
        var effectElements = this.filterManager.effectElements;
        if(this.feFuncRComposed && (forceRender || effectElements[3].p._mdf || effectElements[4].p._mdf || effectElements[5].p._mdf || effectElements[6].p._mdf || effectElements[7].p._mdf)){
            val = this.getTableValue(effectElements[3].p.v,effectElements[4].p.v,effectElements[5].p.v,effectElements[6].p.v,effectElements[7].p.v);
            this.feFuncRComposed.setAttribute('tableValues',val);
            this.feFuncGComposed.setAttribute('tableValues',val);
            this.feFuncBComposed.setAttribute('tableValues',val);
        }


        if(this.feFuncR && (forceRender || effectElements[10].p._mdf || effectElements[11].p._mdf || effectElements[12].p._mdf || effectElements[13].p._mdf || effectElements[14].p._mdf)){
            val = this.getTableValue(effectElements[10].p.v,effectElements[11].p.v,effectElements[12].p.v,effectElements[13].p.v,effectElements[14].p.v);
            this.feFuncR.setAttribute('tableValues',val);
        }

        if(this.feFuncG && (forceRender || effectElements[17].p._mdf || effectElements[18].p._mdf || effectElements[19].p._mdf || effectElements[20].p._mdf || effectElements[21].p._mdf)){
            val = this.getTableValue(effectElements[17].p.v,effectElements[18].p.v,effectElements[19].p.v,effectElements[20].p.v,effectElements[21].p.v);
            this.feFuncG.setAttribute('tableValues',val);
        }

        if(this.feFuncB && (forceRender || effectElements[24].p._mdf || effectElements[25].p._mdf || effectElements[26].p._mdf || effectElements[27].p._mdf || effectElements[28].p._mdf)){
            val = this.getTableValue(effectElements[24].p.v,effectElements[25].p.v,effectElements[26].p.v,effectElements[27].p.v,effectElements[28].p.v);
            this.feFuncB.setAttribute('tableValues',val);
        }

        if(this.feFuncA && (forceRender || effectElements[31].p._mdf || effectElements[32].p._mdf || effectElements[33].p._mdf || effectElements[34].p._mdf || effectElements[35].p._mdf)){
            val = this.getTableValue(effectElements[31].p.v,effectElements[32].p.v,effectElements[33].p.v,effectElements[34].p.v,effectElements[35].p.v);
            this.feFuncA.setAttribute('tableValues',val);
        }
        
    }
};
function SVGDropShadowEffect(filter, filterManager) {
    var filterSize = filterManager.container.globalData.renderConfig.filterSize
    filter.setAttribute('x', filterSize.x);
    filter.setAttribute('y', filterSize.y);
    filter.setAttribute('width', filterSize.width);
    filter.setAttribute('height', filterSize.height);
    this.filterManager = filterManager;

    var feGaussianBlur = createNS('feGaussianBlur');
    feGaussianBlur.setAttribute('in','SourceAlpha');
    feGaussianBlur.setAttribute('result','drop_shadow_1');
    feGaussianBlur.setAttribute('stdDeviation','0');
    this.feGaussianBlur = feGaussianBlur;
    filter.appendChild(feGaussianBlur);

    var feOffset = createNS('feOffset');
    feOffset.setAttribute('dx','25');
    feOffset.setAttribute('dy','0');
    feOffset.setAttribute('in','drop_shadow_1');
    feOffset.setAttribute('result','drop_shadow_2');
    this.feOffset = feOffset;
    filter.appendChild(feOffset);
    var feFlood = createNS('feFlood');
    feFlood.setAttribute('flood-color','#00ff00');
    feFlood.setAttribute('flood-opacity','1');
    feFlood.setAttribute('result','drop_shadow_3');
    this.feFlood = feFlood;
    filter.appendChild(feFlood);

    var feComposite = createNS('feComposite');
    feComposite.setAttribute('in','drop_shadow_3');
    feComposite.setAttribute('in2','drop_shadow_2');
    feComposite.setAttribute('operator','in');
    feComposite.setAttribute('result','drop_shadow_4');
    filter.appendChild(feComposite);


    var feMerge = createNS('feMerge');
    filter.appendChild(feMerge);
    var feMergeNode;
    feMergeNode = createNS('feMergeNode');
    feMerge.appendChild(feMergeNode);
    feMergeNode = createNS('feMergeNode');
    feMergeNode.setAttribute('in','SourceGraphic');
    this.feMergeNode = feMergeNode;
    this.feMerge = feMerge;
    this.originalNodeAdded = false;
    feMerge.appendChild(feMergeNode);
}

SVGDropShadowEffect.prototype.renderFrame = function(forceRender){
    if(forceRender || this.filterManager._mdf){
        if(forceRender || this.filterManager.effectElements[4].p._mdf){
            this.feGaussianBlur.setAttribute('stdDeviation', this.filterManager.effectElements[4].p.v / 4);
        }
        if(forceRender || this.filterManager.effectElements[0].p._mdf){
            var col = this.filterManager.effectElements[0].p.v;
            this.feFlood.setAttribute('flood-color',rgbToHex(Math.round(col[0]*255),Math.round(col[1]*255),Math.round(col[2]*255)));
        }
        if(forceRender || this.filterManager.effectElements[1].p._mdf){
            this.feFlood.setAttribute('flood-opacity',this.filterManager.effectElements[1].p.v/255);
        }
        if(forceRender || this.filterManager.effectElements[2].p._mdf || this.filterManager.effectElements[3].p._mdf){
            var distance = this.filterManager.effectElements[3].p.v;
            var angle = (this.filterManager.effectElements[2].p.v - 90) * degToRads;
            var x = distance * Math.cos(angle);
            var y = distance * Math.sin(angle);
            this.feOffset.setAttribute('dx', x);
            this.feOffset.setAttribute('dy', y);
        }
        /*if(forceRender || this.filterManager.effectElements[5].p._mdf){
            if(this.filterManager.effectElements[5].p.v === 1 && this.originalNodeAdded) {
                this.feMerge.removeChild(this.feMergeNode);
                this.originalNodeAdded = false;
            } else if(this.filterManager.effectElements[5].p.v === 0 && !this.originalNodeAdded) {
                this.feMerge.appendChild(this.feMergeNode);
                this.originalNodeAdded = true;
            }
        }*/
    }
};
var _svgMatteSymbols = [];

function SVGMatte3Effect(filterElem, filterManager, elem){
    this.initialized = false;
    this.filterManager = filterManager;
    this.filterElem = filterElem;
    this.elem = elem;
    elem.matteElement = createNS('g');
    elem.matteElement.appendChild(elem.layerElement);
    elem.matteElement.appendChild(elem.transformedElement);
    elem.baseElement = elem.matteElement;
}

SVGMatte3Effect.prototype.findSymbol = function(mask) {
    var i = 0, len = _svgMatteSymbols.length;
    while(i < len) {
        if(_svgMatteSymbols[i] === mask) {
            return _svgMatteSymbols[i];
        }
        i += 1;
    }
    return null;
};

SVGMatte3Effect.prototype.replaceInParent = function(mask, symbolId) {
    var parentNode = mask.layerElement.parentNode;
    if(!parentNode) {
        return;
    }
    var children = parentNode.children;
    var i = 0, len = children.length;
    while (i < len) {
        if (children[i] === mask.layerElement) {
            break;
        }
        i += 1;
    }
    var nextChild;
    if (i <= len - 2) {
        nextChild = children[i + 1];
    }
    var useElem = createNS('use');
    useElem.setAttribute('href', '#' + symbolId);
    if(nextChild) {
        parentNode.insertBefore(useElem, nextChild);
    } else {
        parentNode.appendChild(useElem);
    }
};

SVGMatte3Effect.prototype.setElementAsMask = function(elem, mask) {
    if(!this.findSymbol(mask)) {
        var symbolId = createElementID();
        var masker = createNS('mask');
        masker.setAttribute('id', mask.layerId);
        masker.setAttribute('mask-type', 'alpha');
        _svgMatteSymbols.push(mask);
        var defs = elem.globalData.defs;
        defs.appendChild(masker);
        var symbol = createNS('symbol');
        symbol.setAttribute('id', symbolId);
        this.replaceInParent(mask, symbolId);
        symbol.appendChild(mask.layerElement);
        defs.appendChild(symbol);
        var useElem = createNS('use');
        useElem.setAttribute('href', '#' + symbolId);
        masker.appendChild(useElem);
        mask.data.hd = false;
        mask.show();
    }
    elem.setMatte(mask.layerId);
};

SVGMatte3Effect.prototype.initialize = function() {
    var ind = this.filterManager.effectElements[0].p.v;
    var elements = this.elem.comp.elements;
    var i = 0, len = elements.length;
    while (i < len) {
    	if (elements[i] && elements[i].data.ind === ind) {
    		this.setElementAsMask(this.elem, elements[i]);
    	}
    	i += 1;
    }
    this.initialized = true;
};

SVGMatte3Effect.prototype.renderFrame = function() {
	if(!this.initialized) {
		this.initialize();
	}
};
function SVGEffects(elem){
    var i, len = elem.data.ef ? elem.data.ef.length : 0;
    var filId = createElementID();
    var fil = filtersFactory.createFilter(filId);
    var count = 0;
    this.filters = [];
    var filterManager;
    for(i=0;i<len;i+=1){
        filterManager = null;
        if(elem.data.ef[i].ty === 20){
            count += 1;
            filterManager = new SVGTintFilter(fil, elem.effectsManager.effectElements[i]);
        }else if(elem.data.ef[i].ty === 21){
            count += 1;
            filterManager = new SVGFillFilter(fil, elem.effectsManager.effectElements[i]);
        }else if(elem.data.ef[i].ty === 22){
            filterManager = new SVGStrokeEffect(elem, elem.effectsManager.effectElements[i]);
        }else if(elem.data.ef[i].ty === 23){
            count += 1;
            filterManager = new SVGTritoneFilter(fil, elem.effectsManager.effectElements[i]);
        }else if(elem.data.ef[i].ty === 24){
            count += 1;
            filterManager = new SVGProLevelsFilter(fil, elem.effectsManager.effectElements[i]);
        }else if(elem.data.ef[i].ty === 25){
            count += 1;
            filterManager = new SVGDropShadowEffect(fil, elem.effectsManager.effectElements[i]);
        }else if(elem.data.ef[i].ty === 28){
            //count += 1;
            filterManager = new SVGMatte3Effect(fil, elem.effectsManager.effectElements[i], elem);
        }else if(elem.data.ef[i].ty === 29){
            count += 1;
            filterManager = new SVGGaussianBlurEffect(fil, elem.effectsManager.effectElements[i]);
        }
        if(filterManager) {
            this.filters.push(filterManager);
        }
    }
    if(count){
        elem.globalData.defs.appendChild(fil);
        elem.layerElement.setAttribute('filter','url(' + locationHref + '#'+filId+')');
    }
    if (this.filters.length) {
        elem.addRenderableComponent(this);
    }
}

SVGEffects.prototype.renderFrame = function(_isFirstFrame){
    var i, len = this.filters.length;
    for(i=0;i<len;i+=1){
        this.filters[i].renderFrame(_isFirstFrame);
    }
};
function CVContextData() {
	this.saved = [];
    this.cArrPos = 0;
    this.cTr = new Matrix();
    this.cO = 1;
    var i, len = 15;
    this.savedOp = createTypedArray('float32', len);
    for(i=0;i<len;i+=1){
        this.saved[i] = createTypedArray('float32', 16);
    }
    this._length = len;
}

CVContextData.prototype.duplicate = function() {
	var newLength = this._length * 2;
	var currentSavedOp = this.savedOp;
    this.savedOp = createTypedArray('float32', newLength);
    this.savedOp.set(currentSavedOp);
    var i = 0;
    for(i = this._length; i < newLength; i += 1) {
        this.saved[i] = createTypedArray('float32', 16);
    }
    this._length = newLength;
};

CVContextData.prototype.reset = function() {
	this.cArrPos = 0;
	this.cTr.reset();
    this.cO = 1;
};
function CVBaseElement(){
}

CVBaseElement.prototype = {
    createElements: function(){},
    initRendererElement: function(){},
    createContainerElements: function(){
        this.canvasContext = this.globalData.canvasContext;
        this.renderableEffectsManager = new CVEffects(this);
    },
    createContent: function(){},
    setBlendMode: function(){
        var globalData = this.globalData;
        if(globalData.blendMode !== this.data.bm) {
            globalData.blendMode = this.data.bm;
            var blendModeValue = getBlendMode(this.data.bm);
            globalData.canvasContext.globalCompositeOperation = blendModeValue;
        }
    },
    createRenderableComponents: function(){
        this.maskManager = new CVMaskElement(this.data, this);
    },
    hideElement: function(){
        if (!this.hidden && (!this.isInRange || this.isTransparent)) {
            this.hidden = true;
        }
    },
    showElement: function(){
        if (this.isInRange && !this.isTransparent){
            this.hidden = false;
            this._isFirstFrame = true;
            this.maskManager._isFirstFrame = true;
        }
    },
    renderFrame: function() {
        if (this.hidden || this.data.hd) {
            return;
        }
        this.renderTransform();
        this.renderRenderable();
        this.setBlendMode();
        var forceRealStack = this.data.ty === 0;
        this.globalData.renderer.save(forceRealStack);
        this.globalData.renderer.ctxTransform(this.finalTransform.mat.props);
        this.globalData.renderer.ctxOpacity(this.finalTransform.mProp.o.v);
        this.renderInnerContent();
        this.globalData.renderer.restore(forceRealStack);
        if(this.maskManager.hasMasks) {
            this.globalData.renderer.restore(true);
        }
        if (this._isFirstFrame) {
            this._isFirstFrame = false;
        }
    },
    destroy: function(){
        this.canvasContext = null;
        this.data = null;
        this.globalData = null;
        this.maskManager.destroy();
    },
    mHelper: new Matrix()
};
CVBaseElement.prototype.hide = CVBaseElement.prototype.hideElement;
CVBaseElement.prototype.show = CVBaseElement.prototype.showElement;

function CVImageElement(data, globalData, comp){
    this.assetData = globalData.getAssetData(data.refId);
    this.img = globalData.imageLoader.getImage(this.assetData);
    this.initElement(data,globalData,comp);
}
extendPrototype([BaseElement, TransformElement, CVBaseElement, HierarchyElement, FrameElement, RenderableElement], CVImageElement);

CVImageElement.prototype.initElement = SVGShapeElement.prototype.initElement;
CVImageElement.prototype.prepareFrame = IImageElement.prototype.prepareFrame;

CVImageElement.prototype.createContent = function(){

    if (this.img.width && (this.assetData.w !== this.img.width || this.assetData.h !== this.img.height)) {
        var canvas = createTag('canvas');
        canvas.width = this.assetData.w;
        canvas.height = this.assetData.h;
        var ctx = canvas.getContext('2d');

        var imgW = this.img.width;
        var imgH = this.img.height;
        var imgRel = imgW / imgH;
        var canvasRel = this.assetData.w/this.assetData.h;
        var widthCrop, heightCrop;
        var par = this.assetData.pr || this.globalData.renderConfig.imagePreserveAspectRatio;
        if((imgRel > canvasRel && par === 'xMidYMid slice') || (imgRel < canvasRel && par !== 'xMidYMid slice')) {
            heightCrop = imgH;
            widthCrop = heightCrop*canvasRel;
        } else {
            widthCrop = imgW;
            heightCrop = widthCrop/canvasRel;
        }
        ctx.drawImage(this.img,(imgW-widthCrop)/2,(imgH-heightCrop)/2,widthCrop,heightCrop,0,0,this.assetData.w,this.assetData.h);
        this.img = canvas;
    }

};

CVImageElement.prototype.renderInnerContent = function(parentMatrix){
    this.canvasContext.drawImage(this.img, 0, 0);
};

CVImageElement.prototype.destroy = function(){
    this.img = null;
};
function CVCompElement(data, globalData, comp) {
    this.completeLayers = false;
    this.layers = data.layers;
    this.pendingElements = [];
    this.elements = createSizedArray(this.layers.length);
    this.initElement(data, globalData, comp);
    this.tm = data.tm ? PropertyFactory.getProp(this,data.tm,0,globalData.frameRate, this) : {_placeholder:true};
}

extendPrototype([CanvasRenderer, ICompElement, CVBaseElement], CVCompElement);

CVCompElement.prototype.renderInnerContent = function() {
    var ctx = this.canvasContext;
    ctx.beginPath();
    ctx.moveTo(0, 0);
    ctx.lineTo(this.data.w, 0);
    ctx.lineTo(this.data.w, this.data.h);
    ctx.lineTo(0, this.data.h);
    ctx.lineTo(0, 0);
    ctx.clip();
    var i,len = this.layers.length;
    for( i = len - 1; i >= 0; i -= 1 ){
        if(this.completeLayers || this.elements[i]){
            this.elements[i].renderFrame();
        }
    }
};

CVCompElement.prototype.destroy = function(){
    var i,len = this.layers.length;
    for( i = len - 1; i >= 0; i -= 1 ){
        if(this.elements[i]) {
            this.elements[i].destroy();
        }
    }
    this.layers = null;
    this.elements = null;
};

function CVMaskElement(data,element){
    this.data = data;
    this.element = element;
    this.masksProperties = this.data.masksProperties || [];
    this.viewData = createSizedArray(this.masksProperties.length);
    var i, len = this.masksProperties.length, hasMasks = false;
    for (i = 0; i < len; i++) {
        if(this.masksProperties[i].mode !== 'n'){
            hasMasks = true;
        }
        this.viewData[i] = ShapePropertyFactory.getShapeProp(this.element,this.masksProperties[i],3);
    }
    this.hasMasks = hasMasks;
    if(hasMasks) {
        this.element.addRenderableComponent(this);
    }
}

CVMaskElement.prototype.renderFrame = function () {
    if(!this.hasMasks){
        return;
    }
    var transform = this.element.finalTransform.mat;
    var ctx = this.element.canvasContext;
    var i, len = this.masksProperties.length;
    var pt,pts,data;
    ctx.beginPath();
    for (i = 0; i < len; i++) {
        if(this.masksProperties[i].mode !== 'n'){
            if (this.masksProperties[i].inv) {
                ctx.moveTo(0, 0);
                ctx.lineTo(this.element.globalData.compSize.w, 0);
                ctx.lineTo(this.element.globalData.compSize.w, this.element.globalData.compSize.h);
                ctx.lineTo(0, this.element.globalData.compSize.h);
                ctx.lineTo(0, 0);
            }
            data = this.viewData[i].v;
            pt = transform.applyToPointArray(data.v[0][0],data.v[0][1],0);
            ctx.moveTo(pt[0], pt[1]);
            var j, jLen = data._length;
            for (j = 1; j < jLen; j++) {
                pts = transform.applyToTriplePoints(data.o[j - 1], data.i[j], data.v[j]);
                ctx.bezierCurveTo(pts[0], pts[1], pts[2], pts[3], pts[4], pts[5]);
            }
            pts = transform.applyToTriplePoints(data.o[j - 1], data.i[0], data.v[0]);
            ctx.bezierCurveTo(pts[0], pts[1], pts[2], pts[3], pts[4], pts[5]);
        }
    }
    this.element.globalData.renderer.save(true);
    ctx.clip();
};

CVMaskElement.prototype.getMaskProperty = MaskElement.prototype.getMaskProperty;

CVMaskElement.prototype.destroy = function(){
    this.element = null;
};
function CVShapeElement(data, globalData, comp) {
    this.shapes = [];
    this.shapesData = data.shapes;
    this.stylesList = [];
    this.itemsData = [];
    this.prevViewData = [];
    this.shapeModifiers = [];
    this.processedElements = [];
    this.transformsManager = new ShapeTransformManager();
    this.initElement(data, globalData, comp);
}

extendPrototype([BaseElement,TransformElement,CVBaseElement,IShapeElement,HierarchyElement,FrameElement,RenderableElement], CVShapeElement);

CVShapeElement.prototype.initElement = RenderableDOMElement.prototype.initElement;

CVShapeElement.prototype.transformHelper = {opacity:1,_opMdf:false};

CVShapeElement.prototype.dashResetter = [];

CVShapeElement.prototype.createContent = function(){
    this.searchShapes(this.shapesData,this.itemsData,this.prevViewData, true, []);
};

CVShapeElement.prototype.createStyleElement = function(data, transforms) {
    var styleElem = {
        data: data,
        type: data.ty,
        preTransforms: this.transformsManager.addTransformSequence(transforms),
        transforms: [],
        elements: [],
        closed: data.hd === true
    };
    var elementData = {};
    if(data.ty == 'fl' || data.ty == 'st'){
        elementData.c = PropertyFactory.getProp(this,data.c,1,255,this);
        if(!elementData.c.k){
            styleElem.co = 'rgb('+bm_floor(elementData.c.v[0])+','+bm_floor(elementData.c.v[1])+','+bm_floor(elementData.c.v[2])+')';
        }
    } else if (data.ty === 'gf' || data.ty === 'gs') {
        elementData.s = PropertyFactory.getProp(this,data.s,1,null,this);
        elementData.e = PropertyFactory.getProp(this,data.e,1,null,this);
        elementData.h = PropertyFactory.getProp(this,data.h||{k:0},0,0.01,this);
        elementData.a = PropertyFactory.getProp(this,data.a||{k:0},0,degToRads,this);
        elementData.g = new GradientProperty(this,data.g,this);
    }
    elementData.o = PropertyFactory.getProp(this,data.o,0,0.01,this);
    if(data.ty == 'st' || data.ty == 'gs') {
        styleElem.lc = this.lcEnum[data.lc] || 'round';
        styleElem.lj = this.ljEnum[data.lj] || 'round';
        if(data.lj == 1) {
            styleElem.ml = data.ml;
        }
        elementData.w = PropertyFactory.getProp(this,data.w,0,null,this);
        if(!elementData.w.k){
            styleElem.wi = elementData.w.v;
        }
        if(data.d){
            var d = new DashProperty(this,data.d,'canvas', this);
            elementData.d = d;
            if(!elementData.d.k){
                styleElem.da = elementData.d.dashArray;
                styleElem.do = elementData.d.dashoffset[0];
            }
        }
    } else {
        styleElem.r = data.r === 2 ? 'evenodd' : 'nonzero';
    }
    this.stylesList.push(styleElem);
    elementData.style = styleElem;
    return elementData;
};

CVShapeElement.prototype.createGroupElement = function(data) {
    var elementData = {
        it: [],
        prevViewData: []
    };
    return elementData;
};

CVShapeElement.prototype.createTransformElement = function(data) {
    var elementData = {
        transform : {
            opacity: 1,
            _opMdf:false,
            key: this.transformsManager.getNewKey(),
            op: PropertyFactory.getProp(this,data.o,0,0.01,this),
            mProps: TransformPropertyFactory.getTransformProperty(this,data,this)
        }
    };
    return elementData;
};

CVShapeElement.prototype.createShapeElement = function(data) {
    var elementData = new CVShapeData(this, data, this.stylesList, this.transformsManager);
    
    this.shapes.push(elementData);
    this.addShapeToModifiers(elementData);
    return elementData;
};

CVShapeElement.prototype.reloadShapes = function() {
    this._isFirstFrame = true;
    var i, len = this.itemsData.length;
    for (i = 0; i < len; i += 1) {
        this.prevViewData[i] = this.itemsData[i];
    }
    this.searchShapes(this.shapesData,this.itemsData,this.prevViewData, true, []);
    len = this.dynamicProperties.length;
    for (i = 0; i < len; i += 1) {
        this.dynamicProperties[i].getValue();
    }
    this.renderModifiers();
    this.transformsManager.processSequences(this._isFirstFrame);
};

CVShapeElement.prototype.addTransformToStyleList = function(transform) {
    var i, len = this.stylesList.length;
    for (i = 0; i < len; i += 1) {
        if(!this.stylesList[i].closed) {
            this.stylesList[i].transforms.push(transform);
        }
    }
}

CVShapeElement.prototype.removeTransformFromStyleList = function() {
    var i, len = this.stylesList.length;
    for (i = 0; i < len; i += 1) {
        if(!this.stylesList[i].closed) {
            this.stylesList[i].transforms.pop();
        }
    }
}

CVShapeElement.prototype.closeStyles = function(styles) {
    var i, len = styles.length, j, jLen;
    for (i = 0; i < len; i += 1) {
        styles[i].closed = true;
    }
}

CVShapeElement.prototype.searchShapes = function(arr,itemsData, prevViewData, shouldRender, transforms){
    var i, len = arr.length - 1;
    var j, jLen;
    var ownStyles = [], ownModifiers = [], processedPos, modifier, currentTransform;
    var ownTransforms = [].concat(transforms);
    for(i=len;i>=0;i-=1){
        processedPos = this.searchProcessedElement(arr[i]);
        if(!processedPos){
            arr[i]._shouldRender = shouldRender;
        } else {
            itemsData[i] = prevViewData[processedPos - 1];
        }
        if(arr[i].ty == 'fl' || arr[i].ty == 'st'|| arr[i].ty == 'gf'|| arr[i].ty == 'gs'){
            if(!processedPos){
                itemsData[i] = this.createStyleElement(arr[i], ownTransforms);
            } else {
                itemsData[i].style.closed = false;
            }
            
            ownStyles.push(itemsData[i].style);
        }else if(arr[i].ty == 'gr'){
            if(!processedPos){
                itemsData[i] = this.createGroupElement(arr[i]);
            } else {
                jLen = itemsData[i].it.length;
                for(j=0;j<jLen;j+=1){
                    itemsData[i].prevViewData[j] = itemsData[i].it[j];
                }
            }
            this.searchShapes(arr[i].it,itemsData[i].it,itemsData[i].prevViewData, shouldRender, ownTransforms);
        }else if(arr[i].ty == 'tr'){
            if(!processedPos){
                currentTransform = this.createTransformElement(arr[i]);
                itemsData[i] = currentTransform;
            }
            ownTransforms.push(itemsData[i]);
            this.addTransformToStyleList(itemsData[i]);
        }else if(arr[i].ty == 'sh' || arr[i].ty == 'rc' || arr[i].ty == 'el' || arr[i].ty == 'sr'){
            if(!processedPos){
                itemsData[i] = this.createShapeElement(arr[i]);
            }
            
        }else if(arr[i].ty == 'tm' || arr[i].ty == 'rd'){
            if(!processedPos){
                modifier = ShapeModifiers.getModifier(arr[i].ty);
                modifier.init(this,arr[i]);
                itemsData[i] = modifier;
                this.shapeModifiers.push(modifier);
            } else {
                modifier = itemsData[i];
                modifier.closed = false;
            }
            ownModifiers.push(modifier);
        } else if(arr[i].ty == 'rp'){
            if(!processedPos){
                modifier = ShapeModifiers.getModifier(arr[i].ty);
                itemsData[i] = modifier;
                modifier.init(this,arr,i,itemsData);
                this.shapeModifiers.push(modifier);
                shouldRender = false;
            }else{
                modifier = itemsData[i];
                modifier.closed = true;
            }
            ownModifiers.push(modifier);
        }
        this.addProcessedElement(arr[i], i + 1);
    }
    this.removeTransformFromStyleList();
    this.closeStyles(ownStyles);
    len = ownModifiers.length;
    for(i=0;i<len;i+=1){
        ownModifiers[i].closed = true;
    }
};

CVShapeElement.prototype.renderInnerContent = function() {
    this.transformHelper.opacity = 1;
    this.transformHelper._opMdf = false;
    this.renderModifiers();
    this.transformsManager.processSequences(this._isFirstFrame);
    this.renderShape(this.transformHelper,this.shapesData,this.itemsData,true);
};

CVShapeElement.prototype.renderShapeTransform = function(parentTransform, groupTransform) {
    var props, groupMatrix;
    if(parentTransform._opMdf || groupTransform.op._mdf || this._isFirstFrame) {
        groupTransform.opacity = parentTransform.opacity;
        groupTransform.opacity *= groupTransform.op.v;
        groupTransform._opMdf = true;
    }
};

CVShapeElement.prototype.drawLayer = function() {
    var i, len = this.stylesList.length;
    var j, jLen, k, kLen,elems,nodes, renderer = this.globalData.renderer, ctx = this.globalData.canvasContext, type, currentStyle;
    for(i=0;i<len;i+=1){
        currentStyle = this.stylesList[i];
        type = currentStyle.type;

        //Skipping style when
        //Stroke width equals 0
        //style should not be rendered (extra unused repeaters)
        //current opacity equals 0
        //global opacity equals 0
        if(((type === 'st' || type === 'gs') && currentStyle.wi === 0) || !currentStyle.data._shouldRender || currentStyle.coOp === 0 || this.globalData.currentGlobalAlpha === 0){
            continue;
        }
        renderer.save();
        elems = currentStyle.elements;
        if(type === 'st' || type === 'gs'){
            ctx.strokeStyle = type === 'st' ? currentStyle.co : currentStyle.grd;
            ctx.lineWidth = currentStyle.wi;
            ctx.lineCap = currentStyle.lc;
            ctx.lineJoin = currentStyle.lj;
            ctx.miterLimit = currentStyle.ml || 0;
        } else {
            ctx.fillStyle = type === 'fl' ? currentStyle.co : currentStyle.grd;
        }
        renderer.ctxOpacity(currentStyle.coOp);
        if(type !== 'st' && type !== 'gs'){
            ctx.beginPath();
        }
        renderer.ctxTransform(currentStyle.preTransforms.finalTransform.props);
        jLen = elems.length;
        for(j=0;j<jLen;j+=1){
            if(type === 'st' || type === 'gs'){
                ctx.beginPath();
                if(currentStyle.da){
                    ctx.setLineDash(currentStyle.da);
                    ctx.lineDashOffset = currentStyle.do;
                }
            }
            nodes = elems[j].trNodes;
            kLen = nodes.length;

            for(k=0;k<kLen;k+=1){
                if(nodes[k].t == 'm'){
                    ctx.moveTo(nodes[k].p[0],nodes[k].p[1]);
                }else if(nodes[k].t == 'c'){
                    ctx.bezierCurveTo(nodes[k].pts[0],nodes[k].pts[1],nodes[k].pts[2],nodes[k].pts[3],nodes[k].pts[4],nodes[k].pts[5]);
                }else{
                    ctx.closePath();
                }
            }
            if(type === 'st' || type === 'gs'){
                ctx.stroke();
                if(currentStyle.da){
                    ctx.setLineDash(this.dashResetter);
                }
            }
        }
        if(type !== 'st' && type !== 'gs'){
            ctx.fill(currentStyle.r);
        }
        renderer.restore();
    }
};

CVShapeElement.prototype.renderShape = function(parentTransform,items,data,isMain){
    var i, len = items.length - 1;
    var groupTransform;
    groupTransform = parentTransform;
    for(i=len;i>=0;i-=1){
        if(items[i].ty == 'tr'){
            groupTransform = data[i].transform;
            this.renderShapeTransform(parentTransform, groupTransform);
        }else if(items[i].ty == 'sh' || items[i].ty == 'el' || items[i].ty == 'rc' || items[i].ty == 'sr'){
            this.renderPath(items[i],data[i]);
        }else if(items[i].ty == 'fl'){
            this.renderFill(items[i],data[i],groupTransform);
        }else if(items[i].ty == 'st'){
            this.renderStroke(items[i],data[i],groupTransform);
        }else if(items[i].ty == 'gf' || items[i].ty == 'gs'){
            this.renderGradientFill(items[i],data[i],groupTransform);
        }else if(items[i].ty == 'gr'){
            this.renderShape(groupTransform,items[i].it,data[i].it);
        }else if(items[i].ty == 'tm'){
            //
        }
    }
    if(isMain){
        this.drawLayer();
    }
    
};

CVShapeElement.prototype.renderStyledShape = function(styledShape, shape){
    if(this._isFirstFrame || shape._mdf || styledShape.transforms._mdf) {
        var shapeNodes = styledShape.trNodes;
        var paths = shape.paths;
        var i, len, j, jLen = paths._length;
        shapeNodes.length = 0;
        var groupTransformMat = styledShape.transforms.finalTransform;
        for (j = 0; j < jLen; j += 1) {
            var pathNodes = paths.shapes[j];
            if(pathNodes && pathNodes.v){
                len = pathNodes._length;
                for (i = 1; i < len; i += 1) {
                    if (i === 1) {
                        shapeNodes.push({
                            t: 'm',
                            p: groupTransformMat.applyToPointArray(pathNodes.v[0][0], pathNodes.v[0][1], 0)
                        });
                    }
                    shapeNodes.push({
                        t: 'c',
                        pts: groupTransformMat.applyToTriplePoints(pathNodes.o[i - 1], pathNodes.i[i], pathNodes.v[i])
                    });
                }
                if (len === 1) {
                    shapeNodes.push({
                        t: 'm',
                        p: groupTransformMat.applyToPointArray(pathNodes.v[0][0], pathNodes.v[0][1], 0)
                    });
                }
                if (pathNodes.c && len) {
                    shapeNodes.push({
                        t: 'c',
                        pts: groupTransformMat.applyToTriplePoints(pathNodes.o[i - 1], pathNodes.i[0], pathNodes.v[0])
                    });
                    shapeNodes.push({
                        t: 'z'
                    });
                }
            }
        }
        styledShape.trNodes = shapeNodes;
    }
}

CVShapeElement.prototype.renderPath = function(pathData,itemData){
    if(pathData.hd !== true && pathData._shouldRender) {
        var i, len = itemData.styledShapes.length;
        for (i = 0; i < len; i += 1) {
            this.renderStyledShape(itemData.styledShapes[i], itemData.sh);
        }
    }
};

CVShapeElement.prototype.renderFill = function(styleData,itemData, groupTransform){
    var styleElem = itemData.style;

    if (itemData.c._mdf || this._isFirstFrame) {
        styleElem.co = 'rgb(' 
        + bm_floor(itemData.c.v[0]) + ',' 
        + bm_floor(itemData.c.v[1]) + ',' 
        + bm_floor(itemData.c.v[2]) + ')';
    }
    if (itemData.o._mdf || groupTransform._opMdf || this._isFirstFrame) {
        styleElem.coOp = itemData.o.v * groupTransform.opacity;
    }
};

CVShapeElement.prototype.renderGradientFill = function(styleData,itemData, groupTransform){
    var styleElem = itemData.style;
    if(!styleElem.grd || itemData.g._mdf || itemData.s._mdf || itemData.e._mdf || (styleData.t !== 1 && (itemData.h._mdf || itemData.a._mdf))) {
        var ctx = this.globalData.canvasContext;
        var grd;
        var pt1 = itemData.s.v, pt2 = itemData.e.v;
        if (styleData.t === 1) {
            grd = ctx.createLinearGradient(pt1[0], pt1[1], pt2[0], pt2[1]);
        } else {
            var rad = Math.sqrt(Math.pow(pt1[0] - pt2[0], 2) + Math.pow(pt1[1] - pt2[1], 2));
            var ang = Math.atan2(pt2[1] - pt1[1], pt2[0] - pt1[0]);

            var percent = itemData.h.v >= 1 ? 0.99 : itemData.h.v <= -1 ? -0.99: itemData.h.v;
            var dist = rad * percent;
            var x = Math.cos(ang + itemData.a.v) * dist + pt1[0];
            var y = Math.sin(ang + itemData.a.v) * dist + pt1[1];
            var grd = ctx.createRadialGradient(x, y, 0, pt1[0], pt1[1], rad);
        }

        var i, len = styleData.g.p;
        var cValues = itemData.g.c;
        var opacity = 1;

        for (i = 0; i < len; i += 1){
            if(itemData.g._hasOpacity && itemData.g._collapsable) {
                opacity = itemData.g.o[i*2 + 1];
            }
            grd.addColorStop(cValues[i * 4] / 100,'rgba('+ cValues[i * 4 + 1] + ',' + cValues[i * 4 + 2] + ','+cValues[i * 4 + 3] + ',' + opacity + ')');
        }
        styleElem.grd = grd;
    }
    styleElem.coOp = itemData.o.v*groupTransform.opacity;
    
};

CVShapeElement.prototype.renderStroke = function(styleData,itemData, groupTransform){
    var styleElem = itemData.style;
    var d = itemData.d;
    if(d && (d._mdf  || this._isFirstFrame)){
        styleElem.da = d.dashArray;
        styleElem.do = d.dashoffset[0];
    }
    if(itemData.c._mdf || this._isFirstFrame){
        styleElem.co = 'rgb('+bm_floor(itemData.c.v[0])+','+bm_floor(itemData.c.v[1])+','+bm_floor(itemData.c.v[2])+')';
    }
    if(itemData.o._mdf || groupTransform._opMdf || this._isFirstFrame){
        styleElem.coOp = itemData.o.v*groupTransform.opacity;
    }
    if(itemData.w._mdf || this._isFirstFrame){
        styleElem.wi = itemData.w.v;
    }
};


CVShapeElement.prototype.destroy = function(){
    this.shapesData = null;
    this.globalData = null;
    this.canvasContext = null;
    this.stylesList.length = 0;
    this.itemsData.length = 0;
};


function CVSolidElement(data, globalData, comp) {
    this.initElement(data,globalData,comp);
}
extendPrototype([BaseElement, TransformElement, CVBaseElement, HierarchyElement, FrameElement, RenderableElement], CVSolidElement);

CVSolidElement.prototype.initElement = SVGShapeElement.prototype.initElement;
CVSolidElement.prototype.prepareFrame = IImageElement.prototype.prepareFrame;

CVSolidElement.prototype.renderInnerContent = function() {
    var ctx = this.canvasContext;
    ctx.fillStyle = this.data.sc;
    ctx.fillRect(0, 0, this.data.sw, this.data.sh);
    //
};
function CVTextElement(data, globalData, comp){
    this.textSpans = [];
    this.yOffset = 0;
    this.fillColorAnim = false;
    this.strokeColorAnim = false;
    this.strokeWidthAnim = false;
    this.stroke = false;
    this.fill = false;
    this.justifyOffset = 0;
    this.currentRender = null;
    this.renderType = 'canvas';
    this.values = {
        fill: 'rgba(0,0,0,0)',
        stroke: 'rgba(0,0,0,0)',
        sWidth: 0,
        fValue: ''
    };
    this.initElement(data,globalData,comp);
}
extendPrototype([BaseElement,TransformElement,CVBaseElement,HierarchyElement,FrameElement,RenderableElement,ITextElement], CVTextElement);

CVTextElement.prototype.tHelper = createTag('canvas').getContext('2d');

CVTextElement.prototype.buildNewText = function(){
    var documentData = this.textProperty.currentData;
    this.renderedLetters = createSizedArray(documentData.l ? documentData.l.length : 0);

    var hasFill = false;
    if(documentData.fc) {
        hasFill = true;
        this.values.fill = this.buildColor(documentData.fc);
    }else{
        this.values.fill = 'rgba(0,0,0,0)';
    }
    this.fill = hasFill;
    var hasStroke = false;
    if(documentData.sc){
        hasStroke = true;
        this.values.stroke = this.buildColor(documentData.sc);
        this.values.sWidth = documentData.sw;
    }
    var fontData = this.globalData.fontManager.getFontByName(documentData.f);
    var i, len;
    var letters = documentData.l;
    var matrixHelper = this.mHelper;
    this.stroke = hasStroke;
    this.values.fValue = documentData.finalSize + 'px '+ this.globalData.fontManager.getFontByName(documentData.f).fFamily;
    len = documentData.finalText.length;
    //this.tHelper.font = this.values.fValue;
    var charData, shapeData, k, kLen, shapes, j, jLen, pathNodes, commands, pathArr, singleShape = this.data.singleShape;
    var trackingOffset = documentData.tr/1000*documentData.finalSize;
    var xPos = 0, yPos = 0, firstLine = true;
    var cnt = 0;
    for (i = 0; i < len; i += 1) {
        charData = this.globalData.fontManager.getCharData(documentData.finalText[i], fontData.fStyle, this.globalData.fontManager.getFontByName(documentData.f).fFamily);
        shapeData = charData && charData.data || {};
        matrixHelper.reset();
        if(singleShape && letters[i].n) {
            xPos = -trackingOffset;
            yPos += documentData.yOffset;
            yPos += firstLine ? 1 : 0;
            firstLine = false;
        }

        shapes = shapeData.shapes ? shapeData.shapes[0].it : [];
        jLen = shapes.length;
        matrixHelper.scale(documentData.finalSize/100,documentData.finalSize/100);
        if(singleShape){
            this.applyTextPropertiesToMatrix(documentData, matrixHelper, letters[i].line, xPos, yPos);
        }
        commands = createSizedArray(jLen);
        for(j=0;j<jLen;j+=1){
            kLen = shapes[j].ks.k.i.length;
            pathNodes = shapes[j].ks.k;
            pathArr = [];
            for(k=1;k<kLen;k+=1){
                if(k==1){
                    pathArr.push(matrixHelper.applyToX(pathNodes.v[0][0],pathNodes.v[0][1],0),matrixHelper.applyToY(pathNodes.v[0][0],pathNodes.v[0][1],0));
                }
                pathArr.push(matrixHelper.applyToX(pathNodes.o[k-1][0],pathNodes.o[k-1][1],0),matrixHelper.applyToY(pathNodes.o[k-1][0],pathNodes.o[k-1][1],0),matrixHelper.applyToX(pathNodes.i[k][0],pathNodes.i[k][1],0),matrixHelper.applyToY(pathNodes.i[k][0],pathNodes.i[k][1],0),matrixHelper.applyToX(pathNodes.v[k][0],pathNodes.v[k][1],0),matrixHelper.applyToY(pathNodes.v[k][0],pathNodes.v[k][1],0));
            }
            pathArr.push(matrixHelper.applyToX(pathNodes.o[k-1][0],pathNodes.o[k-1][1],0),matrixHelper.applyToY(pathNodes.o[k-1][0],pathNodes.o[k-1][1],0),matrixHelper.applyToX(pathNodes.i[0][0],pathNodes.i[0][1],0),matrixHelper.applyToY(pathNodes.i[0][0],pathNodes.i[0][1],0),matrixHelper.applyToX(pathNodes.v[0][0],pathNodes.v[0][1],0),matrixHelper.applyToY(pathNodes.v[0][0],pathNodes.v[0][1],0));
            commands[j] = pathArr;
        }
        if(singleShape){
            xPos += letters[i].l;
            xPos += trackingOffset;
        }
        if(this.textSpans[cnt]){
            this.textSpans[cnt].elem = commands;
        } else {
            this.textSpans[cnt] = {elem: commands};
        }
        cnt +=1;
    }
};

CVTextElement.prototype.renderInnerContent = function(){
    var ctx = this.canvasContext;
    var finalMat = this.finalTransform.mat.props;
    ctx.font = this.values.fValue;
    ctx.lineCap = 'butt';
    ctx.lineJoin = 'miter';
    ctx.miterLimit = 4;

    if(!this.data.singleShape){
        this.textAnimator.getMeasures(this.textProperty.currentData, this.lettersChangedFlag);
    }

    var  i,len, j, jLen, k, kLen;
    var renderedLetters = this.textAnimator.renderedLetters;

    var letters = this.textProperty.currentData.l;

    len = letters.length;
    var renderedLetter;
    var lastFill = null, lastStroke = null, lastStrokeW = null, commands, pathArr;
    for(i=0;i<len;i+=1){
        if(letters[i].n){
            continue;
        }
        renderedLetter = renderedLetters[i];
        if(renderedLetter){
            this.globalData.renderer.save();
            this.globalData.renderer.ctxTransform(renderedLetter.p);
            this.globalData.renderer.ctxOpacity(renderedLetter.o);
        }
        if(this.fill){
            if(renderedLetter && renderedLetter.fc){
                if(lastFill !== renderedLetter.fc){
                    lastFill = renderedLetter.fc;
                    ctx.fillStyle = renderedLetter.fc;
                }
            }else if(lastFill !== this.values.fill){
                lastFill = this.values.fill;
                ctx.fillStyle = this.values.fill;
            }
            commands = this.textSpans[i].elem;
            jLen = commands.length;
            this.globalData.canvasContext.beginPath();
            for(j=0;j<jLen;j+=1) {
                pathArr = commands[j];
                kLen = pathArr.length;
                this.globalData.canvasContext.moveTo(pathArr[0], pathArr[1]);
                for (k = 2; k < kLen; k += 6) {
                    this.globalData.canvasContext.bezierCurveTo(pathArr[k], pathArr[k + 1], pathArr[k + 2], pathArr[k + 3], pathArr[k + 4], pathArr[k + 5]);
                }
            }
            this.globalData.canvasContext.closePath();
            this.globalData.canvasContext.fill();
            ///ctx.fillText(this.textSpans[i].val,0,0);
        }
        if(this.stroke){
            if(renderedLetter && renderedLetter.sw){
                if(lastStrokeW !== renderedLetter.sw){
                    lastStrokeW = renderedLetter.sw;
                    ctx.lineWidth = renderedLetter.sw;
                }
            }else if(lastStrokeW !== this.values.sWidth){
                lastStrokeW = this.values.sWidth;
                ctx.lineWidth = this.values.sWidth;
            }
            if(renderedLetter && renderedLetter.sc){
                if(lastStroke !== renderedLetter.sc){
                    lastStroke = renderedLetter.sc;
                    ctx.strokeStyle = renderedLetter.sc;
                }
            }else if(lastStroke !== this.values.stroke){
                lastStroke = this.values.stroke;
                ctx.strokeStyle = this.values.stroke;
            }
            commands = this.textSpans[i].elem;
            jLen = commands.length;
            this.globalData.canvasContext.beginPath();
            for(j=0;j<jLen;j+=1) {
                pathArr = commands[j];
                kLen = pathArr.length;
                this.globalData.canvasContext.moveTo(pathArr[0], pathArr[1]);
                for (k = 2; k < kLen; k += 6) {
                    this.globalData.canvasContext.bezierCurveTo(pathArr[k], pathArr[k + 1], pathArr[k + 2], pathArr[k + 3], pathArr[k + 4], pathArr[k + 5]);
                }
            }
            this.globalData.canvasContext.closePath();
            this.globalData.canvasContext.stroke();
            ///ctx.strokeText(letters[i].val,0,0);
        }
        if(renderedLetter) {
            this.globalData.renderer.restore();
        }
    }
};
function CVEffects() {

}
CVEffects.prototype.renderFrame = function(){};
function HBaseElement(data,globalData,comp){}
HBaseElement.prototype = {
    checkBlendMode: function(){},
    initRendererElement: function(){
        this.baseElement = createTag(this.data.tg || 'div');
        if(this.data.hasMask) {
            this.svgElement = createNS('svg');
            this.layerElement = createNS('g');
            this.maskedElement = this.layerElement;
            this.svgElement.appendChild(this.layerElement);
            this.baseElement.appendChild(this.svgElement);
        } else {
            this.layerElement = this.baseElement;
        }
        styleDiv(this.baseElement);
    },
    createContainerElements: function(){
        this.renderableEffectsManager = new CVEffects(this);
        this.transformedElement = this.baseElement;
        this.maskedElement = this.layerElement;
        if (this.data.ln) {
            this.layerElement.setAttribute('id',this.data.ln);
        }
        if (this.data.cl) {
            this.layerElement.setAttribute('class', this.data.cl);
        }
        if (this.data.bm !== 0) {
            this.setBlendMode();
        }
    },
    renderElement: function() {
        if(this.finalTransform._matMdf){
            this.transformedElement.style.transform = this.transformedElement.style.webkitTransform = this.finalTransform.mat.toCSS();
        }
        if(this.finalTransform._opMdf){
            this.transformedElement.style.opacity = this.finalTransform.mProp.o.v;
        }
    },
    renderFrame: function() {
        //If it is exported as hidden (data.hd === true) no need to render
        //If it is not visible no need to render
        if (this.data.hd || this.hidden) {
            return;
        }
        this.renderTransform();
        this.renderRenderable();
        this.renderElement();
        this.renderInnerContent();
        if (this._isFirstFrame) {
            this._isFirstFrame = false;
        }
    },
    destroy: function(){
        this.layerElement = null;
        this.transformedElement = null;
        if(this.matteElement) {
            this.matteElement = null;
        }
        if(this.maskManager) {
            this.maskManager.destroy();
            this.maskManager = null;
        }
    },
    createRenderableComponents: function(){
        this.maskManager = new MaskElement(this.data, this, this.globalData);
    },
    addEffects: function(){
    },
    setMatte: function(){}
};
HBaseElement.prototype.getBaseElement = SVGBaseElement.prototype.getBaseElement;
HBaseElement.prototype.destroyBaseElement = HBaseElement.prototype.destroy;
HBaseElement.prototype.buildElementParenting = HybridRenderer.prototype.buildElementParenting;
function HSolidElement(data,globalData,comp){
    this.initElement(data,globalData,comp);
}
extendPrototype([BaseElement,TransformElement,HBaseElement,HierarchyElement,FrameElement,RenderableDOMElement], HSolidElement);

HSolidElement.prototype.createContent = function(){
    var rect;
    if(this.data.hasMask){
        rect = createNS('rect');
        rect.setAttribute('width',this.data.sw);
        rect.setAttribute('height',this.data.sh);
        rect.setAttribute('fill',this.data.sc);
        this.svgElement.setAttribute('width',this.data.sw);
        this.svgElement.setAttribute('height',this.data.sh);
    } else {
        rect = createTag('div');
        rect.style.width = this.data.sw + 'px';
        rect.style.height = this.data.sh + 'px';
        rect.style.backgroundColor = this.data.sc;
    }
    this.layerElement.appendChild(rect);
};

function HCompElement(data,globalData,comp){
    this.layers = data.layers;
    this.supports3d = !data.hasMask;
    this.completeLayers = false;
    this.pendingElements = [];
    this.elements = this.layers ? createSizedArray(this.layers.length) : [];
    this.initElement(data,globalData,comp);
    this.tm = data.tm ? PropertyFactory.getProp(this,data.tm,0,globalData.frameRate,this) : {_placeholder:true};
}

extendPrototype([HybridRenderer, ICompElement, HBaseElement], HCompElement);
HCompElement.prototype._createBaseContainerElements = HCompElement.prototype.createContainerElements;

HCompElement.prototype.createContainerElements = function(){
    this._createBaseContainerElements();
    //divElement.style.clip = 'rect(0px, '+this.data.w+'px, '+this.data.h+'px, 0px)';
    if(this.data.hasMask){
        this.svgElement.setAttribute('width',this.data.w);
        this.svgElement.setAttribute('height',this.data.h);
        this.transformedElement = this.baseElement;
    } else {
        this.transformedElement = this.layerElement;
    }
};

HCompElement.prototype.addTo3dContainer = function(elem,pos) {
    var j = 0;
    var nextElement;
    while(j<pos){
        if(this.elements[j] && this.elements[j].getBaseElement){
            nextElement = this.elements[j].getBaseElement();
        }
        j += 1;
    }
    if(nextElement){
        this.layerElement.insertBefore(elem, nextElement);
    } else {
        this.layerElement.appendChild(elem);
    }
}

function HShapeElement(data,globalData,comp){
    //List of drawable elements
    this.shapes = [];
    // Full shape data
    this.shapesData = data.shapes;
    //List of styles that will be applied to shapes
    this.stylesList = [];
    //List of modifiers that will be applied to shapes
    this.shapeModifiers = [];
    //List of items in shape tree
    this.itemsData = [];
    //List of items in previous shape tree
    this.processedElements = [];
    // List of animated components
    this.animatedContents = [];
    this.shapesContainer = createNS('g');
    this.initElement(data,globalData,comp);
    //Moving any property that doesn't get too much access after initialization because of v8 way of handling more than 10 properties.
    // List of elements that have been created
    this.prevViewData = [];
    this.currentBBox = {
        x:999999,
        y: -999999,
        h: 0,
        w: 0
    };
}
extendPrototype([BaseElement,TransformElement,HSolidElement,SVGShapeElement,HBaseElement,HierarchyElement,FrameElement,RenderableElement], HShapeElement);
HShapeElement.prototype._renderShapeFrame = HShapeElement.prototype.renderInnerContent;

HShapeElement.prototype.createContent = function(){
    var cont;
    this.baseElement.style.fontSize = 0;
    if (this.data.hasMask) {
        this.layerElement.appendChild(this.shapesContainer);
        cont = this.svgElement;
    } else {
        cont = createNS('svg');
        var size = this.comp.data ? this.comp.data : this.globalData.compSize;
        cont.setAttribute('width',size.w);
        cont.setAttribute('height',size.h);
        cont.appendChild(this.shapesContainer);
        this.layerElement.appendChild(cont);
    }

    this.searchShapes(this.shapesData,this.itemsData,this.prevViewData,this.shapesContainer,0, [], true);
    this.filterUniqueShapes();
    this.shapeCont = cont;
};

HShapeElement.prototype.getTransformedPoint = function(transformers, point) {
    var i, len = transformers.length;
    for(i = 0; i < len; i += 1) {
        point = transformers[i].mProps.v.applyToPointArray(point[0], point[1], 0);
    }
    return point;
}

HShapeElement.prototype.calculateShapeBoundingBox = function(item, boundingBox) {
    var shape = item.sh.v;
    var transformers = item.transformers;
    var i, len = shape._length, vPoint, oPoint, nextIPoint, nextVPoint, bounds;
    if (len <= 1) {
        return;
    }
    for (i = 0; i < len - 1; i += 1) {
        vPoint = this.getTransformedPoint(transformers, shape.v[i]);
        oPoint = this.getTransformedPoint(transformers, shape.o[i]);
        nextIPoint = this.getTransformedPoint(transformers, shape.i[i + 1]);
        nextVPoint = this.getTransformedPoint(transformers, shape.v[i + 1]);
        this.checkBounds(vPoint, oPoint, nextIPoint, nextVPoint, boundingBox);
    }
    if(shape.c) {
        vPoint = this.getTransformedPoint(transformers, shape.v[i]);
        oPoint = this.getTransformedPoint(transformers, shape.o[i]);
        nextIPoint = this.getTransformedPoint(transformers, shape.i[0]);
        nextVPoint = this.getTransformedPoint(transformers, shape.v[0]);
        this.checkBounds(vPoint, oPoint, nextIPoint, nextVPoint, boundingBox);
    }
}

HShapeElement.prototype.checkBounds = function(vPoint, oPoint, nextIPoint, nextVPoint, boundingBox) {
    this.getBoundsOfCurve(vPoint, oPoint, nextIPoint, nextVPoint);
    var bounds = this.shapeBoundingBox;
    boundingBox.x = bm_min(bounds.left, boundingBox.x);
    boundingBox.xMax = bm_max(bounds.right, boundingBox.xMax);
    boundingBox.y = bm_min(bounds.top, boundingBox.y);
    boundingBox.yMax = bm_max(bounds.bottom, boundingBox.yMax);
}

HShapeElement.prototype.shapeBoundingBox = {
    left:0,
    right:0,
    top:0,
    bottom:0,
}

HShapeElement.prototype.tempBoundingBox = {
    x:0,
    xMax:0,
    y:0,
    yMax:0,
    width:0,
    height:0
}

HShapeElement.prototype.getBoundsOfCurve = function(p0, p1, p2, p3) {

    var bounds = [[p0[0],p3[0]], [p0[1],p3[1]]];

    for (var a, b, c, t, b2ac, t1, t2, i = 0; i < 2; ++i) {

      b = 6 * p0[i] - 12 * p1[i] + 6 * p2[i];
      a = -3 * p0[i] + 9 * p1[i] - 9 * p2[i] + 3 * p3[i];
      c = 3 * p1[i] - 3 * p0[i];

      b = b | 0;
      a = a | 0;
      c = c | 0;

      if (a === 0) {

        if (b === 0) {
          continue;
        }

        t = -c / b;

        if (0 < t && t < 1) {
          bounds[i].push(this.calculateF(t,p0,p1,p2,p3,i));
        }
        continue;
      }

      b2ac = b * b - 4 * c * a;

      if (b2ac < 0) {
        continue;
      }

      t1 = (-b + bm_sqrt(b2ac))/(2 * a);
      if (0 < t1 && t1 < 1) bounds[i].push(this.calculateF(t1,p0,p1,p2,p3,i));

      t2 = (-b - bm_sqrt(b2ac))/(2 * a);
      if (0 < t2 && t2 < 1) bounds[i].push(this.calculateF(t2,p0,p1,p2,p3,i));

    }

    this.shapeBoundingBox.left = bm_min.apply(null, bounds[0]);
    this.shapeBoundingBox.top = bm_min.apply(null, bounds[1]);
    this.shapeBoundingBox.right = bm_max.apply(null, bounds[0]);
    this.shapeBoundingBox.bottom = bm_max.apply(null, bounds[1]);
  };

  HShapeElement.prototype.calculateF = function(t, p0, p1, p2, p3, i) {
    return bm_pow(1-t, 3) * p0[i]
        + 3 * bm_pow(1-t, 2) * t * p1[i]
        + 3 * (1-t) * bm_pow(t, 2) * p2[i]
        + bm_pow(t, 3) * p3[i];
  }

HShapeElement.prototype.calculateBoundingBox = function(itemsData, boundingBox) {
    var i, len = itemsData.length, path;
    for(i = 0; i < len; i += 1) {
        if(itemsData[i] && itemsData[i].sh) {
            this.calculateShapeBoundingBox(itemsData[i], boundingBox)
        } else if(itemsData[i] && itemsData[i].it) {
            this.calculateBoundingBox(itemsData[i].it, boundingBox)
        }
    }
}

HShapeElement.prototype.currentBoxContains = function(box) {
    return this.currentBBox.x <= box.x 
    && this.currentBBox.y <= box.y 
    && this.currentBBox.width + this.currentBBox.x >= box.x + box.width
    && this.currentBBox.height + this.currentBBox.y >= box.y + box.height
}

HShapeElement.prototype.renderInnerContent = function() {
    this._renderShapeFrame();

    if(!this.hidden && (this._isFirstFrame || this._mdf)) {
        var tempBoundingBox = this.tempBoundingBox;
        var max = 999999;
        tempBoundingBox.x = max;
        tempBoundingBox.xMax = -max;
        tempBoundingBox.y = max;
        tempBoundingBox.yMax = -max;
        this.calculateBoundingBox(this.itemsData, tempBoundingBox);
        tempBoundingBox.width = tempBoundingBox.xMax < tempBoundingBox.x ? 0 : tempBoundingBox.xMax - tempBoundingBox.x;
        tempBoundingBox.height = tempBoundingBox.yMax < tempBoundingBox.y ? 0 : tempBoundingBox.yMax - tempBoundingBox.y;
        //var tempBoundingBox = this.shapeCont.getBBox();
        if(this.currentBoxContains(tempBoundingBox)) {
            return;
        }
        var changed = false;
        if(this.currentBBox.w !== tempBoundingBox.width){
            this.currentBBox.w = tempBoundingBox.width;
            this.shapeCont.setAttribute('width',tempBoundingBox.width);
            changed = true;
        }
        if(this.currentBBox.h !== tempBoundingBox.height){
            this.currentBBox.h = tempBoundingBox.height;
            this.shapeCont.setAttribute('height',tempBoundingBox.height);
            changed = true;
        }
        if(changed  || this.currentBBox.x !== tempBoundingBox.x  || this.currentBBox.y !== tempBoundingBox.y){
            this.currentBBox.w = tempBoundingBox.width;
            this.currentBBox.h = tempBoundingBox.height;
            this.currentBBox.x = tempBoundingBox.x;
            this.currentBBox.y = tempBoundingBox.y;

            this.shapeCont.setAttribute('viewBox',this.currentBBox.x+' '+this.currentBBox.y+' '+this.currentBBox.w+' '+this.currentBBox.h);
            this.shapeCont.style.transform = this.shapeCont.style.webkitTransform = 'translate(' + this.currentBBox.x + 'px,' + this.currentBBox.y + 'px)';
        }
    }

};
function HTextElement(data,globalData,comp){
    this.textSpans = [];
    this.textPaths = [];
    this.currentBBox = {
        x:999999,
        y: -999999,
        h: 0,
        w: 0
    };
    this.renderType = 'svg';
    this.isMasked = false;
    this.initElement(data,globalData,comp);

}
extendPrototype([BaseElement,TransformElement,HBaseElement,HierarchyElement,FrameElement,RenderableDOMElement,ITextElement], HTextElement);

HTextElement.prototype.createContent = function(){
    this.isMasked = this.checkMasks();
    if(this.isMasked){
        this.renderType = 'svg';
        this.compW = this.comp.data.w;
        this.compH = this.comp.data.h;
        this.svgElement.setAttribute('width',this.compW);
        this.svgElement.setAttribute('height',this.compH);
        var g = createNS('g');
        this.maskedElement.appendChild(g);
        this.innerElem = g;
    } else {
        this.renderType = 'html';
        this.innerElem = this.layerElement;
    }

    this.checkParenting();

};

HTextElement.prototype.buildNewText = function(){
    var documentData = this.textProperty.currentData;
    this.renderedLetters = createSizedArray(documentData.l ? documentData.l.length : 0);
    var innerElemStyle = this.innerElem.style;
    innerElemStyle.color = innerElemStyle.fill = documentData.fc ? this.buildColor(documentData.fc) : 'rgba(0,0,0,0)';
    if(documentData.sc){
        innerElemStyle.stroke = this.buildColor(documentData.sc);
        innerElemStyle.strokeWidth = documentData.sw+'px';
    }
    var fontData = this.globalData.fontManager.getFontByName(documentData.f);
    if(!this.globalData.fontManager.chars){
        innerElemStyle.fontSize = documentData.finalSize+'px';
        innerElemStyle.lineHeight = documentData.finalSize+'px';
        if(fontData.fClass){
            this.innerElem.className = fontData.fClass;
        } else {
            innerElemStyle.fontFamily = fontData.fFamily;
            var fWeight = documentData.fWeight, fStyle = documentData.fStyle;
            innerElemStyle.fontStyle = fStyle;
            innerElemStyle.fontWeight = fWeight;
        }
    }
    var i, len;

    var letters = documentData.l;
    len = letters.length;
    var tSpan,tParent,tCont;
    var matrixHelper = this.mHelper;
    var shapes, shapeStr = '';
    var cnt = 0;
    for (i = 0;i < len ;i += 1) {
        if(this.globalData.fontManager.chars){
            if(!this.textPaths[cnt]){
                tSpan = createNS('path');
                tSpan.setAttribute('stroke-linecap', 'butt');
                tSpan.setAttribute('stroke-linejoin','round');
                tSpan.setAttribute('stroke-miterlimit','4');
            } else {
                tSpan = this.textPaths[cnt];
            }
            if(!this.isMasked){
                if(this.textSpans[cnt]){
                    tParent = this.textSpans[cnt];
                    tCont = tParent.children[0];
                } else {

                    tParent = createTag('div');
                    tParent.style.lineHeight = 0;
                    tCont = createNS('svg');
                    tCont.appendChild(tSpan);
                    styleDiv(tParent);
                }
            }
        }else{
            if(!this.isMasked){
                if(this.textSpans[cnt]){
                    tParent = this.textSpans[cnt];
                    tSpan = this.textPaths[cnt];
                } else {
                    tParent = createTag('span');
                    styleDiv(tParent);
                    tSpan = createTag('span');
                    styleDiv(tSpan);
                    tParent.appendChild(tSpan);
                }
            } else {
                tSpan = this.textPaths[cnt] ? this.textPaths[cnt] : createNS('text');
            }
        }
        //tSpan.setAttribute('visibility', 'hidden');
        if(this.globalData.fontManager.chars){
            var charData = this.globalData.fontManager.getCharData(documentData.finalText[i], fontData.fStyle, this.globalData.fontManager.getFontByName(documentData.f).fFamily);
            var shapeData;
            if(charData){
                shapeData = charData.data;
            } else {
                shapeData = null;
            }
            matrixHelper.reset();
            if(shapeData && shapeData.shapes){
                shapes = shapeData.shapes[0].it;
                matrixHelper.scale(documentData.finalSize/100,documentData.finalSize/100);
                shapeStr = this.createPathShape(matrixHelper,shapes);
                tSpan.setAttribute('d',shapeStr);
            }
            if(!this.isMasked){
                this.innerElem.appendChild(tParent);
                if(shapeData && shapeData.shapes){

                    //document.body.appendChild is needed to get exact measure of shape
                    document.body.appendChild(tCont);
                    var boundingBox = tCont.getBBox();
                    tCont.setAttribute('width',boundingBox.width + 2);
                    tCont.setAttribute('height',boundingBox.height + 2);
                    tCont.setAttribute('viewBox',(boundingBox.x-1)+' '+ (boundingBox.y-1)+' '+ (boundingBox.width+2)+' '+ (boundingBox.height+2));
                    tCont.style.transform = tCont.style.webkitTransform = 'translate(' + (boundingBox.x-1) + 'px,' + (boundingBox.y-1) + 'px)';

                    letters[i].yOffset = boundingBox.y-1;

                } else{
                    tCont.setAttribute('width',1);
                    tCont.setAttribute('height',1);
                }
                    tParent.appendChild(tCont);
            }else{
                this.innerElem.appendChild(tSpan);
            }
        }else{
            tSpan.textContent = letters[i].val;
            tSpan.setAttributeNS("http://www.w3.org/XML/1998/namespace", "xml:space","preserve");
            if(!this.isMasked){
                this.innerElem.appendChild(tParent);
                //
                tSpan.style.transform = tSpan.style.webkitTransform = 'translate3d(0,'+ -documentData.finalSize/1.2+'px,0)';
            } else {
                this.innerElem.appendChild(tSpan);
            }
        }
        //
        if(!this.isMasked){
            this.textSpans[cnt] = tParent;
        }else{
            this.textSpans[cnt] = tSpan;
        }
        this.textSpans[cnt].style.display = 'block';
        this.textPaths[cnt] = tSpan;
        cnt += 1;
    }
    while(cnt < this.textSpans.length){
        this.textSpans[cnt].style.display = 'none';
        cnt += 1;
    }
};

HTextElement.prototype.renderInnerContent = function() {

    if(this.data.singleShape){
        if(!this._isFirstFrame && !this.lettersChangedFlag){
            return;
        } else {
            // Todo Benchmark if using this is better than getBBox
             if(this.isMasked && this.finalTransform._matMdf){
                 this.svgElement.setAttribute('viewBox',-this.finalTransform.mProp.p.v[0]+' '+ -this.finalTransform.mProp.p.v[1]+' '+this.compW+' '+this.compH);
                this.svgElement.style.transform = this.svgElement.style.webkitTransform = 'translate(' + -this.finalTransform.mProp.p.v[0] + 'px,' + -this.finalTransform.mProp.p.v[1] + 'px)';
             }
        }
    }

    this.textAnimator.getMeasures(this.textProperty.currentData, this.lettersChangedFlag);
    if(!this.lettersChangedFlag && !this.textAnimator.lettersChangedFlag){
        return;
    }
    var  i,len, count = 0;
    var renderedLetters = this.textAnimator.renderedLetters;

    var letters = this.textProperty.currentData.l;

    len = letters.length;
    var renderedLetter, textSpan, textPath;
    for(i=0;i<len;i+=1){
        if(letters[i].n){
            count += 1;
            continue;
        }
        textSpan = this.textSpans[i];
        textPath = this.textPaths[i];
        renderedLetter = renderedLetters[count];
        count += 1;
        if(renderedLetter._mdf.m) {
            if(!this.isMasked){
                textSpan.style.transform = textSpan.style.webkitTransform = renderedLetter.m;
            }else{
                textSpan.setAttribute('transform',renderedLetter.m);
            }
        }
        ////textSpan.setAttribute('opacity',renderedLetter.o);
        textSpan.style.opacity = renderedLetter.o;
        if(renderedLetter.sw && renderedLetter._mdf.sw){
            textPath.setAttribute('stroke-width',renderedLetter.sw);
        }
        if(renderedLetter.sc && renderedLetter._mdf.sc){
            textPath.setAttribute('stroke',renderedLetter.sc);
        }
        if(renderedLetter.fc && renderedLetter._mdf.fc){
            textPath.setAttribute('fill',renderedLetter.fc);
            textPath.style.color = renderedLetter.fc;
        }
    }

    if(this.innerElem.getBBox && !this.hidden && (this._isFirstFrame || this._mdf)){
        var boundingBox = this.innerElem.getBBox();

        if(this.currentBBox.w !== boundingBox.width){
            this.currentBBox.w = boundingBox.width;
            this.svgElement.setAttribute('width',boundingBox.width);
        }
        if(this.currentBBox.h !== boundingBox.height){
            this.currentBBox.h = boundingBox.height;
            this.svgElement.setAttribute('height',boundingBox.height);
        }

        var margin = 1;
        if(this.currentBBox.w !== (boundingBox.width + margin*2) || this.currentBBox.h !== (boundingBox.height + margin*2)  || this.currentBBox.x !== (boundingBox.x - margin)  || this.currentBBox.y !== (boundingBox.y - margin)){
            this.currentBBox.w = boundingBox.width + margin*2;
            this.currentBBox.h = boundingBox.height + margin*2;
            this.currentBBox.x = boundingBox.x - margin;
            this.currentBBox.y = boundingBox.y - margin;

            this.svgElement.setAttribute('viewBox',this.currentBBox.x+' '+this.currentBBox.y+' '+this.currentBBox.w+' '+this.currentBBox.h);
            this.svgElement.style.transform = this.svgElement.style.webkitTransform = 'translate(' + this.currentBBox.x + 'px,' + this.currentBBox.y + 'px)';
        }
    }
};
function HImageElement(data,globalData,comp){
    this.assetData = globalData.getAssetData(data.refId);
    this.initElement(data,globalData,comp);
}

extendPrototype([BaseElement,TransformElement,HBaseElement,HSolidElement,HierarchyElement,FrameElement,RenderableElement], HImageElement);


HImageElement.prototype.createContent = function(){
    var assetPath = this.globalData.getAssetsPath(this.assetData);
    var img = new Image();

    if(this.data.hasMask){
        this.imageElem = createNS('image');
        this.imageElem.setAttribute('width',this.assetData.w+"px");
        this.imageElem.setAttribute('height',this.assetData.h+"px");
        this.imageElem.setAttributeNS('http://www.w3.org/1999/xlink','href',assetPath);
        this.layerElement.appendChild(this.imageElem);
        this.baseElement.setAttribute('width',this.assetData.w);
        this.baseElement.setAttribute('height',this.assetData.h);
    } else {
        this.layerElement.appendChild(img);
    }
    img.src = assetPath;
    if(this.data.ln){
        this.baseElement.setAttribute('id',this.data.ln);
    }
};
function HCameraElement(data,globalData,comp){
    this.initFrame();
    this.initBaseData(data,globalData,comp);
    this.initHierarchy();
    var getProp = PropertyFactory.getProp;
    this.pe = getProp(this,data.pe,0,0,this);
    if(data.ks.p.s){
        this.px = getProp(this,data.ks.p.x,1,0,this);
        this.py = getProp(this,data.ks.p.y,1,0,this);
        this.pz = getProp(this,data.ks.p.z,1,0,this);
    }else{
        this.p = getProp(this,data.ks.p,1,0,this);
    }
    if(data.ks.a){
        this.a = getProp(this,data.ks.a,1,0,this);
    }
    if(data.ks.or.k.length && data.ks.or.k[0].to){
        var i,len = data.ks.or.k.length;
        for(i=0;i<len;i+=1){
            data.ks.or.k[i].to = null;
            data.ks.or.k[i].ti = null;
        }
    }
    this.or = getProp(this,data.ks.or,1,degToRads,this);
    this.or.sh = true;
    this.rx = getProp(this,data.ks.rx,0,degToRads,this);
    this.ry = getProp(this,data.ks.ry,0,degToRads,this);
    this.rz = getProp(this,data.ks.rz,0,degToRads,this);
    this.mat = new Matrix();
    this._prevMat = new Matrix();
    this._isFirstFrame = true;
    
    // TODO: find a better way to make the HCamera element to be compatible with the LayerInterface and TransformInterface.
    this.finalTransform = {
        mProp: this
    };
}
extendPrototype([BaseElement, FrameElement, HierarchyElement], HCameraElement);

HCameraElement.prototype.setup = function() {
    var i, len = this.comp.threeDElements.length, comp;
    for(i=0;i<len;i+=1){
        //[perspectiveElem,container]
        comp = this.comp.threeDElements[i];
        if(comp.type === '3d') {
            comp.perspectiveElem.style.perspective = comp.perspectiveElem.style.webkitPerspective = this.pe.v+'px';
            comp.container.style.transformOrigin = comp.container.style.mozTransformOrigin = comp.container.style.webkitTransformOrigin = "0px 0px 0px";
            comp.perspectiveElem.style.transform = comp.perspectiveElem.style.webkitTransform = 'matrix3d(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1)';
        }
    }
};

HCameraElement.prototype.createElements = function(){
};

HCameraElement.prototype.hide = function(){
};

HCameraElement.prototype.renderFrame = function(){
    var _mdf = this._isFirstFrame;
    var i, len;
    if(this.hierarchy){
        len = this.hierarchy.length;
        for(i=0;i<len;i+=1){
            _mdf = this.hierarchy[i].finalTransform.mProp._mdf || _mdf;
        }
    }
    if(_mdf || this.pe._mdf || (this.p && this.p._mdf) || (this.px && (this.px._mdf || this.py._mdf || this.pz._mdf)) || this.rx._mdf || this.ry._mdf || this.rz._mdf || this.or._mdf || (this.a && this.a._mdf)) {
        this.mat.reset();

        if(this.hierarchy){
            var mat;
            len = this.hierarchy.length - 1;
            for (i = len; i >= 0; i -= 1) {
                var mTransf = this.hierarchy[i].finalTransform.mProp;
                this.mat.translate(-mTransf.p.v[0],-mTransf.p.v[1],mTransf.p.v[2]);
                this.mat.rotateX(-mTransf.or.v[0]).rotateY(-mTransf.or.v[1]).rotateZ(mTransf.or.v[2]);
                this.mat.rotateX(-mTransf.rx.v).rotateY(-mTransf.ry.v).rotateZ(mTransf.rz.v);
                this.mat.scale(1/mTransf.s.v[0],1/mTransf.s.v[1],1/mTransf.s.v[2]);
                this.mat.translate(mTransf.a.v[0],mTransf.a.v[1],mTransf.a.v[2]);
            }
        }
        if (this.p) {
            this.mat.translate(-this.p.v[0],-this.p.v[1],this.p.v[2]);
        } else {
            this.mat.translate(-this.px.v,-this.py.v,this.pz.v);
        }
        if (this.a) {
            var diffVector
            if (this.p) {
                diffVector = [this.p.v[0] - this.a.v[0], this.p.v[1] - this.a.v[1], this.p.v[2] - this.a.v[2]];
            } else {
                diffVector = [this.px.v - this.a.v[0], this.py.v - this.a.v[1], this.pz.v - this.a.v[2]];
            }
            var mag = Math.sqrt(Math.pow(diffVector[0],2)+Math.pow(diffVector[1],2)+Math.pow(diffVector[2],2));
            //var lookDir = getNormalizedPoint(getDiffVector(this.a.v,this.p.v));
            var lookDir = [diffVector[0]/mag,diffVector[1]/mag,diffVector[2]/mag];
            var lookLengthOnXZ = Math.sqrt( lookDir[2]*lookDir[2] + lookDir[0]*lookDir[0] );
            var m_rotationX = (Math.atan2( lookDir[1], lookLengthOnXZ ));
            var m_rotationY = (Math.atan2( lookDir[0], -lookDir[2]));
            this.mat.rotateY(m_rotationY).rotateX(-m_rotationX);

        }
        this.mat.rotateX(-this.rx.v).rotateY(-this.ry.v).rotateZ(this.rz.v);
        this.mat.rotateX(-this.or.v[0]).rotateY(-this.or.v[1]).rotateZ(this.or.v[2]);
        this.mat.translate(this.globalData.compSize.w/2,this.globalData.compSize.h/2,0);
        this.mat.translate(0,0,this.pe.v);


        

        var hasMatrixChanged = !this._prevMat.equals(this.mat);
        if((hasMatrixChanged || this.pe._mdf) && this.comp.threeDElements) {
            len = this.comp.threeDElements.length;
            var comp;
            for(i=0;i<len;i+=1){
                comp = this.comp.threeDElements[i];
                if(comp.type === '3d') {
                    if(hasMatrixChanged) {
                        comp.container.style.transform = comp.container.style.webkitTransform = this.mat.toCSS();
                    }
                    if(this.pe._mdf) {
                        comp.perspectiveElem.style.perspective = comp.perspectiveElem.style.webkitPerspective = this.pe.v+'px';
                    }
                }
            }
            this.mat.clone(this._prevMat);
        }
    }
    this._isFirstFrame = false;
};

HCameraElement.prototype.prepareFrame = function(num) {
    this.prepareProperties(num, true);
};

HCameraElement.prototype.destroy = function(){
};
HCameraElement.prototype.getBaseElement = function(){return null;};
function HEffects() {
}
HEffects.prototype.renderFrame = function(){};
var animationManager = (function(){
    var moduleOb = {};
    var registeredAnimations = [];
    var initTime = 0;
    var len = 0;
    var playingAnimationsNum = 0;
    var _stopped = true;
    var _isFrozen = false;

    function removeElement(ev){
        var i = 0;
        var animItem = ev.target;
        while(i<len) {
            if (registeredAnimations[i].animation === animItem) {
                registeredAnimations.splice(i, 1);
                i -= 1;
                len -= 1;
                if(!animItem.isPaused){
                    subtractPlayingCount();
                }
            }
            i += 1;
        }
    }

    function registerAnimation(element, animationData){
        if(!element){
            return null;
        }
        var i=0;
        while(i<len){
            if(registeredAnimations[i].elem == element && registeredAnimations[i].elem !== null ){
                return registeredAnimations[i].animation;
            }
            i+=1;
        }
        var animItem = new AnimationItem();
        setupAnimation(animItem, element);
        animItem.setData(element, animationData);
        return animItem;
    }

    function getRegisteredAnimations() {
        var i, len = registeredAnimations.length;
        var animations = [];
        for(i = 0; i < len; i += 1) {
            animations.push(registeredAnimations[i].animation);
        }
        return animations;
    }

    function addPlayingCount(){
        playingAnimationsNum += 1;
        activate();
    }

    function subtractPlayingCount(){
        playingAnimationsNum -= 1;
    }

    function setupAnimation(animItem, element){
        animItem.addEventListener('destroy',removeElement);
        animItem.addEventListener('_active',addPlayingCount);
        animItem.addEventListener('_idle',subtractPlayingCount);
        registeredAnimations.push({elem: element,animation:animItem});
        len += 1;
    }

    function loadAnimation(params){
        var animItem = new AnimationItem();
        setupAnimation(animItem, null);
        animItem.setParams(params);
        return animItem;
    }


    function setSpeed(val,animation){
        var i;
        for(i=0;i<len;i+=1){
            registeredAnimations[i].animation.setSpeed(val, animation);
        }
    }

    function setDirection(val, animation){
        var i;
        for(i=0;i<len;i+=1){
            registeredAnimations[i].animation.setDirection(val, animation);
        }
    }

    function play(animation){
        var i;
        for(i=0;i<len;i+=1){
            registeredAnimations[i].animation.play(animation);
        }
    }
    function resume(nowTime) {
        var elapsedTime = nowTime - initTime;
        var i;
        for(i=0;i<len;i+=1){
            registeredAnimations[i].animation.advanceTime(elapsedTime);
        }
        initTime = nowTime;
        if(playingAnimationsNum && !_isFrozen) {
            window.requestAnimationFrame(resume);
        } else {
            _stopped = true;
        }
    }

    function first(nowTime){
        initTime = nowTime;
        window.requestAnimationFrame(resume);
    }

    function pause(animation) {
        var i;
        for(i=0;i<len;i+=1){
            registeredAnimations[i].animation.pause(animation);
        }
    }

    function goToAndStop(value,isFrame,animation) {
        var i;
        for(i=0;i<len;i+=1){
            registeredAnimations[i].animation.goToAndStop(value,isFrame,animation);
        }
    }

    function stop(animation) {
        var i;
        for(i=0;i<len;i+=1){
            registeredAnimations[i].animation.stop(animation);
        }
    }

    function togglePause(animation) {
        var i;
        for(i=0;i<len;i+=1){
            registeredAnimations[i].animation.togglePause(animation);
        }
    }

    function destroy(animation) {
        var i;
        for(i=(len-1);i>=0;i-=1){
            registeredAnimations[i].animation.destroy(animation);
        }
    }

    function searchAnimations(animationData, standalone, renderer){
        var animElements = [].concat([].slice.call(document.getElementsByClassName('lottie')),
                  [].slice.call(document.getElementsByClassName('bodymovin')));
        var i, len = animElements.length;
        for(i=0;i<len;i+=1){
            if(renderer){
                animElements[i].setAttribute('data-bm-type',renderer);
            }
            registerAnimation(animElements[i], animationData);
        }
        if(standalone && len === 0){
            if(!renderer){
                renderer = 'svg';
            }
            var body = document.getElementsByTagName('body')[0];
            body.innerHTML = '';
            var div = createTag('div');
            div.style.width = '100%';
            div.style.height = '100%';
            div.setAttribute('data-bm-type',renderer);
            body.appendChild(div);
            registerAnimation(div, animationData);
        }
    }

    function resize(){
        var i;
        for(i=0;i<len;i+=1){
            registeredAnimations[i].animation.resize();
        }
    }

    function activate(){
        if(!_isFrozen && playingAnimationsNum){
            if(_stopped) {
                window.requestAnimationFrame(first);
                _stopped = false;
            }
        }
    }

    function freeze() {
        _isFrozen = true;
    }

    function unfreeze() {
        _isFrozen = false;
        activate();
    }

    moduleOb.registerAnimation = registerAnimation;
    moduleOb.loadAnimation = loadAnimation;
    moduleOb.setSpeed = setSpeed;
    moduleOb.setDirection = setDirection;
    moduleOb.play = play;
    moduleOb.pause = pause;
    moduleOb.stop = stop;
    moduleOb.togglePause = togglePause;
    moduleOb.searchAnimations = searchAnimations;
    moduleOb.resize = resize;
    //moduleOb.start = start;
    moduleOb.goToAndStop = goToAndStop;
    moduleOb.destroy = destroy;
    moduleOb.freeze = freeze;
    moduleOb.unfreeze = unfreeze;
    moduleOb.getRegisteredAnimations = getRegisteredAnimations;
    return moduleOb;
}());

var AnimationItem = function () {
    this._cbs = [];
    this.name = '';
    this.path = '';
    this.isLoaded = false;
    this.currentFrame = 0;
    this.currentRawFrame = 0;
    this.firstFrame = 0;
    this.totalFrames = 0;
    this.frameRate = 0;
    this.frameMult = 0;
    this.playSpeed = 1;
    this.playDirection = 1;
    this.playCount = 0;
    this.animationData = {};
    this.assets = [];
    this.isPaused = true;
    this.autoplay = false;
    this.loop = true;
    this.renderer = null;
    this.animationID = createElementID();
    this.assetsPath = '';
    this.timeCompleted = 0;
    this.segmentPos = 0;
    this.subframeEnabled = subframeEnabled;
    this.segments = [];
    this._idle = true;
    this._completedLoop = false;
    this.projectInterface = ProjectInterface();
    this.imagePreloader = new ImagePreloader();
};

extendPrototype([BaseEvent], AnimationItem);

AnimationItem.prototype.setParams = function(params) {
    if(params.context){
        this.context = params.context;
    }
    if(params.wrapper || params.container){
        this.wrapper = params.wrapper || params.container;
    }
    var animType = params.animType ? params.animType : params.renderer ? params.renderer : 'svg';
    switch(animType){
        case 'canvas':
            this.renderer = new CanvasRenderer(this, params.rendererSettings);
            break;
        case 'svg':
            this.renderer = new SVGRenderer(this, params.rendererSettings);
            break;
        default:
            this.renderer = new HybridRenderer(this, params.rendererSettings);
            break;
    }
    this.renderer.setProjectInterface(this.projectInterface);
    this.animType = animType;

    if(params.loop === '' || params.loop === null){
    }else if(params.loop === false){
        this.loop = false;
    }else if(params.loop === true){
        this.loop = true;
    }else{
        this.loop = parseInt(params.loop);
    }
    this.autoplay = 'autoplay' in params ? params.autoplay : true;
    this.name = params.name ? params.name :  '';
    this.autoloadSegments = params.hasOwnProperty('autoloadSegments') ? params.autoloadSegments :  true;
    this.assetsPath = params.assetsPath;
    this.initialSegment = params.initialSegment;
    if (params.animationData) {
        this.configAnimation(params.animationData);
    } else if(params.path){

        if( params.path.lastIndexOf('\\') !== -1){
            this.path = params.path.substr(0,params.path.lastIndexOf('\\')+1);
        } else {
            this.path = params.path.substr(0,params.path.lastIndexOf('/')+1);
        }
        this.fileName = params.path.substr(params.path.lastIndexOf('/')+1);
        this.fileName = this.fileName.substr(0,this.fileName.lastIndexOf('.json'));

        assetLoader.load(params.path, this.configAnimation.bind(this), function() {
            this.trigger('data_failed');
        }.bind(this));
    }

};

AnimationItem.prototype.setData = function (wrapper, animationData) {
    var params = {
        wrapper: wrapper,
        animationData: animationData ? (typeof animationData  === "object") ? animationData : JSON.parse(animationData) : null
    };
    var wrapperAttributes = wrapper.attributes;

    params.path = wrapperAttributes.getNamedItem('data-animation-path') ? wrapperAttributes.getNamedItem('data-animation-path').value : wrapperAttributes.getNamedItem('data-bm-path') ? wrapperAttributes.getNamedItem('data-bm-path').value :  wrapperAttributes.getNamedItem('bm-path') ? wrapperAttributes.getNamedItem('bm-path').value : '';
    params.animType = wrapperAttributes.getNamedItem('data-anim-type') ? wrapperAttributes.getNamedItem('data-anim-type').value : wrapperAttributes.getNamedItem('data-bm-type') ? wrapperAttributes.getNamedItem('data-bm-type').value : wrapperAttributes.getNamedItem('bm-type') ? wrapperAttributes.getNamedItem('bm-type').value :  wrapperAttributes.getNamedItem('data-bm-renderer') ? wrapperAttributes.getNamedItem('data-bm-renderer').value : wrapperAttributes.getNamedItem('bm-renderer') ? wrapperAttributes.getNamedItem('bm-renderer').value : 'canvas';

    var loop = wrapperAttributes.getNamedItem('data-anim-loop') ? wrapperAttributes.getNamedItem('data-anim-loop').value :  wrapperAttributes.getNamedItem('data-bm-loop') ? wrapperAttributes.getNamedItem('data-bm-loop').value :  wrapperAttributes.getNamedItem('bm-loop') ? wrapperAttributes.getNamedItem('bm-loop').value : '';
    if(loop === ''){
    }else if(loop === 'false'){
        params.loop = false;
    }else if(loop === 'true'){
        params.loop = true;
    }else{
        params.loop = parseInt(loop);
    }
    var autoplay = wrapperAttributes.getNamedItem('data-anim-autoplay') ? wrapperAttributes.getNamedItem('data-anim-autoplay').value :  wrapperAttributes.getNamedItem('data-bm-autoplay') ? wrapperAttributes.getNamedItem('data-bm-autoplay').value :  wrapperAttributes.getNamedItem('bm-autoplay') ? wrapperAttributes.getNamedItem('bm-autoplay').value : true;
    params.autoplay = autoplay !== "false";

    params.name = wrapperAttributes.getNamedItem('data-name') ? wrapperAttributes.getNamedItem('data-name').value :  wrapperAttributes.getNamedItem('data-bm-name') ? wrapperAttributes.getNamedItem('data-bm-name').value : wrapperAttributes.getNamedItem('bm-name') ? wrapperAttributes.getNamedItem('bm-name').value :  '';
    var prerender = wrapperAttributes.getNamedItem('data-anim-prerender') ? wrapperAttributes.getNamedItem('data-anim-prerender').value :  wrapperAttributes.getNamedItem('data-bm-prerender') ? wrapperAttributes.getNamedItem('data-bm-prerender').value :  wrapperAttributes.getNamedItem('bm-prerender') ? wrapperAttributes.getNamedItem('bm-prerender').value : '';

    if(prerender === 'false'){
        params.prerender = false;
    }
    this.setParams(params);
};

AnimationItem.prototype.includeLayers = function(data) {
    if(data.op > this.animationData.op){
        this.animationData.op = data.op;
        this.totalFrames = Math.floor(data.op - this.animationData.ip);
    }
    var layers = this.animationData.layers;
    var i, len = layers.length;
    var newLayers = data.layers;
    var j, jLen = newLayers.length;
    for(j=0;j<jLen;j+=1){
        i = 0;
        while(i<len){
            if(layers[i].id == newLayers[j].id){
                layers[i] = newLayers[j];
                break;
            }
            i += 1;
        }
    }
    if(data.chars || data.fonts){
        this.renderer.globalData.fontManager.addChars(data.chars);
        this.renderer.globalData.fontManager.addFonts(data.fonts, this.renderer.globalData.defs);
    }
    if(data.assets){
        len = data.assets.length;
        for(i = 0; i < len; i += 1){
            this.animationData.assets.push(data.assets[i]);
        }
    }
    this.animationData.__complete = false;
    dataManager.completeData(this.animationData,this.renderer.globalData.fontManager);
    this.renderer.includeLayers(data.layers);
    if(expressionsPlugin){
        expressionsPlugin.initExpressions(this);
    }
    this.loadNextSegment();
};

AnimationItem.prototype.loadNextSegment = function() {
    var segments = this.animationData.segments;
    if(!segments || segments.length === 0 || !this.autoloadSegments){
        this.trigger('data_ready');
        this.timeCompleted = this.totalFrames;
        return;
    }
    var segment = segments.shift();
    this.timeCompleted = segment.time * this.frameRate;
    var segmentPath = this.path+this.fileName+'_' + this.segmentPos + '.json';
    this.segmentPos += 1;
    assetLoader.load(segmentPath, this.includeLayers.bind(this), function() {
        this.trigger('data_failed');
    }.bind(this));
};

AnimationItem.prototype.loadSegments = function() {
    var segments = this.animationData.segments;
    if(!segments) {
        this.timeCompleted = this.totalFrames;
    }
    this.loadNextSegment();
};

AnimationItem.prototype.imagesLoaded = function() {
    this.trigger('loaded_images');
    this.checkLoaded()
}

AnimationItem.prototype.preloadImages = function() {
    this.imagePreloader.setAssetsPath(this.assetsPath);
    this.imagePreloader.setPath(this.path);
    this.imagePreloader.loadAssets(this.animationData.assets, this.imagesLoaded.bind(this));
}

AnimationItem.prototype.configAnimation = function (animData) {
    if(!this.renderer){
        return;
    }
    try {
        this.animationData = animData;

        if (this.initialSegment) {
            this.totalFrames = Math.floor(this.initialSegment[1] - this.initialSegment[0]);
            this.firstFrame = Math.round(this.initialSegment[0]);
        } else {
            this.totalFrames = Math.floor(this.animationData.op - this.animationData.ip);
            this.firstFrame = Math.round(this.animationData.ip);
        }
        this.renderer.configAnimation(animData);
        if(!animData.assets){
            animData.assets = [];
        }

        this.assets = this.animationData.assets;
        this.frameRate = this.animationData.fr;
        this.frameMult = this.animationData.fr / 1000;
        this.renderer.searchExtraCompositions(animData.assets);
        this.trigger('config_ready');
        this.preloadImages();
        this.loadSegments();
        this.updaFrameModifier();
        this.waitForFontsLoaded();
    } catch(error) {
        this.triggerConfigError(error);
    }
};

AnimationItem.prototype.waitForFontsLoaded = function(){
    if(!this.renderer) {
        return;
    }
    if(this.renderer.globalData.fontManager.loaded()){
        this.checkLoaded();
    }else{
        setTimeout(this.waitForFontsLoaded.bind(this),20);
    }
}

AnimationItem.prototype.checkLoaded = function () {
    if (!this.isLoaded && this.renderer.globalData.fontManager.loaded() && (this.imagePreloader.loaded() || this.renderer.rendererType !== 'canvas')) {
        this.isLoaded = true;
        dataManager.completeData(this.animationData, this.renderer.globalData.fontManager);
        if(expressionsPlugin){
            expressionsPlugin.initExpressions(this);
        }
        this.renderer.initItems();
        setTimeout(function() {
            this.trigger('DOMLoaded');
        }.bind(this), 0);
        this.gotoFrame();
        if(this.autoplay){
            this.play();
        }
    }
};

AnimationItem.prototype.resize = function () {
    this.renderer.updateContainerSize();
};

AnimationItem.prototype.setSubframe = function(flag){
    this.subframeEnabled = flag ? true : false;
};

AnimationItem.prototype.gotoFrame = function () {
    this.currentFrame = this.subframeEnabled ? this.currentRawFrame : ~~this.currentRawFrame;

    if(this.timeCompleted !== this.totalFrames && this.currentFrame > this.timeCompleted){
        this.currentFrame = this.timeCompleted;
    }
    this.trigger('enterFrame');
    this.renderFrame();
};

AnimationItem.prototype.renderFrame = function () {
    if(this.isLoaded === false){
        return;
    }
    try {
        this.renderer.renderFrame(this.currentFrame + this.firstFrame);
    } catch(error) {
        this.triggerRenderFrameError(error);
    }
};

AnimationItem.prototype.play = function (name) {
    if(name && this.name != name){
        return;
    }
    if(this.isPaused === true){
        this.isPaused = false;
        if(this._idle){
            this._idle = false;
            this.trigger('_active');
        }
    }
};

AnimationItem.prototype.pause = function (name) {
    if(name && this.name != name){
        return;
    }
    if(this.isPaused === false){
        this.isPaused = true;
        this._idle = true;
        this.trigger('_idle');
    }
};

AnimationItem.prototype.togglePause = function (name) {
    if(name && this.name != name){
        return;
    }
    if(this.isPaused === true){
        this.play();
    }else{
        this.pause();
    }
};

AnimationItem.prototype.stop = function (name) {
    if(name && this.name != name){
        return;
    }
    this.pause();
    this.playCount = 0;
    this._completedLoop = false;
    this.setCurrentRawFrameValue(0);
};

AnimationItem.prototype.goToAndStop = function (value, isFrame, name) {
    if(name && this.name != name){
        return;
    }
    if(isFrame){
        this.setCurrentRawFrameValue(value);
    }else{
        this.setCurrentRawFrameValue(value * this.frameModifier);
    }
    this.pause();
};

AnimationItem.prototype.goToAndPlay = function (value, isFrame, name) {
    this.goToAndStop(value, isFrame, name);
    this.play();
};

AnimationItem.prototype.advanceTime = function (value) {
    if (this.isPaused === true || this.isLoaded === false) {
        return;
    }
    var nextValue = this.currentRawFrame + value * this.frameModifier;
    var _isComplete = false;
    // Checking if nextValue > totalFrames - 1 for addressing non looping and looping animations.
    // If animation won't loop, it should stop at totalFrames - 1. If it will loop it should complete the last frame and then loop.
    if (nextValue >= this.totalFrames - 1 && this.frameModifier > 0) {
        if (!this.loop || this.playCount === this.loop) {
            if (!this.checkSegments(nextValue >  this.totalFrames ? nextValue % this.totalFrames : 0)) {
                _isComplete = true;
                nextValue = this.totalFrames - 1;
            }
        } else if (nextValue >= this.totalFrames) {
            this.playCount += 1;
            if (!this.checkSegments(nextValue % this.totalFrames)) {
                this.setCurrentRawFrameValue(nextValue % this.totalFrames);
                this._completedLoop = true;
                this.trigger('loopComplete');
            }
        } else {
            this.setCurrentRawFrameValue(nextValue);
        }
    } else if(nextValue < 0) {
        if (!this.checkSegments(nextValue % this.totalFrames)) {
            if (this.loop && !(this.playCount-- <= 0 && this.loop !== true)) {
                this.setCurrentRawFrameValue(this.totalFrames + (nextValue % this.totalFrames));
                if(!this._completedLoop) {
                    this._completedLoop = true;
                } else {
                    this.trigger('loopComplete');
                }
            } else {
                _isComplete = true;
                nextValue = 0;
            }
        }
    } else {
        this.setCurrentRawFrameValue(nextValue);
    }
    if (_isComplete) {
        this.setCurrentRawFrameValue(nextValue);
        this.pause();
        this.trigger('complete');
    }
};

AnimationItem.prototype.adjustSegment = function(arr, offset){
    this.playCount = 0;
    if(arr[1] < arr[0]){
        if(this.frameModifier > 0){
            if(this.playSpeed < 0){
                this.setSpeed(-this.playSpeed);
            } else {
                this.setDirection(-1);
            }
        }
        this.timeCompleted = this.totalFrames = arr[0] - arr[1];
        this.firstFrame = arr[1];
        this.setCurrentRawFrameValue(this.totalFrames - 0.001 - offset);
    } else if(arr[1] > arr[0]){
        if(this.frameModifier < 0){
            if(this.playSpeed < 0){
                this.setSpeed(-this.playSpeed);
            } else {
                this.setDirection(1);
            }
        }
        this.timeCompleted = this.totalFrames = arr[1] - arr[0];
        this.firstFrame = arr[0];
        this.setCurrentRawFrameValue(0.001 + offset);
    }
    this.trigger('segmentStart');
};
AnimationItem.prototype.setSegment = function (init,end) {
    var pendingFrame = -1;
    if(this.isPaused) {
        if (this.currentRawFrame + this.firstFrame < init) {
            pendingFrame = init;
        } else if (this.currentRawFrame + this.firstFrame > end) {
            pendingFrame = end - init;
        }
    }

    this.firstFrame = init;
    this.timeCompleted = this.totalFrames = end - init;
    if(pendingFrame !== -1) {
        this.goToAndStop(pendingFrame,true);
    }
};

AnimationItem.prototype.playSegments = function (arr, forceFlag) {
    if (forceFlag) {
        this.segments.length = 0;
    }
    if (typeof arr[0] === 'object') {
        var i, len = arr.length;
        for (i = 0; i < len; i += 1) {
            this.segments.push(arr[i]);
        }
    } else {
        this.segments.push(arr);
    }
    if (this.segments.length && forceFlag) {
        this.adjustSegment(this.segments.shift(), 0);
    }
    if (this.isPaused) {
        this.play();
    }
};

AnimationItem.prototype.resetSegments = function (forceFlag) {
    this.segments.length = 0;
    this.segments.push([this.animationData.ip,this.animationData.op]);
    //this.segments.push([this.animationData.ip*this.frameRate,Math.floor(this.animationData.op - this.animationData.ip+this.animationData.ip*this.frameRate)]);
    if (forceFlag) {
        this.checkSegments(0);
    }
};
AnimationItem.prototype.checkSegments = function(offset) {
    if (this.segments.length) {
        this.adjustSegment(this.segments.shift(), offset);
        return true;
    }
    return false;
};

AnimationItem.prototype.destroy = function (name) {
    if ((name && this.name != name) || !this.renderer) {
        return;
    }
    this.renderer.destroy();
    this.imagePreloader.destroy();
    this.trigger('destroy');
    this._cbs = null;
    this.onEnterFrame = this.onLoopComplete = this.onComplete = this.onSegmentStart = this.onDestroy = null;
    this.renderer = null;
};

AnimationItem.prototype.setCurrentRawFrameValue = function(value){
    this.currentRawFrame = value;
    this.gotoFrame();
};

AnimationItem.prototype.setSpeed = function (val) {
    this.playSpeed = val;
    this.updaFrameModifier();
};

AnimationItem.prototype.setDirection = function (val) {
    this.playDirection = val < 0 ? -1 : 1;
    this.updaFrameModifier();
};

AnimationItem.prototype.updaFrameModifier = function () {
    this.frameModifier = this.frameMult * this.playSpeed * this.playDirection;
};

AnimationItem.prototype.getPath = function () {
    return this.path;
};

AnimationItem.prototype.getAssetsPath = function (assetData) {
    var path = '';
    if(assetData.e) {
        path = assetData.p;
    } else if(this.assetsPath){
        var imagePath = assetData.p;
        if(imagePath.indexOf('images/') !== -1){
            imagePath = imagePath.split('/')[1];
        }
        path = this.assetsPath + imagePath;
    } else {
        path = this.path;
        path += assetData.u ? assetData.u : '';
        path += assetData.p;
    }
    return path;
};

AnimationItem.prototype.getAssetData = function (id) {
    var i = 0, len = this.assets.length;
    while (i < len) {
        if(id == this.assets[i].id){
            return this.assets[i];
        }
        i += 1;
    }
};

AnimationItem.prototype.hide = function () {
    this.renderer.hide();
};

AnimationItem.prototype.show = function () {
    this.renderer.show();
};

AnimationItem.prototype.getDuration = function (isFrame) {
    return isFrame ? this.totalFrames : this.totalFrames / this.frameRate;
};

AnimationItem.prototype.trigger = function(name){
    if(this._cbs && this._cbs[name]){
        switch(name){
            case 'enterFrame':
                this.triggerEvent(name,new BMEnterFrameEvent(name,this.currentFrame,this.totalFrames,this.frameModifier));
                break;
            case 'loopComplete':
                this.triggerEvent(name,new BMCompleteLoopEvent(name,this.loop,this.playCount,this.frameMult));
                break;
            case 'complete':
                this.triggerEvent(name,new BMCompleteEvent(name,this.frameMult));
                break;
            case 'segmentStart':
                this.triggerEvent(name,new BMSegmentStartEvent(name,this.firstFrame,this.totalFrames));
                break;
            case 'destroy':
                this.triggerEvent(name,new BMDestroyEvent(name,this));
                break;
            default:
                this.triggerEvent(name);
        }
    }
    if(name === 'enterFrame' && this.onEnterFrame){
        this.onEnterFrame.call(this,new BMEnterFrameEvent(name,this.currentFrame,this.totalFrames,this.frameMult));
    }
    if(name === 'loopComplete' && this.onLoopComplete){
        this.onLoopComplete.call(this,new BMCompleteLoopEvent(name,this.loop,this.playCount,this.frameMult));
    }
    if(name === 'complete' && this.onComplete){
        this.onComplete.call(this,new BMCompleteEvent(name,this.frameMult));
    }
    if(name === 'segmentStart' && this.onSegmentStart){
        this.onSegmentStart.call(this,new BMSegmentStartEvent(name,this.firstFrame,this.totalFrames));
    }
    if(name === 'destroy' && this.onDestroy){
        this.onDestroy.call(this,new BMDestroyEvent(name,this));
    }
};

AnimationItem.prototype.triggerRenderFrameError = function(nativeError) {

    var error = new BMRenderFrameErrorEvent(nativeError, this.currentFrame);
    this.triggerEvent('error', error);

    if (this.onError) {
        this.onError.call(this, error);
    }
}

AnimationItem.prototype.triggerConfigError = function(nativeError) {

    var error = new BMConfigErrorEvent(nativeError, this.currentFrame);
    this.triggerEvent('error', error);

    if (this.onError) {
        this.onError.call(this, error);
    }
}
var Expressions = (function(){
    var ob = {};
    ob.initExpressions = initExpressions;


    function initExpressions(animation){

    	var stackCount = 0;
    	var registers = [];

    	function pushExpression() {
			stackCount += 1;
    	}

    	function popExpression() {
			stackCount -= 1;
			if (stackCount === 0) {
				releaseInstances();
			}
    	}

    	function registerExpressionProperty(expression) {
    		if (registers.indexOf(expression) === -1) {
				registers.push(expression)
    		}
    	}

    	function releaseInstances() {
    		var i, len = registers.length;
    		for (i = 0; i < len; i += 1) {
				registers[i].release();
    		}
    		registers.length = 0;
    	}

        animation.renderer.compInterface = CompExpressionInterface(animation.renderer);
        animation.renderer.globalData.projectInterface.registerComposition(animation.renderer);
        animation.renderer.globalData.pushExpression = pushExpression;
        animation.renderer.globalData.popExpression = popExpression;
        animation.renderer.globalData.registerExpressionProperty = registerExpressionProperty;
    }
   return ob;
}());

expressionsPlugin = Expressions;

var ExpressionManager = (function(){
    'use strict';
    var ob = {};
    var Math = BMMath;
    var window = null;
    var document = null;

    function $bm_isInstanceOfArray(arr) {
        return arr.constructor === Array || arr.constructor === Float32Array;
    }

    function isNumerable(tOfV, v) {
        return tOfV === 'number' || tOfV === 'boolean' || tOfV === 'string' || v instanceof Number;
    }

    function $bm_neg(a){
        var tOfA = typeof a;
        if(tOfA === 'number' || tOfA === 'boolean'  || a instanceof Number ){
            return -a;
        }
        if($bm_isInstanceOfArray(a)){
            var i, lenA = a.length;
            var retArr = [];
            for(i=0;i<lenA;i+=1){
                retArr[i] = -a[i];
            }
            return retArr;
        }
        if (a.propType) {
            return a.v;
        }
    }

    var easeInBez = BezierFactory.getBezierEasing(0.333,0,.833,.833, 'easeIn').get;
    var easeOutBez = BezierFactory.getBezierEasing(0.167,0.167,.667,1, 'easeOut').get;
    var easeInOutBez = BezierFactory.getBezierEasing(.33,0,.667,1, 'easeInOut').get;

    function sum(a,b) {
        var tOfA = typeof a;
        var tOfB = typeof b;
        if(tOfA === 'string' || tOfB === 'string'){
            return a + b;
        }
        if(isNumerable(tOfA, a) && isNumerable(tOfB, b)) {
            return a + b;
        }
        if($bm_isInstanceOfArray(a) && isNumerable(tOfB, b)){
            a = a.slice(0);
            a[0] = a[0] + b;
            return a;
        }
        if(isNumerable(tOfA, a) && $bm_isInstanceOfArray(b)){
            b = b.slice(0);
            b[0] = a + b[0];
            return b;
        }
        if($bm_isInstanceOfArray(a) && $bm_isInstanceOfArray(b)){
            
            var i = 0, lenA = a.length, lenB = b.length;
            var retArr = [];
            while(i<lenA || i < lenB){
                if((typeof a[i] === 'number' || a[i] instanceof Number) && (typeof b[i] === 'number' || b[i] instanceof Number)){
                    retArr[i] = a[i] + b[i];
                }else{
                    retArr[i] = b[i] === undefined ? a[i] : a[i] || b[i];
                }
                i += 1;
            }
            return retArr;
        }
        return 0;
    }
    var add = sum;

    function sub(a,b) {
        var tOfA = typeof a;
        var tOfB = typeof b;
        if(isNumerable(tOfA, a) && isNumerable(tOfB, b)) {
            if(tOfA === 'string') {
                a = parseInt(a);
            }
            if(tOfB === 'string') {
                b = parseInt(b);
            }
            return a - b;
        }
        if( $bm_isInstanceOfArray(a) && isNumerable(tOfB, b)){
            a = a.slice(0);
            a[0] = a[0] - b;
            return a;
        }
        if(isNumerable(tOfA, a) &&  $bm_isInstanceOfArray(b)){
            b = b.slice(0);
            b[0] = a - b[0];
            return b;
        }
        if($bm_isInstanceOfArray(a) && $bm_isInstanceOfArray(b)){
            var i = 0, lenA = a.length, lenB = b.length;
            var retArr = [];
            while(i<lenA || i < lenB){
                if((typeof a[i] === 'number' || a[i] instanceof Number) && (typeof b[i] === 'number' || b[i] instanceof Number)){
                    retArr[i] = a[i] - b[i];
                }else{
                    retArr[i] = b[i] === undefined ? a[i] : a[i] || b[i];
                }
                i += 1;
            }
            return retArr;
        }
        return 0;
    }

    function mul(a,b) {
        var tOfA = typeof a;
        var tOfB = typeof b;
        var arr;
        if(isNumerable(tOfA, a) && isNumerable(tOfB, b)) {
            return a * b;
        }

        var i, len;
        if($bm_isInstanceOfArray(a) && isNumerable(tOfB, b)){
            len = a.length;
            arr = createTypedArray('float32', len);
            for(i=0;i<len;i+=1){
                arr[i] = a[i] * b;
            }
            return arr;
        }
        if(isNumerable(tOfA, a) && $bm_isInstanceOfArray(b)){
            len = b.length;
            arr = createTypedArray('float32', len);
            for(i=0;i<len;i+=1){
                arr[i] = a * b[i];
            }
            return arr;
        }
        return 0;
    }

    function div(a,b) {
        var tOfA = typeof a;
        var tOfB = typeof b;
        var arr;
        if(isNumerable(tOfA, a) && isNumerable(tOfB, b)) {
            return a / b;
        }
        var i, len;
        if($bm_isInstanceOfArray(a) && isNumerable(tOfB, b)){
            len = a.length;
            arr = createTypedArray('float32', len);
            for(i=0;i<len;i+=1){
                arr[i] = a[i] / b;
            }
            return arr;
        }
        if(isNumerable(tOfA, a) && $bm_isInstanceOfArray(b)){
            len = b.length;
            arr = createTypedArray('float32', len);
            for(i=0;i<len;i+=1){
                arr[i] = a / b[i];
            }
            return arr;
        }
        return 0;
    }
    function mod(a,b) {
        if(typeof a === 'string') {
            a = parseInt(a);
        }
        if(typeof b === 'string') {
            b = parseInt(b);
        }
        return a % b;
    }
    var $bm_sum = sum;
    var $bm_sub = sub;
    var $bm_mul = mul;
    var $bm_div = div;
    var $bm_mod = mod;

    function clamp(num, min, max) {
        if(min > max){
            var mm = max;
            max = min;
            min = mm;
        }
        return Math.min(Math.max(num, min), max);
    }

    function radiansToDegrees(val) {
        return val/degToRads;
    }
    var radians_to_degrees = radiansToDegrees;

    function degreesToRadians(val) {
        return val*degToRads;
    }
    var degrees_to_radians = radiansToDegrees;

    var helperLengthArray = [0,0,0,0,0,0];

    function length(arr1, arr2) {
        if (typeof arr1 === 'number' || arr1 instanceof Number) {
            arr2 = arr2 || 0;
            return Math.abs(arr1 - arr2);
        }
        if(!arr2) {
            arr2 = helperLengthArray;
        }
        var i, len = Math.min(arr1.length, arr2.length);
        var addedLength = 0;
        for (i = 0; i < len; i += 1) {
            addedLength += Math.pow(arr2[i] - arr1[i], 2);
        }
        return Math.sqrt(addedLength);
    }

    function normalize(vec) {
        return div(vec, length(vec));
    }

    function rgbToHsl(val) {
        var r = val[0]; var g = val[1]; var b = val[2];
        var max = Math.max(r, g, b), min = Math.min(r, g, b);
        var h, s, l = (max + min) / 2;

        if(max == min){
            h = s = 0; // achromatic
        }else{
            var d = max - min;
            s = l > 0.5 ? d / (2 - max - min) : d / (max + min);
            switch(max){
                case r: h = (g - b) / d + (g < b ? 6 : 0); break;
                case g: h = (b - r) / d + 2; break;
                case b: h = (r - g) / d + 4; break;
            }
            h /= 6;
        }

        return [h, s, l,val[3]];
    }

    function hue2rgb(p, q, t){
        if(t < 0) t += 1;
        if(t > 1) t -= 1;
        if(t < 1/6) return p + (q - p) * 6 * t;
        if(t < 1/2) return q;
        if(t < 2/3) return p + (q - p) * (2/3 - t) * 6;
        return p;
    }

    function hslToRgb(val){
        var h = val[0];
        var s = val[1];
        var l = val[2];

        var r, g, b;

        if(s === 0){
            r = g = b = l; // achromatic
        }else{

            var q = l < 0.5 ? l * (1 + s) : l + s - l * s;
            var p = 2 * l - q;
            r = hue2rgb(p, q, h + 1/3);
            g = hue2rgb(p, q, h);
            b = hue2rgb(p, q, h - 1/3);
        }

        return [r, g , b, val[3]];
    }

    function linear(t, tMin, tMax, value1, value2){
        if(value1 === undefined || value2 === undefined){
            value1 = tMin;
            value2 = tMax;
            tMin = 0;
            tMax = 1;
        }
        if(tMax < tMin) {
            var _tMin = tMax;
            tMax = tMin;
            tMin = _tMin;
        }
        if(t <= tMin) {
            return value1;
        }else if(t >= tMax){
            return value2;
        }
        var perc = tMax === tMin ? 0 : (t-tMin)/(tMax-tMin);
        if(!value1.length){
            return value1 + (value2-value1)*perc;
        }
        var i, len = value1.length;
        var arr = createTypedArray('float32', len);
        for(i=0;i<len;i+=1){
            arr[i] = value1[i] + (value2[i]-value1[i])*perc;
        }
        return arr;
    }
    function random(min,max){
        if(max === undefined){
            if(min === undefined){
                min = 0;
                max = 1;
            } else {
                max = min;
                min = undefined;
            }
        }
        if(max.length){
            var i, len = max.length;
            if(!min){
                min = createTypedArray('float32', len);
            }
            var arr = createTypedArray('float32', len);
            var rnd = BMMath.random();
            for(i=0;i<len;i+=1){
                arr[i] = min[i] + rnd*(max[i]-min[i]);
            }
            return arr;
        }
        if(min === undefined){
            min = 0;
        }
        var rndm = BMMath.random();
        return min + rndm*(max-min);
    }

    function createPath(points, inTangents, outTangents, closed) {
        var i, len = points.length;
        var path = shape_pool.newElement();
        path.setPathData(!!closed, len);
        var arrPlaceholder = [0,0], inVertexPoint, outVertexPoint;
        for(i = 0; i < len; i += 1) {
            inVertexPoint = (inTangents && inTangents[i]) ? inTangents[i] : arrPlaceholder;
            outVertexPoint = (outTangents && outTangents[i]) ? outTangents[i] : arrPlaceholder;
            path.setTripleAt(points[i][0],points[i][1],outVertexPoint[0] + points[i][0],outVertexPoint[1] + points[i][1],inVertexPoint[0] + points[i][0],inVertexPoint[1] + points[i][1],i,true);
        }
        return path;
    }

    function initiateExpression(elem,data,property){
        var val = data.x;
        var needsVelocity = /velocity(?![\w\d])/.test(val);
        var _needsRandom = val.indexOf('random') !== -1;
        var elemType = elem.data.ty;
        var transform,$bm_transform,content,effect;
        var thisProperty = property;
        thisProperty.valueAtTime = thisProperty.getValueAtTime;
        Object.defineProperty(thisProperty, 'value', {
            get: function() {
                return thisProperty.v
            }
        })
        elem.comp.frameDuration = 1/elem.comp.globalData.frameRate;
        elem.comp.displayStartTime = 0;
        var inPoint = elem.data.ip/elem.comp.globalData.frameRate;
        var outPoint = elem.data.op/elem.comp.globalData.frameRate;
        var width = elem.data.sw ? elem.data.sw : 0;
        var height = elem.data.sh ? elem.data.sh : 0;
        var name = elem.data.nm;
        var loopIn, loop_in, loopOut, loop_out, smooth;
        var toWorld,fromWorld,fromComp,toComp,fromCompToSurface, position, rotation, anchorPoint, scale, thisLayer, thisComp,mask,valueAtTime,velocityAtTime;
        var __expression_functions = [];
        if(data.xf) {
            var i, len = data.xf.length;
            for(i = 0; i < len; i += 1) {
                __expression_functions[i] = eval('(function(){ return ' + data.xf[i] + '}())');
            }
        }

        var scoped_bm_rt;
        var expression_function = eval('[function _expression_function(){' + val+';scoped_bm_rt=$bm_rt}' + ']')[0];
        var numKeys = property.kf ? data.k.length : 0;

        var active = !this.data || this.data.hd !== true;

        var wiggle = function wiggle(freq,amp){
            var i,j, len = this.pv.length ? this.pv.length : 1;
            var addedAmps = createTypedArray('float32', len);
            freq = 5;
            var iterations = Math.floor(time*freq);
            i = 0;
            j = 0;
            while(i<iterations){
                //var rnd = BMMath.random();
                for(j=0;j<len;j+=1){
                    addedAmps[j] += -amp + amp*2*BMMath.random();
                    //addedAmps[j] += -amp + amp*2*rnd;
                }
                i += 1;
            }
            //var rnd2 = BMMath.random();
            var periods = time*freq;
            var perc = periods - Math.floor(periods);
            var arr = createTypedArray('float32', len);
            if(len>1){
                for(j=0;j<len;j+=1){
                    arr[j] = this.pv[j] + addedAmps[j] + (-amp + amp*2*BMMath.random())*perc;
                    //arr[j] = this.pv[j] + addedAmps[j] + (-amp + amp*2*rnd)*perc;
                    //arr[i] = this.pv[i] + addedAmp + amp1*perc + amp2*(1-perc);
                }
                return arr;
            } else {
                return this.pv + addedAmps[0] + (-amp + amp*2*BMMath.random())*perc;
            }
        }.bind(this);

        if(thisProperty.loopIn) {
            loopIn = thisProperty.loopIn.bind(thisProperty);
            loop_in = loopIn;
        }

        if(thisProperty.loopOut) {
            loopOut = thisProperty.loopOut.bind(thisProperty);
            loop_out = loopOut;
        }

        if(thisProperty.smooth) {
            smooth = thisProperty.smooth.bind(thisProperty);
        }

        function loopInDuration(type,duration){
            return loopIn(type,duration,true);
        }

        function loopOutDuration(type,duration){
            return loopOut(type,duration,true);
        }

        if(this.getValueAtTime) {
            valueAtTime = this.getValueAtTime.bind(this);
        }

        if(this.getVelocityAtTime) {
            velocityAtTime = this.getVelocityAtTime.bind(this);
        }

        var comp = elem.comp.globalData.projectInterface.bind(elem.comp.globalData.projectInterface);

        function lookAt(elem1,elem2){
            var fVec = [elem2[0]-elem1[0],elem2[1]-elem1[1],elem2[2]-elem1[2]];
            var pitch = Math.atan2(fVec[0],Math.sqrt(fVec[1]*fVec[1]+fVec[2]*fVec[2]))/degToRads;
            var yaw = -Math.atan2(fVec[1],fVec[2])/degToRads;
            return [yaw,pitch,0];
        }

        function easeOut(t, tMin, tMax, val1, val2){
            return applyEase(easeOutBez, t, tMin, tMax, val1, val2);
        }

        function easeIn(t, tMin, tMax, val1, val2){
            return applyEase(easeInBez, t, tMin, tMax, val1, val2);
        }

        function ease(t, tMin, tMax, val1, val2){
            return applyEase(easeInOutBez, t, tMin, tMax, val1, val2);
        }

        function applyEase(fn, t, tMin, tMax, val1, val2) {
            if(val1 === undefined){
                val1 = tMin;
                val2 = tMax;
            } else {
                t = (t - tMin) / (tMax - tMin);
            }
            t = t > 1 ? 1 : t < 0 ? 0 : t;
            var mult = fn(t);
            if($bm_isInstanceOfArray(val1)) {
                var i, len = val1.length;
                var arr = createTypedArray('float32', len);
                for (i = 0; i < len; i += 1) {
                    arr[i] = (val2[i] - val1[i]) * mult + val1[i];
                }
                return arr;
            } else {
                return (val2 - val1) * mult + val1;
            }
        }

        function nearestKey(time){
            var i, len = data.k.length,index,keyTime;
            if(!data.k.length || typeof(data.k[0]) === 'number'){
                index = 0;
                keyTime = 0;
            } else {
                index = -1;
                time *= elem.comp.globalData.frameRate;
                if (time < data.k[0].t) {
                    index = 1;
                    keyTime = data.k[0].t;
                } else {
                    for(i=0;i<len-1;i+=1){
                        if(time === data.k[i].t){
                            index = i + 1;
                            keyTime = data.k[i].t;
                            break;
                        }else if(time>data.k[i].t && time<data.k[i+1].t){
                            if(time-data.k[i].t > data.k[i+1].t - time){
                                index = i + 2;
                                keyTime = data.k[i+1].t;
                            } else {
                                index = i + 1;
                                keyTime = data.k[i].t;
                            }
                            break;
                        }
                    }
                    if(index === -1){
                        index = i + 1;
                        keyTime = data.k[i].t;
                    }
                }
                
            }
            var ob = {};
            ob.index = index;
            ob.time = keyTime/elem.comp.globalData.frameRate;
            return ob;
        }

        function key(ind){
            var ob, i, len;
            if(!data.k.length || typeof(data.k[0]) === 'number'){
                throw new Error('The property has no keyframe at index ' + ind);
            }
            ind -= 1;
            ob = {
                time: data.k[ind].t/elem.comp.globalData.frameRate,
                value: []
            };
            var arr = data.k[ind].hasOwnProperty('s') ? data.k[ind].s : data.k[ind - 1].e;

            len = arr.length;
            for(i=0;i<len;i+=1){
                ob[i] = arr[i];
                ob.value[i] = arr[i]
            }
            return ob;
        }

        function framesToTime(frames, fps) { 
            if (!fps) {
                fps = elem.comp.globalData.frameRate;
            }
            return frames / fps;
        }

        function timeToFrames(t, fps) {
            if (!t && t !== 0) {
                t = time;
            }
            if (!fps) {
                fps = elem.comp.globalData.frameRate;
            }
            return t * fps;
        }

        function seedRandom(seed){
            BMMath.seedrandom(randSeed + seed);
        }

        function sourceRectAtTime() {
            return elem.sourceRectAtTime();
        }

        function substring(init, end) {
            if(typeof value === 'string') {
                if(end === undefined) {
                return value.substring(init)
                }
                return value.substring(init, end)
            }
            return '';
        }

        function substr(init, end) {
            if(typeof value === 'string') {
                if(end === undefined) {
                return value.substr(init)
                }
                return value.substr(init, end)
            }
            return '';
        }

        function posterizeTime(framesPerSecond) {
            time = framesPerSecond === 0 ? 0 : Math.floor(time * framesPerSecond) / framesPerSecond
            value = valueAtTime(time)
        }

        var time, velocity, value, text, textIndex, textTotal, selectorValue;
        var index = elem.data.ind;
        var hasParent = !!(elem.hierarchy && elem.hierarchy.length);
        var parent;
        var randSeed = Math.floor(Math.random()*1000000);
        var globalData = elem.globalData;
        function executeExpression(_value) {
            // globalData.pushExpression();
            value = _value;
            if (_needsRandom) {
                seedRandom(randSeed);
            }
            if (this.frameExpressionId === elem.globalData.frameId && this.propType !== 'textSelector') {
                return value;
            }
            if(this.propType === 'textSelector'){
                textIndex = this.textIndex;
                textTotal = this.textTotal;
                selectorValue = this.selectorValue;
            }
            if (!thisLayer) {
                text = elem.layerInterface.text;
                thisLayer = elem.layerInterface;
                thisComp = elem.comp.compInterface;
                toWorld = thisLayer.toWorld.bind(thisLayer);
                fromWorld = thisLayer.fromWorld.bind(thisLayer);
                fromComp = thisLayer.fromComp.bind(thisLayer);
                toComp = thisLayer.toComp.bind(thisLayer);
                mask = thisLayer.mask ? thisLayer.mask.bind(thisLayer) : null;
                fromCompToSurface = fromComp;
            }
            if (!transform) {
                transform = elem.layerInterface("ADBE Transform Group");
                $bm_transform = transform;
                if(transform) {
                    anchorPoint = transform.anchorPoint;
                    /*position = transform.position;
                    rotation = transform.rotation;
                    scale = transform.scale;*/
                }
            }
            
            if (elemType === 4 && !content) {
                content = thisLayer("ADBE Root Vectors Group");
            }
            if (!effect) {
                effect = thisLayer(4);
            }
            hasParent = !!(elem.hierarchy && elem.hierarchy.length);
            if (hasParent && !parent) {
                parent = elem.hierarchy[0].layerInterface;
            }
            time = this.comp.renderedFrame/this.comp.globalData.frameRate;
            if (needsVelocity) {
                velocity = velocityAtTime(time);
            }
            expression_function();
            this.frameExpressionId = elem.globalData.frameId;


            //TODO: Check if it's possible to return on ShapeInterface the .v value
            if (scoped_bm_rt.propType === "shape") {
                scoped_bm_rt = scoped_bm_rt.v;
            }
            // globalData.popExpression();
            return scoped_bm_rt;
        }
        return executeExpression;
    }

    ob.initiateExpression = initiateExpression;
    return ob;
}());
var expressionHelpers = (function(){

    function searchExpressions(elem,data,prop){
        if(data.x){
            prop.k = true;
            prop.x = true;
            prop.initiateExpression = ExpressionManager.initiateExpression;
            prop.effectsSequence.push(prop.initiateExpression(elem,data,prop).bind(prop));
        }
    }

    function getValueAtTime(frameNum) {
        frameNum *= this.elem.globalData.frameRate;
        frameNum -= this.offsetTime;
        if(frameNum !== this._cachingAtTime.lastFrame) {
            this._cachingAtTime.lastIndex = this._cachingAtTime.lastFrame < frameNum ? this._cachingAtTime.lastIndex : 0;
            this._cachingAtTime.value = this.interpolateValue(frameNum, this._cachingAtTime);
            this._cachingAtTime.lastFrame = frameNum;
        }
        return this._cachingAtTime.value;

    }

    function getSpeedAtTime(frameNum) {
        var delta = -0.01;
        var v1 = this.getValueAtTime(frameNum);
        var v2 = this.getValueAtTime(frameNum + delta);
        var speed = 0;
        if(v1.length){
            var i;
            for(i=0;i<v1.length;i+=1){
                speed += Math.pow(v2[i] - v1[i], 2);
            }
            speed = Math.sqrt(speed) * 100;
        } else {
            speed = 0;
        }
        return speed;
    }

    function getVelocityAtTime(frameNum) {
        if(this.vel !== undefined){
            return this.vel;
        }
        var delta = -0.001;
        //frameNum += this.elem.data.st;
        var v1 = this.getValueAtTime(frameNum);
        var v2 = this.getValueAtTime(frameNum + delta);
        var velocity;
        if(v1.length){
            velocity = createTypedArray('float32', v1.length);
            var i;
            for(i=0;i<v1.length;i+=1){
                //removing frameRate
                //if needed, don't add it here
                //velocity[i] = this.elem.globalData.frameRate*((v2[i] - v1[i])/delta);
                velocity[i] = (v2[i] - v1[i])/delta;
            }
        } else {
            velocity = (v2 - v1)/delta;
        }
        return velocity;
    }

    function getStaticValueAtTime() {
        return this.pv;
    }

    function setGroupProperty(propertyGroup){
        this.propertyGroup = propertyGroup;
    }

	return {
		searchExpressions: searchExpressions,
		getSpeedAtTime: getSpeedAtTime,
		getVelocityAtTime: getVelocityAtTime,
		getValueAtTime: getValueAtTime,
		getStaticValueAtTime: getStaticValueAtTime,
		setGroupProperty: setGroupProperty,
	}
}());
(function addPropertyDecorator() {

    function loopOut(type,duration,durationFlag){
        if(!this.k || !this.keyframes){
            return this.pv;
        }
        type = type ? type.toLowerCase() : '';
        var currentFrame = this.comp.renderedFrame;
        var keyframes = this.keyframes;
        var lastKeyFrame = keyframes[keyframes.length - 1].t;
        if(currentFrame<=lastKeyFrame){
            return this.pv;
        }else{
            var cycleDuration, firstKeyFrame;
            if(!durationFlag){
                if(!duration || duration > keyframes.length - 1){
                    duration = keyframes.length - 1;
                }
                firstKeyFrame = keyframes[keyframes.length - 1 - duration].t;
                cycleDuration = lastKeyFrame - firstKeyFrame;
            } else {
                if(!duration){
                    cycleDuration = Math.max(0,lastKeyFrame - this.elem.data.ip);
                } else {
                    cycleDuration = Math.abs(lastKeyFrame - elem.comp.globalData.frameRate*duration);
                }
                firstKeyFrame = lastKeyFrame - cycleDuration;
            }
            var i, len, ret;
            if(type === 'pingpong') {
                var iterations = Math.floor((currentFrame - firstKeyFrame)/cycleDuration);
                if(iterations % 2 !== 0){
                    return this.getValueAtTime(((cycleDuration - (currentFrame - firstKeyFrame) % cycleDuration +  firstKeyFrame)) / this.comp.globalData.frameRate, 0);
                }
            } else if(type === 'offset'){
                var initV = this.getValueAtTime(firstKeyFrame / this.comp.globalData.frameRate, 0);
                var endV = this.getValueAtTime(lastKeyFrame / this.comp.globalData.frameRate, 0);
                var current = this.getValueAtTime(((currentFrame - firstKeyFrame) % cycleDuration +  firstKeyFrame) / this.comp.globalData.frameRate, 0);
                var repeats = Math.floor((currentFrame - firstKeyFrame)/cycleDuration);
                if(this.pv.length){
                    ret = new Array(initV.length);
                    len = ret.length;
                    for(i=0;i<len;i+=1){
                        ret[i] = (endV[i]-initV[i])*repeats + current[i];
                    }
                    return ret;
                }
                return (endV-initV)*repeats + current;
            } else if(type === 'continue'){
                var lastValue = this.getValueAtTime(lastKeyFrame / this.comp.globalData.frameRate, 0);
                var nextLastValue = this.getValueAtTime((lastKeyFrame - 0.001) / this.comp.globalData.frameRate, 0);
                if(this.pv.length){
                    ret = new Array(lastValue.length);
                    len = ret.length;
                    for(i=0;i<len;i+=1){
                        ret[i] = lastValue[i] + (lastValue[i]-nextLastValue[i])*((currentFrame - lastKeyFrame)/ this.comp.globalData.frameRate)/0.0005;
                    }
                    return ret;
                }
                return lastValue + (lastValue-nextLastValue)*(((currentFrame - lastKeyFrame))/0.001);
            }
            return this.getValueAtTime((((currentFrame - firstKeyFrame) % cycleDuration +  firstKeyFrame)) / this.comp.globalData.frameRate, 0);
        }
    }

    function loopIn(type,duration, durationFlag) {
        if(!this.k){
            return this.pv;
        }
        type = type ? type.toLowerCase() : '';
        var currentFrame = this.comp.renderedFrame;
        var keyframes = this.keyframes;
        var firstKeyFrame = keyframes[0].t;
        if(currentFrame>=firstKeyFrame){
            return this.pv;
        }else{
            var cycleDuration, lastKeyFrame;
            if(!durationFlag){
                if(!duration || duration > keyframes.length - 1){
                    duration = keyframes.length - 1;
                }
                lastKeyFrame = keyframes[duration].t;
                cycleDuration = lastKeyFrame - firstKeyFrame;
            } else {
                if(!duration){
                    cycleDuration = Math.max(0,this.elem.data.op - firstKeyFrame);
                } else {
                    cycleDuration = Math.abs(elem.comp.globalData.frameRate*duration);
                }
                lastKeyFrame = firstKeyFrame + cycleDuration;
            }
            var i, len, ret;
            if(type === 'pingpong') {
                var iterations = Math.floor((firstKeyFrame - currentFrame)/cycleDuration);
                if(iterations % 2 === 0){
                    return this.getValueAtTime((((firstKeyFrame - currentFrame)%cycleDuration +  firstKeyFrame)) / this.comp.globalData.frameRate, 0);
                }
            } else if(type === 'offset'){
                var initV = this.getValueAtTime(firstKeyFrame / this.comp.globalData.frameRate, 0);
                var endV = this.getValueAtTime(lastKeyFrame / this.comp.globalData.frameRate, 0);
                var current = this.getValueAtTime((cycleDuration - (firstKeyFrame - currentFrame)%cycleDuration +  firstKeyFrame) / this.comp.globalData.frameRate, 0);
                var repeats = Math.floor((firstKeyFrame - currentFrame)/cycleDuration)+1;
                if(this.pv.length){
                    ret = new Array(initV.length);
                    len = ret.length;
                    for(i=0;i<len;i+=1){
                        ret[i] = current[i]-(endV[i]-initV[i])*repeats;
                    }
                    return ret;
                }
                return current-(endV-initV)*repeats;
            } else if(type === 'continue'){
                var firstValue = this.getValueAtTime(firstKeyFrame / this.comp.globalData.frameRate, 0);
                var nextFirstValue = this.getValueAtTime((firstKeyFrame + 0.001) / this.comp.globalData.frameRate, 0);
                if(this.pv.length){
                    ret = new Array(firstValue.length);
                    len = ret.length;
                    for(i=0;i<len;i+=1){
                        ret[i] = firstValue[i] + (firstValue[i]-nextFirstValue[i])*(firstKeyFrame - currentFrame)/0.001;
                    }
                    return ret;
                }
                return firstValue + (firstValue-nextFirstValue)*(firstKeyFrame - currentFrame)/0.001;
            }
            return this.getValueAtTime(((cycleDuration - (firstKeyFrame - currentFrame) % cycleDuration +  firstKeyFrame)) / this.comp.globalData.frameRate, 0);
        }
    }

    function smooth(width, samples) {
        if (!this.k){
            return this.pv;
        }
        width = (width || 0.4) * 0.5;
        samples = Math.floor(samples || 5);
        if (samples <= 1) {
            return this.pv;
        }
        var currentTime = this.comp.renderedFrame / this.comp.globalData.frameRate;
        var initFrame = currentTime - width;
        var endFrame = currentTime + width;
        var sampleFrequency = samples > 1 ? (endFrame - initFrame) / (samples - 1) : 1;
        var i = 0, j = 0;
        var value;
        if (this.pv.length) {
            value = createTypedArray('float32', this.pv.length);
        } else {
            value = 0;
        }
        var sampleValue;
        while (i < samples) {
            sampleValue = this.getValueAtTime(initFrame + i * sampleFrequency);
            if(this.pv.length) {
                for (j = 0; j < this.pv.length; j += 1) {
                    value[j] += sampleValue[j];
                }
            } else {
                value += sampleValue;
            }
            i += 1;
        }
        if(this.pv.length) {
            for (j = 0; j < this.pv.length; j += 1) {
                value[j] /= samples;
            }
        } else {
            value /= samples;
        }
        return value;
    }

    function getValueAtTime(frameNum) {
        frameNum *= this.elem.globalData.frameRate;
        frameNum -= this.offsetTime;
        if(frameNum !== this._cachingAtTime.lastFrame) {
            this._cachingAtTime.lastIndex = this._cachingAtTime.lastFrame < frameNum ? this._cachingAtTime.lastIndex : 0;
            this._cachingAtTime.value = this.interpolateValue(frameNum, this._cachingAtTime);
            this._cachingAtTime.lastFrame = frameNum;
        }
        return this._cachingAtTime.value;

    }

    function getTransformValueAtTime(time) {
        console.warn('Transform at time not supported');
    }

    function getTransformStaticValueAtTime(time) {

    }

    var getTransformProperty = TransformPropertyFactory.getTransformProperty;
    TransformPropertyFactory.getTransformProperty = function(elem, data, container) {
        var prop = getTransformProperty(elem, data, container);
        if(prop.dynamicProperties.length) {
            prop.getValueAtTime = getTransformValueAtTime.bind(prop);
        } else {
            prop.getValueAtTime = getTransformStaticValueAtTime.bind(prop);
        }
        prop.setGroupProperty = expressionHelpers.setGroupProperty;
        return prop;
    };

    var propertyGetProp = PropertyFactory.getProp;
    PropertyFactory.getProp = function(elem,data,type, mult, container){
        var prop = propertyGetProp(elem,data,type, mult, container);
        //prop.getVelocityAtTime = getVelocityAtTime;
        //prop.loopOut = loopOut;
        //prop.loopIn = loopIn;
        if(prop.kf){
            prop.getValueAtTime = expressionHelpers.getValueAtTime.bind(prop);
        } else {
            prop.getValueAtTime = expressionHelpers.getStaticValueAtTime.bind(prop);
        }
        prop.setGroupProperty = expressionHelpers.setGroupProperty;
        prop.loopOut = loopOut;
        prop.loopIn = loopIn;
        prop.smooth = smooth;
        prop.getVelocityAtTime = expressionHelpers.getVelocityAtTime.bind(prop);
        prop.getSpeedAtTime = expressionHelpers.getSpeedAtTime.bind(prop);
        prop.numKeys = data.a === 1 ? data.k.length : 0;
        prop.propertyIndex = data.ix;
        var value = 0;
        if(type !== 0) {
            value = createTypedArray('float32', data.a === 1 ?  data.k[0].s.length : data.k.length);
        }
        prop._cachingAtTime = {
            lastFrame: initialDefaultFrame,
            lastIndex: 0,
            value: value
        };
        expressionHelpers.searchExpressions(elem,data,prop);
        if(prop.k){
            container.addDynamicProperty(prop);
        }

        return prop;
    };

    function getShapeValueAtTime(frameNum) {
        //For now this caching object is created only when needed instead of creating it when the shape is initialized.
        if (!this._cachingAtTime) {
            this._cachingAtTime = {
                shapeValue: shape_pool.clone(this.pv),
                lastIndex: 0,
                lastTime: initialDefaultFrame
            };
        }
        
        frameNum *= this.elem.globalData.frameRate;
        frameNum -= this.offsetTime;
        if(frameNum !== this._cachingAtTime.lastTime) {
            this._cachingAtTime.lastIndex = this._cachingAtTime.lastTime < frameNum ? this._caching.lastIndex : 0;
            this._cachingAtTime.lastTime = frameNum;
            this.interpolateShape(frameNum, this._cachingAtTime.shapeValue, this._cachingAtTime);
        }
        return this._cachingAtTime.shapeValue;
    }

    var ShapePropertyConstructorFunction = ShapePropertyFactory.getConstructorFunction();
    var KeyframedShapePropertyConstructorFunction = ShapePropertyFactory.getKeyframedConstructorFunction();

    function ShapeExpressions(){}
    ShapeExpressions.prototype = {
        vertices: function(prop, time){
            if (this.k) {
                this.getValue();
            }
            var shapePath = this.v;
            if(time !== undefined) {
                shapePath = this.getValueAtTime(time, 0);
            }
            var i, len = shapePath._length;
            var vertices = shapePath[prop];
            var points = shapePath.v;
            var arr = createSizedArray(len);
            for(i = 0; i < len; i += 1) {
                if(prop === 'i' || prop === 'o') {
                    arr[i] = [vertices[i][0] - points[i][0], vertices[i][1] - points[i][1]];
                } else {
                    arr[i] = [vertices[i][0], vertices[i][1]];
                }
                
            }
            return arr;
        },
        points: function(time){
            return this.vertices('v', time);
        },
        inTangents: function(time){
            return this.vertices('i', time);
        },
        outTangents: function(time){
            return this.vertices('o', time);
        },
        isClosed: function(){
            return this.v.c;
        },
        pointOnPath: function(perc, time){
            var shapePath = this.v;
            if(time !== undefined) {
                shapePath = this.getValueAtTime(time, 0);
            }
            if(!this._segmentsLength) {
                this._segmentsLength = bez.getSegmentsLength(shapePath);
            }

            var segmentsLength = this._segmentsLength;
            var lengths = segmentsLength.lengths;
            var lengthPos = segmentsLength.totalLength * perc;
            var i = 0, len = lengths.length;
            var j = 0, jLen;
            var accumulatedLength = 0, pt;
            while(i < len) {
                if(accumulatedLength + lengths[i].addedLength > lengthPos) {
                    var initIndex = i;
                    var endIndex = (shapePath.c && i === len - 1) ? 0 : i + 1;
                    var segmentPerc = (lengthPos - accumulatedLength)/lengths[i].addedLength;
                    pt = bez.getPointInSegment(shapePath.v[initIndex], shapePath.v[endIndex], shapePath.o[initIndex], shapePath.i[endIndex], segmentPerc, lengths[i]);
                    break;
                } else {
                    accumulatedLength += lengths[i].addedLength;
                }
                i += 1;
            }
            if(!pt){
                pt = shapePath.c ? [shapePath.v[0][0],shapePath.v[0][1]]:[shapePath.v[shapePath._length-1][0],shapePath.v[shapePath._length-1][1]];
            }
            return pt;
        },
        vectorOnPath: function(perc, time, vectorType){
            //perc doesn't use triple equality because it can be a Number object as well as a primitive.
            perc = perc == 1 ? this.v.c ? 0 : 0.999 : perc;
            var pt1 = this.pointOnPath(perc, time);
            var pt2 = this.pointOnPath(perc + 0.001, time);
            var xLength = pt2[0] - pt1[0];
            var yLength = pt2[1] - pt1[1];
            var magnitude = Math.sqrt(Math.pow(xLength,2) + Math.pow(yLength,2));
            if (magnitude === 0) {
                return [0,0];
            }
            var unitVector = vectorType === 'tangent' ? [xLength/magnitude, yLength/magnitude] : [-yLength/magnitude, xLength/magnitude];
            return unitVector;
        },
        tangentOnPath: function(perc, time){
            return this.vectorOnPath(perc, time, 'tangent');
        },
        normalOnPath: function(perc, time){
            return this.vectorOnPath(perc, time, 'normal');
        },
        setGroupProperty: expressionHelpers.setGroupProperty,
        getValueAtTime: expressionHelpers.getStaticValueAtTime
    };
    extendPrototype([ShapeExpressions], ShapePropertyConstructorFunction);
    extendPrototype([ShapeExpressions], KeyframedShapePropertyConstructorFunction);
    KeyframedShapePropertyConstructorFunction.prototype.getValueAtTime = getShapeValueAtTime;
    KeyframedShapePropertyConstructorFunction.prototype.initiateExpression = ExpressionManager.initiateExpression;

    var propertyGetShapeProp = ShapePropertyFactory.getShapeProp;
    ShapePropertyFactory.getShapeProp = function(elem,data,type, arr, trims){
        var prop = propertyGetShapeProp(elem,data,type, arr, trims);
        prop.propertyIndex = data.ix;
        prop.lock = false;
        if(type === 3){
            expressionHelpers.searchExpressions(elem,data.pt,prop);
        } else if(type === 4){
            expressionHelpers.searchExpressions(elem,data.ks,prop);
        }
        if(prop.k){
            elem.addDynamicProperty(prop);
        }
        return prop;
    };
}());
(function addDecorator() {

    function searchExpressions(){
        if(this.data.d.x){
            this.calculateExpression = ExpressionManager.initiateExpression.bind(this)(this.elem,this.data.d,this);
            this.addEffect(this.getExpressionValue.bind(this));
            return true;
        }
    }

    TextProperty.prototype.getExpressionValue = function(currentValue, text) {
        var newValue = this.calculateExpression(text);
        if(currentValue.t !== newValue) {
            var newData = {};
            this.copyData(newData, currentValue);
            newData.t = newValue.toString();
            newData.__complete = false;
            return newData;
        }
        return currentValue;
    }

    TextProperty.prototype.searchProperty = function(){

        var isKeyframed = this.searchKeyframes();
        var hasExpressions = this.searchExpressions();
        this.kf = isKeyframed || hasExpressions;
        return this.kf;
    };

    TextProperty.prototype.searchExpressions = searchExpressions;
    
}());
var ShapeExpressionInterface = (function(){

    function iterateElements(shapes,view, propertyGroup){
        var arr = [];
        var i, len = shapes ? shapes.length : 0;
        for(i=0;i<len;i+=1){
            if(shapes[i].ty == 'gr'){
                arr.push(groupInterfaceFactory(shapes[i],view[i],propertyGroup));
            }else if(shapes[i].ty == 'fl'){
                arr.push(fillInterfaceFactory(shapes[i],view[i],propertyGroup));
            }else if(shapes[i].ty == 'st'){
                arr.push(strokeInterfaceFactory(shapes[i],view[i],propertyGroup));
            }else if(shapes[i].ty == 'tm'){
                arr.push(trimInterfaceFactory(shapes[i],view[i],propertyGroup));
            }else if(shapes[i].ty == 'tr'){
                //arr.push(transformInterfaceFactory(shapes[i],view[i],propertyGroup));
            }else if(shapes[i].ty == 'el'){
                arr.push(ellipseInterfaceFactory(shapes[i],view[i],propertyGroup));
            }else if(shapes[i].ty == 'sr'){
                arr.push(starInterfaceFactory(shapes[i],view[i],propertyGroup));
            } else if(shapes[i].ty == 'sh'){
                arr.push(pathInterfaceFactory(shapes[i],view[i],propertyGroup));
            } else if(shapes[i].ty == 'rc'){
                arr.push(rectInterfaceFactory(shapes[i],view[i],propertyGroup));
            } else if(shapes[i].ty == 'rd'){
                arr.push(roundedInterfaceFactory(shapes[i],view[i],propertyGroup));
            } else if(shapes[i].ty == 'rp'){
                arr.push(repeaterInterfaceFactory(shapes[i],view[i],propertyGroup));
            }
        }
        return arr;
    }

    function contentsInterfaceFactory(shape,view, propertyGroup){
       var interfaces;
       var interfaceFunction = function _interfaceFunction(value){
           var i = 0, len = interfaces.length;
            while(i<len){
                if(interfaces[i]._name === value || interfaces[i].mn === value || interfaces[i].propertyIndex === value || interfaces[i].ix === value || interfaces[i].ind === value){
                   return interfaces[i];
                }
                i+=1;
            }
            if(typeof value === 'number'){
               return interfaces[value-1];
            }
       };
       interfaceFunction.propertyGroup = function(val){
           if(val === 1){
               return interfaceFunction;
           } else{
               return propertyGroup(val-1);
           }
       };
       interfaces = iterateElements(shape.it, view.it, interfaceFunction.propertyGroup);
       interfaceFunction.numProperties = interfaces.length;
       interfaceFunction.propertyIndex = shape.cix;
       interfaceFunction._name = shape.nm;

       return interfaceFunction;
   }

    function groupInterfaceFactory(shape,view, propertyGroup){
        var interfaceFunction = function _interfaceFunction(value){
            switch(value){
                case 'ADBE Vectors Group':
                case 'Contents':
                case 2:
                    return interfaceFunction.content;
                //Not necessary for now. Keeping them here in case a new case appears
                //case 'ADBE Vector Transform Group':
                //case 3:
                default:
                    return interfaceFunction.transform;
            }
        };
        interfaceFunction.propertyGroup = function(val){
            if(val === 1){
                return interfaceFunction;
            } else{
                return propertyGroup(val-1);
            }
        };
        var content = contentsInterfaceFactory(shape,view,interfaceFunction.propertyGroup);
        var transformInterface = transformInterfaceFactory(shape.it[shape.it.length - 1],view.it[view.it.length - 1],interfaceFunction.propertyGroup);
        interfaceFunction.content = content;
        interfaceFunction.transform = transformInterface;
        Object.defineProperty(interfaceFunction, '_name', {
            get: function(){
                return shape.nm;
            }
        });
        //interfaceFunction.content = interfaceFunction;
        interfaceFunction.numProperties = shape.np;
        interfaceFunction.propertyIndex = shape.ix;
        interfaceFunction.nm = shape.nm;
        interfaceFunction.mn = shape.mn;
        return interfaceFunction;
    }

    function fillInterfaceFactory(shape,view,propertyGroup){
        function interfaceFunction(val){
            if(val === 'Color' || val === 'color'){
                return interfaceFunction.color;
            } else if(val === 'Opacity' || val === 'opacity'){
                return interfaceFunction.opacity;
            }
        }
        Object.defineProperties(interfaceFunction, {
            'color': {
                get: ExpressionPropertyInterface(view.c)
            },
            'opacity': {
                get: ExpressionPropertyInterface(view.o)
            },
            '_name': { value: shape.nm },
            'mn': { value: shape.mn }
        });

        view.c.setGroupProperty(propertyGroup);
        view.o.setGroupProperty(propertyGroup);
        return interfaceFunction;
    }

    function strokeInterfaceFactory(shape,view,propertyGroup){
        function _propertyGroup(val){
            if(val === 1){
                return ob;
            } else{
                return propertyGroup(val-1);
            }
        }
        function _dashPropertyGroup(val){
            if(val === 1){
                return dashOb;
            } else{
                return _propertyGroup(val-1);
            }
        }
        function addPropertyToDashOb(i) {
            Object.defineProperty(dashOb, shape.d[i].nm, {
                get: ExpressionPropertyInterface(view.d.dataProps[i].p)
            });
        }
        var i, len = shape.d ? shape.d.length : 0;
        var dashOb = {};
        for (i = 0; i < len; i += 1) {
            addPropertyToDashOb(i);
            view.d.dataProps[i].p.setGroupProperty(_dashPropertyGroup);
        }

        function interfaceFunction(val){
            if(val === 'Color' || val === 'color'){
                return interfaceFunction.color;
            } else if(val === 'Opacity' || val === 'opacity'){
                return interfaceFunction.opacity;
            } else if(val === 'Stroke Width' || val === 'stroke width'){
                return interfaceFunction.strokeWidth;
            }
        }
        Object.defineProperties(interfaceFunction, {
            'color': {
                get: ExpressionPropertyInterface(view.c)
            },
            'opacity': {
                get: ExpressionPropertyInterface(view.o)
            },
            'strokeWidth': {
                get: ExpressionPropertyInterface(view.w)
            },
            'dash': {
                get: function() {
                    return dashOb;
                }
            },
            '_name': { value: shape.nm },
            'mn': { value: shape.mn }
        });

        view.c.setGroupProperty(_propertyGroup);
        view.o.setGroupProperty(_propertyGroup);
        view.w.setGroupProperty(_propertyGroup);
        return interfaceFunction;
    }

    function trimInterfaceFactory(shape,view,propertyGroup){
        function _propertyGroup(val){
            if(val == 1){
                return interfaceFunction;
            } else {
                return propertyGroup(--val);
            }
        }
        interfaceFunction.propertyIndex = shape.ix;

        view.s.setGroupProperty(_propertyGroup);
        view.e.setGroupProperty(_propertyGroup);
        view.o.setGroupProperty(_propertyGroup);

        function interfaceFunction(val){
            if(val === shape.e.ix || val === 'End' || val === 'end'){
                return interfaceFunction.end;
            }
            if(val === shape.s.ix){
                return interfaceFunction.start;
            }
            if(val === shape.o.ix){
                return interfaceFunction.offset;
            }
        }
        interfaceFunction.propertyIndex = shape.ix;
        interfaceFunction.propertyGroup = propertyGroup;

        Object.defineProperties(interfaceFunction, {
            'start': {
                get: ExpressionPropertyInterface(view.s)
            },
            'end': {
                get: ExpressionPropertyInterface(view.e)
            },
            'offset': {
                get: ExpressionPropertyInterface(view.o)
            },
            '_name': { value: shape.nm }
        });
        interfaceFunction.mn = shape.mn;
        return interfaceFunction;
    }

    function transformInterfaceFactory(shape,view,propertyGroup){
        function _propertyGroup(val){
            if(val == 1){
                return interfaceFunction;
            } else {
                return propertyGroup(--val);
            }
        }
        view.transform.mProps.o.setGroupProperty(_propertyGroup);
        view.transform.mProps.p.setGroupProperty(_propertyGroup);
        view.transform.mProps.a.setGroupProperty(_propertyGroup);
        view.transform.mProps.s.setGroupProperty(_propertyGroup);
        view.transform.mProps.r.setGroupProperty(_propertyGroup);
        if(view.transform.mProps.sk){
            view.transform.mProps.sk.setGroupProperty(_propertyGroup);
            view.transform.mProps.sa.setGroupProperty(_propertyGroup);
        }
        view.transform.op.setGroupProperty(_propertyGroup);

        function interfaceFunction(value){
            if(shape.a.ix === value || value === 'Anchor Point'){
                return interfaceFunction.anchorPoint;
            }
            if(shape.o.ix === value || value === 'Opacity'){
                return interfaceFunction.opacity;
            }
            if(shape.p.ix === value || value === 'Position'){
                return interfaceFunction.position;
            }
            if(shape.r.ix === value || value === 'Rotation' || value === 'ADBE Vector Rotation'){
                return interfaceFunction.rotation;
            }
            if(shape.s.ix === value || value === 'Scale'){
                return interfaceFunction.scale;
            }
            if(shape.sk && shape.sk.ix === value || value === 'Skew'){
                return interfaceFunction.skew;
            }
            if(shape.sa && shape.sa.ix === value || value === 'Skew Axis'){
                return interfaceFunction.skewAxis;
            }

        }
        Object.defineProperties(interfaceFunction, {
            'opacity': {
                get: ExpressionPropertyInterface(view.transform.mProps.o)
            },
            'position': {
                get: ExpressionPropertyInterface(view.transform.mProps.p)
            },
            'anchorPoint': {
                get: ExpressionPropertyInterface(view.transform.mProps.a)
            },
            'scale': {
                get: ExpressionPropertyInterface(view.transform.mProps.s)
            },
            'rotation': {
                get: ExpressionPropertyInterface(view.transform.mProps.r)
            },
            'skew': {
                get: ExpressionPropertyInterface(view.transform.mProps.sk)
            },
            'skewAxis': {
                get: ExpressionPropertyInterface(view.transform.mProps.sa)
            },
            '_name': { value: shape.nm }
        });
        interfaceFunction.ty = 'tr';
        interfaceFunction.mn = shape.mn;
        interfaceFunction.propertyGroup = propertyGroup;
        return interfaceFunction;
    }

    function ellipseInterfaceFactory(shape,view,propertyGroup){
        function _propertyGroup(val){
            if(val == 1){
                return interfaceFunction;
            } else {
                return propertyGroup(--val);
            }
        }
        interfaceFunction.propertyIndex = shape.ix;
        var prop = view.sh.ty === 'tm' ? view.sh.prop : view.sh;
        prop.s.setGroupProperty(_propertyGroup);
        prop.p.setGroupProperty(_propertyGroup);
        function interfaceFunction(value){
            if(shape.p.ix === value){
                return interfaceFunction.position;
            }
            if(shape.s.ix === value){
                return interfaceFunction.size;
            }
        }

        Object.defineProperties(interfaceFunction, {
            'size': {
                get: ExpressionPropertyInterface(prop.s)
            },
            'position': {
                get: ExpressionPropertyInterface(prop.p)
            },
            '_name': { value: shape.nm }
        });
        interfaceFunction.mn = shape.mn;
        return interfaceFunction;
    }

    function starInterfaceFactory(shape,view,propertyGroup){
        function _propertyGroup(val){
            if(val == 1){
                return interfaceFunction;
            } else {
                return propertyGroup(--val);
            }
        }
        var prop = view.sh.ty === 'tm' ? view.sh.prop : view.sh;
        interfaceFunction.propertyIndex = shape.ix;
        prop.or.setGroupProperty(_propertyGroup);
        prop.os.setGroupProperty(_propertyGroup);
        prop.pt.setGroupProperty(_propertyGroup);
        prop.p.setGroupProperty(_propertyGroup);
        prop.r.setGroupProperty(_propertyGroup);
        if(shape.ir){
            prop.ir.setGroupProperty(_propertyGroup);
            prop.is.setGroupProperty(_propertyGroup);
        }

        function interfaceFunction(value){
            if(shape.p.ix === value){
                return interfaceFunction.position;
            }
            if(shape.r.ix === value){
                return interfaceFunction.rotation;
            }
            if(shape.pt.ix === value){
                return interfaceFunction.points;
            }
            if(shape.or.ix === value || 'ADBE Vector Star Outer Radius' === value){
                return interfaceFunction.outerRadius;
            }
            if(shape.os.ix === value){
                return interfaceFunction.outerRoundness;
            }
            if(shape.ir && (shape.ir.ix === value || 'ADBE Vector Star Inner Radius' === value)){
                return interfaceFunction.innerRadius;
            }
            if(shape.is && shape.is.ix === value){
                return interfaceFunction.innerRoundness;
            }

        }

        Object.defineProperties(interfaceFunction, {
            'position': {
                get: ExpressionPropertyInterface(prop.p)
            },
            'rotation': {
                get: ExpressionPropertyInterface(prop.r)
            },
            'points': {
                get: ExpressionPropertyInterface(prop.pt)
            },
            'outerRadius': {
                get: ExpressionPropertyInterface(prop.or)
            },
            'outerRoundness': {
                get: ExpressionPropertyInterface(prop.os)
            },
            'innerRadius': {
                get: ExpressionPropertyInterface(prop.ir)
            },
            'innerRoundness': {
                get: ExpressionPropertyInterface(prop.is)
            },
            '_name': { value: shape.nm }
        });
        interfaceFunction.mn = shape.mn;
        return interfaceFunction;
    }

    function rectInterfaceFactory(shape,view,propertyGroup){
        function _propertyGroup(val){
            if(val == 1){
                return interfaceFunction;
            } else {
                return propertyGroup(--val);
            }
        }
        var prop = view.sh.ty === 'tm' ? view.sh.prop : view.sh;
        interfaceFunction.propertyIndex = shape.ix;
        prop.p.setGroupProperty(_propertyGroup);
        prop.s.setGroupProperty(_propertyGroup);
        prop.r.setGroupProperty(_propertyGroup);

        function interfaceFunction(value){
            if(shape.p.ix === value){
                return interfaceFunction.position;
            }
            if(shape.r.ix === value){
                return interfaceFunction.roundness;
            }
            if(shape.s.ix === value || value === 'Size' || value === 'ADBE Vector Rect Size'){
                return interfaceFunction.size;
            }

        }
        Object.defineProperties(interfaceFunction, {
            'position': {
                get: ExpressionPropertyInterface(prop.p)
            },
            'roundness': {
                get: ExpressionPropertyInterface(prop.r)
            },
            'size': {
                get: ExpressionPropertyInterface(prop.s)
            },
            '_name': { value: shape.nm }
        });
        interfaceFunction.mn = shape.mn;
        return interfaceFunction;
    }

    function roundedInterfaceFactory(shape,view,propertyGroup){
        function _propertyGroup(val){
            if(val == 1){
                return interfaceFunction;
            } else {
                return propertyGroup(--val);
            }
        }
        var prop = view;
        interfaceFunction.propertyIndex = shape.ix;
        prop.rd.setGroupProperty(_propertyGroup);

        function interfaceFunction(value){
            if(shape.r.ix === value || 'Round Corners 1' === value){
                return interfaceFunction.radius;
            }

        }
        Object.defineProperties(interfaceFunction, {
            'radius': {
                get: ExpressionPropertyInterface(prop.rd)
            },
            '_name': { value: shape.nm }
        });
        interfaceFunction.mn = shape.mn;
        return interfaceFunction;
    }

    function repeaterInterfaceFactory(shape,view,propertyGroup){
        function _propertyGroup(val){
            if(val == 1){
                return interfaceFunction;
            } else {
                return propertyGroup(--val);
            }
        }
        var prop = view;
        interfaceFunction.propertyIndex = shape.ix;
        prop.c.setGroupProperty(_propertyGroup);
        prop.o.setGroupProperty(_propertyGroup);

        function interfaceFunction(value){
            if(shape.c.ix === value || 'Copies' === value){
                return interfaceFunction.copies;
            } else if(shape.o.ix === value || 'Offset' === value){
                return interfaceFunction.offset;
            }

        }
        Object.defineProperties(interfaceFunction, {
            'copies': {
                get: ExpressionPropertyInterface(prop.c)
            },
            'offset': {
                get: ExpressionPropertyInterface(prop.o)
            },
            '_name': { value: shape.nm }
        });
        interfaceFunction.mn = shape.mn;
        return interfaceFunction;
    }

    function pathInterfaceFactory(shape,view,propertyGroup){
        var prop = view.sh;
        function _propertyGroup(val){
            if(val == 1){
                return interfaceFunction;
            } else {
                return propertyGroup(--val);
            }
        }
        prop.setGroupProperty(_propertyGroup);

        function interfaceFunction(val){
            if(val === 'Shape' || val === 'shape' || val === 'Path' || val === 'path' || val === 'ADBE Vector Shape' || val === 2){
                return interfaceFunction.path;
            }
        }
        Object.defineProperties(interfaceFunction, {
            'path': {
                get: function(){
                    if(prop.k){
                        prop.getValue();
                    }
                    return prop;
                }
            },
            'shape': {
                get: function(){
                    if(prop.k){
                        prop.getValue();
                    }
                    return prop;
                }
            },
            '_name': { value: shape.nm },
            'ix': { value: shape.ix },
            'propertyIndex': { value: shape.ix },
            'mn': { value: shape.mn }
        });
        return interfaceFunction;
    }

    return function(shapes,view,propertyGroup) {
        var interfaces;
        function _interfaceFunction(value){
            if(typeof value === 'number'){
                return interfaces[value-1];
            } else {
                var i = 0, len = interfaces.length;
                while(i<len){
                    if(interfaces[i]._name === value){
                        return interfaces[i];
                    }
                    i+=1;
                }
            }
        }
        _interfaceFunction.propertyGroup = propertyGroup;
        interfaces = iterateElements(shapes, view, _interfaceFunction);
        _interfaceFunction.numProperties = interfaces.length;
        return _interfaceFunction;
    };
}());

var TextExpressionInterface = (function(){
	return function(elem){
        var _prevValue, _sourceText;
        function _thisLayerFunction(){
        }
        Object.defineProperty(_thisLayerFunction, "sourceText", {
            get: function(){
                elem.textProperty.getValue()
                var stringValue = elem.textProperty.currentData.t;
                if(stringValue !== _prevValue) {
                    elem.textProperty.currentData.t = _prevValue;
                    _sourceText = new String(stringValue);
                    //If stringValue is an empty string, eval returns undefined, so it has to be returned as a String primitive
                    _sourceText.value = stringValue ? stringValue : new String(stringValue);
                }
                return _sourceText;
            }
        });
        return _thisLayerFunction;
    };
}());
var LayerExpressionInterface = (function (){
    function toWorld(arr, time){
        var toWorldMat = new Matrix();
        toWorldMat.reset();
        var transformMat;
        if(time) {
            //Todo implement value at time on transform properties
            //transformMat = this._elem.finalTransform.mProp.getValueAtTime(time);
            transformMat = this._elem.finalTransform.mProp;
        } else {
            transformMat = this._elem.finalTransform.mProp;
        }
        transformMat.applyToMatrix(toWorldMat);
        if(this._elem.hierarchy && this._elem.hierarchy.length){
            var i, len = this._elem.hierarchy.length;
            for(i=0;i<len;i+=1){
                this._elem.hierarchy[i].finalTransform.mProp.applyToMatrix(toWorldMat);
            }
            return toWorldMat.applyToPointArray(arr[0],arr[1],arr[2]||0);
        }
        return toWorldMat.applyToPointArray(arr[0],arr[1],arr[2]||0);
    }
    function fromWorld(arr, time){
        var toWorldMat = new Matrix();
        toWorldMat.reset();
        var transformMat;
        if(time) {
            //Todo implement value at time on transform properties
            //transformMat = this._elem.finalTransform.mProp.getValueAtTime(time);
            transformMat = this._elem.finalTransform.mProp;
        } else {
            transformMat = this._elem.finalTransform.mProp;
        }
        transformMat.applyToMatrix(toWorldMat);
        if(this._elem.hierarchy && this._elem.hierarchy.length){
            var i, len = this._elem.hierarchy.length;
            for(i=0;i<len;i+=1){
                this._elem.hierarchy[i].finalTransform.mProp.applyToMatrix(toWorldMat);
            }
            return toWorldMat.inversePoint(arr);
        }
        return toWorldMat.inversePoint(arr);
    }
    function fromComp(arr){
        var toWorldMat = new Matrix();
        toWorldMat.reset();
        this._elem.finalTransform.mProp.applyToMatrix(toWorldMat);
        if(this._elem.hierarchy && this._elem.hierarchy.length){
            var i, len = this._elem.hierarchy.length;
            for(i=0;i<len;i+=1){
                this._elem.hierarchy[i].finalTransform.mProp.applyToMatrix(toWorldMat);
            }
            return toWorldMat.inversePoint(arr);
        }
        return toWorldMat.inversePoint(arr);
    }

    function sampleImage() {
        return [1,1,1,1];
    }


    return function(elem){

        var transformInterface;

        function _registerMaskInterface(maskManager){
            _thisLayerFunction.mask = new MaskManagerInterface(maskManager, elem);
        }
        function _registerEffectsInterface(effects){
            _thisLayerFunction.effect = effects;
        }

        function _thisLayerFunction(name){
            switch(name){
                case "ADBE Root Vectors Group":
                case "Contents":
                case 2:
                    return _thisLayerFunction.shapeInterface;
                case 1:
                case 6:
                case "Transform":
                case "transform":
                case "ADBE Transform Group":
                    return transformInterface;
                case 4:
                case "ADBE Effect Parade":
                case "effects":
                case "Effects":
                    return _thisLayerFunction.effect;
            }
        }
        _thisLayerFunction.toWorld = toWorld;
        _thisLayerFunction.fromWorld = fromWorld;
        _thisLayerFunction.toComp = toWorld;
        _thisLayerFunction.fromComp = fromComp;
        _thisLayerFunction.sampleImage = sampleImage;
        _thisLayerFunction.sourceRectAtTime = elem.sourceRectAtTime.bind(elem);
        _thisLayerFunction._elem = elem;
        transformInterface = TransformExpressionInterface(elem.finalTransform.mProp);
        var anchorPointDescriptor = getDescriptor(transformInterface, 'anchorPoint');
        Object.defineProperties(_thisLayerFunction,{
            hasParent: {
                get: function(){
                    return elem.hierarchy.length;
                }
            },
            parent: {
                get: function(){
                    return elem.hierarchy[0].layerInterface;
                }
            },
            rotation: getDescriptor(transformInterface, 'rotation'),
            scale: getDescriptor(transformInterface, 'scale'),
            position: getDescriptor(transformInterface, 'position'),
            opacity: getDescriptor(transformInterface, 'opacity'),
            anchorPoint: anchorPointDescriptor,
            anchor_point: anchorPointDescriptor,
            transform: {
                get: function () {
                    return transformInterface;
                }
            },
            active: {
                get: function(){
                    return elem.isInRange;
                }
            }
        });

        _thisLayerFunction.startTime = elem.data.st;
        _thisLayerFunction.index = elem.data.ind;
        _thisLayerFunction.source = elem.data.refId;
        _thisLayerFunction.height = elem.data.ty === 0 ? elem.data.h : 100;
        _thisLayerFunction.width = elem.data.ty === 0 ? elem.data.w : 100;
        _thisLayerFunction.inPoint = elem.data.ip/elem.comp.globalData.frameRate;
        _thisLayerFunction.outPoint = elem.data.op/elem.comp.globalData.frameRate;
        _thisLayerFunction._name = elem.data.nm;

        _thisLayerFunction.registerMaskInterface = _registerMaskInterface;
        _thisLayerFunction.registerEffectsInterface = _registerEffectsInterface;
        return _thisLayerFunction;
    };
}());

var CompExpressionInterface = (function () {
    return function(comp) {
        function _thisLayerFunction(name) {
            var i = 0, len = comp.layers.length;
            while ( i < len) {
                if (comp.layers[i].nm === name || comp.layers[i].ind === name) {
                    return comp.elements[i].layerInterface;
                }
                i += 1;
            }
            return null;
            //return {active:false};
        }
        Object.defineProperty(_thisLayerFunction, "_name", { value: comp.data.nm });
        _thisLayerFunction.layer = _thisLayerFunction;
        _thisLayerFunction.pixelAspect = 1;
        _thisLayerFunction.height = comp.data.h || comp.globalData.compSize.h;
        _thisLayerFunction.width = comp.data.w || comp.globalData.compSize.w;
        _thisLayerFunction.pixelAspect = 1;
        _thisLayerFunction.frameDuration = 1 / comp.globalData.frameRate;
        _thisLayerFunction.displayStartTime = 0;
        _thisLayerFunction.numLayers = comp.layers.length;
        return _thisLayerFunction;
    };
}());
var TransformExpressionInterface = (function (){
    return function(transform){
        function _thisFunction(name){
            switch(name){
                case "scale":
                case "Scale":
                case "ADBE Scale":
                case 6:
                    return _thisFunction.scale;
                case "rotation":
                case "Rotation":
                case "ADBE Rotation":
                case "ADBE Rotate Z":
                case 10:
                    return _thisFunction.rotation;
                case "ADBE Rotate X":
                    return _thisFunction.xRotation;
                case "ADBE Rotate Y":
                    return _thisFunction.yRotation;
                case "position":
                case "Position":
                case "ADBE Position":
                case 2:
                    return _thisFunction.position;
                case 'ADBE Position_0':
                    return _thisFunction.xPosition;
                case 'ADBE Position_1':
                    return _thisFunction.yPosition;
                case 'ADBE Position_2':
                    return _thisFunction.zPosition;
                case "anchorPoint":
                case "AnchorPoint":
                case "Anchor Point":
                case "ADBE AnchorPoint":
                case 1:
                    return _thisFunction.anchorPoint;
                case "opacity":
                case "Opacity":
                case 11:
                    return _thisFunction.opacity;
            }
        }

        Object.defineProperty(_thisFunction, "rotation", {
            get: ExpressionPropertyInterface(transform.r || transform.rz)
        });

        Object.defineProperty(_thisFunction, "zRotation", {
            get: ExpressionPropertyInterface(transform.rz || transform.r)
        });

        Object.defineProperty(_thisFunction, "xRotation", {
            get: ExpressionPropertyInterface(transform.rx)
        });

        Object.defineProperty(_thisFunction, "yRotation", {
            get: ExpressionPropertyInterface(transform.ry)
        });
        Object.defineProperty(_thisFunction, "scale", {
            get: ExpressionPropertyInterface(transform.s)
        });

        if(transform.p) {
            var _transformFactory = ExpressionPropertyInterface(transform.p);
        }
        Object.defineProperty(_thisFunction, "position", {
            get: function () {
                if(transform.p) {
                    return _transformFactory();
                } else {
                    return [transform.px.v, transform.py.v, transform.pz ? transform.pz.v : 0];
                }
            }
        });

        Object.defineProperty(_thisFunction, "xPosition", {
            get: ExpressionPropertyInterface(transform.px)
        });

        Object.defineProperty(_thisFunction, "yPosition", {
            get: ExpressionPropertyInterface(transform.py)
        });

        Object.defineProperty(_thisFunction, "zPosition", {
            get: ExpressionPropertyInterface(transform.pz)
        });

        Object.defineProperty(_thisFunction, "anchorPoint", {
            get: ExpressionPropertyInterface(transform.a)
        });

        Object.defineProperty(_thisFunction, "opacity", {
            get: ExpressionPropertyInterface(transform.o)
        });

        Object.defineProperty(_thisFunction, "skew", {
            get: ExpressionPropertyInterface(transform.sk)
        });

        Object.defineProperty(_thisFunction, "skewAxis", {
            get: ExpressionPropertyInterface(transform.sa)
        });

        Object.defineProperty(_thisFunction, "orientation", {
            get: ExpressionPropertyInterface(transform.or)
        });

        return _thisFunction;
    };
}());
var ProjectInterface = (function (){

    function registerComposition(comp){
        this.compositions.push(comp);
    }

    return function(){
        function _thisProjectFunction(name){
            var i = 0, len = this.compositions.length;
            while(i<len){
                if(this.compositions[i].data && this.compositions[i].data.nm === name){
                    if(this.compositions[i].prepareFrame && this.compositions[i].data.xt) {
                        this.compositions[i].prepareFrame(this.currentFrame);
                    }
                    return this.compositions[i].compInterface;
                }
                i+=1;
            }
        }

        _thisProjectFunction.compositions = [];
        _thisProjectFunction.currentFrame = 0;

        _thisProjectFunction.registerComposition = registerComposition;



        return _thisProjectFunction;
    };
}());
var EffectsExpressionInterface = (function (){
    var ob = {
        createEffectsInterface: createEffectsInterface
    };

    function createEffectsInterface(elem, propertyGroup){
        if(elem.effectsManager){

            var effectElements = [];
            var effectsData = elem.data.ef;
            var i, len = elem.effectsManager.effectElements.length;
            for(i=0;i<len;i+=1){
                effectElements.push(createGroupInterface(effectsData[i],elem.effectsManager.effectElements[i],propertyGroup,elem));
            }

            return function(name){
                var effects = elem.data.ef || [], i = 0, len = effects.length;
                while(i<len) {
                    if(name === effects[i].nm || name === effects[i].mn || name === effects[i].ix){
                        return effectElements[i];
                    }
                    i += 1;
                }
            };
        }
    }

    function createGroupInterface(data,elements, propertyGroup, elem){
        var effectElements = [];
        var i, len = data.ef.length;
        for(i=0;i<len;i+=1){
            if(data.ef[i].ty === 5){
                effectElements.push(createGroupInterface(data.ef[i],elements.effectElements[i],elements.effectElements[i].propertyGroup, elem));
            } else {
                effectElements.push(createValueInterface(elements.effectElements[i],data.ef[i].ty, elem, _propertyGroup));
            }
        }

        function _propertyGroup(val) {
            if(val === 1){
               return groupInterface;
            } else{
               return propertyGroup(val-1);
            }
        }

        var groupInterface = function(name){
            var effects = data.ef, i = 0, len = effects.length;
            while(i<len) {
                if(name === effects[i].nm || name === effects[i].mn || name === effects[i].ix){
                    if(effects[i].ty === 5){
                        return effectElements[i];
                    } else {
                        return effectElements[i]();
                    }
                }
                i += 1;
            }
            return effectElements[0]();
        };

        groupInterface.propertyGroup = _propertyGroup;

        if(data.mn === 'ADBE Color Control'){
            Object.defineProperty(groupInterface, 'color', {
                get: function(){
                    return effectElements[0]();
                }
            });
        }
        Object.defineProperty(groupInterface, 'numProperties', {
            get: function(){
                return data.np;
            }
        });
        groupInterface.active = groupInterface.enabled = data.en !== 0;
        return groupInterface;
    }

    function createValueInterface(element, type, elem, propertyGroup){
        var expressionProperty = ExpressionPropertyInterface(element.p);
        function interfaceFunction(){
            if(type === 10){
                return elem.comp.compInterface(element.p.v);
            }
            return expressionProperty();
        }

        if(element.p.setGroupProperty) {
            element.p.setGroupProperty(propertyGroup);
        }

        return interfaceFunction;
    }

    return ob;

}());
var MaskManagerInterface = (function(){

	function MaskInterface(mask, data){
		this._mask = mask;
		this._data = data;
	}
	Object.defineProperty(MaskInterface.prototype, 'maskPath', {
        get: function(){
            if(this._mask.prop.k){
                this._mask.prop.getValue();
            }
            return this._mask.prop;
        }
    });
	Object.defineProperty(MaskInterface.prototype, 'maskOpacity', {
        get: function(){
            if(this._mask.op.k){
                this._mask.op.getValue();
            }
            return this._mask.op.v * 100;
        }
    });

	var MaskManager = function(maskManager, elem){
		var _maskManager = maskManager;
		var _elem = elem;
		var _masksInterfaces = createSizedArray(maskManager.viewData.length);
		var i, len = maskManager.viewData.length;
		for(i = 0; i < len; i += 1) {
			_masksInterfaces[i] = new MaskInterface(maskManager.viewData[i], maskManager.masksProperties[i]);
		}

		var maskFunction = function(name){
			i = 0;
		    while(i<len){
		        if(maskManager.masksProperties[i].nm === name){
		            return _masksInterfaces[i];
		        }
		        i += 1;
		    }
		};
		return maskFunction;
	};
	return MaskManager;
}());

var ExpressionPropertyInterface = (function() {

    var defaultUnidimensionalValue = {pv:0, v:0, mult: 1}
    var defaultMultidimensionalValue = {pv:[0,0,0], v:[0,0,0], mult: 1}

    function completeProperty(expressionValue, property, type) {
        Object.defineProperty(expressionValue, 'velocity', {
            get: function(){
                return property.getVelocityAtTime(property.comp.currentFrame);
            }
        });
        expressionValue.numKeys = property.keyframes ? property.keyframes.length : 0;
        expressionValue.key = function(pos) {
            if (!expressionValue.numKeys) {
                return 0;
            } else {
                var value = '';
                if ('s' in property.keyframes[pos-1]) {
                    value = property.keyframes[pos-1].s;
                } else if ('e' in property.keyframes[pos-2]) {
                    value = property.keyframes[pos-2].e;
                } else {
                    value = property.keyframes[pos-2].s;
                }
                var valueProp = type === 'unidimensional' ? new Number(value) : Object.assign({}, value);
                valueProp.time = property.keyframes[pos-1].t / property.elem.comp.globalData.frameRate;
                return valueProp;
            }
        };
        expressionValue.valueAtTime = property.getValueAtTime;
        expressionValue.speedAtTime = property.getSpeedAtTime;
        expressionValue.velocityAtTime = property.getVelocityAtTime;
        expressionValue.propertyGroup = property.propertyGroup;
    }

    function UnidimensionalPropertyInterface(property) {
        if(!property || !('pv' in property)) {
            property = defaultUnidimensionalValue;
        }
        var mult = 1 / property.mult;
        var val = property.pv * mult;
        var expressionValue = new Number(val);
        expressionValue.value = val;
        completeProperty(expressionValue, property, 'unidimensional');

        return function() {
            if (property.k) {
                property.getValue();
            }
            val = property.v * mult;
            if(expressionValue.value !== val) {
                expressionValue = new Number(val);
                expressionValue.value = val;
                completeProperty(expressionValue, property, 'unidimensional');
            }
            return expressionValue;
        }
    }

    function MultidimensionalPropertyInterface(property) {
        if(!property || !('pv' in property)) {
            property = defaultMultidimensionalValue;
        }
        var mult = 1 / property.mult;
        var len = property.pv.length;
        var expressionValue = createTypedArray('float32', len);
        var arrValue = createTypedArray('float32', len);
        expressionValue.value = arrValue;
        completeProperty(expressionValue, property, 'multidimensional');

        return function() {
            if (property.k) {
                property.getValue();
            }
            for (var i = 0; i < len; i += 1) {
                expressionValue[i] = arrValue[i] = property.v[i] * mult;
            }
            return expressionValue;
        }
    }

    //TODO: try to avoid using this getter
    function defaultGetter() {
        return defaultUnidimensionalValue;
    }
    
    return function(property) {
        if(!property) {
            return defaultGetter;
        } else if (property.propType === 'unidimensional') {
            return UnidimensionalPropertyInterface(property);
        } else {
            return MultidimensionalPropertyInterface(property);
        }
    }
}());

(function(){

    var TextExpressionSelectorProp = (function(){

        function getValueProxy(index,total){
            this.textIndex = index+1;
            this.textTotal = total;
            this.v = this.getValue() * this.mult;
            return this.v;
        }

        return function TextExpressionSelectorProp(elem,data){
            this.pv = 1;
            this.comp = elem.comp;
            this.elem = elem;
            this.mult = 0.01;
            this.propType = 'textSelector';
            this.textTotal = data.totalChars;
            this.selectorValue = 100;
            this.lastValue = [1,1,1];
            this.k = true;
            this.x = true;
            this.getValue = ExpressionManager.initiateExpression.bind(this)(elem,data,this);
            this.getMult = getValueProxy;
            this.getVelocityAtTime = expressionHelpers.getVelocityAtTime;
            if(this.kf){
                this.getValueAtTime = expressionHelpers.getValueAtTime.bind(this);
            } else {
                this.getValueAtTime = expressionHelpers.getStaticValueAtTime.bind(this);
            }
            this.setGroupProperty = expressionHelpers.setGroupProperty;
        };
    }());

	var propertyGetTextProp = TextSelectorProp.getTextSelectorProp;
	TextSelectorProp.getTextSelectorProp = function(elem, data,arr){
	    if(data.t === 1){
	        return new TextExpressionSelectorProp(elem, data,arr);
	    } else {
	        return propertyGetTextProp(elem,data,arr);
	    }
	};
}());
function SliderEffect(data,elem, container){
    this.p = PropertyFactory.getProp(elem,data.v,0,0,container);
}
function AngleEffect(data,elem, container){
    this.p = PropertyFactory.getProp(elem,data.v,0,0,container);
}
function ColorEffect(data,elem, container){
    this.p = PropertyFactory.getProp(elem,data.v,1,0,container);
}
function PointEffect(data,elem, container){
    this.p = PropertyFactory.getProp(elem,data.v,1,0,container);
}
function LayerIndexEffect(data,elem, container){
    this.p = PropertyFactory.getProp(elem,data.v,0,0,container);
}
function MaskIndexEffect(data,elem, container){
    this.p = PropertyFactory.getProp(elem,data.v,0,0,container);
}
function CheckboxEffect(data,elem, container){
    this.p = PropertyFactory.getProp(elem,data.v,0,0,container);
}
function NoValueEffect(){
    this.p = {};
}
function EffectsManager(){}
function EffectsManager(data,element){
    var effects = data.ef || [];
    this.effectElements = [];
    var i,len = effects.length;
    var effectItem;
    for(i=0;i<len;i++) {
        effectItem = new GroupEffect(effects[i],element);
        this.effectElements.push(effectItem);
    }
}

function GroupEffect(data,element){
    this.init(data,element);
}

extendPrototype([DynamicPropertyContainer], GroupEffect);

GroupEffect.prototype.getValue = GroupEffect.prototype.iterateDynamicProperties;

GroupEffect.prototype.init = function(data,element){
    this.data = data;
    this.effectElements = [];
    this.initDynamicPropertyContainer(element);
    var i, len = this.data.ef.length;
    var eff, effects = this.data.ef;
    for(i=0;i<len;i+=1){
        eff = null;
        switch(effects[i].ty){
            case 0:
                eff = new SliderEffect(effects[i],element,this);
                break;
            case 1:
                eff = new AngleEffect(effects[i],element,this);
                break;
            case 2:
                eff = new ColorEffect(effects[i],element,this);
                break;
            case 3:
                eff = new PointEffect(effects[i],element,this);
                break;
            case 4:
            case 7:
                eff = new CheckboxEffect(effects[i],element,this);
                break;
            case 10:
                eff = new LayerIndexEffect(effects[i],element,this);
                break;
            case 11:
                eff = new MaskIndexEffect(effects[i],element,this);
                break;
            case 5:
                eff = new EffectsManager(effects[i],element,this);
                break;
            //case 6:
            default:
                eff = new NoValueEffect(effects[i],element,this);
                break;
        }
        if(eff) {
            this.effectElements.push(eff);
        }
    }
};

var lottie = {};

var _isFrozen = false;

function setLocationHref (href) {
    locationHref = href;
}

function searchAnimations() {
    if (standalone === true) {
        animationManager.searchAnimations(animationData, standalone, renderer);
    } else {
        animationManager.searchAnimations();
    }
}

function setSubframeRendering(flag) {
    subframeEnabled = flag;
}

function loadAnimation(params) {
    if (standalone === true) {
        params.animationData = JSON.parse(animationData);
    }
    return animationManager.loadAnimation(params);
}

function setQuality(value) {
    if (typeof value === 'string') {
        switch (value) {
            case 'high':
                defaultCurveSegments = 200;
                break;
            case 'medium':
                defaultCurveSegments = 50;
                break;
            case 'low':
                defaultCurveSegments = 10;
                break;
        }
    } else if (!isNaN(value) && value > 1) {
        defaultCurveSegments = value;
    }
    if (defaultCurveSegments >= 50) {
        roundValues(false);
    } else {
        roundValues(true);
    }
}

function inBrowser() {
    return typeof navigator !== 'undefined';
}

function installPlugin(type, plugin) {
    if (type === 'expressions') {
        expressionsPlugin = plugin;
    }
}

function getFactory(name) {
    switch (name) {
        case "propertyFactory":
            return PropertyFactory;
        case "shapePropertyFactory":
            return ShapePropertyFactory;
        case "matrix":
            return Matrix;
    }
}

lottie.play = animationManager.play;
lottie.pause = animationManager.pause;
lottie.setLocationHref = setLocationHref;
lottie.togglePause = animationManager.togglePause;
lottie.setSpeed = animationManager.setSpeed;
lottie.setDirection = animationManager.setDirection;
lottie.stop = animationManager.stop;
lottie.searchAnimations = searchAnimations;
lottie.registerAnimation = animationManager.registerAnimation;
lottie.loadAnimation = loadAnimation;
lottie.setSubframeRendering = setSubframeRendering;
lottie.resize = animationManager.resize;
//lottie.start = start;
lottie.goToAndStop = animationManager.goToAndStop;
lottie.destroy = animationManager.destroy;
lottie.setQuality = setQuality;
lottie.inBrowser = inBrowser;
lottie.installPlugin = installPlugin;
lottie.freeze = animationManager.freeze;
lottie.unfreeze = animationManager.unfreeze;
lottie.getRegisteredAnimations = animationManager.getRegisteredAnimations;
lottie.__getFactory = getFactory;
lottie.version = '5.6.8';

function checkReady() {
    if (document.readyState === "complete") {
        clearInterval(readyStateCheckInterval);
        searchAnimations();
    }
}

function getQueryVariable(variable) {
    var vars = queryString.split('&');
    for (var i = 0; i < vars.length; i++) {
        var pair = vars[i].split('=');
        if (decodeURIComponent(pair[0]) == variable) {
            return decodeURIComponent(pair[1]);
        }
    }
}
var standalone = '__[STANDALONE]__';
var animationData = '__[ANIMATIONDATA]__';
var renderer = '';
if (standalone) {
    var scripts = document.getElementsByTagName('script');
    var index = scripts.length - 1;
    var myScript = scripts[index] || {
        src: ''
    };
    var queryString = myScript.src.replace(/^[^\?]+\??/, '');
    renderer = getQueryVariable('renderer');
}
var readyStateCheckInterval = setInterval(checkReady, 100);

return lottie;
}));

/***/ }),

/***/ "./node_modules/native-url/dist/index.js":
/*!***********************************************!*\
  !*** ./node_modules/native-url/dist/index.js ***!
  \***********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var e,t=(e=__webpack_require__(/*! querystring */ "./node_modules/querystring-es3/index.js"))&&"object"==typeof e&&"default"in e?e.default:e,r=/https?|ftp|gopher|file/;function o(e){"string"==typeof e&&(e=g(e));var o=function(e,t,r){var o=e.auth,a=e.hostname,s=e.protocol||"",c=e.pathname||"",h=e.hash||"",p=e.query||"",n=!1;o=o?encodeURIComponent(o).replace(/%3A/i,":")+"@":"",e.host?n=o+e.host:a&&(n=o+(~a.indexOf(":")?"["+a+"]":a),e.port&&(n+=":"+e.port)),p&&"object"==typeof p&&(p=t.encode(p));var l=e.search||p&&"?"+p||"";return s&&":"!==s.substr(-1)&&(s+=":"),e.slashes||(!s||r.test(s))&&!1!==n?(n="//"+(n||""),c&&"/"!==c[0]&&(c="/"+c)):n||(n=""),h&&"#"!==h[0]&&(h="#"+h),l&&"?"!==l[0]&&(l="?"+l),{protocol:s,host:n,pathname:c=c.replace(/[?#]/g,encodeURIComponent),search:l=l.replace("#","%23"),hash:h}}(e,t,r);return""+o.protocol+o.host+o.pathname+o.search+o.hash}var a="http://",s="w.w",c=a+s,h=/^([a-z0-9.+-]*:\/\/\/)([a-z0-9.+-]:\/*)?/i,p=/https?|ftp|gopher|file/;function n(e,t){var r="string"==typeof e?g(e):e;e="object"==typeof e?o(e):e;var s=g(t),n="";r.protocol&&!r.slashes&&(n=r.protocol,e=e.replace(r.protocol,""),n+="/"===t[0]||"/"===e[0]?"/":""),n&&s.protocol&&(n="",s.slashes||(n=s.protocol,t=t.replace(s.protocol,"")));var l=e.match(h);l&&!s.protocol&&(e=e.substr((n=l[1]+(l[2]||"")).length),/^\/\/[^/]/.test(t)&&(n=n.slice(0,-1)));var i=new URL(e,c+"/"),f=new URL(t,i).toString().replace(c,""),u=s.protocol||r.protocol;return u+=r.slashes||s.slashes?"//":"",!n&&u?f=f.replace(a,u):n&&(f=f.replace(a,"")),p.test(f)||~t.indexOf(".")||"/"===e.slice(-1)||"/"===t.slice(-1)||"/"!==f.slice(-1)||(f=f.slice(0,-1)),n&&(f=n+("/"===f[0]?f.substr(1):f)),f}function l(){}l.parse=g,l.format=o,l.resolve=n,l.resolveObject=n;var i=/^https?|ftp|gopher|file/,f=/^(.*?)([#?].*)/,u=/^([a-z0-9.+-]*:)(\/{0,3})(.*)/i,m=/^([a-z0-9.+-]*:)?\/\/\/*/i,v=/^([a-z0-9.+-]*:)(\/{0,2})\[(.*)\]$/i;function d(e){try{return decodeURI(e)}catch(t){return e}}function g(e,r,a){if(void 0===r&&(r=!1),void 0===a&&(a=!1),e&&"object"==typeof e&&e instanceof l)return e;var h=(e=e.trim()).match(f);e=h?d(h[1]).replace(/\\/g,"/")+h[2]:d(e).replace(/\\/g,"/"),v.test(e)&&"/"!==e.slice(-1)&&(e+="/");var p=!/(^javascript)/.test(e)&&e.match(u),n=m.test(e),g="";p&&(i.test(p[1])||(g=p[1].toLowerCase(),e=""+p[2]+p[3]),p[2]||(n=!1,i.test(p[1])?(g=p[1],e=""+p[3]):e="//"+p[3]),3!==p[2].length&&1!==p[2].length||(g=p[1],e="/"+p[3]));var b,y=(h?h[1]:e).match(/(:[0-9]+)/),j="";y&&y[1]&&3===y[1].length&&(e=e.replace(j=y[1],j+"00"));var w=new l,x="",U="";try{b=new URL(e)}catch(t){x=t,g||a||!/^\/\//.test(e)||/^\/\/.+[@.]/.test(e)||(U="/",e=e.substr(1));try{b=new URL(e,c)}catch(e){return w.protocol=g,w.href=g,w}}w.slashes=n&&!U,w.host=b.host===s?"":b.host,w.hostname=b.hostname===s?"":b.hostname.replace(/(\[|\])/g,""),w.protocol=x?g||null:b.protocol,w.search=b.search.replace(/\\/g,"%5C"),w.hash=b.hash.replace(/\\/g,"%5C");var R=e.split("#");!w.search&&~R[0].indexOf("?")&&(w.search="?"),w.hash||""!==R[1]||(w.hash="#"),w.query=r?t.decode(b.search.substr(1)):w.search.substr(1),w.pathname=U+d(b.pathname).replace(/"/g,"%22"),"about:"===w.protocol&&"blank"===w.pathname&&(w.protocol="",w.pathname=""),x&&"/"!==e[0]&&(w.pathname=w.pathname.substr(1)),g&&!i.test(g)&&"/"!==e.slice(-1)&&"/"===w.pathname&&(w.pathname=""),w.path=w.pathname+w.search,w.auth=[b.username,b.password].map(decodeURIComponent).filter(Boolean).join(":"),w.port=b.port,j&&(w.host=w.host.replace(j+"00",j),w.port=w.port.slice(0,-2)),w.href=U?""+w.pathname+w.search+w.hash:o(w);var O=/^(file)/.test(w.href)?["host","hostname"]:[];return Object.keys(w).forEach(function(e){~O.indexOf(e)||(w[e]=w[e]||null)}),w}exports.parse=g,exports.format=o,exports.resolve=n,exports.resolveObject=function(e,t){return g(n(e,t))},exports.Url=l;
//# sourceMappingURL=index.js.map


/***/ }),

/***/ "./node_modules/next/dist/build/polyfills/object-assign.js":
/*!***********************************************************************************************************************!*\
  !*** delegated ./node_modules/next/dist/build/polyfills/object-assign.js from dll-reference dll_2adc2403d89adc16ead0 ***!
  \***********************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

module.exports = (__webpack_require__(/*! dll-reference dll_2adc2403d89adc16ead0 */ "dll-reference dll_2adc2403d89adc16ead0"))("./node_modules/next/dist/build/polyfills/object-assign.js");

/***/ }),

/***/ "./node_modules/next/dist/build/polyfills/object.assign/index.js":
/*!***********************************************************************!*\
  !*** ./node_modules/next/dist/build/polyfills/object.assign/index.js ***!
  \***********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var assign=Object.assign.bind(Object);function g(){return assign;}Object.defineProperties(g(),{implementation:{get:g},shim:{value:g},getPolyfill:{value:g}});module.exports=g();

/***/ }),

/***/ "./node_modules/next/dist/build/webpack/loaders/next-client-pages-loader.js?page=%2Fblog&absolutePagePath=D%3A%5CDesktop%5CX%5CWebsites%5Chominian-web%5Cpages%5Cblog.js!./":
/*!*******************************************************************************************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-client-pages-loader.js?page=%2Fblog&absolutePagePath=D%3A%5CDesktop%5CX%5CWebsites%5Chominian-web%5Cpages%5Cblog.js ***!
  \*******************************************************************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {


    (window.__NEXT_P=window.__NEXT_P||[]).push(["/blog", function() {
      var mod = __webpack_require__(/*! ./pages/blog.js */ "./pages/blog.js")
      if(true) {
        module.hot.accept(/*! ./pages/blog.js */ "./pages/blog.js", function() {
          if(!next.router.components["/blog"]) return
          var updatedPage = __webpack_require__(/*! ./pages/blog.js */ "./pages/blog.js")
          next.router.update("/blog", updatedPage)
        })
      }
      return mod
    }]);
  

/***/ }),

/***/ "./node_modules/next/dist/client/link.js":
/*!***********************************************!*\
  !*** ./node_modules/next/dist/client/link.js ***!
  \***********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _classCallCheck = __webpack_require__(/*! @babel/runtime/helpers/classCallCheck */ "./node_modules/@babel/runtime/helpers/classCallCheck.js");

var _createClass = __webpack_require__(/*! @babel/runtime/helpers/createClass */ "./node_modules/@babel/runtime/helpers/createClass.js");

var _inherits = __webpack_require__(/*! @babel/runtime/helpers/inherits */ "./node_modules/@babel/runtime/helpers/inherits.js");

var _possibleConstructorReturn = __webpack_require__(/*! @babel/runtime/helpers/possibleConstructorReturn */ "./node_modules/@babel/runtime/helpers/possibleConstructorReturn.js");

var _getPrototypeOf = __webpack_require__(/*! @babel/runtime/helpers/getPrototypeOf */ "./node_modules/@babel/runtime/helpers/getPrototypeOf.js");

function _createSuper(Derived) { return function () { var Super = _getPrototypeOf(Derived), result; if (_isNativeReflectConstruct()) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }

var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "./node_modules/@babel/runtime/helpers/interopRequireDefault.js");

var _interopRequireWildcard = __webpack_require__(/*! @babel/runtime/helpers/interopRequireWildcard */ "./node_modules/@babel/runtime/helpers/interopRequireWildcard.js");

exports.__esModule = true;
exports["default"] = void 0;

var _react = _interopRequireWildcard(__webpack_require__(/*! react */ "./node_modules/react/index.js"));

var _url = __webpack_require__(/*! url */ "./node_modules/native-url/dist/index.js");

var _utils = __webpack_require__(/*! ../next-server/lib/utils */ "./node_modules/next/dist/next-server/lib/utils.js");

var _router = _interopRequireDefault(__webpack_require__(/*! ./router */ "./node_modules/next/dist/client/router.js"));

var _router2 = __webpack_require__(/*! ../next-server/lib/router/router */ "./node_modules/next/dist/next-server/lib/router/router.js");

function isLocal(href) {
  var url = (0, _url.parse)(href, false, true);
  var origin = (0, _url.parse)((0, _utils.getLocationOrigin)(), false, true);
  return !url.host || url.protocol === origin.protocol && url.host === origin.host;
}

function memoizedFormatUrl(formatFunc) {
  var lastHref = null;
  var lastAs = null;
  var lastResult = null;
  return function (href, as) {
    if (lastResult && href === lastHref && as === lastAs) {
      return lastResult;
    }

    var result = formatFunc(href, as);
    lastHref = href;
    lastAs = as;
    lastResult = result;
    return result;
  };
}

function formatUrl(url) {
  return url && typeof url === 'object' ? (0, _utils.formatWithValidation)(url) : url;
}

var observer;
var listeners = new Map();
var IntersectionObserver = true ? window.IntersectionObserver : undefined;
var prefetched = {};

function getObserver() {
  // Return shared instance of IntersectionObserver if already created
  if (observer) {
    return observer;
  } // Only create shared IntersectionObserver if supported in browser


  if (!IntersectionObserver) {
    return undefined;
  }

  return observer = new IntersectionObserver(function (entries) {
    entries.forEach(function (entry) {
      if (!listeners.has(entry.target)) {
        return;
      }

      var cb = listeners.get(entry.target);

      if (entry.isIntersecting || entry.intersectionRatio > 0) {
        observer.unobserve(entry.target);
        listeners["delete"](entry.target);
        cb();
      }
    });
  }, {
    rootMargin: '200px'
  });
}

var listenToIntersections = function listenToIntersections(el, cb) {
  var observer = getObserver();

  if (!observer) {
    return function () {};
  }

  observer.observe(el);
  listeners.set(el, cb);
  return function () {
    try {
      observer.unobserve(el);
    } catch (err) {
      console.error(err);
    }

    listeners["delete"](el);
  };
};

var Link = /*#__PURE__*/function (_react$Component) {
  _inherits(Link, _react$Component);

  var _super = _createSuper(Link);

  function Link(props) {
    var _this;

    _classCallCheck(this, Link);

    _this = _super.call(this, props);
    _this.p = void 0;

    _this.cleanUpListeners = function () {};

    _this.formatUrls = memoizedFormatUrl(function (href, asHref) {
      return {
        href: (0, _router2.addBasePath)(formatUrl(href)),
        as: asHref ? (0, _router2.addBasePath)(formatUrl(asHref)) : asHref
      };
    });

    _this.linkClicked = function (e) {
      var _e$currentTarget = e.currentTarget,
          nodeName = _e$currentTarget.nodeName,
          target = _e$currentTarget.target;

      if (nodeName === 'A' && (target && target !== '_self' || e.metaKey || e.ctrlKey || e.shiftKey || e.nativeEvent && e.nativeEvent.which === 2)) {
        // ignore click for new tab / new window behavior
        return;
      }

      var _this$formatUrls = _this.formatUrls(_this.props.href, _this.props.as),
          href = _this$formatUrls.href,
          as = _this$formatUrls.as;

      if (!isLocal(href)) {
        // ignore click if it's outside our scope (e.g. https://google.com)
        return;
      }

      var pathname = window.location.pathname;
      href = (0, _url.resolve)(pathname, href);
      as = as ? (0, _url.resolve)(pathname, as) : href;
      e.preventDefault(); //  avoid scroll for urls with anchor refs

      var scroll = _this.props.scroll;

      if (scroll == null) {
        scroll = as.indexOf('#') < 0;
      } // replace state instead of push if prop is present


      _router["default"][_this.props.replace ? 'replace' : 'push'](href, as, {
        shallow: _this.props.shallow
      }).then(function (success) {
        if (!success) return;

        if (scroll) {
          window.scrollTo(0, 0);
          document.body.focus();
        }
      });
    };

    if (true) {
      if (props.prefetch) {
        console.warn('Next.js auto-prefetches automatically based on viewport. The prefetch attribute is no longer needed. More: https://err.sh/zeit/next.js/prefetch-true-deprecated');
      }
    }

    _this.p = props.prefetch !== false;
    return _this;
  }

  _createClass(Link, [{
    key: "componentWillUnmount",
    value: function componentWillUnmount() {
      this.cleanUpListeners();
    }
  }, {
    key: "getPaths",
    value: function getPaths() {
      var pathname = window.location.pathname;

      var _this$formatUrls2 = this.formatUrls(this.props.href, this.props.as),
          parsedHref = _this$formatUrls2.href,
          parsedAs = _this$formatUrls2.as;

      var resolvedHref = (0, _url.resolve)(pathname, parsedHref);
      return [resolvedHref, parsedAs ? (0, _url.resolve)(pathname, parsedAs) : resolvedHref];
    }
  }, {
    key: "handleRef",
    value: function handleRef(ref) {
      var _this2 = this;

      if (this.p && IntersectionObserver && ref && ref.tagName) {
        this.cleanUpListeners();
        var isPrefetched = prefetched[this.getPaths().join( // Join on an invalid URI character
        '%')];

        if (!isPrefetched) {
          this.cleanUpListeners = listenToIntersections(ref, function () {
            _this2.prefetch();
          });
        }
      }
    } // The function is memoized so that no extra lifecycles are needed
    // as per https://reactjs.org/blog/2018/06/07/you-probably-dont-need-derived-state.html

  }, {
    key: "prefetch",
    value: function prefetch(options) {
      if (!this.p || false) return; // Prefetch the JSON page if asked (only in the client)

      var paths = this.getPaths(); // We need to handle a prefetch error here since we may be
      // loading with priority which can reject but we don't
      // want to force navigation since this is only a prefetch

      _router["default"].prefetch(paths[
      /* href */
      0], paths[
      /* asPath */
      1], options)["catch"](function (err) {
        if (true) {
          // rethrow to show invalid URL errors
          throw err;
        }
      });

      prefetched[paths.join( // Join on an invalid URI character
      '%')] = true;
    }
  }, {
    key: "render",
    value: function render() {
      var _this3 = this;

      var children = this.props.children;

      var _this$formatUrls3 = this.formatUrls(this.props.href, this.props.as),
          href = _this$formatUrls3.href,
          as = _this$formatUrls3.as; // Deprecated. Warning shown by propType check. If the children provided is a string (<Link>example</Link>) we wrap it in an <a> tag


      if (typeof children === 'string') {
        children = _react["default"].createElement("a", null, children);
      } // This will return the first child, if multiple are provided it will throw an error


      var child = _react.Children.only(children);

      var props = {
        ref: function ref(el) {
          _this3.handleRef(el);

          if (child && typeof child === 'object' && child.ref) {
            if (typeof child.ref === 'function') child.ref(el);else if (typeof child.ref === 'object') {
              child.ref.current = el;
            }
          }
        },
        onMouseEnter: function onMouseEnter(e) {
          if (child.props && typeof child.props.onMouseEnter === 'function') {
            child.props.onMouseEnter(e);
          }

          _this3.prefetch({
            priority: true
          });
        },
        onClick: function onClick(e) {
          if (child.props && typeof child.props.onClick === 'function') {
            child.props.onClick(e);
          }

          if (!e.defaultPrevented) {
            _this3.linkClicked(e);
          }
        }
      }; // If child is an <a> tag and doesn't have a href attribute, or if the 'passHref' property is
      // defined, we specify the current 'href', so that repetition is not needed by the user

      if (this.props.passHref || child.type === 'a' && !('href' in child.props)) {
        props.href = as || href;
      } // Add the ending slash to the paths. So, we can serve the
      // "<page>/index.html" directly.


      if (false) { var rewriteUrlForNextExport; }

      return _react["default"].cloneElement(child, props);
    }
  }]);

  return Link;
}(_react.Component);

if (true) {
  var warn = (0, _utils.execOnce)(console.error); // This module gets removed by webpack.IgnorePlugin

  var PropTypes = __webpack_require__(/*! prop-types */ "./node_modules/prop-types/index.js");

  var exact = __webpack_require__(/*! prop-types-exact */ "./node_modules/prop-types-exact/build/index.js"); // @ts-ignore the property is supported, when declaring it on the class it outputs an extra bit of code which is not needed.


  Link.propTypes = exact({
    href: PropTypes.oneOfType([PropTypes.string, PropTypes.object]).isRequired,
    as: PropTypes.oneOfType([PropTypes.string, PropTypes.object]),
    prefetch: PropTypes.bool,
    replace: PropTypes.bool,
    shallow: PropTypes.bool,
    passHref: PropTypes.bool,
    scroll: PropTypes.bool,
    children: PropTypes.oneOfType([PropTypes.element, function (props, propName) {
      var value = props[propName];

      if (typeof value === 'string') {
        warn("Warning: You're using a string directly inside <Link>. This usage has been deprecated. Please add an <a> tag as child of <Link>");
      }

      return null;
    }]).isRequired
  });
}

var _default = Link;
exports["default"] = _default;

/***/ }),

/***/ "./node_modules/next/dist/client/router.js":
/*!*************************************************!*\
  !*** ./node_modules/next/dist/client/router.js ***!
  \*************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _construct = __webpack_require__(/*! @babel/runtime/helpers/construct */ "./node_modules/@babel/runtime/helpers/construct.js");

function _createForOfIteratorHelper(o) { if (typeof Symbol === "undefined" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (o = _unsupportedIterableToArray(o))) { var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } var it, normalCompletion = true, didErr = false, err; return { s: function s() { it = o[Symbol.iterator](); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it["return"] != null) it["return"](); } finally { if (didErr) throw err; } } }; }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(n); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

var _interopRequireWildcard = __webpack_require__(/*! @babel/runtime/helpers/interopRequireWildcard */ "./node_modules/@babel/runtime/helpers/interopRequireWildcard.js");

var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "./node_modules/@babel/runtime/helpers/interopRequireDefault.js");

exports.__esModule = true;
exports.useRouter = useRouter;
exports.makePublicRouterInstance = makePublicRouterInstance;
exports.createRouter = exports.withRouter = exports["default"] = void 0;

var _react = _interopRequireDefault(__webpack_require__(/*! react */ "./node_modules/react/index.js"));

var _router2 = _interopRequireWildcard(__webpack_require__(/*! ../next-server/lib/router/router */ "./node_modules/next/dist/next-server/lib/router/router.js"));

exports.Router = _router2["default"];
exports.NextRouter = _router2.NextRouter;

var _routerContext = __webpack_require__(/*! ../next-server/lib/router-context */ "./node_modules/next/dist/next-server/lib/router-context.js");

var _withRouter = _interopRequireDefault(__webpack_require__(/*! ./with-router */ "./node_modules/next/dist/client/with-router.js"));

exports.withRouter = _withRouter["default"];
/* global window */

var singletonRouter = {
  router: null,
  // holds the actual router instance
  readyCallbacks: [],
  ready: function ready(cb) {
    if (this.router) return cb();

    if (true) {
      this.readyCallbacks.push(cb);
    }
  }
}; // Create public properties and methods of the router in the singletonRouter

var urlPropertyFields = ['pathname', 'route', 'query', 'asPath', 'components', 'isFallback', 'basePath'];
var routerEvents = ['routeChangeStart', 'beforeHistoryChange', 'routeChangeComplete', 'routeChangeError', 'hashChangeStart', 'hashChangeComplete'];
var coreMethodFields = ['push', 'replace', 'reload', 'back', 'prefetch', 'beforePopState']; // Events is a static property on the router, the router doesn't have to be initialized to use it

Object.defineProperty(singletonRouter, 'events', {
  get: function get() {
    return _router2["default"].events;
  }
});
urlPropertyFields.forEach(function (field) {
  // Here we need to use Object.defineProperty because, we need to return
  // the property assigned to the actual router
  // The value might get changed as we change routes and this is the
  // proper way to access it
  Object.defineProperty(singletonRouter, field, {
    get: function get() {
      var router = getRouter();
      return router[field];
    }
  });
});
coreMethodFields.forEach(function (field) {
  // We don't really know the types here, so we add them later instead
  ;

  singletonRouter[field] = function () {
    var router = getRouter();
    return router[field].apply(router, arguments);
  };
});
routerEvents.forEach(function (event) {
  singletonRouter.ready(function () {
    _router2["default"].events.on(event, function () {
      var eventField = "on" + event.charAt(0).toUpperCase() + event.substring(1);
      var _singletonRouter = singletonRouter;

      if (_singletonRouter[eventField]) {
        try {
          _singletonRouter[eventField].apply(_singletonRouter, arguments);
        } catch (err) {
          // tslint:disable-next-line:no-console
          console.error("Error when running the Router event: " + eventField); // tslint:disable-next-line:no-console

          console.error(err.message + "\n" + err.stack);
        }
      }
    });
  });
});

function getRouter() {
  if (!singletonRouter.router) {
    var message = 'No router instance found.\n' + 'You should only use "next/router" inside the client side of your app.\n';
    throw new Error(message);
  }

  return singletonRouter.router;
} // Export the singletonRouter and this is the public API.


var _default = singletonRouter; // Reexport the withRoute HOC

exports["default"] = _default;

function useRouter() {
  return _react["default"].useContext(_routerContext.RouterContext);
} // INTERNAL APIS
// -------------
// (do not use following exports inside the app)
// Create a router and assign it as the singleton instance.
// This is used in client side when we are initilizing the app.
// This should **not** use inside the server.


var createRouter = function createRouter() {
  for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
    args[_key] = arguments[_key];
  }

  singletonRouter.router = _construct(_router2["default"], args);
  singletonRouter.readyCallbacks.forEach(function (cb) {
    return cb();
  });
  singletonRouter.readyCallbacks = [];
  return singletonRouter.router;
}; // This function is used to create the `withRouter` router instance


exports.createRouter = createRouter;

function makePublicRouterInstance(router) {
  var _router = router;
  var instance = {};

  var _iterator = _createForOfIteratorHelper(urlPropertyFields),
      _step;

  try {
    for (_iterator.s(); !(_step = _iterator.n()).done;) {
      var property = _step.value;

      if (typeof _router[property] === 'object') {
        instance[property] = Object.assign({}, _router[property]); // makes sure query is not stateful

        continue;
      }

      instance[property] = _router[property];
    } // Events is a static property on the router, the router doesn't have to be initialized to use it

  } catch (err) {
    _iterator.e(err);
  } finally {
    _iterator.f();
  }

  instance.events = _router2["default"].events;
  coreMethodFields.forEach(function (field) {
    instance[field] = function () {
      return _router[field].apply(_router, arguments);
    };
  });
  return instance;
}

/***/ }),

/***/ "./node_modules/next/dist/client/with-router.js":
/*!******************************************************!*\
  !*** ./node_modules/next/dist/client/with-router.js ***!
  \******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "./node_modules/@babel/runtime/helpers/interopRequireDefault.js");

exports.__esModule = true;
exports["default"] = withRouter;

var _react = _interopRequireDefault(__webpack_require__(/*! react */ "./node_modules/react/index.js"));

var _router = __webpack_require__(/*! ./router */ "./node_modules/next/dist/client/router.js");

function withRouter(ComposedComponent) {
  function WithRouterWrapper(props) {
    return _react["default"].createElement(ComposedComponent, Object.assign({
      router: (0, _router.useRouter)()
    }, props));
  }

  WithRouterWrapper.getInitialProps = ComposedComponent.getInitialProps // This is needed to allow checking for custom getInitialProps in _app
  ;
  WithRouterWrapper.origGetInitialProps = ComposedComponent.origGetInitialProps;

  if (true) {
    var name = ComposedComponent.displayName || ComposedComponent.name || 'Unknown';
    WithRouterWrapper.displayName = "withRouter(" + name + ")";
  }

  return WithRouterWrapper;
}

/***/ }),

/***/ "./node_modules/next/dist/next-server/lib/amp-context.js":
/*!***************************************************************!*\
  !*** ./node_modules/next/dist/next-server/lib/amp-context.js ***!
  \***************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var __importStar = this && this.__importStar || function (mod) {
  if (mod && mod.__esModule) return mod;
  var result = {};
  if (mod != null) for (var k in mod) {
    if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];
  }
  result["default"] = mod;
  return result;
};

Object.defineProperty(exports, "__esModule", {
  value: true
});

var React = __importStar(__webpack_require__(/*! react */ "./node_modules/react/index.js"));

exports.AmpStateContext = React.createContext({});

if (true) {
  exports.AmpStateContext.displayName = 'AmpStateContext';
}

/***/ }),

/***/ "./node_modules/next/dist/next-server/lib/amp.js":
/*!*******************************************************!*\
  !*** ./node_modules/next/dist/next-server/lib/amp.js ***!
  \*******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var __importDefault = this && this.__importDefault || function (mod) {
  return mod && mod.__esModule ? mod : {
    "default": mod
  };
};

Object.defineProperty(exports, "__esModule", {
  value: true
});

var react_1 = __importDefault(__webpack_require__(/*! react */ "./node_modules/react/index.js"));

var amp_context_1 = __webpack_require__(/*! ./amp-context */ "./node_modules/next/dist/next-server/lib/amp-context.js");

function isInAmpMode() {
  var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},
      _ref$ampFirst = _ref.ampFirst,
      ampFirst = _ref$ampFirst === void 0 ? false : _ref$ampFirst,
      _ref$hybrid = _ref.hybrid,
      hybrid = _ref$hybrid === void 0 ? false : _ref$hybrid,
      _ref$hasQuery = _ref.hasQuery,
      hasQuery = _ref$hasQuery === void 0 ? false : _ref$hasQuery;

  return ampFirst || hybrid && hasQuery;
}

exports.isInAmpMode = isInAmpMode;

function useAmp() {
  // Don't assign the context value to a variable to save bytes
  return isInAmpMode(react_1["default"].useContext(amp_context_1.AmpStateContext));
}

exports.useAmp = useAmp;

/***/ }),

/***/ "./node_modules/next/dist/next-server/lib/head-manager-context.js":
/*!************************************************************************!*\
  !*** ./node_modules/next/dist/next-server/lib/head-manager-context.js ***!
  \************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var __importStar = this && this.__importStar || function (mod) {
  if (mod && mod.__esModule) return mod;
  var result = {};
  if (mod != null) for (var k in mod) {
    if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];
  }
  result["default"] = mod;
  return result;
};

Object.defineProperty(exports, "__esModule", {
  value: true
});

var React = __importStar(__webpack_require__(/*! react */ "./node_modules/react/index.js"));

exports.HeadManagerContext = React.createContext(null);

if (true) {
  exports.HeadManagerContext.displayName = 'HeadManagerContext';
}

/***/ }),

/***/ "./node_modules/next/dist/next-server/lib/head.js":
/*!********************************************************!*\
  !*** ./node_modules/next/dist/next-server/lib/head.js ***!
  \********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var __importDefault = this && this.__importDefault || function (mod) {
  return mod && mod.__esModule ? mod : {
    "default": mod
  };
};

Object.defineProperty(exports, "__esModule", {
  value: true
});

var react_1 = __importDefault(__webpack_require__(/*! react */ "./node_modules/react/index.js"));

var side_effect_1 = __importDefault(__webpack_require__(/*! ./side-effect */ "./node_modules/next/dist/next-server/lib/side-effect.js"));

var amp_context_1 = __webpack_require__(/*! ./amp-context */ "./node_modules/next/dist/next-server/lib/amp-context.js");

var head_manager_context_1 = __webpack_require__(/*! ./head-manager-context */ "./node_modules/next/dist/next-server/lib/head-manager-context.js");

var amp_1 = __webpack_require__(/*! ./amp */ "./node_modules/next/dist/next-server/lib/amp.js");

function defaultHead() {
  var inAmpMode = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;
  var head = [react_1["default"].createElement("meta", {
    charSet: "utf-8"
  })];

  if (!inAmpMode) {
    head.push(react_1["default"].createElement("meta", {
      name: "viewport",
      content: "width=device-width"
    }));
  }

  return head;
}

exports.defaultHead = defaultHead;

function onlyReactElement(list, child) {
  // React children can be "string" or "number" in this case we ignore them for backwards compat
  if (typeof child === 'string' || typeof child === 'number') {
    return list;
  } // Adds support for React.Fragment


  if (child.type === react_1["default"].Fragment) {
    return list.concat(react_1["default"].Children.toArray(child.props.children).reduce(function (fragmentList, fragmentChild) {
      if (typeof fragmentChild === 'string' || typeof fragmentChild === 'number') {
        return fragmentList;
      }

      return fragmentList.concat(fragmentChild);
    }, []));
  }

  return list.concat(child);
}

var METATYPES = ['name', 'httpEquiv', 'charSet', 'itemProp'];
/*
 returns a function for filtering head child elements
 which shouldn't be duplicated, like <title/>
 Also adds support for deduplicated `key` properties
*/

function unique() {
  var keys = new Set();
  var tags = new Set();
  var metaTypes = new Set();
  var metaCategories = {};
  return function (h) {
    var unique = true;

    if (h.key && typeof h.key !== 'number' && h.key.indexOf('$') > 0) {
      var key = h.key.slice(h.key.indexOf('$') + 1);

      if (keys.has(key)) {
        unique = false;
      } else {
        keys.add(key);
      }
    } // eslint-disable-next-line default-case


    switch (h.type) {
      case 'title':
      case 'base':
        if (tags.has(h.type)) {
          unique = false;
        } else {
          tags.add(h.type);
        }

        break;

      case 'meta':
        for (var i = 0, len = METATYPES.length; i < len; i++) {
          var metatype = METATYPES[i];
          if (!h.props.hasOwnProperty(metatype)) continue;

          if (metatype === 'charSet') {
            if (metaTypes.has(metatype)) {
              unique = false;
            } else {
              metaTypes.add(metatype);
            }
          } else {
            var category = h.props[metatype];
            var categories = metaCategories[metatype] || new Set();

            if (categories.has(category)) {
              unique = false;
            } else {
              categories.add(category);
              metaCategories[metatype] = categories;
            }
          }
        }

        break;
    }

    return unique;
  };
}
/**
 *
 * @param headElements List of multiple <Head> instances
 */


function reduceComponents(headElements, props) {
  return headElements.reduce(function (list, headElement) {
    var headElementChildren = react_1["default"].Children.toArray(headElement.props.children);
    return list.concat(headElementChildren);
  }, []).reduce(onlyReactElement, []).reverse().concat(defaultHead(props.inAmpMode)).filter(unique()).reverse().map(function (c, i) {
    var key = c.key || i;
    return react_1["default"].cloneElement(c, {
      key: key
    });
  });
}

var Effect = side_effect_1["default"]();
/**
 * This component injects elements to `<head>` of your page.
 * To avoid duplicated `tags` in `<head>` you can use the `key` property, which will make sure every tag is only rendered once.
 */

function Head(_ref) {
  var children = _ref.children;
  return react_1["default"].createElement(amp_context_1.AmpStateContext.Consumer, null, function (ampState) {
    return react_1["default"].createElement(head_manager_context_1.HeadManagerContext.Consumer, null, function (updateHead) {
      return react_1["default"].createElement(Effect, {
        reduceComponentsToState: reduceComponents,
        handleStateChange: updateHead,
        inAmpMode: amp_1.isInAmpMode(ampState)
      }, children);
    });
  });
}

Head.rewind = Effect.rewind;
exports["default"] = Head;

/***/ }),

/***/ "./node_modules/next/dist/next-server/lib/mitt.js":
/*!********************************************************!*\
  !*** ./node_modules/next/dist/next-server/lib/mitt.js ***!
  \********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/*
MIT License

Copyright (c) Jason Miller (https://jasonformat.com/)

Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
*/

Object.defineProperty(exports, "__esModule", {
  value: true
});

function mitt() {
  var all = Object.create(null);
  return {
    on: function on(type, handler) {
      ;
      (all[type] || (all[type] = [])).push(handler);
    },
    off: function off(type, handler) {
      if (all[type]) {
        // tslint:disable-next-line:no-bitwise
        all[type].splice(all[type].indexOf(handler) >>> 0, 1);
      }
    },
    emit: function emit(type) {
      for (var _len = arguments.length, evts = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
        evts[_key - 1] = arguments[_key];
      }

      // eslint-disable-next-line array-callback-return
      ;
      (all[type] || []).slice().map(function (handler) {
        handler.apply(void 0, evts);
      });
    }
  };
}

exports["default"] = mitt;

/***/ }),

/***/ "./node_modules/next/dist/next-server/lib/router-context.js":
/*!******************************************************************!*\
  !*** ./node_modules/next/dist/next-server/lib/router-context.js ***!
  \******************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var __importStar = this && this.__importStar || function (mod) {
  if (mod && mod.__esModule) return mod;
  var result = {};
  if (mod != null) for (var k in mod) {
    if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];
  }
  result["default"] = mod;
  return result;
};

Object.defineProperty(exports, "__esModule", {
  value: true
});

var React = __importStar(__webpack_require__(/*! react */ "./node_modules/react/index.js"));

exports.RouterContext = React.createContext(null);

if (true) {
  exports.RouterContext.displayName = 'RouterContext';
}

/***/ }),

/***/ "./node_modules/next/dist/next-server/lib/router/router.js":
/*!*****************************************************************!*\
  !*** ./node_modules/next/dist/next-server/lib/router/router.js ***!
  \*****************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _regeneratorRuntime = __webpack_require__(/*! @babel/runtime/regenerator */ "./node_modules/@babel/runtime/regenerator/index.js");

var _slicedToArray = __webpack_require__(/*! @babel/runtime/helpers/slicedToArray */ "./node_modules/@babel/runtime/helpers/slicedToArray.js");

var _classCallCheck = __webpack_require__(/*! @babel/runtime/helpers/classCallCheck */ "./node_modules/@babel/runtime/helpers/classCallCheck.js");

var _createClass = __webpack_require__(/*! @babel/runtime/helpers/createClass */ "./node_modules/@babel/runtime/helpers/createClass.js");

var __importDefault = this && this.__importDefault || function (mod) {
  return mod && mod.__esModule ? mod : {
    "default": mod
  };
};

Object.defineProperty(exports, "__esModule", {
  value: true
});

var url_1 = __webpack_require__(/*! url */ "./node_modules/native-url/dist/index.js");

var mitt_1 = __importDefault(__webpack_require__(/*! ../mitt */ "./node_modules/next/dist/next-server/lib/mitt.js"));

var utils_1 = __webpack_require__(/*! ../utils */ "./node_modules/next/dist/next-server/lib/utils.js");

var is_dynamic_1 = __webpack_require__(/*! ./utils/is-dynamic */ "./node_modules/next/dist/next-server/lib/router/utils/is-dynamic.js");

var route_matcher_1 = __webpack_require__(/*! ./utils/route-matcher */ "./node_modules/next/dist/next-server/lib/router/utils/route-matcher.js");

var route_regex_1 = __webpack_require__(/*! ./utils/route-regex */ "./node_modules/next/dist/next-server/lib/router/utils/route-regex.js");

var basePath =  false || '';

function addBasePath(path) {
  return path.indexOf(basePath) !== 0 ? basePath + path : path;
}

exports.addBasePath = addBasePath;

function delBasePath(path) {
  return path.indexOf(basePath) === 0 ? path.substr(basePath.length) || '/' : path;
}

function toRoute(path) {
  return path.replace(/\/$/, '') || '/';
}

var prepareRoute = function prepareRoute(path) {
  return toRoute(!path || path === '/' ? '/index' : path);
};

function fetchNextData(pathname, query, isServerRender, cb) {
  var attempts = isServerRender ? 3 : 1;

  function getResponse() {
    return fetch(utils_1.formatWithValidation({
      // @ts-ignore __NEXT_DATA__
      pathname: "/_next/data/".concat(__NEXT_DATA__.buildId).concat(pathname, ".json"),
      query: query
    }), {
      // Cookies are required to be present for Next.js' SSG "Preview Mode".
      // Cookies may also be required for `getServerSideProps`.
      //
      // > `fetch` won’t send cookies, unless you set the credentials init
      // > option.
      // https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API/Using_Fetch
      //
      // > For maximum browser compatibility when it comes to sending &
      // > receiving cookies, always supply the `credentials: 'same-origin'`
      // > option instead of relying on the default.
      // https://github.com/github/fetch#caveats
      credentials: 'same-origin'
    }).then(function (res) {
      if (!res.ok) {
        if (--attempts > 0 && res.status >= 500) {
          return getResponse();
        }

        throw new Error("Failed to load static props");
      }

      return res.json();
    });
  }

  return getResponse().then(function (data) {
    return cb ? cb(data) : data;
  })["catch"](function (err) {
    // We should only trigger a server-side transition if this was caused
    // on a client-side transition. Otherwise, we'd get into an infinite
    // loop.
    if (!isServerRender) {
      ;
      err.code = 'PAGE_LOAD_ERROR';
    }

    throw err;
  });
}

var Router = /*#__PURE__*/function () {
  function Router(pathname, query, as, _ref) {
    var _this = this;

    var initialProps = _ref.initialProps,
        pageLoader = _ref.pageLoader,
        App = _ref.App,
        wrapApp = _ref.wrapApp,
        Component = _ref.Component,
        err = _ref.err,
        subscription = _ref.subscription,
        isFallback = _ref.isFallback;

    _classCallCheck(this, Router);

    // Static Data Cache
    this.sdc = {};

    this.onPopState = function (e) {
      if (!e.state) {
        // We get state as undefined for two reasons.
        //  1. With older safari (< 8) and older chrome (< 34)
        //  2. When the URL changed with #
        //
        // In the both cases, we don't need to proceed and change the route.
        // (as it's already changed)
        // But we can simply replace the state with the new changes.
        // Actually, for (1) we don't need to nothing. But it's hard to detect that event.
        // So, doing the following for (1) does no harm.
        var _pathname = _this.pathname,
            _query = _this.query;

        _this.changeState('replaceState', utils_1.formatWithValidation({
          pathname: _pathname,
          query: _query
        }), utils_1.getURL());

        return;
      } // Make sure we don't re-render on initial load,
      // can be caused by navigating back from an external site


      if (e.state && _this.isSsr && e.state.as === _this.asPath && url_1.parse(e.state.url).pathname === _this.pathname) {
        return;
      } // If the downstream application returns falsy, return.
      // They will then be responsible for handling the event.


      if (_this._bps && !_this._bps(e.state)) {
        return;
      }

      var _e$state = e.state,
          url = _e$state.url,
          as = _e$state.as,
          options = _e$state.options;

      if (true) {
        if (typeof url === 'undefined' || typeof as === 'undefined') {
          console.warn('`popstate` event triggered but `event.state` did not have `url` or `as` https://err.sh/zeit/next.js/popstate-state-empty');
        }
      }

      _this.replace(url, as, options);
    };

    this._getStaticData = function (asPath) {
      var pathname = prepareRoute(url_1.parse(asPath).pathname);
      return  false ? undefined : fetchNextData(pathname, null, _this.isSsr, function (data) {
        return _this.sdc[pathname] = data;
      });
    };

    this._getServerData = function (asPath) {
      var _url_1$parse = url_1.parse(asPath, true),
          pathname = _url_1$parse.pathname,
          query = _url_1$parse.query;

      pathname = prepareRoute(pathname);
      return fetchNextData(pathname, query, _this.isSsr);
    }; // represents the current component key


    this.route = toRoute(pathname); // set up the component cache (by route keys)

    this.components = {}; // We should not keep the cache, if there's an error
    // Otherwise, this cause issues when when going back and
    // come again to the errored page.

    if (pathname !== '/_error') {
      this.components[this.route] = {
        Component: Component,
        props: initialProps,
        err: err,
        __N_SSG: initialProps && initialProps.__N_SSG,
        __N_SSP: initialProps && initialProps.__N_SSP
      };
    }

    this.components['/_app'] = {
      Component: App
    }; // Backwards compat for Router.router.events
    // TODO: Should be remove the following major version as it was never documented

    this.events = Router.events;
    this.pageLoader = pageLoader;
    this.pathname = pathname;
    this.query = query; // if auto prerendered and dynamic route wait to update asPath
    // until after mount to prevent hydration mismatch

    this.asPath = // @ts-ignore this is temporarily global (attached to window)
    is_dynamic_1.isDynamicRoute(pathname) && __NEXT_DATA__.autoExport ? pathname : as;
    this.basePath = basePath;
    this.sub = subscription;
    this.clc = null;
    this._wrapApp = wrapApp; // make sure to ignore extra popState in safari on navigating
    // back from external site

    this.isSsr = true;
    this.isFallback = isFallback;

    if (true) {
      // in order for `e.state` to work on the `onpopstate` event
      // we have to register the initial route upon initialization
      this.changeState('replaceState', utils_1.formatWithValidation({
        pathname: pathname,
        query: query
      }), as);
      window.addEventListener('popstate', this.onPopState);
    }
  } // @deprecated backwards compatibility even though it's a private method.


  _createClass(Router, [{
    key: "update",
    value: function update(route, mod) {
      var Component = mod["default"] || mod;
      var data = this.components[route];

      if (!data) {
        throw new Error("Cannot update unavailable route: ".concat(route));
      }

      var newData = Object.assign(Object.assign({}, data), {
        Component: Component,
        __N_SSG: mod.__N_SSG,
        __N_SSP: mod.__N_SSP
      });
      this.components[route] = newData; // pages/_app.js updated

      if (route === '/_app') {
        this.notify(this.components[this.route]);
        return;
      }

      if (route === this.route) {
        this.notify(newData);
      }
    }
  }, {
    key: "reload",
    value: function reload() {
      window.location.reload();
    }
    /**
     * Go back in history
     */

  }, {
    key: "back",
    value: function back() {
      window.history.back();
    }
    /**
     * Performs a `pushState` with arguments
     * @param url of the route
     * @param as masks `url` for the browser
     * @param options object you can define `shallow` and other options
     */

  }, {
    key: "push",
    value: function push(url) {
      var as = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : url;
      var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};
      return this.change('pushState', url, as, options);
    }
    /**
     * Performs a `replaceState` with arguments
     * @param url of the route
     * @param as masks `url` for the browser
     * @param options object you can define `shallow` and other options
     */

  }, {
    key: "replace",
    value: function replace(url) {
      var as = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : url;
      var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};
      return this.change('replaceState', url, as, options);
    }
  }, {
    key: "change",
    value: function change(method, _url, _as, options) {
      var _this2 = this;

      return new Promise(function (resolve, reject) {
        if (!options._h) {
          _this2.isSsr = false;
        } // marking route changes as a navigation start entry


        if (utils_1.ST) {
          performance.mark('routeChange');
        } // If url and as provided as an object representation,
        // we'll format them into the string version here.


        var url = typeof _url === 'object' ? utils_1.formatWithValidation(_url) : _url;
        var as = typeof _as === 'object' ? utils_1.formatWithValidation(_as) : _as;
        url = addBasePath(url);
        as = addBasePath(as); // Add the ending slash to the paths. So, we can serve the
        // "<page>/index.html" directly for the SSR page.

        if (false) { var rewriteUrlForNextExport; }

        _this2.abortComponentLoad(as); // If the url change is only related to a hash change
        // We should not proceed. We should only change the state.
        // WARNING: `_h` is an internal option for handing Next.js client-side
        // hydration. Your app should _never_ use this property. It may change at
        // any time without notice.


        if (!options._h && _this2.onlyAHashChange(as)) {
          _this2.asPath = as;
          Router.events.emit('hashChangeStart', as);

          _this2.changeState(method, url, as, options);

          _this2.scrollToHash(as);

          Router.events.emit('hashChangeComplete', as);
          return resolve(true);
        }

        var _url_1$parse2 = url_1.parse(url, true),
            pathname = _url_1$parse2.pathname,
            query = _url_1$parse2.query,
            protocol = _url_1$parse2.protocol;

        if (!pathname || protocol) {
          if (true) {
            throw new Error("Invalid href passed to router: ".concat(url, " https://err.sh/zeit/next.js/invalid-href-passed"));
          }

          return resolve(false);
        } // If asked to change the current URL we should reload the current page
        // (not location.reload() but reload getInitialProps and other Next.js stuffs)
        // We also need to set the method = replaceState always
        // as this should not go into the history (That's how browsers work)
        // We should compare the new asPath to the current asPath, not the url


        if (!_this2.urlIsNew(as)) {
          method = 'replaceState';
        }

        var route = toRoute(pathname);
        var _options$shallow = options.shallow,
            shallow = _options$shallow === void 0 ? false : _options$shallow;

        if (is_dynamic_1.isDynamicRoute(route)) {
          var _url_1$parse3 = url_1.parse(as),
              asPathname = _url_1$parse3.pathname;

          var routeRegex = route_regex_1.getRouteRegex(route);
          var routeMatch = route_matcher_1.getRouteMatcher(routeRegex)(asPathname);

          if (!routeMatch) {
            var missingParams = Object.keys(routeRegex.groups).filter(function (param) {
              return !query[param];
            });

            if (missingParams.length > 0) {
              if (true) {
                console.warn("Mismatching `as` and `href` failed to manually provide " + "the params: ".concat(missingParams.join(', '), " in the `href`'s `query`"));
              }

              return reject(new Error("The provided `as` value (".concat(asPathname, ") is incompatible with the `href` value (").concat(route, "). ") + "Read more: https://err.sh/zeit/next.js/incompatible-href-as"));
            }
          } else {
            // Merge params into `query`, overwriting any specified in search
            Object.assign(query, routeMatch);
          }
        }

        Router.events.emit('routeChangeStart', as); // If shallow is true and the route exists in the router cache we reuse the previous result

        _this2.getRouteInfo(route, pathname, query, as, shallow).then(function (routeInfo) {
          var error = routeInfo.error;

          if (error && error.cancelled) {
            return resolve(false);
          }

          Router.events.emit('beforeHistoryChange', as);

          _this2.changeState(method, url, as, options);

          if (true) {
            var appComp = _this2.components['/_app'].Component;
            window.next.isPrerendered = appComp.getInitialProps === appComp.origGetInitialProps && !routeInfo.Component.getInitialProps;
          }

          _this2.set(route, pathname, query, as, routeInfo);

          if (error) {
            Router.events.emit('routeChangeError', error, as);
            throw error;
          }

          Router.events.emit('routeChangeComplete', as);
          return resolve(true);
        }, reject);
      });
    }
  }, {
    key: "changeState",
    value: function changeState(method, url, as) {
      var options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};

      if (true) {
        if (typeof window.history === 'undefined') {
          console.error("Warning: window.history is not available.");
          return;
        }

        if (typeof window.history[method] === 'undefined') {
          console.error("Warning: window.history.".concat(method, " is not available"));
          return;
        }
      }

      if (method !== 'pushState' || utils_1.getURL() !== as) {
        window.history[method]({
          url: url,
          as: as,
          options: options
        }, // Most browsers currently ignores this parameter, although they may use it in the future.
        // Passing the empty string here should be safe against future changes to the method.
        // https://developer.mozilla.org/en-US/docs/Web/API/History/replaceState
        '', as);
      }
    }
  }, {
    key: "getRouteInfo",
    value: function getRouteInfo(route, pathname, query, as) {
      var _this3 = this;

      var shallow = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : false;
      var cachedRouteInfo = this.components[route]; // If there is a shallow route transition possible
      // If the route is already rendered on the screen.

      if (shallow && cachedRouteInfo && this.route === route) {
        return Promise.resolve(cachedRouteInfo);
      }

      var handleError = function handleError(err, loadErrorFail) {
        return new Promise(function (resolve) {
          if (err.code === 'PAGE_LOAD_ERROR' || loadErrorFail) {
            // If we can't load the page it could be one of following reasons
            //  1. Page doesn't exists
            //  2. Page does exist in a different zone
            //  3. Internal error while loading the page
            // So, doing a hard reload is the proper way to deal with this.
            window.location.href = as; // Changing the URL doesn't block executing the current code path.
            // So, we need to mark it as a cancelled error and stop the routing logic.

            err.cancelled = true; // @ts-ignore TODO: fix the control flow here

            return resolve({
              error: err
            });
          }

          if (err.cancelled) {
            // @ts-ignore TODO: fix the control flow here
            return resolve({
              error: err
            });
          }

          resolve(_this3.fetchComponent('/_error').then(function (res) {
            var Component = res.page;
            var routeInfo = {
              Component: Component,
              err: err
            };
            return new Promise(function (resolve) {
              _this3.getInitialProps(Component, {
                err: err,
                pathname: pathname,
                query: query
              }).then(function (props) {
                routeInfo.props = props;
                routeInfo.error = err;
                resolve(routeInfo);
              }, function (gipErr) {
                console.error('Error in error page `getInitialProps`: ', gipErr);
                routeInfo.error = err;
                routeInfo.props = {};
                resolve(routeInfo);
              });
            });
          })["catch"](function (err) {
            return handleError(err, true);
          }));
        });
      };

      return new Promise(function (resolve, reject) {
        if (cachedRouteInfo) {
          return resolve(cachedRouteInfo);
        }

        _this3.fetchComponent(route).then(function (res) {
          return resolve({
            Component: res.page,
            __N_SSG: res.mod.__N_SSG,
            __N_SSP: res.mod.__N_SSP
          });
        }, reject);
      }).then(function (routeInfo) {
        var Component = routeInfo.Component,
            __N_SSG = routeInfo.__N_SSG,
            __N_SSP = routeInfo.__N_SSP;

        if (true) {
          var _require = __webpack_require__(/*! react-is */ "./node_modules/react-is/index.js"),
              isValidElementType = _require.isValidElementType;

          if (!isValidElementType(Component)) {
            throw new Error("The default export is not a React Component in page: \"".concat(pathname, "\""));
          }
        }

        return _this3._getData(function () {
          return __N_SSG ? _this3._getStaticData(as) : __N_SSP ? _this3._getServerData(as) : _this3.getInitialProps(Component, // we provide AppTree later so this needs to be `any`
          {
            pathname: pathname,
            query: query,
            asPath: as
          });
        }).then(function (props) {
          routeInfo.props = props;
          _this3.components[route] = routeInfo;
          return routeInfo;
        });
      })["catch"](handleError);
    }
  }, {
    key: "set",
    value: function set(route, pathname, query, as, data) {
      this.isFallback = false;
      this.route = route;
      this.pathname = pathname;
      this.query = query;
      this.asPath = as;
      this.notify(data);
    }
    /**
     * Callback to execute before replacing router state
     * @param cb callback to be executed
     */

  }, {
    key: "beforePopState",
    value: function beforePopState(cb) {
      this._bps = cb;
    }
  }, {
    key: "onlyAHashChange",
    value: function onlyAHashChange(as) {
      if (!this.asPath) return false;

      var _this$asPath$split = this.asPath.split('#'),
          _this$asPath$split2 = _slicedToArray(_this$asPath$split, 2),
          oldUrlNoHash = _this$asPath$split2[0],
          oldHash = _this$asPath$split2[1];

      var _as$split = as.split('#'),
          _as$split2 = _slicedToArray(_as$split, 2),
          newUrlNoHash = _as$split2[0],
          newHash = _as$split2[1]; // Makes sure we scroll to the provided hash if the url/hash are the same


      if (newHash && oldUrlNoHash === newUrlNoHash && oldHash === newHash) {
        return true;
      } // If the urls are change, there's more than a hash change


      if (oldUrlNoHash !== newUrlNoHash) {
        return false;
      } // If the hash has changed, then it's a hash only change.
      // This check is necessary to handle both the enter and
      // leave hash === '' cases. The identity case falls through
      // and is treated as a next reload.


      return oldHash !== newHash;
    }
  }, {
    key: "scrollToHash",
    value: function scrollToHash(as) {
      var _as$split3 = as.split('#'),
          _as$split4 = _slicedToArray(_as$split3, 2),
          hash = _as$split4[1]; // Scroll to top if the hash is just `#` with no value


      if (hash === '') {
        window.scrollTo(0, 0);
        return;
      } // First we check if the element by id is found


      var idEl = document.getElementById(hash);

      if (idEl) {
        idEl.scrollIntoView();
        return;
      } // If there's no element with the id, we check the `name` property
      // To mirror browsers


      var nameEl = document.getElementsByName(hash)[0];

      if (nameEl) {
        nameEl.scrollIntoView();
      }
    }
  }, {
    key: "urlIsNew",
    value: function urlIsNew(asPath) {
      return this.asPath !== asPath;
    }
    /**
     * Prefetch page code, you may wait for the data during page rendering.
     * This feature only works in production!
     * @param url the href of prefetched page
     * @param asPath the as path of the prefetched page
     */

  }, {
    key: "prefetch",
    value: function prefetch(url) {
      var _this4 = this;

      var asPath = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : url;
      var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};
      return new Promise(function (resolve, reject) {
        var _url_1$parse4 = url_1.parse(url),
            pathname = _url_1$parse4.pathname,
            protocol = _url_1$parse4.protocol;

        if (!pathname || protocol) {
          if (true) {
            throw new Error("Invalid href passed to router: ".concat(url, " https://err.sh/zeit/next.js/invalid-href-passed"));
          }

          return;
        } // Prefetch is not supported in development mode because it would trigger on-demand-entries


        if (true) {
          return;
        }

        var route = delBasePath(toRoute(pathname));
        Promise.all([_this4.pageLoader.prefetchData(url, delBasePath(asPath)), _this4.pageLoader[options.priority ? 'loadPage' : 'prefetch'](route)]).then(function () {
          return resolve();
        }, reject);
      });
    }
  }, {
    key: "fetchComponent",
    value: function fetchComponent(route) {
      var cancelled, cancel, componentResult, error;
      return _regeneratorRuntime.async(function fetchComponent$(_context) {
        while (1) {
          switch (_context.prev = _context.next) {
            case 0:
              cancelled = false;

              cancel = this.clc = function () {
                cancelled = true;
              };

              route = delBasePath(route);
              _context.next = 5;
              return _regeneratorRuntime.awrap(this.pageLoader.loadPage(route));

            case 5:
              componentResult = _context.sent;

              if (!cancelled) {
                _context.next = 10;
                break;
              }

              error = new Error("Abort fetching component for route: \"".concat(route, "\""));
              error.cancelled = true;
              throw error;

            case 10:
              if (cancel === this.clc) {
                this.clc = null;
              }

              return _context.abrupt("return", componentResult);

            case 12:
            case "end":
              return _context.stop();
          }
        }
      }, null, this, null, Promise);
    }
  }, {
    key: "_getData",
    value: function _getData(fn) {
      var _this5 = this;

      var cancelled = false;

      var cancel = function cancel() {
        cancelled = true;
      };

      this.clc = cancel;
      return fn().then(function (data) {
        if (cancel === _this5.clc) {
          _this5.clc = null;
        }

        if (cancelled) {
          var err = new Error('Loading initial props cancelled');
          err.cancelled = true;
          throw err;
        }

        return data;
      });
    }
  }, {
    key: "getInitialProps",
    value: function getInitialProps(Component, ctx) {
      var App = this.components['/_app'].Component;

      var AppTree = this._wrapApp(App);

      ctx.AppTree = AppTree;
      return utils_1.loadGetInitialProps(App, {
        AppTree: AppTree,
        Component: Component,
        router: this,
        ctx: ctx
      });
    }
  }, {
    key: "abortComponentLoad",
    value: function abortComponentLoad(as) {
      if (this.clc) {
        var e = new Error('Route Cancelled');
        e.cancelled = true;
        Router.events.emit('routeChangeError', e, as);
        this.clc();
        this.clc = null;
      }
    }
  }, {
    key: "notify",
    value: function notify(data) {
      this.sub(data, this.components['/_app'].Component);
    }
  }], [{
    key: "_rewriteUrlForNextExport",
    value: function _rewriteUrlForNextExport(url) {
      if (false) { var rewriteUrlForNextExport; } else {
        return url;
      }
    }
  }]);

  return Router;
}();

exports["default"] = Router;
Router.events = mitt_1["default"]();

/***/ }),

/***/ "./node_modules/next/dist/next-server/lib/router/utils/is-dynamic.js":
/*!***************************************************************************!*\
  !*** ./node_modules/next/dist/next-server/lib/router/utils/is-dynamic.js ***!
  \***************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
}); // Identify /[param]/ in route string

var TEST_ROUTE = /\/\[[^/]+?\](?=\/|$)/;

function isDynamicRoute(route) {
  return TEST_ROUTE.test(route);
}

exports.isDynamicRoute = isDynamicRoute;

/***/ }),

/***/ "./node_modules/next/dist/next-server/lib/router/utils/route-matcher.js":
/*!******************************************************************************!*\
  !*** ./node_modules/next/dist/next-server/lib/router/utils/route-matcher.js ***!
  \******************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

function getRouteMatcher(routeRegex) {
  var re = routeRegex.re,
      groups = routeRegex.groups;
  return function (pathname) {
    var routeMatch = re.exec(pathname);

    if (!routeMatch) {
      return false;
    }

    var decode = function decode(param) {
      try {
        return decodeURIComponent(param);
      } catch (_) {
        var err = new Error('failed to decode param');
        err.code = 'DECODE_FAILED';
        throw err;
      }
    };

    var params = {};
    Object.keys(groups).forEach(function (slugName) {
      var g = groups[slugName];
      var m = routeMatch[g.pos];

      if (m !== undefined) {
        params[slugName] = ~m.indexOf('/') ? m.split('/').map(function (entry) {
          return decode(entry);
        }) : g.repeat ? [decode(m)] : decode(m);
      }
    });
    return params;
  };
}

exports.getRouteMatcher = getRouteMatcher;

/***/ }),

/***/ "./node_modules/next/dist/next-server/lib/router/utils/route-regex.js":
/*!****************************************************************************!*\
  !*** ./node_modules/next/dist/next-server/lib/router/utils/route-regex.js ***!
  \****************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

function getRouteRegex(normalizedRoute) {
  // Escape all characters that could be considered RegEx
  var escapedRoute = (normalizedRoute.replace(/\/$/, '') || '/').replace(/[|\\{}()[\]^$+*?.-]/g, '\\$&');
  var groups = {};
  var groupIndex = 1;
  var parameterizedRoute = escapedRoute.replace(/\/\\\[([^/]+?)\\\](?=\/|$)/g, function (_, $1) {
    var isCatchAll = /^(\\\.){3}/.test($1);
    groups[$1 // Un-escape key
    .replace(/\\([|\\{}()[\]^$+*?.-])/g, '$1').replace(/^\.{3}/, '') // eslint-disable-next-line no-sequences
    ] = {
      pos: groupIndex++,
      repeat: isCatchAll
    };
    return isCatchAll ? '/(.+?)' : '/([^/]+?)';
  });
  return {
    re: new RegExp('^' + parameterizedRoute + '(?:/)?$', 'i'),
    groups: groups
  };
}

exports.getRouteRegex = getRouteRegex;

/***/ }),

/***/ "./node_modules/next/dist/next-server/lib/side-effect.js":
/*!***************************************************************!*\
  !*** ./node_modules/next/dist/next-server/lib/side-effect.js ***!
  \***************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _classCallCheck = __webpack_require__(/*! @babel/runtime/helpers/classCallCheck */ "./node_modules/@babel/runtime/helpers/classCallCheck.js");

var _assertThisInitialized = __webpack_require__(/*! @babel/runtime/helpers/assertThisInitialized */ "./node_modules/@babel/runtime/helpers/assertThisInitialized.js");

var _createClass = __webpack_require__(/*! @babel/runtime/helpers/createClass */ "./node_modules/@babel/runtime/helpers/createClass.js");

var _inherits = __webpack_require__(/*! @babel/runtime/helpers/inherits */ "./node_modules/@babel/runtime/helpers/inherits.js");

var _possibleConstructorReturn = __webpack_require__(/*! @babel/runtime/helpers/possibleConstructorReturn */ "./node_modules/@babel/runtime/helpers/possibleConstructorReturn.js");

var _getPrototypeOf = __webpack_require__(/*! @babel/runtime/helpers/getPrototypeOf */ "./node_modules/@babel/runtime/helpers/getPrototypeOf.js");

var _toConsumableArray = __webpack_require__(/*! @babel/runtime/helpers/toConsumableArray */ "./node_modules/@babel/runtime/helpers/toConsumableArray.js");

function _createSuper(Derived) { return function () { var Super = _getPrototypeOf(Derived), result; if (_isNativeReflectConstruct()) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }

Object.defineProperty(exports, "__esModule", {
  value: true
});

var react_1 = __webpack_require__(/*! react */ "./node_modules/react/index.js");

var isServer = false;

exports["default"] = function () {
  var mountedInstances = new Set();
  var state;

  function emitChange(component) {
    state = component.props.reduceComponentsToState(_toConsumableArray(mountedInstances), component.props);

    if (component.props.handleStateChange) {
      component.props.handleStateChange(state);
    }
  }

  return /*#__PURE__*/function (_react_1$Component) {
    _inherits(_class, _react_1$Component);

    var _super = _createSuper(_class);

    _createClass(_class, null, [{
      key: "rewind",
      // Used when server rendering
      value: function rewind() {
        var recordedState = state;
        state = undefined;
        mountedInstances.clear();
        return recordedState;
      }
    }]);

    function _class(props) {
      var _this;

      _classCallCheck(this, _class);

      _this = _super.call(this, props);

      if (isServer) {
        mountedInstances.add(_assertThisInitialized(_this));
        emitChange(_assertThisInitialized(_this));
      }

      return _this;
    }

    _createClass(_class, [{
      key: "componentDidMount",
      value: function componentDidMount() {
        mountedInstances.add(this);
        emitChange(this);
      }
    }, {
      key: "componentDidUpdate",
      value: function componentDidUpdate() {
        emitChange(this);
      }
    }, {
      key: "componentWillUnmount",
      value: function componentWillUnmount() {
        mountedInstances["delete"](this);
        emitChange(this);
      }
    }, {
      key: "render",
      value: function render() {
        return null;
      }
    }]);

    return _class;
  }(react_1.Component);
};

/***/ }),

/***/ "./node_modules/next/dist/next-server/lib/utils.js":
/*!*********************************************************!*\
  !*** ./node_modules/next/dist/next-server/lib/utils.js ***!
  \*********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _regeneratorRuntime = __webpack_require__(/*! @babel/runtime/regenerator */ "./node_modules/@babel/runtime/regenerator/index.js");

Object.defineProperty(exports, "__esModule", {
  value: true
});

var url_1 = __webpack_require__(/*! url */ "./node_modules/native-url/dist/index.js");
/**
 * Utils
 */


function execOnce(fn) {
  var used = false;
  var result;
  return function () {
    if (!used) {
      used = true;
      result = fn.apply(void 0, arguments);
    }

    return result;
  };
}

exports.execOnce = execOnce;

function getLocationOrigin() {
  var _window$location = window.location,
      protocol = _window$location.protocol,
      hostname = _window$location.hostname,
      port = _window$location.port;
  return "".concat(protocol, "//").concat(hostname).concat(port ? ':' + port : '');
}

exports.getLocationOrigin = getLocationOrigin;

function getURL() {
  var href = window.location.href;
  var origin = getLocationOrigin();
  return href.substring(origin.length);
}

exports.getURL = getURL;

function getDisplayName(Component) {
  return typeof Component === 'string' ? Component : Component.displayName || Component.name || 'Unknown';
}

exports.getDisplayName = getDisplayName;

function isResSent(res) {
  return res.finished || res.headersSent;
}

exports.isResSent = isResSent;

function loadGetInitialProps(App, ctx) {
  var _a, message, res, props, _message;

  return _regeneratorRuntime.async(function loadGetInitialProps$(_context) {
    while (1) {
      switch (_context.prev = _context.next) {
        case 0:
          if (false) {}

          if (!((_a = App.prototype) === null || _a === void 0 ? void 0 : _a.getInitialProps)) {
            _context.next = 4;
            break;
          }

          message = "\"".concat(getDisplayName(App), ".getInitialProps()\" is defined as an instance method - visit https://err.sh/zeit/next.js/get-initial-props-as-an-instance-method for more information.");
          throw new Error(message);

        case 4:
          // when called from _app `ctx` is nested in `ctx`
          res = ctx.res || ctx.ctx && ctx.ctx.res;

          if (App.getInitialProps) {
            _context.next = 12;
            break;
          }

          if (!(ctx.ctx && ctx.Component)) {
            _context.next = 11;
            break;
          }

          _context.next = 9;
          return _regeneratorRuntime.awrap(loadGetInitialProps(ctx.Component, ctx.ctx));

        case 9:
          _context.t0 = _context.sent;
          return _context.abrupt("return", {
            pageProps: _context.t0
          });

        case 11:
          return _context.abrupt("return", {});

        case 12:
          _context.next = 14;
          return _regeneratorRuntime.awrap(App.getInitialProps(ctx));

        case 14:
          props = _context.sent;

          if (!(res && isResSent(res))) {
            _context.next = 17;
            break;
          }

          return _context.abrupt("return", props);

        case 17:
          if (props) {
            _context.next = 20;
            break;
          }

          _message = "\"".concat(getDisplayName(App), ".getInitialProps()\" should resolve to an object. But found \"").concat(props, "\" instead.");
          throw new Error(_message);

        case 20:
          if (true) {
            if (Object.keys(props).length === 0 && !ctx.ctx) {
              console.warn("".concat(getDisplayName(App), " returned an empty object from `getInitialProps`. This de-optimizes and prevents automatic static optimization. https://err.sh/zeit/next.js/empty-object-getInitialProps"));
            }
          }

          return _context.abrupt("return", props);

        case 22:
        case "end":
          return _context.stop();
      }
    }
  }, null, null, null, Promise);
}

exports.loadGetInitialProps = loadGetInitialProps;
exports.urlObjectKeys = ['auth', 'hash', 'host', 'hostname', 'href', 'path', 'pathname', 'port', 'protocol', 'query', 'search', 'slashes'];

function formatWithValidation(url, options) {
  if (true) {
    if (url !== null && typeof url === 'object') {
      Object.keys(url).forEach(function (key) {
        if (exports.urlObjectKeys.indexOf(key) === -1) {
          console.warn("Unknown key passed via urlObject into url.format: ".concat(key));
        }
      });
    }
  }

  return url_1.format(url, options);
}

exports.formatWithValidation = formatWithValidation;
exports.SP = typeof performance !== 'undefined';
exports.ST = exports.SP && typeof performance.mark === 'function' && typeof performance.measure === 'function';

/***/ }),

/***/ "./node_modules/next/link.js":
/*!***********************************!*\
  !*** ./node_modules/next/link.js ***!
  \***********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__(/*! ./dist/client/link */ "./node_modules/next/dist/client/link.js")


/***/ }),

/***/ "./node_modules/process/browser.js":
/*!*****************************************!*\
  !*** ./node_modules/process/browser.js ***!
  \*****************************************/
/*! no static exports found */
/***/ (function(module, exports) {

// shim for using process in browser
var process = module.exports = {};

// cached from whatever global is present so that test runners that stub it
// don't break things.  But we need to wrap it in a try catch in case it is
// wrapped in strict mode code which doesn't define any globals.  It's inside a
// function because try/catches deoptimize in certain engines.

var cachedSetTimeout;
var cachedClearTimeout;

function defaultSetTimout() {
    throw new Error('setTimeout has not been defined');
}
function defaultClearTimeout () {
    throw new Error('clearTimeout has not been defined');
}
(function () {
    try {
        if (typeof setTimeout === 'function') {
            cachedSetTimeout = setTimeout;
        } else {
            cachedSetTimeout = defaultSetTimout;
        }
    } catch (e) {
        cachedSetTimeout = defaultSetTimout;
    }
    try {
        if (typeof clearTimeout === 'function') {
            cachedClearTimeout = clearTimeout;
        } else {
            cachedClearTimeout = defaultClearTimeout;
        }
    } catch (e) {
        cachedClearTimeout = defaultClearTimeout;
    }
} ())
function runTimeout(fun) {
    if (cachedSetTimeout === setTimeout) {
        //normal enviroments in sane situations
        return setTimeout(fun, 0);
    }
    // if setTimeout wasn't available but was latter defined
    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {
        cachedSetTimeout = setTimeout;
        return setTimeout(fun, 0);
    }
    try {
        // when when somebody has screwed with setTimeout but no I.E. maddness
        return cachedSetTimeout(fun, 0);
    } catch(e){
        try {
            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally
            return cachedSetTimeout.call(null, fun, 0);
        } catch(e){
            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error
            return cachedSetTimeout.call(this, fun, 0);
        }
    }


}
function runClearTimeout(marker) {
    if (cachedClearTimeout === clearTimeout) {
        //normal enviroments in sane situations
        return clearTimeout(marker);
    }
    // if clearTimeout wasn't available but was latter defined
    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {
        cachedClearTimeout = clearTimeout;
        return clearTimeout(marker);
    }
    try {
        // when when somebody has screwed with setTimeout but no I.E. maddness
        return cachedClearTimeout(marker);
    } catch (e){
        try {
            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally
            return cachedClearTimeout.call(null, marker);
        } catch (e){
            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.
            // Some versions of I.E. have different rules for clearTimeout vs setTimeout
            return cachedClearTimeout.call(this, marker);
        }
    }



}
var queue = [];
var draining = false;
var currentQueue;
var queueIndex = -1;

function cleanUpNextTick() {
    if (!draining || !currentQueue) {
        return;
    }
    draining = false;
    if (currentQueue.length) {
        queue = currentQueue.concat(queue);
    } else {
        queueIndex = -1;
    }
    if (queue.length) {
        drainQueue();
    }
}

function drainQueue() {
    if (draining) {
        return;
    }
    var timeout = runTimeout(cleanUpNextTick);
    draining = true;

    var len = queue.length;
    while(len) {
        currentQueue = queue;
        queue = [];
        while (++queueIndex < len) {
            if (currentQueue) {
                currentQueue[queueIndex].run();
            }
        }
        queueIndex = -1;
        len = queue.length;
    }
    currentQueue = null;
    draining = false;
    runClearTimeout(timeout);
}

process.nextTick = function (fun) {
    var args = new Array(arguments.length - 1);
    if (arguments.length > 1) {
        for (var i = 1; i < arguments.length; i++) {
            args[i - 1] = arguments[i];
        }
    }
    queue.push(new Item(fun, args));
    if (queue.length === 1 && !draining) {
        runTimeout(drainQueue);
    }
};

// v8 likes predictible objects
function Item(fun, array) {
    this.fun = fun;
    this.array = array;
}
Item.prototype.run = function () {
    this.fun.apply(null, this.array);
};
process.title = 'browser';
process.browser = true;
process.env = {};
process.argv = [];
process.version = ''; // empty string to avoid regexp issues
process.versions = {};

function noop() {}

process.on = noop;
process.addListener = noop;
process.once = noop;
process.off = noop;
process.removeListener = noop;
process.removeAllListeners = noop;
process.emit = noop;
process.prependListener = noop;
process.prependOnceListener = noop;

process.listeners = function (name) { return [] }

process.binding = function (name) {
    throw new Error('process.binding is not supported');
};

process.cwd = function () { return '/' };
process.chdir = function (dir) {
    throw new Error('process.chdir is not supported');
};
process.umask = function() { return 0; };


/***/ }),

/***/ "./node_modules/prop-types-exact/build/helpers/isPlainObject.js":
/*!**********************************************************************!*\
  !*** ./node_modules/prop-types-exact/build/helpers/isPlainObject.js ***!
  \**********************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

exports['default'] = isPlainObject;
function isPlainObject(x) {
  return x && (typeof x === 'undefined' ? 'undefined' : _typeof(x)) === 'object' && !Array.isArray(x);
}
module.exports = exports['default'];
//# sourceMappingURL=isPlainObject.js.map

/***/ }),

/***/ "./node_modules/prop-types-exact/build/index.js":
/*!******************************************************!*\
  !*** ./node_modules/prop-types-exact/build/index.js ***!
  \******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports['default'] = forbidExtraProps;

var _object = __webpack_require__(/*! object.assign */ "./node_modules/next/dist/build/polyfills/object.assign/index.js");

var _object2 = _interopRequireDefault(_object);

var _has = __webpack_require__(/*! has */ "./node_modules/has/src/index.js");

var _has2 = _interopRequireDefault(_has);

var _isPlainObject = __webpack_require__(/*! ./helpers/isPlainObject */ "./node_modules/prop-types-exact/build/helpers/isPlainObject.js");

var _isPlainObject2 = _interopRequireDefault(_isPlainObject);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

var zeroWidthSpace = '\u200B';
var specialProperty = 'prop-types-exact: ' + zeroWidthSpace;
var semaphore = typeof Symbol === 'function' && typeof Symbol['for'] === 'function' ? Symbol['for'](specialProperty) : /* istanbul ignore next */specialProperty;

function brand(fn) {
  return (0, _object2['default'])(fn, _defineProperty({}, specialProperty, semaphore));
}

function isBranded(value) {
  return value && value[specialProperty] === semaphore;
}

function forbidExtraProps(propTypes) {
  if (!(0, _isPlainObject2['default'])(propTypes)) {
    throw new TypeError('given propTypes must be an object');
  }
  if ((0, _has2['default'])(propTypes, specialProperty) && !isBranded(propTypes[specialProperty])) {
    throw new TypeError('Against all odds, you created a propType for a prop that uses both the zero-width space and our custom string - which, sadly, conflicts with `prop-types-exact`');
  }

  return (0, _object2['default'])({}, propTypes, _defineProperty({}, specialProperty, brand(function () {
    function forbidUnknownProps(props, _, componentName) {
      var unknownProps = Object.keys(props).filter(function (prop) {
        return !(0, _has2['default'])(propTypes, prop);
      });
      if (unknownProps.length > 0) {
        return new TypeError(String(componentName) + ': unknown props found: ' + String(unknownProps.join(', ')));
      }
      return null;
    }

    return forbidUnknownProps;
  }())));
}
module.exports = exports['default'];
//# sourceMappingURL=index.js.map

/***/ }),

/***/ "./node_modules/prop-types/checkPropTypes.js":
/*!*********************************************************************************************************!*\
  !*** delegated ./node_modules/prop-types/checkPropTypes.js from dll-reference dll_2adc2403d89adc16ead0 ***!
  \*********************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

module.exports = (__webpack_require__(/*! dll-reference dll_2adc2403d89adc16ead0 */ "dll-reference dll_2adc2403d89adc16ead0"))("./node_modules/prop-types/checkPropTypes.js");

/***/ }),

/***/ "./node_modules/prop-types/factoryWithTypeCheckers.js":
/*!************************************************************!*\
  !*** ./node_modules/prop-types/factoryWithTypeCheckers.js ***!
  \************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */



var ReactIs = __webpack_require__(/*! react-is */ "./node_modules/react-is/index.js");
var assign = __webpack_require__(/*! object-assign */ "./node_modules/next/dist/build/polyfills/object-assign.js");

var ReactPropTypesSecret = __webpack_require__(/*! ./lib/ReactPropTypesSecret */ "./node_modules/prop-types/lib/ReactPropTypesSecret.js");
var checkPropTypes = __webpack_require__(/*! ./checkPropTypes */ "./node_modules/prop-types/checkPropTypes.js");

var has = Function.call.bind(Object.prototype.hasOwnProperty);
var printWarning = function() {};

if (true) {
  printWarning = function(text) {
    var message = 'Warning: ' + text;
    if (typeof console !== 'undefined') {
      console.error(message);
    }
    try {
      // --- Welcome to debugging React ---
      // This error was thrown as a convenience so that you can use this stack
      // to find the callsite that caused this warning to fire.
      throw new Error(message);
    } catch (x) {}
  };
}

function emptyFunctionThatReturnsNull() {
  return null;
}

module.exports = function(isValidElement, throwOnDirectAccess) {
  /* global Symbol */
  var ITERATOR_SYMBOL = typeof Symbol === 'function' && Symbol.iterator;
  var FAUX_ITERATOR_SYMBOL = '@@iterator'; // Before Symbol spec.

  /**
   * Returns the iterator method function contained on the iterable object.
   *
   * Be sure to invoke the function with the iterable as context:
   *
   *     var iteratorFn = getIteratorFn(myIterable);
   *     if (iteratorFn) {
   *       var iterator = iteratorFn.call(myIterable);
   *       ...
   *     }
   *
   * @param {?object} maybeIterable
   * @return {?function}
   */
  function getIteratorFn(maybeIterable) {
    var iteratorFn = maybeIterable && (ITERATOR_SYMBOL && maybeIterable[ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL]);
    if (typeof iteratorFn === 'function') {
      return iteratorFn;
    }
  }

  /**
   * Collection of methods that allow declaration and validation of props that are
   * supplied to React components. Example usage:
   *
   *   var Props = require('ReactPropTypes');
   *   var MyArticle = React.createClass({
   *     propTypes: {
   *       // An optional string prop named "description".
   *       description: Props.string,
   *
   *       // A required enum prop named "category".
   *       category: Props.oneOf(['News','Photos']).isRequired,
   *
   *       // A prop named "dialog" that requires an instance of Dialog.
   *       dialog: Props.instanceOf(Dialog).isRequired
   *     },
   *     render: function() { ... }
   *   });
   *
   * A more formal specification of how these methods are used:
   *
   *   type := array|bool|func|object|number|string|oneOf([...])|instanceOf(...)
   *   decl := ReactPropTypes.{type}(.isRequired)?
   *
   * Each and every declaration produces a function with the same signature. This
   * allows the creation of custom validation functions. For example:
   *
   *  var MyLink = React.createClass({
   *    propTypes: {
   *      // An optional string or URI prop named "href".
   *      href: function(props, propName, componentName) {
   *        var propValue = props[propName];
   *        if (propValue != null && typeof propValue !== 'string' &&
   *            !(propValue instanceof URI)) {
   *          return new Error(
   *            'Expected a string or an URI for ' + propName + ' in ' +
   *            componentName
   *          );
   *        }
   *      }
   *    },
   *    render: function() {...}
   *  });
   *
   * @internal
   */

  var ANONYMOUS = '<<anonymous>>';

  // Important!
  // Keep this list in sync with production version in `./factoryWithThrowingShims.js`.
  var ReactPropTypes = {
    array: createPrimitiveTypeChecker('array'),
    bool: createPrimitiveTypeChecker('boolean'),
    func: createPrimitiveTypeChecker('function'),
    number: createPrimitiveTypeChecker('number'),
    object: createPrimitiveTypeChecker('object'),
    string: createPrimitiveTypeChecker('string'),
    symbol: createPrimitiveTypeChecker('symbol'),

    any: createAnyTypeChecker(),
    arrayOf: createArrayOfTypeChecker,
    element: createElementTypeChecker(),
    elementType: createElementTypeTypeChecker(),
    instanceOf: createInstanceTypeChecker,
    node: createNodeChecker(),
    objectOf: createObjectOfTypeChecker,
    oneOf: createEnumTypeChecker,
    oneOfType: createUnionTypeChecker,
    shape: createShapeTypeChecker,
    exact: createStrictShapeTypeChecker,
  };

  /**
   * inlined Object.is polyfill to avoid requiring consumers ship their own
   * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is
   */
  /*eslint-disable no-self-compare*/
  function is(x, y) {
    // SameValue algorithm
    if (x === y) {
      // Steps 1-5, 7-10
      // Steps 6.b-6.e: +0 != -0
      return x !== 0 || 1 / x === 1 / y;
    } else {
      // Step 6.a: NaN == NaN
      return x !== x && y !== y;
    }
  }
  /*eslint-enable no-self-compare*/

  /**
   * We use an Error-like object for backward compatibility as people may call
   * PropTypes directly and inspect their output. However, we don't use real
   * Errors anymore. We don't inspect their stack anyway, and creating them
   * is prohibitively expensive if they are created too often, such as what
   * happens in oneOfType() for any type before the one that matched.
   */
  function PropTypeError(message) {
    this.message = message;
    this.stack = '';
  }
  // Make `instanceof Error` still work for returned errors.
  PropTypeError.prototype = Error.prototype;

  function createChainableTypeChecker(validate) {
    if (true) {
      var manualPropTypeCallCache = {};
      var manualPropTypeWarningCount = 0;
    }
    function checkType(isRequired, props, propName, componentName, location, propFullName, secret) {
      componentName = componentName || ANONYMOUS;
      propFullName = propFullName || propName;

      if (secret !== ReactPropTypesSecret) {
        if (throwOnDirectAccess) {
          // New behavior only for users of `prop-types` package
          var err = new Error(
            'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +
            'Use `PropTypes.checkPropTypes()` to call them. ' +
            'Read more at http://fb.me/use-check-prop-types'
          );
          err.name = 'Invariant Violation';
          throw err;
        } else if ( true && typeof console !== 'undefined') {
          // Old behavior for people using React.PropTypes
          var cacheKey = componentName + ':' + propName;
          if (
            !manualPropTypeCallCache[cacheKey] &&
            // Avoid spamming the console because they are often not actionable except for lib authors
            manualPropTypeWarningCount < 3
          ) {
            printWarning(
              'You are manually calling a React.PropTypes validation ' +
              'function for the `' + propFullName + '` prop on `' + componentName  + '`. This is deprecated ' +
              'and will throw in the standalone `prop-types` package. ' +
              'You may be seeing this warning due to a third-party PropTypes ' +
              'library. See https://fb.me/react-warning-dont-call-proptypes ' + 'for details.'
            );
            manualPropTypeCallCache[cacheKey] = true;
            manualPropTypeWarningCount++;
          }
        }
      }
      if (props[propName] == null) {
        if (isRequired) {
          if (props[propName] === null) {
            return new PropTypeError('The ' + location + ' `' + propFullName + '` is marked as required ' + ('in `' + componentName + '`, but its value is `null`.'));
          }
          return new PropTypeError('The ' + location + ' `' + propFullName + '` is marked as required in ' + ('`' + componentName + '`, but its value is `undefined`.'));
        }
        return null;
      } else {
        return validate(props, propName, componentName, location, propFullName);
      }
    }

    var chainedCheckType = checkType.bind(null, false);
    chainedCheckType.isRequired = checkType.bind(null, true);

    return chainedCheckType;
  }

  function createPrimitiveTypeChecker(expectedType) {
    function validate(props, propName, componentName, location, propFullName, secret) {
      var propValue = props[propName];
      var propType = getPropType(propValue);
      if (propType !== expectedType) {
        // `propValue` being instance of, say, date/regexp, pass the 'object'
        // check, but we can offer a more precise error message here rather than
        // 'of type `object`'.
        var preciseType = getPreciseType(propValue);

        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + preciseType + '` supplied to `' + componentName + '`, expected ') + ('`' + expectedType + '`.'));
      }
      return null;
    }
    return createChainableTypeChecker(validate);
  }

  function createAnyTypeChecker() {
    return createChainableTypeChecker(emptyFunctionThatReturnsNull);
  }

  function createArrayOfTypeChecker(typeChecker) {
    function validate(props, propName, componentName, location, propFullName) {
      if (typeof typeChecker !== 'function') {
        return new PropTypeError('Property `' + propFullName + '` of component `' + componentName + '` has invalid PropType notation inside arrayOf.');
      }
      var propValue = props[propName];
      if (!Array.isArray(propValue)) {
        var propType = getPropType(propValue);
        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected an array.'));
      }
      for (var i = 0; i < propValue.length; i++) {
        var error = typeChecker(propValue, i, componentName, location, propFullName + '[' + i + ']', ReactPropTypesSecret);
        if (error instanceof Error) {
          return error;
        }
      }
      return null;
    }
    return createChainableTypeChecker(validate);
  }

  function createElementTypeChecker() {
    function validate(props, propName, componentName, location, propFullName) {
      var propValue = props[propName];
      if (!isValidElement(propValue)) {
        var propType = getPropType(propValue);
        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected a single ReactElement.'));
      }
      return null;
    }
    return createChainableTypeChecker(validate);
  }

  function createElementTypeTypeChecker() {
    function validate(props, propName, componentName, location, propFullName) {
      var propValue = props[propName];
      if (!ReactIs.isValidElementType(propValue)) {
        var propType = getPropType(propValue);
        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected a single ReactElement type.'));
      }
      return null;
    }
    return createChainableTypeChecker(validate);
  }

  function createInstanceTypeChecker(expectedClass) {
    function validate(props, propName, componentName, location, propFullName) {
      if (!(props[propName] instanceof expectedClass)) {
        var expectedClassName = expectedClass.name || ANONYMOUS;
        var actualClassName = getClassName(props[propName]);
        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + actualClassName + '` supplied to `' + componentName + '`, expected ') + ('instance of `' + expectedClassName + '`.'));
      }
      return null;
    }
    return createChainableTypeChecker(validate);
  }

  function createEnumTypeChecker(expectedValues) {
    if (!Array.isArray(expectedValues)) {
      if (true) {
        if (arguments.length > 1) {
          printWarning(
            'Invalid arguments supplied to oneOf, expected an array, got ' + arguments.length + ' arguments. ' +
            'A common mistake is to write oneOf(x, y, z) instead of oneOf([x, y, z]).'
          );
        } else {
          printWarning('Invalid argument supplied to oneOf, expected an array.');
        }
      }
      return emptyFunctionThatReturnsNull;
    }

    function validate(props, propName, componentName, location, propFullName) {
      var propValue = props[propName];
      for (var i = 0; i < expectedValues.length; i++) {
        if (is(propValue, expectedValues[i])) {
          return null;
        }
      }

      var valuesString = JSON.stringify(expectedValues, function replacer(key, value) {
        var type = getPreciseType(value);
        if (type === 'symbol') {
          return String(value);
        }
        return value;
      });
      return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of value `' + String(propValue) + '` ' + ('supplied to `' + componentName + '`, expected one of ' + valuesString + '.'));
    }
    return createChainableTypeChecker(validate);
  }

  function createObjectOfTypeChecker(typeChecker) {
    function validate(props, propName, componentName, location, propFullName) {
      if (typeof typeChecker !== 'function') {
        return new PropTypeError('Property `' + propFullName + '` of component `' + componentName + '` has invalid PropType notation inside objectOf.');
      }
      var propValue = props[propName];
      var propType = getPropType(propValue);
      if (propType !== 'object') {
        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected an object.'));
      }
      for (var key in propValue) {
        if (has(propValue, key)) {
          var error = typeChecker(propValue, key, componentName, location, propFullName + '.' + key, ReactPropTypesSecret);
          if (error instanceof Error) {
            return error;
          }
        }
      }
      return null;
    }
    return createChainableTypeChecker(validate);
  }

  function createUnionTypeChecker(arrayOfTypeCheckers) {
    if (!Array.isArray(arrayOfTypeCheckers)) {
       true ? printWarning('Invalid argument supplied to oneOfType, expected an instance of array.') : undefined;
      return emptyFunctionThatReturnsNull;
    }

    for (var i = 0; i < arrayOfTypeCheckers.length; i++) {
      var checker = arrayOfTypeCheckers[i];
      if (typeof checker !== 'function') {
        printWarning(
          'Invalid argument supplied to oneOfType. Expected an array of check functions, but ' +
          'received ' + getPostfixForTypeWarning(checker) + ' at index ' + i + '.'
        );
        return emptyFunctionThatReturnsNull;
      }
    }

    function validate(props, propName, componentName, location, propFullName) {
      for (var i = 0; i < arrayOfTypeCheckers.length; i++) {
        var checker = arrayOfTypeCheckers[i];
        if (checker(props, propName, componentName, location, propFullName, ReactPropTypesSecret) == null) {
          return null;
        }
      }

      return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` supplied to ' + ('`' + componentName + '`.'));
    }
    return createChainableTypeChecker(validate);
  }

  function createNodeChecker() {
    function validate(props, propName, componentName, location, propFullName) {
      if (!isNode(props[propName])) {
        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` supplied to ' + ('`' + componentName + '`, expected a ReactNode.'));
      }
      return null;
    }
    return createChainableTypeChecker(validate);
  }

  function createShapeTypeChecker(shapeTypes) {
    function validate(props, propName, componentName, location, propFullName) {
      var propValue = props[propName];
      var propType = getPropType(propValue);
      if (propType !== 'object') {
        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type `' + propType + '` ' + ('supplied to `' + componentName + '`, expected `object`.'));
      }
      for (var key in shapeTypes) {
        var checker = shapeTypes[key];
        if (!checker) {
          continue;
        }
        var error = checker(propValue, key, componentName, location, propFullName + '.' + key, ReactPropTypesSecret);
        if (error) {
          return error;
        }
      }
      return null;
    }
    return createChainableTypeChecker(validate);
  }

  function createStrictShapeTypeChecker(shapeTypes) {
    function validate(props, propName, componentName, location, propFullName) {
      var propValue = props[propName];
      var propType = getPropType(propValue);
      if (propType !== 'object') {
        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type `' + propType + '` ' + ('supplied to `' + componentName + '`, expected `object`.'));
      }
      // We need to check all keys in case some are required but missing from
      // props.
      var allKeys = assign({}, props[propName], shapeTypes);
      for (var key in allKeys) {
        var checker = shapeTypes[key];
        if (!checker) {
          return new PropTypeError(
            'Invalid ' + location + ' `' + propFullName + '` key `' + key + '` supplied to `' + componentName + '`.' +
            '\nBad object: ' + JSON.stringify(props[propName], null, '  ') +
            '\nValid keys: ' +  JSON.stringify(Object.keys(shapeTypes), null, '  ')
          );
        }
        var error = checker(propValue, key, componentName, location, propFullName + '.' + key, ReactPropTypesSecret);
        if (error) {
          return error;
        }
      }
      return null;
    }

    return createChainableTypeChecker(validate);
  }

  function isNode(propValue) {
    switch (typeof propValue) {
      case 'number':
      case 'string':
      case 'undefined':
        return true;
      case 'boolean':
        return !propValue;
      case 'object':
        if (Array.isArray(propValue)) {
          return propValue.every(isNode);
        }
        if (propValue === null || isValidElement(propValue)) {
          return true;
        }

        var iteratorFn = getIteratorFn(propValue);
        if (iteratorFn) {
          var iterator = iteratorFn.call(propValue);
          var step;
          if (iteratorFn !== propValue.entries) {
            while (!(step = iterator.next()).done) {
              if (!isNode(step.value)) {
                return false;
              }
            }
          } else {
            // Iterator will provide entry [k,v] tuples rather than values.
            while (!(step = iterator.next()).done) {
              var entry = step.value;
              if (entry) {
                if (!isNode(entry[1])) {
                  return false;
                }
              }
            }
          }
        } else {
          return false;
        }

        return true;
      default:
        return false;
    }
  }

  function isSymbol(propType, propValue) {
    // Native Symbol.
    if (propType === 'symbol') {
      return true;
    }

    // falsy value can't be a Symbol
    if (!propValue) {
      return false;
    }

    // 19.4.3.5 Symbol.prototype[@@toStringTag] === 'Symbol'
    if (propValue['@@toStringTag'] === 'Symbol') {
      return true;
    }

    // Fallback for non-spec compliant Symbols which are polyfilled.
    if (typeof Symbol === 'function' && propValue instanceof Symbol) {
      return true;
    }

    return false;
  }

  // Equivalent of `typeof` but with special handling for array and regexp.
  function getPropType(propValue) {
    var propType = typeof propValue;
    if (Array.isArray(propValue)) {
      return 'array';
    }
    if (propValue instanceof RegExp) {
      // Old webkits (at least until Android 4.0) return 'function' rather than
      // 'object' for typeof a RegExp. We'll normalize this here so that /bla/
      // passes PropTypes.object.
      return 'object';
    }
    if (isSymbol(propType, propValue)) {
      return 'symbol';
    }
    return propType;
  }

  // This handles more types than `getPropType`. Only used for error messages.
  // See `createPrimitiveTypeChecker`.
  function getPreciseType(propValue) {
    if (typeof propValue === 'undefined' || propValue === null) {
      return '' + propValue;
    }
    var propType = getPropType(propValue);
    if (propType === 'object') {
      if (propValue instanceof Date) {
        return 'date';
      } else if (propValue instanceof RegExp) {
        return 'regexp';
      }
    }
    return propType;
  }

  // Returns a string that is postfixed to a warning about an invalid type.
  // For example, "undefined" or "of type array"
  function getPostfixForTypeWarning(value) {
    var type = getPreciseType(value);
    switch (type) {
      case 'array':
      case 'object':
        return 'an ' + type;
      case 'boolean':
      case 'date':
      case 'regexp':
        return 'a ' + type;
      default:
        return type;
    }
  }

  // Returns class name of the object, if any.
  function getClassName(propValue) {
    if (!propValue.constructor || !propValue.constructor.name) {
      return ANONYMOUS;
    }
    return propValue.constructor.name;
  }

  ReactPropTypes.checkPropTypes = checkPropTypes;
  ReactPropTypes.resetWarningCache = checkPropTypes.resetWarningCache;
  ReactPropTypes.PropTypes = ReactPropTypes;

  return ReactPropTypes;
};


/***/ }),

/***/ "./node_modules/prop-types/index.js":
/*!******************************************!*\
  !*** ./node_modules/prop-types/index.js ***!
  \******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */

if (true) {
  var ReactIs = __webpack_require__(/*! react-is */ "./node_modules/react-is/index.js");

  // By explicitly using `prop-types` you are opting into new development behavior.
  // http://fb.me/prop-types-in-prod
  var throwOnDirectAccess = true;
  module.exports = __webpack_require__(/*! ./factoryWithTypeCheckers */ "./node_modules/prop-types/factoryWithTypeCheckers.js")(ReactIs.isElement, throwOnDirectAccess);
} else {}


/***/ }),

/***/ "./node_modules/prop-types/lib/ReactPropTypesSecret.js":
/*!*******************************************************************************************************************!*\
  !*** delegated ./node_modules/prop-types/lib/ReactPropTypesSecret.js from dll-reference dll_2adc2403d89adc16ead0 ***!
  \*******************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

module.exports = (__webpack_require__(/*! dll-reference dll_2adc2403d89adc16ead0 */ "dll-reference dll_2adc2403d89adc16ead0"))("./node_modules/prop-types/lib/ReactPropTypesSecret.js");

/***/ }),

/***/ "./node_modules/querystring-es3/decode.js":
/*!************************************************!*\
  !*** ./node_modules/querystring-es3/decode.js ***!
  \************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.



// If obj.hasOwnProperty has been overridden, then calling
// obj.hasOwnProperty(prop) will break.
// See: https://github.com/joyent/node/issues/1707
function hasOwnProperty(obj, prop) {
  return Object.prototype.hasOwnProperty.call(obj, prop);
}

module.exports = function(qs, sep, eq, options) {
  sep = sep || '&';
  eq = eq || '=';
  var obj = {};

  if (typeof qs !== 'string' || qs.length === 0) {
    return obj;
  }

  var regexp = /\+/g;
  qs = qs.split(sep);

  var maxKeys = 1000;
  if (options && typeof options.maxKeys === 'number') {
    maxKeys = options.maxKeys;
  }

  var len = qs.length;
  // maxKeys <= 0 means that we should not limit keys count
  if (maxKeys > 0 && len > maxKeys) {
    len = maxKeys;
  }

  for (var i = 0; i < len; ++i) {
    var x = qs[i].replace(regexp, '%20'),
        idx = x.indexOf(eq),
        kstr, vstr, k, v;

    if (idx >= 0) {
      kstr = x.substr(0, idx);
      vstr = x.substr(idx + 1);
    } else {
      kstr = x;
      vstr = '';
    }

    k = decodeURIComponent(kstr);
    v = decodeURIComponent(vstr);

    if (!hasOwnProperty(obj, k)) {
      obj[k] = v;
    } else if (isArray(obj[k])) {
      obj[k].push(v);
    } else {
      obj[k] = [obj[k], v];
    }
  }

  return obj;
};

var isArray = Array.isArray || function (xs) {
  return Object.prototype.toString.call(xs) === '[object Array]';
};


/***/ }),

/***/ "./node_modules/querystring-es3/encode.js":
/*!************************************************!*\
  !*** ./node_modules/querystring-es3/encode.js ***!
  \************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.



var stringifyPrimitive = function(v) {
  switch (typeof v) {
    case 'string':
      return v;

    case 'boolean':
      return v ? 'true' : 'false';

    case 'number':
      return isFinite(v) ? v : '';

    default:
      return '';
  }
};

module.exports = function(obj, sep, eq, name) {
  sep = sep || '&';
  eq = eq || '=';
  if (obj === null) {
    obj = undefined;
  }

  if (typeof obj === 'object') {
    return map(objectKeys(obj), function(k) {
      var ks = encodeURIComponent(stringifyPrimitive(k)) + eq;
      if (isArray(obj[k])) {
        return map(obj[k], function(v) {
          return ks + encodeURIComponent(stringifyPrimitive(v));
        }).join(sep);
      } else {
        return ks + encodeURIComponent(stringifyPrimitive(obj[k]));
      }
    }).join(sep);

  }

  if (!name) return '';
  return encodeURIComponent(stringifyPrimitive(name)) + eq +
         encodeURIComponent(stringifyPrimitive(obj));
};

var isArray = Array.isArray || function (xs) {
  return Object.prototype.toString.call(xs) === '[object Array]';
};

function map (xs, f) {
  if (xs.map) return xs.map(f);
  var res = [];
  for (var i = 0; i < xs.length; i++) {
    res.push(f(xs[i], i));
  }
  return res;
}

var objectKeys = Object.keys || function (obj) {
  var res = [];
  for (var key in obj) {
    if (Object.prototype.hasOwnProperty.call(obj, key)) res.push(key);
  }
  return res;
};


/***/ }),

/***/ "./node_modules/querystring-es3/index.js":
/*!***********************************************!*\
  !*** ./node_modules/querystring-es3/index.js ***!
  \***********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.decode = exports.parse = __webpack_require__(/*! ./decode */ "./node_modules/querystring-es3/decode.js");
exports.encode = exports.stringify = __webpack_require__(/*! ./encode */ "./node_modules/querystring-es3/encode.js");


/***/ }),

/***/ "./node_modules/react-dom/index.js":
/*!***********************************************************************************************!*\
  !*** delegated ./node_modules/react-dom/index.js from dll-reference dll_2adc2403d89adc16ead0 ***!
  \***********************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

module.exports = (__webpack_require__(/*! dll-reference dll_2adc2403d89adc16ead0 */ "dll-reference dll_2adc2403d89adc16ead0"))("./node_modules/react-dom/index.js");

/***/ }),

/***/ "./node_modules/react-is/cjs/react-is.development.js":
/*!***********************************************************!*\
  !*** ./node_modules/react-is/cjs/react-is.development.js ***!
  \***********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/** @license React v16.8.6
 * react-is.development.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */





if (true) {
  (function() {
'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

// The Symbol used to tag the ReactElement-like types. If there is no native Symbol
// nor polyfill, then a plain number is used for performance.
var hasSymbol = typeof Symbol === 'function' && Symbol.for;

var REACT_ELEMENT_TYPE = hasSymbol ? Symbol.for('react.element') : 0xeac7;
var REACT_PORTAL_TYPE = hasSymbol ? Symbol.for('react.portal') : 0xeaca;
var REACT_FRAGMENT_TYPE = hasSymbol ? Symbol.for('react.fragment') : 0xeacb;
var REACT_STRICT_MODE_TYPE = hasSymbol ? Symbol.for('react.strict_mode') : 0xeacc;
var REACT_PROFILER_TYPE = hasSymbol ? Symbol.for('react.profiler') : 0xead2;
var REACT_PROVIDER_TYPE = hasSymbol ? Symbol.for('react.provider') : 0xeacd;
var REACT_CONTEXT_TYPE = hasSymbol ? Symbol.for('react.context') : 0xeace;
var REACT_ASYNC_MODE_TYPE = hasSymbol ? Symbol.for('react.async_mode') : 0xeacf;
var REACT_CONCURRENT_MODE_TYPE = hasSymbol ? Symbol.for('react.concurrent_mode') : 0xeacf;
var REACT_FORWARD_REF_TYPE = hasSymbol ? Symbol.for('react.forward_ref') : 0xead0;
var REACT_SUSPENSE_TYPE = hasSymbol ? Symbol.for('react.suspense') : 0xead1;
var REACT_MEMO_TYPE = hasSymbol ? Symbol.for('react.memo') : 0xead3;
var REACT_LAZY_TYPE = hasSymbol ? Symbol.for('react.lazy') : 0xead4;

function isValidElementType(type) {
  return typeof type === 'string' || typeof type === 'function' ||
  // Note: its typeof might be other than 'symbol' or 'number' if it's a polyfill.
  type === REACT_FRAGMENT_TYPE || type === REACT_CONCURRENT_MODE_TYPE || type === REACT_PROFILER_TYPE || type === REACT_STRICT_MODE_TYPE || type === REACT_SUSPENSE_TYPE || typeof type === 'object' && type !== null && (type.$$typeof === REACT_LAZY_TYPE || type.$$typeof === REACT_MEMO_TYPE || type.$$typeof === REACT_PROVIDER_TYPE || type.$$typeof === REACT_CONTEXT_TYPE || type.$$typeof === REACT_FORWARD_REF_TYPE);
}

/**
 * Forked from fbjs/warning:
 * https://github.com/facebook/fbjs/blob/e66ba20ad5be433eb54423f2b097d829324d9de6/packages/fbjs/src/__forks__/warning.js
 *
 * Only change is we use console.warn instead of console.error,
 * and do nothing when 'console' is not supported.
 * This really simplifies the code.
 * ---
 * Similar to invariant but only logs a warning if the condition is not met.
 * This can be used to log issues in development environments in critical
 * paths. Removing the logging code for production environments will keep the
 * same logic and follow the same code paths.
 */

var lowPriorityWarning = function () {};

{
  var printWarning = function (format) {
    for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
      args[_key - 1] = arguments[_key];
    }

    var argIndex = 0;
    var message = 'Warning: ' + format.replace(/%s/g, function () {
      return args[argIndex++];
    });
    if (typeof console !== 'undefined') {
      console.warn(message);
    }
    try {
      // --- Welcome to debugging React ---
      // This error was thrown as a convenience so that you can use this stack
      // to find the callsite that caused this warning to fire.
      throw new Error(message);
    } catch (x) {}
  };

  lowPriorityWarning = function (condition, format) {
    if (format === undefined) {
      throw new Error('`lowPriorityWarning(condition, format, ...args)` requires a warning ' + 'message argument');
    }
    if (!condition) {
      for (var _len2 = arguments.length, args = Array(_len2 > 2 ? _len2 - 2 : 0), _key2 = 2; _key2 < _len2; _key2++) {
        args[_key2 - 2] = arguments[_key2];
      }

      printWarning.apply(undefined, [format].concat(args));
    }
  };
}

var lowPriorityWarning$1 = lowPriorityWarning;

function typeOf(object) {
  if (typeof object === 'object' && object !== null) {
    var $$typeof = object.$$typeof;
    switch ($$typeof) {
      case REACT_ELEMENT_TYPE:
        var type = object.type;

        switch (type) {
          case REACT_ASYNC_MODE_TYPE:
          case REACT_CONCURRENT_MODE_TYPE:
          case REACT_FRAGMENT_TYPE:
          case REACT_PROFILER_TYPE:
          case REACT_STRICT_MODE_TYPE:
          case REACT_SUSPENSE_TYPE:
            return type;
          default:
            var $$typeofType = type && type.$$typeof;

            switch ($$typeofType) {
              case REACT_CONTEXT_TYPE:
              case REACT_FORWARD_REF_TYPE:
              case REACT_PROVIDER_TYPE:
                return $$typeofType;
              default:
                return $$typeof;
            }
        }
      case REACT_LAZY_TYPE:
      case REACT_MEMO_TYPE:
      case REACT_PORTAL_TYPE:
        return $$typeof;
    }
  }

  return undefined;
}

// AsyncMode is deprecated along with isAsyncMode
var AsyncMode = REACT_ASYNC_MODE_TYPE;
var ConcurrentMode = REACT_CONCURRENT_MODE_TYPE;
var ContextConsumer = REACT_CONTEXT_TYPE;
var ContextProvider = REACT_PROVIDER_TYPE;
var Element = REACT_ELEMENT_TYPE;
var ForwardRef = REACT_FORWARD_REF_TYPE;
var Fragment = REACT_FRAGMENT_TYPE;
var Lazy = REACT_LAZY_TYPE;
var Memo = REACT_MEMO_TYPE;
var Portal = REACT_PORTAL_TYPE;
var Profiler = REACT_PROFILER_TYPE;
var StrictMode = REACT_STRICT_MODE_TYPE;
var Suspense = REACT_SUSPENSE_TYPE;

var hasWarnedAboutDeprecatedIsAsyncMode = false;

// AsyncMode should be deprecated
function isAsyncMode(object) {
  {
    if (!hasWarnedAboutDeprecatedIsAsyncMode) {
      hasWarnedAboutDeprecatedIsAsyncMode = true;
      lowPriorityWarning$1(false, 'The ReactIs.isAsyncMode() alias has been deprecated, ' + 'and will be removed in React 17+. Update your code to use ' + 'ReactIs.isConcurrentMode() instead. It has the exact same API.');
    }
  }
  return isConcurrentMode(object) || typeOf(object) === REACT_ASYNC_MODE_TYPE;
}
function isConcurrentMode(object) {
  return typeOf(object) === REACT_CONCURRENT_MODE_TYPE;
}
function isContextConsumer(object) {
  return typeOf(object) === REACT_CONTEXT_TYPE;
}
function isContextProvider(object) {
  return typeOf(object) === REACT_PROVIDER_TYPE;
}
function isElement(object) {
  return typeof object === 'object' && object !== null && object.$$typeof === REACT_ELEMENT_TYPE;
}
function isForwardRef(object) {
  return typeOf(object) === REACT_FORWARD_REF_TYPE;
}
function isFragment(object) {
  return typeOf(object) === REACT_FRAGMENT_TYPE;
}
function isLazy(object) {
  return typeOf(object) === REACT_LAZY_TYPE;
}
function isMemo(object) {
  return typeOf(object) === REACT_MEMO_TYPE;
}
function isPortal(object) {
  return typeOf(object) === REACT_PORTAL_TYPE;
}
function isProfiler(object) {
  return typeOf(object) === REACT_PROFILER_TYPE;
}
function isStrictMode(object) {
  return typeOf(object) === REACT_STRICT_MODE_TYPE;
}
function isSuspense(object) {
  return typeOf(object) === REACT_SUSPENSE_TYPE;
}

exports.typeOf = typeOf;
exports.AsyncMode = AsyncMode;
exports.ConcurrentMode = ConcurrentMode;
exports.ContextConsumer = ContextConsumer;
exports.ContextProvider = ContextProvider;
exports.Element = Element;
exports.ForwardRef = ForwardRef;
exports.Fragment = Fragment;
exports.Lazy = Lazy;
exports.Memo = Memo;
exports.Portal = Portal;
exports.Profiler = Profiler;
exports.StrictMode = StrictMode;
exports.Suspense = Suspense;
exports.isValidElementType = isValidElementType;
exports.isAsyncMode = isAsyncMode;
exports.isConcurrentMode = isConcurrentMode;
exports.isContextConsumer = isContextConsumer;
exports.isContextProvider = isContextProvider;
exports.isElement = isElement;
exports.isForwardRef = isForwardRef;
exports.isFragment = isFragment;
exports.isLazy = isLazy;
exports.isMemo = isMemo;
exports.isPortal = isPortal;
exports.isProfiler = isProfiler;
exports.isStrictMode = isStrictMode;
exports.isSuspense = isSuspense;
  })();
}


/***/ }),

/***/ "./node_modules/react-is/index.js":
/*!****************************************!*\
  !*** ./node_modules/react-is/index.js ***!
  \****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


if (false) {} else {
  module.exports = __webpack_require__(/*! ./cjs/react-is.development.js */ "./node_modules/react-is/cjs/react-is.development.js");
}


/***/ }),

/***/ "./node_modules/react-lottie/dist/index.js":
/*!*************************************************!*\
  !*** ./node_modules/react-lottie/dist/index.js ***!
  \*************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _extends2 = __webpack_require__(/*! babel-runtime/helpers/extends */ "./node_modules/babel-runtime/helpers/extends.js");

var _extends3 = _interopRequireDefault(_extends2);

var _getPrototypeOf = __webpack_require__(/*! babel-runtime/core-js/object/get-prototype-of */ "./node_modules/babel-runtime/core-js/object/get-prototype-of.js");

var _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);

var _classCallCheck2 = __webpack_require__(/*! babel-runtime/helpers/classCallCheck */ "./node_modules/babel-runtime/helpers/classCallCheck.js");

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _createClass2 = __webpack_require__(/*! babel-runtime/helpers/createClass */ "./node_modules/babel-runtime/helpers/createClass.js");

var _createClass3 = _interopRequireDefault(_createClass2);

var _possibleConstructorReturn2 = __webpack_require__(/*! babel-runtime/helpers/possibleConstructorReturn */ "./node_modules/babel-runtime/helpers/possibleConstructorReturn.js");

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = __webpack_require__(/*! babel-runtime/helpers/inherits */ "./node_modules/babel-runtime/helpers/inherits.js");

var _inherits3 = _interopRequireDefault(_inherits2);

var _react = __webpack_require__(/*! react */ "./node_modules/react/index.js");

var _react2 = _interopRequireDefault(_react);

var _propTypes = __webpack_require__(/*! prop-types */ "./node_modules/prop-types/index.js");

var _propTypes2 = _interopRequireDefault(_propTypes);

var _lottieWeb = __webpack_require__(/*! lottie-web */ "./node_modules/lottie-web/build/player/lottie.js");

var _lottieWeb2 = _interopRequireDefault(_lottieWeb);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var Lottie = function (_React$Component) {
  (0, _inherits3.default)(Lottie, _React$Component);

  function Lottie() {
    var _ref;

    var _temp, _this, _ret;

    (0, _classCallCheck3.default)(this, Lottie);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return _ret = (_temp = (_this = (0, _possibleConstructorReturn3.default)(this, (_ref = Lottie.__proto__ || (0, _getPrototypeOf2.default)(Lottie)).call.apply(_ref, [this].concat(args))), _this), _this.handleClickToPause = function () {
      // The pause() method is for handling pausing by passing a prop isPaused
      // This method is for handling the ability to pause by clicking on the animation
      if (_this.anim.isPaused) {
        _this.anim.play();
      } else {
        _this.anim.pause();
      }
    }, _temp), (0, _possibleConstructorReturn3.default)(_this, _ret);
  }

  (0, _createClass3.default)(Lottie, [{
    key: 'componentDidMount',
    value: function componentDidMount() {
      var _props = this.props,
          options = _props.options,
          eventListeners = _props.eventListeners;
      var loop = options.loop,
          autoplay = options.autoplay,
          animationData = options.animationData,
          rendererSettings = options.rendererSettings,
          segments = options.segments;


      this.options = {
        container: this.el,
        renderer: 'svg',
        loop: loop !== false,
        autoplay: autoplay !== false,
        segments: segments !== false,
        animationData: animationData,
        rendererSettings: rendererSettings
      };

      this.options = (0, _extends3.default)({}, this.options, options);

      this.anim = _lottieWeb2.default.loadAnimation(this.options);
      this.registerEvents(eventListeners);
    }
  }, {
    key: 'componentWillUpdate',
    value: function componentWillUpdate(nextProps /* , nextState */) {
      /* Recreate the animation handle if the data is changed */
      if (this.options.animationData !== nextProps.options.animationData) {
        this.deRegisterEvents(this.props.eventListeners);
        this.destroy();
        this.options = (0, _extends3.default)({}, this.options, nextProps.options);
        this.anim = _lottieWeb2.default.loadAnimation(this.options);
        this.registerEvents(nextProps.eventListeners);
      }
    }
  }, {
    key: 'componentDidUpdate',
    value: function componentDidUpdate() {
      if (this.props.isStopped) {
        this.stop();
      } else if (this.props.segments) {
        this.playSegments();
      } else {
        this.play();
      }

      this.pause();
      this.setSpeed();
      this.setDirection();
    }
  }, {
    key: 'componentWillUnmount',
    value: function componentWillUnmount() {
      this.deRegisterEvents(this.props.eventListeners);
      this.destroy();
      this.options.animationData = null;
      this.anim = null;
    }
  }, {
    key: 'setSpeed',
    value: function setSpeed() {
      this.anim.setSpeed(this.props.speed);
    }
  }, {
    key: 'setDirection',
    value: function setDirection() {
      this.anim.setDirection(this.props.direction);
    }
  }, {
    key: 'play',
    value: function play() {
      this.anim.play();
    }
  }, {
    key: 'playSegments',
    value: function playSegments() {
      this.anim.playSegments(this.props.segments);
    }
  }, {
    key: 'stop',
    value: function stop() {
      this.anim.stop();
    }
  }, {
    key: 'pause',
    value: function pause() {
      if (this.props.isPaused && !this.anim.isPaused) {
        this.anim.pause();
      } else if (!this.props.isPaused && this.anim.isPaused) {
        this.anim.pause();
      }
    }
  }, {
    key: 'destroy',
    value: function destroy() {
      this.anim.destroy();
    }
  }, {
    key: 'registerEvents',
    value: function registerEvents(eventListeners) {
      var _this2 = this;

      eventListeners.forEach(function (eventListener) {
        _this2.anim.addEventListener(eventListener.eventName, eventListener.callback);
      });
    }
  }, {
    key: 'deRegisterEvents',
    value: function deRegisterEvents(eventListeners) {
      var _this3 = this;

      eventListeners.forEach(function (eventListener) {
        _this3.anim.removeEventListener(eventListener.eventName, eventListener.callback);
      });
    }
  }, {
    key: 'render',
    value: function render() {
      var _this4 = this;

      var _props2 = this.props,
          width = _props2.width,
          height = _props2.height,
          ariaRole = _props2.ariaRole,
          ariaLabel = _props2.ariaLabel,
          isClickToPauseDisabled = _props2.isClickToPauseDisabled,
          title = _props2.title;


      var getSize = function getSize(initial) {
        var size = void 0;

        if (typeof initial === 'number') {
          size = initial + 'px';
        } else {
          size = initial || '100%';
        }

        return size;
      };

      var lottieStyles = (0, _extends3.default)({
        width: getSize(width),
        height: getSize(height),
        overflow: 'hidden',
        margin: '0 auto',
        outline: 'none'
      }, this.props.style);

      var onClickHandler = isClickToPauseDisabled ? function () {
        return null;
      } : this.handleClickToPause;

      return (
        // Bug with eslint rules https://github.com/airbnb/javascript/issues/1374
        // eslint-disable-next-line jsx-a11y/no-static-element-interactions
        _react2.default.createElement('div', {
          ref: function ref(c) {
            _this4.el = c;
          },
          style: lottieStyles,
          onClick: onClickHandler,
          title: title,
          role: ariaRole,
          'aria-label': ariaLabel,
          tabIndex: '0'
        })
      );
    }
  }]);
  return Lottie;
}(_react2.default.Component);

exports.default = Lottie;


Lottie.propTypes = {
  eventListeners: _propTypes2.default.arrayOf(_propTypes2.default.object),
  options: _propTypes2.default.object.isRequired,
  height: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.number]),
  width: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.number]),
  isStopped: _propTypes2.default.bool,
  isPaused: _propTypes2.default.bool,
  speed: _propTypes2.default.number,
  segments: _propTypes2.default.arrayOf(_propTypes2.default.number),
  direction: _propTypes2.default.number,
  ariaRole: _propTypes2.default.string,
  ariaLabel: _propTypes2.default.string,
  isClickToPauseDisabled: _propTypes2.default.bool,
  title: _propTypes2.default.string
};

Lottie.defaultProps = {
  eventListeners: [],
  isStopped: false,
  isPaused: false,
  speed: 1,
  ariaRole: 'button',
  ariaLabel: 'animation',
  isClickToPauseDisabled: false,
  title: ''
};

/***/ }),

/***/ "./node_modules/react-redux/es/components/Context.js":
/*!***********************************************************!*\
  !*** ./node_modules/react-redux/es/components/Context.js ***!
  \***********************************************************/
/*! exports provided: ReactReduxContext, default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ReactReduxContext", function() { return ReactReduxContext; });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);

var ReactReduxContext =
/*#__PURE__*/
react__WEBPACK_IMPORTED_MODULE_0___default.a.createContext(null);

if (true) {
  ReactReduxContext.displayName = 'ReactRedux';
}

/* harmony default export */ __webpack_exports__["default"] = (ReactReduxContext);

/***/ }),

/***/ "./node_modules/react-redux/es/components/Provider.js":
/*!************************************************************!*\
  !*** ./node_modules/react-redux/es/components/Provider.js ***!
  \************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var prop_types__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! prop-types */ "./node_modules/prop-types/index.js");
/* harmony import */ var prop_types__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(prop_types__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _Context__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./Context */ "./node_modules/react-redux/es/components/Context.js");
/* harmony import */ var _utils_Subscription__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../utils/Subscription */ "./node_modules/react-redux/es/utils/Subscription.js");





function Provider(_ref) {
  var store = _ref.store,
      context = _ref.context,
      children = _ref.children;
  var contextValue = Object(react__WEBPACK_IMPORTED_MODULE_0__["useMemo"])(function () {
    var subscription = new _utils_Subscription__WEBPACK_IMPORTED_MODULE_3__["default"](store);
    subscription.onStateChange = subscription.notifyNestedSubs;
    return {
      store: store,
      subscription: subscription
    };
  }, [store]);
  var previousState = Object(react__WEBPACK_IMPORTED_MODULE_0__["useMemo"])(function () {
    return store.getState();
  }, [store]);
  Object(react__WEBPACK_IMPORTED_MODULE_0__["useEffect"])(function () {
    var subscription = contextValue.subscription;
    subscription.trySubscribe();

    if (previousState !== store.getState()) {
      subscription.notifyNestedSubs();
    }

    return function () {
      subscription.tryUnsubscribe();
      subscription.onStateChange = null;
    };
  }, [contextValue, previousState]);
  var Context = context || _Context__WEBPACK_IMPORTED_MODULE_2__["ReactReduxContext"];
  return react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(Context.Provider, {
    value: contextValue
  }, children);
}

if (true) {
  Provider.propTypes = {
    store: prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.shape({
      subscribe: prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.func.isRequired,
      dispatch: prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.func.isRequired,
      getState: prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.func.isRequired
    }),
    context: prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.object,
    children: prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.any
  };
}

/* harmony default export */ __webpack_exports__["default"] = (Provider);

/***/ }),

/***/ "./node_modules/react-redux/es/components/connectAdvanced.js":
/*!*******************************************************************!*\
  !*** ./node_modules/react-redux/es/components/connectAdvanced.js ***!
  \*******************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return connectAdvanced; });
/* harmony import */ var _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/esm/extends */ "./node_modules/@babel/runtime/helpers/esm/extends.js");
/* harmony import */ var _babel_runtime_helpers_esm_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babel/runtime/helpers/esm/objectWithoutPropertiesLoose */ "./node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js");
/* harmony import */ var hoist_non_react_statics__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! hoist-non-react-statics */ "./node_modules/hoist-non-react-statics/dist/hoist-non-react-statics.cjs.js");
/* harmony import */ var hoist_non_react_statics__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(hoist_non_react_statics__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var react_is__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! react-is */ "./node_modules/react-redux/node_modules/react-is/index.js");
/* harmony import */ var react_is__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(react_is__WEBPACK_IMPORTED_MODULE_4__);
/* harmony import */ var _utils_Subscription__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../utils/Subscription */ "./node_modules/react-redux/es/utils/Subscription.js");
/* harmony import */ var _utils_useIsomorphicLayoutEffect__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../utils/useIsomorphicLayoutEffect */ "./node_modules/react-redux/es/utils/useIsomorphicLayoutEffect.js");
/* harmony import */ var _Context__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./Context */ "./node_modules/react-redux/es/components/Context.js");







 // Define some constant arrays just to avoid re-creating these

var EMPTY_ARRAY = [];
var NO_SUBSCRIPTION_ARRAY = [null, null];

var stringifyComponent = function stringifyComponent(Comp) {
  try {
    return JSON.stringify(Comp);
  } catch (err) {
    return String(Comp);
  }
};

function storeStateUpdatesReducer(state, action) {
  var updateCount = state[1];
  return [action.payload, updateCount + 1];
}

function useIsomorphicLayoutEffectWithArgs(effectFunc, effectArgs, dependencies) {
  Object(_utils_useIsomorphicLayoutEffect__WEBPACK_IMPORTED_MODULE_6__["useIsomorphicLayoutEffect"])(function () {
    return effectFunc.apply(void 0, effectArgs);
  }, dependencies);
}

function captureWrapperProps(lastWrapperProps, lastChildProps, renderIsScheduled, wrapperProps, actualChildProps, childPropsFromStoreUpdate, notifyNestedSubs) {
  // We want to capture the wrapper props and child props we used for later comparisons
  lastWrapperProps.current = wrapperProps;
  lastChildProps.current = actualChildProps;
  renderIsScheduled.current = false; // If the render was from a store update, clear out that reference and cascade the subscriber update

  if (childPropsFromStoreUpdate.current) {
    childPropsFromStoreUpdate.current = null;
    notifyNestedSubs();
  }
}

function subscribeUpdates(shouldHandleStateChanges, store, subscription, childPropsSelector, lastWrapperProps, lastChildProps, renderIsScheduled, childPropsFromStoreUpdate, notifyNestedSubs, forceComponentUpdateDispatch) {
  // If we're not subscribed to the store, nothing to do here
  if (!shouldHandleStateChanges) return; // Capture values for checking if and when this component unmounts

  var didUnsubscribe = false;
  var lastThrownError = null; // We'll run this callback every time a store subscription update propagates to this component

  var checkForUpdates = function checkForUpdates() {
    if (didUnsubscribe) {
      // Don't run stale listeners.
      // Redux doesn't guarantee unsubscriptions happen until next dispatch.
      return;
    }

    var latestStoreState = store.getState();
    var newChildProps, error;

    try {
      // Actually run the selector with the most recent store state and wrapper props
      // to determine what the child props should be
      newChildProps = childPropsSelector(latestStoreState, lastWrapperProps.current);
    } catch (e) {
      error = e;
      lastThrownError = e;
    }

    if (!error) {
      lastThrownError = null;
    } // If the child props haven't changed, nothing to do here - cascade the subscription update


    if (newChildProps === lastChildProps.current) {
      if (!renderIsScheduled.current) {
        notifyNestedSubs();
      }
    } else {
      // Save references to the new child props.  Note that we track the "child props from store update"
      // as a ref instead of a useState/useReducer because we need a way to determine if that value has
      // been processed.  If this went into useState/useReducer, we couldn't clear out the value without
      // forcing another re-render, which we don't want.
      lastChildProps.current = newChildProps;
      childPropsFromStoreUpdate.current = newChildProps;
      renderIsScheduled.current = true; // If the child props _did_ change (or we caught an error), this wrapper component needs to re-render

      forceComponentUpdateDispatch({
        type: 'STORE_UPDATED',
        payload: {
          error: error
        }
      });
    }
  }; // Actually subscribe to the nearest connected ancestor (or store)


  subscription.onStateChange = checkForUpdates;
  subscription.trySubscribe(); // Pull data from the store after first render in case the store has
  // changed since we began.

  checkForUpdates();

  var unsubscribeWrapper = function unsubscribeWrapper() {
    didUnsubscribe = true;
    subscription.tryUnsubscribe();
    subscription.onStateChange = null;

    if (lastThrownError) {
      // It's possible that we caught an error due to a bad mapState function, but the
      // parent re-rendered without this component and we're about to unmount.
      // This shouldn't happen as long as we do top-down subscriptions correctly, but
      // if we ever do those wrong, this throw will surface the error in our tests.
      // In that case, throw the error from here so it doesn't get lost.
      throw lastThrownError;
    }
  };

  return unsubscribeWrapper;
}

var initStateUpdates = function initStateUpdates() {
  return [null, 0];
};

function connectAdvanced(
/*
  selectorFactory is a func that is responsible for returning the selector function used to
  compute new props from state, props, and dispatch. For example:
      export default connectAdvanced((dispatch, options) => (state, props) => ({
      thing: state.things[props.thingId],
      saveThing: fields => dispatch(actionCreators.saveThing(props.thingId, fields)),
    }))(YourComponent)
    Access to dispatch is provided to the factory so selectorFactories can bind actionCreators
  outside of their selector as an optimization. Options passed to connectAdvanced are passed to
  the selectorFactory, along with displayName and WrappedComponent, as the second argument.
    Note that selectorFactory is responsible for all caching/memoization of inbound and outbound
  props. Do not use connectAdvanced directly without memoizing results between calls to your
  selector, otherwise the Connect component will re-render on every state or props change.
*/
selectorFactory, // options object:
_ref) {
  if (_ref === void 0) {
    _ref = {};
  }

  var _ref2 = _ref,
      _ref2$getDisplayName = _ref2.getDisplayName,
      getDisplayName = _ref2$getDisplayName === void 0 ? function (name) {
    return "ConnectAdvanced(" + name + ")";
  } : _ref2$getDisplayName,
      _ref2$methodName = _ref2.methodName,
      methodName = _ref2$methodName === void 0 ? 'connectAdvanced' : _ref2$methodName,
      _ref2$renderCountProp = _ref2.renderCountProp,
      renderCountProp = _ref2$renderCountProp === void 0 ? undefined : _ref2$renderCountProp,
      _ref2$shouldHandleSta = _ref2.shouldHandleStateChanges,
      shouldHandleStateChanges = _ref2$shouldHandleSta === void 0 ? true : _ref2$shouldHandleSta,
      _ref2$storeKey = _ref2.storeKey,
      storeKey = _ref2$storeKey === void 0 ? 'store' : _ref2$storeKey,
      _ref2$withRef = _ref2.withRef,
      withRef = _ref2$withRef === void 0 ? false : _ref2$withRef,
      _ref2$forwardRef = _ref2.forwardRef,
      forwardRef = _ref2$forwardRef === void 0 ? false : _ref2$forwardRef,
      _ref2$context = _ref2.context,
      context = _ref2$context === void 0 ? _Context__WEBPACK_IMPORTED_MODULE_7__["ReactReduxContext"] : _ref2$context,
      connectOptions = Object(_babel_runtime_helpers_esm_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_1__["default"])(_ref2, ["getDisplayName", "methodName", "renderCountProp", "shouldHandleStateChanges", "storeKey", "withRef", "forwardRef", "context"]);

  if (true) {
    if (renderCountProp !== undefined) {
      throw new Error("renderCountProp is removed. render counting is built into the latest React Dev Tools profiling extension");
    }

    if (withRef) {
      throw new Error('withRef is removed. To access the wrapped instance, use a ref on the connected component');
    }

    var customStoreWarningMessage = 'To use a custom Redux store for specific components, create a custom React context with ' + "React.createContext(), and pass the context object to React Redux's Provider and specific components" + ' like: <Provider context={MyContext}><ConnectedComponent context={MyContext} /></Provider>. ' + 'You may also pass a {context : MyContext} option to connect';

    if (storeKey !== 'store') {
      throw new Error('storeKey has been removed and does not do anything. ' + customStoreWarningMessage);
    }
  }

  var Context = context;
  return function wrapWithConnect(WrappedComponent) {
    if ( true && !Object(react_is__WEBPACK_IMPORTED_MODULE_4__["isValidElementType"])(WrappedComponent)) {
      throw new Error("You must pass a component to the function returned by " + (methodName + ". Instead received " + stringifyComponent(WrappedComponent)));
    }

    var wrappedComponentName = WrappedComponent.displayName || WrappedComponent.name || 'Component';
    var displayName = getDisplayName(wrappedComponentName);

    var selectorFactoryOptions = Object(_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__["default"])({}, connectOptions, {
      getDisplayName: getDisplayName,
      methodName: methodName,
      renderCountProp: renderCountProp,
      shouldHandleStateChanges: shouldHandleStateChanges,
      storeKey: storeKey,
      displayName: displayName,
      wrappedComponentName: wrappedComponentName,
      WrappedComponent: WrappedComponent
    });

    var pure = connectOptions.pure;

    function createChildSelector(store) {
      return selectorFactory(store.dispatch, selectorFactoryOptions);
    } // If we aren't running in "pure" mode, we don't want to memoize values.
    // To avoid conditionally calling hooks, we fall back to a tiny wrapper
    // that just executes the given callback immediately.


    var usePureOnlyMemo = pure ? react__WEBPACK_IMPORTED_MODULE_3__["useMemo"] : function (callback) {
      return callback();
    };

    function ConnectFunction(props) {
      var _useMemo = Object(react__WEBPACK_IMPORTED_MODULE_3__["useMemo"])(function () {
        // Distinguish between actual "data" props that were passed to the wrapper component,
        // and values needed to control behavior (forwarded refs, alternate context instances).
        // To maintain the wrapperProps object reference, memoize this destructuring.
        var forwardedRef = props.forwardedRef,
            wrapperProps = Object(_babel_runtime_helpers_esm_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_1__["default"])(props, ["forwardedRef"]);

        return [props.context, forwardedRef, wrapperProps];
      }, [props]),
          propsContext = _useMemo[0],
          forwardedRef = _useMemo[1],
          wrapperProps = _useMemo[2];

      var ContextToUse = Object(react__WEBPACK_IMPORTED_MODULE_3__["useMemo"])(function () {
        // Users may optionally pass in a custom context instance to use instead of our ReactReduxContext.
        // Memoize the check that determines which context instance we should use.
        return propsContext && propsContext.Consumer && Object(react_is__WEBPACK_IMPORTED_MODULE_4__["isContextConsumer"])(react__WEBPACK_IMPORTED_MODULE_3___default.a.createElement(propsContext.Consumer, null)) ? propsContext : Context;
      }, [propsContext, Context]); // Retrieve the store and ancestor subscription via context, if available

      var contextValue = Object(react__WEBPACK_IMPORTED_MODULE_3__["useContext"])(ContextToUse); // The store _must_ exist as either a prop or in context.
      // We'll check to see if it _looks_ like a Redux store first.
      // This allows us to pass through a `store` prop that is just a plain value.

      var didStoreComeFromProps = Boolean(props.store) && Boolean(props.store.getState) && Boolean(props.store.dispatch);
      var didStoreComeFromContext = Boolean(contextValue) && Boolean(contextValue.store);

      if ( true && !didStoreComeFromProps && !didStoreComeFromContext) {
        throw new Error("Could not find \"store\" in the context of " + ("\"" + displayName + "\". Either wrap the root component in a <Provider>, ") + "or pass a custom React context provider to <Provider> and the corresponding " + ("React context consumer to " + displayName + " in connect options."));
      } // Based on the previous check, one of these must be true


      var store = didStoreComeFromProps ? props.store : contextValue.store;
      var childPropsSelector = Object(react__WEBPACK_IMPORTED_MODULE_3__["useMemo"])(function () {
        // The child props selector needs the store reference as an input.
        // Re-create this selector whenever the store changes.
        return createChildSelector(store);
      }, [store]);

      var _useMemo2 = Object(react__WEBPACK_IMPORTED_MODULE_3__["useMemo"])(function () {
        if (!shouldHandleStateChanges) return NO_SUBSCRIPTION_ARRAY; // This Subscription's source should match where store came from: props vs. context. A component
        // connected to the store via props shouldn't use subscription from context, or vice versa.

        var subscription = new _utils_Subscription__WEBPACK_IMPORTED_MODULE_5__["default"](store, didStoreComeFromProps ? null : contextValue.subscription); // `notifyNestedSubs` is duplicated to handle the case where the component is unmounted in
        // the middle of the notification loop, where `subscription` will then be null. This can
        // probably be avoided if Subscription's listeners logic is changed to not call listeners
        // that have been unsubscribed in the  middle of the notification loop.

        var notifyNestedSubs = subscription.notifyNestedSubs.bind(subscription);
        return [subscription, notifyNestedSubs];
      }, [store, didStoreComeFromProps, contextValue]),
          subscription = _useMemo2[0],
          notifyNestedSubs = _useMemo2[1]; // Determine what {store, subscription} value should be put into nested context, if necessary,
      // and memoize that value to avoid unnecessary context updates.


      var overriddenContextValue = Object(react__WEBPACK_IMPORTED_MODULE_3__["useMemo"])(function () {
        if (didStoreComeFromProps) {
          // This component is directly subscribed to a store from props.
          // We don't want descendants reading from this store - pass down whatever
          // the existing context value is from the nearest connected ancestor.
          return contextValue;
        } // Otherwise, put this component's subscription instance into context, so that
        // connected descendants won't update until after this component is done


        return Object(_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__["default"])({}, contextValue, {
          subscription: subscription
        });
      }, [didStoreComeFromProps, contextValue, subscription]); // We need to force this wrapper component to re-render whenever a Redux store update
      // causes a change to the calculated child component props (or we caught an error in mapState)

      var _useReducer = Object(react__WEBPACK_IMPORTED_MODULE_3__["useReducer"])(storeStateUpdatesReducer, EMPTY_ARRAY, initStateUpdates),
          _useReducer$ = _useReducer[0],
          previousStateUpdateResult = _useReducer$[0],
          forceComponentUpdateDispatch = _useReducer[1]; // Propagate any mapState/mapDispatch errors upwards


      if (previousStateUpdateResult && previousStateUpdateResult.error) {
        throw previousStateUpdateResult.error;
      } // Set up refs to coordinate values between the subscription effect and the render logic


      var lastChildProps = Object(react__WEBPACK_IMPORTED_MODULE_3__["useRef"])();
      var lastWrapperProps = Object(react__WEBPACK_IMPORTED_MODULE_3__["useRef"])(wrapperProps);
      var childPropsFromStoreUpdate = Object(react__WEBPACK_IMPORTED_MODULE_3__["useRef"])();
      var renderIsScheduled = Object(react__WEBPACK_IMPORTED_MODULE_3__["useRef"])(false);
      var actualChildProps = usePureOnlyMemo(function () {
        // Tricky logic here:
        // - This render may have been triggered by a Redux store update that produced new child props
        // - However, we may have gotten new wrapper props after that
        // If we have new child props, and the same wrapper props, we know we should use the new child props as-is.
        // But, if we have new wrapper props, those might change the child props, so we have to recalculate things.
        // So, we'll use the child props from store update only if the wrapper props are the same as last time.
        if (childPropsFromStoreUpdate.current && wrapperProps === lastWrapperProps.current) {
          return childPropsFromStoreUpdate.current;
        } // TODO We're reading the store directly in render() here. Bad idea?
        // This will likely cause Bad Things (TM) to happen in Concurrent Mode.
        // Note that we do this because on renders _not_ caused by store updates, we need the latest store state
        // to determine what the child props should be.


        return childPropsSelector(store.getState(), wrapperProps);
      }, [store, previousStateUpdateResult, wrapperProps]); // We need this to execute synchronously every time we re-render. However, React warns
      // about useLayoutEffect in SSR, so we try to detect environment and fall back to
      // just useEffect instead to avoid the warning, since neither will run anyway.

      useIsomorphicLayoutEffectWithArgs(captureWrapperProps, [lastWrapperProps, lastChildProps, renderIsScheduled, wrapperProps, actualChildProps, childPropsFromStoreUpdate, notifyNestedSubs]); // Our re-subscribe logic only runs when the store/subscription setup changes

      useIsomorphicLayoutEffectWithArgs(subscribeUpdates, [shouldHandleStateChanges, store, subscription, childPropsSelector, lastWrapperProps, lastChildProps, renderIsScheduled, childPropsFromStoreUpdate, notifyNestedSubs, forceComponentUpdateDispatch], [store, subscription, childPropsSelector]); // Now that all that's done, we can finally try to actually render the child component.
      // We memoize the elements for the rendered child component as an optimization.

      var renderedWrappedComponent = Object(react__WEBPACK_IMPORTED_MODULE_3__["useMemo"])(function () {
        return react__WEBPACK_IMPORTED_MODULE_3___default.a.createElement(WrappedComponent, Object(_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__["default"])({}, actualChildProps, {
          ref: forwardedRef
        }));
      }, [forwardedRef, WrappedComponent, actualChildProps]); // If React sees the exact same element reference as last time, it bails out of re-rendering
      // that child, same as if it was wrapped in React.memo() or returned false from shouldComponentUpdate.

      var renderedChild = Object(react__WEBPACK_IMPORTED_MODULE_3__["useMemo"])(function () {
        if (shouldHandleStateChanges) {
          // If this component is subscribed to store updates, we need to pass its own
          // subscription instance down to our descendants. That means rendering the same
          // Context instance, and putting a different value into the context.
          return react__WEBPACK_IMPORTED_MODULE_3___default.a.createElement(ContextToUse.Provider, {
            value: overriddenContextValue
          }, renderedWrappedComponent);
        }

        return renderedWrappedComponent;
      }, [ContextToUse, renderedWrappedComponent, overriddenContextValue]);
      return renderedChild;
    } // If we're in "pure" mode, ensure our wrapper component only re-renders when incoming props have changed.


    var Connect = pure ? react__WEBPACK_IMPORTED_MODULE_3___default.a.memo(ConnectFunction) : ConnectFunction;
    Connect.WrappedComponent = WrappedComponent;
    Connect.displayName = displayName;

    if (forwardRef) {
      var forwarded = react__WEBPACK_IMPORTED_MODULE_3___default.a.forwardRef(function forwardConnectRef(props, ref) {
        return react__WEBPACK_IMPORTED_MODULE_3___default.a.createElement(Connect, Object(_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__["default"])({}, props, {
          forwardedRef: ref
        }));
      });
      forwarded.displayName = displayName;
      forwarded.WrappedComponent = WrappedComponent;
      return hoist_non_react_statics__WEBPACK_IMPORTED_MODULE_2___default()(forwarded, WrappedComponent);
    }

    return hoist_non_react_statics__WEBPACK_IMPORTED_MODULE_2___default()(Connect, WrappedComponent);
  };
}

/***/ }),

/***/ "./node_modules/react-redux/es/connect/connect.js":
/*!********************************************************!*\
  !*** ./node_modules/react-redux/es/connect/connect.js ***!
  \********************************************************/
/*! exports provided: createConnect, default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createConnect", function() { return createConnect; });
/* harmony import */ var _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/esm/extends */ "./node_modules/@babel/runtime/helpers/esm/extends.js");
/* harmony import */ var _babel_runtime_helpers_esm_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babel/runtime/helpers/esm/objectWithoutPropertiesLoose */ "./node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js");
/* harmony import */ var _components_connectAdvanced__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../components/connectAdvanced */ "./node_modules/react-redux/es/components/connectAdvanced.js");
/* harmony import */ var _utils_shallowEqual__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../utils/shallowEqual */ "./node_modules/react-redux/es/utils/shallowEqual.js");
/* harmony import */ var _mapDispatchToProps__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./mapDispatchToProps */ "./node_modules/react-redux/es/connect/mapDispatchToProps.js");
/* harmony import */ var _mapStateToProps__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./mapStateToProps */ "./node_modules/react-redux/es/connect/mapStateToProps.js");
/* harmony import */ var _mergeProps__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./mergeProps */ "./node_modules/react-redux/es/connect/mergeProps.js");
/* harmony import */ var _selectorFactory__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./selectorFactory */ "./node_modules/react-redux/es/connect/selectorFactory.js");








/*
  connect is a facade over connectAdvanced. It turns its args into a compatible
  selectorFactory, which has the signature:

    (dispatch, options) => (nextState, nextOwnProps) => nextFinalProps
  
  connect passes its args to connectAdvanced as options, which will in turn pass them to
  selectorFactory each time a Connect component instance is instantiated or hot reloaded.

  selectorFactory returns a final props selector from its mapStateToProps,
  mapStateToPropsFactories, mapDispatchToProps, mapDispatchToPropsFactories, mergeProps,
  mergePropsFactories, and pure args.

  The resulting final props selector is called by the Connect component instance whenever
  it receives new props or store state.
 */

function match(arg, factories, name) {
  for (var i = factories.length - 1; i >= 0; i--) {
    var result = factories[i](arg);
    if (result) return result;
  }

  return function (dispatch, options) {
    throw new Error("Invalid value of type " + typeof arg + " for " + name + " argument when connecting component " + options.wrappedComponentName + ".");
  };
}

function strictEqual(a, b) {
  return a === b;
} // createConnect with default args builds the 'official' connect behavior. Calling it with
// different options opens up some testing and extensibility scenarios


function createConnect(_temp) {
  var _ref = _temp === void 0 ? {} : _temp,
      _ref$connectHOC = _ref.connectHOC,
      connectHOC = _ref$connectHOC === void 0 ? _components_connectAdvanced__WEBPACK_IMPORTED_MODULE_2__["default"] : _ref$connectHOC,
      _ref$mapStateToPropsF = _ref.mapStateToPropsFactories,
      mapStateToPropsFactories = _ref$mapStateToPropsF === void 0 ? _mapStateToProps__WEBPACK_IMPORTED_MODULE_5__["default"] : _ref$mapStateToPropsF,
      _ref$mapDispatchToPro = _ref.mapDispatchToPropsFactories,
      mapDispatchToPropsFactories = _ref$mapDispatchToPro === void 0 ? _mapDispatchToProps__WEBPACK_IMPORTED_MODULE_4__["default"] : _ref$mapDispatchToPro,
      _ref$mergePropsFactor = _ref.mergePropsFactories,
      mergePropsFactories = _ref$mergePropsFactor === void 0 ? _mergeProps__WEBPACK_IMPORTED_MODULE_6__["default"] : _ref$mergePropsFactor,
      _ref$selectorFactory = _ref.selectorFactory,
      selectorFactory = _ref$selectorFactory === void 0 ? _selectorFactory__WEBPACK_IMPORTED_MODULE_7__["default"] : _ref$selectorFactory;

  return function connect(mapStateToProps, mapDispatchToProps, mergeProps, _ref2) {
    if (_ref2 === void 0) {
      _ref2 = {};
    }

    var _ref3 = _ref2,
        _ref3$pure = _ref3.pure,
        pure = _ref3$pure === void 0 ? true : _ref3$pure,
        _ref3$areStatesEqual = _ref3.areStatesEqual,
        areStatesEqual = _ref3$areStatesEqual === void 0 ? strictEqual : _ref3$areStatesEqual,
        _ref3$areOwnPropsEqua = _ref3.areOwnPropsEqual,
        areOwnPropsEqual = _ref3$areOwnPropsEqua === void 0 ? _utils_shallowEqual__WEBPACK_IMPORTED_MODULE_3__["default"] : _ref3$areOwnPropsEqua,
        _ref3$areStatePropsEq = _ref3.areStatePropsEqual,
        areStatePropsEqual = _ref3$areStatePropsEq === void 0 ? _utils_shallowEqual__WEBPACK_IMPORTED_MODULE_3__["default"] : _ref3$areStatePropsEq,
        _ref3$areMergedPropsE = _ref3.areMergedPropsEqual,
        areMergedPropsEqual = _ref3$areMergedPropsE === void 0 ? _utils_shallowEqual__WEBPACK_IMPORTED_MODULE_3__["default"] : _ref3$areMergedPropsE,
        extraOptions = Object(_babel_runtime_helpers_esm_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_1__["default"])(_ref3, ["pure", "areStatesEqual", "areOwnPropsEqual", "areStatePropsEqual", "areMergedPropsEqual"]);

    var initMapStateToProps = match(mapStateToProps, mapStateToPropsFactories, 'mapStateToProps');
    var initMapDispatchToProps = match(mapDispatchToProps, mapDispatchToPropsFactories, 'mapDispatchToProps');
    var initMergeProps = match(mergeProps, mergePropsFactories, 'mergeProps');
    return connectHOC(selectorFactory, Object(_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__["default"])({
      // used in error messages
      methodName: 'connect',
      // used to compute Connect's displayName from the wrapped component's displayName.
      getDisplayName: function getDisplayName(name) {
        return "Connect(" + name + ")";
      },
      // if mapStateToProps is falsy, the Connect component doesn't subscribe to store state changes
      shouldHandleStateChanges: Boolean(mapStateToProps),
      // passed through to selectorFactory
      initMapStateToProps: initMapStateToProps,
      initMapDispatchToProps: initMapDispatchToProps,
      initMergeProps: initMergeProps,
      pure: pure,
      areStatesEqual: areStatesEqual,
      areOwnPropsEqual: areOwnPropsEqual,
      areStatePropsEqual: areStatePropsEqual,
      areMergedPropsEqual: areMergedPropsEqual
    }, extraOptions));
  };
}
/* harmony default export */ __webpack_exports__["default"] = (/*#__PURE__*/createConnect());

/***/ }),

/***/ "./node_modules/react-redux/es/connect/mapDispatchToProps.js":
/*!*******************************************************************!*\
  !*** ./node_modules/react-redux/es/connect/mapDispatchToProps.js ***!
  \*******************************************************************/
/*! exports provided: whenMapDispatchToPropsIsFunction, whenMapDispatchToPropsIsMissing, whenMapDispatchToPropsIsObject, default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "whenMapDispatchToPropsIsFunction", function() { return whenMapDispatchToPropsIsFunction; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "whenMapDispatchToPropsIsMissing", function() { return whenMapDispatchToPropsIsMissing; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "whenMapDispatchToPropsIsObject", function() { return whenMapDispatchToPropsIsObject; });
/* harmony import */ var redux__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! redux */ "./node_modules/redux/es/redux.js");
/* harmony import */ var _wrapMapToProps__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./wrapMapToProps */ "./node_modules/react-redux/es/connect/wrapMapToProps.js");


function whenMapDispatchToPropsIsFunction(mapDispatchToProps) {
  return typeof mapDispatchToProps === 'function' ? Object(_wrapMapToProps__WEBPACK_IMPORTED_MODULE_1__["wrapMapToPropsFunc"])(mapDispatchToProps, 'mapDispatchToProps') : undefined;
}
function whenMapDispatchToPropsIsMissing(mapDispatchToProps) {
  return !mapDispatchToProps ? Object(_wrapMapToProps__WEBPACK_IMPORTED_MODULE_1__["wrapMapToPropsConstant"])(function (dispatch) {
    return {
      dispatch: dispatch
    };
  }) : undefined;
}
function whenMapDispatchToPropsIsObject(mapDispatchToProps) {
  return mapDispatchToProps && typeof mapDispatchToProps === 'object' ? Object(_wrapMapToProps__WEBPACK_IMPORTED_MODULE_1__["wrapMapToPropsConstant"])(function (dispatch) {
    return Object(redux__WEBPACK_IMPORTED_MODULE_0__["bindActionCreators"])(mapDispatchToProps, dispatch);
  }) : undefined;
}
/* harmony default export */ __webpack_exports__["default"] = ([whenMapDispatchToPropsIsFunction, whenMapDispatchToPropsIsMissing, whenMapDispatchToPropsIsObject]);

/***/ }),

/***/ "./node_modules/react-redux/es/connect/mapStateToProps.js":
/*!****************************************************************!*\
  !*** ./node_modules/react-redux/es/connect/mapStateToProps.js ***!
  \****************************************************************/
/*! exports provided: whenMapStateToPropsIsFunction, whenMapStateToPropsIsMissing, default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "whenMapStateToPropsIsFunction", function() { return whenMapStateToPropsIsFunction; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "whenMapStateToPropsIsMissing", function() { return whenMapStateToPropsIsMissing; });
/* harmony import */ var _wrapMapToProps__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./wrapMapToProps */ "./node_modules/react-redux/es/connect/wrapMapToProps.js");

function whenMapStateToPropsIsFunction(mapStateToProps) {
  return typeof mapStateToProps === 'function' ? Object(_wrapMapToProps__WEBPACK_IMPORTED_MODULE_0__["wrapMapToPropsFunc"])(mapStateToProps, 'mapStateToProps') : undefined;
}
function whenMapStateToPropsIsMissing(mapStateToProps) {
  return !mapStateToProps ? Object(_wrapMapToProps__WEBPACK_IMPORTED_MODULE_0__["wrapMapToPropsConstant"])(function () {
    return {};
  }) : undefined;
}
/* harmony default export */ __webpack_exports__["default"] = ([whenMapStateToPropsIsFunction, whenMapStateToPropsIsMissing]);

/***/ }),

/***/ "./node_modules/react-redux/es/connect/mergeProps.js":
/*!***********************************************************!*\
  !*** ./node_modules/react-redux/es/connect/mergeProps.js ***!
  \***********************************************************/
/*! exports provided: defaultMergeProps, wrapMergePropsFunc, whenMergePropsIsFunction, whenMergePropsIsOmitted, default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "defaultMergeProps", function() { return defaultMergeProps; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "wrapMergePropsFunc", function() { return wrapMergePropsFunc; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "whenMergePropsIsFunction", function() { return whenMergePropsIsFunction; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "whenMergePropsIsOmitted", function() { return whenMergePropsIsOmitted; });
/* harmony import */ var _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/esm/extends */ "./node_modules/@babel/runtime/helpers/esm/extends.js");
/* harmony import */ var _utils_verifyPlainObject__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utils/verifyPlainObject */ "./node_modules/react-redux/es/utils/verifyPlainObject.js");


function defaultMergeProps(stateProps, dispatchProps, ownProps) {
  return Object(_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__["default"])({}, ownProps, {}, stateProps, {}, dispatchProps);
}
function wrapMergePropsFunc(mergeProps) {
  return function initMergePropsProxy(dispatch, _ref) {
    var displayName = _ref.displayName,
        pure = _ref.pure,
        areMergedPropsEqual = _ref.areMergedPropsEqual;
    var hasRunOnce = false;
    var mergedProps;
    return function mergePropsProxy(stateProps, dispatchProps, ownProps) {
      var nextMergedProps = mergeProps(stateProps, dispatchProps, ownProps);

      if (hasRunOnce) {
        if (!pure || !areMergedPropsEqual(nextMergedProps, mergedProps)) mergedProps = nextMergedProps;
      } else {
        hasRunOnce = true;
        mergedProps = nextMergedProps;
        if (true) Object(_utils_verifyPlainObject__WEBPACK_IMPORTED_MODULE_1__["default"])(mergedProps, displayName, 'mergeProps');
      }

      return mergedProps;
    };
  };
}
function whenMergePropsIsFunction(mergeProps) {
  return typeof mergeProps === 'function' ? wrapMergePropsFunc(mergeProps) : undefined;
}
function whenMergePropsIsOmitted(mergeProps) {
  return !mergeProps ? function () {
    return defaultMergeProps;
  } : undefined;
}
/* harmony default export */ __webpack_exports__["default"] = ([whenMergePropsIsFunction, whenMergePropsIsOmitted]);

/***/ }),

/***/ "./node_modules/react-redux/es/connect/selectorFactory.js":
/*!****************************************************************!*\
  !*** ./node_modules/react-redux/es/connect/selectorFactory.js ***!
  \****************************************************************/
/*! exports provided: impureFinalPropsSelectorFactory, pureFinalPropsSelectorFactory, default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "impureFinalPropsSelectorFactory", function() { return impureFinalPropsSelectorFactory; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "pureFinalPropsSelectorFactory", function() { return pureFinalPropsSelectorFactory; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return finalPropsSelectorFactory; });
/* harmony import */ var _babel_runtime_helpers_esm_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/esm/objectWithoutPropertiesLoose */ "./node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js");
/* harmony import */ var _verifySubselectors__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./verifySubselectors */ "./node_modules/react-redux/es/connect/verifySubselectors.js");


function impureFinalPropsSelectorFactory(mapStateToProps, mapDispatchToProps, mergeProps, dispatch) {
  return function impureFinalPropsSelector(state, ownProps) {
    return mergeProps(mapStateToProps(state, ownProps), mapDispatchToProps(dispatch, ownProps), ownProps);
  };
}
function pureFinalPropsSelectorFactory(mapStateToProps, mapDispatchToProps, mergeProps, dispatch, _ref) {
  var areStatesEqual = _ref.areStatesEqual,
      areOwnPropsEqual = _ref.areOwnPropsEqual,
      areStatePropsEqual = _ref.areStatePropsEqual;
  var hasRunAtLeastOnce = false;
  var state;
  var ownProps;
  var stateProps;
  var dispatchProps;
  var mergedProps;

  function handleFirstCall(firstState, firstOwnProps) {
    state = firstState;
    ownProps = firstOwnProps;
    stateProps = mapStateToProps(state, ownProps);
    dispatchProps = mapDispatchToProps(dispatch, ownProps);
    mergedProps = mergeProps(stateProps, dispatchProps, ownProps);
    hasRunAtLeastOnce = true;
    return mergedProps;
  }

  function handleNewPropsAndNewState() {
    stateProps = mapStateToProps(state, ownProps);
    if (mapDispatchToProps.dependsOnOwnProps) dispatchProps = mapDispatchToProps(dispatch, ownProps);
    mergedProps = mergeProps(stateProps, dispatchProps, ownProps);
    return mergedProps;
  }

  function handleNewProps() {
    if (mapStateToProps.dependsOnOwnProps) stateProps = mapStateToProps(state, ownProps);
    if (mapDispatchToProps.dependsOnOwnProps) dispatchProps = mapDispatchToProps(dispatch, ownProps);
    mergedProps = mergeProps(stateProps, dispatchProps, ownProps);
    return mergedProps;
  }

  function handleNewState() {
    var nextStateProps = mapStateToProps(state, ownProps);
    var statePropsChanged = !areStatePropsEqual(nextStateProps, stateProps);
    stateProps = nextStateProps;
    if (statePropsChanged) mergedProps = mergeProps(stateProps, dispatchProps, ownProps);
    return mergedProps;
  }

  function handleSubsequentCalls(nextState, nextOwnProps) {
    var propsChanged = !areOwnPropsEqual(nextOwnProps, ownProps);
    var stateChanged = !areStatesEqual(nextState, state);
    state = nextState;
    ownProps = nextOwnProps;
    if (propsChanged && stateChanged) return handleNewPropsAndNewState();
    if (propsChanged) return handleNewProps();
    if (stateChanged) return handleNewState();
    return mergedProps;
  }

  return function pureFinalPropsSelector(nextState, nextOwnProps) {
    return hasRunAtLeastOnce ? handleSubsequentCalls(nextState, nextOwnProps) : handleFirstCall(nextState, nextOwnProps);
  };
} // TODO: Add more comments
// If pure is true, the selector returned by selectorFactory will memoize its results,
// allowing connectAdvanced's shouldComponentUpdate to return false if final
// props have not changed. If false, the selector will always return a new
// object and shouldComponentUpdate will always return true.

function finalPropsSelectorFactory(dispatch, _ref2) {
  var initMapStateToProps = _ref2.initMapStateToProps,
      initMapDispatchToProps = _ref2.initMapDispatchToProps,
      initMergeProps = _ref2.initMergeProps,
      options = Object(_babel_runtime_helpers_esm_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_0__["default"])(_ref2, ["initMapStateToProps", "initMapDispatchToProps", "initMergeProps"]);

  var mapStateToProps = initMapStateToProps(dispatch, options);
  var mapDispatchToProps = initMapDispatchToProps(dispatch, options);
  var mergeProps = initMergeProps(dispatch, options);

  if (true) {
    Object(_verifySubselectors__WEBPACK_IMPORTED_MODULE_1__["default"])(mapStateToProps, mapDispatchToProps, mergeProps, options.displayName);
  }

  var selectorFactory = options.pure ? pureFinalPropsSelectorFactory : impureFinalPropsSelectorFactory;
  return selectorFactory(mapStateToProps, mapDispatchToProps, mergeProps, dispatch, options);
}

/***/ }),

/***/ "./node_modules/react-redux/es/connect/verifySubselectors.js":
/*!*******************************************************************!*\
  !*** ./node_modules/react-redux/es/connect/verifySubselectors.js ***!
  \*******************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return verifySubselectors; });
/* harmony import */ var _utils_warning__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils/warning */ "./node_modules/react-redux/es/utils/warning.js");


function verify(selector, methodName, displayName) {
  if (!selector) {
    throw new Error("Unexpected value for " + methodName + " in " + displayName + ".");
  } else if (methodName === 'mapStateToProps' || methodName === 'mapDispatchToProps') {
    if (!Object.prototype.hasOwnProperty.call(selector, 'dependsOnOwnProps')) {
      Object(_utils_warning__WEBPACK_IMPORTED_MODULE_0__["default"])("The selector for " + methodName + " of " + displayName + " did not specify a value for dependsOnOwnProps.");
    }
  }
}

function verifySubselectors(mapStateToProps, mapDispatchToProps, mergeProps, displayName) {
  verify(mapStateToProps, 'mapStateToProps', displayName);
  verify(mapDispatchToProps, 'mapDispatchToProps', displayName);
  verify(mergeProps, 'mergeProps', displayName);
}

/***/ }),

/***/ "./node_modules/react-redux/es/connect/wrapMapToProps.js":
/*!***************************************************************!*\
  !*** ./node_modules/react-redux/es/connect/wrapMapToProps.js ***!
  \***************************************************************/
/*! exports provided: wrapMapToPropsConstant, getDependsOnOwnProps, wrapMapToPropsFunc */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "wrapMapToPropsConstant", function() { return wrapMapToPropsConstant; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getDependsOnOwnProps", function() { return getDependsOnOwnProps; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "wrapMapToPropsFunc", function() { return wrapMapToPropsFunc; });
/* harmony import */ var _utils_verifyPlainObject__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils/verifyPlainObject */ "./node_modules/react-redux/es/utils/verifyPlainObject.js");

function wrapMapToPropsConstant(getConstant) {
  return function initConstantSelector(dispatch, options) {
    var constant = getConstant(dispatch, options);

    function constantSelector() {
      return constant;
    }

    constantSelector.dependsOnOwnProps = false;
    return constantSelector;
  };
} // dependsOnOwnProps is used by createMapToPropsProxy to determine whether to pass props as args
// to the mapToProps function being wrapped. It is also used by makePurePropsSelector to determine
// whether mapToProps needs to be invoked when props have changed.
//
// A length of one signals that mapToProps does not depend on props from the parent component.
// A length of zero is assumed to mean mapToProps is getting args via arguments or ...args and
// therefore not reporting its length accurately..

function getDependsOnOwnProps(mapToProps) {
  return mapToProps.dependsOnOwnProps !== null && mapToProps.dependsOnOwnProps !== undefined ? Boolean(mapToProps.dependsOnOwnProps) : mapToProps.length !== 1;
} // Used by whenMapStateToPropsIsFunction and whenMapDispatchToPropsIsFunction,
// this function wraps mapToProps in a proxy function which does several things:
//
//  * Detects whether the mapToProps function being called depends on props, which
//    is used by selectorFactory to decide if it should reinvoke on props changes.
//
//  * On first call, handles mapToProps if returns another function, and treats that
//    new function as the true mapToProps for subsequent calls.
//
//  * On first call, verifies the first result is a plain object, in order to warn
//    the developer that their mapToProps function is not returning a valid result.
//

function wrapMapToPropsFunc(mapToProps, methodName) {
  return function initProxySelector(dispatch, _ref) {
    var displayName = _ref.displayName;

    var proxy = function mapToPropsProxy(stateOrDispatch, ownProps) {
      return proxy.dependsOnOwnProps ? proxy.mapToProps(stateOrDispatch, ownProps) : proxy.mapToProps(stateOrDispatch);
    }; // allow detectFactoryAndVerify to get ownProps


    proxy.dependsOnOwnProps = true;

    proxy.mapToProps = function detectFactoryAndVerify(stateOrDispatch, ownProps) {
      proxy.mapToProps = mapToProps;
      proxy.dependsOnOwnProps = getDependsOnOwnProps(mapToProps);
      var props = proxy(stateOrDispatch, ownProps);

      if (typeof props === 'function') {
        proxy.mapToProps = props;
        proxy.dependsOnOwnProps = getDependsOnOwnProps(props);
        props = proxy(stateOrDispatch, ownProps);
      }

      if (true) Object(_utils_verifyPlainObject__WEBPACK_IMPORTED_MODULE_0__["default"])(props, displayName, methodName);
      return props;
    };

    return proxy;
  };
}

/***/ }),

/***/ "./node_modules/react-redux/es/hooks/useDispatch.js":
/*!**********************************************************!*\
  !*** ./node_modules/react-redux/es/hooks/useDispatch.js ***!
  \**********************************************************/
/*! exports provided: createDispatchHook, useDispatch */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createDispatchHook", function() { return createDispatchHook; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "useDispatch", function() { return useDispatch; });
/* harmony import */ var _components_Context__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../components/Context */ "./node_modules/react-redux/es/components/Context.js");
/* harmony import */ var _useStore__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./useStore */ "./node_modules/react-redux/es/hooks/useStore.js");


/**
 * Hook factory, which creates a `useDispatch` hook bound to a given context.
 *
 * @param {React.Context} [context=ReactReduxContext] Context passed to your `<Provider>`.
 * @returns {Function} A `useDispatch` hook bound to the specified context.
 */

function createDispatchHook(context) {
  if (context === void 0) {
    context = _components_Context__WEBPACK_IMPORTED_MODULE_0__["ReactReduxContext"];
  }

  var useStore = context === _components_Context__WEBPACK_IMPORTED_MODULE_0__["ReactReduxContext"] ? _useStore__WEBPACK_IMPORTED_MODULE_1__["useStore"] : Object(_useStore__WEBPACK_IMPORTED_MODULE_1__["createStoreHook"])(context);
  return function useDispatch() {
    var store = useStore();
    return store.dispatch;
  };
}
/**
 * A hook to access the redux `dispatch` function.
 *
 * @returns {any|function} redux store's `dispatch` function
 *
 * @example
 *
 * import React, { useCallback } from 'react'
 * import { useDispatch } from 'react-redux'
 *
 * export const CounterComponent = ({ value }) => {
 *   const dispatch = useDispatch()
 *   const increaseCounter = useCallback(() => dispatch({ type: 'increase-counter' }), [])
 *   return (
 *     <div>
 *       <span>{value}</span>
 *       <button onClick={increaseCounter}>Increase counter</button>
 *     </div>
 *   )
 * }
 */

var useDispatch =
/*#__PURE__*/
createDispatchHook();

/***/ }),

/***/ "./node_modules/react-redux/es/hooks/useReduxContext.js":
/*!**************************************************************!*\
  !*** ./node_modules/react-redux/es/hooks/useReduxContext.js ***!
  \**************************************************************/
/*! exports provided: useReduxContext */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "useReduxContext", function() { return useReduxContext; });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _components_Context__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../components/Context */ "./node_modules/react-redux/es/components/Context.js");


/**
 * A hook to access the value of the `ReactReduxContext`. This is a low-level
 * hook that you should usually not need to call directly.
 *
 * @returns {any} the value of the `ReactReduxContext`
 *
 * @example
 *
 * import React from 'react'
 * import { useReduxContext } from 'react-redux'
 *
 * export const CounterComponent = ({ value }) => {
 *   const { store } = useReduxContext()
 *   return <div>{store.getState()}</div>
 * }
 */

function useReduxContext() {
  var contextValue = Object(react__WEBPACK_IMPORTED_MODULE_0__["useContext"])(_components_Context__WEBPACK_IMPORTED_MODULE_1__["ReactReduxContext"]);

  if ( true && !contextValue) {
    throw new Error('could not find react-redux context value; please ensure the component is wrapped in a <Provider>');
  }

  return contextValue;
}

/***/ }),

/***/ "./node_modules/react-redux/es/hooks/useSelector.js":
/*!**********************************************************!*\
  !*** ./node_modules/react-redux/es/hooks/useSelector.js ***!
  \**********************************************************/
/*! exports provided: createSelectorHook, useSelector */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createSelectorHook", function() { return createSelectorHook; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "useSelector", function() { return useSelector; });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _useReduxContext__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./useReduxContext */ "./node_modules/react-redux/es/hooks/useReduxContext.js");
/* harmony import */ var _utils_Subscription__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../utils/Subscription */ "./node_modules/react-redux/es/utils/Subscription.js");
/* harmony import */ var _utils_useIsomorphicLayoutEffect__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../utils/useIsomorphicLayoutEffect */ "./node_modules/react-redux/es/utils/useIsomorphicLayoutEffect.js");
/* harmony import */ var _components_Context__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../components/Context */ "./node_modules/react-redux/es/components/Context.js");






var refEquality = function refEquality(a, b) {
  return a === b;
};

function useSelectorWithStoreAndSubscription(selector, equalityFn, store, contextSub) {
  var _useReducer = Object(react__WEBPACK_IMPORTED_MODULE_0__["useReducer"])(function (s) {
    return s + 1;
  }, 0),
      forceRender = _useReducer[1];

  var subscription = Object(react__WEBPACK_IMPORTED_MODULE_0__["useMemo"])(function () {
    return new _utils_Subscription__WEBPACK_IMPORTED_MODULE_2__["default"](store, contextSub);
  }, [store, contextSub]);
  var latestSubscriptionCallbackError = Object(react__WEBPACK_IMPORTED_MODULE_0__["useRef"])();
  var latestSelector = Object(react__WEBPACK_IMPORTED_MODULE_0__["useRef"])();
  var latestSelectedState = Object(react__WEBPACK_IMPORTED_MODULE_0__["useRef"])();
  var selectedState;

  try {
    if (selector !== latestSelector.current || latestSubscriptionCallbackError.current) {
      selectedState = selector(store.getState());
    } else {
      selectedState = latestSelectedState.current;
    }
  } catch (err) {
    if (latestSubscriptionCallbackError.current) {
      err.message += "\nThe error may be correlated with this previous error:\n" + latestSubscriptionCallbackError.current.stack + "\n\n";
    }

    throw err;
  }

  Object(_utils_useIsomorphicLayoutEffect__WEBPACK_IMPORTED_MODULE_3__["useIsomorphicLayoutEffect"])(function () {
    latestSelector.current = selector;
    latestSelectedState.current = selectedState;
    latestSubscriptionCallbackError.current = undefined;
  });
  Object(_utils_useIsomorphicLayoutEffect__WEBPACK_IMPORTED_MODULE_3__["useIsomorphicLayoutEffect"])(function () {
    function checkForUpdates() {
      try {
        var newSelectedState = latestSelector.current(store.getState());

        if (equalityFn(newSelectedState, latestSelectedState.current)) {
          return;
        }

        latestSelectedState.current = newSelectedState;
      } catch (err) {
        // we ignore all errors here, since when the component
        // is re-rendered, the selectors are called again, and
        // will throw again, if neither props nor store state
        // changed
        latestSubscriptionCallbackError.current = err;
      }

      forceRender({});
    }

    subscription.onStateChange = checkForUpdates;
    subscription.trySubscribe();
    checkForUpdates();
    return function () {
      return subscription.tryUnsubscribe();
    };
  }, [store, subscription]);
  return selectedState;
}
/**
 * Hook factory, which creates a `useSelector` hook bound to a given context.
 *
 * @param {React.Context} [context=ReactReduxContext] Context passed to your `<Provider>`.
 * @returns {Function} A `useSelector` hook bound to the specified context.
 */


function createSelectorHook(context) {
  if (context === void 0) {
    context = _components_Context__WEBPACK_IMPORTED_MODULE_4__["ReactReduxContext"];
  }

  var useReduxContext = context === _components_Context__WEBPACK_IMPORTED_MODULE_4__["ReactReduxContext"] ? _useReduxContext__WEBPACK_IMPORTED_MODULE_1__["useReduxContext"] : function () {
    return Object(react__WEBPACK_IMPORTED_MODULE_0__["useContext"])(context);
  };
  return function useSelector(selector, equalityFn) {
    if (equalityFn === void 0) {
      equalityFn = refEquality;
    }

    if ( true && !selector) {
      throw new Error("You must pass a selector to useSelectors");
    }

    var _useReduxContext = useReduxContext(),
        store = _useReduxContext.store,
        contextSub = _useReduxContext.subscription;

    return useSelectorWithStoreAndSubscription(selector, equalityFn, store, contextSub);
  };
}
/**
 * A hook to access the redux store's state. This hook takes a selector function
 * as an argument. The selector is called with the store state.
 *
 * This hook takes an optional equality comparison function as the second parameter
 * that allows you to customize the way the selected state is compared to determine
 * whether the component needs to be re-rendered.
 *
 * @param {Function} selector the selector function
 * @param {Function=} equalityFn the function that will be used to determine equality
 *
 * @returns {any} the selected state
 *
 * @example
 *
 * import React from 'react'
 * import { useSelector } from 'react-redux'
 *
 * export const CounterComponent = () => {
 *   const counter = useSelector(state => state.counter)
 *   return <div>{counter}</div>
 * }
 */

var useSelector =
/*#__PURE__*/
createSelectorHook();

/***/ }),

/***/ "./node_modules/react-redux/es/hooks/useStore.js":
/*!*******************************************************!*\
  !*** ./node_modules/react-redux/es/hooks/useStore.js ***!
  \*******************************************************/
/*! exports provided: createStoreHook, useStore */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createStoreHook", function() { return createStoreHook; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "useStore", function() { return useStore; });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _components_Context__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../components/Context */ "./node_modules/react-redux/es/components/Context.js");
/* harmony import */ var _useReduxContext__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./useReduxContext */ "./node_modules/react-redux/es/hooks/useReduxContext.js");



/**
 * Hook factory, which creates a `useStore` hook bound to a given context.
 *
 * @param {React.Context} [context=ReactReduxContext] Context passed to your `<Provider>`.
 * @returns {Function} A `useStore` hook bound to the specified context.
 */

function createStoreHook(context) {
  if (context === void 0) {
    context = _components_Context__WEBPACK_IMPORTED_MODULE_1__["ReactReduxContext"];
  }

  var useReduxContext = context === _components_Context__WEBPACK_IMPORTED_MODULE_1__["ReactReduxContext"] ? _useReduxContext__WEBPACK_IMPORTED_MODULE_2__["useReduxContext"] : function () {
    return Object(react__WEBPACK_IMPORTED_MODULE_0__["useContext"])(context);
  };
  return function useStore() {
    var _useReduxContext = useReduxContext(),
        store = _useReduxContext.store;

    return store;
  };
}
/**
 * A hook to access the redux store.
 *
 * @returns {any} the redux store
 *
 * @example
 *
 * import React from 'react'
 * import { useStore } from 'react-redux'
 *
 * export const ExampleComponent = () => {
 *   const store = useStore()
 *   return <div>{store.getState()}</div>
 * }
 */

var useStore =
/*#__PURE__*/
createStoreHook();

/***/ }),

/***/ "./node_modules/react-redux/es/index.js":
/*!**********************************************!*\
  !*** ./node_modules/react-redux/es/index.js ***!
  \**********************************************/
/*! exports provided: Provider, connectAdvanced, ReactReduxContext, connect, batch, useDispatch, createDispatchHook, useSelector, createSelectorHook, useStore, createStoreHook, shallowEqual */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _components_Provider__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./components/Provider */ "./node_modules/react-redux/es/components/Provider.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Provider", function() { return _components_Provider__WEBPACK_IMPORTED_MODULE_0__["default"]; });

/* harmony import */ var _components_connectAdvanced__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./components/connectAdvanced */ "./node_modules/react-redux/es/components/connectAdvanced.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "connectAdvanced", function() { return _components_connectAdvanced__WEBPACK_IMPORTED_MODULE_1__["default"]; });

/* harmony import */ var _components_Context__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./components/Context */ "./node_modules/react-redux/es/components/Context.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ReactReduxContext", function() { return _components_Context__WEBPACK_IMPORTED_MODULE_2__["ReactReduxContext"]; });

/* harmony import */ var _connect_connect__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./connect/connect */ "./node_modules/react-redux/es/connect/connect.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "connect", function() { return _connect_connect__WEBPACK_IMPORTED_MODULE_3__["default"]; });

/* harmony import */ var _hooks_useDispatch__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./hooks/useDispatch */ "./node_modules/react-redux/es/hooks/useDispatch.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "useDispatch", function() { return _hooks_useDispatch__WEBPACK_IMPORTED_MODULE_4__["useDispatch"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createDispatchHook", function() { return _hooks_useDispatch__WEBPACK_IMPORTED_MODULE_4__["createDispatchHook"]; });

/* harmony import */ var _hooks_useSelector__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./hooks/useSelector */ "./node_modules/react-redux/es/hooks/useSelector.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "useSelector", function() { return _hooks_useSelector__WEBPACK_IMPORTED_MODULE_5__["useSelector"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createSelectorHook", function() { return _hooks_useSelector__WEBPACK_IMPORTED_MODULE_5__["createSelectorHook"]; });

/* harmony import */ var _hooks_useStore__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./hooks/useStore */ "./node_modules/react-redux/es/hooks/useStore.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "useStore", function() { return _hooks_useStore__WEBPACK_IMPORTED_MODULE_6__["useStore"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createStoreHook", function() { return _hooks_useStore__WEBPACK_IMPORTED_MODULE_6__["createStoreHook"]; });

/* harmony import */ var _utils_batch__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./utils/batch */ "./node_modules/react-redux/es/utils/batch.js");
/* harmony import */ var _utils_reactBatchedUpdates__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./utils/reactBatchedUpdates */ "./node_modules/react-redux/es/utils/reactBatchedUpdates.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "batch", function() { return _utils_reactBatchedUpdates__WEBPACK_IMPORTED_MODULE_8__["unstable_batchedUpdates"]; });

/* harmony import */ var _utils_shallowEqual__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./utils/shallowEqual */ "./node_modules/react-redux/es/utils/shallowEqual.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "shallowEqual", function() { return _utils_shallowEqual__WEBPACK_IMPORTED_MODULE_9__["default"]; });











Object(_utils_batch__WEBPACK_IMPORTED_MODULE_7__["setBatch"])(_utils_reactBatchedUpdates__WEBPACK_IMPORTED_MODULE_8__["unstable_batchedUpdates"]);


/***/ }),

/***/ "./node_modules/react-redux/es/utils/Subscription.js":
/*!***********************************************************!*\
  !*** ./node_modules/react-redux/es/utils/Subscription.js ***!
  \***********************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return Subscription; });
/* harmony import */ var _batch__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./batch */ "./node_modules/react-redux/es/utils/batch.js");
 // encapsulates the subscription logic for connecting a component to the redux store, as
// well as nesting subscriptions of descendant components, so that we can ensure the
// ancestor components re-render before descendants

var nullListeners = {
  notify: function notify() {}
};

function createListenerCollection() {
  var batch = Object(_batch__WEBPACK_IMPORTED_MODULE_0__["getBatch"])();
  var first = null;
  var last = null;
  return {
    clear: function clear() {
      first = null;
      last = null;
    },
    notify: function notify() {
      batch(function () {
        var listener = first;

        while (listener) {
          listener.callback();
          listener = listener.next;
        }
      });
    },
    get: function get() {
      var listeners = [];
      var listener = first;

      while (listener) {
        listeners.push(listener);
        listener = listener.next;
      }

      return listeners;
    },
    subscribe: function subscribe(callback) {
      var isSubscribed = true;
      var listener = last = {
        callback: callback,
        next: null,
        prev: last
      };

      if (listener.prev) {
        listener.prev.next = listener;
      } else {
        first = listener;
      }

      return function unsubscribe() {
        if (!isSubscribed || first === null) return;
        isSubscribed = false;

        if (listener.next) {
          listener.next.prev = listener.prev;
        } else {
          last = listener.prev;
        }

        if (listener.prev) {
          listener.prev.next = listener.next;
        } else {
          first = listener.next;
        }
      };
    }
  };
}

var Subscription =
/*#__PURE__*/
function () {
  function Subscription(store, parentSub) {
    this.store = store;
    this.parentSub = parentSub;
    this.unsubscribe = null;
    this.listeners = nullListeners;
    this.handleChangeWrapper = this.handleChangeWrapper.bind(this);
  }

  var _proto = Subscription.prototype;

  _proto.addNestedSub = function addNestedSub(listener) {
    this.trySubscribe();
    return this.listeners.subscribe(listener);
  };

  _proto.notifyNestedSubs = function notifyNestedSubs() {
    this.listeners.notify();
  };

  _proto.handleChangeWrapper = function handleChangeWrapper() {
    if (this.onStateChange) {
      this.onStateChange();
    }
  };

  _proto.isSubscribed = function isSubscribed() {
    return Boolean(this.unsubscribe);
  };

  _proto.trySubscribe = function trySubscribe() {
    if (!this.unsubscribe) {
      this.unsubscribe = this.parentSub ? this.parentSub.addNestedSub(this.handleChangeWrapper) : this.store.subscribe(this.handleChangeWrapper);
      this.listeners = createListenerCollection();
    }
  };

  _proto.tryUnsubscribe = function tryUnsubscribe() {
    if (this.unsubscribe) {
      this.unsubscribe();
      this.unsubscribe = null;
      this.listeners.clear();
      this.listeners = nullListeners;
    }
  };

  return Subscription;
}();



/***/ }),

/***/ "./node_modules/react-redux/es/utils/batch.js":
/*!****************************************************!*\
  !*** ./node_modules/react-redux/es/utils/batch.js ***!
  \****************************************************/
/*! exports provided: setBatch, getBatch */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "setBatch", function() { return setBatch; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getBatch", function() { return getBatch; });
// Default to a dummy "batch" implementation that just runs the callback
function defaultNoopBatch(callback) {
  callback();
}

var batch = defaultNoopBatch; // Allow injecting another batching function later

var setBatch = function setBatch(newBatch) {
  return batch = newBatch;
}; // Supply a getter just to skip dealing with ESM bindings

var getBatch = function getBatch() {
  return batch;
};

/***/ }),

/***/ "./node_modules/react-redux/es/utils/isPlainObject.js":
/*!************************************************************!*\
  !*** ./node_modules/react-redux/es/utils/isPlainObject.js ***!
  \************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return isPlainObject; });
/**
 * @param {any} obj The object to inspect.
 * @returns {boolean} True if the argument appears to be a plain object.
 */
function isPlainObject(obj) {
  if (typeof obj !== 'object' || obj === null) return false;
  var proto = Object.getPrototypeOf(obj);
  if (proto === null) return true;
  var baseProto = proto;

  while (Object.getPrototypeOf(baseProto) !== null) {
    baseProto = Object.getPrototypeOf(baseProto);
  }

  return proto === baseProto;
}

/***/ }),

/***/ "./node_modules/react-redux/es/utils/reactBatchedUpdates.js":
/*!******************************************************************!*\
  !*** ./node_modules/react-redux/es/utils/reactBatchedUpdates.js ***!
  \******************************************************************/
/*! exports provided: unstable_batchedUpdates */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var react_dom__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react-dom */ "./node_modules/react-dom/index.js");
/* harmony import */ var react_dom__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_dom__WEBPACK_IMPORTED_MODULE_0__);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "unstable_batchedUpdates", function() { return react_dom__WEBPACK_IMPORTED_MODULE_0__["unstable_batchedUpdates"]; });

/* eslint-disable import/no-unresolved */


/***/ }),

/***/ "./node_modules/react-redux/es/utils/shallowEqual.js":
/*!***********************************************************!*\
  !*** ./node_modules/react-redux/es/utils/shallowEqual.js ***!
  \***********************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return shallowEqual; });
function is(x, y) {
  if (x === y) {
    return x !== 0 || y !== 0 || 1 / x === 1 / y;
  } else {
    return x !== x && y !== y;
  }
}

function shallowEqual(objA, objB) {
  if (is(objA, objB)) return true;

  if (typeof objA !== 'object' || objA === null || typeof objB !== 'object' || objB === null) {
    return false;
  }

  var keysA = Object.keys(objA);
  var keysB = Object.keys(objB);
  if (keysA.length !== keysB.length) return false;

  for (var i = 0; i < keysA.length; i++) {
    if (!Object.prototype.hasOwnProperty.call(objB, keysA[i]) || !is(objA[keysA[i]], objB[keysA[i]])) {
      return false;
    }
  }

  return true;
}

/***/ }),

/***/ "./node_modules/react-redux/es/utils/useIsomorphicLayoutEffect.js":
/*!************************************************************************!*\
  !*** ./node_modules/react-redux/es/utils/useIsomorphicLayoutEffect.js ***!
  \************************************************************************/
/*! exports provided: useIsomorphicLayoutEffect */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "useIsomorphicLayoutEffect", function() { return useIsomorphicLayoutEffect; });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
 // React currently throws a warning when using useLayoutEffect on the server.
// To get around it, we can conditionally useEffect on the server (no-op) and
// useLayoutEffect in the browser. We need useLayoutEffect to ensure the store
// subscription callback always has the selector from the latest render commit
// available, otherwise a store update may happen between render and the effect,
// which may cause missed updates; we also must ensure the store subscription
// is created synchronously, otherwise a store update may occur before the
// subscription is created and an inconsistent state may be observed

var useIsomorphicLayoutEffect = typeof window !== 'undefined' && typeof window.document !== 'undefined' && typeof window.document.createElement !== 'undefined' ? react__WEBPACK_IMPORTED_MODULE_0__["useLayoutEffect"] : react__WEBPACK_IMPORTED_MODULE_0__["useEffect"];

/***/ }),

/***/ "./node_modules/react-redux/es/utils/verifyPlainObject.js":
/*!****************************************************************!*\
  !*** ./node_modules/react-redux/es/utils/verifyPlainObject.js ***!
  \****************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return verifyPlainObject; });
/* harmony import */ var _isPlainObject__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./isPlainObject */ "./node_modules/react-redux/es/utils/isPlainObject.js");
/* harmony import */ var _warning__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./warning */ "./node_modules/react-redux/es/utils/warning.js");


function verifyPlainObject(value, displayName, methodName) {
  if (!Object(_isPlainObject__WEBPACK_IMPORTED_MODULE_0__["default"])(value)) {
    Object(_warning__WEBPACK_IMPORTED_MODULE_1__["default"])(methodName + "() in " + displayName + " must return a plain object. Instead received " + value + ".");
  }
}

/***/ }),

/***/ "./node_modules/react-redux/es/utils/warning.js":
/*!******************************************************!*\
  !*** ./node_modules/react-redux/es/utils/warning.js ***!
  \******************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return warning; });
/**
 * Prints a warning in the console if it exists.
 *
 * @param {String} message The warning message.
 * @returns {void}
 */
function warning(message) {
  /* eslint-disable no-console */
  if (typeof console !== 'undefined' && typeof console.error === 'function') {
    console.error(message);
  }
  /* eslint-enable no-console */


  try {
    // This error was thrown as a convenience so that if you enable
    // "break on all exceptions" in your console,
    // it would pause the execution at this line.
    throw new Error(message);
    /* eslint-disable no-empty */
  } catch (e) {}
  /* eslint-enable no-empty */

}

/***/ }),

/***/ "./node_modules/react-redux/node_modules/react-is/cjs/react-is.development.js":
/*!************************************************************************************!*\
  !*** ./node_modules/react-redux/node_modules/react-is/cjs/react-is.development.js ***!
  \************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/** @license React v16.13.1
 * react-is.development.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */





if (true) {
  (function() {
'use strict';

// The Symbol used to tag the ReactElement-like types. If there is no native Symbol
// nor polyfill, then a plain number is used for performance.
var hasSymbol = typeof Symbol === 'function' && Symbol.for;
var REACT_ELEMENT_TYPE = hasSymbol ? Symbol.for('react.element') : 0xeac7;
var REACT_PORTAL_TYPE = hasSymbol ? Symbol.for('react.portal') : 0xeaca;
var REACT_FRAGMENT_TYPE = hasSymbol ? Symbol.for('react.fragment') : 0xeacb;
var REACT_STRICT_MODE_TYPE = hasSymbol ? Symbol.for('react.strict_mode') : 0xeacc;
var REACT_PROFILER_TYPE = hasSymbol ? Symbol.for('react.profiler') : 0xead2;
var REACT_PROVIDER_TYPE = hasSymbol ? Symbol.for('react.provider') : 0xeacd;
var REACT_CONTEXT_TYPE = hasSymbol ? Symbol.for('react.context') : 0xeace; // TODO: We don't use AsyncMode or ConcurrentMode anymore. They were temporary
// (unstable) APIs that have been removed. Can we remove the symbols?

var REACT_ASYNC_MODE_TYPE = hasSymbol ? Symbol.for('react.async_mode') : 0xeacf;
var REACT_CONCURRENT_MODE_TYPE = hasSymbol ? Symbol.for('react.concurrent_mode') : 0xeacf;
var REACT_FORWARD_REF_TYPE = hasSymbol ? Symbol.for('react.forward_ref') : 0xead0;
var REACT_SUSPENSE_TYPE = hasSymbol ? Symbol.for('react.suspense') : 0xead1;
var REACT_SUSPENSE_LIST_TYPE = hasSymbol ? Symbol.for('react.suspense_list') : 0xead8;
var REACT_MEMO_TYPE = hasSymbol ? Symbol.for('react.memo') : 0xead3;
var REACT_LAZY_TYPE = hasSymbol ? Symbol.for('react.lazy') : 0xead4;
var REACT_BLOCK_TYPE = hasSymbol ? Symbol.for('react.block') : 0xead9;
var REACT_FUNDAMENTAL_TYPE = hasSymbol ? Symbol.for('react.fundamental') : 0xead5;
var REACT_RESPONDER_TYPE = hasSymbol ? Symbol.for('react.responder') : 0xead6;
var REACT_SCOPE_TYPE = hasSymbol ? Symbol.for('react.scope') : 0xead7;

function isValidElementType(type) {
  return typeof type === 'string' || typeof type === 'function' || // Note: its typeof might be other than 'symbol' or 'number' if it's a polyfill.
  type === REACT_FRAGMENT_TYPE || type === REACT_CONCURRENT_MODE_TYPE || type === REACT_PROFILER_TYPE || type === REACT_STRICT_MODE_TYPE || type === REACT_SUSPENSE_TYPE || type === REACT_SUSPENSE_LIST_TYPE || typeof type === 'object' && type !== null && (type.$$typeof === REACT_LAZY_TYPE || type.$$typeof === REACT_MEMO_TYPE || type.$$typeof === REACT_PROVIDER_TYPE || type.$$typeof === REACT_CONTEXT_TYPE || type.$$typeof === REACT_FORWARD_REF_TYPE || type.$$typeof === REACT_FUNDAMENTAL_TYPE || type.$$typeof === REACT_RESPONDER_TYPE || type.$$typeof === REACT_SCOPE_TYPE || type.$$typeof === REACT_BLOCK_TYPE);
}

function typeOf(object) {
  if (typeof object === 'object' && object !== null) {
    var $$typeof = object.$$typeof;

    switch ($$typeof) {
      case REACT_ELEMENT_TYPE:
        var type = object.type;

        switch (type) {
          case REACT_ASYNC_MODE_TYPE:
          case REACT_CONCURRENT_MODE_TYPE:
          case REACT_FRAGMENT_TYPE:
          case REACT_PROFILER_TYPE:
          case REACT_STRICT_MODE_TYPE:
          case REACT_SUSPENSE_TYPE:
            return type;

          default:
            var $$typeofType = type && type.$$typeof;

            switch ($$typeofType) {
              case REACT_CONTEXT_TYPE:
              case REACT_FORWARD_REF_TYPE:
              case REACT_LAZY_TYPE:
              case REACT_MEMO_TYPE:
              case REACT_PROVIDER_TYPE:
                return $$typeofType;

              default:
                return $$typeof;
            }

        }

      case REACT_PORTAL_TYPE:
        return $$typeof;
    }
  }

  return undefined;
} // AsyncMode is deprecated along with isAsyncMode

var AsyncMode = REACT_ASYNC_MODE_TYPE;
var ConcurrentMode = REACT_CONCURRENT_MODE_TYPE;
var ContextConsumer = REACT_CONTEXT_TYPE;
var ContextProvider = REACT_PROVIDER_TYPE;
var Element = REACT_ELEMENT_TYPE;
var ForwardRef = REACT_FORWARD_REF_TYPE;
var Fragment = REACT_FRAGMENT_TYPE;
var Lazy = REACT_LAZY_TYPE;
var Memo = REACT_MEMO_TYPE;
var Portal = REACT_PORTAL_TYPE;
var Profiler = REACT_PROFILER_TYPE;
var StrictMode = REACT_STRICT_MODE_TYPE;
var Suspense = REACT_SUSPENSE_TYPE;
var hasWarnedAboutDeprecatedIsAsyncMode = false; // AsyncMode should be deprecated

function isAsyncMode(object) {
  {
    if (!hasWarnedAboutDeprecatedIsAsyncMode) {
      hasWarnedAboutDeprecatedIsAsyncMode = true; // Using console['warn'] to evade Babel and ESLint

      console['warn']('The ReactIs.isAsyncMode() alias has been deprecated, ' + 'and will be removed in React 17+. Update your code to use ' + 'ReactIs.isConcurrentMode() instead. It has the exact same API.');
    }
  }

  return isConcurrentMode(object) || typeOf(object) === REACT_ASYNC_MODE_TYPE;
}
function isConcurrentMode(object) {
  return typeOf(object) === REACT_CONCURRENT_MODE_TYPE;
}
function isContextConsumer(object) {
  return typeOf(object) === REACT_CONTEXT_TYPE;
}
function isContextProvider(object) {
  return typeOf(object) === REACT_PROVIDER_TYPE;
}
function isElement(object) {
  return typeof object === 'object' && object !== null && object.$$typeof === REACT_ELEMENT_TYPE;
}
function isForwardRef(object) {
  return typeOf(object) === REACT_FORWARD_REF_TYPE;
}
function isFragment(object) {
  return typeOf(object) === REACT_FRAGMENT_TYPE;
}
function isLazy(object) {
  return typeOf(object) === REACT_LAZY_TYPE;
}
function isMemo(object) {
  return typeOf(object) === REACT_MEMO_TYPE;
}
function isPortal(object) {
  return typeOf(object) === REACT_PORTAL_TYPE;
}
function isProfiler(object) {
  return typeOf(object) === REACT_PROFILER_TYPE;
}
function isStrictMode(object) {
  return typeOf(object) === REACT_STRICT_MODE_TYPE;
}
function isSuspense(object) {
  return typeOf(object) === REACT_SUSPENSE_TYPE;
}

exports.AsyncMode = AsyncMode;
exports.ConcurrentMode = ConcurrentMode;
exports.ContextConsumer = ContextConsumer;
exports.ContextProvider = ContextProvider;
exports.Element = Element;
exports.ForwardRef = ForwardRef;
exports.Fragment = Fragment;
exports.Lazy = Lazy;
exports.Memo = Memo;
exports.Portal = Portal;
exports.Profiler = Profiler;
exports.StrictMode = StrictMode;
exports.Suspense = Suspense;
exports.isAsyncMode = isAsyncMode;
exports.isConcurrentMode = isConcurrentMode;
exports.isContextConsumer = isContextConsumer;
exports.isContextProvider = isContextProvider;
exports.isElement = isElement;
exports.isForwardRef = isForwardRef;
exports.isFragment = isFragment;
exports.isLazy = isLazy;
exports.isMemo = isMemo;
exports.isPortal = isPortal;
exports.isProfiler = isProfiler;
exports.isStrictMode = isStrictMode;
exports.isSuspense = isSuspense;
exports.isValidElementType = isValidElementType;
exports.typeOf = typeOf;
  })();
}


/***/ }),

/***/ "./node_modules/react-redux/node_modules/react-is/index.js":
/*!*****************************************************************!*\
  !*** ./node_modules/react-redux/node_modules/react-is/index.js ***!
  \*****************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


if (false) {} else {
  module.exports = __webpack_require__(/*! ./cjs/react-is.development.js */ "./node_modules/react-redux/node_modules/react-is/cjs/react-is.development.js");
}


/***/ }),

/***/ "./node_modules/react/index.js":
/*!*******************************************************************************************!*\
  !*** delegated ./node_modules/react/index.js from dll-reference dll_2adc2403d89adc16ead0 ***!
  \*******************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

module.exports = (__webpack_require__(/*! dll-reference dll_2adc2403d89adc16ead0 */ "dll-reference dll_2adc2403d89adc16ead0"))("./node_modules/react/index.js");

/***/ }),

/***/ "./node_modules/redux/es/redux.js":
/*!****************************************!*\
  !*** ./node_modules/redux/es/redux.js ***!
  \****************************************/
/*! exports provided: __DO_NOT_USE__ActionTypes, applyMiddleware, bindActionCreators, combineReducers, compose, createStore */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "__DO_NOT_USE__ActionTypes", function() { return ActionTypes; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "applyMiddleware", function() { return applyMiddleware; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "bindActionCreators", function() { return bindActionCreators; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "combineReducers", function() { return combineReducers; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "compose", function() { return compose; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createStore", function() { return createStore; });
/* harmony import */ var symbol_observable__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! symbol-observable */ "./node_modules/symbol-observable/es/index.js");


/**
 * These are private action types reserved by Redux.
 * For any unknown actions, you must return the current state.
 * If the current state is undefined, you must return the initial state.
 * Do not reference these action types directly in your code.
 */
var randomString = function randomString() {
  return Math.random().toString(36).substring(7).split('').join('.');
};

var ActionTypes = {
  INIT: "@@redux/INIT" + randomString(),
  REPLACE: "@@redux/REPLACE" + randomString(),
  PROBE_UNKNOWN_ACTION: function PROBE_UNKNOWN_ACTION() {
    return "@@redux/PROBE_UNKNOWN_ACTION" + randomString();
  }
};

/**
 * @param {any} obj The object to inspect.
 * @returns {boolean} True if the argument appears to be a plain object.
 */
function isPlainObject(obj) {
  if (typeof obj !== 'object' || obj === null) return false;
  var proto = obj;

  while (Object.getPrototypeOf(proto) !== null) {
    proto = Object.getPrototypeOf(proto);
  }

  return Object.getPrototypeOf(obj) === proto;
}

/**
 * Creates a Redux store that holds the state tree.
 * The only way to change the data in the store is to call `dispatch()` on it.
 *
 * There should only be a single store in your app. To specify how different
 * parts of the state tree respond to actions, you may combine several reducers
 * into a single reducer function by using `combineReducers`.
 *
 * @param {Function} reducer A function that returns the next state tree, given
 * the current state tree and the action to handle.
 *
 * @param {any} [preloadedState] The initial state. You may optionally specify it
 * to hydrate the state from the server in universal apps, or to restore a
 * previously serialized user session.
 * If you use `combineReducers` to produce the root reducer function, this must be
 * an object with the same shape as `combineReducers` keys.
 *
 * @param {Function} [enhancer] The store enhancer. You may optionally specify it
 * to enhance the store with third-party capabilities such as middleware,
 * time travel, persistence, etc. The only store enhancer that ships with Redux
 * is `applyMiddleware()`.
 *
 * @returns {Store} A Redux store that lets you read the state, dispatch actions
 * and subscribe to changes.
 */

function createStore(reducer, preloadedState, enhancer) {
  var _ref2;

  if (typeof preloadedState === 'function' && typeof enhancer === 'function' || typeof enhancer === 'function' && typeof arguments[3] === 'function') {
    throw new Error('It looks like you are passing several store enhancers to ' + 'createStore(). This is not supported. Instead, compose them ' + 'together to a single function.');
  }

  if (typeof preloadedState === 'function' && typeof enhancer === 'undefined') {
    enhancer = preloadedState;
    preloadedState = undefined;
  }

  if (typeof enhancer !== 'undefined') {
    if (typeof enhancer !== 'function') {
      throw new Error('Expected the enhancer to be a function.');
    }

    return enhancer(createStore)(reducer, preloadedState);
  }

  if (typeof reducer !== 'function') {
    throw new Error('Expected the reducer to be a function.');
  }

  var currentReducer = reducer;
  var currentState = preloadedState;
  var currentListeners = [];
  var nextListeners = currentListeners;
  var isDispatching = false;
  /**
   * This makes a shallow copy of currentListeners so we can use
   * nextListeners as a temporary list while dispatching.
   *
   * This prevents any bugs around consumers calling
   * subscribe/unsubscribe in the middle of a dispatch.
   */

  function ensureCanMutateNextListeners() {
    if (nextListeners === currentListeners) {
      nextListeners = currentListeners.slice();
    }
  }
  /**
   * Reads the state tree managed by the store.
   *
   * @returns {any} The current state tree of your application.
   */


  function getState() {
    if (isDispatching) {
      throw new Error('You may not call store.getState() while the reducer is executing. ' + 'The reducer has already received the state as an argument. ' + 'Pass it down from the top reducer instead of reading it from the store.');
    }

    return currentState;
  }
  /**
   * Adds a change listener. It will be called any time an action is dispatched,
   * and some part of the state tree may potentially have changed. You may then
   * call `getState()` to read the current state tree inside the callback.
   *
   * You may call `dispatch()` from a change listener, with the following
   * caveats:
   *
   * 1. The subscriptions are snapshotted just before every `dispatch()` call.
   * If you subscribe or unsubscribe while the listeners are being invoked, this
   * will not have any effect on the `dispatch()` that is currently in progress.
   * However, the next `dispatch()` call, whether nested or not, will use a more
   * recent snapshot of the subscription list.
   *
   * 2. The listener should not expect to see all state changes, as the state
   * might have been updated multiple times during a nested `dispatch()` before
   * the listener is called. It is, however, guaranteed that all subscribers
   * registered before the `dispatch()` started will be called with the latest
   * state by the time it exits.
   *
   * @param {Function} listener A callback to be invoked on every dispatch.
   * @returns {Function} A function to remove this change listener.
   */


  function subscribe(listener) {
    if (typeof listener !== 'function') {
      throw new Error('Expected the listener to be a function.');
    }

    if (isDispatching) {
      throw new Error('You may not call store.subscribe() while the reducer is executing. ' + 'If you would like to be notified after the store has been updated, subscribe from a ' + 'component and invoke store.getState() in the callback to access the latest state. ' + 'See https://redux.js.org/api-reference/store#subscribelistener for more details.');
    }

    var isSubscribed = true;
    ensureCanMutateNextListeners();
    nextListeners.push(listener);
    return function unsubscribe() {
      if (!isSubscribed) {
        return;
      }

      if (isDispatching) {
        throw new Error('You may not unsubscribe from a store listener while the reducer is executing. ' + 'See https://redux.js.org/api-reference/store#subscribelistener for more details.');
      }

      isSubscribed = false;
      ensureCanMutateNextListeners();
      var index = nextListeners.indexOf(listener);
      nextListeners.splice(index, 1);
      currentListeners = null;
    };
  }
  /**
   * Dispatches an action. It is the only way to trigger a state change.
   *
   * The `reducer` function, used to create the store, will be called with the
   * current state tree and the given `action`. Its return value will
   * be considered the **next** state of the tree, and the change listeners
   * will be notified.
   *
   * The base implementation only supports plain object actions. If you want to
   * dispatch a Promise, an Observable, a thunk, or something else, you need to
   * wrap your store creating function into the corresponding middleware. For
   * example, see the documentation for the `redux-thunk` package. Even the
   * middleware will eventually dispatch plain object actions using this method.
   *
   * @param {Object} action A plain object representing “what changed”. It is
   * a good idea to keep actions serializable so you can record and replay user
   * sessions, or use the time travelling `redux-devtools`. An action must have
   * a `type` property which may not be `undefined`. It is a good idea to use
   * string constants for action types.
   *
   * @returns {Object} For convenience, the same action object you dispatched.
   *
   * Note that, if you use a custom middleware, it may wrap `dispatch()` to
   * return something else (for example, a Promise you can await).
   */


  function dispatch(action) {
    if (!isPlainObject(action)) {
      throw new Error('Actions must be plain objects. ' + 'Use custom middleware for async actions.');
    }

    if (typeof action.type === 'undefined') {
      throw new Error('Actions may not have an undefined "type" property. ' + 'Have you misspelled a constant?');
    }

    if (isDispatching) {
      throw new Error('Reducers may not dispatch actions.');
    }

    try {
      isDispatching = true;
      currentState = currentReducer(currentState, action);
    } finally {
      isDispatching = false;
    }

    var listeners = currentListeners = nextListeners;

    for (var i = 0; i < listeners.length; i++) {
      var listener = listeners[i];
      listener();
    }

    return action;
  }
  /**
   * Replaces the reducer currently used by the store to calculate the state.
   *
   * You might need this if your app implements code splitting and you want to
   * load some of the reducers dynamically. You might also need this if you
   * implement a hot reloading mechanism for Redux.
   *
   * @param {Function} nextReducer The reducer for the store to use instead.
   * @returns {void}
   */


  function replaceReducer(nextReducer) {
    if (typeof nextReducer !== 'function') {
      throw new Error('Expected the nextReducer to be a function.');
    }

    currentReducer = nextReducer; // This action has a similiar effect to ActionTypes.INIT.
    // Any reducers that existed in both the new and old rootReducer
    // will receive the previous state. This effectively populates
    // the new state tree with any relevant data from the old one.

    dispatch({
      type: ActionTypes.REPLACE
    });
  }
  /**
   * Interoperability point for observable/reactive libraries.
   * @returns {observable} A minimal observable of state changes.
   * For more information, see the observable proposal:
   * https://github.com/tc39/proposal-observable
   */


  function observable() {
    var _ref;

    var outerSubscribe = subscribe;
    return _ref = {
      /**
       * The minimal observable subscription method.
       * @param {Object} observer Any object that can be used as an observer.
       * The observer object should have a `next` method.
       * @returns {subscription} An object with an `unsubscribe` method that can
       * be used to unsubscribe the observable from the store, and prevent further
       * emission of values from the observable.
       */
      subscribe: function subscribe(observer) {
        if (typeof observer !== 'object' || observer === null) {
          throw new TypeError('Expected the observer to be an object.');
        }

        function observeState() {
          if (observer.next) {
            observer.next(getState());
          }
        }

        observeState();
        var unsubscribe = outerSubscribe(observeState);
        return {
          unsubscribe: unsubscribe
        };
      }
    }, _ref[symbol_observable__WEBPACK_IMPORTED_MODULE_0__["default"]] = function () {
      return this;
    }, _ref;
  } // When a store is created, an "INIT" action is dispatched so that every
  // reducer returns their initial state. This effectively populates
  // the initial state tree.


  dispatch({
    type: ActionTypes.INIT
  });
  return _ref2 = {
    dispatch: dispatch,
    subscribe: subscribe,
    getState: getState,
    replaceReducer: replaceReducer
  }, _ref2[symbol_observable__WEBPACK_IMPORTED_MODULE_0__["default"]] = observable, _ref2;
}

/**
 * Prints a warning in the console if it exists.
 *
 * @param {String} message The warning message.
 * @returns {void}
 */
function warning(message) {
  /* eslint-disable no-console */
  if (typeof console !== 'undefined' && typeof console.error === 'function') {
    console.error(message);
  }
  /* eslint-enable no-console */


  try {
    // This error was thrown as a convenience so that if you enable
    // "break on all exceptions" in your console,
    // it would pause the execution at this line.
    throw new Error(message);
  } catch (e) {} // eslint-disable-line no-empty

}

function getUndefinedStateErrorMessage(key, action) {
  var actionType = action && action.type;
  var actionDescription = actionType && "action \"" + String(actionType) + "\"" || 'an action';
  return "Given " + actionDescription + ", reducer \"" + key + "\" returned undefined. " + "To ignore an action, you must explicitly return the previous state. " + "If you want this reducer to hold no value, you can return null instead of undefined.";
}

function getUnexpectedStateShapeWarningMessage(inputState, reducers, action, unexpectedKeyCache) {
  var reducerKeys = Object.keys(reducers);
  var argumentName = action && action.type === ActionTypes.INIT ? 'preloadedState argument passed to createStore' : 'previous state received by the reducer';

  if (reducerKeys.length === 0) {
    return 'Store does not have a valid reducer. Make sure the argument passed ' + 'to combineReducers is an object whose values are reducers.';
  }

  if (!isPlainObject(inputState)) {
    return "The " + argumentName + " has unexpected type of \"" + {}.toString.call(inputState).match(/\s([a-z|A-Z]+)/)[1] + "\". Expected argument to be an object with the following " + ("keys: \"" + reducerKeys.join('", "') + "\"");
  }

  var unexpectedKeys = Object.keys(inputState).filter(function (key) {
    return !reducers.hasOwnProperty(key) && !unexpectedKeyCache[key];
  });
  unexpectedKeys.forEach(function (key) {
    unexpectedKeyCache[key] = true;
  });
  if (action && action.type === ActionTypes.REPLACE) return;

  if (unexpectedKeys.length > 0) {
    return "Unexpected " + (unexpectedKeys.length > 1 ? 'keys' : 'key') + " " + ("\"" + unexpectedKeys.join('", "') + "\" found in " + argumentName + ". ") + "Expected to find one of the known reducer keys instead: " + ("\"" + reducerKeys.join('", "') + "\". Unexpected keys will be ignored.");
  }
}

function assertReducerShape(reducers) {
  Object.keys(reducers).forEach(function (key) {
    var reducer = reducers[key];
    var initialState = reducer(undefined, {
      type: ActionTypes.INIT
    });

    if (typeof initialState === 'undefined') {
      throw new Error("Reducer \"" + key + "\" returned undefined during initialization. " + "If the state passed to the reducer is undefined, you must " + "explicitly return the initial state. The initial state may " + "not be undefined. If you don't want to set a value for this reducer, " + "you can use null instead of undefined.");
    }

    if (typeof reducer(undefined, {
      type: ActionTypes.PROBE_UNKNOWN_ACTION()
    }) === 'undefined') {
      throw new Error("Reducer \"" + key + "\" returned undefined when probed with a random type. " + ("Don't try to handle " + ActionTypes.INIT + " or other actions in \"redux/*\" ") + "namespace. They are considered private. Instead, you must return the " + "current state for any unknown actions, unless it is undefined, " + "in which case you must return the initial state, regardless of the " + "action type. The initial state may not be undefined, but can be null.");
    }
  });
}
/**
 * Turns an object whose values are different reducer functions, into a single
 * reducer function. It will call every child reducer, and gather their results
 * into a single state object, whose keys correspond to the keys of the passed
 * reducer functions.
 *
 * @param {Object} reducers An object whose values correspond to different
 * reducer functions that need to be combined into one. One handy way to obtain
 * it is to use ES6 `import * as reducers` syntax. The reducers may never return
 * undefined for any action. Instead, they should return their initial state
 * if the state passed to them was undefined, and the current state for any
 * unrecognized action.
 *
 * @returns {Function} A reducer function that invokes every reducer inside the
 * passed object, and builds a state object with the same shape.
 */


function combineReducers(reducers) {
  var reducerKeys = Object.keys(reducers);
  var finalReducers = {};

  for (var i = 0; i < reducerKeys.length; i++) {
    var key = reducerKeys[i];

    if (true) {
      if (typeof reducers[key] === 'undefined') {
        warning("No reducer provided for key \"" + key + "\"");
      }
    }

    if (typeof reducers[key] === 'function') {
      finalReducers[key] = reducers[key];
    }
  }

  var finalReducerKeys = Object.keys(finalReducers); // This is used to make sure we don't warn about the same
  // keys multiple times.

  var unexpectedKeyCache;

  if (true) {
    unexpectedKeyCache = {};
  }

  var shapeAssertionError;

  try {
    assertReducerShape(finalReducers);
  } catch (e) {
    shapeAssertionError = e;
  }

  return function combination(state, action) {
    if (state === void 0) {
      state = {};
    }

    if (shapeAssertionError) {
      throw shapeAssertionError;
    }

    if (true) {
      var warningMessage = getUnexpectedStateShapeWarningMessage(state, finalReducers, action, unexpectedKeyCache);

      if (warningMessage) {
        warning(warningMessage);
      }
    }

    var hasChanged = false;
    var nextState = {};

    for (var _i = 0; _i < finalReducerKeys.length; _i++) {
      var _key = finalReducerKeys[_i];
      var reducer = finalReducers[_key];
      var previousStateForKey = state[_key];
      var nextStateForKey = reducer(previousStateForKey, action);

      if (typeof nextStateForKey === 'undefined') {
        var errorMessage = getUndefinedStateErrorMessage(_key, action);
        throw new Error(errorMessage);
      }

      nextState[_key] = nextStateForKey;
      hasChanged = hasChanged || nextStateForKey !== previousStateForKey;
    }

    hasChanged = hasChanged || finalReducerKeys.length !== Object.keys(state).length;
    return hasChanged ? nextState : state;
  };
}

function bindActionCreator(actionCreator, dispatch) {
  return function () {
    return dispatch(actionCreator.apply(this, arguments));
  };
}
/**
 * Turns an object whose values are action creators, into an object with the
 * same keys, but with every function wrapped into a `dispatch` call so they
 * may be invoked directly. This is just a convenience method, as you can call
 * `store.dispatch(MyActionCreators.doSomething())` yourself just fine.
 *
 * For convenience, you can also pass an action creator as the first argument,
 * and get a dispatch wrapped function in return.
 *
 * @param {Function|Object} actionCreators An object whose values are action
 * creator functions. One handy way to obtain it is to use ES6 `import * as`
 * syntax. You may also pass a single function.
 *
 * @param {Function} dispatch The `dispatch` function available on your Redux
 * store.
 *
 * @returns {Function|Object} The object mimicking the original object, but with
 * every action creator wrapped into the `dispatch` call. If you passed a
 * function as `actionCreators`, the return value will also be a single
 * function.
 */


function bindActionCreators(actionCreators, dispatch) {
  if (typeof actionCreators === 'function') {
    return bindActionCreator(actionCreators, dispatch);
  }

  if (typeof actionCreators !== 'object' || actionCreators === null) {
    throw new Error("bindActionCreators expected an object or a function, instead received " + (actionCreators === null ? 'null' : typeof actionCreators) + ". " + "Did you write \"import ActionCreators from\" instead of \"import * as ActionCreators from\"?");
  }

  var boundActionCreators = {};

  for (var key in actionCreators) {
    var actionCreator = actionCreators[key];

    if (typeof actionCreator === 'function') {
      boundActionCreators[key] = bindActionCreator(actionCreator, dispatch);
    }
  }

  return boundActionCreators;
}

function _defineProperty(obj, key, value) {
  if (key in obj) {
    Object.defineProperty(obj, key, {
      value: value,
      enumerable: true,
      configurable: true,
      writable: true
    });
  } else {
    obj[key] = value;
  }

  return obj;
}

function ownKeys(object, enumerableOnly) {
  var keys = Object.keys(object);

  if (Object.getOwnPropertySymbols) {
    keys.push.apply(keys, Object.getOwnPropertySymbols(object));
  }

  if (enumerableOnly) keys = keys.filter(function (sym) {
    return Object.getOwnPropertyDescriptor(object, sym).enumerable;
  });
  return keys;
}

function _objectSpread2(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i] != null ? arguments[i] : {};

    if (i % 2) {
      ownKeys(source, true).forEach(function (key) {
        _defineProperty(target, key, source[key]);
      });
    } else if (Object.getOwnPropertyDescriptors) {
      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
      ownKeys(source).forEach(function (key) {
        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
      });
    }
  }

  return target;
}

/**
 * Composes single-argument functions from right to left. The rightmost
 * function can take multiple arguments as it provides the signature for
 * the resulting composite function.
 *
 * @param {...Function} funcs The functions to compose.
 * @returns {Function} A function obtained by composing the argument functions
 * from right to left. For example, compose(f, g, h) is identical to doing
 * (...args) => f(g(h(...args))).
 */
function compose() {
  for (var _len = arguments.length, funcs = new Array(_len), _key = 0; _key < _len; _key++) {
    funcs[_key] = arguments[_key];
  }

  if (funcs.length === 0) {
    return function (arg) {
      return arg;
    };
  }

  if (funcs.length === 1) {
    return funcs[0];
  }

  return funcs.reduce(function (a, b) {
    return function () {
      return a(b.apply(void 0, arguments));
    };
  });
}

/**
 * Creates a store enhancer that applies middleware to the dispatch method
 * of the Redux store. This is handy for a variety of tasks, such as expressing
 * asynchronous actions in a concise manner, or logging every action payload.
 *
 * See `redux-thunk` package as an example of the Redux middleware.
 *
 * Because middleware is potentially asynchronous, this should be the first
 * store enhancer in the composition chain.
 *
 * Note that each middleware will be given the `dispatch` and `getState` functions
 * as named arguments.
 *
 * @param {...Function} middlewares The middleware chain to be applied.
 * @returns {Function} A store enhancer applying the middleware.
 */

function applyMiddleware() {
  for (var _len = arguments.length, middlewares = new Array(_len), _key = 0; _key < _len; _key++) {
    middlewares[_key] = arguments[_key];
  }

  return function (createStore) {
    return function () {
      var store = createStore.apply(void 0, arguments);

      var _dispatch = function dispatch() {
        throw new Error('Dispatching while constructing your middleware is not allowed. ' + 'Other middleware would not be applied to this dispatch.');
      };

      var middlewareAPI = {
        getState: store.getState,
        dispatch: function dispatch() {
          return _dispatch.apply(void 0, arguments);
        }
      };
      var chain = middlewares.map(function (middleware) {
        return middleware(middlewareAPI);
      });
      _dispatch = compose.apply(void 0, chain)(store.dispatch);
      return _objectSpread2({}, store, {
        dispatch: _dispatch
      });
    };
  };
}

/*
 * This is a dummy function to check if the function name has been altered by minification.
 * If the function has been minified and NODE_ENV !== 'production', warn the user.
 */

function isCrushed() {}

if ( true && typeof isCrushed.name === 'string' && isCrushed.name !== 'isCrushed') {
  warning('You are currently using minified code outside of NODE_ENV === "production". ' + 'This means that you are running a slower development build of Redux. ' + 'You can use loose-envify (https://github.com/zertosh/loose-envify) for browserify ' + 'or setting mode to production in webpack (https://webpack.js.org/concepts/mode/) ' + 'to ensure you have the correct code for your production build.');
}




/***/ }),

/***/ "./node_modules/regenerator-runtime/runtime.js":
/*!*****************************************************!*\
  !*** ./node_modules/regenerator-runtime/runtime.js ***!
  \*****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

/**
 * Copyright (c) 2014-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */

var runtime = (function (exports) {
  "use strict";

  var Op = Object.prototype;
  var hasOwn = Op.hasOwnProperty;
  var undefined; // More compressible than void 0.
  var $Symbol = typeof Symbol === "function" ? Symbol : {};
  var iteratorSymbol = $Symbol.iterator || "@@iterator";
  var asyncIteratorSymbol = $Symbol.asyncIterator || "@@asyncIterator";
  var toStringTagSymbol = $Symbol.toStringTag || "@@toStringTag";

  function wrap(innerFn, outerFn, self, tryLocsList) {
    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.
    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;
    var generator = Object.create(protoGenerator.prototype);
    var context = new Context(tryLocsList || []);

    // The ._invoke method unifies the implementations of the .next,
    // .throw, and .return methods.
    generator._invoke = makeInvokeMethod(innerFn, self, context);

    return generator;
  }
  exports.wrap = wrap;

  // Try/catch helper to minimize deoptimizations. Returns a completion
  // record like context.tryEntries[i].completion. This interface could
  // have been (and was previously) designed to take a closure to be
  // invoked without arguments, but in all the cases we care about we
  // already have an existing method we want to call, so there's no need
  // to create a new function object. We can even get away with assuming
  // the method takes exactly one argument, since that happens to be true
  // in every case, so we don't have to touch the arguments object. The
  // only additional allocation required is the completion record, which
  // has a stable shape and so hopefully should be cheap to allocate.
  function tryCatch(fn, obj, arg) {
    try {
      return { type: "normal", arg: fn.call(obj, arg) };
    } catch (err) {
      return { type: "throw", arg: err };
    }
  }

  var GenStateSuspendedStart = "suspendedStart";
  var GenStateSuspendedYield = "suspendedYield";
  var GenStateExecuting = "executing";
  var GenStateCompleted = "completed";

  // Returning this object from the innerFn has the same effect as
  // breaking out of the dispatch switch statement.
  var ContinueSentinel = {};

  // Dummy constructor functions that we use as the .constructor and
  // .constructor.prototype properties for functions that return Generator
  // objects. For full spec compliance, you may wish to configure your
  // minifier not to mangle the names of these two functions.
  function Generator() {}
  function GeneratorFunction() {}
  function GeneratorFunctionPrototype() {}

  // This is a polyfill for %IteratorPrototype% for environments that
  // don't natively support it.
  var IteratorPrototype = {};
  IteratorPrototype[iteratorSymbol] = function () {
    return this;
  };

  var getProto = Object.getPrototypeOf;
  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));
  if (NativeIteratorPrototype &&
      NativeIteratorPrototype !== Op &&
      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {
    // This environment has a native %IteratorPrototype%; use it instead
    // of the polyfill.
    IteratorPrototype = NativeIteratorPrototype;
  }

  var Gp = GeneratorFunctionPrototype.prototype =
    Generator.prototype = Object.create(IteratorPrototype);
  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;
  GeneratorFunctionPrototype.constructor = GeneratorFunction;
  GeneratorFunctionPrototype[toStringTagSymbol] =
    GeneratorFunction.displayName = "GeneratorFunction";

  // Helper for defining the .next, .throw, and .return methods of the
  // Iterator interface in terms of a single ._invoke method.
  function defineIteratorMethods(prototype) {
    ["next", "throw", "return"].forEach(function(method) {
      prototype[method] = function(arg) {
        return this._invoke(method, arg);
      };
    });
  }

  exports.isGeneratorFunction = function(genFun) {
    var ctor = typeof genFun === "function" && genFun.constructor;
    return ctor
      ? ctor === GeneratorFunction ||
        // For the native GeneratorFunction constructor, the best we can
        // do is to check its .name property.
        (ctor.displayName || ctor.name) === "GeneratorFunction"
      : false;
  };

  exports.mark = function(genFun) {
    if (Object.setPrototypeOf) {
      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);
    } else {
      genFun.__proto__ = GeneratorFunctionPrototype;
      if (!(toStringTagSymbol in genFun)) {
        genFun[toStringTagSymbol] = "GeneratorFunction";
      }
    }
    genFun.prototype = Object.create(Gp);
    return genFun;
  };

  // Within the body of any async function, `await x` is transformed to
  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test
  // `hasOwn.call(value, "__await")` to determine if the yielded value is
  // meant to be awaited.
  exports.awrap = function(arg) {
    return { __await: arg };
  };

  function AsyncIterator(generator, PromiseImpl) {
    function invoke(method, arg, resolve, reject) {
      var record = tryCatch(generator[method], generator, arg);
      if (record.type === "throw") {
        reject(record.arg);
      } else {
        var result = record.arg;
        var value = result.value;
        if (value &&
            typeof value === "object" &&
            hasOwn.call(value, "__await")) {
          return PromiseImpl.resolve(value.__await).then(function(value) {
            invoke("next", value, resolve, reject);
          }, function(err) {
            invoke("throw", err, resolve, reject);
          });
        }

        return PromiseImpl.resolve(value).then(function(unwrapped) {
          // When a yielded Promise is resolved, its final value becomes
          // the .value of the Promise<{value,done}> result for the
          // current iteration.
          result.value = unwrapped;
          resolve(result);
        }, function(error) {
          // If a rejected Promise was yielded, throw the rejection back
          // into the async generator function so it can be handled there.
          return invoke("throw", error, resolve, reject);
        });
      }
    }

    var previousPromise;

    function enqueue(method, arg) {
      function callInvokeWithMethodAndArg() {
        return new PromiseImpl(function(resolve, reject) {
          invoke(method, arg, resolve, reject);
        });
      }

      return previousPromise =
        // If enqueue has been called before, then we want to wait until
        // all previous Promises have been resolved before calling invoke,
        // so that results are always delivered in the correct order. If
        // enqueue has not been called before, then it is important to
        // call invoke immediately, without waiting on a callback to fire,
        // so that the async generator function has the opportunity to do
        // any necessary setup in a predictable way. This predictability
        // is why the Promise constructor synchronously invokes its
        // executor callback, and why async functions synchronously
        // execute code before the first await. Since we implement simple
        // async functions in terms of async generators, it is especially
        // important to get this right, even though it requires care.
        previousPromise ? previousPromise.then(
          callInvokeWithMethodAndArg,
          // Avoid propagating failures to Promises returned by later
          // invocations of the iterator.
          callInvokeWithMethodAndArg
        ) : callInvokeWithMethodAndArg();
    }

    // Define the unified helper method that is used to implement .next,
    // .throw, and .return (see defineIteratorMethods).
    this._invoke = enqueue;
  }

  defineIteratorMethods(AsyncIterator.prototype);
  AsyncIterator.prototype[asyncIteratorSymbol] = function () {
    return this;
  };
  exports.AsyncIterator = AsyncIterator;

  // Note that simple async functions are implemented on top of
  // AsyncIterator objects; they just return a Promise for the value of
  // the final result produced by the iterator.
  exports.async = function(innerFn, outerFn, self, tryLocsList, PromiseImpl) {
    if (PromiseImpl === void 0) PromiseImpl = Promise;

    var iter = new AsyncIterator(
      wrap(innerFn, outerFn, self, tryLocsList),
      PromiseImpl
    );

    return exports.isGeneratorFunction(outerFn)
      ? iter // If outerFn is a generator, return the full iterator.
      : iter.next().then(function(result) {
          return result.done ? result.value : iter.next();
        });
  };

  function makeInvokeMethod(innerFn, self, context) {
    var state = GenStateSuspendedStart;

    return function invoke(method, arg) {
      if (state === GenStateExecuting) {
        throw new Error("Generator is already running");
      }

      if (state === GenStateCompleted) {
        if (method === "throw") {
          throw arg;
        }

        // Be forgiving, per 25.3.3.3.3 of the spec:
        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume
        return doneResult();
      }

      context.method = method;
      context.arg = arg;

      while (true) {
        var delegate = context.delegate;
        if (delegate) {
          var delegateResult = maybeInvokeDelegate(delegate, context);
          if (delegateResult) {
            if (delegateResult === ContinueSentinel) continue;
            return delegateResult;
          }
        }

        if (context.method === "next") {
          // Setting context._sent for legacy support of Babel's
          // function.sent implementation.
          context.sent = context._sent = context.arg;

        } else if (context.method === "throw") {
          if (state === GenStateSuspendedStart) {
            state = GenStateCompleted;
            throw context.arg;
          }

          context.dispatchException(context.arg);

        } else if (context.method === "return") {
          context.abrupt("return", context.arg);
        }

        state = GenStateExecuting;

        var record = tryCatch(innerFn, self, context);
        if (record.type === "normal") {
          // If an exception is thrown from innerFn, we leave state ===
          // GenStateExecuting and loop back for another invocation.
          state = context.done
            ? GenStateCompleted
            : GenStateSuspendedYield;

          if (record.arg === ContinueSentinel) {
            continue;
          }

          return {
            value: record.arg,
            done: context.done
          };

        } else if (record.type === "throw") {
          state = GenStateCompleted;
          // Dispatch the exception by looping back around to the
          // context.dispatchException(context.arg) call above.
          context.method = "throw";
          context.arg = record.arg;
        }
      }
    };
  }

  // Call delegate.iterator[context.method](context.arg) and handle the
  // result, either by returning a { value, done } result from the
  // delegate iterator, or by modifying context.method and context.arg,
  // setting context.delegate to null, and returning the ContinueSentinel.
  function maybeInvokeDelegate(delegate, context) {
    var method = delegate.iterator[context.method];
    if (method === undefined) {
      // A .throw or .return when the delegate iterator has no .throw
      // method always terminates the yield* loop.
      context.delegate = null;

      if (context.method === "throw") {
        // Note: ["return"] must be used for ES3 parsing compatibility.
        if (delegate.iterator["return"]) {
          // If the delegate iterator has a return method, give it a
          // chance to clean up.
          context.method = "return";
          context.arg = undefined;
          maybeInvokeDelegate(delegate, context);

          if (context.method === "throw") {
            // If maybeInvokeDelegate(context) changed context.method from
            // "return" to "throw", let that override the TypeError below.
            return ContinueSentinel;
          }
        }

        context.method = "throw";
        context.arg = new TypeError(
          "The iterator does not provide a 'throw' method");
      }

      return ContinueSentinel;
    }

    var record = tryCatch(method, delegate.iterator, context.arg);

    if (record.type === "throw") {
      context.method = "throw";
      context.arg = record.arg;
      context.delegate = null;
      return ContinueSentinel;
    }

    var info = record.arg;

    if (! info) {
      context.method = "throw";
      context.arg = new TypeError("iterator result is not an object");
      context.delegate = null;
      return ContinueSentinel;
    }

    if (info.done) {
      // Assign the result of the finished delegate to the temporary
      // variable specified by delegate.resultName (see delegateYield).
      context[delegate.resultName] = info.value;

      // Resume execution at the desired location (see delegateYield).
      context.next = delegate.nextLoc;

      // If context.method was "throw" but the delegate handled the
      // exception, let the outer generator proceed normally. If
      // context.method was "next", forget context.arg since it has been
      // "consumed" by the delegate iterator. If context.method was
      // "return", allow the original .return call to continue in the
      // outer generator.
      if (context.method !== "return") {
        context.method = "next";
        context.arg = undefined;
      }

    } else {
      // Re-yield the result returned by the delegate method.
      return info;
    }

    // The delegate iterator is finished, so forget it and continue with
    // the outer generator.
    context.delegate = null;
    return ContinueSentinel;
  }

  // Define Generator.prototype.{next,throw,return} in terms of the
  // unified ._invoke helper method.
  defineIteratorMethods(Gp);

  Gp[toStringTagSymbol] = "Generator";

  // A Generator should always return itself as the iterator object when the
  // @@iterator function is called on it. Some browsers' implementations of the
  // iterator prototype chain incorrectly implement this, causing the Generator
  // object to not be returned from this call. This ensures that doesn't happen.
  // See https://github.com/facebook/regenerator/issues/274 for more details.
  Gp[iteratorSymbol] = function() {
    return this;
  };

  Gp.toString = function() {
    return "[object Generator]";
  };

  function pushTryEntry(locs) {
    var entry = { tryLoc: locs[0] };

    if (1 in locs) {
      entry.catchLoc = locs[1];
    }

    if (2 in locs) {
      entry.finallyLoc = locs[2];
      entry.afterLoc = locs[3];
    }

    this.tryEntries.push(entry);
  }

  function resetTryEntry(entry) {
    var record = entry.completion || {};
    record.type = "normal";
    delete record.arg;
    entry.completion = record;
  }

  function Context(tryLocsList) {
    // The root entry object (effectively a try statement without a catch
    // or a finally block) gives us a place to store values thrown from
    // locations where there is no enclosing try statement.
    this.tryEntries = [{ tryLoc: "root" }];
    tryLocsList.forEach(pushTryEntry, this);
    this.reset(true);
  }

  exports.keys = function(object) {
    var keys = [];
    for (var key in object) {
      keys.push(key);
    }
    keys.reverse();

    // Rather than returning an object with a next method, we keep
    // things simple and return the next function itself.
    return function next() {
      while (keys.length) {
        var key = keys.pop();
        if (key in object) {
          next.value = key;
          next.done = false;
          return next;
        }
      }

      // To avoid creating an additional object, we just hang the .value
      // and .done properties off the next function object itself. This
      // also ensures that the minifier will not anonymize the function.
      next.done = true;
      return next;
    };
  };

  function values(iterable) {
    if (iterable) {
      var iteratorMethod = iterable[iteratorSymbol];
      if (iteratorMethod) {
        return iteratorMethod.call(iterable);
      }

      if (typeof iterable.next === "function") {
        return iterable;
      }

      if (!isNaN(iterable.length)) {
        var i = -1, next = function next() {
          while (++i < iterable.length) {
            if (hasOwn.call(iterable, i)) {
              next.value = iterable[i];
              next.done = false;
              return next;
            }
          }

          next.value = undefined;
          next.done = true;

          return next;
        };

        return next.next = next;
      }
    }

    // Return an iterator with no values.
    return { next: doneResult };
  }
  exports.values = values;

  function doneResult() {
    return { value: undefined, done: true };
  }

  Context.prototype = {
    constructor: Context,

    reset: function(skipTempReset) {
      this.prev = 0;
      this.next = 0;
      // Resetting context._sent for legacy support of Babel's
      // function.sent implementation.
      this.sent = this._sent = undefined;
      this.done = false;
      this.delegate = null;

      this.method = "next";
      this.arg = undefined;

      this.tryEntries.forEach(resetTryEntry);

      if (!skipTempReset) {
        for (var name in this) {
          // Not sure about the optimal order of these conditions:
          if (name.charAt(0) === "t" &&
              hasOwn.call(this, name) &&
              !isNaN(+name.slice(1))) {
            this[name] = undefined;
          }
        }
      }
    },

    stop: function() {
      this.done = true;

      var rootEntry = this.tryEntries[0];
      var rootRecord = rootEntry.completion;
      if (rootRecord.type === "throw") {
        throw rootRecord.arg;
      }

      return this.rval;
    },

    dispatchException: function(exception) {
      if (this.done) {
        throw exception;
      }

      var context = this;
      function handle(loc, caught) {
        record.type = "throw";
        record.arg = exception;
        context.next = loc;

        if (caught) {
          // If the dispatched exception was caught by a catch block,
          // then let that catch block handle the exception normally.
          context.method = "next";
          context.arg = undefined;
        }

        return !! caught;
      }

      for (var i = this.tryEntries.length - 1; i >= 0; --i) {
        var entry = this.tryEntries[i];
        var record = entry.completion;

        if (entry.tryLoc === "root") {
          // Exception thrown outside of any try block that could handle
          // it, so set the completion value of the entire function to
          // throw the exception.
          return handle("end");
        }

        if (entry.tryLoc <= this.prev) {
          var hasCatch = hasOwn.call(entry, "catchLoc");
          var hasFinally = hasOwn.call(entry, "finallyLoc");

          if (hasCatch && hasFinally) {
            if (this.prev < entry.catchLoc) {
              return handle(entry.catchLoc, true);
            } else if (this.prev < entry.finallyLoc) {
              return handle(entry.finallyLoc);
            }

          } else if (hasCatch) {
            if (this.prev < entry.catchLoc) {
              return handle(entry.catchLoc, true);
            }

          } else if (hasFinally) {
            if (this.prev < entry.finallyLoc) {
              return handle(entry.finallyLoc);
            }

          } else {
            throw new Error("try statement without catch or finally");
          }
        }
      }
    },

    abrupt: function(type, arg) {
      for (var i = this.tryEntries.length - 1; i >= 0; --i) {
        var entry = this.tryEntries[i];
        if (entry.tryLoc <= this.prev &&
            hasOwn.call(entry, "finallyLoc") &&
            this.prev < entry.finallyLoc) {
          var finallyEntry = entry;
          break;
        }
      }

      if (finallyEntry &&
          (type === "break" ||
           type === "continue") &&
          finallyEntry.tryLoc <= arg &&
          arg <= finallyEntry.finallyLoc) {
        // Ignore the finally entry if control is not jumping to a
        // location outside the try/catch block.
        finallyEntry = null;
      }

      var record = finallyEntry ? finallyEntry.completion : {};
      record.type = type;
      record.arg = arg;

      if (finallyEntry) {
        this.method = "next";
        this.next = finallyEntry.finallyLoc;
        return ContinueSentinel;
      }

      return this.complete(record);
    },

    complete: function(record, afterLoc) {
      if (record.type === "throw") {
        throw record.arg;
      }

      if (record.type === "break" ||
          record.type === "continue") {
        this.next = record.arg;
      } else if (record.type === "return") {
        this.rval = this.arg = record.arg;
        this.method = "return";
        this.next = "end";
      } else if (record.type === "normal" && afterLoc) {
        this.next = afterLoc;
      }

      return ContinueSentinel;
    },

    finish: function(finallyLoc) {
      for (var i = this.tryEntries.length - 1; i >= 0; --i) {
        var entry = this.tryEntries[i];
        if (entry.finallyLoc === finallyLoc) {
          this.complete(entry.completion, entry.afterLoc);
          resetTryEntry(entry);
          return ContinueSentinel;
        }
      }
    },

    "catch": function(tryLoc) {
      for (var i = this.tryEntries.length - 1; i >= 0; --i) {
        var entry = this.tryEntries[i];
        if (entry.tryLoc === tryLoc) {
          var record = entry.completion;
          if (record.type === "throw") {
            var thrown = record.arg;
            resetTryEntry(entry);
          }
          return thrown;
        }
      }

      // The context.catch method must only be called with a location
      // argument that corresponds to a known catch block.
      throw new Error("illegal catch attempt");
    },

    delegateYield: function(iterable, resultName, nextLoc) {
      this.delegate = {
        iterator: values(iterable),
        resultName: resultName,
        nextLoc: nextLoc
      };

      if (this.method === "next") {
        // Deliberately forget the last sent value so that we don't
        // accidentally pass it on to the delegate.
        this.arg = undefined;
      }

      return ContinueSentinel;
    }
  };

  // Regardless of whether this script is executing as a CommonJS module
  // or not, return the runtime object so that we can declare the variable
  // regeneratorRuntime in the outer scope, which allows this module to be
  // injected easily by `bin/regenerator --include-runtime script.js`.
  return exports;

}(
  // If this script is executing as a CommonJS module, use module.exports
  // as the regeneratorRuntime namespace. Otherwise create a new empty
  // object. Either way, the resulting object will be used to initialize
  // the regeneratorRuntime variable at the top of this file.
   true ? module.exports : undefined
));

try {
  regeneratorRuntime = runtime;
} catch (accidentalStrictMode) {
  // This module should not be running in strict mode, so the above
  // assignment should always work unless something is misconfigured. Just
  // in case runtime.js accidentally runs in strict mode, we can escape
  // strict mode using a global Function call. This could conceivably fail
  // if a Content Security Policy forbids using Function, but in that case
  // the proper solution is to fix the accidental strict mode problem. If
  // you've misconfigured your bundler to force strict mode and applied a
  // CSP to forbid Function, and you're not willing to fix either of those
  // problems, please detail your unique predicament in a GitHub issue.
  Function("r", "regeneratorRuntime = r")(runtime);
}


/***/ }),

/***/ "./node_modules/shallowequal/index.js":
/*!********************************************!*\
  !*** ./node_modules/shallowequal/index.js ***!
  \********************************************/
/*! no static exports found */
/***/ (function(module, exports) {

//

module.exports = function shallowEqual(objA, objB, compare, compareContext) {
  var ret = compare ? compare.call(compareContext, objA, objB) : void 0;

  if (ret !== void 0) {
    return !!ret;
  }

  if (objA === objB) {
    return true;
  }

  if (typeof objA !== "object" || !objA || typeof objB !== "object" || !objB) {
    return false;
  }

  var keysA = Object.keys(objA);
  var keysB = Object.keys(objB);

  if (keysA.length !== keysB.length) {
    return false;
  }

  var bHasOwnProperty = Object.prototype.hasOwnProperty.bind(objB);

  // Test for A's keys different from B.
  for (var idx = 0; idx < keysA.length; idx++) {
    var key = keysA[idx];

    if (!bHasOwnProperty(key)) {
      return false;
    }

    var valueA = objA[key];
    var valueB = objB[key];

    ret = compare ? compare.call(compareContext, valueA, valueB, key) : void 0;

    if (ret === false || (ret === void 0 && valueA !== valueB)) {
      return false;
    }
  }

  return true;
};


/***/ }),

/***/ "./node_modules/string-hash/index.js":
/*!*******************************************!*\
  !*** ./node_modules/string-hash/index.js ***!
  \*******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


function hash(str) {
  var hash = 5381,
      i    = str.length;

  while(i) {
    hash = (hash * 33) ^ str.charCodeAt(--i);
  }

  /* JavaScript does bitwise operations (like XOR, above) on 32-bit signed
   * integers. Since we want the results to be always positive, convert the
   * signed int to an unsigned by doing an unsigned bitshift. */
  return hash >>> 0;
}

module.exports = hash;


/***/ }),

/***/ "./node_modules/styled-components/dist/styled-components.browser.esm.js":
/*!******************************************************************************!*\
  !*** ./node_modules/styled-components/dist/styled-components.browser.esm.js ***!
  \******************************************************************************/
/*! exports provided: default, ServerStyleSheet, StyleSheetConsumer, StyleSheetContext, StyleSheetManager, ThemeConsumer, ThemeContext, ThemeProvider, __PRIVATE__, createGlobalStyle, css, isStyledComponent, keyframes, useTheme, version, withTheme */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* WEBPACK VAR INJECTION */(function(process) {/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ServerStyleSheet", function() { return ServerStyleSheet; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "StyleSheetConsumer", function() { return StyleSheetConsumer; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "StyleSheetContext", function() { return StyleSheetContext; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "StyleSheetManager", function() { return StyleSheetManager; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ThemeConsumer", function() { return ThemeConsumer; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ThemeContext", function() { return ThemeContext; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ThemeProvider", function() { return ThemeProvider; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "__PRIVATE__", function() { return __PRIVATE__; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createGlobalStyle", function() { return createGlobalStyle; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "css", function() { return css; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isStyledComponent", function() { return isStyledComponent; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "keyframes", function() { return keyframes; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "useTheme", function() { return useTheme; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "version", function() { return version; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "withTheme", function() { return withTheme; });
/* harmony import */ var react_is__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react-is */ "./node_modules/react-is/index.js");
/* harmony import */ var react_is__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_is__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var shallowequal__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! shallowequal */ "./node_modules/shallowequal/index.js");
/* harmony import */ var shallowequal__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(shallowequal__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var _emotion_stylis__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @emotion/stylis */ "./node_modules/@emotion/stylis/dist/stylis.browser.esm.js");
/* harmony import */ var _emotion_unitless__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @emotion/unitless */ "./node_modules/@emotion/unitless/dist/unitless.browser.esm.js");
/* harmony import */ var _emotion_is_prop_valid__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @emotion/is-prop-valid */ "./node_modules/@emotion/is-prop-valid/dist/is-prop-valid.browser.esm.js");
/* harmony import */ var hoist_non_react_statics__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! hoist-non-react-statics */ "./node_modules/hoist-non-react-statics/dist/hoist-non-react-statics.cjs.js");
/* harmony import */ var hoist_non_react_statics__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(hoist_non_react_statics__WEBPACK_IMPORTED_MODULE_6__);








function _extends() {
  _extends = Object.assign || function (target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];

      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }

    return target;
  };

  return _extends.apply(this, arguments);
}

function _objectWithoutPropertiesLoose(source, excluded) {
  if (source == null) return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i;

  for (i = 0; i < sourceKeys.length; i++) {
    key = sourceKeys[i];
    if (excluded.indexOf(key) >= 0) continue;
    target[key] = source[key];
  }

  return target;
}

// 
var interleave = (function (strings, interpolations) {
  var result = [strings[0]];

  for (var i = 0, len = interpolations.length; i < len; i += 1) {
    result.push(interpolations[i], strings[i + 1]);
  }

  return result;
});

// 
var isPlainObject = (function (x) {
  return x !== null && typeof x === 'object' && (x.toString ? x.toString() : Object.prototype.toString.call(x)) === '[object Object]' && !Object(react_is__WEBPACK_IMPORTED_MODULE_0__["typeOf"])(x);
});

// 
var EMPTY_ARRAY = Object.freeze([]);
var EMPTY_OBJECT = Object.freeze({});

// 
function isFunction(test) {
  return typeof test === 'function';
}

// 
function getComponentName(target) {
  return ( true ? typeof target === 'string' && target : undefined) || // $FlowFixMe
  target.displayName || // $FlowFixMe
  target.name || 'Component';
}

// 
function isStatelessFunction(test) {
  return typeof test === 'function' && !(test.prototype && test.prototype.isReactComponent);
}

// 
function isStyledComponent(target) {
  return target && typeof target.styledComponentId === 'string';
}

// 
var SC_ATTR = typeof process !== 'undefined' && (process.env.REACT_APP_SC_ATTR || process.env.SC_ATTR) || 'data-styled';
var SC_ATTR_ACTIVE = 'active';
var SC_ATTR_VERSION = 'data-styled-version';
var SC_VERSION = "5.1.0";
var SPLITTER = '/*!sc*/\n';
var IS_BROWSER = typeof window !== 'undefined' && 'HTMLElement' in window;
var DISABLE_SPEEDY = typeof SC_DISABLE_SPEEDY === 'boolean' && SC_DISABLE_SPEEDY || typeof process !== 'undefined' && (process.env.REACT_APP_SC_DISABLE_SPEEDY || process.env.SC_DISABLE_SPEEDY) || "development" !== 'production'; // Shared empty execution context when generating static styles

var STATIC_EXECUTION_CONTEXT = {};

// 

/* eslint-disable camelcase, no-undef */
var getNonce = function getNonce() {
  return  true ? __webpack_require__.nc : undefined;
};

var errorMap = {
  "1": "Cannot create styled-component for component: %s.\n\n",
  "2": "Can't collect styles once you've consumed a `ServerStyleSheet`'s styles! `ServerStyleSheet` is a one off instance for each server-side render cycle.\n\n- Are you trying to reuse it across renders?\n- Are you accidentally calling collectStyles twice?\n\n",
  "3": "Streaming SSR is only supported in a Node.js environment; Please do not try to call this method in the browser.\n\n",
  "4": "The `StyleSheetManager` expects a valid target or sheet prop!\n\n- Does this error occur on the client and is your target falsy?\n- Does this error occur on the server and is the sheet falsy?\n\n",
  "5": "The clone method cannot be used on the client!\n\n- Are you running in a client-like environment on the server?\n- Are you trying to run SSR on the client?\n\n",
  "6": "Trying to insert a new style tag, but the given Node is unmounted!\n\n- Are you using a custom target that isn't mounted?\n- Does your document not have a valid head element?\n- Have you accidentally removed a style tag manually?\n\n",
  "7": "ThemeProvider: Please return an object from your \"theme\" prop function, e.g.\n\n```js\ntheme={() => ({})}\n```\n\n",
  "8": "ThemeProvider: Please make your \"theme\" prop an object.\n\n",
  "9": "Missing document `<head>`\n\n",
  "10": "Cannot find a StyleSheet instance. Usually this happens if there are multiple copies of styled-components loaded at once. Check out this issue for how to troubleshoot and fix the common cases where this situation can happen: https://github.com/styled-components/styled-components/issues/1941#issuecomment-417862021\n\n",
  "11": "_This error was replaced with a dev-time warning, it will be deleted for v4 final._ [createGlobalStyle] received children which will not be rendered. Please use the component without passing children elements.\n\n",
  "12": "It seems you are interpolating a keyframe declaration (%s) into an untagged string. This was supported in styled-components v3, but is not longer supported in v4 as keyframes are now injected on-demand. Please wrap your string in the css\\`\\` helper which ensures the styles are injected correctly. See https://www.styled-components.com/docs/api#css\n\n",
  "13": "%s is not a styled component and cannot be referred to via component selector. See https://www.styled-components.com/docs/advanced#referring-to-other-components for more details.\n\n",
  "14": "ThemeProvider: \"theme\" prop is required.\n\n",
  "15": "A stylis plugin has been supplied that is not named. We need a name for each plugin to be able to prevent styling collisions between different stylis configurations within the same app. Before you pass your plugin to `<StyleSheetManager stylisPlugins={[]}>`, please make sure each plugin is uniquely-named, e.g.\n\n```js\nObject.defineProperty(importedPlugin, 'name', { value: 'some-unique-name' });\n```\n\n",
  "16": "Reached the limit of how many styled components may be created at group %s.\nYou may only create up to 1,073,741,824 components. If you're creating components dynamically,\nas for instance in your render method then you may be running into this limitation.\n\n",
  "17": "CSSStyleSheet could not be found on HTMLStyleElement.\nHas styled-components' style tag been unmounted or altered by another script?\n"
};

// 
var ERRORS =  true ? errorMap : undefined;
/**
 * super basic version of sprintf
 */

function format() {
  var a = arguments.length <= 0 ? undefined : arguments[0];
  var b = [];

  for (var c = 1, len = arguments.length; c < len; c += 1) {
    b.push(c < 0 || arguments.length <= c ? undefined : arguments[c]);
  }

  b.forEach(function (d) {
    a = a.replace(/%[a-z]/, d);
  });
  return a;
}
/**
 * Create an error file out of errors.md for development and a simple web link to the full errors
 * in production mode.
 */


function throwStyledComponentsError(code) {
  for (var _len = arguments.length, interpolations = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
    interpolations[_key - 1] = arguments[_key];
  }

  if (false) {} else {
    throw new Error(format.apply(void 0, [ERRORS[code]].concat(interpolations)).trim());
  }
}

// 
var ELEMENT_TYPE = 1;
/* Node.ELEMENT_TYPE */

/** Find last style element if any inside target */

var findLastStyleTag = function findLastStyleTag(target) {
  var childNodes = target.childNodes;

  for (var i = childNodes.length; i >= 0; i--) {
    var child = childNodes[i];

    if (child && child.nodeType === ELEMENT_TYPE && child.hasAttribute(SC_ATTR)) {
      return child;
    }
  }

  return undefined;
};
/** Create a style element inside `target` or <head> after the last */


var makeStyleTag = function makeStyleTag(target) {
  var head = document.head;
  var parent = target || head;
  var style = document.createElement('style');
  var prevStyle = findLastStyleTag(parent);
  var nextSibling = prevStyle !== undefined ? prevStyle.nextSibling : null;
  style.setAttribute(SC_ATTR, SC_ATTR_ACTIVE);
  style.setAttribute(SC_ATTR_VERSION, SC_VERSION);
  var nonce = getNonce();
  if (nonce) style.setAttribute('nonce', nonce);
  parent.insertBefore(style, nextSibling);
  return style;
};
/** Get the CSSStyleSheet instance for a given style element */

var getSheet = function getSheet(tag) {
  if (tag.sheet) {
    return tag.sheet;
  } // Avoid Firefox quirk where the style element might not have a sheet property


  var _document = document,
      styleSheets = _document.styleSheets;

  for (var i = 0, l = styleSheets.length; i < l; i++) {
    var sheet = styleSheets[i];

    if (sheet.ownerNode === tag) {
      return sheet;
    }
  }

  throwStyledComponentsError(17);
  return undefined;
};

// 
/** Create a CSSStyleSheet-like tag depending on the environment */

var makeTag = function makeTag(_ref) {
  var isServer = _ref.isServer,
      useCSSOMInjection = _ref.useCSSOMInjection,
      target = _ref.target;

  if (isServer) {
    return new VirtualTag(target);
  } else if (useCSSOMInjection) {
    return new CSSOMTag(target);
  } else {
    return new TextTag(target);
  }
};
var CSSOMTag = /*#__PURE__*/function () {
  function CSSOMTag(target) {
    var element = this.element = makeStyleTag(target); // Avoid Edge bug where empty style elements don't create sheets

    element.appendChild(document.createTextNode(''));
    this.sheet = getSheet(element);
    this.length = 0;
  }

  var _proto = CSSOMTag.prototype;

  _proto.insertRule = function insertRule(index, rule) {
    try {
      this.sheet.insertRule(rule, index);
      this.length++;
      return true;
    } catch (_error) {
      return false;
    }
  };

  _proto.deleteRule = function deleteRule(index) {
    this.sheet.deleteRule(index);
    this.length--;
  };

  _proto.getRule = function getRule(index) {
    var rule = this.sheet.cssRules[index]; // Avoid IE11 quirk where cssText is inaccessible on some invalid rules

    if (rule !== undefined && typeof rule.cssText === 'string') {
      return rule.cssText;
    } else {
      return '';
    }
  };

  return CSSOMTag;
}();
/** A Tag that emulates the CSSStyleSheet API but uses text nodes */

var TextTag = /*#__PURE__*/function () {
  function TextTag(target) {
    var element = this.element = makeStyleTag(target);
    this.nodes = element.childNodes;
    this.length = 0;
  }

  var _proto2 = TextTag.prototype;

  _proto2.insertRule = function insertRule(index, rule) {
    if (index <= this.length && index >= 0) {
      var node = document.createTextNode(rule);
      var refNode = this.nodes[index];
      this.element.insertBefore(node, refNode || null);
      this.length++;
      return true;
    } else {
      return false;
    }
  };

  _proto2.deleteRule = function deleteRule(index) {
    this.element.removeChild(this.nodes[index]);
    this.length--;
  };

  _proto2.getRule = function getRule(index) {
    if (index < this.length) {
      return this.nodes[index].textContent;
    } else {
      return '';
    }
  };

  return TextTag;
}();
/** A completely virtual (server-side) Tag that doesn't manipulate the DOM */

var VirtualTag = /*#__PURE__*/function () {
  function VirtualTag(_target) {
    this.rules = [];
    this.length = 0;
  }

  var _proto3 = VirtualTag.prototype;

  _proto3.insertRule = function insertRule(index, rule) {
    if (index <= this.length) {
      this.rules.splice(index, 0, rule);
      this.length++;
      return true;
    } else {
      return false;
    }
  };

  _proto3.deleteRule = function deleteRule(index) {
    this.rules.splice(index, 1);
    this.length--;
  };

  _proto3.getRule = function getRule(index) {
    if (index < this.length) {
      return this.rules[index];
    } else {
      return '';
    }
  };

  return VirtualTag;
}();

// 
/** Create a GroupedTag with an underlying Tag implementation */

var makeGroupedTag = function makeGroupedTag(tag) {
  return new DefaultGroupedTag(tag);
};
var BASE_SIZE = 1 << 9;

var DefaultGroupedTag = /*#__PURE__*/function () {
  function DefaultGroupedTag(tag) {
    this.groupSizes = new Uint32Array(BASE_SIZE);
    this.length = BASE_SIZE;
    this.tag = tag;
  }

  var _proto = DefaultGroupedTag.prototype;

  _proto.indexOfGroup = function indexOfGroup(group) {
    var index = 0;

    for (var i = 0; i < group; i++) {
      index += this.groupSizes[i];
    }

    return index;
  };

  _proto.insertRules = function insertRules(group, rules) {
    if (group >= this.groupSizes.length) {
      var oldBuffer = this.groupSizes;
      var oldSize = oldBuffer.length;
      var newSize = oldSize;

      while (group >= newSize) {
        newSize <<= 1;

        if (newSize < 0) {
          throwStyledComponentsError(16, "" + group);
        }
      }

      this.groupSizes = new Uint32Array(newSize);
      this.groupSizes.set(oldBuffer);
      this.length = newSize;

      for (var i = oldSize; i < newSize; i++) {
        this.groupSizes[i] = 0;
      }
    }

    var ruleIndex = this.indexOfGroup(group + 1);

    for (var _i = 0, l = rules.length; _i < l; _i++) {
      if (this.tag.insertRule(ruleIndex, rules[_i])) {
        this.groupSizes[group]++;
        ruleIndex++;
      }
    }
  };

  _proto.clearGroup = function clearGroup(group) {
    if (group < this.length) {
      var length = this.groupSizes[group];
      var startIndex = this.indexOfGroup(group);
      var endIndex = startIndex + length;
      this.groupSizes[group] = 0;

      for (var i = startIndex; i < endIndex; i++) {
        this.tag.deleteRule(startIndex);
      }
    }
  };

  _proto.getGroup = function getGroup(group) {
    var css = '';

    if (group >= this.length || this.groupSizes[group] === 0) {
      return css;
    }

    var length = this.groupSizes[group];
    var startIndex = this.indexOfGroup(group);
    var endIndex = startIndex + length;

    for (var i = startIndex; i < endIndex; i++) {
      css += "" + this.tag.getRule(i) + SPLITTER;
    }

    return css;
  };

  return DefaultGroupedTag;
}();

// 
var MAX_SMI = 1 << 31 - 1;
var groupIDRegister = new Map();
var reverseRegister = new Map();
var nextFreeGroup = 1;
var getGroupForId = function getGroupForId(id) {
  if (groupIDRegister.has(id)) {
    return groupIDRegister.get(id);
  }

  var group = nextFreeGroup++;

  if ( true && ((group | 0) < 0 || group > MAX_SMI)) {
    throwStyledComponentsError(16, "" + group);
  }

  groupIDRegister.set(id, group);
  reverseRegister.set(group, id);
  return group;
};
var getIdForGroup = function getIdForGroup(group) {
  return reverseRegister.get(group);
};
var setGroupForId = function setGroupForId(id, group) {
  if (group >= nextFreeGroup) {
    nextFreeGroup = group + 1;
  }

  groupIDRegister.set(id, group);
  reverseRegister.set(group, id);
};

// 
var SELECTOR = "style[" + SC_ATTR + "][" + SC_ATTR_VERSION + "=\"" + SC_VERSION + "\"]";
var MARKER_RE = new RegExp("^" + SC_ATTR + "\\.g(\\d+)\\[id=\"([\\w\\d-]+)\"\\].*?\"([^\"]*)");
var outputSheet = function outputSheet(sheet) {
  var tag = sheet.getTag();
  var length = tag.length;
  var css = '';

  for (var group = 0; group < length; group++) {
    var id = getIdForGroup(group);
    if (id === undefined) continue;
    var names = sheet.names.get(id);
    var rules = tag.getGroup(group);
    if (names === undefined || rules.length === 0) continue;
    var selector = SC_ATTR + ".g" + group + "[id=\"" + id + "\"]";
    var content = '';

    if (names !== undefined) {
      names.forEach(function (name) {
        if (name.length > 0) {
          content += name + ",";
        }
      });
    } // NOTE: It's easier to collect rules and have the marker
    // after the actual rules to simplify the rehydration


    css += "" + rules + selector + "{content:\"" + content + "\"}" + SPLITTER;
  }

  return css;
};

var rehydrateNamesFromContent = function rehydrateNamesFromContent(sheet, id, content) {
  var names = content.split(',');
  var name;

  for (var i = 0, l = names.length; i < l; i++) {
    // eslint-disable-next-line
    if (name = names[i]) {
      sheet.registerName(id, name);
    }
  }
};

var rehydrateSheetFromTag = function rehydrateSheetFromTag(sheet, style) {
  var parts = style.innerHTML.split(SPLITTER);
  var rules = [];

  for (var i = 0, l = parts.length; i < l; i++) {
    var part = parts[i].trim();
    if (!part) continue;
    var marker = part.match(MARKER_RE);

    if (marker) {
      var group = parseInt(marker[1], 10) | 0;
      var id = marker[2];

      if (group !== 0) {
        // Rehydrate componentId to group index mapping
        setGroupForId(id, group); // Rehydrate names and rules
        // looks like: data-styled.g11[id="idA"]{content:"nameA,"}

        rehydrateNamesFromContent(sheet, id, marker[3]);
        sheet.getTag().insertRules(group, rules);
      }

      rules.length = 0;
    } else {
      rules.push(part);
    }
  }
};

var rehydrateSheet = function rehydrateSheet(sheet) {
  var nodes = document.querySelectorAll(SELECTOR);

  for (var i = 0, l = nodes.length; i < l; i++) {
    var node = nodes[i];

    if (node && node.getAttribute(SC_ATTR) !== SC_ATTR_ACTIVE) {
      rehydrateSheetFromTag(sheet, node);

      if (node.parentNode) {
        node.parentNode.removeChild(node);
      }
    }
  }
};

var SHOULD_REHYDRATE = IS_BROWSER;
var defaultOptions = {
  isServer: !IS_BROWSER,
  useCSSOMInjection: !DISABLE_SPEEDY
};
/** Contains the main stylesheet logic for stringification and caching */

var StyleSheet = /*#__PURE__*/function () {
  /** Register a group ID to give it an index */
  StyleSheet.registerId = function registerId(id) {
    return getGroupForId(id);
  };

  function StyleSheet(options, globalStyles, names) {
    if (options === void 0) {
      options = defaultOptions;
    }

    if (globalStyles === void 0) {
      globalStyles = {};
    }

    this.options = _extends({}, defaultOptions, {}, options);
    this.gs = globalStyles;
    this.names = new Map(names); // We rehydrate only once and use the sheet that is created first

    if (!this.options.isServer && IS_BROWSER && SHOULD_REHYDRATE) {
      SHOULD_REHYDRATE = false;
      rehydrateSheet(this);
    }
  }

  var _proto = StyleSheet.prototype;

  _proto.reconstructWithOptions = function reconstructWithOptions(options) {
    return new StyleSheet(_extends({}, this.options, {}, options), this.gs, this.names);
  };

  _proto.allocateGSInstance = function allocateGSInstance(id) {
    return this.gs[id] = (this.gs[id] || 0) + 1;
  }
  /** Lazily initialises a GroupedTag for when it's actually needed */
  ;

  _proto.getTag = function getTag() {
    return this.tag || (this.tag = makeGroupedTag(makeTag(this.options)));
  }
  /** Check whether a name is known for caching */
  ;

  _proto.hasNameForId = function hasNameForId(id, name) {
    return this.names.has(id) && this.names.get(id).has(name);
  }
  /** Mark a group's name as known for caching */
  ;

  _proto.registerName = function registerName(id, name) {
    getGroupForId(id);

    if (!this.names.has(id)) {
      var groupNames = new Set();
      groupNames.add(name);
      this.names.set(id, groupNames);
    } else {
      this.names.get(id).add(name);
    }
  }
  /** Insert new rules which also marks the name as known */
  ;

  _proto.insertRules = function insertRules(id, name, rules) {
    this.registerName(id, name);
    this.getTag().insertRules(getGroupForId(id), rules);
  }
  /** Clears all cached names for a given group ID */
  ;

  _proto.clearNames = function clearNames(id) {
    if (this.names.has(id)) {
      this.names.get(id).clear();
    }
  }
  /** Clears all rules for a given group ID */
  ;

  _proto.clearRules = function clearRules(id) {
    this.getTag().clearGroup(getGroupForId(id));
    this.clearNames(id);
  }
  /** Clears the entire tag which deletes all rules but not its names */
  ;

  _proto.clearTag = function clearTag() {
    // NOTE: This does not clear the names, since it's only used during SSR
    // so that we can continuously output only new rules
    this.tag = undefined;
  }
  /** Outputs the current sheet as a CSS string with markers for SSR */
  ;

  _proto.toString = function toString() {
    return outputSheet(this);
  };

  return StyleSheet;
}();

// 

/* eslint-disable */
var SEED = 5381; // When we have separate strings it's useful to run a progressive
// version of djb2 where we pretend that we're still looping over
// the same string

var phash = function phash(h, x) {
  var i = x.length;

  while (i) {
    h = h * 33 ^ x.charCodeAt(--i);
  }

  return h;
}; // This is a djb2 hashing function

var hash = function hash(x) {
  return phash(SEED, x);
};

/**
 * MIT License
 *
 * Copyright (c) 2016 Sultan Tarimo
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy of
 * this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or
 * sell copies of the Software and to permit persons to whom the Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
 * OR IMPLIED INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,
 * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 */

/* eslint-disable */
function insertRulePlugin (insertRule) {
  var delimiter = '/*|*/';
  var needle = delimiter + "}";

  function toSheet(block) {
    if (block) {
      try {
        insertRule(block + "}");
      } catch (e) {}
    }
  }

  return function ruleSheet(context, content, selectors, parents, line, column, length, ns, depth, at) {
    switch (context) {
      // property
      case 1:
        // @import
        if (depth === 0 && content.charCodeAt(0) === 64) return insertRule(content + ";"), '';
        break;
      // selector

      case 2:
        if (ns === 0) return content + delimiter;
        break;
      // at-rule

      case 3:
        switch (ns) {
          // @font-face, @page
          case 102:
          case 112:
            return insertRule(selectors[0] + content), '';

          default:
            return content + (at === 0 ? delimiter : '');
        }

      case -2:
        content.split(needle).forEach(toSheet);
    }
  };
}

var COMMENT_REGEX = /^\s*\/\/.*$/gm;
function createStylisInstance(_temp) {
  var _ref = _temp === void 0 ? EMPTY_OBJECT : _temp,
      _ref$options = _ref.options,
      options = _ref$options === void 0 ? EMPTY_OBJECT : _ref$options,
      _ref$plugins = _ref.plugins,
      plugins = _ref$plugins === void 0 ? EMPTY_ARRAY : _ref$plugins;

  var stylis = new _emotion_stylis__WEBPACK_IMPORTED_MODULE_3__["default"](options); // Wrap `insertRulePlugin to build a list of rules,
  // and then make our own plugin to return the rules. This
  // makes it easier to hook into the existing SSR architecture

  var parsingRules = []; // eslint-disable-next-line consistent-return

  var returnRulesPlugin = function returnRulesPlugin(context) {
    if (context === -2) {
      var parsedRules = parsingRules;
      parsingRules = [];
      return parsedRules;
    }
  };

  var parseRulesPlugin = insertRulePlugin(function (rule) {
    parsingRules.push(rule);
  });

  var _componentId;

  var _selector;

  var _selectorRegexp;

  var selfReferenceReplacer = function selfReferenceReplacer(match, offset, string) {
    if ( // the first self-ref is always untouched
    offset > 0 && // there should be at least two self-refs to do a replacement (.b > .b)
    string.slice(0, offset).indexOf(_selector) !== -1 && // no consecutive self refs (.b.b); that is a precedence boost and treated differently
    string.slice(offset - _selector.length, offset) !== _selector) {
      return "." + _componentId;
    }

    return match;
  };
  /**
   * When writing a style like
   *
   * & + & {
   *   color: red;
   * }
   *
   * The second ampersand should be a reference to the static component class. stylis
   * has no knowledge of static class so we have to intelligently replace the base selector.
   *
   * https://github.com/thysultan/stylis.js#plugins <- more info about the context phase values
   * "2" means this plugin is taking effect at the very end after all other processing is complete
   */


  var selfReferenceReplacementPlugin = function selfReferenceReplacementPlugin(context, _, selectors) {
    if (context === 2 && selectors.length && selectors[0].lastIndexOf(_selector) > 0) {
      // eslint-disable-next-line no-param-reassign
      selectors[0] = selectors[0].replace(_selectorRegexp, selfReferenceReplacer);
    }
  };

  stylis.use([].concat(plugins, [selfReferenceReplacementPlugin, parseRulesPlugin, returnRulesPlugin]));

  function stringifyRules(css, selector, prefix, componentId) {
    if (componentId === void 0) {
      componentId = '&';
    }

    var flatCSS = css.replace(COMMENT_REGEX, '');
    var cssStr = selector && prefix ? prefix + " " + selector + " { " + flatCSS + " }" : flatCSS; // stylis has no concept of state to be passed to plugins
    // but since JS is single=threaded, we can rely on that to ensure
    // these properties stay in sync with the current stylis run

    _componentId = componentId;
    _selector = selector;
    _selectorRegexp = new RegExp("\\" + _selector + "\\b", 'g');
    return stylis(prefix || !selector ? '' : selector, cssStr);
  }

  stringifyRules.hash = plugins.length ? plugins.reduce(function (acc, plugin) {
    if (!plugin.name) {
      throwStyledComponentsError(15);
    }

    return phash(acc, plugin.name);
  }, SEED).toString() : '';
  return stringifyRules;
}

// 
var StyleSheetContext = react__WEBPACK_IMPORTED_MODULE_1___default.a.createContext();
var StyleSheetConsumer = StyleSheetContext.Consumer;
var StylisContext = react__WEBPACK_IMPORTED_MODULE_1___default.a.createContext();
var StylisConsumer = StylisContext.Consumer;
var masterSheet = new StyleSheet();
var masterStylis = createStylisInstance();
function useStyleSheet() {
  return Object(react__WEBPACK_IMPORTED_MODULE_1__["useContext"])(StyleSheetContext) || masterSheet;
}
function useStylis() {
  return Object(react__WEBPACK_IMPORTED_MODULE_1__["useContext"])(StylisContext) || masterStylis;
}
function StyleSheetManager(props) {
  var _useState = Object(react__WEBPACK_IMPORTED_MODULE_1__["useState"])(props.stylisPlugins),
      plugins = _useState[0],
      setPlugins = _useState[1];

  var contextStyleSheet = useStyleSheet();
  var styleSheet = Object(react__WEBPACK_IMPORTED_MODULE_1__["useMemo"])(function () {
    var sheet = contextStyleSheet;

    if (props.sheet) {
      // eslint-disable-next-line prefer-destructuring
      sheet = props.sheet;
    } else if (props.target) {
      sheet = sheet.reconstructWithOptions({
        target: props.target
      });
    }

    if (props.disableCSSOMInjection) {
      sheet = sheet.reconstructWithOptions({
        useCSSOMInjection: false
      });
    }

    return sheet;
  }, [props.disableCSSOMInjection, props.sheet, props.target]);
  var stylis = Object(react__WEBPACK_IMPORTED_MODULE_1__["useMemo"])(function () {
    return createStylisInstance({
      options: {
        prefix: !props.disableVendorPrefixes
      },
      plugins: plugins
    });
  }, [props.disableVendorPrefixes, plugins]);
  Object(react__WEBPACK_IMPORTED_MODULE_1__["useEffect"])(function () {
    if (!shallowequal__WEBPACK_IMPORTED_MODULE_2___default()(plugins, props.stylisPlugins)) setPlugins(props.stylisPlugins);
  }, [props.stylisPlugins]);
  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1___default.a.createElement(StyleSheetContext.Provider, {
    value: styleSheet
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1___default.a.createElement(StylisContext.Provider, {
    value: stylis
  },  true ? react__WEBPACK_IMPORTED_MODULE_1___default.a.Children.only(props.children) : undefined));
}

// 

var Keyframes = /*#__PURE__*/function () {
  function Keyframes(name, stringifyArgs) {
    var _this = this;

    this.inject = function (styleSheet) {
      if (!styleSheet.hasNameForId(_this.id, _this.name)) {
        styleSheet.insertRules(_this.id, _this.name, masterStylis.apply(void 0, _this.stringifyArgs));
      }
    };

    this.toString = function () {
      return throwStyledComponentsError(12, String(_this.name));
    };

    this.name = name;
    this.id = "sc-keyframes-" + name;
    this.stringifyArgs = stringifyArgs;
  }

  var _proto = Keyframes.prototype;

  _proto.getName = function getName() {
    return this.name;
  };

  return Keyframes;
}();

// 

/**
 * inlined version of
 * https://github.com/facebook/fbjs/blob/master/packages/fbjs/src/core/hyphenateStyleName.js
 */
var uppercasePattern = /([A-Z])/g;
var msPattern = /^ms-/;
/**
 * Hyphenates a camelcased CSS property name, for example:
 *
 *   > hyphenateStyleName('backgroundColor')
 *   < "background-color"
 *   > hyphenateStyleName('MozTransition')
 *   < "-moz-transition"
 *   > hyphenateStyleName('msTransition')
 *   < "-ms-transition"
 *
 * As Modernizr suggests (http://modernizr.com/docs/#prefixed), an `ms` prefix
 * is converted to `-ms-`.
 *
 * @param {string} string
 * @return {string}
 */

function hyphenateStyleName(string) {
  return string.replace(uppercasePattern, '-$1').toLowerCase().replace(msPattern, '-ms-');
}

// 

function addUnitIfNeeded(name, value) {
  // https://github.com/amilajack/eslint-plugin-flowtype-errors/issues/133
  // $FlowFixMe
  if (value == null || typeof value === 'boolean' || value === '') {
    return '';
  }

  if (typeof value === 'number' && value !== 0 && !(name in _emotion_unitless__WEBPACK_IMPORTED_MODULE_4__["default"])) {
    return value + "px"; // Presumes implicit 'px' suffix for unitless numbers
  }

  return String(value).trim();
}

// 
/**
 * It's falsish not falsy because 0 is allowed.
 */

var isFalsish = function isFalsish(chunk) {
  return chunk === undefined || chunk === null || chunk === false || chunk === '';
};

var objToCssArray = function objToCssArray(obj, prevKey) {
  var rules = [];
  var keys = Object.keys(obj);
  keys.forEach(function (key) {
    if (!isFalsish(obj[key])) {
      if (isPlainObject(obj[key])) {
        rules.push.apply(rules, objToCssArray(obj[key], key));
        return rules;
      } else if (isFunction(obj[key])) {
        rules.push(hyphenateStyleName(key) + ":", obj[key], ';');
        return rules;
      }

      rules.push(hyphenateStyleName(key) + ": " + addUnitIfNeeded(key, obj[key]) + ";");
    }

    return rules;
  });
  return prevKey ? [prevKey + " {"].concat(rules, ['}']) : rules;
};
function flatten(chunk, executionContext, styleSheet) {
  if (Array.isArray(chunk)) {
    var ruleSet = [];

    for (var i = 0, len = chunk.length, result; i < len; i += 1) {
      result = flatten(chunk[i], executionContext, styleSheet);
      if (result === '') continue;else if (Array.isArray(result)) ruleSet.push.apply(ruleSet, result);else ruleSet.push(result);
    }

    return ruleSet;
  }

  if (isFalsish(chunk)) {
    return '';
  }
  /* Handle other components */


  if (isStyledComponent(chunk)) {
    return "." + chunk.styledComponentId;
  }
  /* Either execute or defer the function */


  if (isFunction(chunk)) {
    if (isStatelessFunction(chunk) && executionContext) {
      var _result = chunk(executionContext);

      if ( true && Object(react_is__WEBPACK_IMPORTED_MODULE_0__["isElement"])(_result)) {
        // eslint-disable-next-line no-console
        console.warn(getComponentName(chunk) + " is not a styled component and cannot be referred to via component selector. See https://www.styled-components.com/docs/advanced#referring-to-other-components for more details.");
      }

      return flatten(_result, executionContext, styleSheet);
    } else return chunk;
  }

  if (chunk instanceof Keyframes) {
    if (styleSheet) {
      chunk.inject(styleSheet);
      return chunk.getName();
    } else return chunk;
  }
  /* Handle objects */


  return isPlainObject(chunk) ? objToCssArray(chunk) : chunk.toString();
}

// 
function css(styles) {
  for (var _len = arguments.length, interpolations = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
    interpolations[_key - 1] = arguments[_key];
  }

  if (isFunction(styles) || isPlainObject(styles)) {
    // $FlowFixMe
    return flatten(interleave(EMPTY_ARRAY, [styles].concat(interpolations)));
  }

  if (interpolations.length === 0 && styles.length === 1 && typeof styles[0] === "string") {
    // $FlowFixMe
    return styles;
  } // $FlowFixMe


  return flatten(interleave(styles, interpolations));
}

function constructWithOptions(componentConstructor, tag, options) {
  if (options === void 0) {
    options = EMPTY_OBJECT;
  }

  if (!Object(react_is__WEBPACK_IMPORTED_MODULE_0__["isValidElementType"])(tag)) {
    return throwStyledComponentsError(1, String(tag));
  }
  /* This is callable directly as a template function */
  // $FlowFixMe: Not typed to avoid destructuring arguments


  var templateFunction = function templateFunction() {
    return componentConstructor(tag, options, css.apply(void 0, arguments));
  };
  /* If config methods are called, wrap up a new template function and merge options */


  templateFunction.withConfig = function (config) {
    return constructWithOptions(componentConstructor, tag, _extends({}, options, {}, config));
  };
  /* Modify/inject new props at runtime */


  templateFunction.attrs = function (attrs) {
    return constructWithOptions(componentConstructor, tag, _extends({}, options, {
      attrs: Array.prototype.concat(options.attrs, attrs).filter(Boolean)
    }));
  };

  return templateFunction;
}

/* eslint-disable */

/**
  mixin-deep; https://github.com/jonschlinkert/mixin-deep
  Inlined such that it will be consistently transpiled to an IE-compatible syntax.

  The MIT License (MIT)

  Copyright (c) 2014-present, Jon Schlinkert.

  Permission is hereby granted, free of charge, to any person obtaining a copy
  of this software and associated documentation files (the "Software"), to deal
  in the Software without restriction, including without limitation the rights
  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
  copies of the Software, and to permit persons to whom the Software is
  furnished to do so, subject to the following conditions:

  The above copyright notice and this permission notice shall be included in
  all copies or substantial portions of the Software.

  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
  THE SOFTWARE.
*/
var isObject = function isObject(val) {
  return typeof val === 'function' || typeof val === 'object' && val !== null && !Array.isArray(val);
};

var isValidKey = function isValidKey(key) {
  return key !== '__proto__' && key !== 'constructor' && key !== 'prototype';
};

function mixin(target, val, key) {
  var obj = target[key];

  if (isObject(val) && isObject(obj)) {
    mixinDeep(obj, val);
  } else {
    target[key] = val;
  }
}

function mixinDeep(target) {
  for (var _len = arguments.length, rest = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
    rest[_key - 1] = arguments[_key];
  }

  for (var _i = 0, _rest = rest; _i < _rest.length; _i++) {
    var obj = _rest[_i];

    if (isObject(obj)) {
      for (var key in obj) {
        if (isValidKey(key)) {
          mixin(target, obj[key], key);
        }
      }
    }
  }

  return target;
}

// 

/* eslint-disable no-bitwise */
var AD_REPLACER_R = /(a)(d)/gi;
/* This is the "capacity" of our alphabet i.e. 2x26 for all letters plus their capitalised
 * counterparts */

var charsLength = 52;
/* start at 75 for 'a' until 'z' (25) and then start at 65 for capitalised letters */

var getAlphabeticChar = function getAlphabeticChar(code) {
  return String.fromCharCode(code + (code > 25 ? 39 : 97));
};
/* input a number, usually a hash and convert it to base-52 */


function generateAlphabeticName(code) {
  var name = '';
  var x;
  /* get a char and divide by alphabet-length */

  for (x = Math.abs(code); x > charsLength; x = x / charsLength | 0) {
    name = getAlphabeticChar(x % charsLength) + name;
  }

  return (getAlphabeticChar(x % charsLength) + name).replace(AD_REPLACER_R, '$1-$2');
}

// 
function isStaticRules(rules) {
  for (var i = 0; i < rules.length; i += 1) {
    var rule = rules[i];

    if (isFunction(rule) && !isStyledComponent(rule)) {
      // functions are allowed to be static if they're just being
      // used to get the classname of a nested styled component
      return false;
    }
  }

  return true;
}

// 
/*
 ComponentStyle is all the CSS-specific stuff, not
 the React-specific stuff.
 */

var ComponentStyle = /*#__PURE__*/function () {
  function ComponentStyle(rules, componentId) {
    this.rules = rules;
    this.staticRulesId = '';
    this.isStatic =  false && false;
    this.componentId = componentId;
    this.baseHash = hash(componentId); // NOTE: This registers the componentId, which ensures a consistent order
    // for this component's styles compared to others

    StyleSheet.registerId(componentId);
  }
  /*
   * Flattens a rule set into valid CSS
   * Hashes it, wraps the whole chunk in a .hash1234 {}
   * Returns the hash to be injected on render()
   * */


  var _proto = ComponentStyle.prototype;

  _proto.generateAndInjectStyles = function generateAndInjectStyles(executionContext, styleSheet, stylis) {
    var componentId = this.componentId; // force dynamic classnames if user-supplied stylis plugins are in use

    if (this.isStatic && !stylis.hash) {
      if (this.staticRulesId && styleSheet.hasNameForId(componentId, this.staticRulesId)) {
        return this.staticRulesId;
      }

      var cssStatic = flatten(this.rules, executionContext, styleSheet).join('');
      var name = generateAlphabeticName(phash(this.baseHash, cssStatic.length) >>> 0);

      if (!styleSheet.hasNameForId(componentId, name)) {
        var cssStaticFormatted = stylis(cssStatic, "." + name, undefined, componentId);
        styleSheet.insertRules(componentId, name, cssStaticFormatted);
      }

      this.staticRulesId = name;
      return name;
    } else {
      var length = this.rules.length;
      var dynamicHash = phash(this.baseHash, stylis.hash);
      var css = '';

      for (var i = 0; i < length; i++) {
        var partRule = this.rules[i];

        if (typeof partRule === 'string') {
          css += partRule;
          if (true) dynamicHash = phash(dynamicHash, partRule + i);
        } else {
          var partChunk = flatten(partRule, executionContext, styleSheet);
          var partString = Array.isArray(partChunk) ? partChunk.join('') : partChunk;
          dynamicHash = phash(dynamicHash, partString + i);
          css += partString;
        }
      }

      var _name = generateAlphabeticName(dynamicHash >>> 0);

      if (!styleSheet.hasNameForId(componentId, _name)) {
        var cssFormatted = stylis(css, "." + _name, undefined, componentId);
        styleSheet.insertRules(componentId, _name, cssFormatted);
      }

      return _name;
    }
  };

  return ComponentStyle;
}();

// 
var LIMIT = 200;
var createWarnTooManyClasses = (function (displayName, componentId) {
  var generatedClasses = {};
  var warningSeen = false;
  return function (className) {
    if (!warningSeen) {
      generatedClasses[className] = true;

      if (Object.keys(generatedClasses).length >= LIMIT) {
        // Unable to find latestRule in test environment.

        /* eslint-disable no-console, prefer-template */
        var parsedIdString = componentId ? " with the id of \"" + componentId + "\"" : '';
        console.warn("Over " + LIMIT + " classes were generated for component " + displayName + parsedIdString + ".\n" + 'Consider using the attrs method, together with a style object for frequently changed styles.\n' + 'Example:\n' + '  const Component = styled.div.attrs(props => ({\n' + '    style: {\n' + '      background: props.background,\n' + '    },\n' + '  }))`width: 100%;`\n\n' + '  <Component />');
        warningSeen = true;
        generatedClasses = {};
      }
    }
  };
});

// 
var invalidHookCallRe = /invalid hook call/i;
var seen = new Set();
var checkDynamicCreation = function checkDynamicCreation(displayName, componentId) {
  if (true) {
    var parsedIdString = componentId ? " with the id of \"" + componentId + "\"" : '';
    var message = "The component " + displayName + parsedIdString + " has been created dynamically.\n" + 'You may see this warning because you\'ve called styled inside another component.\n' + 'To resolve this only create new StyledComponents outside of any render method and function component.';

    try {
      // We purposefully call `useRef` outside of a component and expect it to throw
      // If it doesn't, then we're inside another component.
      // eslint-disable-next-line react-hooks/rules-of-hooks
      Object(react__WEBPACK_IMPORTED_MODULE_1__["useRef"])();

      if (!seen.has(message)) {
        // eslint-disable-next-line no-console
        console.warn(message);
        seen.add(message);
      }
    } catch (error) {
      // The error here is expected, since we're expecting anything that uses `checkDynamicCreation` to
      // be called outside of a React component.
      if (invalidHookCallRe.test(error.message)) {
        // This shouldn't happen, but resets `warningSeen` if we had this error happen intermittently
        seen["delete"](message);
      }
    }
  }
};

// 
var determineTheme = (function (props, providedTheme, defaultProps) {
  if (defaultProps === void 0) {
    defaultProps = EMPTY_OBJECT;
  }

  return props.theme !== defaultProps.theme && props.theme || providedTheme || defaultProps.theme;
});

// 
var escapeRegex = /[[\].#*$><+~=|^:(),"'`-]+/g;
var dashesAtEnds = /(^-|-$)/g;
/**
 * TODO: Explore using CSS.escape when it becomes more available
 * in evergreen browsers.
 */

function escape(str) {
  return str // Replace all possible CSS selectors
  .replace(escapeRegex, '-') // Remove extraneous hyphens at the start and end
  .replace(dashesAtEnds, '');
}

// 
function isTag(target) {
  return typeof target === 'string' && ( true ? target.charAt(0) === target.charAt(0).toLowerCase() : undefined);
}

// 
function generateDisplayName(target) {
  // $FlowFixMe
  return isTag(target) ? "styled." + target : "Styled(" + getComponentName(target) + ")";
}

// 
var generateComponentId = (function (str) {
  return generateAlphabeticName(hash(str) >>> 0);
});

/**
 * Convenience function for joining strings to form className chains
 */
function joinStrings(a, b) {
  return a && b ? a + " " + b : a || b;
}

var ThemeContext = react__WEBPACK_IMPORTED_MODULE_1___default.a.createContext();
var ThemeConsumer = ThemeContext.Consumer;

function mergeTheme(theme, outerTheme) {
  if (!theme) {
    return throwStyledComponentsError(14);
  }

  if (isFunction(theme)) {
    var mergedTheme = theme(outerTheme);

    if ( true && (mergedTheme === null || Array.isArray(mergedTheme) || typeof mergedTheme !== 'object')) {
      return throwStyledComponentsError(7);
    }

    return mergedTheme;
  }

  if (Array.isArray(theme) || typeof theme !== 'object') {
    return throwStyledComponentsError(8);
  }

  return outerTheme ? _extends({}, outerTheme, {}, theme) : theme;
}
/**
 * Provide a theme to an entire react component tree via context
 */


function ThemeProvider(props) {
  var outerTheme = Object(react__WEBPACK_IMPORTED_MODULE_1__["useContext"])(ThemeContext);
  var themeContext = Object(react__WEBPACK_IMPORTED_MODULE_1__["useMemo"])(function () {
    return mergeTheme(props.theme, outerTheme);
  }, [props.theme, outerTheme]);

  if (!props.children) {
    return null;
  }

  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1___default.a.createElement(ThemeContext.Provider, {
    value: themeContext
  }, props.children);
}

/* global $Call */

var identifiers = {};
/* We depend on components having unique IDs */

function generateId(displayName, parentComponentId) {
  var name = typeof displayName !== 'string' ? 'sc' : escape(displayName); // Ensure that no displayName can lead to duplicate componentIds

  identifiers[name] = (identifiers[name] || 0) + 1;
  var componentId = name + "-" + generateComponentId(name + identifiers[name]);
  return parentComponentId ? parentComponentId + "-" + componentId : componentId;
}

function useResolvedAttrs(theme, props, attrs) {
  if (theme === void 0) {
    theme = EMPTY_OBJECT;
  }

  // NOTE: can't memoize this
  // returns [context, resolvedAttrs]
  // where resolvedAttrs is only the things injected by the attrs themselves
  var context = _extends({}, props, {
    theme: theme
  });

  var resolvedAttrs = {};
  attrs.forEach(function (attrDef) {
    var resolvedAttrDef = attrDef;
    var key;

    if (isFunction(resolvedAttrDef)) {
      resolvedAttrDef = resolvedAttrDef(context);
    }
    /* eslint-disable guard-for-in */


    for (key in resolvedAttrDef) {
      context[key] = resolvedAttrs[key] = key === 'className' ? joinStrings(resolvedAttrs[key], resolvedAttrDef[key]) : resolvedAttrDef[key];
    }
    /* eslint-enable guard-for-in */

  });
  return [context, resolvedAttrs];
}

function useInjectedStyle(componentStyle, hasAttrs, resolvedAttrs, warnTooManyClasses) {
  var styleSheet = useStyleSheet();
  var stylis = useStylis(); // statically styled-components don't need to build an execution context object,
  // and shouldn't be increasing the number of class names

  var isStatic = componentStyle.isStatic && !hasAttrs;
  var className = isStatic ? componentStyle.generateAndInjectStyles(EMPTY_OBJECT, styleSheet, stylis) : componentStyle.generateAndInjectStyles(resolvedAttrs, styleSheet, stylis);
  Object(react__WEBPACK_IMPORTED_MODULE_1__["useDebugValue"])(className);

  if ( true && !isStatic && warnTooManyClasses) {
    warnTooManyClasses(className);
  }

  return className;
}

function useStyledComponentImpl(forwardedComponent, props, forwardedRef) {
  var componentAttrs = forwardedComponent.attrs,
      componentStyle = forwardedComponent.componentStyle,
      defaultProps = forwardedComponent.defaultProps,
      foldedComponentIds = forwardedComponent.foldedComponentIds,
      shouldForwardProp = forwardedComponent.shouldForwardProp,
      styledComponentId = forwardedComponent.styledComponentId,
      target = forwardedComponent.target;
  Object(react__WEBPACK_IMPORTED_MODULE_1__["useDebugValue"])(styledComponentId); // NOTE: the non-hooks version only subscribes to this when !componentStyle.isStatic,
  // but that'd be against the rules-of-hooks. We could be naughty and do it anyway as it
  // should be an immutable value, but behave for now.

  var theme = determineTheme(props, Object(react__WEBPACK_IMPORTED_MODULE_1__["useContext"])(ThemeContext), defaultProps);

  var _useResolvedAttrs = useResolvedAttrs(theme || EMPTY_OBJECT, props, componentAttrs),
      context = _useResolvedAttrs[0],
      attrs = _useResolvedAttrs[1];

  var generatedClassName = useInjectedStyle(componentStyle, componentAttrs.length > 0, context,  true ? forwardedComponent.warnTooManyClasses : undefined);
  var refToForward = forwardedRef;
  var elementToBeCreated = attrs.$as || props.$as || attrs.as || props.as || target;
  var isTargetTag = isTag(elementToBeCreated);
  var computedProps = attrs !== props ? _extends({}, props, {}, attrs) : props;
  var propFilterFn = shouldForwardProp || isTargetTag && _emotion_is_prop_valid__WEBPACK_IMPORTED_MODULE_5__["default"];
  var propsForElement = {}; // eslint-disable-next-line guard-for-in

  for (var key in computedProps) {
    if (key[0] === '$' || key === 'as') continue;else if (key === 'forwardedAs') {
      propsForElement.as = computedProps[key];
    } else if (!propFilterFn || propFilterFn(key, _emotion_is_prop_valid__WEBPACK_IMPORTED_MODULE_5__["default"])) {
      // Don't pass through non HTML tags through to HTML elements
      propsForElement[key] = computedProps[key];
    }
  }

  if (props.style && attrs.style !== props.style) {
    propsForElement.style = _extends({}, props.style, {}, attrs.style);
  }

  propsForElement.className = Array.prototype.concat(foldedComponentIds, styledComponentId, generatedClassName !== styledComponentId ? generatedClassName : null, props.className, attrs.className).filter(Boolean).join(' ');
  propsForElement.ref = refToForward;
  return Object(react__WEBPACK_IMPORTED_MODULE_1__["createElement"])(elementToBeCreated, propsForElement);
}

function createStyledComponent(target, options, rules) {
  var isTargetStyledComp = isStyledComponent(target);
  var isCompositeComponent = !isTag(target);
  var _options$displayName = options.displayName,
      displayName = _options$displayName === void 0 ? generateDisplayName(target) : _options$displayName,
      _options$componentId = options.componentId,
      componentId = _options$componentId === void 0 ? generateId(options.displayName, options.parentComponentId) : _options$componentId,
      _options$attrs = options.attrs,
      attrs = _options$attrs === void 0 ? EMPTY_ARRAY : _options$attrs;
  var styledComponentId = options.displayName && options.componentId ? escape(options.displayName) + "-" + options.componentId : options.componentId || componentId; // fold the underlying StyledComponent attrs up (implicit extend)

  var finalAttrs = // $FlowFixMe
  isTargetStyledComp && target.attrs ? Array.prototype.concat(target.attrs, attrs).filter(Boolean) : attrs; // eslint-disable-next-line prefer-destructuring

  var shouldForwardProp = options.shouldForwardProp; // $FlowFixMe

  if (isTargetStyledComp && target.shouldForwardProp) {
    if (shouldForwardProp) {
      // compose nested shouldForwardProp calls
      shouldForwardProp = function shouldForwardProp(prop, filterFn) {
        return (// $FlowFixMe
          target.shouldForwardProp(prop, filterFn) && options.shouldForwardProp(prop, filterFn)
        );
      };
    } else {
      // eslint-disable-next-line prefer-destructuring
      shouldForwardProp = target.shouldForwardProp;
    }
  }

  var componentStyle = new ComponentStyle(isTargetStyledComp ? // fold the underlying StyledComponent rules up (implicit extend)
  // $FlowFixMe
  target.componentStyle.rules.concat(rules) : rules, styledComponentId);
  /**
   * forwardRef creates a new interim component, which we'll take advantage of
   * instead of extending ParentComponent to create _another_ interim class
   */

  var WrappedStyledComponent; // eslint-disable-next-line react-hooks/rules-of-hooks

  var forwardRef = function forwardRef(props, ref) {
    return useStyledComponentImpl(WrappedStyledComponent, props, ref);
  };

  forwardRef.displayName = displayName; // $FlowFixMe this is a forced cast to merge it StyledComponentWrapperProperties

  WrappedStyledComponent = react__WEBPACK_IMPORTED_MODULE_1___default.a.forwardRef(forwardRef);
  WrappedStyledComponent.attrs = finalAttrs;
  WrappedStyledComponent.componentStyle = componentStyle;
  WrappedStyledComponent.displayName = displayName;
  WrappedStyledComponent.shouldForwardProp = shouldForwardProp; // this static is used to preserve the cascade of static classes for component selector
  // purposes; this is especially important with usage of the css prop

  WrappedStyledComponent.foldedComponentIds = isTargetStyledComp ? // $FlowFixMe
  Array.prototype.concat(target.foldedComponentIds, target.styledComponentId) : EMPTY_ARRAY;
  WrappedStyledComponent.styledComponentId = styledComponentId; // fold the underlying StyledComponent target up since we folded the styles

  WrappedStyledComponent.target = isTargetStyledComp ? // $FlowFixMe
  target.target : target; // $FlowFixMe

  WrappedStyledComponent.withComponent = function withComponent(tag) {
    var previousComponentId = options.componentId,
        optionsToCopy = _objectWithoutPropertiesLoose(options, ["componentId"]);

    var newComponentId = previousComponentId && previousComponentId + "-" + (isTag(tag) ? tag : escape(getComponentName(tag)));

    var newOptions = _extends({}, optionsToCopy, {
      attrs: finalAttrs,
      componentId: newComponentId
    });

    return createStyledComponent(tag, newOptions, rules);
  }; // $FlowFixMe


  Object.defineProperty(WrappedStyledComponent, 'defaultProps', {
    get: function get() {
      return this._foldedDefaultProps;
    },
    set: function set(obj) {
      // $FlowFixMe
      this._foldedDefaultProps = isTargetStyledComp ? mixinDeep({}, target.defaultProps, obj) : obj;
    }
  });

  if (true) {
    checkDynamicCreation(displayName, styledComponentId);
    WrappedStyledComponent.warnTooManyClasses = createWarnTooManyClasses(displayName, styledComponentId);
  } // $FlowFixMe


  WrappedStyledComponent.toString = function () {
    return "." + WrappedStyledComponent.styledComponentId;
  };

  if (isCompositeComponent) {
    hoist_non_react_statics__WEBPACK_IMPORTED_MODULE_6___default()(WrappedStyledComponent, target, {
      // all SC-specific things should not be hoisted
      attrs: true,
      componentStyle: true,
      displayName: true,
      foldedComponentIds: true,
      shouldForwardProp: true,
      self: true,
      styledComponentId: true,
      target: true,
      withComponent: true
    });
  }

  return WrappedStyledComponent;
}

// 
// Thanks to ReactDOMFactories for this handy list!
var domElements = ['a', 'abbr', 'address', 'area', 'article', 'aside', 'audio', 'b', 'base', 'bdi', 'bdo', 'big', 'blockquote', 'body', 'br', 'button', 'canvas', 'caption', 'cite', 'code', 'col', 'colgroup', 'data', 'datalist', 'dd', 'del', 'details', 'dfn', 'dialog', 'div', 'dl', 'dt', 'em', 'embed', 'fieldset', 'figcaption', 'figure', 'footer', 'form', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'head', 'header', 'hgroup', 'hr', 'html', 'i', 'iframe', 'img', 'input', 'ins', 'kbd', 'keygen', 'label', 'legend', 'li', 'link', 'main', 'map', 'mark', 'marquee', 'menu', 'menuitem', 'meta', 'meter', 'nav', 'noscript', 'object', 'ol', 'optgroup', 'option', 'output', 'p', 'param', 'picture', 'pre', 'progress', 'q', 'rp', 'rt', 'ruby', 's', 'samp', 'script', 'section', 'select', 'small', 'source', 'span', 'strong', 'style', 'sub', 'summary', 'sup', 'table', 'tbody', 'td', 'textarea', 'tfoot', 'th', 'thead', 'time', 'title', 'tr', 'track', 'u', 'ul', 'var', 'video', 'wbr', // SVG
'circle', 'clipPath', 'defs', 'ellipse', 'foreignObject', 'g', 'image', 'line', 'linearGradient', 'marker', 'mask', 'path', 'pattern', 'polygon', 'polyline', 'radialGradient', 'rect', 'stop', 'svg', 'text', 'tspan'];

// 

var styled = function styled(tag) {
  return constructWithOptions(createStyledComponent, tag);
}; // Shorthands for all valid HTML Elements


domElements.forEach(function (domElement) {
  styled[domElement] = styled(domElement);
});

// 

var GlobalStyle = /*#__PURE__*/function () {
  function GlobalStyle(rules, componentId) {
    this.rules = rules;
    this.componentId = componentId;
    this.isStatic = isStaticRules(rules);
  }

  var _proto = GlobalStyle.prototype;

  _proto.createStyles = function createStyles(instance, executionContext, styleSheet, stylis) {
    var flatCSS = flatten(this.rules, executionContext, styleSheet);
    var css = stylis(flatCSS.join(''), '');
    var id = this.componentId + instance; // NOTE: We use the id as a name as well, since these rules never change

    styleSheet.insertRules(id, id, css);
  };

  _proto.removeStyles = function removeStyles(instance, styleSheet) {
    styleSheet.clearRules(this.componentId + instance);
  };

  _proto.renderStyles = function renderStyles(instance, executionContext, styleSheet, stylis) {
    StyleSheet.registerId(this.componentId + instance); // NOTE: Remove old styles, then inject the new ones

    this.removeStyles(instance, styleSheet);
    this.createStyles(instance, executionContext, styleSheet, stylis);
  };

  return GlobalStyle;
}();

function createGlobalStyle(strings) {
  for (var _len = arguments.length, interpolations = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
    interpolations[_key - 1] = arguments[_key];
  }

  var rules = css.apply(void 0, [strings].concat(interpolations));
  var styledComponentId = "sc-global-" + generateComponentId(JSON.stringify(rules));
  var globalStyle = new GlobalStyle(rules, styledComponentId);

  if (true) {
    checkDynamicCreation(styledComponentId);
  }

  function GlobalStyleComponent(props) {
    var styleSheet = useStyleSheet();
    var stylis = useStylis();
    var theme = Object(react__WEBPACK_IMPORTED_MODULE_1__["useContext"])(ThemeContext);
    var instanceRef = Object(react__WEBPACK_IMPORTED_MODULE_1__["useRef"])(null);

    if (instanceRef.current === null) {
      instanceRef.current = styleSheet.allocateGSInstance(styledComponentId);
    }

    var instance = instanceRef.current;

    if ( true && react__WEBPACK_IMPORTED_MODULE_1___default.a.Children.count(props.children)) {
      // eslint-disable-next-line no-console
      console.warn("The global style component " + styledComponentId + " was given child JSX. createGlobalStyle does not render children.");
    }

    if ( true && rules.some(function (rule) {
      return typeof rule === 'string' && rule.indexOf('@import') !== -1;
    })) {
      console.warn("Please do not use @import CSS syntax in createGlobalStyle at this time, as the CSSOM APIs we use in production do not handle it well. Instead, we recommend using a library such as react-helmet to inject a typical <link> meta tag to the stylesheet, or simply embedding it manually in your index.html <head> section for a simpler app.");
    }

    if (globalStyle.isStatic) {
      globalStyle.renderStyles(instance, STATIC_EXECUTION_CONTEXT, styleSheet, stylis);
    } else {
      var context = _extends({}, props, {
        theme: determineTheme(props, theme, GlobalStyleComponent.defaultProps)
      });

      globalStyle.renderStyles(instance, context, styleSheet, stylis);
    }

    Object(react__WEBPACK_IMPORTED_MODULE_1__["useEffect"])(function () {
      return function () {
        return globalStyle.removeStyles(instance, styleSheet);
      };
    }, EMPTY_ARRAY);
    return null;
  } // $FlowFixMe


  return react__WEBPACK_IMPORTED_MODULE_1___default.a.memo(GlobalStyleComponent);
}

// 
function keyframes(strings) {
  /* Warning if you've used keyframes on React Native */
  if ( true && typeof navigator !== 'undefined' && navigator.product === 'ReactNative') {
    // eslint-disable-next-line no-console
    console.warn('`keyframes` cannot be used on ReactNative, only on the web. To do animation in ReactNative please use Animated.');
  }

  for (var _len = arguments.length, interpolations = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
    interpolations[_key - 1] = arguments[_key];
  }

  var rules = css.apply(void 0, [strings].concat(interpolations)).join('');
  var name = generateComponentId(rules);
  return new Keyframes(name, [rules, name, '@keyframes']);
}

var ServerStyleSheet = /*#__PURE__*/function () {
  function ServerStyleSheet() {
    var _this = this;

    this._emitSheetCSS = function () {
      var css = _this.instance.toString();

      var nonce = getNonce();
      var attrs = [nonce && "nonce=\"" + nonce + "\"", SC_ATTR + "=\"true\"", SC_ATTR_VERSION + "=\"" + SC_VERSION + "\""];
      var htmlAttr = attrs.filter(Boolean).join(' ');
      return "<style " + htmlAttr + ">" + css + "</style>";
    };

    this.getStyleTags = function () {
      if (_this.sealed) {
        return throwStyledComponentsError(2);
      }

      return _this._emitSheetCSS();
    };

    this.getStyleElement = function () {
      var _props;

      if (_this.sealed) {
        return throwStyledComponentsError(2);
      }

      var props = (_props = {}, _props[SC_ATTR] = '', _props[SC_ATTR_VERSION] = SC_VERSION, _props.dangerouslySetInnerHTML = {
        __html: _this.instance.toString()
      }, _props);
      var nonce = getNonce();

      if (nonce) {
        props.nonce = nonce;
      } // v4 returned an array for this fn, so we'll do the same for v5 for backward compat


      return [/*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1___default.a.createElement("style", _extends({}, props, {
        key: "sc-0-0"
      }))];
    };

    this.seal = function () {
      _this.sealed = true;
    };

    this.instance = new StyleSheet({
      isServer: true
    });
    this.sealed = false;
  }

  var _proto = ServerStyleSheet.prototype;

  _proto.collectStyles = function collectStyles(children) {
    if (this.sealed) {
      return throwStyledComponentsError(2);
    }

    return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1___default.a.createElement(StyleSheetManager, {
      sheet: this.instance
    }, children);
  };

  // eslint-disable-next-line consistent-return
  _proto.interleaveWithNodeStream = function interleaveWithNodeStream(input) {
    {
      return throwStyledComponentsError(3);
    }
  };

  return ServerStyleSheet;
}();

// export default <Config: { theme?: any }, Instance>(
//  Component: AbstractComponent<Config, Instance>
// ): AbstractComponent<$Diff<Config, { theme?: any }> & { theme?: any }, Instance>
//
// but the old build system tooling doesn't support the syntax

var withTheme = (function (Component) {
  // $FlowFixMe This should be React.forwardRef<Config, Instance>
  var WithTheme = react__WEBPACK_IMPORTED_MODULE_1___default.a.forwardRef(function (props, ref) {
    var theme = Object(react__WEBPACK_IMPORTED_MODULE_1__["useContext"])(ThemeContext); // $FlowFixMe defaultProps isn't declared so it can be inferrable

    var defaultProps = Component.defaultProps;
    var themeProp = determineTheme(props, theme, defaultProps);

    if ( true && themeProp === undefined) {
      // eslint-disable-next-line no-console
      console.warn("[withTheme] You are not using a ThemeProvider nor passing a theme prop or a theme in defaultProps in component class \"" + getComponentName(Component) + "\"");
    }

    return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1___default.a.createElement(Component, _extends({}, props, {
      theme: themeProp,
      ref: ref
    }));
  });
  hoist_non_react_statics__WEBPACK_IMPORTED_MODULE_6___default()(WithTheme, Component);
  WithTheme.displayName = "WithTheme(" + getComponentName(Component) + ")";
  return WithTheme;
});

// 

var useTheme = function useTheme() {
  return Object(react__WEBPACK_IMPORTED_MODULE_1__["useContext"])(ThemeContext);
};

// 
var __PRIVATE__ = {
  StyleSheet: StyleSheet,
  masterSheet: masterSheet
};

// 
/* Define bundle version for export */

var version = "5.1.0";
/* Warning if you've imported this file on React Native */

if ( true && typeof navigator !== 'undefined' && navigator.product === 'ReactNative') {
  // eslint-disable-next-line no-console
  console.warn("It looks like you've imported 'styled-components' on React Native.\n" + "Perhaps you're looking to import 'styled-components/native'?\n" + 'Read more about this at https://www.styled-components.com/docs/basics#react-native');
}
/* Warning if there are several instances of styled-components */


if ( true && typeof window !== 'undefined') {
  window['__styled-components-init__'] = window['__styled-components-init__'] || 0;

  if (window['__styled-components-init__'] === 1) {
    // eslint-disable-next-line no-console
    console.warn("It looks like there are several instances of 'styled-components' initialized in this application. " + 'This may cause dynamic styles not rendering properly, errors happening during rehydration process, ' + 'missing theme prop, and makes your application bigger without a good reason.\n\n' + 'See https://s-c.sh/2BAXzed for more info.');
  }

  window['__styled-components-init__'] += 1;
}

/* harmony default export */ __webpack_exports__["default"] = (styled);

//# sourceMappingURL=styled-components.browser.esm.js.map

/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../process/browser.js */ "./node_modules/process/browser.js")))

/***/ }),

/***/ "./node_modules/styled-jsx/dist/lib/stylesheet.js":
/*!********************************************************!*\
  !*** ./node_modules/styled-jsx/dist/lib/stylesheet.js ***!
  \********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(process) {

exports.__esModule = true;
exports["default"] = void 0;

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

/*
Based on Glamor's sheet
https://github.com/threepointone/glamor/blob/667b480d31b3721a905021b26e1290ce92ca2879/src/sheet.js
*/
var isProd = typeof process !== 'undefined' && process.env && "development" === 'production';

var isString = function isString(o) {
  return Object.prototype.toString.call(o) === '[object String]';
};

var StyleSheet =
/*#__PURE__*/
function () {
  function StyleSheet(_temp) {
    var _ref = _temp === void 0 ? {} : _temp,
        _ref$name = _ref.name,
        name = _ref$name === void 0 ? 'stylesheet' : _ref$name,
        _ref$optimizeForSpeed = _ref.optimizeForSpeed,
        optimizeForSpeed = _ref$optimizeForSpeed === void 0 ? isProd : _ref$optimizeForSpeed,
        _ref$isBrowser = _ref.isBrowser,
        isBrowser = _ref$isBrowser === void 0 ? typeof window !== 'undefined' : _ref$isBrowser;

    invariant(isString(name), '`name` must be a string');
    this._name = name;
    this._deletedRulePlaceholder = "#" + name + "-deleted-rule____{}";
    invariant(typeof optimizeForSpeed === 'boolean', '`optimizeForSpeed` must be a boolean');
    this._optimizeForSpeed = optimizeForSpeed;
    this._isBrowser = isBrowser;
    this._serverSheet = undefined;
    this._tags = [];
    this._injected = false;
    this._rulesCount = 0;
    var node = this._isBrowser && document.querySelector('meta[property="csp-nonce"]');
    this._nonce = node ? node.getAttribute('content') : null;
  }

  var _proto = StyleSheet.prototype;

  _proto.setOptimizeForSpeed = function setOptimizeForSpeed(bool) {
    invariant(typeof bool === 'boolean', '`setOptimizeForSpeed` accepts a boolean');
    invariant(this._rulesCount === 0, 'optimizeForSpeed cannot be when rules have already been inserted');
    this.flush();
    this._optimizeForSpeed = bool;
    this.inject();
  };

  _proto.isOptimizeForSpeed = function isOptimizeForSpeed() {
    return this._optimizeForSpeed;
  };

  _proto.inject = function inject() {
    var _this = this;

    invariant(!this._injected, 'sheet already injected');
    this._injected = true;

    if (this._isBrowser && this._optimizeForSpeed) {
      this._tags[0] = this.makeStyleTag(this._name);
      this._optimizeForSpeed = 'insertRule' in this.getSheet();

      if (!this._optimizeForSpeed) {
        if (!isProd) {
          console.warn('StyleSheet: optimizeForSpeed mode not supported falling back to standard mode.');
        }

        this.flush();
        this._injected = true;
      }

      return;
    }

    this._serverSheet = {
      cssRules: [],
      insertRule: function insertRule(rule, index) {
        if (typeof index === 'number') {
          _this._serverSheet.cssRules[index] = {
            cssText: rule
          };
        } else {
          _this._serverSheet.cssRules.push({
            cssText: rule
          });
        }

        return index;
      },
      deleteRule: function deleteRule(index) {
        _this._serverSheet.cssRules[index] = null;
      }
    };
  };

  _proto.getSheetForTag = function getSheetForTag(tag) {
    if (tag.sheet) {
      return tag.sheet;
    } // this weirdness brought to you by firefox


    for (var i = 0; i < document.styleSheets.length; i++) {
      if (document.styleSheets[i].ownerNode === tag) {
        return document.styleSheets[i];
      }
    }
  };

  _proto.getSheet = function getSheet() {
    return this.getSheetForTag(this._tags[this._tags.length - 1]);
  };

  _proto.insertRule = function insertRule(rule, index) {
    invariant(isString(rule), '`insertRule` accepts only strings');

    if (!this._isBrowser) {
      if (typeof index !== 'number') {
        index = this._serverSheet.cssRules.length;
      }

      this._serverSheet.insertRule(rule, index);

      return this._rulesCount++;
    }

    if (this._optimizeForSpeed) {
      var sheet = this.getSheet();

      if (typeof index !== 'number') {
        index = sheet.cssRules.length;
      } // this weirdness for perf, and chrome's weird bug
      // https://stackoverflow.com/questions/20007992/chrome-suddenly-stopped-accepting-insertrule


      try {
        sheet.insertRule(rule, index);
      } catch (error) {
        if (!isProd) {
          console.warn("StyleSheet: illegal rule: \n\n" + rule + "\n\nSee https://stackoverflow.com/q/20007992 for more info");
        }

        return -1;
      }
    } else {
      var insertionPoint = this._tags[index];

      this._tags.push(this.makeStyleTag(this._name, rule, insertionPoint));
    }

    return this._rulesCount++;
  };

  _proto.replaceRule = function replaceRule(index, rule) {
    if (this._optimizeForSpeed || !this._isBrowser) {
      var sheet = this._isBrowser ? this.getSheet() : this._serverSheet;

      if (!rule.trim()) {
        rule = this._deletedRulePlaceholder;
      }

      if (!sheet.cssRules[index]) {
        // @TBD Should we throw an error?
        return index;
      }

      sheet.deleteRule(index);

      try {
        sheet.insertRule(rule, index);
      } catch (error) {
        if (!isProd) {
          console.warn("StyleSheet: illegal rule: \n\n" + rule + "\n\nSee https://stackoverflow.com/q/20007992 for more info");
        } // In order to preserve the indices we insert a deleteRulePlaceholder


        sheet.insertRule(this._deletedRulePlaceholder, index);
      }
    } else {
      var tag = this._tags[index];
      invariant(tag, "old rule at index `" + index + "` not found");
      tag.textContent = rule;
    }

    return index;
  };

  _proto.deleteRule = function deleteRule(index) {
    if (!this._isBrowser) {
      this._serverSheet.deleteRule(index);

      return;
    }

    if (this._optimizeForSpeed) {
      this.replaceRule(index, '');
    } else {
      var tag = this._tags[index];
      invariant(tag, "rule at index `" + index + "` not found");
      tag.parentNode.removeChild(tag);
      this._tags[index] = null;
    }
  };

  _proto.flush = function flush() {
    this._injected = false;
    this._rulesCount = 0;

    if (this._isBrowser) {
      this._tags.forEach(function (tag) {
        return tag && tag.parentNode.removeChild(tag);
      });

      this._tags = [];
    } else {
      // simpler on server
      this._serverSheet.cssRules = [];
    }
  };

  _proto.cssRules = function cssRules() {
    var _this2 = this;

    if (!this._isBrowser) {
      return this._serverSheet.cssRules;
    }

    return this._tags.reduce(function (rules, tag) {
      if (tag) {
        rules = rules.concat(Array.prototype.map.call(_this2.getSheetForTag(tag).cssRules, function (rule) {
          return rule.cssText === _this2._deletedRulePlaceholder ? null : rule;
        }));
      } else {
        rules.push(null);
      }

      return rules;
    }, []);
  };

  _proto.makeStyleTag = function makeStyleTag(name, cssString, relativeToTag) {
    if (cssString) {
      invariant(isString(cssString), 'makeStyleTag acceps only strings as second parameter');
    }

    var tag = document.createElement('style');
    if (this._nonce) tag.setAttribute('nonce', this._nonce);
    tag.type = 'text/css';
    tag.setAttribute("data-" + name, '');

    if (cssString) {
      tag.appendChild(document.createTextNode(cssString));
    }

    var head = document.head || document.getElementsByTagName('head')[0];

    if (relativeToTag) {
      head.insertBefore(tag, relativeToTag);
    } else {
      head.appendChild(tag);
    }

    return tag;
  };

  _createClass(StyleSheet, [{
    key: "length",
    get: function get() {
      return this._rulesCount;
    }
  }]);

  return StyleSheet;
}();

exports["default"] = StyleSheet;

function invariant(condition, message) {
  if (!condition) {
    throw new Error("StyleSheet: " + message + ".");
  }
}
/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../../process/browser.js */ "./node_modules/process/browser.js")))

/***/ }),

/***/ "./node_modules/styled-jsx/dist/style.js":
/*!***********************************************!*\
  !*** ./node_modules/styled-jsx/dist/style.js ***!
  \***********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;
exports.flush = flush;
exports["default"] = void 0;

var _react = __webpack_require__(/*! react */ "./node_modules/react/index.js");

var _stylesheetRegistry = _interopRequireDefault(__webpack_require__(/*! ./stylesheet-registry */ "./node_modules/styled-jsx/dist/stylesheet-registry.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; subClass.__proto__ = superClass; }

var styleSheetRegistry = new _stylesheetRegistry["default"]();

var JSXStyle =
/*#__PURE__*/
function (_Component) {
  _inheritsLoose(JSXStyle, _Component);

  function JSXStyle(props) {
    var _this;

    _this = _Component.call(this, props) || this;
    _this.prevProps = {};
    return _this;
  }

  JSXStyle.dynamic = function dynamic(info) {
    return info.map(function (tagInfo) {
      var baseId = tagInfo[0];
      var props = tagInfo[1];
      return styleSheetRegistry.computeId(baseId, props);
    }).join(' ');
  } // probably faster than PureComponent (shallowEqual)
  ;

  var _proto = JSXStyle.prototype;

  _proto.shouldComponentUpdate = function shouldComponentUpdate(otherProps) {
    return this.props.id !== otherProps.id || // We do this check because `dynamic` is an array of strings or undefined.
    // These are the computed values for dynamic styles.
    String(this.props.dynamic) !== String(otherProps.dynamic);
  };

  _proto.componentWillUnmount = function componentWillUnmount() {
    styleSheetRegistry.remove(this.props);
  };

  _proto.render = function render() {
    // This is a workaround to make the side effect async safe in the "render" phase.
    // See https://github.com/zeit/styled-jsx/pull/484
    if (this.shouldComponentUpdate(this.prevProps)) {
      // Updates
      if (this.prevProps.id) {
        styleSheetRegistry.remove(this.prevProps);
      }

      styleSheetRegistry.add(this.props);
      this.prevProps = this.props;
    }

    return null;
  };

  return JSXStyle;
}(_react.Component);

exports["default"] = JSXStyle;

function flush() {
  var cssRules = styleSheetRegistry.cssRules();
  styleSheetRegistry.flush();
  return cssRules;
}

/***/ }),

/***/ "./node_modules/styled-jsx/dist/stylesheet-registry.js":
/*!*************************************************************!*\
  !*** ./node_modules/styled-jsx/dist/stylesheet-registry.js ***!
  \*************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;
exports["default"] = void 0;

var _stringHash = _interopRequireDefault(__webpack_require__(/*! string-hash */ "./node_modules/string-hash/index.js"));

var _stylesheet = _interopRequireDefault(__webpack_require__(/*! ./lib/stylesheet */ "./node_modules/styled-jsx/dist/lib/stylesheet.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

var sanitize = function sanitize(rule) {
  return rule.replace(/\/style/gi, '\\/style');
};

var StyleSheetRegistry =
/*#__PURE__*/
function () {
  function StyleSheetRegistry(_temp) {
    var _ref = _temp === void 0 ? {} : _temp,
        _ref$styleSheet = _ref.styleSheet,
        styleSheet = _ref$styleSheet === void 0 ? null : _ref$styleSheet,
        _ref$optimizeForSpeed = _ref.optimizeForSpeed,
        optimizeForSpeed = _ref$optimizeForSpeed === void 0 ? false : _ref$optimizeForSpeed,
        _ref$isBrowser = _ref.isBrowser,
        isBrowser = _ref$isBrowser === void 0 ? typeof window !== 'undefined' : _ref$isBrowser;

    this._sheet = styleSheet || new _stylesheet["default"]({
      name: 'styled-jsx',
      optimizeForSpeed: optimizeForSpeed
    });

    this._sheet.inject();

    if (styleSheet && typeof optimizeForSpeed === 'boolean') {
      this._sheet.setOptimizeForSpeed(optimizeForSpeed);

      this._optimizeForSpeed = this._sheet.isOptimizeForSpeed();
    }

    this._isBrowser = isBrowser;
    this._fromServer = undefined;
    this._indices = {};
    this._instancesCounts = {};
    this.computeId = this.createComputeId();
    this.computeSelector = this.createComputeSelector();
  }

  var _proto = StyleSheetRegistry.prototype;

  _proto.add = function add(props) {
    var _this = this;

    if (undefined === this._optimizeForSpeed) {
      this._optimizeForSpeed = Array.isArray(props.children);

      this._sheet.setOptimizeForSpeed(this._optimizeForSpeed);

      this._optimizeForSpeed = this._sheet.isOptimizeForSpeed();
    }

    if (this._isBrowser && !this._fromServer) {
      this._fromServer = this.selectFromServer();
      this._instancesCounts = Object.keys(this._fromServer).reduce(function (acc, tagName) {
        acc[tagName] = 0;
        return acc;
      }, {});
    }

    var _this$getIdAndRules = this.getIdAndRules(props),
        styleId = _this$getIdAndRules.styleId,
        rules = _this$getIdAndRules.rules; // Deduping: just increase the instances count.


    if (styleId in this._instancesCounts) {
      this._instancesCounts[styleId] += 1;
      return;
    }

    var indices = rules.map(function (rule) {
      return _this._sheet.insertRule(rule);
    }) // Filter out invalid rules
    .filter(function (index) {
      return index !== -1;
    });
    this._indices[styleId] = indices;
    this._instancesCounts[styleId] = 1;
  };

  _proto.remove = function remove(props) {
    var _this2 = this;

    var _this$getIdAndRules2 = this.getIdAndRules(props),
        styleId = _this$getIdAndRules2.styleId;

    invariant(styleId in this._instancesCounts, "styleId: `" + styleId + "` not found");
    this._instancesCounts[styleId] -= 1;

    if (this._instancesCounts[styleId] < 1) {
      var tagFromServer = this._fromServer && this._fromServer[styleId];

      if (tagFromServer) {
        tagFromServer.parentNode.removeChild(tagFromServer);
        delete this._fromServer[styleId];
      } else {
        this._indices[styleId].forEach(function (index) {
          return _this2._sheet.deleteRule(index);
        });

        delete this._indices[styleId];
      }

      delete this._instancesCounts[styleId];
    }
  };

  _proto.update = function update(props, nextProps) {
    this.add(nextProps);
    this.remove(props);
  };

  _proto.flush = function flush() {
    this._sheet.flush();

    this._sheet.inject();

    this._fromServer = undefined;
    this._indices = {};
    this._instancesCounts = {};
    this.computeId = this.createComputeId();
    this.computeSelector = this.createComputeSelector();
  };

  _proto.cssRules = function cssRules() {
    var _this3 = this;

    var fromServer = this._fromServer ? Object.keys(this._fromServer).map(function (styleId) {
      return [styleId, _this3._fromServer[styleId]];
    }) : [];

    var cssRules = this._sheet.cssRules();

    return fromServer.concat(Object.keys(this._indices).map(function (styleId) {
      return [styleId, _this3._indices[styleId].map(function (index) {
        return cssRules[index].cssText;
      }).join(_this3._optimizeForSpeed ? '' : '\n')];
    }) // filter out empty rules
    .filter(function (rule) {
      return Boolean(rule[1]);
    }));
  }
  /**
   * createComputeId
   *
   * Creates a function to compute and memoize a jsx id from a basedId and optionally props.
   */
  ;

  _proto.createComputeId = function createComputeId() {
    var cache = {};
    return function (baseId, props) {
      if (!props) {
        return "jsx-" + baseId;
      }

      var propsToString = String(props);
      var key = baseId + propsToString; // return `jsx-${hashString(`${baseId}-${propsToString}`)}`

      if (!cache[key]) {
        cache[key] = "jsx-" + (0, _stringHash["default"])(baseId + "-" + propsToString);
      }

      return cache[key];
    };
  }
  /**
   * createComputeSelector
   *
   * Creates a function to compute and memoize dynamic selectors.
   */
  ;

  _proto.createComputeSelector = function createComputeSelector(selectoPlaceholderRegexp) {
    if (selectoPlaceholderRegexp === void 0) {
      selectoPlaceholderRegexp = /__jsx-style-dynamic-selector/g;
    }

    var cache = {};
    return function (id, css) {
      // Sanitize SSR-ed CSS.
      // Client side code doesn't need to be sanitized since we use
      // document.createTextNode (dev) and the CSSOM api sheet.insertRule (prod).
      if (!this._isBrowser) {
        css = sanitize(css);
      }

      var idcss = id + css;

      if (!cache[idcss]) {
        cache[idcss] = css.replace(selectoPlaceholderRegexp, id);
      }

      return cache[idcss];
    };
  };

  _proto.getIdAndRules = function getIdAndRules(props) {
    var _this4 = this;

    var css = props.children,
        dynamic = props.dynamic,
        id = props.id;

    if (dynamic) {
      var styleId = this.computeId(id, dynamic);
      return {
        styleId: styleId,
        rules: Array.isArray(css) ? css.map(function (rule) {
          return _this4.computeSelector(styleId, rule);
        }) : [this.computeSelector(styleId, css)]
      };
    }

    return {
      styleId: this.computeId(id),
      rules: Array.isArray(css) ? css : [css]
    };
  }
  /**
   * selectFromServer
   *
   * Collects style tags from the document with id __jsx-XXX
   */
  ;

  _proto.selectFromServer = function selectFromServer() {
    var elements = Array.prototype.slice.call(document.querySelectorAll('[id^="__jsx-"]'));
    return elements.reduce(function (acc, element) {
      var id = element.id.slice(2);
      acc[id] = element;
      return acc;
    }, {});
  };

  return StyleSheetRegistry;
}();

exports["default"] = StyleSheetRegistry;

function invariant(condition, message) {
  if (!condition) {
    throw new Error("StyleSheetRegistry: " + message + ".");
  }
}

/***/ }),

/***/ "./node_modules/styled-jsx/style.js":
/*!******************************************!*\
  !*** ./node_modules/styled-jsx/style.js ***!
  \******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__(/*! ./dist/style */ "./node_modules/styled-jsx/dist/style.js")


/***/ }),

/***/ "./node_modules/symbol-observable/es/index.js":
/*!****************************************************!*\
  !*** ./node_modules/symbol-observable/es/index.js ***!
  \****************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* WEBPACK VAR INJECTION */(function(global, module) {/* harmony import */ var _ponyfill_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./ponyfill.js */ "./node_modules/symbol-observable/es/ponyfill.js");
/* global window */


var root;

if (typeof self !== 'undefined') {
  root = self;
} else if (typeof window !== 'undefined') {
  root = window;
} else if (typeof global !== 'undefined') {
  root = global;
} else if (true) {
  root = module;
} else {}

var result = Object(_ponyfill_js__WEBPACK_IMPORTED_MODULE_0__["default"])(root);
/* harmony default export */ __webpack_exports__["default"] = (result);

/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../webpack/buildin/global.js */ "./node_modules/webpack/buildin/global.js"), __webpack_require__(/*! ./../../webpack/buildin/harmony-module.js */ "./node_modules/webpack/buildin/harmony-module.js")(module)))

/***/ }),

/***/ "./node_modules/symbol-observable/es/ponyfill.js":
/*!*******************************************************!*\
  !*** ./node_modules/symbol-observable/es/ponyfill.js ***!
  \*******************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return symbolObservablePonyfill; });
function symbolObservablePonyfill(root) {
	var result;
	var Symbol = root.Symbol;

	if (typeof Symbol === 'function') {
		if (Symbol.observable) {
			result = Symbol.observable;
		} else {
			result = Symbol('observable');
			Symbol.observable = result;
		}
	} else {
		result = '@@observable';
	}

	return result;
};


/***/ }),

/***/ "./node_modules/webpack/buildin/global.js":
/*!***********************************!*\
  !*** (webpack)/buildin/global.js ***!
  \***********************************/
/*! no static exports found */
/***/ (function(module, exports) {

var g;

// This works in non-strict mode
g = (function() {
	return this;
})();

try {
	// This works if eval is allowed (see CSP)
	g = g || new Function("return this")();
} catch (e) {
	// This works if the window reference is available
	if (typeof window === "object") g = window;
}

// g can still be undefined, but nothing to do about it...
// We return undefined, instead of nothing here, so it's
// easier to handle this case. if(!global) { ...}

module.exports = g;


/***/ }),

/***/ "./node_modules/webpack/buildin/harmony-module.js":
/*!*******************************************!*\
  !*** (webpack)/buildin/harmony-module.js ***!
  \*******************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = function(originalModule) {
	if (!originalModule.webpackPolyfill) {
		var module = Object.create(originalModule);
		// module.parent = undefined by default
		if (!module.children) module.children = [];
		Object.defineProperty(module, "loaded", {
			enumerable: true,
			get: function() {
				return module.l;
			}
		});
		Object.defineProperty(module, "id", {
			enumerable: true,
			get: function() {
				return module.i;
			}
		});
		Object.defineProperty(module, "exports", {
			enumerable: true
		});
		module.webpackPolyfill = 1;
	}
	return module;
};


/***/ }),

/***/ "./pages/blog.js":
/*!***********************!*\
  !*** ./pages/blog.js ***!
  \***********************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return Blog; });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var styled_components__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! styled-components */ "./node_modules/styled-components/dist/styled-components.browser.esm.js");
/* harmony import */ var next_head__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/head */ "./node_modules/next/dist/next-server/lib/head.js");
/* harmony import */ var next_head__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(next_head__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var _utils_center__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../utils/center */ "./utils/center.js");
/* harmony import */ var _components_layout__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./components/layout */ "./pages/components/layout.js");
/* harmony import */ var react_lottie__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! react-lottie */ "./node_modules/react-lottie/dist/index.js");
/* harmony import */ var react_lottie__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(react_lottie__WEBPACK_IMPORTED_MODULE_5__);
/* harmony import */ var _assets_animations_bear_gif__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../assets/animations/bear.gif */ "./assets/animations/bear.gif");
var _jsxFileName = "D:\\Desktop\\X\\Websites\\hominian-web\\pages\\blog.js";
var __jsx = react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement;







function Blog() {
  return __jsx(_components_layout__WEBPACK_IMPORTED_MODULE_4__["default"], {
    __self: this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 15,
      columnNumber: 9
    }
  }, __jsx(next_head__WEBPACK_IMPORTED_MODULE_2___default.a, {
    __self: this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 17,
      columnNumber: 13
    }
  }, __jsx("title", {
    __self: this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 18,
      columnNumber: 17
    }
  }, "Blog"), __jsx("link", {
    rel: "icon",
    href: "/h.png",
    __self: this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 19,
      columnNumber: 17
    }
  })), __jsx(_utils_center__WEBPACK_IMPORTED_MODULE_3__["default"], {
    __self: this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 22,
      columnNumber: 13
    }
  }, __jsx(Anim, {
    src: _assets_animations_bear_gif__WEBPACK_IMPORTED_MODULE_6__["default"],
    __self: this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 23,
      columnNumber: 17
    }
  })));
}
var Anim = styled_components__WEBPACK_IMPORTED_MODULE_1__["default"].img.withConfig({
  displayName: "blog__Anim",
  componentId: "ayqoiy-0"
})(["width:320px;height:320px;"]);

/***/ }),

/***/ "./pages/components/layout.js":
/*!************************************!*\
  !*** ./pages/components/layout.js ***!
  \************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var styled_jsx_style__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! styled-jsx/style */ "./node_modules/styled-jsx/style.js");
/* harmony import */ var styled_jsx_style__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(styled_jsx_style__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var react_lottie__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! react-lottie */ "./node_modules/react-lottie/dist/index.js");
/* harmony import */ var react_lottie__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(react_lottie__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var _assets_animations_globe_json__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../assets/animations/globe.json */ "./assets/animations/globe.json");
var _assets_animations_globe_json__WEBPACK_IMPORTED_MODULE_3___namespace = /*#__PURE__*/__webpack_require__.t(/*! ../../assets/animations/globe.json */ "./assets/animations/globe.json", 1);
/* harmony import */ var next_link__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! next/link */ "./node_modules/next/link.js");
/* harmony import */ var next_link__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(next_link__WEBPACK_IMPORTED_MODULE_4__);
/* harmony import */ var next_router__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! next/router */ "./node_modules/next/dist/client/router.js");
/* harmony import */ var next_router__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(next_router__WEBPACK_IMPORTED_MODULE_5__);
/* harmony import */ var _constants_colors__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../constants/colors */ "./constants/colors.js");
/* harmony import */ var styled_components__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! styled-components */ "./node_modules/styled-components/dist/styled-components.browser.esm.js");
/* harmony import */ var _store_actions__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../store/actions */ "./store/actions.js");
/* harmony import */ var react_redux__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! react-redux */ "./node_modules/react-redux/es/index.js");
/* harmony import */ var _constants_pages__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../../constants/pages */ "./constants/pages.js");
var _this = undefined,
    _jsxFileName = "D:\\Desktop\\X\\Websites\\hominian-web\\pages\\components\\layout.js";



var __jsx = react__WEBPACK_IMPORTED_MODULE_1___default.a.createElement;










var Layout = function Layout(props) {
  var router = Object(next_router__WEBPACK_IMPORTED_MODULE_5__["useRouter"])();
  return __jsx("div", {
    className: "jsx-2403137805" + " " + "mainContainer",
    __self: _this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 18,
      columnNumber: 9
    }
  }, __jsx(NavBar, {
    __self: _this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 20,
      columnNumber: 13
    }
  }, __jsx(next_link__WEBPACK_IMPORTED_MODULE_4___default.a, {
    href: "/",
    __self: _this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 21,
      columnNumber: 17
    }
  }, __jsx(Logo, {
    __self: _this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 22,
      columnNumber: 21
    }
  }, "HOMINIAN")), __jsx(PageLinks, {
    __self: _this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 24,
      columnNumber: 17
    }
  }, __jsx(next_link__WEBPACK_IMPORTED_MODULE_4___default.a, {
    href: "/products",
    __self: _this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 25,
      columnNumber: 21
    }
  }, __jsx(Link1, {
    active: router.pathname === '/products',
    __self: _this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 26,
      columnNumber: 25
    }
  }, "Products")), __jsx(next_link__WEBPACK_IMPORTED_MODULE_4___default.a, {
    href: "/blog",
    __self: _this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 28,
      columnNumber: 21
    }
  }, __jsx(Link2, {
    active: router.pathname === '/blog',
    __self: _this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 29,
      columnNumber: 25
    }
  }, "Blog")))), __jsx(Childrens, {
    __self: _this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 33,
      columnNumber: 13
    }
  }, props.children), __jsx(Footer, {
    __self: _this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 36,
      columnNumber: 13
    }
  }, __jsx(LogoFooter, {
    __self: _this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 37,
      columnNumber: 17
    }
  }, "HOMINIAN")), __jsx(styled_jsx_style__WEBPACK_IMPORTED_MODULE_0___default.a, {
    id: "2401583747",
    __self: _this
  }, ".mainContainer.jsx-2403137805{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;width:100%;min-height:100vh;font-family:'Circular-Book',Arial,sans-serif;}\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\n/*@ sourceURL=D:\\\\Desktop\\\\X\\\\Websites\\\\hominian-web\\\\pages\\\\components\\\\layout.js */"), __jsx(styled_jsx_style__WEBPACK_IMPORTED_MODULE_0___default.a, {
    id: "285224775",
    __self: _this
  }, "body{margin:0;padding:0;border:0;}\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\n/*@ sourceURL=D:\\\\Desktop\\\\X\\\\Websites\\\\hominian-web\\\\pages\\\\components\\\\layout.js */"));
}; // const mapStateToProps = state => {
//     return {
//         activeLink: state.activePage
//     };
// }
// const mapDispatchToProps = dispatch => {
//     return {
//         currentPage: (page) => dispatch({ type: actions.ACTIVE_PAGE, activePg: page })
//     }
// }


/* harmony default export */ __webpack_exports__["default"] = (Layout);
var Childrens = styled_components__WEBPACK_IMPORTED_MODULE_7__["default"].div.withConfig({
  displayName: "layout__Childrens",
  componentId: "msdbdq-0"
})(["min-height:84vh;"]);
var NavBar = styled_components__WEBPACK_IMPORTED_MODULE_7__["default"].div.withConfig({
  displayName: "layout__NavBar",
  componentId: "msdbdq-1"
})(["display:flex;align-items:flex-end;justify-content:space-between;width:100%;height:8vh;background-color:white;box-shadow:0px 0px 0px 0px black;"]);
var Logo = styled_components__WEBPACK_IMPORTED_MODULE_7__["default"].div.withConfig({
  displayName: "layout__Logo",
  componentId: "msdbdq-2"
})(["font-size:32px;padding-left:42px;color:grey;font-family:sans-serif;text-transform:uppercase;transition:color 1s;&:hover{cursor:pointer;color:darkgray;}-webkit-touch-callout:none;-webkit-user-select:none;-khtml-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;"]);
var PageLinks = styled_components__WEBPACK_IMPORTED_MODULE_7__["default"].div.withConfig({
  displayName: "layout__PageLinks",
  componentId: "msdbdq-3"
})(["display:flex;flex-direction:row;margin-right:32px;-webkit-touch-callout:none;-webkit-user-select:none;-khtml-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;"]);
var Link1 = styled_components__WEBPACK_IMPORTED_MODULE_7__["default"].a.withConfig({
  displayName: "layout__Link1",
  componentId: "msdbdq-4"
})(["font-size:24px;color:", ";padding-top:5px;padding-bottom:5px;padding-right:16px;padding-left:16px;border-width:1px;border-style:solid;border-color:", ";border-radius:10px;transition-property:color,border-color;transition-duration:0.65s,0.65s;&:hover{cursor:pointer;border-color:darkgrey;color:", ";}"], function (_ref) {
  var active = _ref.active;
  return active ? _constants_colors__WEBPACK_IMPORTED_MODULE_6__["default"].transparentBlack : 'grey';
}, function (_ref2) {
  var active = _ref2.active;
  return active ? 'grey' : 'transparent';
}, _constants_colors__WEBPACK_IMPORTED_MODULE_6__["default"].transparentBlack);
var Link2 = styled_components__WEBPACK_IMPORTED_MODULE_7__["default"].a.withConfig({
  displayName: "layout__Link2",
  componentId: "msdbdq-5"
})(["font-size:24px;color:", ";padding-top:5px;padding-bottom:5px;padding-right:16px;padding-left:16px;border:1px solid ", ";border-radius:10px;transition-property:color,border;transition-duration:0.65s,0.65s;&:hover{cursor:pointer;border:1px solid darkgrey;color:", ";}"], function (_ref3) {
  var active = _ref3.active;
  return active ? _constants_colors__WEBPACK_IMPORTED_MODULE_6__["default"].transparentBlack : 'grey';
}, function (_ref4) {
  var active = _ref4.active;
  return active ? 'grey' : 'transparent';
}, _constants_colors__WEBPACK_IMPORTED_MODULE_6__["default"].transparentBlack);
var Footer = styled_components__WEBPACK_IMPORTED_MODULE_7__["default"].div.withConfig({
  displayName: "layout__Footer",
  componentId: "msdbdq-6"
})(["display:flex;width:100%;height:8vh;background-color:", ";align-items:center;justify-content:flex-end;"], _constants_colors__WEBPACK_IMPORTED_MODULE_6__["default"].footerGrey);
var LogoFooter = styled_components__WEBPACK_IMPORTED_MODULE_7__["default"].div.withConfig({
  displayName: "layout__LogoFooter",
  componentId: "msdbdq-7"
})(["font-size:24px;padding-right:42px;color:grey;font-family:sans-serif;-webkit-touch-callout:none;-webkit-user-select:none;-khtml-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;"]);

/***/ }),

/***/ "./store/actions.js":
/*!**************************!*\
  !*** ./store/actions.js ***!
  \**************************/
/*! exports provided: ACTIVE_PAGE */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ACTIVE_PAGE", function() { return ACTIVE_PAGE; });
var ACTIVE_PAGE = 'ACTIVE_PAGE';

/***/ }),

/***/ "./utils/center.js":
/*!*************************!*\
  !*** ./utils/center.js ***!
  \*************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return Center; });
/* harmony import */ var _babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/esm/classCallCheck */ "./node_modules/@babel/runtime/helpers/esm/classCallCheck.js");
/* harmony import */ var _babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babel/runtime/helpers/esm/createClass */ "./node_modules/@babel/runtime/helpers/esm/createClass.js");
/* harmony import */ var _babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @babel/runtime/helpers/esm/inherits */ "./node_modules/@babel/runtime/helpers/esm/inherits.js");
/* harmony import */ var _babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @babel/runtime/helpers/esm/possibleConstructorReturn */ "./node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn.js");
/* harmony import */ var _babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @babel/runtime/helpers/esm/getPrototypeOf */ "./node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_5__);
/* harmony import */ var styled_components__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! styled-components */ "./node_modules/styled-components/dist/styled-components.browser.esm.js");





var _jsxFileName = "D:\\Desktop\\X\\Websites\\hominian-web\\utils\\center.js";
var __jsx = react__WEBPACK_IMPORTED_MODULE_5___default.a.createElement;

function _createSuper(Derived) { return function () { var Super = Object(_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_4__["default"])(Derived), result; if (_isNativeReflectConstruct()) { var NewTarget = Object(_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_4__["default"])(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return Object(_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_3__["default"])(this, result); }; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }




var Center = /*#__PURE__*/function (_Component) {
  Object(_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_2__["default"])(Center, _Component);

  var _super = _createSuper(Center);

  function Center() {
    Object(_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__["default"])(this, Center);

    return _super.apply(this, arguments);
  }

  Object(_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_1__["default"])(Center, [{
    key: "render",
    value: function render() {
      return __jsx(CenterContent, {
        __self: this,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 7,
          columnNumber: 13
        }
      }, this.props.children);
    }
  }]);

  return Center;
}(react__WEBPACK_IMPORTED_MODULE_5__["Component"]);


var CenterContent = styled_components__WEBPACK_IMPORTED_MODULE_6__["default"].div.withConfig({
  displayName: "center__CenterContent",
  componentId: "sc-1q6m1vt-0"
})(["display:flex;align-items:center;justify-content:center;width:100%;min-height:85vh;flex-direction:column;"]);

/***/ }),

/***/ 3:
/*!***********************************************************************************************************************************!*\
  !*** multi next-client-pages-loader?page=%2Fblog&absolutePagePath=D%3A%5CDesktop%5CX%5CWebsites%5Chominian-web%5Cpages%5Cblog.js ***!
  \***********************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__(/*! next-client-pages-loader?page=%2Fblog&absolutePagePath=D%3A%5CDesktop%5CX%5CWebsites%5Chominian-web%5Cpages%5Cblog.js! */"./node_modules/next/dist/build/webpack/loaders/next-client-pages-loader.js?page=%2Fblog&absolutePagePath=D%3A%5CDesktop%5CX%5CWebsites%5Chominian-web%5Cpages%5Cblog.js!./");


/***/ }),

/***/ "dll-reference dll_2adc2403d89adc16ead0":
/*!*******************************************!*\
  !*** external "dll_2adc2403d89adc16ead0" ***!
  \*******************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = dll_2adc2403d89adc16ead0;

/***/ })

},[[3,"static/runtime/webpack.js"]]]);
//# sourceMappingURL=blog.js.map